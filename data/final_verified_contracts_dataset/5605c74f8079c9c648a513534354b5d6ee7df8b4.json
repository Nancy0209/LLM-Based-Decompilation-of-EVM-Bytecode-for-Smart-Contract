{
    "address": "0x5605C74F8079c9c648a513534354B5D6ee7dF8B4",
    "tx_hash": "4c54ab024f58d6d71671d2d719f31223337dfc4518217e71b3b0c89a55ed371a",
    "block_number": 18006516,
    "timestamp": 1693145519,
    "gas_used_in_creation": 6528356,
    "creation_bytecode": "6080604052670de0b6b3a76400006000196200001c91906200070e565b6000196200002b919062000775565b600655600060085560146009556000600a556028600b55600a54600c55600b54600d55600c54600e55600d54600f5573af90a34416d1a4236f6d13a6b52bcb1623024048601260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555073af90a34416d1a4236f6d13a6b52bcb1623024048601360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060006015806101000a81548160ff0219169083151502179055506001601560166101000a81548160ff0219169083151502179055506611c37937e08000601655662386f26fc100006017556509184e72a0006018553480156200016657600080fd5b50600062000179620006a460201b60201c565b9050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a350600654600260006200022e620006a460201b60201c565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506000737a250d5630b4cf539739df2c5dacb4c659f2488d905080601460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff1663c45a01556040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000312573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200033891906200081a565b73ffffffffffffffffffffffffffffffffffffffff1663c9c65396308373ffffffffffffffffffffffffffffffffffffffff1663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa158015620003a0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620003c691906200081a565b6040518363ffffffff1660e01b8152600401620003e59291906200085d565b6020604051808303816000875af115801562000405573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200042b91906200081a565b601560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060016005600062000481620006ac60201b60201c565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506001600560003073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550600160056000601260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550600160056000601360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506200062e620006a460201b60201c565b73ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef670de0b6b3a76400006040516200069591906200089b565b60405180910390a350620008b8565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006200071b82620006d5565b91506200072883620006d5565b9250826200073b576200073a620006df565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006200078282620006d5565b91506200078f83620006d5565b9250828203905081811115620007aa57620007a962000746565b5b92915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620007e282620007b5565b9050919050565b620007f481620007d5565b81146200080057600080fd5b50565b6000815190506200081481620007e9565b92915050565b600060208284031215620008335762000832620007b0565b5b6000620008438482850162000803565b91505092915050565b6200085781620007d5565b82525050565b60006040820190506200087460008301856200084c565b6200088360208301846200084c565b9392505050565b6200089581620006d5565b82525050565b6000602082019050620008b260008301846200088a565b92915050565b61410d80620008c86000396000f3fe6080604052600436106101d05760003560e01c80637d1db4a5116100f7578063a2a957bb11610095578063c492f04611610064578063c492f0461461065c578063dd62ed3e14610685578063ea1644d5146106c2578063f2fde38b146106eb576101d7565b8063a2a957bb146105a2578063a9059cbb146105cb578063bfd7928414610608578063c3c8cd8014610645576101d7565b80638f70ccf7116100d15780638f70ccf7146104fa5780638f9a55c01461052357806395d89b411461054e57806398a5c31514610579576101d7565b80637d1db4a5146104675780637f2feddc146104925780638da5cb5b146104cf576101d7565b8063313ce5671161016f5780636fc3eaec1161013e5780636fc3eaec146103d357806370a08231146103ea578063715018a61461042757806374010ece1461043e576101d7565b8063313ce5671461032b57806349bd5a5e146103565780636b999053146103815780636d8aa8f8146103aa576101d7565b80631694505e116101ab5780631694505e1461026d57806318160ddd1461029857806323b872dd146102c35780632fd689e314610300576101d7565b8062b8cf2a146101dc57806306fdde0314610205578063095ea7b314610230576101d7565b366101d757005b600080fd5b3480156101e857600080fd5b5061020360048036038101906101fe9190612e95565b610714565b005b34801561021157600080fd5b5061021a61083e565b6040516102279190612f5d565b60405180910390f35b34801561023c57600080fd5b5061025760048036038101906102529190612fb5565b61087b565b6040516102649190613010565b60405180910390f35b34801561027957600080fd5b50610282610899565b60405161028f919061308a565b60405180910390f35b3480156102a457600080fd5b506102ad6108bf565b6040516102ba91906130b4565b60405180910390f35b3480156102cf57600080fd5b506102ea60048036038101906102e591906130cf565b6108cf565b6040516102f79190613010565b60405180910390f35b34801561030c57600080fd5b506103156109a8565b60405161032291906130b4565b60405180910390f35b34801561033757600080fd5b506103406109ae565b60405161034d919061313e565b60405180910390f35b34801561036257600080fd5b5061036b6109b7565b6040516103789190613168565b60405180910390f35b34801561038d57600080fd5b506103a860048036038101906103a39190613183565b6109dd565b005b3480156103b657600080fd5b506103d160048036038101906103cc91906131dc565b610acd565b005b3480156103df57600080fd5b506103e8610b7f565b005b3480156103f657600080fd5b50610411600480360381019061040c9190613183565b610c50565b60405161041e91906130b4565b60405180910390f35b34801561043357600080fd5b5061043c610ca1565b005b34801561044a57600080fd5b5061046560048036038101906104609190613209565b610df4565b005b34801561047357600080fd5b5061047c610e93565b60405161048991906130b4565b60405180910390f35b34801561049e57600080fd5b506104b960048036038101906104b49190613183565b610e99565b6040516104c691906130b4565b60405180910390f35b3480156104db57600080fd5b506104e4610eb1565b6040516104f19190613168565b60405180910390f35b34801561050657600080fd5b50610521600480360381019061051c91906131dc565b610eda565b005b34801561052f57600080fd5b50610538610f8c565b60405161054591906130b4565b60405180910390f35b34801561055a57600080fd5b50610563610f92565b6040516105709190612f5d565b60405180910390f35b34801561058557600080fd5b506105a0600480360381019061059b9190613209565b610fcf565b005b3480156105ae57600080fd5b506105c960048036038101906105c49190613236565b61106e565b005b3480156105d757600080fd5b506105f260048036038101906105ed9190612fb5565b611269565b6040516105ff9190613010565b60405180910390f35b34801561061457600080fd5b5061062f600480360381019061062a9190613183565b611287565b60405161063c9190613010565b60405180910390f35b34801561065157600080fd5b5061065a6112a7565b005b34801561066857600080fd5b50610683600480360381019061067e91906132f8565b611380565b005b34801561069157600080fd5b506106ac60048036038101906106a79190613358565b6114ba565b6040516106b991906130b4565b60405180910390f35b3480156106ce57600080fd5b506106e960048036038101906106e49190613209565b611541565b005b3480156106f757600080fd5b50610712600480360381019061070d9190613183565b6115e0565b005b61071c6117a1565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146107a9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107a0906133e4565b60405180910390fd5b60005b815181101561083a576001601060008484815181106107ce576107cd613404565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550808061083290613462565b9150506107ac565b5050565b60606040518060400160405280600b81526020017f424947204348554e475553000000000000000000000000000000000000000000815250905090565b600061088f6108886117a1565b84846117a9565b6001905092915050565b601460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000670de0b6b3a7640000905090565b60006108dc848484611972565b61099d846108e86117a1565b610998856040518060600160405280602881526020016140b060289139600460008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600061094e6117a1565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546121f59092919063ffffffff16565b6117a9565b600190509392505050565b60185481565b60006009905090565b601560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6109e56117a1565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610a72576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a69906133e4565b60405180910390fd5b6000601060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b610ad56117a1565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610b62576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b59906133e4565b60405180910390fd5b80601560166101000a81548160ff02191690831515021790555050565b601260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610bc06117a1565b73ffffffffffffffffffffffffffffffffffffffff161480610c365750601360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610c1e6117a1565b73ffffffffffffffffffffffffffffffffffffffff16145b610c3f57600080fd5b6000479050610c4d81612259565b50565b6000610c9a600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546122c5565b9050919050565b610ca96117a1565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610d36576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d2d906133e4565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b610dfc6117a1565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610e89576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e80906133e4565b60405180910390fd5b8060168190555050565b60165481565b60116020528060005260406000206000915090505481565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610ee26117a1565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610f6f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f66906133e4565b60405180910390fd5b80601560146101000a81548160ff02191690831515021790555050565b60175481565b60606040518060400160405280600781526020017f4348554e47555300000000000000000000000000000000000000000000000000815250905090565b610fd76117a1565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611064576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161105b906133e4565b60405180910390fd5b8060188190555050565b6110766117a1565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611103576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110fa906133e4565b60405180910390fd5b60008410158015611115575060048411155b611154576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161114b9061351c565b60405180910390fd5b600082101580156111665750605f8211155b6111a5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161119c906135ae565b60405180910390fd5b600083101580156111b7575060048311155b6111f6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111ed90613640565b60405180910390fd5b600081101580156112085750605f8111155b611247576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161123e906136d2565b60405180910390fd5b8360088190555082600a819055508160098190555080600b8190555050505050565b600061127d6112766117a1565b8484611972565b6001905092915050565b60106020528060005260406000206000915054906101000a900460ff1681565b601260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166112e86117a1565b73ffffffffffffffffffffffffffffffffffffffff16148061135e5750601360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166113466117a1565b73ffffffffffffffffffffffffffffffffffffffff16145b61136757600080fd5b600061137230610c50565b905061137d81612333565b50565b6113886117a1565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611415576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161140c906133e4565b60405180910390fd5b60005b838390508110156114b457816005600086868581811061143b5761143a613404565b5b90506020020160208101906114509190613183565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555080806114ac90613462565b915050611418565b50505050565b6000600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b6115496117a1565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146115d6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115cd906133e4565b60405180910390fd5b8060178190555050565b6115e86117a1565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611675576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161166c906133e4565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036116e4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116db90613764565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611818576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161180f906137f6565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611887576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161187e90613888565b60405180910390fd5b80600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258360405161196591906130b4565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036119e1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016119d89061391a565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611a50576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a47906139ac565b60405180910390fd5b60008111611a93576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a8a90613a3e565b60405180910390fd5b611a9b610eb1565b73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614158015611b095750611ad9610eb1565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b15611ef457601560149054906101000a900460ff16611b9857611b2a610eb1565b73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614611b97576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b8e90613ad0565b60405180910390fd5b5b601654811115611bdd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611bd490613b3c565b60405180910390fd5b601060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16158015611c815750601060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16155b611cc0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611cb790613bce565b60405180910390fd5b601560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614611d6d5760175481611d2284610c50565b611d2c9190613bee565b10611d6c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611d6390613c94565b60405180910390fd5b5b6000611d7830610c50565b9050600060185482101590506016548210611d935760165491505b808015611dab575060158054906101000a900460ff16155b8015611e055750601560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614155b8015611e1d5750601560169054906101000a900460ff165b8015611e735750600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16155b8015611ec95750600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16155b15611ef157611ed782612333565b60004790506000811115611eef57611eee47612259565b5b505b50505b600060019050600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1680611f9b5750600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff165b8061204e5750601560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161415801561204d5750601560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614155b5b1561205c57600090506121e3565b601560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480156121075750601460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614155b1561211f57600854600c81905550600954600d819055505b601560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161480156121ca5750601460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614155b156121e257600a54600c81905550600b54600d819055505b5b6121ef848484846125aa565b50505050565b600083831115829061223d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016122349190612f5d565b60405180910390fd5b506000838561224c9190613cb4565b9050809150509392505050565b601360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f193505050501580156122c1573d6000803e3d6000fd5b5050565b600060065482111561230c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161230390613d5a565b60405180910390fd5b60006123166125d7565b905061232b818461260290919063ffffffff16565b915050919050565b60016015806101000a81548160ff0219169083151502179055506000600267ffffffffffffffff81111561236a57612369612cf4565b5b6040519080825280602002602001820160405280156123985781602001602082028036833780820191505090505b50905030816000815181106123b0576123af613404565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050601460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa158015612457573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061247b9190613d8f565b8160018151811061248f5761248e613404565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250506124f630601460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16846117a9565b601460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663791ac9478360008430426040518663ffffffff1660e01b815260040161255a959493929190613eb5565b600060405180830381600087803b15801561257457600080fd5b505af1158015612588573d6000803e3d6000fd5b505050505060006015806101000a81548160ff02191690831515021790555050565b806125b8576125b761264c565b5b6125c3848484612689565b806125d1576125d0612854565b5b50505050565b60008060006125e4612868565b915091506125fb818361260290919063ffffffff16565b9250505090565b600061264483836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f0000000000008152506128c7565b905092915050565b6000600c5414801561266057506000600d54145b61268757600c54600e81905550600d54600f819055506000600c819055506000600d819055505b565b60008060008060008061269b8761292a565b9550955095509550955095506126f986600260008c73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461299290919063ffffffff16565b600260008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061278e85600260008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546129dc90919063ffffffff16565b600260008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506127da81612a3a565b6127e48483612af7565b8773ffffffffffffffffffffffffffffffffffffffff168973ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8560405161284191906130b4565b60405180910390a3505050505050505050565b600e54600c81905550600f54600d81905550565b600080600060065490506000670de0b6b3a7640000905061289c670de0b6b3a764000060065461260290919063ffffffff16565b8210156128ba57600654670de0b6b3a76400009350935050506128c3565b81819350935050505b9091565b6000808311829061290e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016129059190612f5d565b60405180910390fd5b506000838561291d9190613f3e565b9050809150509392505050565b60008060008060008060008060006129478a600c54600d54612b31565b92509250925060006129576125d7565b9050600080600061296a8e878787612bc7565b9250925092508282828989899c509c509c509c509c509c505050505050505091939550919395565b60006129d483836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f7700008152506121f5565b905092915050565b60008082846129eb9190613bee565b905083811015612a30576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612a2790613fbb565b60405180910390fd5b8091505092915050565b6000612a446125d7565b90506000612a5b8284612c5090919063ffffffff16565b9050612aaf81600260003073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546129dc90919063ffffffff16565b600260003073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505050565b612b0c8260065461299290919063ffffffff16565b600681905550612b27816007546129dc90919063ffffffff16565b6007819055505050565b600080600080612b5d6064612b4f888a612c5090919063ffffffff16565b61260290919063ffffffff16565b90506000612b876064612b79888b612c5090919063ffffffff16565b61260290919063ffffffff16565b90506000612bb082612ba2858c61299290919063ffffffff16565b61299290919063ffffffff16565b905080838395509550955050505093509350939050565b600080600080612be08589612c5090919063ffffffff16565b90506000612bf78689612c5090919063ffffffff16565b90506000612c0e8789612c5090919063ffffffff16565b90506000612c3782612c29858761299290919063ffffffff16565b61299290919063ffffffff16565b9050838184965096509650505050509450945094915050565b6000808303612c625760009050612cc4565b60008284612c709190613fdb565b9050828482612c7f9190613f3e565b14612cbf576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612cb69061408f565b60405180910390fd5b809150505b92915050565b6000604051905090565b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b612d2c82612ce3565b810181811067ffffffffffffffff82111715612d4b57612d4a612cf4565b5b80604052505050565b6000612d5e612cca565b9050612d6a8282612d23565b919050565b600067ffffffffffffffff821115612d8a57612d89612cf4565b5b602082029050602081019050919050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000612dcb82612da0565b9050919050565b612ddb81612dc0565b8114612de657600080fd5b50565b600081359050612df881612dd2565b92915050565b6000612e11612e0c84612d6f565b612d54565b90508083825260208201905060208402830185811115612e3457612e33612d9b565b5b835b81811015612e5d5780612e498882612de9565b845260208401935050602081019050612e36565b5050509392505050565b600082601f830112612e7c57612e7b612cde565b5b8135612e8c848260208601612dfe565b91505092915050565b600060208284031215612eab57612eaa612cd4565b5b600082013567ffffffffffffffff811115612ec957612ec8612cd9565b5b612ed584828501612e67565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015612f18578082015181840152602081019050612efd565b60008484015250505050565b6000612f2f82612ede565b612f398185612ee9565b9350612f49818560208601612efa565b612f5281612ce3565b840191505092915050565b60006020820190508181036000830152612f778184612f24565b905092915050565b6000819050919050565b612f9281612f7f565b8114612f9d57600080fd5b50565b600081359050612faf81612f89565b92915050565b60008060408385031215612fcc57612fcb612cd4565b5b6000612fda85828601612de9565b9250506020612feb85828601612fa0565b9150509250929050565b60008115159050919050565b61300a81612ff5565b82525050565b60006020820190506130256000830184613001565b92915050565b6000819050919050565b600061305061304b61304684612da0565b61302b565b612da0565b9050919050565b600061306282613035565b9050919050565b600061307482613057565b9050919050565b61308481613069565b82525050565b600060208201905061309f600083018461307b565b92915050565b6130ae81612f7f565b82525050565b60006020820190506130c960008301846130a5565b92915050565b6000806000606084860312156130e8576130e7612cd4565b5b60006130f686828701612de9565b935050602061310786828701612de9565b925050604061311886828701612fa0565b9150509250925092565b600060ff82169050919050565b61313881613122565b82525050565b6000602082019050613153600083018461312f565b92915050565b61316281612dc0565b82525050565b600060208201905061317d6000830184613159565b92915050565b60006020828403121561319957613198612cd4565b5b60006131a784828501612de9565b91505092915050565b6131b981612ff5565b81146131c457600080fd5b50565b6000813590506131d6816131b0565b92915050565b6000602082840312156131f2576131f1612cd4565b5b6000613200848285016131c7565b91505092915050565b60006020828403121561321f5761321e612cd4565b5b600061322d84828501612fa0565b91505092915050565b600080600080608085870312156132505761324f612cd4565b5b600061325e87828801612fa0565b945050602061326f87828801612fa0565b935050604061328087828801612fa0565b925050606061329187828801612fa0565b91505092959194509250565b600080fd5b60008083601f8401126132b8576132b7612cde565b5b8235905067ffffffffffffffff8111156132d5576132d461329d565b5b6020830191508360208202830111156132f1576132f0612d9b565b5b9250929050565b60008060006040848603121561331157613310612cd4565b5b600084013567ffffffffffffffff81111561332f5761332e612cd9565b5b61333b868287016132a2565b9350935050602061334e868287016131c7565b9150509250925092565b6000806040838503121561336f5761336e612cd4565b5b600061337d85828601612de9565b925050602061338e85828601612de9565b9150509250929050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006133ce602083612ee9565b91506133d982613398565b602082019050919050565b600060208201905081810360008301526133fd816133c1565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061346d82612f7f565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361349f5761349e613433565b5b600182019050919050565b7f4275792072657761726473206d757374206265206265747765656e203025206160008201527f6e64203425000000000000000000000000000000000000000000000000000000602082015250565b6000613506602583612ee9565b9150613511826134aa565b604082019050919050565b60006020820190508181036000830152613535816134f9565b9050919050565b7f42757920746178206d757374206265206265747765656e20302520616e64203960008201527f3525000000000000000000000000000000000000000000000000000000000000602082015250565b6000613598602283612ee9565b91506135a38261353c565b604082019050919050565b600060208201905081810360008301526135c78161358b565b9050919050565b7f53656c6c2072657761726473206d757374206265206265747765656e2030252060008201527f616e642034250000000000000000000000000000000000000000000000000000602082015250565b600061362a602683612ee9565b9150613635826135ce565b604082019050919050565b600060208201905081810360008301526136598161361d565b9050919050565b7f53656c6c20746178206d757374206265206265747765656e20302520616e642060008201527f3935250000000000000000000000000000000000000000000000000000000000602082015250565b60006136bc602383612ee9565b91506136c782613660565b604082019050919050565b600060208201905081810360008301526136eb816136af565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b600061374e602683612ee9565b9150613759826136f2565b604082019050919050565b6000602082019050818103600083015261377d81613741565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b60006137e0602483612ee9565b91506137eb82613784565b604082019050919050565b6000602082019050818103600083015261380f816137d3565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b6000613872602283612ee9565b915061387d82613816565b604082019050919050565b600060208201905081810360008301526138a181613865565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b6000613904602583612ee9565b915061390f826138a8565b604082019050919050565b60006020820190508181036000830152613933816138f7565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b6000613996602383612ee9565b91506139a18261393a565b604082019050919050565b600060208201905081810360008301526139c581613989565b9050919050565b7f5472616e7366657220616d6f756e74206d75737420626520677265617465722060008201527f7468616e207a65726f0000000000000000000000000000000000000000000000602082015250565b6000613a28602983612ee9565b9150613a33826139cc565b604082019050919050565b60006020820190508181036000830152613a5781613a1b565b9050919050565b7f544f4b454e3a2054686973206163636f756e742063616e6e6f742073656e642060008201527f746f6b656e7320756e74696c2074726164696e6720697320656e61626c656400602082015250565b6000613aba603f83612ee9565b9150613ac582613a5e565b604082019050919050565b60006020820190508181036000830152613ae981613aad565b9050919050565b7f544f4b454e3a204d6178205472616e73616374696f6e204c696d697400000000600082015250565b6000613b26601c83612ee9565b9150613b3182613af0565b602082019050919050565b60006020820190508181036000830152613b5581613b19565b9050919050565b7f544f4b454e3a20596f7572206163636f756e7420697320626c61636b6c69737460008201527f6564210000000000000000000000000000000000000000000000000000000000602082015250565b6000613bb8602383612ee9565b9150613bc382613b5c565b604082019050919050565b60006020820190508181036000830152613be781613bab565b9050919050565b6000613bf982612f7f565b9150613c0483612f7f565b9250828201905080821115613c1c57613c1b613433565b5b92915050565b7f544f4b454e3a2042616c616e636520657863656564732077616c6c657420736960008201527f7a65210000000000000000000000000000000000000000000000000000000000602082015250565b6000613c7e602383612ee9565b9150613c8982613c22565b604082019050919050565b60006020820190508181036000830152613cad81613c71565b9050919050565b6000613cbf82612f7f565b9150613cca83612f7f565b9250828203905081811115613ce257613ce1613433565b5b92915050565b7f416d6f756e74206d757374206265206c657373207468616e20746f74616c207260008201527f65666c656374696f6e7300000000000000000000000000000000000000000000602082015250565b6000613d44602a83612ee9565b9150613d4f82613ce8565b604082019050919050565b60006020820190508181036000830152613d7381613d37565b9050919050565b600081519050613d8981612dd2565b92915050565b600060208284031215613da557613da4612cd4565b5b6000613db384828501613d7a565b91505092915050565b6000819050919050565b6000613de1613ddc613dd784613dbc565b61302b565b612f7f565b9050919050565b613df181613dc6565b82525050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b613e2c81612dc0565b82525050565b6000613e3e8383613e23565b60208301905092915050565b6000602082019050919050565b6000613e6282613df7565b613e6c8185613e02565b9350613e7783613e13565b8060005b83811015613ea8578151613e8f8882613e32565b9750613e9a83613e4a565b925050600181019050613e7b565b5085935050505092915050565b600060a082019050613eca60008301886130a5565b613ed76020830187613de8565b8181036040830152613ee98186613e57565b9050613ef86060830185613159565b613f0560808301846130a5565b9695505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000613f4982612f7f565b9150613f5483612f7f565b925082613f6457613f63613f0f565b5b828204905092915050565b7f536166654d6174683a206164646974696f6e206f766572666c6f770000000000600082015250565b6000613fa5601b83612ee9565b9150613fb082613f6f565b602082019050919050565b60006020820190508181036000830152613fd481613f98565b9050919050565b6000613fe682612f7f565b9150613ff183612f7f565b9250828202613fff81612f7f565b9150828204841483151761401657614015613433565b5b5092915050565b7f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f60008201527f7700000000000000000000000000000000000000000000000000000000000000602082015250565b6000614079602183612ee9565b91506140848261401d565b604082019050919050565b600060208201905081810360008301526140a88161406c565b905091905056fe45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365a2646970667358221220a63c71c51f984d34f9dbcb21d4616d9c6eccef5d9ebb964e06e741d11e2b335f64736f6c63430008120033",
    "runtime_bytecode": "6080604052600436106101d05760003560e01c80637d1db4a5116100f7578063a2a957bb11610095578063c492f04611610064578063c492f0461461065c578063dd62ed3e14610685578063ea1644d5146106c2578063f2fde38b146106eb576101d7565b8063a2a957bb146105a2578063a9059cbb146105cb578063bfd7928414610608578063c3c8cd8014610645576101d7565b80638f70ccf7116100d15780638f70ccf7146104fa5780638f9a55c01461052357806395d89b411461054e57806398a5c31514610579576101d7565b80637d1db4a5146104675780637f2feddc146104925780638da5cb5b146104cf576101d7565b8063313ce5671161016f5780636fc3eaec1161013e5780636fc3eaec146103d357806370a08231146103ea578063715018a61461042757806374010ece1461043e576101d7565b8063313ce5671461032b57806349bd5a5e146103565780636b999053146103815780636d8aa8f8146103aa576101d7565b80631694505e116101ab5780631694505e1461026d57806318160ddd1461029857806323b872dd146102c35780632fd689e314610300576101d7565b8062b8cf2a146101dc57806306fdde0314610205578063095ea7b314610230576101d7565b366101d757005b600080fd5b3480156101e857600080fd5b5061020360048036038101906101fe9190612e95565b610714565b005b34801561021157600080fd5b5061021a61083e565b6040516102279190612f5d565b60405180910390f35b34801561023c57600080fd5b5061025760048036038101906102529190612fb5565b61087b565b6040516102649190613010565b60405180910390f35b34801561027957600080fd5b50610282610899565b60405161028f919061308a565b60405180910390f35b3480156102a457600080fd5b506102ad6108bf565b6040516102ba91906130b4565b60405180910390f35b3480156102cf57600080fd5b506102ea60048036038101906102e591906130cf565b6108cf565b6040516102f79190613010565b60405180910390f35b34801561030c57600080fd5b506103156109a8565b60405161032291906130b4565b60405180910390f35b34801561033757600080fd5b506103406109ae565b60405161034d919061313e565b60405180910390f35b34801561036257600080fd5b5061036b6109b7565b6040516103789190613168565b60405180910390f35b34801561038d57600080fd5b506103a860048036038101906103a39190613183565b6109dd565b005b3480156103b657600080fd5b506103d160048036038101906103cc91906131dc565b610acd565b005b3480156103df57600080fd5b506103e8610b7f565b005b3480156103f657600080fd5b50610411600480360381019061040c9190613183565b610c50565b60405161041e91906130b4565b60405180910390f35b34801561043357600080fd5b5061043c610ca1565b005b34801561044a57600080fd5b5061046560048036038101906104609190613209565b610df4565b005b34801561047357600080fd5b5061047c610e93565b60405161048991906130b4565b60405180910390f35b34801561049e57600080fd5b506104b960048036038101906104b49190613183565b610e99565b6040516104c691906130b4565b60405180910390f35b3480156104db57600080fd5b506104e4610eb1565b6040516104f19190613168565b60405180910390f35b34801561050657600080fd5b50610521600480360381019061051c91906131dc565b610eda565b005b34801561052f57600080fd5b50610538610f8c565b60405161054591906130b4565b60405180910390f35b34801561055a57600080fd5b50610563610f92565b6040516105709190612f5d565b60405180910390f35b34801561058557600080fd5b506105a0600480360381019061059b9190613209565b610fcf565b005b3480156105ae57600080fd5b506105c960048036038101906105c49190613236565b61106e565b005b3480156105d757600080fd5b506105f260048036038101906105ed9190612fb5565b611269565b6040516105ff9190613010565b60405180910390f35b34801561061457600080fd5b5061062f600480360381019061062a9190613183565b611287565b60405161063c9190613010565b60405180910390f35b34801561065157600080fd5b5061065a6112a7565b005b34801561066857600080fd5b50610683600480360381019061067e91906132f8565b611380565b005b34801561069157600080fd5b506106ac60048036038101906106a79190613358565b6114ba565b6040516106b991906130b4565b60405180910390f35b3480156106ce57600080fd5b506106e960048036038101906106e49190613209565b611541565b005b3480156106f757600080fd5b50610712600480360381019061070d9190613183565b6115e0565b005b61071c6117a1565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146107a9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107a0906133e4565b60405180910390fd5b60005b815181101561083a576001601060008484815181106107ce576107cd613404565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550808061083290613462565b9150506107ac565b5050565b60606040518060400160405280600b81526020017f424947204348554e475553000000000000000000000000000000000000000000815250905090565b600061088f6108886117a1565b84846117a9565b6001905092915050565b601460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000670de0b6b3a7640000905090565b60006108dc848484611972565b61099d846108e86117a1565b610998856040518060600160405280602881526020016140b060289139600460008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600061094e6117a1565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546121f59092919063ffffffff16565b6117a9565b600190509392505050565b60185481565b60006009905090565b601560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6109e56117a1565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610a72576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a69906133e4565b60405180910390fd5b6000601060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b610ad56117a1565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610b62576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b59906133e4565b60405180910390fd5b80601560166101000a81548160ff02191690831515021790555050565b601260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610bc06117a1565b73ffffffffffffffffffffffffffffffffffffffff161480610c365750601360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610c1e6117a1565b73ffffffffffffffffffffffffffffffffffffffff16145b610c3f57600080fd5b6000479050610c4d81612259565b50565b6000610c9a600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546122c5565b9050919050565b610ca96117a1565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610d36576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d2d906133e4565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b610dfc6117a1565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610e89576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e80906133e4565b60405180910390fd5b8060168190555050565b60165481565b60116020528060005260406000206000915090505481565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610ee26117a1565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610f6f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f66906133e4565b60405180910390fd5b80601560146101000a81548160ff02191690831515021790555050565b60175481565b60606040518060400160405280600781526020017f4348554e47555300000000000000000000000000000000000000000000000000815250905090565b610fd76117a1565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611064576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161105b906133e4565b60405180910390fd5b8060188190555050565b6110766117a1565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611103576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110fa906133e4565b60405180910390fd5b60008410158015611115575060048411155b611154576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161114b9061351c565b60405180910390fd5b600082101580156111665750605f8211155b6111a5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161119c906135ae565b60405180910390fd5b600083101580156111b7575060048311155b6111f6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111ed90613640565b60405180910390fd5b600081101580156112085750605f8111155b611247576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161123e906136d2565b60405180910390fd5b8360088190555082600a819055508160098190555080600b8190555050505050565b600061127d6112766117a1565b8484611972565b6001905092915050565b60106020528060005260406000206000915054906101000a900460ff1681565b601260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166112e86117a1565b73ffffffffffffffffffffffffffffffffffffffff16148061135e5750601360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166113466117a1565b73ffffffffffffffffffffffffffffffffffffffff16145b61136757600080fd5b600061137230610c50565b905061137d81612333565b50565b6113886117a1565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611415576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161140c906133e4565b60405180910390fd5b60005b838390508110156114b457816005600086868581811061143b5761143a613404565b5b90506020020160208101906114509190613183565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555080806114ac90613462565b915050611418565b50505050565b6000600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b6115496117a1565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146115d6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115cd906133e4565b60405180910390fd5b8060178190555050565b6115e86117a1565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611675576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161166c906133e4565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036116e4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116db90613764565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611818576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161180f906137f6565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611887576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161187e90613888565b60405180910390fd5b80600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258360405161196591906130b4565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036119e1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016119d89061391a565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611a50576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a47906139ac565b60405180910390fd5b60008111611a93576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a8a90613a3e565b60405180910390fd5b611a9b610eb1565b73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614158015611b095750611ad9610eb1565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b15611ef457601560149054906101000a900460ff16611b9857611b2a610eb1565b73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614611b97576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b8e90613ad0565b60405180910390fd5b5b601654811115611bdd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611bd490613b3c565b60405180910390fd5b601060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16158015611c815750601060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16155b611cc0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611cb790613bce565b60405180910390fd5b601560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614611d6d5760175481611d2284610c50565b611d2c9190613bee565b10611d6c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611d6390613c94565b60405180910390fd5b5b6000611d7830610c50565b9050600060185482101590506016548210611d935760165491505b808015611dab575060158054906101000a900460ff16155b8015611e055750601560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614155b8015611e1d5750601560169054906101000a900460ff165b8015611e735750600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16155b8015611ec95750600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16155b15611ef157611ed782612333565b60004790506000811115611eef57611eee47612259565b5b505b50505b600060019050600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1680611f9b5750600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff165b8061204e5750601560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161415801561204d5750601560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614155b5b1561205c57600090506121e3565b601560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480156121075750601460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614155b1561211f57600854600c81905550600954600d819055505b601560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161480156121ca5750601460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614155b156121e257600a54600c81905550600b54600d819055505b5b6121ef848484846125aa565b50505050565b600083831115829061223d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016122349190612f5d565b60405180910390fd5b506000838561224c9190613cb4565b9050809150509392505050565b601360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f193505050501580156122c1573d6000803e3d6000fd5b5050565b600060065482111561230c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161230390613d5a565b60405180910390fd5b60006123166125d7565b905061232b818461260290919063ffffffff16565b915050919050565b60016015806101000a81548160ff0219169083151502179055506000600267ffffffffffffffff81111561236a57612369612cf4565b5b6040519080825280602002602001820160405280156123985781602001602082028036833780820191505090505b50905030816000815181106123b0576123af613404565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050601460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa158015612457573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061247b9190613d8f565b8160018151811061248f5761248e613404565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250506124f630601460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16846117a9565b601460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663791ac9478360008430426040518663ffffffff1660e01b815260040161255a959493929190613eb5565b600060405180830381600087803b15801561257457600080fd5b505af1158015612588573d6000803e3d6000fd5b505050505060006015806101000a81548160ff02191690831515021790555050565b806125b8576125b761264c565b5b6125c3848484612689565b806125d1576125d0612854565b5b50505050565b60008060006125e4612868565b915091506125fb818361260290919063ffffffff16565b9250505090565b600061264483836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f0000000000008152506128c7565b905092915050565b6000600c5414801561266057506000600d54145b61268757600c54600e81905550600d54600f819055506000600c819055506000600d819055505b565b60008060008060008061269b8761292a565b9550955095509550955095506126f986600260008c73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461299290919063ffffffff16565b600260008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061278e85600260008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546129dc90919063ffffffff16565b600260008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506127da81612a3a565b6127e48483612af7565b8773ffffffffffffffffffffffffffffffffffffffff168973ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8560405161284191906130b4565b60405180910390a3505050505050505050565b600e54600c81905550600f54600d81905550565b600080600060065490506000670de0b6b3a7640000905061289c670de0b6b3a764000060065461260290919063ffffffff16565b8210156128ba57600654670de0b6b3a76400009350935050506128c3565b81819350935050505b9091565b6000808311829061290e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016129059190612f5d565b60405180910390fd5b506000838561291d9190613f3e565b9050809150509392505050565b60008060008060008060008060006129478a600c54600d54612b31565b92509250925060006129576125d7565b9050600080600061296a8e878787612bc7565b9250925092508282828989899c509c509c509c509c509c505050505050505091939550919395565b60006129d483836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f7700008152506121f5565b905092915050565b60008082846129eb9190613bee565b905083811015612a30576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612a2790613fbb565b60405180910390fd5b8091505092915050565b6000612a446125d7565b90506000612a5b8284612c5090919063ffffffff16565b9050612aaf81600260003073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546129dc90919063ffffffff16565b600260003073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505050565b612b0c8260065461299290919063ffffffff16565b600681905550612b27816007546129dc90919063ffffffff16565b6007819055505050565b600080600080612b5d6064612b4f888a612c5090919063ffffffff16565b61260290919063ffffffff16565b90506000612b876064612b79888b612c5090919063ffffffff16565b61260290919063ffffffff16565b90506000612bb082612ba2858c61299290919063ffffffff16565b61299290919063ffffffff16565b905080838395509550955050505093509350939050565b600080600080612be08589612c5090919063ffffffff16565b90506000612bf78689612c5090919063ffffffff16565b90506000612c0e8789612c5090919063ffffffff16565b90506000612c3782612c29858761299290919063ffffffff16565b61299290919063ffffffff16565b9050838184965096509650505050509450945094915050565b6000808303612c625760009050612cc4565b60008284612c709190613fdb565b9050828482612c7f9190613f3e565b14612cbf576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612cb69061408f565b60405180910390fd5b809150505b92915050565b6000604051905090565b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b612d2c82612ce3565b810181811067ffffffffffffffff82111715612d4b57612d4a612cf4565b5b80604052505050565b6000612d5e612cca565b9050612d6a8282612d23565b919050565b600067ffffffffffffffff821115612d8a57612d89612cf4565b5b602082029050602081019050919050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000612dcb82612da0565b9050919050565b612ddb81612dc0565b8114612de657600080fd5b50565b600081359050612df881612dd2565b92915050565b6000612e11612e0c84612d6f565b612d54565b90508083825260208201905060208402830185811115612e3457612e33612d9b565b5b835b81811015612e5d5780612e498882612de9565b845260208401935050602081019050612e36565b5050509392505050565b600082601f830112612e7c57612e7b612cde565b5b8135612e8c848260208601612dfe565b91505092915050565b600060208284031215612eab57612eaa612cd4565b5b600082013567ffffffffffffffff811115612ec957612ec8612cd9565b5b612ed584828501612e67565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015612f18578082015181840152602081019050612efd565b60008484015250505050565b6000612f2f82612ede565b612f398185612ee9565b9350612f49818560208601612efa565b612f5281612ce3565b840191505092915050565b60006020820190508181036000830152612f778184612f24565b905092915050565b6000819050919050565b612f9281612f7f565b8114612f9d57600080fd5b50565b600081359050612faf81612f89565b92915050565b60008060408385031215612fcc57612fcb612cd4565b5b6000612fda85828601612de9565b9250506020612feb85828601612fa0565b9150509250929050565b60008115159050919050565b61300a81612ff5565b82525050565b60006020820190506130256000830184613001565b92915050565b6000819050919050565b600061305061304b61304684612da0565b61302b565b612da0565b9050919050565b600061306282613035565b9050919050565b600061307482613057565b9050919050565b61308481613069565b82525050565b600060208201905061309f600083018461307b565b92915050565b6130ae81612f7f565b82525050565b60006020820190506130c960008301846130a5565b92915050565b6000806000606084860312156130e8576130e7612cd4565b5b60006130f686828701612de9565b935050602061310786828701612de9565b925050604061311886828701612fa0565b9150509250925092565b600060ff82169050919050565b61313881613122565b82525050565b6000602082019050613153600083018461312f565b92915050565b61316281612dc0565b82525050565b600060208201905061317d6000830184613159565b92915050565b60006020828403121561319957613198612cd4565b5b60006131a784828501612de9565b91505092915050565b6131b981612ff5565b81146131c457600080fd5b50565b6000813590506131d6816131b0565b92915050565b6000602082840312156131f2576131f1612cd4565b5b6000613200848285016131c7565b91505092915050565b60006020828403121561321f5761321e612cd4565b5b600061322d84828501612fa0565b91505092915050565b600080600080608085870312156132505761324f612cd4565b5b600061325e87828801612fa0565b945050602061326f87828801612fa0565b935050604061328087828801612fa0565b925050606061329187828801612fa0565b91505092959194509250565b600080fd5b60008083601f8401126132b8576132b7612cde565b5b8235905067ffffffffffffffff8111156132d5576132d461329d565b5b6020830191508360208202830111156132f1576132f0612d9b565b5b9250929050565b60008060006040848603121561331157613310612cd4565b5b600084013567ffffffffffffffff81111561332f5761332e612cd9565b5b61333b868287016132a2565b9350935050602061334e868287016131c7565b9150509250925092565b6000806040838503121561336f5761336e612cd4565b5b600061337d85828601612de9565b925050602061338e85828601612de9565b9150509250929050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006133ce602083612ee9565b91506133d982613398565b602082019050919050565b600060208201905081810360008301526133fd816133c1565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061346d82612f7f565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361349f5761349e613433565b5b600182019050919050565b7f4275792072657761726473206d757374206265206265747765656e203025206160008201527f6e64203425000000000000000000000000000000000000000000000000000000602082015250565b6000613506602583612ee9565b9150613511826134aa565b604082019050919050565b60006020820190508181036000830152613535816134f9565b9050919050565b7f42757920746178206d757374206265206265747765656e20302520616e64203960008201527f3525000000000000000000000000000000000000000000000000000000000000602082015250565b6000613598602283612ee9565b91506135a38261353c565b604082019050919050565b600060208201905081810360008301526135c78161358b565b9050919050565b7f53656c6c2072657761726473206d757374206265206265747765656e2030252060008201527f616e642034250000000000000000000000000000000000000000000000000000602082015250565b600061362a602683612ee9565b9150613635826135ce565b604082019050919050565b600060208201905081810360008301526136598161361d565b9050919050565b7f53656c6c20746178206d757374206265206265747765656e20302520616e642060008201527f3935250000000000000000000000000000000000000000000000000000000000602082015250565b60006136bc602383612ee9565b91506136c782613660565b604082019050919050565b600060208201905081810360008301526136eb816136af565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b600061374e602683612ee9565b9150613759826136f2565b604082019050919050565b6000602082019050818103600083015261377d81613741565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b60006137e0602483612ee9565b91506137eb82613784565b604082019050919050565b6000602082019050818103600083015261380f816137d3565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b6000613872602283612ee9565b915061387d82613816565b604082019050919050565b600060208201905081810360008301526138a181613865565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b6000613904602583612ee9565b915061390f826138a8565b604082019050919050565b60006020820190508181036000830152613933816138f7565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b6000613996602383612ee9565b91506139a18261393a565b604082019050919050565b600060208201905081810360008301526139c581613989565b9050919050565b7f5472616e7366657220616d6f756e74206d75737420626520677265617465722060008201527f7468616e207a65726f0000000000000000000000000000000000000000000000602082015250565b6000613a28602983612ee9565b9150613a33826139cc565b604082019050919050565b60006020820190508181036000830152613a5781613a1b565b9050919050565b7f544f4b454e3a2054686973206163636f756e742063616e6e6f742073656e642060008201527f746f6b656e7320756e74696c2074726164696e6720697320656e61626c656400602082015250565b6000613aba603f83612ee9565b9150613ac582613a5e565b604082019050919050565b60006020820190508181036000830152613ae981613aad565b9050919050565b7f544f4b454e3a204d6178205472616e73616374696f6e204c696d697400000000600082015250565b6000613b26601c83612ee9565b9150613b3182613af0565b602082019050919050565b60006020820190508181036000830152613b5581613b19565b9050919050565b7f544f4b454e3a20596f7572206163636f756e7420697320626c61636b6c69737460008201527f6564210000000000000000000000000000000000000000000000000000000000602082015250565b6000613bb8602383612ee9565b9150613bc382613b5c565b604082019050919050565b60006020820190508181036000830152613be781613bab565b9050919050565b6000613bf982612f7f565b9150613c0483612f7f565b9250828201905080821115613c1c57613c1b613433565b5b92915050565b7f544f4b454e3a2042616c616e636520657863656564732077616c6c657420736960008201527f7a65210000000000000000000000000000000000000000000000000000000000602082015250565b6000613c7e602383612ee9565b9150613c8982613c22565b604082019050919050565b60006020820190508181036000830152613cad81613c71565b9050919050565b6000613cbf82612f7f565b9150613cca83612f7f565b9250828203905081811115613ce257613ce1613433565b5b92915050565b7f416d6f756e74206d757374206265206c657373207468616e20746f74616c207260008201527f65666c656374696f6e7300000000000000000000000000000000000000000000602082015250565b6000613d44602a83612ee9565b9150613d4f82613ce8565b604082019050919050565b60006020820190508181036000830152613d7381613d37565b9050919050565b600081519050613d8981612dd2565b92915050565b600060208284031215613da557613da4612cd4565b5b6000613db384828501613d7a565b91505092915050565b6000819050919050565b6000613de1613ddc613dd784613dbc565b61302b565b612f7f565b9050919050565b613df181613dc6565b82525050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b613e2c81612dc0565b82525050565b6000613e3e8383613e23565b60208301905092915050565b6000602082019050919050565b6000613e6282613df7565b613e6c8185613e02565b9350613e7783613e13565b8060005b83811015613ea8578151613e8f8882613e32565b9750613e9a83613e4a565b925050600181019050613e7b565b5085935050505092915050565b600060a082019050613eca60008301886130a5565b613ed76020830187613de8565b8181036040830152613ee98186613e57565b9050613ef86060830185613159565b613f0560808301846130a5565b9695505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000613f4982612f7f565b9150613f5483612f7f565b925082613f6457613f63613f0f565b5b828204905092915050565b7f536166654d6174683a206164646974696f6e206f766572666c6f770000000000600082015250565b6000613fa5601b83612ee9565b9150613fb082613f6f565b602082019050919050565b60006020820190508181036000830152613fd481613f98565b9050919050565b6000613fe682612f7f565b9150613ff183612f7f565b9250828202613fff81612f7f565b9150828204841483151761401657614015613433565b5b5092915050565b7f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f60008201527f7700000000000000000000000000000000000000000000000000000000000000602082015250565b6000614079602183612ee9565b91506140848261401d565b604082019050919050565b600060208201905081810360008301526140a88161406c565b905091905056fe45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365a2646970667358221220a63c71c51f984d34f9dbcb21d4616d9c6eccef5d9ebb964e06e741d11e2b335f64736f6c63430008120033",
    "contract_name": "CHUNGUS",
    "compiler_version": "v0.8.18+commit.87f61d96",
    "optimization_used": "0",
    "runs": "200",
    "abi": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_maxTxAmount\",\"type\":\"uint256\"}],\"name\":\"MaxTxAmountUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"_buyMap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_maxTxAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_maxWalletSize\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_swapTokensAtAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"bots_\",\"type\":\"address[]\"}],\"name\":\"blockBots\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"bots\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"bool\",\"name\":\"excluded\",\"type\":\"bool\"}],\"name\":\"excludeMultipleAccountsFromFees\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"manualsend\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"manualswap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"redisFeeOnBuy\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"redisFeeOnSell\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"taxFeeOnBuy\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"taxFeeOnSell\",\"type\":\"uint256\"}],\"name\":\"setFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"maxTxAmount\",\"type\":\"uint256\"}],\"name\":\"setMaxTxnAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"maxWalletSize\",\"type\":\"uint256\"}],\"name\":\"setMaxWalletSize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"swapTokensAtAmount\",\"type\":\"uint256\"}],\"name\":\"setMinSwapTokensThreshold\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_tradingOpen\",\"type\":\"bool\"}],\"name\":\"setTrading\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_swapEnabled\",\"type\":\"bool\"}],\"name\":\"toggleSwap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"notbot\",\"type\":\"address\"}],\"name\":\"unblockBot\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"uniswapV2Pair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"uniswapV2Router\",\"outputs\":[{\"internalType\":\"contract IUniswapV2Router02\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]",
    "source_code": "/**\r\n\r\n\u2588\u2588\u2588\u2588\u2588\u2588\u2557\u2591\u2588\u2588\u2557\u2591\u2588\u2588\u2588\u2588\u2588\u2588\u2557\u2591\u2003\u2003\u2591\u2588\u2588\u2588\u2588\u2588\u2557\u2591\u2588\u2588\u2557\u2591\u2591\u2588\u2588\u2557\u2588\u2588\u2557\u2591\u2591\u2591\u2588\u2588\u2557\u2588\u2588\u2588\u2557\u2591\u2591\u2588\u2588\u2557\u2591\u2588\u2588\u2588\u2588\u2588\u2588\u2557\u2591\u2588\u2588\u2557\u2591\u2591\u2591\u2588\u2588\u2557\u2591\u2588\u2588\u2588\u2588\u2588\u2588\u2557\r\n\u2588\u2588\u2554\u2550\u2550\u2588\u2588\u2557\u2588\u2588\u2551\u2588\u2588\u2554\u2550\u2550\u2550\u2550\u255d\u2591\u2003\u2003\u2588\u2588\u2554\u2550\u2550\u2588\u2588\u2557\u2588\u2588\u2551\u2591\u2591\u2588\u2588\u2551\u2588\u2588\u2551\u2591\u2591\u2591\u2588\u2588\u2551\u2588\u2588\u2588\u2588\u2557\u2591\u2588\u2588\u2551\u2588\u2588\u2554\u2550\u2550\u2550\u2550\u255d\u2591\u2588\u2588\u2551\u2591\u2591\u2591\u2588\u2588\u2551\u2588\u2588\u2554\u2550\u2550\u2550\u2550\u255d\r\n\u2588\u2588\u2588\u2588\u2588\u2588\u2566\u255d\u2588\u2588\u2551\u2588\u2588\u2551\u2591\u2591\u2588\u2588\u2557\u2591\u2003\u2003\u2588\u2588\u2551\u2591\u2591\u255a\u2550\u255d\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2551\u2588\u2588\u2551\u2591\u2591\u2591\u2588\u2588\u2551\u2588\u2588\u2554\u2588\u2588\u2557\u2588\u2588\u2551\u2588\u2588\u2551\u2591\u2591\u2588\u2588\u2557\u2591\u2588\u2588\u2551\u2591\u2591\u2591\u2588\u2588\u2551\u255a\u2588\u2588\u2588\u2588\u2588\u2557\u2591\r\n\u2588\u2588\u2554\u2550\u2550\u2588\u2588\u2557\u2588\u2588\u2551\u2588\u2588\u2551\u2591\u2591\u255a\u2588\u2588\u2557\u2003\u2003\u2588\u2588\u2551\u2591\u2591\u2588\u2588\u2557\u2588\u2588\u2554\u2550\u2550\u2588\u2588\u2551\u2588\u2588\u2551\u2591\u2591\u2591\u2588\u2588\u2551\u2588\u2588\u2551\u255a\u2588\u2588\u2588\u2588\u2551\u2588\u2588\u2551\u2591\u2591\u255a\u2588\u2588\u2557\u2588\u2588\u2551\u2591\u2591\u2591\u2588\u2588\u2551\u2591\u255a\u2550\u2550\u2550\u2588\u2588\u2557\r\n\u2588\u2588\u2588\u2588\u2588\u2588\u2566\u255d\u2588\u2588\u2551\u255a\u2588\u2588\u2588\u2588\u2588\u2588\u2554\u255d\u2003\u2003\u255a\u2588\u2588\u2588\u2588\u2588\u2554\u255d\u2588\u2588\u2551\u2591\u2591\u2588\u2588\u2551\u255a\u2588\u2588\u2588\u2588\u2588\u2588\u2554\u255d\u2588\u2588\u2551\u2591\u255a\u2588\u2588\u2588\u2551\u255a\u2588\u2588\u2588\u2588\u2588\u2588\u2554\u255d\u255a\u2588\u2588\u2588\u2588\u2588\u2588\u2554\u255d\u2588\u2588\u2588\u2588\u2588\u2588\u2554\u255d\r\n\u255a\u2550\u2550\u2550\u2550\u2550\u255d\u2591\u255a\u2550\u255d\u2591\u255a\u2550\u2550\u2550\u2550\u2550\u255d\u2591\u2003\u2003\u2591\u255a\u2550\u2550\u2550\u2550\u255d\u2591\u255a\u2550\u255d\u2591\u2591\u255a\u2550\u255d\u2591\u255a\u2550\u2550\u2550\u2550\u2550\u255d\u2591\u255a\u2550\u255d\u2591\u2591\u255a\u2550\u2550\u255d\u2591\u255a\u2550\u2550\u2550\u2550\u2550\u255d\u2591\u2591\u255a\u2550\u2550\u2550\u2550\u2550\u255d\u2591\u255a\u2550\u2550\u2550\u2550\u2550\u255d\u2591\r\n\r\ntelegram: https://t.me/bigchungusERC\r\n\r\nWebsite: https://chungus.gg \r\n\r\nTwitter: https://x.com/bigchungustoken\r\n\r\nGame: https://chungus.gg/sfhggames/wgame/\r\n\r\n*/\r\n\r\n// SPDX-License-Identifier: Unlicensed\r\npragma solidity ^0.8.18;\r\n \r\nabstract contract Context {\r\n    function _msgSender() internal view virtual returns (address) {\r\n        return msg.sender;\r\n    }\r\n}\r\n \r\ninterface IERC20 {\r\n    function totalSupply() external view returns (uint256);\r\n \r\n    function balanceOf(address account) external view returns (uint256);\r\n \r\n    function transfer(address recipient, uint256 amount) external returns (bool);\r\n \r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n \r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n \r\n    function transferFrom(\r\n        address sender,\r\n        address recipient,\r\n        uint256 amount\r\n    ) external returns (bool);\r\n \r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n    event Approval(\r\n        address indexed owner,\r\n        address indexed spender,\r\n        uint256 value\r\n    );\r\n}\r\n \r\ncontract Ownable is Context {\r\n    address private _owner;\r\n    address private _previousOwner;\r\n    event OwnershipTransferred(\r\n        address indexed previousOwner,\r\n        address indexed newOwner\r\n    );\r\n \r\n    constructor() {\r\n        address msgSender = _msgSender();\r\n        _owner = msgSender;\r\n        emit OwnershipTransferred(address(0), msgSender);\r\n    }\r\n \r\n    function owner() public view returns (address) {\r\n        return _owner;\r\n    }\r\n \r\n    modifier onlyOwner() {\r\n        require(_owner == _msgSender(), \"Ownable: caller is not the owner\");\r\n        _;\r\n    }\r\n \r\n    function renounceOwnership() public virtual onlyOwner {\r\n        emit OwnershipTransferred(_owner, address(0));\r\n        _owner = address(0);\r\n    }\r\n \r\n    function transferOwnership(address newOwner) public virtual onlyOwner {\r\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\r\n        emit OwnershipTransferred(_owner, newOwner);\r\n        _owner = newOwner;\r\n    }\r\n \r\n}\r\n \r\nlibrary SafeMath {\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a + b;\r\n        require(c >= a, \"SafeMath: addition overflow\");\r\n        return c;\r\n    }\r\n \r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return sub(a, b, \"SafeMath: subtraction overflow\");\r\n    }\r\n \r\n    function sub(\r\n        uint256 a,\r\n        uint256 b,\r\n        string memory errorMessage\r\n    ) internal pure returns (uint256) {\r\n        require(b <= a, errorMessage);\r\n        uint256 c = a - b;\r\n        return c;\r\n    }\r\n \r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        if (a == 0) {\r\n            return 0;\r\n        }\r\n        uint256 c = a * b;\r\n        require(c / a == b, \"SafeMath: multiplication overflow\");\r\n        return c;\r\n    }\r\n \r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return div(a, b, \"SafeMath: division by zero\");\r\n    }\r\n \r\n    function div(\r\n        uint256 a,\r\n        uint256 b,\r\n        string memory errorMessage\r\n    ) internal pure returns (uint256) {\r\n        require(b > 0, errorMessage);\r\n        uint256 c = a / b;\r\n        return c;\r\n    }\r\n}\r\n \r\ninterface IUniswapV2Factory {\r\n    function createPair(address tokenA, address tokenB)\r\n        external\r\n        returns (address pair);\r\n}\r\n \r\ninterface IUniswapV2Router02 {\r\n    function swapExactTokensForETHSupportingFeeOnTransferTokens(\r\n        uint256 amountIn,\r\n        uint256 amountOutMin,\r\n        address[] calldata path,\r\n        address to,\r\n        uint256 deadline\r\n    ) external;\r\n \r\n    function factory() external pure returns (address);\r\n \r\n    function WETH() external pure returns (address);\r\n \r\n    function addLiquidityETH(\r\n        address token,\r\n        uint256 amountTokenDesired,\r\n        uint256 amountTokenMin,\r\n        uint256 amountETHMin,\r\n        address to,\r\n        uint256 deadline\r\n    )\r\n        external\r\n        payable\r\n        returns (\r\n            uint256 amountToken,\r\n            uint256 amountETH,\r\n            uint256 liquidity\r\n        );\r\n}\r\n \r\ncontract CHUNGUS is Context, IERC20, Ownable {\r\n \r\n    using SafeMath for uint256;\r\n \r\n    string private constant _name = \"BIG CHUNGUS\";\r\n    string private constant _symbol = \"CHUNGUS\";\r\n    uint8 private constant _decimals = 9;\r\n \r\n    mapping(address => uint256) private _rOwned;\r\n    mapping(address => uint256) private _tOwned;\r\n    mapping(address => mapping(address => uint256)) private _allowances;\r\n    mapping(address => bool) private _isExcludedFromFee;\r\n    uint256 private constant MAX = ~uint256(0);\r\n    uint256 private constant _tTotal = 1000000000 * 10**9;\r\n    uint256 private _rTotal = (MAX - (MAX % _tTotal));\r\n    uint256 private _tFeeTotal;\r\n    uint256 private _redisFeeOnBuy = 0;  \r\n    uint256 private _taxFeeOnBuy = 20;  \r\n    uint256 private _redisFeeOnSell = 0;  \r\n    uint256 private _taxFeeOnSell = 40;\r\n \r\n    //Original Fee\r\n    uint256 private _redisFee = _redisFeeOnSell;\r\n    uint256 private _taxFee = _taxFeeOnSell;\r\n \r\n    uint256 private _previousredisFee = _redisFee;\r\n    uint256 private _previoustaxFee = _taxFee;\r\n \r\n    mapping(address => bool) public bots; mapping (address => uint256) public _buyMap; \r\n    address payable private _developmentAddress = payable(0xaf90A34416D1A4236F6d13a6b52bcb1623024048); \r\n    address payable private _marketingAddress = payable(0xaf90A34416D1A4236F6d13a6b52bcb1623024048);\r\n \r\n    IUniswapV2Router02 public uniswapV2Router;\r\n    address public uniswapV2Pair;\r\n \r\n    bool private tradingOpen;\r\n    bool private inSwap = false;\r\n    bool private swapEnabled = true;\r\n \r\n    uint256 public _maxTxAmount = 5000000 * 10**9;  \r\n    uint256 public _maxWalletSize = 10000000 * 10**9; \r\n    uint256 public _swapTokensAtAmount = 10000 * 10**9;\r\n \r\n    event MaxTxAmountUpdated(uint256 _maxTxAmount);\r\n    modifier lockTheSwap {\r\n        inSwap = true;\r\n        _;\r\n        inSwap = false;\r\n    }\r\n \r\n    constructor() {\r\n \r\n        _rOwned[_msgSender()] = _rTotal;\r\n \r\n        IUniswapV2Router02 _uniswapV2Router = IUniswapV2Router02(0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D);\r\n        uniswapV2Router = _uniswapV2Router;\r\n        uniswapV2Pair = IUniswapV2Factory(_uniswapV2Router.factory())\r\n            .createPair(address(this), _uniswapV2Router.WETH());\r\n \r\n        _isExcludedFromFee[owner()] = true;\r\n        _isExcludedFromFee[address(this)] = true;\r\n        _isExcludedFromFee[_developmentAddress] = true;\r\n        _isExcludedFromFee[_marketingAddress] = true;\r\n \r\n        emit Transfer(address(0), _msgSender(), _tTotal);\r\n    }\r\n \r\n    function name() public pure returns (string memory) {\r\n        return _name;\r\n    }\r\n \r\n    function symbol() public pure returns (string memory) {\r\n        return _symbol;\r\n    }\r\n \r\n    function decimals() public pure returns (uint8) {\r\n        return _decimals;\r\n    }\r\n \r\n    function totalSupply() public pure override returns (uint256) {\r\n        return _tTotal;\r\n    }\r\n \r\n    function balanceOf(address account) public view override returns (uint256) {\r\n        return tokenFromReflection(_rOwned[account]);\r\n    }\r\n \r\n    function transfer(address recipient, uint256 amount)\r\n        public\r\n        override\r\n        returns (bool)\r\n    {\r\n        _transfer(_msgSender(), recipient, amount);\r\n        return true;\r\n    }\r\n \r\n    function allowance(address owner, address spender)\r\n        public\r\n        view\r\n        override\r\n        returns (uint256)\r\n    {\r\n        return _allowances[owner][spender];\r\n    }\r\n \r\n    function approve(address spender, uint256 amount)\r\n        public\r\n        override\r\n        returns (bool)\r\n    {\r\n        _approve(_msgSender(), spender, amount);\r\n        return true;\r\n    }\r\n \r\n    function transferFrom(\r\n        address sender,\r\n        address recipient,\r\n        uint256 amount\r\n    ) public override returns (bool) {\r\n        _transfer(sender, recipient, amount);\r\n        _approve(\r\n            sender,\r\n            _msgSender(),\r\n            _allowances[sender][_msgSender()].sub(\r\n                amount,\r\n                \"ERC20: transfer amount exceeds allowance\"\r\n            )\r\n        );\r\n        return true;\r\n    }\r\n \r\n    function tokenFromReflection(uint256 rAmount)\r\n        private\r\n        view\r\n        returns (uint256)\r\n    {\r\n        require(\r\n            rAmount <= _rTotal,\r\n            \"Amount must be less than total reflections\"\r\n        );\r\n        uint256 currentRate = _getRate();\r\n        return rAmount.div(currentRate);\r\n    }\r\n \r\n    function removeAllFee() private {\r\n        if (_redisFee == 0 && _taxFee == 0) return;\r\n \r\n        _previousredisFee = _redisFee;\r\n        _previoustaxFee = _taxFee;\r\n \r\n        _redisFee = 0;\r\n        _taxFee = 0;\r\n    }\r\n \r\n    function restoreAllFee() private {\r\n        _redisFee = _previousredisFee;\r\n        _taxFee = _previoustaxFee;\r\n    }\r\n \r\n    function _approve(\r\n        address owner,\r\n        address spender,\r\n        uint256 amount\r\n    ) private {\r\n        require(owner != address(0), \"ERC20: approve from the zero address\");\r\n        require(spender != address(0), \"ERC20: approve to the zero address\");\r\n        _allowances[owner][spender] = amount;\r\n        emit Approval(owner, spender, amount);\r\n    }\r\n \r\n    function _transfer(\r\n        address from,\r\n        address to,\r\n        uint256 amount\r\n    ) private {\r\n        require(from != address(0), \"ERC20: transfer from the zero address\");\r\n        require(to != address(0), \"ERC20: transfer to the zero address\");\r\n        require(amount > 0, \"Transfer amount must be greater than zero\");\r\n \r\n        if (from != owner() && to != owner()) {\r\n \r\n            //Trade start check\r\n            if (!tradingOpen) {\r\n                require(from == owner(), \"TOKEN: This account cannot send tokens until trading is enabled\");\r\n            }\r\n \r\n            require(amount <= _maxTxAmount, \"TOKEN: Max Transaction Limit\");\r\n            require(!bots[from] && !bots[to], \"TOKEN: Your account is blacklisted!\");\r\n \r\n            if(to != uniswapV2Pair) {\r\n                require(balanceOf(to) + amount < _maxWalletSize, \"TOKEN: Balance exceeds wallet size!\");\r\n            }\r\n \r\n            uint256 contractTokenBalance = balanceOf(address(this));\r\n            bool canSwap = contractTokenBalance >= _swapTokensAtAmount;\r\n \r\n            if(contractTokenBalance >= _maxTxAmount)\r\n            {\r\n                contractTokenBalance = _maxTxAmount;\r\n            }\r\n \r\n            if (canSwap && !inSwap && from != uniswapV2Pair && swapEnabled && !_isExcludedFromFee[from] && !_isExcludedFromFee[to]) {\r\n                swapTokensForEth(contractTokenBalance);\r\n                uint256 contractETHBalance = address(this).balance;\r\n                if (contractETHBalance > 0) {\r\n                    sendETHToFee(address(this).balance);\r\n                }\r\n            }\r\n        }\r\n \r\n        bool takeFee = true;\r\n \r\n        //Transfer Tokens\r\n        if ((_isExcludedFromFee[from] || _isExcludedFromFee[to]) || (from != uniswapV2Pair && to != uniswapV2Pair)) {\r\n            takeFee = false;\r\n        } else {\r\n \r\n            //Set Fee for Buys\r\n            if(from == uniswapV2Pair && to != address(uniswapV2Router)) {\r\n                _redisFee = _redisFeeOnBuy;\r\n                _taxFee = _taxFeeOnBuy;\r\n            }\r\n \r\n            //Set Fee for Sells\r\n            if (to == uniswapV2Pair && from != address(uniswapV2Router)) {\r\n                _redisFee = _redisFeeOnSell;\r\n                _taxFee = _taxFeeOnSell;\r\n            }\r\n \r\n        }\r\n \r\n        _tokenTransfer(from, to, amount, takeFee);\r\n    }\r\n \r\n    function swapTokensForEth(uint256 tokenAmount) private lockTheSwap {\r\n        address[] memory path = new address[](2);\r\n        path[0] = address(this);\r\n        path[1] = uniswapV2Router.WETH();\r\n        _approve(address(this), address(uniswapV2Router), tokenAmount);\r\n        uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(\r\n            tokenAmount,\r\n            0,\r\n            path,\r\n            address(this),\r\n            block.timestamp\r\n        );\r\n    }\r\n \r\n    function sendETHToFee(uint256 amount) private {\r\n        _marketingAddress.transfer(amount);\r\n    }\r\n \r\n    function setTrading(bool _tradingOpen) public onlyOwner {\r\n        tradingOpen = _tradingOpen;\r\n    }\r\n \r\n    function manualswap() external {\r\n        require(_msgSender() == _developmentAddress || _msgSender() == _marketingAddress);\r\n        uint256 contractBalance = balanceOf(address(this));\r\n        swapTokensForEth(contractBalance);\r\n    }\r\n \r\n    function manualsend() external {\r\n        require(_msgSender() == _developmentAddress || _msgSender() == _marketingAddress);\r\n        uint256 contractETHBalance = address(this).balance;\r\n        sendETHToFee(contractETHBalance);\r\n    }\r\n \r\n    function blockBots(address[] memory bots_) public onlyOwner {\r\n        for (uint256 i = 0; i < bots_.length; i++) {\r\n            bots[bots_[i]] = true;\r\n        }\r\n    }\r\n \r\n    function unblockBot(address notbot) public onlyOwner {\r\n        bots[notbot] = false;\r\n    }\r\n \r\n    function _tokenTransfer(\r\n        address sender,\r\n        address recipient,\r\n        uint256 amount,\r\n        bool takeFee\r\n    ) private {\r\n        if (!takeFee) removeAllFee();\r\n        _transferStandard(sender, recipient, amount);\r\n        if (!takeFee) restoreAllFee();\r\n    }\r\n \r\n    function _transferStandard(\r\n        address sender,\r\n        address recipient,\r\n        uint256 tAmount\r\n    ) private {\r\n        (\r\n            uint256 rAmount,\r\n            uint256 rTransferAmount,\r\n            uint256 rFee,\r\n            uint256 tTransferAmount,\r\n            uint256 tFee,\r\n            uint256 tTeam\r\n        ) = _getValues(tAmount);\r\n        _rOwned[sender] = _rOwned[sender].sub(rAmount);\r\n        _rOwned[recipient] = _rOwned[recipient].add(rTransferAmount);\r\n        _takeTeam(tTeam);\r\n        _reflectFee(rFee, tFee);\r\n        emit Transfer(sender, recipient, tTransferAmount);\r\n    }\r\n \r\n    function _takeTeam(uint256 tTeam) private {\r\n        uint256 currentRate = _getRate();\r\n        uint256 rTeam = tTeam.mul(currentRate);\r\n        _rOwned[address(this)] = _rOwned[address(this)].add(rTeam);\r\n    }\r\n \r\n    function _reflectFee(uint256 rFee, uint256 tFee) private {\r\n        _rTotal = _rTotal.sub(rFee);\r\n        _tFeeTotal = _tFeeTotal.add(tFee);\r\n    }\r\n \r\n    receive() external payable {}\r\n \r\n    function _getValues(uint256 tAmount)\r\n        private\r\n        view\r\n        returns (\r\n            uint256,\r\n            uint256,\r\n            uint256,\r\n            uint256,\r\n            uint256,\r\n            uint256\r\n        )\r\n    {\r\n        (uint256 tTransferAmount, uint256 tFee, uint256 tTeam) =\r\n            _getTValues(tAmount, _redisFee, _taxFee);\r\n        uint256 currentRate = _getRate();\r\n        (uint256 rAmount, uint256 rTransferAmount, uint256 rFee) =\r\n            _getRValues(tAmount, tFee, tTeam, currentRate);\r\n        return (rAmount, rTransferAmount, rFee, tTransferAmount, tFee, tTeam);\r\n    }\r\n \r\n    function _getTValues(\r\n        uint256 tAmount,\r\n        uint256 redisFee,\r\n        uint256 taxFee\r\n    )\r\n        private\r\n        pure\r\n        returns (\r\n            uint256,\r\n            uint256,\r\n            uint256\r\n        )\r\n    {\r\n        uint256 tFee = tAmount.mul(redisFee).div(100);\r\n        uint256 tTeam = tAmount.mul(taxFee).div(100);\r\n        uint256 tTransferAmount = tAmount.sub(tFee).sub(tTeam);\r\n        return (tTransferAmount, tFee, tTeam);\r\n    }\r\n \r\n    function _getRValues(\r\n        uint256 tAmount,\r\n        uint256 tFee,\r\n        uint256 tTeam,\r\n        uint256 currentRate\r\n    )\r\n        private\r\n        pure\r\n        returns (\r\n            uint256,\r\n            uint256,\r\n            uint256\r\n        )\r\n    {\r\n        uint256 rAmount = tAmount.mul(currentRate);\r\n        uint256 rFee = tFee.mul(currentRate);\r\n        uint256 rTeam = tTeam.mul(currentRate);\r\n        uint256 rTransferAmount = rAmount.sub(rFee).sub(rTeam);\r\n        return (rAmount, rTransferAmount, rFee);\r\n    }\r\n \r\n    function _getRate() private view returns (uint256) {\r\n        (uint256 rSupply, uint256 tSupply) = _getCurrentSupply();\r\n        return rSupply.div(tSupply);\r\n    }\r\n \r\n    function _getCurrentSupply() private view returns (uint256, uint256) {\r\n        uint256 rSupply = _rTotal;\r\n        uint256 tSupply = _tTotal;\r\n        if (rSupply < _rTotal.div(_tTotal)) return (_rTotal, _tTotal);\r\n        return (rSupply, tSupply);\r\n    }\r\n \r\n    function setFee(uint256 redisFeeOnBuy, uint256 redisFeeOnSell, uint256 taxFeeOnBuy, uint256 taxFeeOnSell) public onlyOwner {\r\n        require(redisFeeOnBuy >= 0 && redisFeeOnBuy <= 4, \"Buy rewards must be between 0% and 4%\");\r\n        require(taxFeeOnBuy >= 0 && taxFeeOnBuy <= 95, \"Buy tax must be between 0% and 95%\");\r\n        require(redisFeeOnSell >= 0 && redisFeeOnSell <= 4, \"Sell rewards must be between 0% and 4%\");\r\n        require(taxFeeOnSell >= 0 && taxFeeOnSell <= 95, \"Sell tax must be between 0% and 95%\");\r\n\r\n        _redisFeeOnBuy = redisFeeOnBuy;\r\n        _redisFeeOnSell = redisFeeOnSell;\r\n        _taxFeeOnBuy = taxFeeOnBuy;\r\n        _taxFeeOnSell = taxFeeOnSell;\r\n\r\n    }\r\n \r\n    //Set minimum tokens required to swap.\r\n    function setMinSwapTokensThreshold(uint256 swapTokensAtAmount) public onlyOwner {\r\n        _swapTokensAtAmount = swapTokensAtAmount;\r\n    }\r\n \r\n    //Set minimum tokens required to swap.\r\n    function toggleSwap(bool _swapEnabled) public onlyOwner {\r\n        swapEnabled = _swapEnabled;\r\n    }\r\n \r\n    //Set maximum transaction\r\n    function setMaxTxnAmount(uint256 maxTxAmount) public onlyOwner {\r\n           _maxTxAmount = maxTxAmount;\r\n        \r\n    }\r\n \r\n    function setMaxWalletSize(uint256 maxWalletSize) public onlyOwner {\r\n        _maxWalletSize = maxWalletSize;\r\n    }\r\n \r\n    function excludeMultipleAccountsFromFees(address[] calldata accounts, bool excluded) public onlyOwner {\r\n        for(uint256 i = 0; i < accounts.length; i++) {\r\n            _isExcludedFromFee[accounts[i]] = excluded;\r\n        }\r\n    }\r\n\r\n}",
    "etherscan_verified": true
}