{
    "address": "0x09c7dBaE0F40CBAA2BBd329397f1c5A64726a04a",
    "tx_hash": "1df47478af89d1f61a268431d3178e5651627f1108b4b8558468e66fd45b2799",
    "block_number": 18009656,
    "timestamp": 1693183619,
    "gas_used_in_creation": 4057557,
    "creation_bytecode": "6080604052600880547707ab7a81aa12c84bf81f0b6fcf324164ffd12392010000016001600160c01b031990911617905560026009819055600a55600c80546001600160a01b03191673c7a2572fa8fdb0f7e81d6d3c4e3ccf78fb0dc374179055600e805460ff1990811690915560108054909116600117905534801562000085575f80fd5b506040518060400160405280600b81526020016a426162792046696e616c6560a81b8152506040518060400160405280600681526020016542414259464960d01b8152508160039081620000da91906200080e565b506004620000e982826200080e565b50505062000106620001006200026b60201b60201c565b6200026f565b6bb1b6ef0655cb8d15d800000080620001203382620002c0565b6200012d606483620008ea565b6007556a09195731e2ce35eb000000600d556040805163c45a015560e01b81529051737a250d5630b4cf539739df2c5dacb4c659f2488d9173c02aaa39b223fe8d0a0e5c4f27ead9083c756cc291839163c45a01559160048083019260209291908290030181865afa158015620001a6573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190620001cc91906200090a565b6040516364e329cb60e11b81526001600160a01b038381166004830152306024830152919091169063c9c65396906044016020604051808303815f875af11580156200021a573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906200024091906200090a565b600680546001600160a01b0319166001600160a01b0392909216919091179055506200098392505050565b3390565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b6001600160a01b0382166200031c5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064015b60405180910390fd5b620003295f838362000392565b8060025f8282546200033c919062000939565b90915550506001600160a01b0382165f81815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b6001600160a01b0382165f908152600b602052604090205460ff16158015620003d357506001600160a01b0383165f908152600b602052604090205460ff16155b6200040f5760405162461bcd60e51b815260206004820152600b60248201526a109b1858dadb1a5cdd195960aa1b604482015260640162000313565b60085460ff1662000497576005546001600160a01b03848116911614806200044457506005546001600160a01b038381169116145b620004925760405162461bcd60e51b815260206004820152601360248201527f54726164696e67206e6f7420656e61626c656400000000000000000000000000604482015260640162000313565b505050565b600854610100900460ff1680620004bc57506006546001600160a01b03838116911614155b6200050a5760405162461bcd60e51b815260206004820152601360248201527f53656c6c696e67206e6f7420656e61626c656400000000000000000000000000604482015260640162000313565b60085462010000900460ff1680156200053057506006546001600160a01b038481169116145b15620005b5576007548162000559846001600160a01b03165f9081526020819052604090205490565b62000565919062000939565b1115620005b55760405162461bcd60e51b815260206004820152601b60248201527f4d617820686f6c64696e6720616d6f756e742065786365656465640000000000604482015260640162000313565b600e5460ff168015620005d557506006546001600160a01b038381169116145b15620006b457600d54600c546040516370a0823160e01b81526001600160a01b038681166004830152909116906370a0823190602401602060405180830381865afa15801562000627573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906200064d919062000955565b1015620006b45760405162461bcd60e51b815260206004820152602e60248201527f496e73756666696369656e742046696e616c652062616c616e636520696e207760448201526d30b63632ba103a379039b2b6361760911b606482015260840162000313565b60105460ff168015620006dd57506001600160a01b0383165f908152600f602052604090205415155b1562000492576001600160a01b0383165f908152600f60209081526040808320549183905290912054620007139083906200096d565b1015620004925760405162461bcd60e51b8152602060048201526024808201527f50726573616c6520746f6b656e73206172652063757272656e746c792066726f6044820152633d32b71760e11b606482015260840162000313565b634e487b7160e01b5f52604160045260245ffd5b600181811c908216806200079857607f821691505b602082108103620007b757634e487b7160e01b5f52602260045260245ffd5b50919050565b601f82111562000492575f81815260208120601f850160051c81016020861015620007e55750805b601f850160051c820191505b818110156200080657828155600101620007f1565b505050505050565b81516001600160401b038111156200082a576200082a6200076f565b62000842816200083b845462000783565b84620007bd565b602080601f83116001811462000878575f8415620008605750858301515b5f19600386901b1c1916600185901b17855562000806565b5f85815260208120601f198616915b82811015620008a85788860151825594840194600190910190840162000887565b5085821015620008c657878501515f19600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b5f52601160045260245ffd5b5f826200090557634e487b7160e01b5f52601260045260245ffd5b500490565b5f602082840312156200091b575f80fd5b81516001600160a01b038116811462000932575f80fd5b9392505050565b808201808211156200094f576200094f620008d6565b92915050565b5f6020828403121562000966575f80fd5b5051919050565b818103818111156200094f576200094f620008d6565b61153580620009915f395ff3fe608060405234801561000f575f80fd5b506004361061021e575f3560e01c806389f9a1d31161012a578063b4f2e8b8116100b4578063f2fde38b11610079578063f2fde38b14610498578063f9f92be4146104ab578063fb4b0d68146104cd578063fce589d8146104e1578063fd1bc2ca146104ea575f80fd5b8063b4f2e8b814610438578063dd62ed3e1461044b578063e402aa581461045e578063efe8e7b514610470578063f25f4b561461047d575f80fd5b80639985ad83116100fa5780639985ad83146103d9578063a3c0a173146103ec578063a457c2d7146103ff578063a8aa1b3114610412578063a9059cbb14610425575f80fd5b806389f9a1d31461038c5780638a204ed6146103955780638da5cb5b146103c057806395d89b41146103d1575f80fd5b806339509351116101ab5780634a2bf86f1161017b5780634a2bf86f1461032357806366c4b7821461033657806370a0823114610349578063715018a61461037157806371f4823414610379575f80fd5b806339509351146102dd57806342966c68146102f057806346742770146103035780634a13dfe714610310575f80fd5b806323b872dd116101f157806323b872dd1461028a5780632575e0041461029d57806329d428ca146102bc5780632b14ca56146102c5578063313ce567146102ce575f80fd5b806306fdde0314610222578063095ea7b314610240578063153b0d1e1461026357806318160ddd14610278575b5f80fd5b61022a6104f7565b604051610237919061121f565b60405180910390f35b61025361024e366004611285565b610587565b6040519015158152602001610237565b6102766102713660046112bc565b6105a0565b005b6002545b604051908152602001610237565b6102536102983660046112ed565b6105d2565b61027c6102ab366004611326565b600f6020525f908152604090205481565b61027c600d5481565b61027c60095481565b60405160128152602001610237565b6102536102eb366004611285565b6105f5565b6102766102fe366004611346565b610616565b6010546102539060ff1681565b61027661031e36600461135d565b610623565b610276610331366004611326565b61068e565b610276610344366004611346565b6106b8565b61027c610357366004611326565b6001600160a01b03165f9081526020819052604090205490565b6102766106c5565b6008546102539062010000900460ff1681565b61027c60075481565b600c546103a8906001600160a01b031681565b6040516001600160a01b039091168152602001610237565b6005546001600160a01b03166103a8565b61022a6106d8565b6102766103e73660046113be565b6106e7565b6102766103fa3660046113d7565b610702565b61025361040d366004611285565b610715565b6006546103a8906001600160a01b031681565b610253610433366004611285565b610794565b6102766104463660046113f7565b6107a1565b61027c610459366004611418565b6107dd565b60085461025390610100900460ff1681565b600e546102539060ff1681565b6008546103a89064010000000090046001600160a01b031681565b6102766104a6366004611326565b610807565b6102536104b9366004611326565b600b6020525f908152604090205460ff1681565b600854610253906301000000900460ff1681565b61027c600a5481565b6008546102539060ff1681565b60606003805461050690611440565b80601f016020809104026020016040519081016040528092919081815260200182805461053290611440565b801561057d5780601f106105545761010080835404028352916020019161057d565b820191905f5260205f20905b81548152906001019060200180831161056057829003601f168201915b5050505050905090565b5f3361059481858561087d565b60019150505b92915050565b6105a86109a0565b6001600160a01b03919091165f908152600b60205260409020805460ff1916911515919091179055565b5f336105df8582856109fa565b6105ea858585610a72565b506001949350505050565b5f3361059481858561060783836107dd565b610611919061148c565b61087d565b6106203382610b40565b50565b61062b6109a0565b6008805461ffff191695151561ff00191695909517610100941515949094029390931763ffff00001916620100009215159290920263ff00000019169190911763010000009115159190910217909155600e805460ff1916911515919091179055565b6106966109a0565b600c80546001600160a01b0319166001600160a01b0392909216919091179055565b6106c06109a0565b600a55565b6106cd6109a0565b6106d65f610c7b565b565b60606004805461050690611440565b6106ef6109a0565b6010805460ff1916911515919091179055565b61070a6109a0565b600791909155600d55565b5f338161072282866107dd565b9050838110156107875760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b6105ea828686840361087d565b5f33610594818585610a72565b6107a96109a0565b600991909155600880546001600160a01b0390921664010000000002640100000000600160c01b0319909216919091179055565b6001600160a01b039182165f90815260016020908152604080832093909416825291909152205490565b61080f6109a0565b6001600160a01b0381166108745760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161077e565b61062081610c7b565b6001600160a01b0383166108df5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161077e565b6001600160a01b0382166109405760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161077e565b6001600160a01b038381165f8181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6005546001600160a01b031633146106d65760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161077e565b5f610a0584846107dd565b90505f198114610a6c5781811015610a5f5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604482015260640161077e565b610a6c848484840361087d565b50505050565b6008546301000000900460ff168015610a9957506006546001600160a01b03838116911614155b15610b30575f606460095483610aaf919061149f565b610ab991906114b6565b90505f6064600a5484610acc919061149f565b610ad691906114b6565b90505f610ae383856114d5565b90505f610af083836114d5565b9050610b1287600860049054906101000a90046001600160a01b031686610ccc565b610b1c8784610b40565b610b27878783610ccc565b50505050505050565b610b3b838383610ccc565b505050565b6001600160a01b038216610ba05760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b606482015260840161077e565b610bab825f83610e79565b6001600160a01b0382165f9081526020819052604090205481811015610c1e5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b606482015260840161077e565b6001600160a01b0383165f818152602081815260408083208686039055600280548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3505050565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b6001600160a01b038316610d305760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161077e565b6001600160a01b038216610d925760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161077e565b610d9d838383610e79565b6001600160a01b0383165f9081526020819052604090205481811015610e145760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840161077e565b6001600160a01b038481165f81815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3610a6c565b6001600160a01b0382165f908152600b602052604090205460ff16158015610eb957506001600160a01b0383165f908152600b602052604090205460ff16155b610ef35760405162461bcd60e51b815260206004820152600b60248201526a109b1858dadb1a5cdd195960aa1b604482015260640161077e565b60085460ff16610f68576005546001600160a01b0384811691161480610f2657506005546001600160a01b038381169116145b610b3b5760405162461bcd60e51b8152602060048201526013602482015272151c98591a5b99c81b9bdd08195b98589b1959606a1b604482015260640161077e565b600854610100900460ff1680610f8c57506006546001600160a01b03838116911614155b610fce5760405162461bcd60e51b815260206004820152601360248201527214d95b1b1a5b99c81b9bdd08195b98589b1959606a1b604482015260640161077e565b60085462010000900460ff168015610ff357506006546001600160a01b038481169116145b15611072576007548161101a846001600160a01b03165f9081526020819052604090205490565b611024919061148c565b11156110725760405162461bcd60e51b815260206004820152601b60248201527f4d617820686f6c64696e6720616d6f756e742065786365656465640000000000604482015260640161077e565b600e5460ff16801561109157506006546001600160a01b038381169116145b1561116a57600d54600c546040516370a0823160e01b81526001600160a01b038681166004830152909116906370a0823190602401602060405180830381865afa1580156110e1573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061110591906114e8565b101561116a5760405162461bcd60e51b815260206004820152602e60248201527f496e73756666696369656e742046696e616c652062616c616e636520696e207760448201526d30b63632ba103a379039b2b6361760911b606482015260840161077e565b60105460ff16801561119257506001600160a01b0383165f908152600f602052604090205415155b15610b3b576001600160a01b0383165f908152600f602090815260408083205491839052909120546111c59083906114d5565b1015610b3b5760405162461bcd60e51b8152602060048201526024808201527f50726573616c6520746f6b656e73206172652063757272656e746c792066726f6044820152633d32b71760e11b606482015260840161077e565b5f6020808352835180828501525f5b8181101561124a5785810183015185820160400152820161122e565b505f604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b0381168114611280575f80fd5b919050565b5f8060408385031215611296575f80fd5b61129f8361126a565b946020939093013593505050565b80358015158114611280575f80fd5b5f80604083850312156112cd575f80fd5b6112d68361126a565b91506112e4602084016112ad565b90509250929050565b5f805f606084860312156112ff575f80fd5b6113088461126a565b92506113166020850161126a565b9150604084013590509250925092565b5f60208284031215611336575f80fd5b61133f8261126a565b9392505050565b5f60208284031215611356575f80fd5b5035919050565b5f805f805f60a08688031215611371575f80fd5b61137a866112ad565b9450611388602087016112ad565b9350611396604087016112ad565b92506113a4606087016112ad565b91506113b2608087016112ad565b90509295509295909350565b5f602082840312156113ce575f80fd5b61133f826112ad565b5f80604083850312156113e8575f80fd5b50508035926020909101359150565b5f8060408385031215611408575f80fd5b823591506112e46020840161126a565b5f8060408385031215611429575f80fd5b6114328361126a565b91506112e46020840161126a565b600181811c9082168061145457607f821691505b60208210810361147257634e487b7160e01b5f52602260045260245ffd5b50919050565b634e487b7160e01b5f52601160045260245ffd5b8082018082111561059a5761059a611478565b808202811582820484141761059a5761059a611478565b5f826114d057634e487b7160e01b5f52601260045260245ffd5b500490565b8181038181111561059a5761059a611478565b5f602082840312156114f8575f80fd5b505191905056fea26469706673582212202b81af3cbcb282db43b837f2a396d9f0c1c5cb43def18582b19ebb86d5e2cea064736f6c63430008150033",
    "runtime_bytecode": "608060405234801561000f575f80fd5b506004361061021e575f3560e01c806389f9a1d31161012a578063b4f2e8b8116100b4578063f2fde38b11610079578063f2fde38b14610498578063f9f92be4146104ab578063fb4b0d68146104cd578063fce589d8146104e1578063fd1bc2ca146104ea575f80fd5b8063b4f2e8b814610438578063dd62ed3e1461044b578063e402aa581461045e578063efe8e7b514610470578063f25f4b561461047d575f80fd5b80639985ad83116100fa5780639985ad83146103d9578063a3c0a173146103ec578063a457c2d7146103ff578063a8aa1b3114610412578063a9059cbb14610425575f80fd5b806389f9a1d31461038c5780638a204ed6146103955780638da5cb5b146103c057806395d89b41146103d1575f80fd5b806339509351116101ab5780634a2bf86f1161017b5780634a2bf86f1461032357806366c4b7821461033657806370a0823114610349578063715018a61461037157806371f4823414610379575f80fd5b806339509351146102dd57806342966c68146102f057806346742770146103035780634a13dfe714610310575f80fd5b806323b872dd116101f157806323b872dd1461028a5780632575e0041461029d57806329d428ca146102bc5780632b14ca56146102c5578063313ce567146102ce575f80fd5b806306fdde0314610222578063095ea7b314610240578063153b0d1e1461026357806318160ddd14610278575b5f80fd5b61022a6104f7565b604051610237919061121f565b60405180910390f35b61025361024e366004611285565b610587565b6040519015158152602001610237565b6102766102713660046112bc565b6105a0565b005b6002545b604051908152602001610237565b6102536102983660046112ed565b6105d2565b61027c6102ab366004611326565b600f6020525f908152604090205481565b61027c600d5481565b61027c60095481565b60405160128152602001610237565b6102536102eb366004611285565b6105f5565b6102766102fe366004611346565b610616565b6010546102539060ff1681565b61027661031e36600461135d565b610623565b610276610331366004611326565b61068e565b610276610344366004611346565b6106b8565b61027c610357366004611326565b6001600160a01b03165f9081526020819052604090205490565b6102766106c5565b6008546102539062010000900460ff1681565b61027c60075481565b600c546103a8906001600160a01b031681565b6040516001600160a01b039091168152602001610237565b6005546001600160a01b03166103a8565b61022a6106d8565b6102766103e73660046113be565b6106e7565b6102766103fa3660046113d7565b610702565b61025361040d366004611285565b610715565b6006546103a8906001600160a01b031681565b610253610433366004611285565b610794565b6102766104463660046113f7565b6107a1565b61027c610459366004611418565b6107dd565b60085461025390610100900460ff1681565b600e546102539060ff1681565b6008546103a89064010000000090046001600160a01b031681565b6102766104a6366004611326565b610807565b6102536104b9366004611326565b600b6020525f908152604090205460ff1681565b600854610253906301000000900460ff1681565b61027c600a5481565b6008546102539060ff1681565b60606003805461050690611440565b80601f016020809104026020016040519081016040528092919081815260200182805461053290611440565b801561057d5780601f106105545761010080835404028352916020019161057d565b820191905f5260205f20905b81548152906001019060200180831161056057829003601f168201915b5050505050905090565b5f3361059481858561087d565b60019150505b92915050565b6105a86109a0565b6001600160a01b03919091165f908152600b60205260409020805460ff1916911515919091179055565b5f336105df8582856109fa565b6105ea858585610a72565b506001949350505050565b5f3361059481858561060783836107dd565b610611919061148c565b61087d565b6106203382610b40565b50565b61062b6109a0565b6008805461ffff191695151561ff00191695909517610100941515949094029390931763ffff00001916620100009215159290920263ff00000019169190911763010000009115159190910217909155600e805460ff1916911515919091179055565b6106966109a0565b600c80546001600160a01b0319166001600160a01b0392909216919091179055565b6106c06109a0565b600a55565b6106cd6109a0565b6106d65f610c7b565b565b60606004805461050690611440565b6106ef6109a0565b6010805460ff1916911515919091179055565b61070a6109a0565b600791909155600d55565b5f338161072282866107dd565b9050838110156107875760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b6105ea828686840361087d565b5f33610594818585610a72565b6107a96109a0565b600991909155600880546001600160a01b0390921664010000000002640100000000600160c01b0319909216919091179055565b6001600160a01b039182165f90815260016020908152604080832093909416825291909152205490565b61080f6109a0565b6001600160a01b0381166108745760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161077e565b61062081610c7b565b6001600160a01b0383166108df5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161077e565b6001600160a01b0382166109405760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161077e565b6001600160a01b038381165f8181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6005546001600160a01b031633146106d65760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161077e565b5f610a0584846107dd565b90505f198114610a6c5781811015610a5f5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604482015260640161077e565b610a6c848484840361087d565b50505050565b6008546301000000900460ff168015610a9957506006546001600160a01b03838116911614155b15610b30575f606460095483610aaf919061149f565b610ab991906114b6565b90505f6064600a5484610acc919061149f565b610ad691906114b6565b90505f610ae383856114d5565b90505f610af083836114d5565b9050610b1287600860049054906101000a90046001600160a01b031686610ccc565b610b1c8784610b40565b610b27878783610ccc565b50505050505050565b610b3b838383610ccc565b505050565b6001600160a01b038216610ba05760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b606482015260840161077e565b610bab825f83610e79565b6001600160a01b0382165f9081526020819052604090205481811015610c1e5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b606482015260840161077e565b6001600160a01b0383165f818152602081815260408083208686039055600280548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3505050565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b6001600160a01b038316610d305760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161077e565b6001600160a01b038216610d925760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161077e565b610d9d838383610e79565b6001600160a01b0383165f9081526020819052604090205481811015610e145760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840161077e565b6001600160a01b038481165f81815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3610a6c565b6001600160a01b0382165f908152600b602052604090205460ff16158015610eb957506001600160a01b0383165f908152600b602052604090205460ff16155b610ef35760405162461bcd60e51b815260206004820152600b60248201526a109b1858dadb1a5cdd195960aa1b604482015260640161077e565b60085460ff16610f68576005546001600160a01b0384811691161480610f2657506005546001600160a01b038381169116145b610b3b5760405162461bcd60e51b8152602060048201526013602482015272151c98591a5b99c81b9bdd08195b98589b1959606a1b604482015260640161077e565b600854610100900460ff1680610f8c57506006546001600160a01b03838116911614155b610fce5760405162461bcd60e51b815260206004820152601360248201527214d95b1b1a5b99c81b9bdd08195b98589b1959606a1b604482015260640161077e565b60085462010000900460ff168015610ff357506006546001600160a01b038481169116145b15611072576007548161101a846001600160a01b03165f9081526020819052604090205490565b611024919061148c565b11156110725760405162461bcd60e51b815260206004820152601b60248201527f4d617820686f6c64696e6720616d6f756e742065786365656465640000000000604482015260640161077e565b600e5460ff16801561109157506006546001600160a01b038381169116145b1561116a57600d54600c546040516370a0823160e01b81526001600160a01b038681166004830152909116906370a0823190602401602060405180830381865afa1580156110e1573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061110591906114e8565b101561116a5760405162461bcd60e51b815260206004820152602e60248201527f496e73756666696369656e742046696e616c652062616c616e636520696e207760448201526d30b63632ba103a379039b2b6361760911b606482015260840161077e565b60105460ff16801561119257506001600160a01b0383165f908152600f602052604090205415155b15610b3b576001600160a01b0383165f908152600f602090815260408083205491839052909120546111c59083906114d5565b1015610b3b5760405162461bcd60e51b8152602060048201526024808201527f50726573616c6520746f6b656e73206172652063757272656e746c792066726f6044820152633d32b71760e11b606482015260840161077e565b5f6020808352835180828501525f5b8181101561124a5785810183015185820160400152820161122e565b505f604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b0381168114611280575f80fd5b919050565b5f8060408385031215611296575f80fd5b61129f8361126a565b946020939093013593505050565b80358015158114611280575f80fd5b5f80604083850312156112cd575f80fd5b6112d68361126a565b91506112e4602084016112ad565b90509250929050565b5f805f606084860312156112ff575f80fd5b6113088461126a565b92506113166020850161126a565b9150604084013590509250925092565b5f60208284031215611336575f80fd5b61133f8261126a565b9392505050565b5f60208284031215611356575f80fd5b5035919050565b5f805f805f60a08688031215611371575f80fd5b61137a866112ad565b9450611388602087016112ad565b9350611396604087016112ad565b92506113a4606087016112ad565b91506113b2608087016112ad565b90509295509295909350565b5f602082840312156113ce575f80fd5b61133f826112ad565b5f80604083850312156113e8575f80fd5b50508035926020909101359150565b5f8060408385031215611408575f80fd5b823591506112e46020840161126a565b5f8060408385031215611429575f80fd5b6114328361126a565b91506112e46020840161126a565b600181811c9082168061145457607f821691505b60208210810361147257634e487b7160e01b5f52602260045260245ffd5b50919050565b634e487b7160e01b5f52601160045260245ffd5b8082018082111561059a5761059a611478565b808202811582820484141761059a5761059a611478565b5f826114d057634e487b7160e01b5f52601260045260245ffd5b500490565b8181038181111561059a5761059a611478565b5f602082840312156114f8575f80fd5b505191905056fea26469706673582212202b81af3cbcb282db43b837f2a396d9f0c1c5cb43def18582b19ebb86d5e2cea064736f6c63430008150033",
    "contract_name": "BabyFinale",
    "compiler_version": "v0.8.21+commit.d9974bed",
    "optimization_used": "1",
    "runs": "200",
    "abi": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"blacklist\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"burnFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeWallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"limitOn\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxHoldingAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"presaleBalancesStore\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"presaleHolderLock\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"requiredToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_requiredToken\",\"type\":\"address\"}],\"name\":\"requiredTokenAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"requiredTokenAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"requiredTokenRuleOn\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sellFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sellingOn\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_maxHoldingAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_requiredTokenAmount\",\"type\":\"uint256\"}],\"name\":\"setAmmounts\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_isBlacklisted\",\"type\":\"bool\"}],\"name\":\"setBlacklist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_tradingOn\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"_sellingOn\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"_limitOn\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"_transferTaxOn\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"_requiredTokenRuleOn\",\"type\":\"bool\"}],\"name\":\"setBools\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_burnFee\",\"type\":\"uint256\"}],\"name\":\"setBurn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_sellFee\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_feeWallet\",\"type\":\"address\"}],\"name\":\"setFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_presaleHolderLock\",\"type\":\"bool\"}],\"name\":\"setPresaleHolderLock\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tradingOn\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"transferTaxOn\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]",
    "source_code": "{\"babyFinale.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity \\u003e=0.8.0;\\n\\n/*\\n\\n \u2584\u2584\u2584\u2584    \u2584\u2584\u2584       \u2584\u2584\u2584\u2584 \u2593\u2588\u2588   \u2588\u2588\u2593              \\n\u2593\u2588\u2588\u2588\u2588\u2588\u2584 \u2592\u2588\u2588\u2588\u2588\u2584    \u2593\u2588\u2588\u2588\u2588\u2588\u2584\u2592\u2588\u2588  \u2588\u2588\u2592              \\n\u2592\u2588\u2588\u2592 \u2584\u2588\u2588\u2592\u2588\u2588  \u2580\u2588\u2584  \u2592\u2588\u2588\u2592 \u2584\u2588\u2588\u2592\u2588\u2588 \u2588\u2588\u2591              \\n\u2592\u2588\u2588\u2591\u2588\u2580  \u2591\u2588\u2588\u2584\u2584\u2584\u2584\u2588\u2588 \u2592\u2588\u2588\u2591\u2588\u2580  \u2591 \u2590\u2588\u2588\u2593\u2591              \\n\u2591\u2593\u2588  \u2580\u2588\u2593 \u2593\u2588   \u2593\u2588\u2588\u2592\u2591\u2593\u2588  \u2580\u2588\u2593\u2591 \u2588\u2588\u2592\u2593\u2591              \\n\u2591\u2592\u2593\u2588\u2588\u2588\u2580\u2592 \u2592\u2592   \u2593\u2592\u2588\u2591\u2591\u2592\u2593\u2588\u2588\u2588\u2580\u2592 \u2588\u2588\u2592\u2592\u2592               \\n\u2592\u2591\u2592   \u2591   \u2592   \u2592\u2592 \u2591\u2592\u2591\u2592   \u2591\u2593\u2588\u2588 \u2591\u2592\u2591               \\n \u2591    \u2591   \u2591   \u2592    \u2591    \u2591\u2592 \u2592 \u2591\u2591                \\n \u2591            \u2591  \u2591 \u2591     \u2591 \u2591                   \\n  \u2588\u2588\u2588\u2588\u2588\u2592\u2588\u2588\u2593 \u2588\u2588\u2588\u2584    \u2588  \u2584\u2584\u2584 \u2591     \u2588\u2588\u2593    \u2593\u2588\u2588\u2588\u2588\u2588 \\n\u2593\u2588\u2588   \u2592\u2593\u2588\u2588\u2592 \u2588\u2588 \u2580\u2588   \u2588 \u2592\u2588\u2588\u2588\u2588\u2584    \u2593\u2588\u2588\u2592    \u2593\u2588   \u2580 \\n\u2592\u2588\u2588\u2588\u2588 \u2591\u2592\u2588\u2588\u2592\u2593\u2588\u2588  \u2580\u2588 \u2588\u2588\u2592\u2592\u2588\u2588  \u2580\u2588\u2584  \u2592\u2588\u2588\u2591    \u2592\u2588\u2588\u2588   \\n\u2591\u2593\u2588\u2592  \u2591\u2591\u2588\u2588\u2591\u2593\u2588\u2588\u2592  \u2590\u258c\u2588\u2588\u2592\u2591\u2588\u2588\u2584\u2584\u2584\u2584\u2588\u2588 \u2592\u2588\u2588\u2591    \u2592\u2593\u2588  \u2584 \\n\u2591\u2592\u2588\u2591   \u2591\u2588\u2588\u2591\u2592\u2588\u2588\u2591   \u2593\u2588\u2588\u2591 \u2593\u2588   \u2593\u2588\u2588\u2592\u2591\u2588\u2588\u2588\u2588\u2588\u2588\u2592\u2591\u2592\u2588\u2588\u2588\u2588\u2592\\n \u2592 \u2591   \u2591\u2593  \u2591 \u2592\u2591   \u2592 \u2592  \u2592\u2592   \u2593\u2592\u2588\u2591\u2591 \u2592\u2591\u2593  \u2591\u2591\u2591 \u2592\u2591 \u2591\\n \u2591      \u2592 \u2591\u2591 \u2591\u2591   \u2591 \u2592\u2591  \u2592   \u2592\u2592 \u2591\u2591 \u2591 \u2592  \u2591 \u2591 \u2591  \u2591\\n \u2591 \u2591    \u2592 \u2591   \u2591   \u2591 \u2591   \u2591   \u2592     \u2591 \u2591      \u2591   \\n        \u2591           \u2591       \u2591  \u2591    \u2591  \u2591   \u2591  \u2591\\n\\n*/\\n\\n// Importing the interfaces for the ERC20 token and Ownable function\\nimport \\\"./ERC20.sol\\\";\\nimport \\\"./Ownable.sol\\\";\\nimport \\\"./IUniswapV2Factory.sol\\\";\\nimport \\\"./IUniswapV2Router02.sol\\\";\\n\\n// Defining the contract Finale, which is a type of ERC20 token and has Ownable properties\\ncontract BabyFinale is ERC20, Ownable {\\n   \\n    address public pair;\\n    uint256 public maxHoldingAmount;\\n    bool public tradingOn = true;\\n    bool public sellingOn = false;\\n    bool public limitOn = false;\\n    bool public transferTaxOn = true;\\n\\n    address public feeWallet = 0x07Ab7a81aA12C84Bf81f0B6fcF324164FfD12392;\\n    uint256 public sellFee = 2;\\n    uint256 public burnFee = 2;\\n\\n    mapping(address =\\u003e bool) public blacklist;\\n\\n    address public requiredToken = 0xC7a2572fA8FDB0f7E81d6D3c4e3CCF78FB0DC374;\\n    uint256 public requiredTokenAmount;\\n    bool public requiredTokenRuleOn = false;\\n    \\n    mapping(address =\\u003e uint256) public presaleBalancesStore;\\n    bool public presaleHolderLock = true;\\n   \\n    constructor() ERC20(\\\"Baby Finale\\\", \\\"BABYFI\\\") {\\n        uint256 _totalSupply = 55000000000000000000000000000;\\n        uint256 remainingSupply = _totalSupply;\\n        _mint(msg.sender, remainingSupply);\\n\\n        maxHoldingAmount = _totalSupply / 100;\\n        requiredTokenAmount = (55 * 10**9 * 10**18) / 5000;\\n\\n       \\n        address ROUTER = 0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D;\\n        address WETH = 0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2;\\n       \\n        pair = IUniswapV2Factory(IUniswapV2Router02(ROUTER).factory()).createPair(WETH, address(this));\\n    }\\n\\n   \\n    function setBlacklist(address _address, bool _isBlacklisted) external onlyOwner {\\n        blacklist[_address] = _isBlacklisted;\\n    }\\n\\n    function burn(uint256 amount) external {\\n        _burn(msg.sender, amount);\\n    }\\n\\n    function setBools(\\n        bool _tradingOn,\\n        bool _sellingOn,\\n        bool _limitOn,\\n        bool _transferTaxOn,\\n        bool _requiredTokenRuleOn\\n    ) external onlyOwner {\\n        tradingOn = _tradingOn;\\n        sellingOn = _sellingOn;\\n        limitOn = _limitOn;\\n        transferTaxOn = _transferTaxOn;\\n        requiredTokenRuleOn = _requiredTokenRuleOn;\\n    }\\n\\n    function setAmmounts(\\n        uint256 _maxHoldingAmount,\\n        uint256 _requiredTokenAmount\\n    ) external onlyOwner {\\n        maxHoldingAmount = _maxHoldingAmount;\\n        requiredTokenAmount = _requiredTokenAmount;\\n    }\\n\\n    function setFee(\\n        uint256 _sellFee,\\n        address _feeWallet\\n    ) external onlyOwner {\\n        sellFee = _sellFee;\\n        feeWallet = _feeWallet;\\n    }\\n\\n    function requiredTokenAddress(\\n        address _requiredToken\\n    ) external onlyOwner {\\n        requiredToken = _requiredToken;\\n    }\\n\\n    function setBurn(\\n        uint256 _burnFee\\n    ) external onlyOwner {\\n        burnFee = _burnFee;\\n    }\\n\\n   \\n    function setPresaleHolderLock(bool _presaleHolderLock) external onlyOwner {\\n        presaleHolderLock = _presaleHolderLock;\\n    }\\n\\n   \\n    function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual override {\\n       \\n        require(!blacklist[to] \\u0026\\u0026 !blacklist[from], \\\"Blacklisted\\\");\\n       \\n        if (!tradingOn) {\\n            require(from == owner() || to == owner(), \\\"Trading not enabled\\\");\\n        } else {\\n           \\n            require(sellingOn || to != pair, \\\"Selling not enabled\\\");\\n\\n           \\n            if (limitOn \\u0026\\u0026 from == pair) {\\n                require(\\n                    super.balanceOf(to) + amount \\u003c= maxHoldingAmount,\\n                    \\\"Max holding amount exceeded\\\"\\n                );\\n            }\\n\\n           \\n            if (requiredTokenRuleOn \\u0026\\u0026 to == pair) {\\n                require(\\n                    IERC20(requiredToken).balanceOf(from) \\u003e= requiredTokenAmount, \\\"Insufficient Finale balance in wallet to sell.\\\"\\n                );\\n            }\\n\\n           \\n            if (presaleHolderLock \\u0026\\u0026 presaleBalancesStore[from] \\u003e 0) {\\n                require(\\n                    super.balanceOf(from) - amount \\u003e= presaleBalancesStore[from],\\n                    \\\"Presale tokens are currently frozen.\\\"\\n                );\\n            }\\n        }\\n    }\\n\\n    function _transfer(address sender, address recipient, uint256 amount) internal virtual override {\\n        if (transferTaxOn \\u0026\\u0026 recipient != pair) {\\n            uint256 feeAmount = (amount * sellFee) / 100;\\n            uint256 burnAmount = (amount * burnFee) / 100;\\n\\n            uint256 amountAfterFee = amount - feeAmount;\\n            uint256 amountAfterBurn = amountAfterFee - burnAmount;\\n\\n            super._transfer(sender, feeWallet, feeAmount);\\n            _burn(sender, burnAmount);\\n\\n            super._transfer(sender, recipient, amountAfterBurn);\\n        } else {\\n            super._transfer(sender, recipient, amount);\\n        }\\n    }\\n}\\n\"},\"Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\"},\"ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC20.sol\\\";\\nimport \\\"./IERC20Metadata.sol\\\";\\nimport \\\"./Context.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n * For a generic mechanism see {ERC20PresetMinterPauser}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC20\\n * applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn\\u0027t required by the specification.\\n *\\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\\n * functions have been added to mitigate the well-known issues around setting\\n * allowances. See {IERC20-approve}.\\n */\\ncontract ERC20 is Context, IERC20, IERC20Metadata {\\n    mapping(address =\\u003e uint256) private _balances;\\n\\n    mapping(address =\\u003e mapping(address =\\u003e uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * The default value of {decimals} is 18. To select a different value for\\n     * {decimals} you should overload it.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\\n     * overridden;\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual override returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual override returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual override returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - the caller must have a balance of at least `amount`.\\n     */\\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * NOTE: Does not update the allowance if the current allowance\\n     * is the maximum `uint256`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` and `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     * - the caller must have allowance for ``from``\\u0027s tokens of at least\\n     * `amount`.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) public virtual override returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, amount);\\n        _transfer(from, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `spender` must have allowance for the caller of at least\\n     * `subtractedValue`.\\n     */\\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        uint256 currentAllowance = allowance(owner, spender);\\n        require(currentAllowance \\u003e= subtractedValue, \\\"ERC20: decreased allowance below zero\\\");\\n        unchecked {\\n            _approve(owner, spender, currentAllowance - subtractedValue);\\n        }\\n\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves `amount` of tokens from `from` to `to`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     */\\n    function _transfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {\\n        require(from != address(0), \\\"ERC20: transfer from the zero address\\\");\\n        require(to != address(0), \\\"ERC20: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(from, to, amount);\\n\\n        uint256 fromBalance = _balances[from];\\n        require(fromBalance \\u003e= amount, \\\"ERC20: transfer amount exceeds balance\\\");\\n        unchecked {\\n            _balances[from] = fromBalance - amount;\\n            // Overflow not possible: the sum of all balances is capped by totalSupply, and the sum is preserved by\\n            // decrementing then incrementing.\\n            _balances[to] += amount;\\n        }\\n\\n        emit Transfer(from, to, amount);\\n\\n        _afterTokenTransfer(from, to, amount);\\n    }\\n\\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\\n     * the total supply.\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     */\\n    function _mint(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: mint to the zero address\\\");\\n\\n        _beforeTokenTransfer(address(0), account, amount);\\n\\n        _totalSupply += amount;\\n        unchecked {\\n            // Overflow not possible: balance + amount is at most totalSupply + amount, which is checked above.\\n            _balances[account] += amount;\\n        }\\n        emit Transfer(address(0), account, amount);\\n\\n        _afterTokenTransfer(address(0), account, amount);\\n    }\\n\\n    /**\\n     * @dev Destroys `amount` tokens from `account`, reducing the\\n     * total supply.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     * - `account` must have at least `amount` tokens.\\n     */\\n    function _burn(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: burn from the zero address\\\");\\n\\n        _beforeTokenTransfer(account, address(0), amount);\\n\\n        uint256 accountBalance = _balances[account];\\n        require(accountBalance \\u003e= amount, \\\"ERC20: burn amount exceeds balance\\\");\\n        unchecked {\\n            _balances[account] = accountBalance - amount;\\n            // Overflow not possible: amount \\u003c= accountBalance \\u003c= totalSupply.\\n            _totalSupply -= amount;\\n        }\\n\\n        emit Transfer(account, address(0), amount);\\n\\n        _afterTokenTransfer(account, address(0), amount);\\n    }\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     */\\n    function _approve(\\n        address owner,\\n        address spender,\\n        uint256 amount\\n    ) internal virtual {\\n        require(owner != address(0), \\\"ERC20: approve from the zero address\\\");\\n        require(spender != address(0), \\\"ERC20: approve to the zero address\\\");\\n\\n        _allowances[owner][spender] = amount;\\n        emit Approval(owner, spender, amount);\\n    }\\n\\n    /**\\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\\n     *\\n     * Does not update the allowance amount in case of infinite allowance.\\n     * Revert if not enough allowance is available.\\n     *\\n     * Might emit an {Approval} event.\\n     */\\n    function _spendAllowance(\\n        address owner,\\n        address spender,\\n        uint256 amount\\n    ) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance != type(uint256).max) {\\n            require(currentAllowance \\u003e= amount, \\\"ERC20: insufficient allowance\\\");\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - amount);\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``\\u0027s tokens\\n     * will be transferred to `to`.\\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``\\u0027s tokens will be burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {}\\n\\n    /**\\n     * @dev Hook that is called after any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``\\u0027s tokens\\n     * has been transferred to `to`.\\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``\\u0027s tokens have been burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _afterTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {}\\n}\"},\"IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller\\u0027s account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller\\u0027s tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender\\u0027s allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller\\u0027s\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\"},\"IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\"},\"IUniswapV2Factory.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity \\u003e=0.5.0;\\n\\ninterface IUniswapV2Factory {\\n    event PairCreated(address indexed token0, address indexed token1, address pair, uint);\\n\\n    function feeTo() external view returns (address);\\n    function feeToSetter() external view returns (address);\\n\\n    function getPair(address tokenA, address tokenB) external view returns (address pair);\\n    function allPairs(uint) external view returns (address pair);\\n    function allPairsLength() external view returns (uint);\\n\\n    function createPair(address tokenA, address tokenB) external returns (address pair);\\n\\n    function setFeeTo(address) external;\\n    function setFeeToSetter(address) external;\\n}\"},\"IUniswapV2Router01.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity \\u003e=0.6.2;\\n\\ninterface IUniswapV2Router01 {\\n    function factory() external pure returns (address);\\n    function WETH() external pure returns (address);\\n\\n    function addLiquidity(\\n        address tokenA,\\n        address tokenB,\\n        uint amountADesired,\\n        uint amountBDesired,\\n        uint amountAMin,\\n        uint amountBMin,\\n        address to,\\n        uint deadline\\n    ) external returns (uint amountA, uint amountB, uint liquidity);\\n    function addLiquidityETH(\\n        address token,\\n        uint amountTokenDesired,\\n        uint amountTokenMin,\\n        uint amountETHMin,\\n        address to,\\n        uint deadline\\n    ) external payable returns (uint amountToken, uint amountETH, uint liquidity);\\n    function removeLiquidity(\\n        address tokenA,\\n        address tokenB,\\n        uint liquidity,\\n        uint amountAMin,\\n        uint amountBMin,\\n        address to,\\n        uint deadline\\n    ) external returns (uint amountA, uint amountB);\\n    function removeLiquidityETH(\\n        address token,\\n        uint liquidity,\\n        uint amountTokenMin,\\n        uint amountETHMin,\\n        address to,\\n        uint deadline\\n    ) external returns (uint amountToken, uint amountETH);\\n    function removeLiquidityWithPermit(\\n        address tokenA,\\n        address tokenB,\\n        uint liquidity,\\n        uint amountAMin,\\n        uint amountBMin,\\n        address to,\\n        uint deadline,\\n        bool approveMax, uint8 v, bytes32 r, bytes32 s\\n    ) external returns (uint amountA, uint amountB);\\n    function removeLiquidityETHWithPermit(\\n        address token,\\n        uint liquidity,\\n        uint amountTokenMin,\\n        uint amountETHMin,\\n        address to,\\n        uint deadline,\\n        bool approveMax, uint8 v, bytes32 r, bytes32 s\\n    ) external returns (uint amountToken, uint amountETH);\\n    function swapExactTokensForTokens(\\n        uint amountIn,\\n        uint amountOutMin,\\n        address[] calldata path,\\n        address to,\\n        uint deadline\\n    ) external returns (uint[] memory amounts);\\n    function swapTokensForExactTokens(\\n        uint amountOut,\\n        uint amountInMax,\\n        address[] calldata path,\\n        address to,\\n        uint deadline\\n    ) external returns (uint[] memory amounts);\\n    function swapExactETHForTokens(uint amountOutMin, address[] calldata path, address to, uint deadline)\\n        external\\n        payable\\n        returns (uint[] memory amounts);\\n    function swapTokensForExactETH(uint amountOut, uint amountInMax, address[] calldata path, address to, uint deadline)\\n        external\\n        returns (uint[] memory amounts);\\n    function swapExactTokensForETH(uint amountIn, uint amountOutMin, address[] calldata path, address to, uint deadline)\\n        external\\n        returns (uint[] memory amounts);\\n    function swapETHForExactTokens(uint amountOut, address[] calldata path, address to, uint deadline)\\n        external\\n        payable\\n        returns (uint[] memory amounts);\\n\\n    function quote(uint amountA, uint reserveA, uint reserveB) external pure returns (uint amountB);\\n    function getAmountOut(uint amountIn, uint reserveIn, uint reserveOut) external pure returns (uint amountOut);\\n    function getAmountIn(uint amountOut, uint reserveIn, uint reserveOut) external pure returns (uint amountIn);\\n    function getAmountsOut(uint amountIn, address[] calldata path) external view returns (uint[] memory amounts);\\n    function getAmountsIn(uint amountOut, address[] calldata path) external view returns (uint[] memory amounts);\\n}\"},\"IUniswapV2Router02.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity \\u003e=0.6.2;\\n\\nimport \\u0027./IUniswapV2Router01.sol\\u0027;\\n\\ninterface IUniswapV2Router02 is IUniswapV2Router01 {\\n    function removeLiquidityETHSupportingFeeOnTransferTokens(\\n        address token,\\n        uint liquidity,\\n        uint amountTokenMin,\\n        uint amountETHMin,\\n        address to,\\n        uint deadline\\n    ) external returns (uint amountETH);\\n    function removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(\\n        address token,\\n        uint liquidity,\\n        uint amountTokenMin,\\n        uint amountETHMin,\\n        address to,\\n        uint deadline,\\n        bool approveMax, uint8 v, bytes32 r, bytes32 s\\n    ) external returns (uint amountETH);\\n\\n    function swapExactTokensForTokensSupportingFeeOnTransferTokens(\\n        uint amountIn,\\n        uint amountOutMin,\\n        address[] calldata path,\\n        address to,\\n        uint deadline\\n    ) external;\\n    function swapExactETHForTokensSupportingFeeOnTransferTokens(\\n        uint amountOutMin,\\n        address[] calldata path,\\n        address to,\\n        uint deadline\\n    ) external payable;\\n    function swapExactTokensForETHSupportingFeeOnTransferTokens(\\n        uint amountIn,\\n        uint amountOutMin,\\n        address[] calldata path,\\n        address to,\\n        uint deadline\\n    ) external;\\n}\"},\"Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\"}}",
    "etherscan_verified": true
}