{
    "address": "0xe4a62805E925F427A0429586fFEf8b2647a3a534",
    "tx_hash": "ae45b2d7def91c488516771de3ce4d53f1582f869c939f95caae6ad0a23325e4",
    "block_number": 18009323,
    "timestamp": 1693179539,
    "gas_used_in_creation": 750341,
    "creation_bytecode": "608060405260008055600180553480156200001957600080fd5b50620000286012600a620001e3565b6200003790620f4240620001fb565b3360008181526002602090815260408083209490945530825260038152838220737a250d5630b4cf539739df2c5dacb4c659f2488d835290529182206000199055907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef620000a86012600a620001e3565b620000b790620f4240620001fb565b60405190815260200160405180910390a362000215565b634e487b7160e01b600052601160045260246000fd5b600181815b8085111562000125578160001904821115620001095762000109620000ce565b808516156200011757918102915b93841c9390800290620000e9565b509250929050565b6000826200013e57506001620001dd565b816200014d57506000620001dd565b8160018114620001665760028114620001715762000191565b6001915050620001dd565b60ff841115620001855762000185620000ce565b50506001821b620001dd565b5060208310610133831016604e8410600b8410161715620001b6575081810a620001dd565b620001c28383620000e4565b8060001904821115620001d957620001d9620000ce565b0290505b92915050565b6000620001f460ff8416836200012d565b9392505050565b8082028115828204841417620001dd57620001dd620000ce565b610b2e80620002256000396000f3fe6080604052600436106100a05760003560e01c8063313ce56711610064578063313ce5671461018e57806370a08231146101b557806395d89b41146101e2578063a9059cbb14610214578063c9567bf914610234578063dd62ed3e1461024957600080fd5b806306fdde03146100ac578063095ea7b3146100f957806318160ddd1461012957806321ecff5b1461014c57806323b872dd1461016e57600080fd5b366100a757005b600080fd5b3480156100b857600080fd5b506100e36040518060400160405280600b81526020016a29ba37b735b99021b7b4b760a91b81525081565b6040516100f091906107c9565b60405180910390f35b34801561010557600080fd5b50610119610114366004610833565b610281565b60405190151581526020016100f0565b34801561013557600080fd5b5061013e6102ee565b6040519081526020016100f0565b34801561015857600080fd5b5061016c61016736600461085d565b61030a565b005b34801561017a57600080fd5b5061011961018936600461087f565b610335565b34801561019a57600080fd5b506101a3601281565b60405160ff90911681526020016100f0565b3480156101c157600080fd5b5061013e6101d03660046108bb565b60026020526000908152604090205481565b3480156101ee57600080fd5b506100e36040518060400160405280600681526020016553544f4e4b5360d01b81525081565b34801561022057600080fd5b5061011961022f366004610833565b610383565b34801561024057600080fd5b5061016c610397565b34801561025557600080fd5b5061013e6102643660046108d6565b600360209081526000928352604080842090915290825290205481565b3360008181526003602090815260408083206001600160a01b038716808552925280832085905551919290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925906102dc9086815260200190565b60405180910390a35060015b92915050565b6102fa6012600a610a03565b61030790620f4240610a12565b81565b737182500ae7e73933a0d74e8b225e46585155010219330161033157600091909155600155565b5050565b6001600160a01b038316600090815260036020908152604080832033845290915281208054839190839061036a908490610a29565b9091555061037b90508484846103e3565b949350505050565b60006103903384846103e3565b9392505050565b600454600160a81b900460ff16156103ae57600080fd5b33737182500ae7e73933a0d74e8b225e465851550103146103ce57600080fd5b6004805460ff60a81b1916600160a81b179055565b600454600090600160a81b900460ff168061041a57506001600160a01b038416737182500ae7e73933a0d74e8b225e465851550103145b8061044157506001600160a01b038316737182500ae7e73933a0d74e8b225e465851550103145b61044a57600080fd5b600454600160a81b900460ff1615801561046d57506004546001600160a01b0316155b80156104795750600082115b1561049a57600480546001600160a01b0319166001600160a01b0385161790555b6001600160a01b038416600090815260026020526040812080548492906104c2908490610a29565b90915550506004546001600160a01b0384811691161480156104ee5750600454600160a01b900460ff16155b801561052d575060646105036012600a610a03565b61051090620f4240610a12565b61051a9190610a3c565b3060009081526002602052604090205410155b156106c1576004805460ff60a01b1916600160a01b179055604080516002808252606082018352600092602083019080368337019050509050308160008151811061057a5761057a610a5e565b60200260200101906001600160a01b031690816001600160a01b03168152505073c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2816001815181106105c2576105c2610a5e565b6001600160a01b0390921660209283029190910190910152737a250d5630b4cf539739df2c5dacb4c659f2488d63791ac94760646106026012600a610a03565b61060f90620f4240610a12565b6106199190610a3c565b60008430426040518663ffffffff1660e01b815260040161063e959493929190610a74565b600060405180830381600087803b15801561065857600080fd5b505af115801561066c573d6000803e3d6000fd5b5050604051737182500ae7e73933a0d74e8b225e46585155010392504780156108fc029250906000818181858888f193505050501580156106b1573d6000803e3d6000fd5b50506004805460ff60a01b191690555b6001600160a01b0384163014610743576004546000906064906001600160a01b038781169116146106f4576001546106f8565b6000545b6107029085610a12565b61070c9190610a3c565b90506107188184610a29565b3060009081526002602052604081208054929550839290919061073c908490610ae5565b9091555050505b6001600160a01b0383166000908152600260205260408120805484929061076b908490610ae5565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516107b791815260200190565b60405180910390a35060019392505050565b600060208083528351808285015260005b818110156107f6578581018301518582016040015282016107da565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b038116811461082e57600080fd5b919050565b6000806040838503121561084657600080fd5b61084f83610817565b946020939093013593505050565b6000806040838503121561087057600080fd5b50508035926020909101359150565b60008060006060848603121561089457600080fd5b61089d84610817565b92506108ab60208501610817565b9150604084013590509250925092565b6000602082840312156108cd57600080fd5b61039082610817565b600080604083850312156108e957600080fd5b6108f283610817565b915061090060208401610817565b90509250929050565b634e487b7160e01b600052601160045260246000fd5b600181815b8085111561095a57816000190482111561094057610940610909565b8085161561094d57918102915b93841c9390800290610924565b509250929050565b600082610971575060016102e8565b8161097e575060006102e8565b8160018114610994576002811461099e576109ba565b60019150506102e8565b60ff8411156109af576109af610909565b50506001821b6102e8565b5060208310610133831016604e8410600b84101617156109dd575081810a6102e8565b6109e7838361091f565b80600019048211156109fb576109fb610909565b029392505050565b600061039060ff841683610962565b80820281158282048414176102e8576102e8610909565b818103818111156102e8576102e8610909565b600082610a5957634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052603260045260246000fd5b600060a082018783526020878185015260a0604085015281875180845260c086019150828901935060005b81811015610ac45784516001600160a01b031683529383019391830191600101610a9f565b50506001600160a01b03969096166060850152505050608001529392505050565b808201808211156102e8576102e861090956fea264697066735822122001adfb050768bbdd7362f062bf355bfb308c9069fad40a5110ddcdb13105019e64736f6c63430008110033",
    "runtime_bytecode": "6080604052600436106100a05760003560e01c8063313ce56711610064578063313ce5671461018e57806370a08231146101b557806395d89b41146101e2578063a9059cbb14610214578063c9567bf914610234578063dd62ed3e1461024957600080fd5b806306fdde03146100ac578063095ea7b3146100f957806318160ddd1461012957806321ecff5b1461014c57806323b872dd1461016e57600080fd5b366100a757005b600080fd5b3480156100b857600080fd5b506100e36040518060400160405280600b81526020016a29ba37b735b99021b7b4b760a91b81525081565b6040516100f091906107c9565b60405180910390f35b34801561010557600080fd5b50610119610114366004610833565b610281565b60405190151581526020016100f0565b34801561013557600080fd5b5061013e6102ee565b6040519081526020016100f0565b34801561015857600080fd5b5061016c61016736600461085d565b61030a565b005b34801561017a57600080fd5b5061011961018936600461087f565b610335565b34801561019a57600080fd5b506101a3601281565b60405160ff90911681526020016100f0565b3480156101c157600080fd5b5061013e6101d03660046108bb565b60026020526000908152604090205481565b3480156101ee57600080fd5b506100e36040518060400160405280600681526020016553544f4e4b5360d01b81525081565b34801561022057600080fd5b5061011961022f366004610833565b610383565b34801561024057600080fd5b5061016c610397565b34801561025557600080fd5b5061013e6102643660046108d6565b600360209081526000928352604080842090915290825290205481565b3360008181526003602090815260408083206001600160a01b038716808552925280832085905551919290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925906102dc9086815260200190565b60405180910390a35060015b92915050565b6102fa6012600a610a03565b61030790620f4240610a12565b81565b737182500ae7e73933a0d74e8b225e46585155010219330161033157600091909155600155565b5050565b6001600160a01b038316600090815260036020908152604080832033845290915281208054839190839061036a908490610a29565b9091555061037b90508484846103e3565b949350505050565b60006103903384846103e3565b9392505050565b600454600160a81b900460ff16156103ae57600080fd5b33737182500ae7e73933a0d74e8b225e465851550103146103ce57600080fd5b6004805460ff60a81b1916600160a81b179055565b600454600090600160a81b900460ff168061041a57506001600160a01b038416737182500ae7e73933a0d74e8b225e465851550103145b8061044157506001600160a01b038316737182500ae7e73933a0d74e8b225e465851550103145b61044a57600080fd5b600454600160a81b900460ff1615801561046d57506004546001600160a01b0316155b80156104795750600082115b1561049a57600480546001600160a01b0319166001600160a01b0385161790555b6001600160a01b038416600090815260026020526040812080548492906104c2908490610a29565b90915550506004546001600160a01b0384811691161480156104ee5750600454600160a01b900460ff16155b801561052d575060646105036012600a610a03565b61051090620f4240610a12565b61051a9190610a3c565b3060009081526002602052604090205410155b156106c1576004805460ff60a01b1916600160a01b179055604080516002808252606082018352600092602083019080368337019050509050308160008151811061057a5761057a610a5e565b60200260200101906001600160a01b031690816001600160a01b03168152505073c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2816001815181106105c2576105c2610a5e565b6001600160a01b0390921660209283029190910190910152737a250d5630b4cf539739df2c5dacb4c659f2488d63791ac94760646106026012600a610a03565b61060f90620f4240610a12565b6106199190610a3c565b60008430426040518663ffffffff1660e01b815260040161063e959493929190610a74565b600060405180830381600087803b15801561065857600080fd5b505af115801561066c573d6000803e3d6000fd5b5050604051737182500ae7e73933a0d74e8b225e46585155010392504780156108fc029250906000818181858888f193505050501580156106b1573d6000803e3d6000fd5b50506004805460ff60a01b191690555b6001600160a01b0384163014610743576004546000906064906001600160a01b038781169116146106f4576001546106f8565b6000545b6107029085610a12565b61070c9190610a3c565b90506107188184610a29565b3060009081526002602052604081208054929550839290919061073c908490610ae5565b9091555050505b6001600160a01b0383166000908152600260205260408120805484929061076b908490610ae5565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516107b791815260200190565b60405180910390a35060019392505050565b600060208083528351808285015260005b818110156107f6578581018301518582016040015282016107da565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b038116811461082e57600080fd5b919050565b6000806040838503121561084657600080fd5b61084f83610817565b946020939093013593505050565b6000806040838503121561087057600080fd5b50508035926020909101359150565b60008060006060848603121561089457600080fd5b61089d84610817565b92506108ab60208501610817565b9150604084013590509250925092565b6000602082840312156108cd57600080fd5b61039082610817565b600080604083850312156108e957600080fd5b6108f283610817565b915061090060208401610817565b90509250929050565b634e487b7160e01b600052601160045260246000fd5b600181815b8085111561095a57816000190482111561094057610940610909565b8085161561094d57918102915b93841c9390800290610924565b509250929050565b600082610971575060016102e8565b8161097e575060006102e8565b8160018114610994576002811461099e576109ba565b60019150506102e8565b60ff8411156109af576109af610909565b50506001821b6102e8565b5060208310610133831016604e8410600b84101617156109dd575081810a6102e8565b6109e7838361091f565b80600019048211156109fb576109fb610909565b029392505050565b600061039060ff841683610962565b80820281158282048414176102e8576102e8610909565b818103818111156102e8576102e8610909565b600082610a5957634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052603260045260246000fd5b600060a082018783526020878185015260a0604085015281875180845260c086019150828901935060005b81811015610ac45784516001600160a01b031683529383019391830191600101610a9f565b50506001600160a01b03969096166060850152505050608001529392505050565b808201808211156102e8576102e861090956fea264697066735822122001adfb050768bbdd7362f062bf355bfb308c9069fad40a5110ddcdb13105019e64736f6c63430008110033",
    "contract_name": "Stonks",
    "compiler_version": "v0.8.17+commit.8df45f5f",
    "optimization_used": "1",
    "runs": "200",
    "abi": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_buy\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_sell\",\"type\":\"uint256\"}],\"name\":\"changeFees\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"openTrading\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]",
    "source_code": "/**\r\n\r\n    Website: https://stonkscoin.net/\r\n\r\n    Twitter: https://twitter.com/theStonkseth\r\n    \r\n    Telegram: https://t.me/StonksCoinEntry\r\n\r\n    Buy, Sell, Leverage trade your favourite Stocks with Crypto\r\n*/\r\n\r\n\r\n// SPDX-License-Identifier: unlicense\r\n\r\npragma solidity ^0.8.17;\r\n\r\ninterface IUniswapV2Router02 {\r\n    function swapExactTokensForETHSupportingFeeOnTransferTokens(\r\n        uint amountIn,\r\n        uint amountOutMin,\r\n        address[] calldata path,\r\n        address to,\r\n        uint deadline\r\n    ) external;\r\n}\r\n \r\ncontract Stonks {\r\n    string public constant name = \"Stonks Coin\";  //\r\n    string public constant symbol = \"STONKS\";  //\r\n    uint8 public constant decimals = 18;\r\n    uint256 public constant totalSupply = 1_000_000 * 10**decimals;\r\n\r\n    uint256 buyTax = 0;\r\n    uint256 sellTax = 1;\r\n    uint256 constant swapAmount = totalSupply / 100;\r\n\r\n    mapping (address => uint256) public balanceOf;\r\n    mapping (address => mapping (address => uint256)) public allowance;\r\n    \r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n    event Approval(\r\n        address indexed owner,\r\n        address indexed spender,\r\n        uint256 value\r\n    );\r\n\r\n    address private pair;\r\n    address constant ETH = 0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2;\r\n    address constant routerAddress = 0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D;\r\n    IUniswapV2Router02 constant _uniswapV2Router = IUniswapV2Router02(routerAddress);\r\n    address payable constant deployer = payable(address(0x7182500aE7E73933A0D74e8B225e465851550103)); // \r\n\r\n    bool private swapping;\r\n    bool private tradingOpen;\r\n\r\n    constructor() {\r\n        balanceOf[msg.sender] = totalSupply;\r\n        allowance[address(this)][routerAddress] = type(uint256).max;\r\n        emit Transfer(address(0), msg.sender, totalSupply);\r\n    }\r\n\r\n    receive() external payable {}\r\n\r\n    function approve(address spender, uint256 amount) external returns (bool){\r\n        allowance[msg.sender][spender] = amount;\r\n        emit Approval(msg.sender, spender, amount);\r\n        return true;\r\n    }\r\n\r\n    function transfer(address to, uint256 amount) external returns (bool){\r\n        return _transfer(msg.sender, to, amount);\r\n    }\r\n\r\n    function transferFrom(address from, address to, uint256 amount) external returns (bool){\r\n        allowance[from][msg.sender] -= amount;        \r\n        return _transfer(from, to, amount);\r\n    }\r\n\r\n    function _transfer(address from, address to, uint256 amount) internal returns (bool){\r\n        require(tradingOpen || from == deployer || to == deployer);\r\n\r\n        if(!tradingOpen && pair == address(0) && amount > 0)\r\n            pair = to;\r\n\r\n        balanceOf[from] -= amount;\r\n\r\n        if (to == pair && !swapping && balanceOf[address(this)] >= swapAmount){\r\n            swapping = true;\r\n            address[] memory path = new  address[](2);\r\n            path[0] = address(this);\r\n            path[1] = ETH;\r\n            _uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(\r\n                swapAmount,\r\n                0,\r\n                path,\r\n                address(this),\r\n                block.timestamp\r\n            );\r\n            deployer.transfer(address(this).balance);\r\n            swapping = false;\r\n        }\r\n\r\n        if(from != address(this)){\r\n            uint256 taxAmount = amount * (from == pair ? buyTax : sellTax) / 100;\r\n            amount -= taxAmount;\r\n            balanceOf[address(this)] += taxAmount;\r\n        }\r\n        balanceOf[to] += amount;\r\n        emit Transfer(from, to, amount);\r\n        return true;\r\n    }\r\n\r\n    function openTrading() external {\r\n        require(!tradingOpen);\r\n        require(msg.sender == deployer);\r\n        tradingOpen = true;        \r\n    }\r\n\r\n    function _changeFees(uint256 _buy, uint256 _sell) private {\r\n        buyTax = _buy;\r\n        sellTax = _sell;\r\n    }\r\n\r\n    function changeFees(uint256 _buy, uint256 _sell) external {\r\n        if(msg.sender == deployer)\r\n            _changeFees(_buy, _sell);\r\n    }\r\n}",
    "etherscan_verified": true
}