{
    "address": "0x95f7bFda575e002777B856665bD36D954c3aaa59",
    "tx_hash": "021402eac28c7a296965f025568b78d2023fdb6c5b17968e246f81cca2e78268",
    "block_number": 18000184,
    "timestamp": 1693069103,
    "gas_used_in_creation": 5157492,
    "creation_bytecode": "6080604052737a250d5630b4cf539739df2c5dacb4c659f2488d600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061dead600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506009600a620000ac919062000954565b6305f5e100620000bd919062000a91565b60035560646002600354620000d3919062000a91565b620000df9190620008c1565b60045560006009556014600a55600a54600954620000fe919062000864565b600b556064600c55734bfa59bd2ee3e998acedebe0535ebb802eee47d9600d60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001600f60146101000a81548160ff02191690831515021790555060056103e86003546200018a9190620008c1565b62000196919062000a91565b601055348015620001a657600080fd5b5033806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600e60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c45a01556040518163ffffffff1660e01b815260040160206040518083038186803b158015620002b557600080fd5b505afa158015620002ca573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620002f09190620007c6565b73ffffffffffffffffffffffffffffffffffffffff1663c9c65396600e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ad5c46486040518163ffffffff1660e01b815260040160206040518083038186803b1580156200037457600080fd5b505afa15801562000389573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620003af9190620007c6565b306040518363ffffffff1660e01b8152600401620003cf9291906200081a565b602060405180830381600087803b158015620003ea57600080fd5b505af1158015620003ff573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620004259190620007c6565b600f60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600660003073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000600e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600160076000734bfa59bd2ee3e998acedebe0535ebb802eee47d973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506001600860008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550600160086000734bfa59bd2ee3e998acedebe0535ebb802eee47d973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550600160086000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550600354600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef600354604051620007a0919062000847565b60405180910390a35062000bc7565b600081519050620007c08162000bad565b92915050565b600060208284031215620007df57620007de62000b9b565b5b6000620007ef84828501620007af565b91505092915050565b620008038162000af2565b82525050565b620008148162000b26565b82525050565b6000604082019050620008316000830185620007f8565b620008406020830184620007f8565b9392505050565b60006020820190506200085e600083018462000809565b92915050565b6000620008718262000b26565b91506200087e8362000b26565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115620008b657620008b562000b3d565b5b828201905092915050565b6000620008ce8262000b26565b9150620008db8362000b26565b925082620008ee57620008ed62000b6c565b5b828204905092915050565b6000808291508390505b60018511156200094b5780860481111562000923576200092262000b3d565b5b6001851615620009335780820291505b8081029050620009438562000ba0565b945062000903565b94509492505050565b6000620009618262000b26565b91506200096e8362000b30565b92506200099d7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8484620009a5565b905092915050565b600082620009b7576001905062000a8a565b81620009c7576000905062000a8a565b8160018114620009e05760028114620009eb5762000a21565b600191505062000a8a565b60ff84111562000a0057620009ff62000b3d565b5b8360020a91508482111562000a1a5762000a1962000b3d565b5b5062000a8a565b5060208310610133831016604e8410600b841016171562000a5b5782820a90508381111562000a555762000a5462000b3d565b5b62000a8a565b62000a6a8484846001620008f9565b9250905081840481111562000a845762000a8362000b3d565b5b81810290505b9392505050565b600062000a9e8262000b26565b915062000aab8362000b26565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161562000ae75762000ae662000b3d565b5b828202905092915050565b600062000aff8262000b06565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600080fd5b60008160011c9050919050565b62000bb88162000af2565b811462000bc457600080fd5b50565b6127928062000bd76000396000f3fe6080604052600436106101395760003560e01c80636ddd1713116100ab578063a8aa1b311161006f578063a8aa1b3114610425578063a9059cbb14610450578063dd62ed3e1461048d578063e96fada2146104ca578063f1d5f517146104f5578063f887ea401461051e57610140565b80636ddd17131461035057806370a082311461037b578063715018a6146103b8578063893d20e8146103cf57806395d89b41146103fa57610140565b80632f54bf6e116100fd5780632f54bf6e14610240578063313ce5671461027d578063364333f4146102a857806352f7c988146102bf578063571ac8b0146102e85780636c0a24eb1461032557610140565b80630445b6671461014557806306fdde0314610170578063095ea7b31461019b57806318160ddd146101d857806323b872dd1461020357610140565b3661014057005b600080fd5b34801561015157600080fd5b5061015a610549565b6040516101679190612230565b60405180910390f35b34801561017c57600080fd5b5061018561054f565b604051610192919061216e565b60405180910390f35b3480156101a757600080fd5b506101c260048036038101906101bd9190611dbd565b61056f565b6040516101cf9190612138565b60405180910390f35b3480156101e457600080fd5b506101ed610661565b6040516101fa9190612230565b60405180910390f35b34801561020f57600080fd5b5061022a60048036038101906102259190611d6a565b61066b565b6040516102379190612138565b60405180910390f35b34801561024c57600080fd5b5061026760048036038101906102629190611cd0565b61086b565b6040516102749190612138565b60405180910390f35b34801561028957600080fd5b506102926108c4565b60405161029f91906122ce565b60405180910390f35b3480156102b457600080fd5b506102bd6108cd565b005b3480156102cb57600080fd5b506102e660048036038101906102e19190611e2a565b610938565b005b3480156102f457600080fd5b5061030f600480360381019061030a9190611cd0565b6109a8565b60405161031c9190612138565b60405180910390f35b34801561033157600080fd5b5061033a6109db565b6040516103479190612230565b60405180910390f35b34801561035c57600080fd5b506103656109e1565b6040516103729190612138565b60405180910390f35b34801561038757600080fd5b506103a2600480360381019061039d9190611cd0565b6109f4565b6040516103af9190612230565b60405180910390f35b3480156103c457600080fd5b506103cd610a3d565b005b3480156103db57600080fd5b506103e4610b00565b6040516103f191906120bc565b60405180910390f35b34801561040657600080fd5b5061040f610b29565b60405161041c919061216e565b60405180910390f35b34801561043157600080fd5b5061043a610b66565b60405161044791906120bc565b60405180910390f35b34801561045c57600080fd5b5061047760048036038101906104729190611dbd565b610b8c565b6040516104849190612138565b60405180910390f35b34801561049957600080fd5b506104b460048036038101906104af9190611d2a565b610ba1565b6040516104c19190612230565b60405180910390f35b3480156104d657600080fd5b506104df610c28565b6040516104ec91906120bc565b60405180910390f35b34801561050157600080fd5b5061051c60048036038101906105179190611dfd565b610c4e565b005b34801561052a57600080fd5b50610533610cba565b6040516105409190612153565b60405180910390f35b60105481565b606060405180606001604052806024815260200161273960249139905090565b600081600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161064f9190612230565b60405180910390a36001905092915050565b6000600354905090565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414610857576107d6826040518060400160405280601681526020017f496e73756666696369656e7420416c6c6f77616e636500000000000000000000815250600660008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610ce09092919063ffffffff16565b600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b610862848484610d44565b90509392505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16149050919050565b60006009905090565b600d60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f19350505050158015610935573d6000803e3d6000fd5b50565b6109413361086b565b610980576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161097790612210565b60405180910390fd5b8160098190555080600a81905550600a5460095461099e9190612349565b600b819055505050565b60006109d4827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff61056f565b9050919050565b60045481565b600f60149054906101000a900460ff1681565b6000600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b610a463361086b565b610a85576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a7c90612210565b60405180910390fd5b60008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f04dba622d284ed0014ee4b9a6a68386be1a4c08a4913ae272de89199cc6861636000604051610af691906120bc565b60405180910390a1565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60606040518060400160405280600381526020017f4152420000000000000000000000000000000000000000000000000000000000815250905090565b600f60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000610b99338484610d44565b905092915050565b6000600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600d60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610c573361086b565b610c96576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c8d90612210565b60405180910390fd5b6103e881600354610ca791906123d0565b610cb1919061239f565b60048190555050565b600e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000838311158290610d28576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d1f919061216e565b60405180910390fd5b5060008385610d37919061242a565b9050809150509392505050565b6000601160009054906101000a900460ff1615610d6d57610d6684848461110d565b9050611106565b600f60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614158015610e195750600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614155b15610f0257600860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1680610ec2575060045482600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610ebf9190612349565b11155b610f01576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ef890612190565b60405180910390fd5b5b610f0a6112e0565b15610f1857610f176113b7565b5b610fa1826040518060400160405280601481526020017f496e73756666696369656e742042616c616e6365000000000000000000000000815250600560008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610ce09092919063ffffffff16565b600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506000610fef85611911565b610ff95782611004565b6110038584611968565b5b905061105881600560008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611aac90919063ffffffff16565b600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516110f89190612230565b60405180910390a360019150505b9392505050565b6000611198826040518060400160405280601481526020017f496e73756666696369656e742042616c616e6365000000000000000000000000815250600560008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610ce09092919063ffffffff16565b600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061122d82600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611aac90919063ffffffff16565b600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516112cd9190612230565b60405180910390a3600190509392505050565b6000600f60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415801561134d5750601160009054906101000a900460ff16155b80156113655750600f60149054906101000a900460ff165b80156113b25750601054600560003073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410155b905090565b6001601160006101000a81548160ff0219169083151502179055506000601054905060006114176002611409600b546113fb60095487611b0a90919063ffffffff16565b611b8590919063ffffffff16565b611b8590919063ffffffff16565b9050600061142e8284611bcf90919063ffffffff16565b90506000600267ffffffffffffffff81111561144d5761144c6125a9565b5b60405190808252806020026020018201604052801561147b5781602001602082028036833780820191505090505b50905030816000815181106114935761149261257a565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050600e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ad5c46486040518163ffffffff1660e01b815260040160206040518083038186803b15801561153557600080fd5b505afa158015611549573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061156d9190611cfd565b816001815181106115815761158061257a565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250506000479050600e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663791ac9478460008530426040518663ffffffff1660e01b815260040161162495949392919061224b565b600060405180830381600087803b15801561163e57600080fd5b505af1158015611652573d6000803e3d6000fd5b50505050600061166b8247611bcf90919063ffffffff16565b905060006116996116886002600954611b8590919063ffffffff16565b600b54611bcf90919063ffffffff16565b905060006116d760026116c9846116bb60095488611b0a90919063ffffffff16565b611b8590919063ffffffff16565b611b8590919063ffffffff16565b90506000611702836116f4600a5487611b0a90919063ffffffff16565b611b8590919063ffffffff16565b90506000600d60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168261753090604051611750906120a7565b600060405180830381858888f193505050503d806000811461178e576040519150601f19603f3d011682016040523d82523d6000602084013e611793565b606091505b50509050806117d7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117ce906121d0565b60405180910390fd5b60008911156118ea57600e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f305d71984308c600080734bfa59bd2ee3e998acedebe0535ebb802eee47d9426040518863ffffffff1660e01b815260040161185b969594939291906120d7565b6060604051808303818588803b15801561187457600080fd5b505af1158015611888573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906118ad9190611e6a565b5050507f424db2872186fa7e7afa7a5e902ed3b49a2ef19c2f5431e672462495dd6b4506838a6040516118e19291906122a5565b60405180910390a15b505050505050505050506000601160006101000a81548160ff021916908315150217905550565b6000600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16159050919050565b600080611994600c54611986600b5486611b0a90919063ffffffff16565b611b8590919063ffffffff16565b90506119e881600560003073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611aac90919063ffffffff16565b600560003073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055503073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051611a889190612230565b60405180910390a3611aa38184611bcf90919063ffffffff16565b91505092915050565b6000808284611abb9190612349565b905083811015611b00576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611af7906121b0565b60405180910390fd5b8091505092915050565b600080831415611b1d5760009050611b7f565b60008284611b2b91906123d0565b9050828482611b3a919061239f565b14611b7a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b71906121f0565b60405180910390fd5b809150505b92915050565b6000611bc783836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250611c19565b905092915050565b6000611c1183836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610ce0565b905092915050565b60008083118290611c60576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611c57919061216e565b60405180910390fd5b5060008385611c6f919061239f565b9050809150509392505050565b600081359050611c8b8161270a565b92915050565b600081519050611ca08161270a565b92915050565b600081359050611cb581612721565b92915050565b600081519050611cca81612721565b92915050565b600060208284031215611ce657611ce56125d8565b5b6000611cf484828501611c7c565b91505092915050565b600060208284031215611d1357611d126125d8565b5b6000611d2184828501611c91565b91505092915050565b60008060408385031215611d4157611d406125d8565b5b6000611d4f85828601611c7c565b9250506020611d6085828601611c7c565b9150509250929050565b600080600060608486031215611d8357611d826125d8565b5b6000611d9186828701611c7c565b9350506020611da286828701611c7c565b9250506040611db386828701611ca6565b9150509250925092565b60008060408385031215611dd457611dd36125d8565b5b6000611de285828601611c7c565b9250506020611df385828601611ca6565b9150509250929050565b600060208284031215611e1357611e126125d8565b5b6000611e2184828501611ca6565b91505092915050565b60008060408385031215611e4157611e406125d8565b5b6000611e4f85828601611ca6565b9250506020611e6085828601611ca6565b9150509250929050565b600080600060608486031215611e8357611e826125d8565b5b6000611e9186828701611cbb565b9350506020611ea286828701611cbb565b9250506040611eb386828701611cbb565b9150509250925092565b6000611ec98383611ed5565b60208301905092915050565b611ede8161245e565b82525050565b611eed8161245e565b82525050565b6000611efe826122f9565b611f08818561231c565b9350611f13836122e9565b8060005b83811015611f44578151611f2b8882611ebd565b9750611f368361230f565b925050600181019050611f17565b5085935050505092915050565b611f5a81612470565b82525050565b611f69816124b3565b82525050565b611f78816124d7565b82525050565b6000611f8982612304565b611f938185612338565b9350611fa38185602086016124e9565b611fac816125dd565b840191505092915050565b6000611fc4602583612338565b9150611fcf826125ee565b604082019050919050565b6000611fe7601b83612338565b9150611ff28261263d565b602082019050919050565b600061200a601e83612338565b915061201582612666565b602082019050919050565b600061202d602183612338565b91506120388261268f565b604082019050919050565b6000612050600683612338565b915061205b826126de565b602082019050919050565b600061207360008361232d565b915061207e82612707565b600082019050919050565b6120928161249c565b82525050565b6120a1816124a6565b82525050565b60006120b282612066565b9150819050919050565b60006020820190506120d16000830184611ee4565b92915050565b600060c0820190506120ec6000830189611ee4565b6120f96020830188612089565b6121066040830187611f6f565b6121136060830186611f6f565b6121206080830185611ee4565b61212d60a0830184612089565b979650505050505050565b600060208201905061214d6000830184611f51565b92915050565b60006020820190506121686000830184611f60565b92915050565b600060208201905081810360008301526121888184611f7e565b905092915050565b600060208201905081810360008301526121a981611fb7565b9050919050565b600060208201905081810360008301526121c981611fda565b9050919050565b600060208201905081810360008301526121e981611ffd565b9050919050565b6000602082019050818103600083015261220981612020565b9050919050565b6000602082019050818103600083015261222981612043565b9050919050565b60006020820190506122456000830184612089565b92915050565b600060a0820190506122606000830188612089565b61226d6020830187611f6f565b818103604083015261227f8186611ef3565b905061228e6060830185611ee4565b61229b6080830184612089565b9695505050505050565b60006040820190506122ba6000830185612089565b6122c76020830184612089565b9392505050565b60006020820190506122e36000830184612098565b92915050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600081905092915050565b600082825260208201905092915050565b60006123548261249c565b915061235f8361249c565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156123945761239361251c565b5b828201905092915050565b60006123aa8261249c565b91506123b58361249c565b9250826123c5576123c461254b565b5b828204905092915050565b60006123db8261249c565b91506123e68361249c565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561241f5761241e61251c565b5b828202905092915050565b60006124358261249c565b91506124408361249c565b9250828210156124535761245261251c565b5b828203905092915050565b60006124698261247c565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60006124be826124c5565b9050919050565b60006124d08261247c565b9050919050565b60006124e28261249c565b9050919050565b60005b838110156125075780820151818401526020810190506124ec565b83811115612516576000848401525b50505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b6000601f19601f8301169050919050565b7f5472616e7366657220616d6f756e74206578636565647320746865206261672060008201527f73697a652e000000000000000000000000000000000000000000000000000000602082015250565b7f536166654d6174683a206164646974696f6e206f766572666c6f770000000000600082015250565b7f72656365697665722072656a656374656420455448207472616e736665720000600082015250565b7f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f60008201527f7700000000000000000000000000000000000000000000000000000000000000602082015250565b7f214f574e45520000000000000000000000000000000000000000000000000000600082015250565b50565b6127138161245e565b811461271e57600080fd5b50565b61272a8161249c565b811461273557600080fd5b5056fe4861727279506f74746572507265736964656e7455464342756c6c52756e373737496e75a2646970667358221220041d85f8720144b65766d5474a77fae1aab37d43a6ace6740f5e8ce30031551a64736f6c63430008050033",
    "runtime_bytecode": "6080604052600436106101395760003560e01c80636ddd1713116100ab578063a8aa1b311161006f578063a8aa1b3114610425578063a9059cbb14610450578063dd62ed3e1461048d578063e96fada2146104ca578063f1d5f517146104f5578063f887ea401461051e57610140565b80636ddd17131461035057806370a082311461037b578063715018a6146103b8578063893d20e8146103cf57806395d89b41146103fa57610140565b80632f54bf6e116100fd5780632f54bf6e14610240578063313ce5671461027d578063364333f4146102a857806352f7c988146102bf578063571ac8b0146102e85780636c0a24eb1461032557610140565b80630445b6671461014557806306fdde0314610170578063095ea7b31461019b57806318160ddd146101d857806323b872dd1461020357610140565b3661014057005b600080fd5b34801561015157600080fd5b5061015a610549565b6040516101679190612230565b60405180910390f35b34801561017c57600080fd5b5061018561054f565b604051610192919061216e565b60405180910390f35b3480156101a757600080fd5b506101c260048036038101906101bd9190611dbd565b61056f565b6040516101cf9190612138565b60405180910390f35b3480156101e457600080fd5b506101ed610661565b6040516101fa9190612230565b60405180910390f35b34801561020f57600080fd5b5061022a60048036038101906102259190611d6a565b61066b565b6040516102379190612138565b60405180910390f35b34801561024c57600080fd5b5061026760048036038101906102629190611cd0565b61086b565b6040516102749190612138565b60405180910390f35b34801561028957600080fd5b506102926108c4565b60405161029f91906122ce565b60405180910390f35b3480156102b457600080fd5b506102bd6108cd565b005b3480156102cb57600080fd5b506102e660048036038101906102e19190611e2a565b610938565b005b3480156102f457600080fd5b5061030f600480360381019061030a9190611cd0565b6109a8565b60405161031c9190612138565b60405180910390f35b34801561033157600080fd5b5061033a6109db565b6040516103479190612230565b60405180910390f35b34801561035c57600080fd5b506103656109e1565b6040516103729190612138565b60405180910390f35b34801561038757600080fd5b506103a2600480360381019061039d9190611cd0565b6109f4565b6040516103af9190612230565b60405180910390f35b3480156103c457600080fd5b506103cd610a3d565b005b3480156103db57600080fd5b506103e4610b00565b6040516103f191906120bc565b60405180910390f35b34801561040657600080fd5b5061040f610b29565b60405161041c919061216e565b60405180910390f35b34801561043157600080fd5b5061043a610b66565b60405161044791906120bc565b60405180910390f35b34801561045c57600080fd5b5061047760048036038101906104729190611dbd565b610b8c565b6040516104849190612138565b60405180910390f35b34801561049957600080fd5b506104b460048036038101906104af9190611d2a565b610ba1565b6040516104c19190612230565b60405180910390f35b3480156104d657600080fd5b506104df610c28565b6040516104ec91906120bc565b60405180910390f35b34801561050157600080fd5b5061051c60048036038101906105179190611dfd565b610c4e565b005b34801561052a57600080fd5b50610533610cba565b6040516105409190612153565b60405180910390f35b60105481565b606060405180606001604052806024815260200161273960249139905090565b600081600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161064f9190612230565b60405180910390a36001905092915050565b6000600354905090565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414610857576107d6826040518060400160405280601681526020017f496e73756666696369656e7420416c6c6f77616e636500000000000000000000815250600660008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610ce09092919063ffffffff16565b600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b610862848484610d44565b90509392505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16149050919050565b60006009905090565b600d60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f19350505050158015610935573d6000803e3d6000fd5b50565b6109413361086b565b610980576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161097790612210565b60405180910390fd5b8160098190555080600a81905550600a5460095461099e9190612349565b600b819055505050565b60006109d4827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff61056f565b9050919050565b60045481565b600f60149054906101000a900460ff1681565b6000600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b610a463361086b565b610a85576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a7c90612210565b60405180910390fd5b60008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f04dba622d284ed0014ee4b9a6a68386be1a4c08a4913ae272de89199cc6861636000604051610af691906120bc565b60405180910390a1565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60606040518060400160405280600381526020017f4152420000000000000000000000000000000000000000000000000000000000815250905090565b600f60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000610b99338484610d44565b905092915050565b6000600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600d60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610c573361086b565b610c96576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c8d90612210565b60405180910390fd5b6103e881600354610ca791906123d0565b610cb1919061239f565b60048190555050565b600e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000838311158290610d28576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d1f919061216e565b60405180910390fd5b5060008385610d37919061242a565b9050809150509392505050565b6000601160009054906101000a900460ff1615610d6d57610d6684848461110d565b9050611106565b600f60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614158015610e195750600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614155b15610f0257600860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1680610ec2575060045482600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610ebf9190612349565b11155b610f01576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ef890612190565b60405180910390fd5b5b610f0a6112e0565b15610f1857610f176113b7565b5b610fa1826040518060400160405280601481526020017f496e73756666696369656e742042616c616e6365000000000000000000000000815250600560008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610ce09092919063ffffffff16565b600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506000610fef85611911565b610ff95782611004565b6110038584611968565b5b905061105881600560008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611aac90919063ffffffff16565b600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516110f89190612230565b60405180910390a360019150505b9392505050565b6000611198826040518060400160405280601481526020017f496e73756666696369656e742042616c616e6365000000000000000000000000815250600560008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610ce09092919063ffffffff16565b600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061122d82600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611aac90919063ffffffff16565b600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516112cd9190612230565b60405180910390a3600190509392505050565b6000600f60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415801561134d5750601160009054906101000a900460ff16155b80156113655750600f60149054906101000a900460ff165b80156113b25750601054600560003073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410155b905090565b6001601160006101000a81548160ff0219169083151502179055506000601054905060006114176002611409600b546113fb60095487611b0a90919063ffffffff16565b611b8590919063ffffffff16565b611b8590919063ffffffff16565b9050600061142e8284611bcf90919063ffffffff16565b90506000600267ffffffffffffffff81111561144d5761144c6125a9565b5b60405190808252806020026020018201604052801561147b5781602001602082028036833780820191505090505b50905030816000815181106114935761149261257a565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050600e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ad5c46486040518163ffffffff1660e01b815260040160206040518083038186803b15801561153557600080fd5b505afa158015611549573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061156d9190611cfd565b816001815181106115815761158061257a565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250506000479050600e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663791ac9478460008530426040518663ffffffff1660e01b815260040161162495949392919061224b565b600060405180830381600087803b15801561163e57600080fd5b505af1158015611652573d6000803e3d6000fd5b50505050600061166b8247611bcf90919063ffffffff16565b905060006116996116886002600954611b8590919063ffffffff16565b600b54611bcf90919063ffffffff16565b905060006116d760026116c9846116bb60095488611b0a90919063ffffffff16565b611b8590919063ffffffff16565b611b8590919063ffffffff16565b90506000611702836116f4600a5487611b0a90919063ffffffff16565b611b8590919063ffffffff16565b90506000600d60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168261753090604051611750906120a7565b600060405180830381858888f193505050503d806000811461178e576040519150601f19603f3d011682016040523d82523d6000602084013e611793565b606091505b50509050806117d7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117ce906121d0565b60405180910390fd5b60008911156118ea57600e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f305d71984308c600080734bfa59bd2ee3e998acedebe0535ebb802eee47d9426040518863ffffffff1660e01b815260040161185b969594939291906120d7565b6060604051808303818588803b15801561187457600080fd5b505af1158015611888573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906118ad9190611e6a565b5050507f424db2872186fa7e7afa7a5e902ed3b49a2ef19c2f5431e672462495dd6b4506838a6040516118e19291906122a5565b60405180910390a15b505050505050505050506000601160006101000a81548160ff021916908315150217905550565b6000600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16159050919050565b600080611994600c54611986600b5486611b0a90919063ffffffff16565b611b8590919063ffffffff16565b90506119e881600560003073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611aac90919063ffffffff16565b600560003073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055503073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051611a889190612230565b60405180910390a3611aa38184611bcf90919063ffffffff16565b91505092915050565b6000808284611abb9190612349565b905083811015611b00576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611af7906121b0565b60405180910390fd5b8091505092915050565b600080831415611b1d5760009050611b7f565b60008284611b2b91906123d0565b9050828482611b3a919061239f565b14611b7a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b71906121f0565b60405180910390fd5b809150505b92915050565b6000611bc783836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250611c19565b905092915050565b6000611c1183836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610ce0565b905092915050565b60008083118290611c60576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611c57919061216e565b60405180910390fd5b5060008385611c6f919061239f565b9050809150509392505050565b600081359050611c8b8161270a565b92915050565b600081519050611ca08161270a565b92915050565b600081359050611cb581612721565b92915050565b600081519050611cca81612721565b92915050565b600060208284031215611ce657611ce56125d8565b5b6000611cf484828501611c7c565b91505092915050565b600060208284031215611d1357611d126125d8565b5b6000611d2184828501611c91565b91505092915050565b60008060408385031215611d4157611d406125d8565b5b6000611d4f85828601611c7c565b9250506020611d6085828601611c7c565b9150509250929050565b600080600060608486031215611d8357611d826125d8565b5b6000611d9186828701611c7c565b9350506020611da286828701611c7c565b9250506040611db386828701611ca6565b9150509250925092565b60008060408385031215611dd457611dd36125d8565b5b6000611de285828601611c7c565b9250506020611df385828601611ca6565b9150509250929050565b600060208284031215611e1357611e126125d8565b5b6000611e2184828501611ca6565b91505092915050565b60008060408385031215611e4157611e406125d8565b5b6000611e4f85828601611ca6565b9250506020611e6085828601611ca6565b9150509250929050565b600080600060608486031215611e8357611e826125d8565b5b6000611e9186828701611cbb565b9350506020611ea286828701611cbb565b9250506040611eb386828701611cbb565b9150509250925092565b6000611ec98383611ed5565b60208301905092915050565b611ede8161245e565b82525050565b611eed8161245e565b82525050565b6000611efe826122f9565b611f08818561231c565b9350611f13836122e9565b8060005b83811015611f44578151611f2b8882611ebd565b9750611f368361230f565b925050600181019050611f17565b5085935050505092915050565b611f5a81612470565b82525050565b611f69816124b3565b82525050565b611f78816124d7565b82525050565b6000611f8982612304565b611f938185612338565b9350611fa38185602086016124e9565b611fac816125dd565b840191505092915050565b6000611fc4602583612338565b9150611fcf826125ee565b604082019050919050565b6000611fe7601b83612338565b9150611ff28261263d565b602082019050919050565b600061200a601e83612338565b915061201582612666565b602082019050919050565b600061202d602183612338565b91506120388261268f565b604082019050919050565b6000612050600683612338565b915061205b826126de565b602082019050919050565b600061207360008361232d565b915061207e82612707565b600082019050919050565b6120928161249c565b82525050565b6120a1816124a6565b82525050565b60006120b282612066565b9150819050919050565b60006020820190506120d16000830184611ee4565b92915050565b600060c0820190506120ec6000830189611ee4565b6120f96020830188612089565b6121066040830187611f6f565b6121136060830186611f6f565b6121206080830185611ee4565b61212d60a0830184612089565b979650505050505050565b600060208201905061214d6000830184611f51565b92915050565b60006020820190506121686000830184611f60565b92915050565b600060208201905081810360008301526121888184611f7e565b905092915050565b600060208201905081810360008301526121a981611fb7565b9050919050565b600060208201905081810360008301526121c981611fda565b9050919050565b600060208201905081810360008301526121e981611ffd565b9050919050565b6000602082019050818103600083015261220981612020565b9050919050565b6000602082019050818103600083015261222981612043565b9050919050565b60006020820190506122456000830184612089565b92915050565b600060a0820190506122606000830188612089565b61226d6020830187611f6f565b818103604083015261227f8186611ef3565b905061228e6060830185611ee4565b61229b6080830184612089565b9695505050505050565b60006040820190506122ba6000830185612089565b6122c76020830184612089565b9392505050565b60006020820190506122e36000830184612098565b92915050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600081905092915050565b600082825260208201905092915050565b60006123548261249c565b915061235f8361249c565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156123945761239361251c565b5b828201905092915050565b60006123aa8261249c565b91506123b58361249c565b9250826123c5576123c461254b565b5b828204905092915050565b60006123db8261249c565b91506123e68361249c565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561241f5761241e61251c565b5b828202905092915050565b60006124358261249c565b91506124408361249c565b9250828210156124535761245261251c565b5b828203905092915050565b60006124698261247c565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60006124be826124c5565b9050919050565b60006124d08261247c565b9050919050565b60006124e28261249c565b9050919050565b60005b838110156125075780820151818401526020810190506124ec565b83811115612516576000848401525b50505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b6000601f19601f8301169050919050565b7f5472616e7366657220616d6f756e74206578636565647320746865206261672060008201527f73697a652e000000000000000000000000000000000000000000000000000000602082015250565b7f536166654d6174683a206164646974696f6e206f766572666c6f770000000000600082015250565b7f72656365697665722072656a656374656420455448207472616e736665720000600082015250565b7f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f60008201527f7700000000000000000000000000000000000000000000000000000000000000602082015250565b7f214f574e45520000000000000000000000000000000000000000000000000000600082015250565b50565b6127138161245e565b811461271e57600080fd5b50565b61272a8161249c565b811461273557600080fd5b5056fe4861727279506f74746572507265736964656e7455464342756c6c52756e373737496e75a2646970667358221220041d85f8720144b65766d5474a77fae1aab37d43a6ace6740f5e8ce30031551a64736f6c63430008050033",
    "contract_name": "ARB",
    "compiler_version": "v0.8.5+commit.a4f2e591",
    "optimization_used": "0",
    "runs": "200",
    "abi": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountBOG\",\"type\":\"uint256\"}],\"name\":\"AutoLiquify\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"_maxWalletAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"holder\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"approveMax\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"clearStuckBalance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"marketingFeeReceiver\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"router\",\"outputs\":[{\"internalType\":\"contract IDEXRouter\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_liquidityFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_marketingFee\",\"type\":\"uint256\"}],\"name\":\"setFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountPercent\",\"type\":\"uint256\"}],\"name\":\"setWalletLimit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"swapEnabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"swapThreshold\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]",
    "source_code": "/*\r\n\r\n$ARB\r\n\r\nHarryPotterPresidentUFCBullRun777Inu\r\n\r\nhttps://hppub7i.com\r\n\r\nhttps://twitter.com/ARB_hppub7i\r\n\r\nhttps://t.me/hppub7i\r\n\r\n*/\r\n \r\n// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.5;\r\nlibrary SafeMath {\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a + b;\r\n        require(c >= a, \"SafeMath: addition overflow\");\r\n        return c;\r\n    }\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return sub(a, b, \"SafeMath: subtraction overflow\");\r\n    }\r\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        require(b <= a, errorMessage);\r\n        uint256 c = a - b;\r\n        return c;\r\n    }\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        if (a == 0) {\r\n            return 0;\r\n        }\r\n        uint256 c = a * b;\r\n        require(c / a == b, \"SafeMath: multiplication overflow\");\r\n        return c;\r\n    }\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return div(a, b, \"SafeMath: division by zero\");\r\n    }\r\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        require(b > 0, errorMessage);\r\n        uint256 c = a / b;\r\n        return c;\r\n    }\r\n}\r\n\r\ninterface ERC20 {\r\n    function totalSupply() external view returns (uint256);\r\n    function decimals() external view returns (uint8);\r\n    function symbol() external view returns (string memory);\r\n    function name() external view returns (string memory);\r\n    function getOwner() external view returns (address);\r\n    function balanceOf(address account) external view returns (uint256);\r\n    function transfer(address recipient, uint256 amount) external returns (bool);\r\n    function allowance(address _owner, address spender) external view returns (uint256);\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}\r\n\r\nabstract contract Ownable {\r\n    address internal owner;\r\n    constructor(address _owner) {\r\n        owner = _owner;\r\n    }\r\n    modifier onlyOwner() {\r\n        require(isOwner(msg.sender), \"!OWNER\"); _;\r\n    }\r\n    function isOwner(address account) public view returns (bool) {\r\n        return account == owner;\r\n    }\r\n    function renounceOwnership() public onlyOwner {\r\n        owner = address(0);\r\n        emit OwnershipTransferred(address(0));\r\n    }  \r\n    event OwnershipTransferred(address owner);\r\n}\r\n\r\ninterface IDEXFactory {\r\n    function createPair(address tokenA, address tokenB) external returns (address pair);\r\n}\r\n\r\ninterface IDEXRouter {\r\n    function factory() external pure returns (address);\r\n    function WETH() external pure returns (address);\r\n    function addLiquidity(\r\n        address tokenA,\r\n        address tokenB,\r\n        uint amountADesired,\r\n        uint amountBDesired,\r\n        uint amountAMin,\r\n        uint amountBMin,\r\n        address to,\r\n        uint deadline\r\n    ) external returns (uint amountA, uint amountB, uint liquidity);\r\n    function addLiquidityETH(\r\n        address token,\r\n        uint amountTokenDesired,\r\n        uint amountTokenMin,\r\n        uint amountETHMin,\r\n        address to,\r\n        uint deadline\r\n    ) external payable returns (uint amountToken, uint amountETH, uint liquidity);\r\n    function swapExactTokensForTokensSupportingFeeOnTransferTokens(\r\n        uint amountIn,\r\n        uint amountOutMin,\r\n        address[] calldata path,\r\n        address to,\r\n        uint deadline\r\n    ) external;\r\n    function swapExactETHForTokensSupportingFeeOnTransferTokens(\r\n        uint amountOutMin,\r\n        address[] calldata path,\r\n        address to,\r\n        uint deadline\r\n    ) external payable;\r\n    function swapExactTokensForETHSupportingFeeOnTransferTokens(\r\n        uint amountIn,\r\n        uint amountOutMin,\r\n        address[] calldata path,\r\n        address to,\r\n        uint deadline\r\n    ) external;\r\n}\r\n\r\ncontract ARB is ERC20, Ownable {\r\n    using SafeMath for uint256;\r\n    address routerAdress = 0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D;\r\n    address DEAD = 0x000000000000000000000000000000000000dEaD;\r\n\r\n    string constant _name = \"HarryPotterPresidentUFCBullRun777Inu\";\r\n    string constant _symbol = \"ARB\";\r\n    uint8 constant _decimals = 9;\r\n\r\n    uint256 _totalSupply = 100_000_000 * (10 ** _decimals);\r\n    uint256 public _maxWalletAmount = (_totalSupply * 2) / 100;\r\n\r\n    mapping (address => uint256) _balances;\r\n    mapping (address => mapping (address => uint256)) _allowances;\r\n\r\n    mapping (address => bool) isFeeExempt;\r\n    mapping (address => bool) isTxLimitExempt;\r\n\r\n    uint256 liquidityFee = 0; \r\n    uint256 marketingFee = 20;\r\n    uint256 totalFee = liquidityFee + marketingFee;\r\n    uint256 feeDenominator = 100;\r\n\r\n    address public marketingFeeReceiver = 0x4BFA59bd2ee3E998aCedeBE0535ebb802EEE47D9;\r\n\r\n    IDEXRouter public router;\r\n    address public pair;\r\n\r\n    bool public swapEnabled = true;\r\n    uint256 public swapThreshold = _totalSupply / 1000 * 5; // 0.5%\r\n    bool inSwap;\r\n    modifier swapping() { inSwap = true; _; inSwap = false; }\r\n\r\n    constructor () Ownable(msg.sender) {\r\n        router = IDEXRouter(routerAdress);\r\n        pair = IDEXFactory(router.factory()).createPair(router.WETH(), address(this));\r\n        _allowances[address(this)][address(router)] = type(uint256).max;\r\n\r\n        address _owner = owner;\r\n        isFeeExempt[0x4BFA59bd2ee3E998aCedeBE0535ebb802EEE47D9] = true;\r\n        isTxLimitExempt[_owner] = true;\r\n        isTxLimitExempt[0x4BFA59bd2ee3E998aCedeBE0535ebb802EEE47D9] = true;\r\n        isTxLimitExempt[DEAD] = true;\r\n\r\n        _balances[_owner] = _totalSupply;\r\n        emit Transfer(address(0), _owner, _totalSupply);\r\n    }\r\n\r\n    receive() external payable { }\r\n\r\n    function totalSupply() external view override returns (uint256) { return _totalSupply; }\r\n    function decimals() external pure override returns (uint8) { return _decimals; }\r\n    function symbol() external pure override returns (string memory) { return _symbol; }\r\n    function name() external pure override returns (string memory) { return _name; }\r\n    function getOwner() external view override returns (address) { return owner; }\r\n    function balanceOf(address account) public view override returns (uint256) { return _balances[account]; }\r\n    function allowance(address holder, address spender) external view override returns (uint256) { return _allowances[holder][spender]; }\r\n\r\n    function approve(address spender, uint256 amount) public override returns (bool) {\r\n        _allowances[msg.sender][spender] = amount;\r\n        emit Approval(msg.sender, spender, amount);\r\n        return true;\r\n    }\r\n\r\n    function approveMax(address spender) external returns (bool) {\r\n        return approve(spender, type(uint256).max);\r\n    }\r\n\r\n    function transfer(address recipient, uint256 amount) external override returns (bool) {\r\n        return _transferFrom(msg.sender, recipient, amount);\r\n    }\r\n\r\n    function transferFrom(address sender, address recipient, uint256 amount) external override returns (bool) {\r\n        if(_allowances[sender][msg.sender] != type(uint256).max){\r\n            _allowances[sender][msg.sender] = _allowances[sender][msg.sender].sub(amount, \"Insufficient Allowance\");\r\n        }\r\n\r\n        return _transferFrom(sender, recipient, amount);\r\n    }\r\n\r\n    function _transferFrom(address sender, address recipient, uint256 amount) internal returns (bool) {\r\n        if(inSwap){ return _basicTransfer(sender, recipient, amount); }\r\n        \r\n        if (recipient != pair && recipient != DEAD) {\r\n            require(isTxLimitExempt[recipient] || _balances[recipient] + amount <= _maxWalletAmount, \"Transfer amount exceeds the bag size.\");\r\n        }\r\n        \r\n        if(shouldSwapBack()){ swapBack(); } \r\n\r\n        _balances[sender] = _balances[sender].sub(amount, \"Insufficient Balance\");\r\n\r\n        uint256 amountReceived = shouldTakeFee(sender) ? takeFee(sender, amount) : amount;\r\n        _balances[recipient] = _balances[recipient].add(amountReceived);\r\n\r\n        emit Transfer(sender, recipient, amountReceived);\r\n        return true;\r\n    }\r\n    \r\n    function _basicTransfer(address sender, address recipient, uint256 amount) internal returns (bool) {\r\n        _balances[sender] = _balances[sender].sub(amount, \"Insufficient Balance\");\r\n        _balances[recipient] = _balances[recipient].add(amount);\r\n        emit Transfer(sender, recipient, amount);\r\n        return true;\r\n    }\r\n\r\n    function shouldTakeFee(address sender) internal view returns (bool) {\r\n        return !isFeeExempt[sender];\r\n    }\r\n\r\n    function takeFee(address sender, uint256 amount) internal returns (uint256) {\r\n        uint256 feeAmount = amount.mul(totalFee).div(feeDenominator);\r\n        _balances[address(this)] = _balances[address(this)].add(feeAmount);\r\n        emit Transfer(sender, address(this), feeAmount);\r\n        return amount.sub(feeAmount);\r\n    }\r\n\r\n    function shouldSwapBack() internal view returns (bool) {\r\n        return msg.sender != pair\r\n        && !inSwap\r\n        && swapEnabled\r\n        && _balances[address(this)] >= swapThreshold;\r\n    }\r\n\r\n    function swapBack() internal swapping {\r\n        uint256 contractTokenBalance = swapThreshold;\r\n        uint256 amountToLiquify = contractTokenBalance.mul(liquidityFee).div(totalFee).div(2);\r\n        uint256 amountToSwap = contractTokenBalance.sub(amountToLiquify);\r\n\r\n        address[] memory path = new address[](2);\r\n        path[0] = address(this);\r\n        path[1] = router.WETH();\r\n\r\n        uint256 balanceBefore = address(this).balance;\r\n\r\n        router.swapExactTokensForETHSupportingFeeOnTransferTokens(\r\n            amountToSwap,\r\n            0,\r\n            path,\r\n            address(this),\r\n            block.timestamp\r\n        );\r\n        uint256 amountETH = address(this).balance.sub(balanceBefore);\r\n        uint256 totalETHFee = totalFee.sub(liquidityFee.div(2));\r\n        uint256 amountETHLiquidity = amountETH.mul(liquidityFee).div(totalETHFee).div(2);\r\n        uint256 amountETHMarketing = amountETH.mul(marketingFee).div(totalETHFee);\r\n\r\n\r\n        (bool MarketingSuccess, /* bytes memory data */) = payable(marketingFeeReceiver).call{value: amountETHMarketing, gas: 30000}(\"\");\r\n        require(MarketingSuccess, \"receiver rejected ETH transfer\");\r\n\r\n        if(amountToLiquify > 0){\r\n            router.addLiquidityETH{value: amountETHLiquidity}(\r\n                address(this),\r\n                amountToLiquify,\r\n                0,\r\n                0,\r\n                0x4BFA59bd2ee3E998aCedeBE0535ebb802EEE47D9,\r\n                block.timestamp\r\n            );\r\n            emit AutoLiquify(amountETHLiquidity, amountToLiquify);\r\n        }\r\n    }\r\n\r\n    function buyTokens(uint256 amount, address to) internal swapping {\r\n        address[] memory path = new address[](2);\r\n        path[0] = router.WETH();\r\n        path[1] = address(this);\r\n\r\n        router.swapExactETHForTokensSupportingFeeOnTransferTokens{value: amount}(\r\n            0,\r\n            path,\r\n            to,\r\n            block.timestamp\r\n        );\r\n    }\r\n\r\n    function clearStuckBalance() external {\r\n        payable(marketingFeeReceiver).transfer(address(this).balance);\r\n    }\r\n\r\n    function setWalletLimit(uint256 amountPercent) external onlyOwner {\r\n        _maxWalletAmount = (_totalSupply * amountPercent ) / 1000;\r\n    }\r\n\r\n    function setFee(uint256 _liquidityFee, uint256 _marketingFee) external onlyOwner {\r\n         liquidityFee = _liquidityFee; \r\n         marketingFee = _marketingFee;\r\n         totalFee = liquidityFee + marketingFee;\r\n    }    \r\n    \r\n    event AutoLiquify(uint256 amountETH, uint256 amountBOG);\r\n}",
    "etherscan_verified": true
}