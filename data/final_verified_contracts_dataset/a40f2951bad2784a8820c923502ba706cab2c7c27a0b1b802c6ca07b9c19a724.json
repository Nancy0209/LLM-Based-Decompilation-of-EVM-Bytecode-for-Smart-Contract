{
    "address": "0x172F7a6F8C76321376cf077c4b68f6C0A0907d2f",
    "tx_hash": "a40f2951bad2784a8820c923502ba706cab2c7c27a0b1b802c6ca07b9c19a724",
    "block_number": 18003110,
    "timestamp": 1693104371,
    "gas_used_in_creation": 8166844,
    "creation_bytecode": "",
    "runtime_bytecode": "6080604052600436106102345760003560e01c806370a082311161012e578063bf56b371116100ab578063f0fc6bca1161006f578063f0fc6bca14610874578063f2fde38b1461088b578063f4293890146108b4578063f708a64f146108cb578063f887ea40146108f45761023b565b8063bf56b3711461079f578063bffb691d146107ca578063c9567bf9146107f5578063d12a76881461080c578063dd62ed3e146108375761023b565b80638ecc37fb116100f25780638ecc37fb1461069257806395d89b41146106cf578063a8aa1b31146106fa578063a9059cbb14610725578063b1a4e0dc146107625761023b565b806370a08231146105bd578063736a83a1146105fa57806375f0a87414610625578063764ca51214610650578063893d20e8146106675761023b565b80632f54bf6e116101bc5780635cc33f74116101805780635cc33f74146104da5780635d098b3814610517578063658d4b7f1461054057806367ee5f091461056957806369fe0e2d146105945761023b565b80632f54bf6e146103f5578063313ce56714610432578063342aa8b51461045d5780633e07ce5b14610486578063571ac8b01461049d5761023b565b806318160ddd1161020357806318160ddd146102fc57806323b635851461032757806323b872dd1461036457806329e04b4a146103a15780632b112e49146103ca5761023b565b806306fdde0314610240578063095ea7b31461026b57806312fb4187146102a857806315f7e05e146102d35761023b565b3661023b57005b600080fd5b34801561024c57600080fd5b5061025561091f565b6040516102629190613526565b60405180910390f35b34801561027757600080fd5b50610292600480360381019061028d91906135e1565b61095c565b60405161029f919061363c565b60405180910390f35b3480156102b457600080fd5b506102bd610a4e565b6040516102ca9190613666565b60405180910390f35b3480156102df57600080fd5b506102fa60048036038101906102f59190613681565b610a72565b005b34801561030857600080fd5b50610311610b4a565b60405161031e91906136bd565b60405180910390f35b34801561033357600080fd5b5061034e600480360381019061034991906136d8565b610b54565b60405161035b919061363c565b60405180910390f35b34801561037057600080fd5b5061038b60048036038101906103869190613705565b610bd2565b604051610398919061363c565b60405180910390f35b3480156103ad57600080fd5b506103c860048036038101906103c391906136d8565b610dd2565b005b3480156103d657600080fd5b506103df610e8b565b6040516103ec91906136bd565b60405180910390f35b34801561040157600080fd5b5061041c60048036038101906104179190613681565b610f0d565b604051610429919061363c565b60405180910390f35b34801561043e57600080fd5b50610447610f66565b6040516104549190613774565b60405180910390f35b34801561046957600080fd5b50610484600480360381019061047f91906137bb565b610f6f565b005b34801561049257600080fd5b5061049b61101c565b005b3480156104a957600080fd5b506104c460048036038101906104bf9190613681565b611081565b6040516104d1919061363c565b60405180910390f35b3480156104e657600080fd5b5061050160048036038101906104fc9190613681565b6110b4565b60405161050e91906136bd565b60405180910390f35b34801561052357600080fd5b5061053e60048036038101906105399190613681565b611159565b005b34801561054c57600080fd5b50610567600480360381019061056291906137bb565b6111e5565b005b34801561057557600080fd5b5061057e611288565b60405161058b91906136bd565b60405180910390f35b3480156105a057600080fd5b506105bb60048036038101906105b691906136d8565b611320565b005b3480156105c957600080fd5b506105e460048036038101906105df9190613681565b6113b6565b6040516105f191906136bd565b60405180910390f35b34801561060657600080fd5b5061060f6113ff565b60405161061c91906136bd565b60405180910390f35b34801561063157600080fd5b5061063a611497565b604051610647919061381c565b60405180910390f35b34801561065c57600080fd5b506106656114bd565b005b34801561067357600080fd5b5061067c611578565b6040516106899190613666565b60405180910390f35b34801561069e57600080fd5b506106b960048036038101906106b49190613681565b6115a1565b6040516106c691906136bd565b60405180910390f35b3480156106db57600080fd5b506106e4611646565b6040516106f19190613526565b60405180910390f35b34801561070657600080fd5b5061070f611683565b60405161071c9190613666565b60405180910390f35b34801561073157600080fd5b5061074c600480360381019061074791906135e1565b6116a9565b604051610759919061363c565b60405180910390f35b34801561076e57600080fd5b5061078960048036038101906107849190613681565b6116be565b604051610796919061363c565b60405180910390f35b3480156107ab57600080fd5b506107b4611714565b6040516107c191906136bd565b60405180910390f35b3480156107d657600080fd5b506107df61171a565b6040516107ec919061363c565b60405180910390f35b34801561080157600080fd5b5061080a61172d565b005b34801561081857600080fd5b50610821611799565b60405161082e91906136bd565b60405180910390f35b34801561084357600080fd5b5061085e60048036038101906108599190613837565b61179f565b60405161086b91906136bd565b60405180910390f35b34801561088057600080fd5b50610889611826565b005b34801561089757600080fd5b506108b260048036038101906108ad91906138a3565b6118b5565b005b3480156108c057600080fd5b506108c9611977565b005b3480156108d757600080fd5b506108f260048036038101906108ed91906137bb565b611a30565b005b34801561090057600080fd5b50610909611a86565b604051610916919061392f565b60405180910390f35b60606040518060400160405280600e81526020017f5072696e74205468652053686961000000000000000000000000000000000000815250905090565b600081600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610a3c91906136bd565b60405180910390a36001905092915050565b7f00000000000000000000000043d7e65b8ff49698d9550a7f315c87e67344fb5981565b610a7b33610f0d565b610aba576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ab190613996565b60405180910390fd5b601560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166315f7e05e826040518263ffffffff1660e01b8152600401610b159190613666565b600060405180830381600087803b158015610b2f57600080fd5b505af1158015610b43573d6000803e3d6000fd5b5050505050565b6000600454905090565b6000610b5f33610f0d565b610b9e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b9590613996565b60405180910390fd5b610bcb30600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1684611aac565b9050919050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600760008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414610dbe57610d3d826040518060400160405280601681526020017f496e73756666696369656e7420416c6c6f77616e636500000000000000000000815250600760008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611c7f9092919063ffffffff16565b600760008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b610dc9848484611ce3565b90509392505050565b610ddb33610f0d565b610e1a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e1190613996565b60405180910390fd5b610e30606460045461272990919063ffffffff16565b811115610e72576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e6990613a02565b60405180910390fd5b633b9aca0081610e829190613a51565b60148190555050565b6000610f08610ebb600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166113b6565b610efa610ee9600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166113b6565b60045461277390919063ffffffff16565b61277390919063ffffffff16565b905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16149050919050565b60006009905090565b610f7833610f0d565b610fb7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fae90613996565b60405180910390fd5b80600b60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555061101882826127bd565b5050565b61102533610f0d565b611064576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161105b90613996565b60405180910390fd5b6000601260016101000a81548160ff021916908315150217905550565b60006110ad827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff61095c565b9050919050565b6000601560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635cc33f74836040518263ffffffff1660e01b81526004016111119190613666565b602060405180830381865afa15801561112e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111529190613ac0565b9050919050565b61116233610f0d565b6111a1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161119890613996565b60405180910390fd5b80600e60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6111ee33610f0d565b61122d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161122490613996565b60405180910390fd5b80600960008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b6000601560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663997664d76040518163ffffffff1660e01b8152600401602060405180830381865afa1580156112f7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061131b9190613ac0565b905090565b61132933610f0d565b611368576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161135f90613996565b60405180910390fd5b60238111156113ac576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113a390613b39565b60405180910390fd5b80600c8190555050565b6000600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000601560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d54ad2a16040518163ffffffff1660e01b8152600401602060405180830381865afa15801561146e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114929190613ac0565b905090565b600e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6114c633610f0d565b611505576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114fc90613996565b60405180910390fd5b60001515601560149054906101000a900460ff1615151461155b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161155290613ba5565b60405180910390fd5b6001601560146101000a81548160ff021916908315150217905550565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000601560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638ecc37fb836040518263ffffffff1660e01b81526004016115fe9190613666565b602060405180830381865afa15801561161b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061163f9190613ac0565b9050919050565b60606040518060400160405280600581526020017f5053484941000000000000000000000000000000000000000000000000000000815250905090565b601060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006116b6338484611ce3565b905092915050565b6000600b60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b60115481565b601560149054906101000a900460ff1681565b61173633610f0d565b611775576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161176c90613996565b60405180910390fd5b436011819055506001601260006101000a81548160ff021916908315150217905550565b60145481565b6000600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b601560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166315f7e05e336040518263ffffffff1660e01b81526004016118819190613666565b600060405180830381600087803b15801561189b57600080fd5b505af11580156118af573d6000803e3d6000fd5b50505050565b6118be33610f0d565b6118fd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016118f490613996565b60405180910390fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f04dba622d284ed0014ee4b9a6a68386be1a4c08a4913ae272de89199cc6861638160405161196c9190613be6565b60405180910390a150565b61198033610f0d565b6119bf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016119b690613996565b60405180910390fd5b6000479050600e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015611a2c573d6000803e3d6000fd5b5050565b611a3933610f0d565b611a78576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a6f90613996565b60405180910390fd5b611a8282826127bd565b5050565b600f60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000611b37826040518060400160405280601481526020017f496e73756666696369656e742042616c616e6365000000000000000000000000815250600660008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611c7f9092919063ffffffff16565b600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550611bcc82600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612a1590919063ffffffff16565b600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051611c6c91906136bd565b60405180910390a3600190509392505050565b6000838311158290611cc7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611cbe9190613526565b60405180910390fd5b5060008385611cd69190613c01565b9050809150509392505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614158015611d8e575060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614155b15611de357601260009054906101000a900460ff16611de2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611dd990613c81565b60405180910390fd5b5b601560149054906101000a900460ff1615611edc57600b60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16158015611e9c5750600b60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16155b611edb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611ed290613ced565b60405180910390fd5b5b601260019054906101000a900460ff1615611fe55760008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614158015611f99575060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614155b15611fe457601354821115611fe3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611fda90613d59565b60405180910390fd5b5b5b601060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480156120905750600f60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614155b80156120e65750600960008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16155b156121875742600860008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541061213657600080fd5b603c426121439190613d79565b600860008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b60158054906101000a900460ff16156121ac576121a5848484611aac565b9050612722565b60006121b7306113b6565b905060006014548210159050600081801561221f5750601060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff16145b801561223357506000612231306113b6565b115b9050801561224457612243612a73565b5b6122cd856040518060400160405280601481526020017f496e73756666696369656e742042616c616e6365000000000000000000000000815250600660008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611c7f9092919063ffffffff16565b600660008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600061231c8888612d50565b6123265785612331565b6123308887612ead565b5b905061238581600660008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612a1590919063ffffffff16565b600660008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550601060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff16141580156124705750600a60008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16155b1561253e57601560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166314b6ca9689600660008c73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518363ffffffff1660e01b8152600401612511929190613dcf565b600060405180830381600087803b15801561252b57600080fd5b505af192505050801561253c575060015b505b601060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff16141580156125e65750600a60008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16155b156126b457601560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166314b6ca9688600660008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518363ffffffff1660e01b8152600401612687929190613dcf565b600060405180830381600087803b1580156126a157600080fd5b505af19250505080156126b2575060015b505b8673ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161271191906136bd565b60405180910390a360019450505050505b9392505050565b600061276b83836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250612ff1565b905092915050565b60006127b583836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250611c7f565b905092915050565b3073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141580156128475750601060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b61285057600080fd5b80600a60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550801561294257601560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166314b6ca968360006040518363ffffffff1660e01b815260040161290b929190613e33565b600060405180830381600087803b15801561292557600080fd5b505af1158015612939573d6000803e3d6000fd5b50505050612a11565b601560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166314b6ca9683600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518363ffffffff1660e01b81526004016129de929190613dcf565b600060405180830381600087803b1580156129f857600080fd5b505af1158015612a0c573d6000803e3d6000fd5b505050505b5050565b6000808284612a249190613d79565b905083811015612a69576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612a6090613ea8565b60405180910390fd5b8091505092915050565b60016015806101000a81548160ff0219169083151502179055506000612a98306113b6565b9050612ab6612ab160028361272990919063ffffffff16565b613054565b612ad2612acd60028361272990919063ffffffff16565b6131fc565b60007f00000000000000000000000043d7e65b8ff49698d9550a7f315c87e67344fb5973ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401612b2d9190613666565b602060405180830381865afa158015612b4a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612b6e9190613ac0565b905060007f00000000000000000000000043d7e65b8ff49698d9550a7f315c87e67344fb5973ffffffffffffffffffffffffffffffffffffffff1663a9059cbb601560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16846040518363ffffffff1660e01b8152600401612bef929190613dcf565b6020604051808303816000875af1158015612c0e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612c329190613edd565b90508015612cc857601560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b6b55f25836040518263ffffffff1660e01b8152600401612c9591906136bd565b600060405180830381600087803b158015612caf57600080fd5b505af1158015612cc3573d6000803e3d6000fd5b505050505b600e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f19350505050158015612d30573d6000803e3d6000fd5b5050505060006015806101000a81548160ff021916908315150217905550565b6000600960008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1680612df35750600960008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff165b158015612ea55750601060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161480612ea45750601060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16145b5b905092915050565b600080612ed9600d54612ecb600c548661341390919063ffffffff16565b61272990919063ffffffff16565b9050612f2d81600660003073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612a1590919063ffffffff16565b600660003073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055503073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051612fcd91906136bd565b60405180910390a3612fe8818461277390919063ffffffff16565b91505092915050565b60008083118290613038576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161302f9190613526565b60405180910390fd5b50600083856130479190613f39565b9050809150509392505050565b6000600267ffffffffffffffff81111561307157613070613f6a565b5b60405190808252806020026020018201604052801561309f5781602001602082028036833780820191505090505b50905030816000815181106130b7576130b6613f99565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160018151811061312857613127613f99565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050600f60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663791ac9478360008430426040518663ffffffff1660e01b81526004016131c6959493929190614086565b600060405180830381600087803b1580156131e057600080fd5b505af11580156131f4573d6000803e3d6000fd5b505050505050565b6000600367ffffffffffffffff81111561321957613218613f6a565b5b6040519080825280602002602001820160405280156132475781602001602082028036833780820191505090505b509050308160008151811061325f5761325e613f99565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16816001815181106132d0576132cf613f99565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250507f00000000000000000000000043d7e65b8ff49698d9550a7f315c87e67344fb598160028151811061333f5761333e613f99565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050600f60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635c11d7958360008430426040518663ffffffff1660e01b81526004016133dd959493929190614086565b600060405180830381600087803b1580156133f757600080fd5b505af115801561340b573d6000803e3d6000fd5b505050505050565b60008083036134255760009050613487565b600082846134339190613a51565b90508284826134429190613f39565b14613482576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161347990614152565b60405180910390fd5b809150505b92915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156134c75780820151818401526020810190506134ac565b838111156134d6576000848401525b50505050565b6000601f19601f8301169050919050565b60006134f88261348d565b6135028185613498565b93506135128185602086016134a9565b61351b816134dc565b840191505092915050565b6000602082019050818103600083015261354081846134ed565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006135788261354d565b9050919050565b6135888161356d565b811461359357600080fd5b50565b6000813590506135a58161357f565b92915050565b6000819050919050565b6135be816135ab565b81146135c957600080fd5b50565b6000813590506135db816135b5565b92915050565b600080604083850312156135f8576135f7613548565b5b600061360685828601613596565b9250506020613617858286016135cc565b9150509250929050565b60008115159050919050565b61363681613621565b82525050565b6000602082019050613651600083018461362d565b92915050565b6136608161356d565b82525050565b600060208201905061367b6000830184613657565b92915050565b60006020828403121561369757613696613548565b5b60006136a584828501613596565b91505092915050565b6136b7816135ab565b82525050565b60006020820190506136d260008301846136ae565b92915050565b6000602082840312156136ee576136ed613548565b5b60006136fc848285016135cc565b91505092915050565b60008060006060848603121561371e5761371d613548565b5b600061372c86828701613596565b935050602061373d86828701613596565b925050604061374e868287016135cc565b9150509250925092565b600060ff82169050919050565b61376e81613758565b82525050565b60006020820190506137896000830184613765565b92915050565b61379881613621565b81146137a357600080fd5b50565b6000813590506137b58161378f565b92915050565b600080604083850312156137d2576137d1613548565b5b60006137e085828601613596565b92505060206137f1858286016137a6565b9150509250929050565b60006138068261354d565b9050919050565b613816816137fb565b82525050565b6000602082019050613831600083018461380d565b92915050565b6000806040838503121561384e5761384d613548565b5b600061385c85828601613596565b925050602061386d85828601613596565b9150509250929050565b613880816137fb565b811461388b57600080fd5b50565b60008135905061389d81613877565b92915050565b6000602082840312156138b9576138b8613548565b5b60006138c78482850161388e565b91505092915050565b6000819050919050565b60006138f56138f06138eb8461354d565b6138d0565b61354d565b9050919050565b6000613907826138da565b9050919050565b6000613919826138fc565b9050919050565b6139298161390e565b82525050565b60006020820190506139446000830184613920565b92915050565b7f214f776e65720000000000000000000000000000000000000000000000000000600082015250565b6000613980600683613498565b915061398b8261394a565b602082019050919050565b600060208201905081810360008301526139af81613973565b9050919050565b7f63616e2774206578636565642031250000000000000000000000000000000000600082015250565b60006139ec600f83613498565b91506139f7826139b6565b602082019050919050565b60006020820190508181036000830152613a1b816139df565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000613a5c826135ab565b9150613a67836135ab565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615613aa057613a9f613a22565b5b828202905092915050565b600081519050613aba816135b5565b92915050565b600060208284031215613ad657613ad5613548565b5b6000613ae484828501613aab565b91505092915050565b7f4665652063616e27742065786365656420333525000000000000000000000000600082015250565b6000613b23601483613498565b9150613b2e82613aed565b602082019050919050565b60006020820190508181036000830152613b5281613b16565b9050919050565b7f63616e206f6e6c792062652063616c6c6564206f6e6365000000000000000000600082015250565b6000613b8f601783613498565b9150613b9a82613b59565b602082019050919050565b60006020820190508181036000830152613bbe81613b82565b9050919050565b6000613bd0826138fc565b9050919050565b613be081613bc5565b82525050565b6000602082019050613bfb6000830184613bd7565b92915050565b6000613c0c826135ab565b9150613c17836135ab565b925082821015613c2a57613c29613a22565b5b828203905092915050565b7f54726164696e67206e6f742079657420656e61626c65642e0000000000000000600082015250565b6000613c6b601883613498565b9150613c7682613c35565b602082019050919050565b60006020820190508181036000830152613c9a81613c5e565b9050919050565b7f426f742100000000000000000000000000000000000000000000000000000000600082015250565b6000613cd7600483613498565b9150613ce282613ca1565b602082019050919050565b60006020820190508181036000830152613d0681613cca565b9050919050565b7f546f6f206d756368207369720000000000000000000000000000000000000000600082015250565b6000613d43600c83613498565b9150613d4e82613d0d565b602082019050919050565b60006020820190508181036000830152613d7281613d36565b9050919050565b6000613d84826135ab565b9150613d8f836135ab565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115613dc457613dc3613a22565b5b828201905092915050565b6000604082019050613de46000830185613657565b613df160208301846136ae565b9392505050565b6000819050919050565b6000613e1d613e18613e1384613df8565b6138d0565b6135ab565b9050919050565b613e2d81613e02565b82525050565b6000604082019050613e486000830185613657565b613e556020830184613e24565b9392505050565b7f536166654d6174683a206164646974696f6e206f766572666c6f770000000000600082015250565b6000613e92601b83613498565b9150613e9d82613e5c565b602082019050919050565b60006020820190508181036000830152613ec181613e85565b9050919050565b600081519050613ed78161378f565b92915050565b600060208284031215613ef357613ef2613548565b5b6000613f0184828501613ec8565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000613f44826135ab565b9150613f4f836135ab565b925082613f5f57613f5e613f0a565b5b828204905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b613ffd8161356d565b82525050565b600061400f8383613ff4565b60208301905092915050565b6000602082019050919050565b600061403382613fc8565b61403d8185613fd3565b935061404883613fe4565b8060005b838110156140795781516140608882614003565b975061406b8361401b565b92505060018101905061404c565b5085935050505092915050565b600060a08201905061409b60008301886136ae565b6140a86020830187613e24565b81810360408301526140ba8186614028565b90506140c96060830185613657565b6140d660808301846136ae565b9695505050505050565b7f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f60008201527f7700000000000000000000000000000000000000000000000000000000000000602082015250565b600061413c602183613498565b9150614147826140e0565b604082019050919050565b6000602082019050818103600083015261416b8161412f565b905091905056fea26469706673582212204e6b517c81f7d85c4e1340bdccfd997b4ac806dedfb7cd94784ddcfb13ef00bd64736f6c634300080d0033",
    "contract_name": "PrintTheShia",
    "compiler_version": "v0.8.13+commit.abaa5c0e",
    "optimization_used": "0",
    "runs": "200",
    "abi": "[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"SHIA\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"holder\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"approveMax\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"blacklistEnabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"checkBot\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"holder\",\"type\":\"address\"}],\"name\":\"claimDividend\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimDividend\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCirculatingSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"shareholder\",\"type\":\"address\"}],\"name\":\"getClaimableDividendOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"shareholder\",\"type\":\"address\"}],\"name\":\"getDividendsClaimedOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTotalClaimed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTotalDividends\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"launchedAt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"manualBurn\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"manualSend\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"marketingWallet\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"numTokensSellToAddToLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"openTrading\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"removeBuyLimit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"router\",\"outputs\":[{\"internalType\":\"contract IDEXRouter\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setBlacklistEnabled\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"toggle\",\"type\":\"bool\"}],\"name\":\"setBot\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_fee\",\"type\":\"uint256\"}],\"name\":\"setFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"holder\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"exempt\",\"type\":\"bool\"}],\"name\":\"setIsDividendExempt\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"holder\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"exempt\",\"type\":\"bool\"}],\"name\":\"setIsFeeExempt\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_marketingWallet\",\"type\":\"address\"}],\"name\":\"setMarketingWallet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"setSwapThresholdAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"adr\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]",
    "source_code": "/**\r\nPrint The Shia $PSHIA\r\n\r\nWebsite: https://shiaprinter.com/\r\nTelegram: https://t.me/PrintShiaERC\r\n\r\n*/\r\n\r\n// SPDX-License-Identifier: Unlicensed\r\n\r\npragma solidity 0.8.13;\r\n\r\n/**\r\n * Standard SafeMath, stripped down to just add/sub/mul/div\r\n */\r\nlibrary SafeMath {\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a + b;\r\n        require(c >= a, \"SafeMath: addition overflow\");\r\n\r\n        return c;\r\n    }\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return sub(a, b, \"SafeMath: subtraction overflow\");\r\n    }\r\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        require(b <= a, errorMessage);\r\n        uint256 c = a - b;\r\n\r\n        return c;\r\n    }\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        if (a == 0) {\r\n            return 0;\r\n        }\r\n\r\n        uint256 c = a * b;\r\n        require(c / a == b, \"SafeMath: multiplication overflow\");\r\n\r\n        return c;\r\n    }\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return div(a, b, \"SafeMath: division by zero\");\r\n    }\r\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        // Solidity only automatically asserts when dividing by 0\r\n        require(b > 0, errorMessage);\r\n        uint256 c = a / b;\r\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\r\n\r\n        return c;\r\n    }\r\n}\r\n\r\n/**\r\n * ERC20 standard interface.\r\n */\r\ninterface IERC20 {\r\n    function totalSupply() external view returns (uint256);\r\n    function decimals() external view returns (uint8);\r\n    function symbol() external view returns (string memory);\r\n    function name() external view returns (string memory);\r\n    function getOwner() external view returns (address);\r\n    function balanceOf(address account) external view returns (uint256);\r\n    function transfer(address recipient, uint256 amount) external returns (bool);\r\n    function allowance(address _owner, address spender) external view returns (uint256);\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}\r\n\r\n/**\r\n * Allows for contract ownership along with multi-address authorization\r\n */\r\nabstract contract Auth {\r\n    address internal owner;\r\n\r\n    constructor(address _owner) {\r\n        owner = _owner;\r\n    }\r\n\r\n    /**\r\n     * Function modifier to require caller to be contract deployer\r\n     */\r\n    modifier onlyOwner() {\r\n        require(isOwner(msg.sender), \"!Owner\"); _;\r\n    }\r\n\r\n    /**\r\n     * Check if address is owner\r\n     */\r\n    function isOwner(address account) public view returns (bool) {\r\n        return account == owner;\r\n    }\r\n\r\n    /**\r\n     * Transfer ownership to new address. Caller must be deployer. Leaves old deployer authorized\r\n     */\r\n    function transferOwnership(address payable adr) public onlyOwner {\r\n        owner = adr;\r\n        emit OwnershipTransferred(adr);\r\n    }\r\n\r\n    event OwnershipTransferred(address owner);\r\n}\r\n\r\ninterface IDEXFactory {\r\n    function createPair(address tokenA, address tokenB) external returns (address pair);\r\n}\r\n\r\ninterface IDEXRouter {\r\n    function factory() external pure returns (address);\r\n    function WETH() external pure returns (address);\r\n\r\n    function addLiquidity(\r\n        address tokenA,\r\n        address tokenB,\r\n        uint amountADesired,\r\n        uint amountBDesired,\r\n        uint amountAMin,\r\n        uint amountBMin,\r\n        address to,\r\n        uint deadline\r\n    ) external returns (uint amountA, uint amountB, uint liquidity);\r\n\r\n    function addLiquidityETH(\r\n        address token,\r\n        uint amountTokenDesired,\r\n        uint amountTokenMin,\r\n        uint amountETHMin,\r\n        address to,\r\n        uint deadline\r\n    ) external payable returns (uint amountToken, uint amountETH, uint liquidity);\r\n\r\n    function swapExactTokensForTokensSupportingFeeOnTransferTokens(\r\n        uint amountIn,\r\n        uint amountOutMin,\r\n        address[] calldata path,\r\n        address to,\r\n        uint deadline\r\n    ) external;\r\n\r\n    function swapExactETHForTokensSupportingFeeOnTransferTokens(\r\n        uint amountOutMin,\r\n        address[] calldata path,\r\n        address to,\r\n        uint deadline\r\n    ) external payable;\r\n\r\n    function swapExactTokensForETHSupportingFeeOnTransferTokens(\r\n        uint amountIn,\r\n        uint amountOutMin,\r\n        address[] calldata path,\r\n        address to,\r\n        uint deadline\r\n    ) external;\r\n}\r\n\r\ninterface IDividendDistributor {\r\n    function setShare(address shareholder, uint256 amount) external;\r\n    function deposit(uint256 amount) external;\r\n    function claimDividend(address shareholder) external;\r\n    function getDividendsClaimedOf (address shareholder) external returns (uint256);\r\n}\r\n\r\ncontract DividendDistributor is IDividendDistributor {\r\n    using SafeMath for uint256;\r\n\r\n    address public _token;\r\n    address public _owner;\r\n\r\n    address public immutable SHIA = address(0x43D7E65B8fF49698D9550a7F315c87E67344FB59); //SHIA\r\n\r\n\r\n    struct Share {\r\n        uint256 amount;\r\n        uint256 totalExcluded;\r\n        uint256 totalClaimed;\r\n    }\r\n\r\n    address[] private shareholders;\r\n    mapping (address => uint256) private shareholderIndexes;\r\n\r\n    mapping (address => Share) public shares;\r\n\r\n    uint256 public totalShares;\r\n    uint256 public totalDividends;\r\n    uint256 public totalClaimed;\r\n    uint256 public dividendsPerShare;\r\n    uint256 private dividendsPerShareAccuracyFactor = 10 ** 36;\r\n\r\n    modifier onlyToken() {\r\n        require(msg.sender == _token); _;\r\n    }\r\n    \r\n    modifier onlyOwner() {\r\n        require(msg.sender == _owner); _;\r\n    }\r\n\r\n    constructor (address owner) {\r\n        _token = msg.sender;\r\n        _owner = owner;\r\n    }\r\n\r\n    receive() external payable { }\r\n\r\n    function setShare(address shareholder, uint256 amount) external override onlyToken {\r\n        if(shares[shareholder].amount > 0){\r\n            distributeDividend(shareholder);\r\n        }\r\n\r\n        if(amount > 0 && shares[shareholder].amount == 0){\r\n            addShareholder(shareholder);\r\n        }else if(amount == 0 && shares[shareholder].amount > 0){\r\n            removeShareholder(shareholder);\r\n        }\r\n\r\n        totalShares = totalShares.sub(shares[shareholder].amount).add(amount);\r\n        shares[shareholder].amount = amount;\r\n        shares[shareholder].totalExcluded = getCumulativeDividends(shares[shareholder].amount);\r\n    }\r\n\r\n    function deposit(uint256 amount) external override onlyToken {\r\n        \r\n        if (amount > 0) {        \r\n            totalDividends = totalDividends.add(amount);\r\n            dividendsPerShare = dividendsPerShare.add(dividendsPerShareAccuracyFactor.mul(amount).div(totalShares));\r\n        }\r\n    }\r\n\r\n    function distributeDividend(address shareholder) internal {\r\n        if(shares[shareholder].amount == 0){ return; }\r\n\r\n        uint256 amount = getClaimableDividendOf(shareholder);\r\n        if(amount > 0){\r\n            totalClaimed = totalClaimed.add(amount);\r\n            shares[shareholder].totalClaimed = shares[shareholder].totalClaimed.add(amount);\r\n            shares[shareholder].totalExcluded = getCumulativeDividends(shares[shareholder].amount);\r\n            IERC20(SHIA).transfer(shareholder, amount);\r\n        }\r\n    }\r\n\r\n    function claimDividend(address shareholder) external override onlyToken {\r\n        distributeDividend(shareholder);\r\n    }\r\n\r\n    function getClaimableDividendOf(address shareholder) public view returns (uint256) {\r\n        if(shares[shareholder].amount == 0){ return 0; }\r\n\r\n        uint256 shareholderTotalDividends = getCumulativeDividends(shares[shareholder].amount);\r\n        uint256 shareholderTotalExcluded = shares[shareholder].totalExcluded;\r\n\r\n        if(shareholderTotalDividends <= shareholderTotalExcluded){ return 0; }\r\n\r\n        return shareholderTotalDividends.sub(shareholderTotalExcluded);\r\n    }\r\n\r\n    function getCumulativeDividends(uint256 share) internal view returns (uint256) {\r\n        return share.mul(dividendsPerShare).div(dividendsPerShareAccuracyFactor);\r\n    }\r\n\r\n    function addShareholder(address shareholder) internal {\r\n        shareholderIndexes[shareholder] = shareholders.length;\r\n        shareholders.push(shareholder);\r\n    }\r\n\r\n    function removeShareholder(address shareholder) internal {\r\n        shareholders[shareholderIndexes[shareholder]] = shareholders[shareholders.length-1];\r\n        shareholderIndexes[shareholders[shareholders.length-1]] = shareholderIndexes[shareholder];\r\n        shareholders.pop();\r\n    }\r\n    \r\n    function manualSend(uint256 amount, address holder) external onlyOwner {\r\n        uint256 contractETHBalance = address(this).balance;\r\n        payable(holder).transfer(amount > 0 ? amount : contractETHBalance);\r\n    }\r\n\r\n\r\n    function getDividendsClaimedOf (address shareholder) external view returns (uint256) {\r\n        require (shares[shareholder].amount > 0, \"You're not a PRINTER shareholder!\");\r\n        return shares[shareholder].totalClaimed;\r\n    }\r\n\r\n    }\r\n\r\ncontract PrintTheShia is IERC20, Auth {\r\n    using SafeMath for uint256;\r\n\r\n    address private WETH;\r\n    address private DEAD = 0x000000000000000000000000000000000000dEaD;\r\n    address private ZERO = 0x0000000000000000000000000000000000000000;\r\n\r\n    address public immutable SHIA = address(0x43D7E65B8fF49698D9550a7F315c87E67344FB59); //SHIA\r\n\r\n    string private constant  _name = \"Print The Shia\";\r\n    string private constant _symbol = \"PSHIA\";\r\n    uint8 private constant _decimals = 9;\r\n\r\n    uint256 private _totalSupply = 100000000000 * (10 ** _decimals);\r\n    uint256 private _maxTxAmountBuy = _totalSupply;\r\n    \r\n\r\n    mapping (address => uint256) private _balances;\r\n    mapping (address => mapping (address => uint256)) private _allowances;\r\n    mapping (address => uint256) private cooldown;\r\n\r\n    mapping (address => bool) private isFeeExempt;\r\n    mapping (address => bool) private isDividendExempt;\r\n    mapping (address => bool) private isBot;\r\n            \r\n    uint256 private totalFee = 35;\r\n    uint256 private feeDenominator = 100;\r\n\r\n    address payable public marketingWallet = payable(0xCEEe017296eDc46ebED00612FC11696520dB4883);\r\n\r\n    IDEXRouter public router;\r\n    address public pair;\r\n\r\n    uint256 public launchedAt;\r\n    bool private tradingOpen;\r\n    bool private buyLimit = true;\r\n    uint256 private maxBuy = _totalSupply;\r\n    uint256 public numTokensSellToAddToLiquidity = _totalSupply / 250;\r\n\r\n    DividendDistributor private distributor;    \r\n    \r\n    bool public blacklistEnabled = true;\r\n    bool private inSwap;\r\n    modifier swapping() { inSwap = true; _; inSwap = false; }\r\n\r\n    constructor (\r\n        address _owner        \r\n    ) Auth(_owner) {\r\n        router = IDEXRouter(0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D);\r\n            \r\n        WETH = router.WETH();\r\n        \r\n        pair = IDEXFactory(router.factory()).createPair(WETH, address(this));\r\n        \r\n        _allowances[address(this)][address(router)] = type(uint256).max;\r\n\r\n        distributor = new DividendDistributor(_owner);\r\n\r\n        isFeeExempt[_owner] = true;\r\n        isFeeExempt[marketingWallet] = true;             \r\n              \r\n        isDividendExempt[pair] = true;\r\n        isDividendExempt[address(this)] = true;\r\n        isDividendExempt[DEAD] = true;        \r\n\r\n        _balances[_owner] = _totalSupply;\r\n    \r\n        emit Transfer(address(0), _owner, _totalSupply);\r\n    }\r\n\r\n    receive() external payable { }\r\n\r\n    function totalSupply() external view override returns (uint256) { return _totalSupply; }\r\n    function decimals() external pure override returns (uint8) { return _decimals; }\r\n    function symbol() external pure override returns (string memory) { return _symbol; }\r\n    function name() external pure override returns (string memory) { return _name; }\r\n    function getOwner() external view override returns (address) { return owner; }\r\n    function balanceOf(address account) public view override returns (uint256) { return _balances[account]; }\r\n    function allowance(address holder, address spender) external view override returns (uint256) { return _allowances[holder][spender]; }\r\n\r\n    function approve(address spender, uint256 amount) public override returns (bool) {\r\n        _allowances[msg.sender][spender] = amount;\r\n        emit Approval(msg.sender, spender, amount);\r\n        return true;\r\n    }\r\n\r\n    function approveMax(address spender) external returns (bool) {\r\n        return approve(spender, type(uint256).max);\r\n    }\r\n\r\n    function transfer(address recipient, uint256 amount) external override returns (bool) {\r\n        return _transferFrom(msg.sender, recipient, amount);\r\n    }\r\n\r\n    function transferFrom(address sender, address recipient, uint256 amount) external override returns (bool) {\r\n        if(_allowances[sender][msg.sender] != type(uint256).max){\r\n            _allowances[sender][msg.sender] = _allowances[sender][msg.sender].sub(amount, \"Insufficient Allowance\");\r\n        }\r\n\r\n        return _transferFrom(sender, recipient, amount);\r\n    }\r\n\r\n    function _transferFrom(address sender, address recipient, uint256 amount) internal returns (bool) {\r\n        if (sender!= owner && recipient!= owner) require(tradingOpen, \"Trading not yet enabled.\"); //transfers disabled before openTrading\r\n        if (blacklistEnabled) {\r\n            require (!isBot[sender] && !isBot[recipient], \"Bot!\");\r\n        }\r\n        if (buyLimit) { \r\n            if (sender!=owner && recipient!= owner) require (amount<=maxBuy, \"Too much sir\");        \r\n        }\r\n\r\n        if (sender == pair && recipient != address(router) && !isFeeExempt[recipient]) {\r\n            require (cooldown[recipient] < block.timestamp);\r\n            cooldown[recipient] = block.timestamp + 60 seconds; \r\n        }\r\n       \r\n        if(inSwap){ return _basicTransfer(sender, recipient, amount); }      \r\n\r\n        uint256 contractTokenBalance = balanceOf(address(this));\r\n\r\n        bool overMinTokenBalance = contractTokenBalance >= numTokensSellToAddToLiquidity;\r\n    \r\n        bool shouldSwapBack = (overMinTokenBalance && recipient==pair && balanceOf(address(this)) > 0);\r\n        if(shouldSwapBack){ swapBack(); }\r\n\r\n        _balances[sender] = _balances[sender].sub(amount, \"Insufficient Balance\");\r\n\r\n        uint256 amountReceived = shouldTakeFee(sender, recipient) ? takeFee(sender, amount) : amount;\r\n        \r\n        _balances[recipient] = _balances[recipient].add(amountReceived);\r\n\r\n        if(sender != pair && !isDividendExempt[sender]){ try distributor.setShare(sender, _balances[sender]) {} catch {} }\r\n        if(recipient != pair && !isDividendExempt[recipient]){ try distributor.setShare(recipient, _balances[recipient]) {} catch {} }\r\n\r\n        emit Transfer(sender, recipient, amountReceived);\r\n        return true;\r\n    }\r\n    \r\n    function _basicTransfer(address sender, address recipient, uint256 amount) internal returns (bool) {\r\n        _balances[sender] = _balances[sender].sub(amount, \"Insufficient Balance\");\r\n        _balances[recipient] = _balances[recipient].add(amount);\r\n        emit Transfer(sender, recipient, amount);\r\n        return true;\r\n    }\r\n\r\n \r\n    function shouldTakeFee(address sender, address recipient) internal view returns (bool) {\r\n        return ( !(isFeeExempt[sender] || isFeeExempt[recipient]) &&  (sender == pair || recipient == pair) );\r\n   }\r\n\r\n    function takeFee(address sender, uint256 amount) internal returns (uint256) {\r\n        uint256 feeAmount;\r\n        feeAmount = amount.mul(totalFee).div(feeDenominator);\r\n        _balances[address(this)] = _balances[address(this)].add(feeAmount);\r\n        emit Transfer(sender, address(this), feeAmount);   \r\n\r\n        return amount.sub(feeAmount);\r\n    }\r\n\r\n   \r\n    function swapBack() internal swapping {\r\n\r\n        uint256 amountToSwap = balanceOf(address(this));        \r\n\r\n        swapTokensForEth(amountToSwap.div(2));\r\n        swapTokensForSHIA(amountToSwap.div(2));\r\n\r\n        uint256 dividends = IERC20(SHIA).balanceOf(address(this));\r\n\r\n        bool success = IERC20(SHIA).transfer(address(distributor), dividends);\r\n\r\n        if (success) {\r\n            distributor.deposit(dividends);            \r\n        }\r\n             \r\n        payable(marketingWallet).transfer(address(this).balance);        \r\n    }\r\n\r\n    \r\n\r\n    function swapTokensForSHIA(uint256 tokenAmount) private {\r\n\r\n        address[] memory path = new address[](3);\r\n        path[0] = address(this);\r\n        path[1] = WETH;\r\n        path[2] = SHIA;\r\n\r\n        // make the swap\r\n        router.swapExactTokensForTokensSupportingFeeOnTransferTokens(\r\n            tokenAmount,\r\n            0,\r\n            path,\r\n            address(this),\r\n            block.timestamp\r\n        );\r\n    }\r\n\r\n    function swapTokensForEth(uint256 tokenAmount) private {\r\n\r\n        // generate the uniswap pair path of token -> weth\r\n        address[] memory path = new address[](2);\r\n        path[0] = address(this);\r\n        path[1] = WETH;\r\n\r\n        // make the swap\r\n        router.swapExactTokensForETHSupportingFeeOnTransferTokens(\r\n            tokenAmount,\r\n            0, // accept any amount of ETH\r\n            path,\r\n            address(this),\r\n            block.timestamp\r\n        );\r\n    }\r\n\r\n    function addLiquidity(uint256 tokenAmount, uint256 ethAmount) private {\r\n        \r\n        // add the liquidity\r\n        router.addLiquidityETH{value: ethAmount}(\r\n            address(this),\r\n            tokenAmount,\r\n            0, // slippage is unavoidable\r\n            0, // slippage is unavoidable\r\n            owner,\r\n            block.timestamp\r\n        );\r\n    }\r\n\r\n    \r\n    function openTrading() external onlyOwner {\r\n        launchedAt = block.number;\r\n        tradingOpen = true;\r\n    }    \r\n  \r\n    \r\n    function setBot(address _address, bool toggle) external onlyOwner {\r\n        isBot[_address] = toggle;\r\n        _setIsDividendExempt(_address, toggle);\r\n    }\r\n    \r\n    \r\n    function _setIsDividendExempt(address holder, bool exempt) internal {\r\n        require(holder != address(this) && holder != pair);\r\n        isDividendExempt[holder] = exempt;\r\n        if(exempt){\r\n            distributor.setShare(holder, 0);\r\n        }else{\r\n            distributor.setShare(holder, _balances[holder]);\r\n        }\r\n    }\r\n\r\n    function setIsDividendExempt(address holder, bool exempt) external onlyOwner {\r\n        _setIsDividendExempt(holder, exempt);\r\n    }\r\n\r\n    function setIsFeeExempt(address holder, bool exempt) external onlyOwner {\r\n        isFeeExempt[holder] = exempt;\r\n    }\r\n\r\n    function setFee (uint256 _fee) external onlyOwner {\r\n        require (_fee <= 35, \"Fee can't exceed 35%\");\r\n        totalFee = _fee;\r\n    }\r\n  \r\n    function manualSend() external onlyOwner {\r\n        uint256 contractETHBalance = address(this).balance;\r\n        payable(marketingWallet).transfer(contractETHBalance);\r\n    }\r\n\r\n    function claimDividend() external {\r\n        distributor.claimDividend(msg.sender);\r\n    }\r\n    \r\n    function claimDividend(address holder) external onlyOwner {\r\n        distributor.claimDividend(holder);\r\n    }\r\n    \r\n    function getClaimableDividendOf(address shareholder) public view returns (uint256) {\r\n        return distributor.getClaimableDividendOf(shareholder);\r\n    }\r\n    \r\n    function manualBurn(uint256 amount) external onlyOwner returns (bool) {\r\n        return _basicTransfer(address(this), DEAD, amount);\r\n    }\r\n    \r\n    function getCirculatingSupply() public view returns (uint256) {\r\n        return _totalSupply.sub(balanceOf(DEAD)).sub(balanceOf(ZERO));\r\n    }\r\n\r\n    function setMarketingWallet(address _marketingWallet) external onlyOwner {\r\n        marketingWallet = payable(_marketingWallet);\r\n    } \r\n\r\n    function getTotalDividends() external view returns (uint256) {\r\n        return distributor.totalDividends();\r\n    }    \r\n\r\n    function getTotalClaimed() external view returns (uint256) {\r\n        return distributor.totalClaimed();\r\n    }\r\n\r\n     function getDividendsClaimedOf (address shareholder) external view returns (uint256) {\r\n        return distributor.getDividendsClaimedOf(shareholder);\r\n    }\r\n\r\n    function removeBuyLimit() external onlyOwner {\r\n        buyLimit = false;\r\n    }\r\n\r\n    function checkBot(address account) public view returns (bool) {\r\n        return isBot[account];\r\n    }\r\n\r\n    function setBlacklistEnabled() external onlyOwner {\r\n        require (blacklistEnabled == false, \"can only be called once\");\r\n        blacklistEnabled = true;\r\n    }\r\n\r\n    function setSwapThresholdAmount (uint256 amount) external onlyOwner {\r\n        require (amount <= _totalSupply.div(100), \"can't exceed 1%\");\r\n        numTokensSellToAddToLiquidity = amount * 10 ** 9;\r\n    } \r\n   \r\n}",
    "etherscan_verified": true
}