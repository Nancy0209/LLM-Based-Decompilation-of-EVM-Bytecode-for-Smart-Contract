{
    "address": "0x159B1C899Ee968Db9E5e9c5adCD184a7B6052611",
    "tx_hash": "a853d535381bba45cd4469f00ba5fe3cb66fae5bf2bed37b37ea0ce86f50fcaf",
    "block_number": 18000433,
    "timestamp": 1693072103,
    "gas_used_in_creation": 3126952,
    "creation_bytecode": "60806040525f60065f6101000a81548160ff021916908315150217905550600f600755602360085560026009556002600a556014600b556019600c55601e600d555f600e556008600a62000054919062000603565b614e2062000063919062000653565b600f556008600a62000076919062000603565b614e2062000085919062000653565b6010556008600a62000098919062000603565b5f620000a5919062000653565b6011556008600a620000b8919062000603565b611388620000c7919062000653565b6012555f601460156101000a81548160ff0219169083151502179055505f601460166101000a81548160ff0219169083151502179055503480156200010a575f80fd5b505f6200011c6200044360201b60201c565b9050805f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff165f73ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a350620001c86200044360201b60201c565b600660016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506008600a62000218919062000603565b620f424062000228919062000653565b60015f6200023b6200044360201b60201c565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550600160035f6200028d6200044a60201b60201c565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550600160035f3073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550600160035f600660019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550620003b86200044360201b60201c565b73ffffffffffffffffffffffffffffffffffffffff165f73ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef6008600a62000416919062000603565b620f424062000426919062000653565b604051620004359190620006ae565b60405180910390a3620006c9565b5f33905090565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f8160011c9050919050565b5f808291508390505b6001851115620004fb57808604811115620004d357620004d262000471565b5b6001851615620004e35780820291505b8081029050620004f3856200049e565b9450620004b3565b94509492505050565b5f82620005155760019050620005e7565b8162000524575f9050620005e7565b81600181146200053d576002811462000548576200057e565b6001915050620005e7565b60ff8411156200055d576200055c62000471565b5b8360020a91508482111562000577576200057662000471565b5b50620005e7565b5060208310610133831016604e8410600b8410161715620005b85782820a905083811115620005b257620005b162000471565b5b620005e7565b620005c78484846001620004aa565b92509050818404811115620005e157620005e062000471565b5b81810290505b9392505050565b5f819050919050565b5f60ff82169050919050565b5f6200060f82620005ee565b91506200061c83620005f7565b92506200064b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff848462000504565b905092915050565b5f6200065f82620005ee565b91506200066c83620005ee565b92508282026200067c81620005ee565b9150828204841483151762000696576200069562000471565b5b5092915050565b620006a881620005ee565b82525050565b5f602082019050620006c35f8301846200069d565b92915050565b6130f480620006d75f395ff3fe608060405260043610610122575f3560e01c8063751039fc1161009f578063a9059cbb11610063578063a9059cbb146103af578063bf474bed146103eb578063c876d0b914610415578063c9567bf91461043f578063dd62ed3e1461045557610129565b8063751039fc146102f15780637d1db4a5146103075780638da5cb5b146103315780638f9a55c01461035b57806395d89b411461038557610129565b8063313ce567116100e6578063313ce567146102235780633bbac5791461024d57806351bc3c851461028957806370a082311461029f578063715018a6146102db57610129565b806306fdde031461012d578063095ea7b3146101575780630faee56f1461019357806318160ddd146101bd57806323b872dd146101e757610129565b3661012957005b5f80fd5b348015610138575f80fd5b50610141610491565b60405161014e919061220c565b60405180910390f35b348015610162575f80fd5b5061017d600480360381019061017891906122bd565b6104ce565b60405161018a9190612315565b60405180910390f35b34801561019e575f80fd5b506101a76104eb565b6040516101b4919061233d565b60405180910390f35b3480156101c8575f80fd5b506101d16104f1565b6040516101de919061233d565b60405180910390f35b3480156101f2575f80fd5b5061020d60048036038101906102089190612356565b610513565b60405161021a9190612315565b60405180910390f35b34801561022e575f80fd5b506102376105e7565b60405161024491906123c1565b60405180910390f35b348015610258575f80fd5b50610273600480360381019061026e91906123da565b6105ef565b6040516102809190612315565b60405180910390f35b348015610294575f80fd5b5061029d610641565b005b3480156102aa575f80fd5b506102c560048036038101906102c091906123da565b6106d9565b6040516102d2919061233d565b60405180910390f35b3480156102e6575f80fd5b506102ef61071f565b005b3480156102fc575f80fd5b5061030561086d565b005b348015610312575f80fd5b5061031b6109b2565b604051610328919061233d565b60405180910390f35b34801561033c575f80fd5b506103456109b8565b6040516103529190612414565b60405180910390f35b348015610366575f80fd5b5061036f6109df565b60405161037c919061233d565b60405180910390f35b348015610390575f80fd5b506103996109e5565b6040516103a6919061220c565b60405180910390f35b3480156103ba575f80fd5b506103d560048036038101906103d091906122bd565b610a22565b6040516103e29190612315565b60405180910390f35b3480156103f6575f80fd5b506103ff610a3f565b60405161040c919061233d565b60405180910390f35b348015610420575f80fd5b50610429610a45565b6040516104369190612315565b60405180910390f35b34801561044a575f80fd5b50610453610a57565b005b348015610460575f80fd5b5061047b6004803603810190610476919061242d565b610f75565b604051610488919061233d565b60405180910390f35b60606040518060400160405280600581526020017f446f6c616e000000000000000000000000000000000000000000000000000000815250905090565b5f6104e16104da610ff7565b8484610ffe565b6001905092915050565b60125481565b5f6008600a61050091906125c7565b620f424061050e9190612611565b905090565b5f61051f8484846111c1565b6105dc8461052b610ff7565b6105d7856040518060600160405280602881526020016130976028913960025f8b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f61058e610ff7565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054611c409092919063ffffffff16565b610ffe565b600190509392505050565b5f6008905090565b5f60045f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff169050919050565b600660019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610682610ff7565b73ffffffffffffffffffffffffffffffffffffffff16146106a1575f80fd5b5f6106ab306106d9565b90505f8111156106bf576106be81611ca2565b5b5f4790505f8111156106d5576106d481611f29565b5b5050565b5f60015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b610727610ff7565b73ffffffffffffffffffffffffffffffffffffffff165f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146107b3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107aa9061269c565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff165f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35f805f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b610875610ff7565b73ffffffffffffffffffffffffffffffffffffffff165f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610901576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108f89061269c565b60405180910390fd5b6008600a61090f91906125c7565b620f424061091d9190612611565b600f819055506008600a61093191906125c7565b620f424061093f9190612611565b6010819055505f60065f6101000a81548160ff0219169083151502179055507f947f344d56e1e8c70dc492fb94c4ddddd490c016aab685f5e7e47b2e85cb44cf6008600a61098d91906125c7565b620f424061099b9190612611565b6040516109a8919061233d565b60405180910390a1565b600f5481565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60105481565b60606040518060400160405280600581526020017f444f4c414e000000000000000000000000000000000000000000000000000000815250905090565b5f610a35610a2e610ff7565b84846111c1565b6001905092915050565b60115481565b60065f9054906101000a900460ff1681565b610a5f610ff7565b73ffffffffffffffffffffffffffffffffffffffff165f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610aeb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ae29061269c565b60405180910390fd5b60148054906101000a900460ff1615610b39576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b3090612704565b60405180910390fd5b737a250d5630b4cf539739df2c5dacb4c659f2488d60135f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610bd43060135f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff166008600a610bc191906125c7565b620f4240610bcf9190612611565b610ffe565b60135f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c45a01556040518163ffffffff1660e01b8152600401602060405180830381865afa158015610c3e573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610c629190612736565b73ffffffffffffffffffffffffffffffffffffffff1663c9c653963060135f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa158015610ce8573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610d0c9190612736565b6040518363ffffffff1660e01b8152600401610d29929190612761565b6020604051808303815f875af1158015610d45573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610d699190612736565b60145f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060135f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f305d7194730610df0306106d9565b5f80610dfa6109b8565b426040518863ffffffff1660e01b8152600401610e1c969594939291906127ca565b60606040518083038185885af1158015610e38573d5f803e3d5ffd5b50505050506040513d601f19601f82011682018060405250810190610e5d919061283d565b50505060145f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663095ea7b360135f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff167fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6040518363ffffffff1660e01b8152600401610efd92919061288d565b6020604051808303815f875af1158015610f19573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610f3d91906128de565b506001601460166101000a81548160ff02191690831515021790555060016014806101000a81548160ff021916908315150217905550565b5f60025f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b5f33905090565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361106c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161106390612979565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036110da576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110d190612a07565b60405180910390fd5b8060025f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516111b4919061233d565b60405180910390a3505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361122f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161122690612a95565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361129d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161129490612b23565b60405180910390fd5b5f81116112df576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112d690612bb1565b60405180910390fd5b5f6112e86109b8565b73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161415801561135657506113266109b8565b73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614155b156119905760045f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff161580156113f9575060045f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16155b611401575f80fd5b60065f9054906101000a900460ff16156115875760135f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141580156114bf575060145f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614155b15611586574360055f3273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205410611543576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161153a90612c3f565b60405180910390fd5b4360055f3273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055505b5b60145f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16148015611630575060135f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614155b8015611683575060035f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16155b1561175c57600f548211156116cd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116c490612ca7565b60405180910390fd5b601054826116da856106d9565b6116e49190612cc5565b1115611725576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161171c90612d42565b60405180910390fd5b600d54600e5410156117445761173a83611f92565b15611743575f80fd5b5b600e5f81548092919061175690612d60565b91905055505b611798606461178a600b54600e54116117775760075461177b565b6009545b85611fa390919063ffffffff16565b61201a90919063ffffffff16565b905060145f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614801561182257503073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614155b156118ab57600f5482111561186c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161186390612ca7565b60405180910390fd5b6118a8606461189a600c54600e54116118875760085461188b565b600a545b85611fa390919063ffffffff16565b61201a90919063ffffffff16565b90505b5f6118b5306106d9565b9050601460159054906101000a900460ff16158015611920575060145f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16145b80156119385750601460169054906101000a900460ff165b8015611945575060115481115b80156119545750600d54600e54115b1561198e576119766119718461196c84601254612063565b612063565b611ca2565b5f4790505f81111561198c5761198b47611f29565b5b505b505b5f811115611a8f576119e88160015f3073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205461207b90919063ffffffff16565b60015f3073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055503073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051611a86919061233d565b60405180910390a35b611adf8260015f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20546120d890919063ffffffff16565b60015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550611b82611b3682846120d890919063ffffffff16565b60015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205461207b90919063ffffffff16565b60015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef611c2584866120d890919063ffffffff16565b604051611c32919061233d565b60405180910390a350505050565b5f838311158290611c87576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611c7e919061220c565b60405180910390fd5b505f8385611c959190612da7565b9050809150509392505050565b6001601460156101000a81548160ff0219169083151502179055505f810315611f0c5760148054906101000a900460ff1615611f0c575f600267ffffffffffffffff811115611cf457611cf3612dda565b5b604051908082528060200260200182016040528015611d225781602001602082028036833780820191505090505b50905030815f81518110611d3957611d38612e07565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505060135f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa158015611ddd573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611e019190612736565b81600181518110611e1557611e14612e07565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050611e7b3060135f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1684610ffe565b60135f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663791ac947835f8430426040518663ffffffff1660e01b8152600401611edd959493929190612eeb565b5f604051808303815f87803b158015611ef4575f80fd5b505af1158015611f06573d5f803e3d5ffd5b50505050505b5f601460156101000a81548160ff02191690831515021790555050565b600660019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc8290811502906040515f60405180830381858888f19350505050158015611f8e573d5f803e3d5ffd5b5050565b5f80823b90505f8111915050919050565b5f808303611fb3575f9050612014565b5f8284611fc09190612611565b9050828482611fcf9190612f70565b1461200f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161200690613010565b60405180910390fd5b809150505b92915050565b5f61205b83836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250612121565b905092915050565b5f8183116120715782612073565b815b905092915050565b5f8082846120899190612cc5565b9050838110156120ce576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016120c590613078565b60405180910390fd5b8091505092915050565b5f61211983836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250611c40565b905092915050565b5f8083118290612167576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161215e919061220c565b60405180910390fd5b505f83856121759190612f70565b9050809150509392505050565b5f81519050919050565b5f82825260208201905092915050565b5f5b838110156121b957808201518184015260208101905061219e565b5f8484015250505050565b5f601f19601f8301169050919050565b5f6121de82612182565b6121e8818561218c565b93506121f881856020860161219c565b612201816121c4565b840191505092915050565b5f6020820190508181035f83015261222481846121d4565b905092915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61225982612230565b9050919050565b6122698161224f565b8114612273575f80fd5b50565b5f8135905061228481612260565b92915050565b5f819050919050565b61229c8161228a565b81146122a6575f80fd5b50565b5f813590506122b781612293565b92915050565b5f80604083850312156122d3576122d261222c565b5b5f6122e085828601612276565b92505060206122f1858286016122a9565b9150509250929050565b5f8115159050919050565b61230f816122fb565b82525050565b5f6020820190506123285f830184612306565b92915050565b6123378161228a565b82525050565b5f6020820190506123505f83018461232e565b92915050565b5f805f6060848603121561236d5761236c61222c565b5b5f61237a86828701612276565b935050602061238b86828701612276565b925050604061239c868287016122a9565b9150509250925092565b5f60ff82169050919050565b6123bb816123a6565b82525050565b5f6020820190506123d45f8301846123b2565b92915050565b5f602082840312156123ef576123ee61222c565b5b5f6123fc84828501612276565b91505092915050565b61240e8161224f565b82525050565b5f6020820190506124275f830184612405565b92915050565b5f80604083850312156124435761244261222c565b5b5f61245085828601612276565b925050602061246185828601612276565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f8160011c9050919050565b5f808291508390505b60018511156124ed578086048111156124c9576124c861246b565b5b60018516156124d85780820291505b80810290506124e685612498565b94506124ad565b94509492505050565b5f8261250557600190506125c0565b81612512575f90506125c0565b8160018114612528576002811461253257612561565b60019150506125c0565b60ff8411156125445761254361246b565b5b8360020a91508482111561255b5761255a61246b565b5b506125c0565b5060208310610133831016604e8410600b84101617156125965782820a9050838111156125915761259061246b565b5b6125c0565b6125a384848460016124a4565b925090508184048111156125ba576125b961246b565b5b81810290505b9392505050565b5f6125d18261228a565b91506125dc836123a6565b92506126097fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff84846124f6565b905092915050565b5f61261b8261228a565b91506126268361228a565b92508282026126348161228a565b9150828204841483151761264b5761264a61246b565b5b5092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65725f82015250565b5f61268660208361218c565b915061269182612652565b602082019050919050565b5f6020820190508181035f8301526126b38161267a565b9050919050565b7f74726164696e6720697320616c7265616479206f70656e0000000000000000005f82015250565b5f6126ee60178361218c565b91506126f9826126ba565b602082019050919050565b5f6020820190508181035f83015261271b816126e2565b9050919050565b5f8151905061273081612260565b92915050565b5f6020828403121561274b5761274a61222c565b5b5f61275884828501612722565b91505092915050565b5f6040820190506127745f830185612405565b6127816020830184612405565b9392505050565b5f819050919050565b5f819050919050565b5f6127b46127af6127aa84612788565b612791565b61228a565b9050919050565b6127c48161279a565b82525050565b5f60c0820190506127dd5f830189612405565b6127ea602083018861232e565b6127f760408301876127bb565b61280460608301866127bb565b6128116080830185612405565b61281e60a083018461232e565b979650505050505050565b5f8151905061283781612293565b92915050565b5f805f606084860312156128545761285361222c565b5b5f61286186828701612829565b935050602061287286828701612829565b925050604061288386828701612829565b9150509250925092565b5f6040820190506128a05f830185612405565b6128ad602083018461232e565b9392505050565b6128bd816122fb565b81146128c7575f80fd5b50565b5f815190506128d8816128b4565b92915050565b5f602082840312156128f3576128f261222c565b5b5f612900848285016128ca565b91505092915050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f206164645f8201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b5f61296360248361218c565b915061296e82612909565b604082019050919050565b5f6020820190508181035f83015261299081612957565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f2061646472655f8201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b5f6129f160228361218c565b91506129fc82612997565b604082019050919050565b5f6020820190508181035f830152612a1e816129e5565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f2061645f8201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b5f612a7f60258361218c565b9150612a8a82612a25565b604082019050919050565b5f6020820190508181035f830152612aac81612a73565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f20616464725f8201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b5f612b0d60238361218c565b9150612b1882612ab3565b604082019050919050565b5f6020820190508181035f830152612b3a81612b01565b9050919050565b7f5472616e7366657220616d6f756e74206d7573742062652067726561746572205f8201527f7468616e207a65726f0000000000000000000000000000000000000000000000602082015250565b5f612b9b60298361218c565b9150612ba682612b41565b604082019050919050565b5f6020820190508181035f830152612bc881612b8f565b9050919050565b7f4f6e6c79206f6e65207472616e736665722070657220626c6f636b20616c6c6f5f8201527f7765642e00000000000000000000000000000000000000000000000000000000602082015250565b5f612c2960248361218c565b9150612c3482612bcf565b604082019050919050565b5f6020820190508181035f830152612c5681612c1d565b9050919050565b7f4578636565647320746865205f6d61785478416d6f756e742e000000000000005f82015250565b5f612c9160198361218c565b9150612c9c82612c5d565b602082019050919050565b5f6020820190508181035f830152612cbe81612c85565b9050919050565b5f612ccf8261228a565b9150612cda8361228a565b9250828201905080821115612cf257612cf161246b565b5b92915050565b7f4578636565647320746865206d617857616c6c657453697a652e0000000000005f82015250565b5f612d2c601a8361218c565b9150612d3782612cf8565b602082019050919050565b5f6020820190508181035f830152612d5981612d20565b9050919050565b5f612d6a8261228a565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203612d9c57612d9b61246b565b5b600182019050919050565b5f612db18261228a565b9150612dbc8361228a565b9250828203905081811115612dd457612dd361246b565b5b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b612e668161224f565b82525050565b5f612e778383612e5d565b60208301905092915050565b5f602082019050919050565b5f612e9982612e34565b612ea38185612e3e565b9350612eae83612e4e565b805f5b83811015612ede578151612ec58882612e6c565b9750612ed083612e83565b925050600181019050612eb1565b5085935050505092915050565b5f60a082019050612efe5f83018861232e565b612f0b60208301876127bb565b8181036040830152612f1d8186612e8f565b9050612f2c6060830185612405565b612f39608083018461232e565b9695505050505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f612f7a8261228a565b9150612f858361228a565b925082612f9557612f94612f43565b5b828204905092915050565b7f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f5f8201527f7700000000000000000000000000000000000000000000000000000000000000602082015250565b5f612ffa60218361218c565b915061300582612fa0565b604082019050919050565b5f6020820190508181035f83015261302781612fee565b9050919050565b7f536166654d6174683a206164646974696f6e206f766572666c6f7700000000005f82015250565b5f613062601b8361218c565b915061306d8261302e565b602082019050919050565b5f6020820190508181035f83015261308f81613056565b905091905056fe45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365a2646970667358221220a5fb711326827fceef39582753014ea89d84527a1e83e1d88d9970290d3089ae64736f6c63430008140033",
    "runtime_bytecode": "608060405260043610610122575f3560e01c8063751039fc1161009f578063a9059cbb11610063578063a9059cbb146103af578063bf474bed146103eb578063c876d0b914610415578063c9567bf91461043f578063dd62ed3e1461045557610129565b8063751039fc146102f15780637d1db4a5146103075780638da5cb5b146103315780638f9a55c01461035b57806395d89b411461038557610129565b8063313ce567116100e6578063313ce567146102235780633bbac5791461024d57806351bc3c851461028957806370a082311461029f578063715018a6146102db57610129565b806306fdde031461012d578063095ea7b3146101575780630faee56f1461019357806318160ddd146101bd57806323b872dd146101e757610129565b3661012957005b5f80fd5b348015610138575f80fd5b50610141610491565b60405161014e919061220c565b60405180910390f35b348015610162575f80fd5b5061017d600480360381019061017891906122bd565b6104ce565b60405161018a9190612315565b60405180910390f35b34801561019e575f80fd5b506101a76104eb565b6040516101b4919061233d565b60405180910390f35b3480156101c8575f80fd5b506101d16104f1565b6040516101de919061233d565b60405180910390f35b3480156101f2575f80fd5b5061020d60048036038101906102089190612356565b610513565b60405161021a9190612315565b60405180910390f35b34801561022e575f80fd5b506102376105e7565b60405161024491906123c1565b60405180910390f35b348015610258575f80fd5b50610273600480360381019061026e91906123da565b6105ef565b6040516102809190612315565b60405180910390f35b348015610294575f80fd5b5061029d610641565b005b3480156102aa575f80fd5b506102c560048036038101906102c091906123da565b6106d9565b6040516102d2919061233d565b60405180910390f35b3480156102e6575f80fd5b506102ef61071f565b005b3480156102fc575f80fd5b5061030561086d565b005b348015610312575f80fd5b5061031b6109b2565b604051610328919061233d565b60405180910390f35b34801561033c575f80fd5b506103456109b8565b6040516103529190612414565b60405180910390f35b348015610366575f80fd5b5061036f6109df565b60405161037c919061233d565b60405180910390f35b348015610390575f80fd5b506103996109e5565b6040516103a6919061220c565b60405180910390f35b3480156103ba575f80fd5b506103d560048036038101906103d091906122bd565b610a22565b6040516103e29190612315565b60405180910390f35b3480156103f6575f80fd5b506103ff610a3f565b60405161040c919061233d565b60405180910390f35b348015610420575f80fd5b50610429610a45565b6040516104369190612315565b60405180910390f35b34801561044a575f80fd5b50610453610a57565b005b348015610460575f80fd5b5061047b6004803603810190610476919061242d565b610f75565b604051610488919061233d565b60405180910390f35b60606040518060400160405280600581526020017f446f6c616e000000000000000000000000000000000000000000000000000000815250905090565b5f6104e16104da610ff7565b8484610ffe565b6001905092915050565b60125481565b5f6008600a61050091906125c7565b620f424061050e9190612611565b905090565b5f61051f8484846111c1565b6105dc8461052b610ff7565b6105d7856040518060600160405280602881526020016130976028913960025f8b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f61058e610ff7565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054611c409092919063ffffffff16565b610ffe565b600190509392505050565b5f6008905090565b5f60045f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff169050919050565b600660019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610682610ff7565b73ffffffffffffffffffffffffffffffffffffffff16146106a1575f80fd5b5f6106ab306106d9565b90505f8111156106bf576106be81611ca2565b5b5f4790505f8111156106d5576106d481611f29565b5b5050565b5f60015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b610727610ff7565b73ffffffffffffffffffffffffffffffffffffffff165f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146107b3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107aa9061269c565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff165f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35f805f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b610875610ff7565b73ffffffffffffffffffffffffffffffffffffffff165f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610901576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108f89061269c565b60405180910390fd5b6008600a61090f91906125c7565b620f424061091d9190612611565b600f819055506008600a61093191906125c7565b620f424061093f9190612611565b6010819055505f60065f6101000a81548160ff0219169083151502179055507f947f344d56e1e8c70dc492fb94c4ddddd490c016aab685f5e7e47b2e85cb44cf6008600a61098d91906125c7565b620f424061099b9190612611565b6040516109a8919061233d565b60405180910390a1565b600f5481565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60105481565b60606040518060400160405280600581526020017f444f4c414e000000000000000000000000000000000000000000000000000000815250905090565b5f610a35610a2e610ff7565b84846111c1565b6001905092915050565b60115481565b60065f9054906101000a900460ff1681565b610a5f610ff7565b73ffffffffffffffffffffffffffffffffffffffff165f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610aeb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ae29061269c565b60405180910390fd5b60148054906101000a900460ff1615610b39576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b3090612704565b60405180910390fd5b737a250d5630b4cf539739df2c5dacb4c659f2488d60135f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610bd43060135f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff166008600a610bc191906125c7565b620f4240610bcf9190612611565b610ffe565b60135f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c45a01556040518163ffffffff1660e01b8152600401602060405180830381865afa158015610c3e573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610c629190612736565b73ffffffffffffffffffffffffffffffffffffffff1663c9c653963060135f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa158015610ce8573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610d0c9190612736565b6040518363ffffffff1660e01b8152600401610d29929190612761565b6020604051808303815f875af1158015610d45573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610d699190612736565b60145f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060135f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f305d7194730610df0306106d9565b5f80610dfa6109b8565b426040518863ffffffff1660e01b8152600401610e1c969594939291906127ca565b60606040518083038185885af1158015610e38573d5f803e3d5ffd5b50505050506040513d601f19601f82011682018060405250810190610e5d919061283d565b50505060145f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663095ea7b360135f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff167fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6040518363ffffffff1660e01b8152600401610efd92919061288d565b6020604051808303815f875af1158015610f19573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610f3d91906128de565b506001601460166101000a81548160ff02191690831515021790555060016014806101000a81548160ff021916908315150217905550565b5f60025f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b5f33905090565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361106c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161106390612979565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036110da576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110d190612a07565b60405180910390fd5b8060025f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516111b4919061233d565b60405180910390a3505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361122f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161122690612a95565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361129d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161129490612b23565b60405180910390fd5b5f81116112df576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112d690612bb1565b60405180910390fd5b5f6112e86109b8565b73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161415801561135657506113266109b8565b73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614155b156119905760045f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff161580156113f9575060045f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16155b611401575f80fd5b60065f9054906101000a900460ff16156115875760135f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141580156114bf575060145f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614155b15611586574360055f3273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205410611543576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161153a90612c3f565b60405180910390fd5b4360055f3273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055505b5b60145f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16148015611630575060135f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614155b8015611683575060035f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16155b1561175c57600f548211156116cd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116c490612ca7565b60405180910390fd5b601054826116da856106d9565b6116e49190612cc5565b1115611725576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161171c90612d42565b60405180910390fd5b600d54600e5410156117445761173a83611f92565b15611743575f80fd5b5b600e5f81548092919061175690612d60565b91905055505b611798606461178a600b54600e54116117775760075461177b565b6009545b85611fa390919063ffffffff16565b61201a90919063ffffffff16565b905060145f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614801561182257503073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614155b156118ab57600f5482111561186c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161186390612ca7565b60405180910390fd5b6118a8606461189a600c54600e54116118875760085461188b565b600a545b85611fa390919063ffffffff16565b61201a90919063ffffffff16565b90505b5f6118b5306106d9565b9050601460159054906101000a900460ff16158015611920575060145f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16145b80156119385750601460169054906101000a900460ff165b8015611945575060115481115b80156119545750600d54600e54115b1561198e576119766119718461196c84601254612063565b612063565b611ca2565b5f4790505f81111561198c5761198b47611f29565b5b505b505b5f811115611a8f576119e88160015f3073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205461207b90919063ffffffff16565b60015f3073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055503073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051611a86919061233d565b60405180910390a35b611adf8260015f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20546120d890919063ffffffff16565b60015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550611b82611b3682846120d890919063ffffffff16565b60015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205461207b90919063ffffffff16565b60015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef611c2584866120d890919063ffffffff16565b604051611c32919061233d565b60405180910390a350505050565b5f838311158290611c87576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611c7e919061220c565b60405180910390fd5b505f8385611c959190612da7565b9050809150509392505050565b6001601460156101000a81548160ff0219169083151502179055505f810315611f0c5760148054906101000a900460ff1615611f0c575f600267ffffffffffffffff811115611cf457611cf3612dda565b5b604051908082528060200260200182016040528015611d225781602001602082028036833780820191505090505b50905030815f81518110611d3957611d38612e07565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505060135f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa158015611ddd573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611e019190612736565b81600181518110611e1557611e14612e07565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050611e7b3060135f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1684610ffe565b60135f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663791ac947835f8430426040518663ffffffff1660e01b8152600401611edd959493929190612eeb565b5f604051808303815f87803b158015611ef4575f80fd5b505af1158015611f06573d5f803e3d5ffd5b50505050505b5f601460156101000a81548160ff02191690831515021790555050565b600660019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc8290811502906040515f60405180830381858888f19350505050158015611f8e573d5f803e3d5ffd5b5050565b5f80823b90505f8111915050919050565b5f808303611fb3575f9050612014565b5f8284611fc09190612611565b9050828482611fcf9190612f70565b1461200f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161200690613010565b60405180910390fd5b809150505b92915050565b5f61205b83836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250612121565b905092915050565b5f8183116120715782612073565b815b905092915050565b5f8082846120899190612cc5565b9050838110156120ce576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016120c590613078565b60405180910390fd5b8091505092915050565b5f61211983836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250611c40565b905092915050565b5f8083118290612167576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161215e919061220c565b60405180910390fd5b505f83856121759190612f70565b9050809150509392505050565b5f81519050919050565b5f82825260208201905092915050565b5f5b838110156121b957808201518184015260208101905061219e565b5f8484015250505050565b5f601f19601f8301169050919050565b5f6121de82612182565b6121e8818561218c565b93506121f881856020860161219c565b612201816121c4565b840191505092915050565b5f6020820190508181035f83015261222481846121d4565b905092915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61225982612230565b9050919050565b6122698161224f565b8114612273575f80fd5b50565b5f8135905061228481612260565b92915050565b5f819050919050565b61229c8161228a565b81146122a6575f80fd5b50565b5f813590506122b781612293565b92915050565b5f80604083850312156122d3576122d261222c565b5b5f6122e085828601612276565b92505060206122f1858286016122a9565b9150509250929050565b5f8115159050919050565b61230f816122fb565b82525050565b5f6020820190506123285f830184612306565b92915050565b6123378161228a565b82525050565b5f6020820190506123505f83018461232e565b92915050565b5f805f6060848603121561236d5761236c61222c565b5b5f61237a86828701612276565b935050602061238b86828701612276565b925050604061239c868287016122a9565b9150509250925092565b5f60ff82169050919050565b6123bb816123a6565b82525050565b5f6020820190506123d45f8301846123b2565b92915050565b5f602082840312156123ef576123ee61222c565b5b5f6123fc84828501612276565b91505092915050565b61240e8161224f565b82525050565b5f6020820190506124275f830184612405565b92915050565b5f80604083850312156124435761244261222c565b5b5f61245085828601612276565b925050602061246185828601612276565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f8160011c9050919050565b5f808291508390505b60018511156124ed578086048111156124c9576124c861246b565b5b60018516156124d85780820291505b80810290506124e685612498565b94506124ad565b94509492505050565b5f8261250557600190506125c0565b81612512575f90506125c0565b8160018114612528576002811461253257612561565b60019150506125c0565b60ff8411156125445761254361246b565b5b8360020a91508482111561255b5761255a61246b565b5b506125c0565b5060208310610133831016604e8410600b84101617156125965782820a9050838111156125915761259061246b565b5b6125c0565b6125a384848460016124a4565b925090508184048111156125ba576125b961246b565b5b81810290505b9392505050565b5f6125d18261228a565b91506125dc836123a6565b92506126097fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff84846124f6565b905092915050565b5f61261b8261228a565b91506126268361228a565b92508282026126348161228a565b9150828204841483151761264b5761264a61246b565b5b5092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65725f82015250565b5f61268660208361218c565b915061269182612652565b602082019050919050565b5f6020820190508181035f8301526126b38161267a565b9050919050565b7f74726164696e6720697320616c7265616479206f70656e0000000000000000005f82015250565b5f6126ee60178361218c565b91506126f9826126ba565b602082019050919050565b5f6020820190508181035f83015261271b816126e2565b9050919050565b5f8151905061273081612260565b92915050565b5f6020828403121561274b5761274a61222c565b5b5f61275884828501612722565b91505092915050565b5f6040820190506127745f830185612405565b6127816020830184612405565b9392505050565b5f819050919050565b5f819050919050565b5f6127b46127af6127aa84612788565b612791565b61228a565b9050919050565b6127c48161279a565b82525050565b5f60c0820190506127dd5f830189612405565b6127ea602083018861232e565b6127f760408301876127bb565b61280460608301866127bb565b6128116080830185612405565b61281e60a083018461232e565b979650505050505050565b5f8151905061283781612293565b92915050565b5f805f606084860312156128545761285361222c565b5b5f61286186828701612829565b935050602061287286828701612829565b925050604061288386828701612829565b9150509250925092565b5f6040820190506128a05f830185612405565b6128ad602083018461232e565b9392505050565b6128bd816122fb565b81146128c7575f80fd5b50565b5f815190506128d8816128b4565b92915050565b5f602082840312156128f3576128f261222c565b5b5f612900848285016128ca565b91505092915050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f206164645f8201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b5f61296360248361218c565b915061296e82612909565b604082019050919050565b5f6020820190508181035f83015261299081612957565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f2061646472655f8201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b5f6129f160228361218c565b91506129fc82612997565b604082019050919050565b5f6020820190508181035f830152612a1e816129e5565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f2061645f8201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b5f612a7f60258361218c565b9150612a8a82612a25565b604082019050919050565b5f6020820190508181035f830152612aac81612a73565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f20616464725f8201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b5f612b0d60238361218c565b9150612b1882612ab3565b604082019050919050565b5f6020820190508181035f830152612b3a81612b01565b9050919050565b7f5472616e7366657220616d6f756e74206d7573742062652067726561746572205f8201527f7468616e207a65726f0000000000000000000000000000000000000000000000602082015250565b5f612b9b60298361218c565b9150612ba682612b41565b604082019050919050565b5f6020820190508181035f830152612bc881612b8f565b9050919050565b7f4f6e6c79206f6e65207472616e736665722070657220626c6f636b20616c6c6f5f8201527f7765642e00000000000000000000000000000000000000000000000000000000602082015250565b5f612c2960248361218c565b9150612c3482612bcf565b604082019050919050565b5f6020820190508181035f830152612c5681612c1d565b9050919050565b7f4578636565647320746865205f6d61785478416d6f756e742e000000000000005f82015250565b5f612c9160198361218c565b9150612c9c82612c5d565b602082019050919050565b5f6020820190508181035f830152612cbe81612c85565b9050919050565b5f612ccf8261228a565b9150612cda8361228a565b9250828201905080821115612cf257612cf161246b565b5b92915050565b7f4578636565647320746865206d617857616c6c657453697a652e0000000000005f82015250565b5f612d2c601a8361218c565b9150612d3782612cf8565b602082019050919050565b5f6020820190508181035f830152612d5981612d20565b9050919050565b5f612d6a8261228a565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203612d9c57612d9b61246b565b5b600182019050919050565b5f612db18261228a565b9150612dbc8361228a565b9250828203905081811115612dd457612dd361246b565b5b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b612e668161224f565b82525050565b5f612e778383612e5d565b60208301905092915050565b5f602082019050919050565b5f612e9982612e34565b612ea38185612e3e565b9350612eae83612e4e565b805f5b83811015612ede578151612ec58882612e6c565b9750612ed083612e83565b925050600181019050612eb1565b5085935050505092915050565b5f60a082019050612efe5f83018861232e565b612f0b60208301876127bb565b8181036040830152612f1d8186612e8f565b9050612f2c6060830185612405565b612f39608083018461232e565b9695505050505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f612f7a8261228a565b9150612f858361228a565b925082612f9557612f94612f43565b5b828204905092915050565b7f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f5f8201527f7700000000000000000000000000000000000000000000000000000000000000602082015250565b5f612ffa60218361218c565b915061300582612fa0565b604082019050919050565b5f6020820190508181035f83015261302781612fee565b9050919050565b7f536166654d6174683a206164646974696f6e206f766572666c6f7700000000005f82015250565b5f613062601b8361218c565b915061306d8261302e565b602082019050919050565b5f6020820190508181035f83015261308f81613056565b905091905056fe45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365a2646970667358221220a5fb711326827fceef39582753014ea89d84527a1e83e1d88d9970290d3089ae64736f6c63430008140033",
    "contract_name": "DOLAN",
    "compiler_version": "v0.8.20+commit.a1b79de6",
    "optimization_used": "0",
    "runs": "200",
    "abi": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_maxTxAmount\",\"type\":\"uint256\"}],\"name\":\"MaxTxAmountUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"_maxTaxSwap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_maxTxAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_maxWalletSize\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_taxSwapThreshold\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"a\",\"type\":\"address\"}],\"name\":\"isBot\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"manualSwap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"openTrading\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"removeLimits\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"transferDelayEnabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]",
    "source_code": "/*                                               \r\n????\u2115\r\n\r\nWebsite:  https://dolantoken.wtf/\r\nTelegram: https://t.me/DolanToken\r\nTwitter: https://twitter.com/DOLAN_PSYCO_ERC\r\n\r\n*/\r\n\r\n// SPDX-License-Identifier: MIT\r\n\r\npragma solidity 0.8.20;\r\n\r\nabstract contract Context {\r\n    function _msgSender() internal view virtual returns (address) {\r\n        return msg.sender;\r\n    }\r\n}\r\n\r\ninterface IERC20 {\r\n    function totalSupply() external view returns (uint256);\r\n    function balanceOf(address account) external view returns (uint256);\r\n    function transfer(address recipient, uint256 amount) external returns (bool);\r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}\r\n\r\nlibrary SafeMath {\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a + b;\r\n        require(c >= a, \"SafeMath: addition overflow\");\r\n        return c;\r\n    }\r\n\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return sub(a, b, \"SafeMath: subtraction overflow\");\r\n    }\r\n\r\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        require(b <= a, errorMessage);\r\n        uint256 c = a - b;\r\n        return c;\r\n    }\r\n\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        if (a == 0) {\r\n            return 0;\r\n        }\r\n        uint256 c = a * b;\r\n        require(c / a == b, \"SafeMath: multiplication overflow\");\r\n        return c;\r\n    }\r\n\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return div(a, b, \"SafeMath: division by zero\");\r\n    }\r\n\r\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        require(b > 0, errorMessage);\r\n        uint256 c = a / b;\r\n        return c;\r\n    }\r\n\r\n}\r\n\r\n\r\ncontract Ownable is Context {\r\n    address private _owner;\r\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n    constructor () {\r\n        address msgSender = _msgSender();\r\n        _owner = msgSender;\r\n        emit OwnershipTransferred(address(0), msgSender);\r\n    }\r\n\r\n    function owner() public view returns (address) {\r\n        return _owner;\r\n    }\r\n\r\n    modifier onlyOwner() {\r\n        require(_owner == _msgSender(), \"Ownable: caller is not the owner\");\r\n        _;\r\n    }\r\n\r\n    function renounceOwnership() public virtual onlyOwner {\r\n        emit OwnershipTransferred(_owner, address(0));\r\n        _owner = address(0);\r\n    }\r\n\r\n}\r\n\r\n\r\ninterface IUniswapV2Factory {\r\n    function createPair(address tokenA, address tokenB) external returns (address pair);\r\n}\r\n\r\ninterface IUniswapV2Router02 {\r\n    function swapExactTokensForETHSupportingFeeOnTransferTokens(\r\n        uint amountIn,\r\n        uint amountOutMin,\r\n        address[] calldata path,\r\n        address to,\r\n        uint deadline\r\n    ) external;\r\n    function factory() external pure returns (address);\r\n    function WETH() external pure returns (address);\r\n    function addLiquidityETH(\r\n        address token,\r\n        uint amountTokenDesired,\r\n        uint amountTokenMin,\r\n        uint amountETHMin,\r\n        address to,\r\n        uint deadline\r\n    ) external payable returns (uint amountToken, uint amountETH, uint liquidity);\r\n}\r\n\r\n\r\ncontract DOLAN is Context, IERC20, Ownable {\r\n    using SafeMath for uint256;\r\n    mapping (address => uint256) private _balances;\r\n    mapping (address => mapping (address => uint256)) private _allowances;\r\n    mapping (address => bool) private _isExcludedFromFee;\r\n    mapping (address => bool) private bots;\r\n    mapping(address => uint256) private _holderLastTransferTimestamp;\r\n    bool public transferDelayEnabled = false;\r\n    address payable private _taxWallet;\r\n\r\n    uint256 private _initialBuyTax=15;\r\n    uint256 private _initialSellTax=35;\r\n    uint256 private _finalBuyTax=2;\r\n    uint256 private _finalSellTax=2;\r\n    uint256 private _reduceBuyTaxAt=20;\r\n    uint256 private _reduceSellTaxAt=25;\r\n    uint256 private _preventSwapBefore=30;\r\n    uint256 private _buyCount=0;\r\n\r\n    uint8 private constant _decimals = 8;\r\n    uint256 private constant _tTotal = 1000000 * 10**_decimals;\r\n    string private constant _name = unicode\"Dolan\";\r\n    string private constant _symbol = unicode\"DOLAN\";\r\n    uint256 public _maxTxAmount =   20000 * 10**_decimals;\r\n    uint256 public _maxWalletSize = 20000 * 10**_decimals;\r\n    uint256 public _taxSwapThreshold=0 * 10**_decimals;\r\n    uint256 public _maxTaxSwap=5000 * 10**_decimals;\r\n\r\n    IUniswapV2Router02 private uniswapV2Router;\r\n    address private uniswapV2Pair;\r\n    bool private tradingOpen;\r\n    bool private inSwap = false;\r\n    bool private swapEnabled = false;\r\n\r\n    event MaxTxAmountUpdated(uint _maxTxAmount);\r\n    modifier lockTheSwap {\r\n        inSwap = true;\r\n        _;\r\n        inSwap = false;\r\n    }\r\n\r\n\r\n    constructor () {\r\n        _taxWallet = payable(_msgSender());\r\n        _balances[_msgSender()] = _tTotal;\r\n        _isExcludedFromFee[owner()] = true;\r\n        _isExcludedFromFee[address(this)] = true;\r\n        _isExcludedFromFee[_taxWallet] = true;\r\n\r\n        emit Transfer(address(0), _msgSender(), _tTotal);\r\n    }\r\n\r\n    function name() public pure returns (string memory) {\r\n        return _name;\r\n    }\r\n\r\n    function symbol() public pure returns (string memory) {\r\n        return _symbol;\r\n    }\r\n\r\n    function decimals() public pure returns (uint8) {\r\n        return _decimals;\r\n    }\r\n\r\n    function totalSupply() public pure override returns (uint256) {\r\n        return _tTotal;\r\n    }\r\n\r\n\r\n    function balanceOf(address account) public view override returns (uint256) {\r\n        return _balances[account];\r\n    }\r\n\r\n    function transfer(address recipient, uint256 amount) public override returns (bool) {\r\n        _transfer(_msgSender(), recipient, amount);\r\n        return true;\r\n    }\r\n\r\n    function allowance(address owner, address spender) public view override returns (uint256) {\r\n        return _allowances[owner][spender];\r\n    }\r\n\r\n    function approve(address spender, uint256 amount) public override returns (bool) {\r\n        _approve(_msgSender(), spender, amount);\r\n        return true;\r\n    }\r\n\r\n    function transferFrom(address sender, address recipient, uint256 amount) public override returns (bool) {\r\n        _transfer(sender, recipient, amount);\r\n        _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\"));\r\n        return true;\r\n    }\r\n\r\n    function _approve(address owner, address spender, uint256 amount) private {\r\n        require(owner != address(0), \"ERC20: approve from the zero address\");\r\n        require(spender != address(0), \"ERC20: approve to the zero address\");\r\n        _allowances[owner][spender] = amount;\r\n        emit Approval(owner, spender, amount);\r\n    }\r\n\r\n\r\n    function _transfer(address from, address to, uint256 amount) private {\r\n        require(from != address(0), \"ERC20: transfer from the zero address\");\r\n        require(to != address(0), \"ERC20: transfer to the zero address\");\r\n        require(amount > 0, \"Transfer amount must be greater than zero\");\r\n        uint256 taxAmount=0;\r\n        if (from != owner() && to != owner()) {\r\n            require(!bots[from] && !bots[to]);\r\n\r\n            if (transferDelayEnabled) {\r\n                if (to != address(uniswapV2Router) && to != address(uniswapV2Pair)) {\r\n                  require(_holderLastTransferTimestamp[tx.origin] < block.number,\"Only one transfer per block allowed.\");\r\n                  _holderLastTransferTimestamp[tx.origin] = block.number;\r\n                }\r\n            }\r\n\r\n            if (from == uniswapV2Pair && to != address(uniswapV2Router) && ! _isExcludedFromFee[to] ) {\r\n                require(amount <= _maxTxAmount, \"Exceeds the _maxTxAmount.\");\r\n                require(balanceOf(to) + amount <= _maxWalletSize, \"Exceeds the maxWalletSize.\");\r\n                if(_buyCount<_preventSwapBefore){\r\n                  require(!isContract(to));\r\n                }\r\n                _buyCount++;\r\n            }\r\n\r\n\r\n            taxAmount = amount.mul((_buyCount>_reduceBuyTaxAt)?_finalBuyTax:_initialBuyTax).div(100);\r\n            if(to == uniswapV2Pair && from!= address(this) ){\r\n                require(amount <= _maxTxAmount, \"Exceeds the _maxTxAmount.\");\r\n                taxAmount = amount.mul((_buyCount>_reduceSellTaxAt)?_finalSellTax:_initialSellTax).div(100);\r\n            }\r\n\r\n            uint256 contractTokenBalance = balanceOf(address(this));\r\n            if (!inSwap && to == uniswapV2Pair && swapEnabled && contractTokenBalance>_taxSwapThreshold && _buyCount>_preventSwapBefore) {\r\n                swapTokensForEth(min(amount,min(contractTokenBalance,_maxTaxSwap)));\r\n                uint256 contractETHBalance = address(this).balance;\r\n                if(contractETHBalance > 0) {\r\n                    sendETHToFee(address(this).balance);\r\n                }\r\n            }\r\n        }\r\n\r\n        if(taxAmount>0){\r\n          _balances[address(this)]=_balances[address(this)].add(taxAmount);\r\n          emit Transfer(from, address(this),taxAmount);\r\n        }\r\n        _balances[from]=_balances[from].sub(amount);\r\n        _balances[to]=_balances[to].add(amount.sub(taxAmount));\r\n        emit Transfer(from, to, amount.sub(taxAmount));\r\n    }\r\n\r\n\r\n    function min(uint256 a, uint256 b) private pure returns (uint256){\r\n      return (a>b)?b:a;\r\n    }\r\n\r\n    function swapTokensForEth(uint256 tokenAmount) private lockTheSwap {\r\n        if(tokenAmount==0){return;}\r\n        if(!tradingOpen){return;}\r\n        address[] memory path = new address[](2);\r\n        path[0] = address(this);\r\n        path[1] = uniswapV2Router.WETH();\r\n        _approve(address(this), address(uniswapV2Router), tokenAmount);\r\n        uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(\r\n            tokenAmount,\r\n            0,\r\n            path,\r\n            address(this),\r\n            block.timestamp\r\n        );\r\n    }\r\n\r\n    function removeLimits() external onlyOwner{\r\n        _maxTxAmount = _tTotal;\r\n        _maxWalletSize=_tTotal;\r\n        transferDelayEnabled=false;\r\n        emit MaxTxAmountUpdated(_tTotal);\r\n    }\r\n\r\n    function sendETHToFee(uint256 amount) private {\r\n        _taxWallet.transfer(amount);\r\n    }\r\n\r\n    function isBot(address a) public view returns (bool){\r\n      return bots[a];\r\n    }\r\n\r\n    function openTrading() external onlyOwner() {\r\n        require(!tradingOpen,\"trading is already open\");\r\n        uniswapV2Router = IUniswapV2Router02(0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D);\r\n        _approve(address(this), address(uniswapV2Router), _tTotal);\r\n        uniswapV2Pair = IUniswapV2Factory(uniswapV2Router.factory()).createPair(address(this), uniswapV2Router.WETH());\r\n        uniswapV2Router.addLiquidityETH{value: address(this).balance}(address(this),balanceOf(address(this)),0,0,owner(),block.timestamp);\r\n        IERC20(uniswapV2Pair).approve(address(uniswapV2Router), type(uint).max);\r\n        swapEnabled = true;\r\n        tradingOpen = true;\r\n    }\r\n\r\n\r\n    receive() external payable {}\r\n\r\n    function isContract(address account) private view returns (bool) {\r\n        uint256 size;\r\n        assembly {\r\n            size := extcodesize(account)\r\n        }\r\n        return size > 0;\r\n    }\r\n\r\n    function manualSwap() external {\r\n        require(_msgSender()==_taxWallet);\r\n        uint256 tokenBalance=balanceOf(address(this));\r\n        if(tokenBalance>0){\r\n          swapTokensForEth(tokenBalance);\r\n        }\r\n        uint256 ethBalance=address(this).balance;\r\n        if(ethBalance>0){\r\n          sendETHToFee(ethBalance);\r\n        }\r\n    }\r\n\r\n    \r\n    \r\n    \r\n}",
    "etherscan_verified": true
}