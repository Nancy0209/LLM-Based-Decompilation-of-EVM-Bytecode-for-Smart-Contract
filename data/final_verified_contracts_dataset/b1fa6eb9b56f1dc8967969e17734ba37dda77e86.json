{
    "address": "0xB1fA6eb9B56F1dC8967969e17734Ba37ddA77E86",
    "tx_hash": "6a5fcb07a7d0949281ff8c1e842dc15cb7b5b21cffc94e61fa9f9ef968ab6403",
    "block_number": 18004753,
    "timestamp": 1693124183,
    "gas_used_in_creation": 690291,
    "creation_bytecode": "608060405234801562000010575f80fd5b506200001f6012600a620001d2565b6200002f906323c34600620001e9565b335f818152602081815260408083209490945530825260018152838220737a250d5630b4cf539739df2c5dacb4c659f2488d835290529182205f199055907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef6200009c6012600a620001d2565b620000ac906323c34600620001e9565b60405190815260200160405180910390a362000203565b634e487b7160e01b5f52601160045260245ffd5b600181815b808511156200011757815f1904821115620000fb57620000fb620000c3565b808516156200010957918102915b93841c9390800290620000dc565b509250929050565b5f826200012f57506001620001cc565b816200013d57505f620001cc565b8160018114620001565760028114620001615762000181565b6001915050620001cc565b60ff841115620001755762000175620000c3565b50506001821b620001cc565b5060208310610133831016604e8410600b8410161715620001a6575081810a620001cc565b620001b28383620000d7565b805f1904821115620001c857620001c8620000c3565b0290505b92915050565b5f620001e260ff8416836200011f565b9392505050565b8082028115828204841417620001cc57620001cc620000c3565b610a8680620002115f395ff3fe608060405260043610610092575f3560e01c806370a082311161005757806370a082311461019157806395d89b41146101bc578063a9059cbb146101ef578063c9567bf91461020e578063dd62ed3e14610224575f80fd5b806306fdde031461009d578063095ea7b3146100fb57806318160ddd1461012a57806323b872dd1461014c578063313ce5671461016b575f80fd5b3661009957005b5f80fd5b3480156100a8575f80fd5b506100e56040518060400160405280601f81526020017f4861727279506f747465724f62616d61506f6c697469636f73363636496e750081525081565b6040516100f2919061075e565b60405180910390f35b348015610106575f80fd5b5061011a6101153660046107c4565b61025a565b60405190151581526020016100f2565b348015610135575f80fd5b5061013e6102c6565b6040519081526020016100f2565b348015610157575f80fd5b5061011a6101663660046107ec565b6102e3565b348015610176575f80fd5b5061017f601281565b60405160ff90911681526020016100f2565b34801561019c575f80fd5b5061013e6101ab366004610825565b5f6020819052908152604090205481565b3480156101c7575f80fd5b506100e56040518060400160405280600881526020016748504f503636364960c01b81525081565b3480156101fa575f80fd5b5061011a6102093660046107c4565b610330565b348015610219575f80fd5b50610222610343565b005b34801561022f575f80fd5b5061013e61023e36600461083e565b600160209081525f928352604080842090915290825290205481565b335f8181526001602090815260408083206001600160a01b038716808552925280832085905551919290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925906102b49086815260200190565b60405180910390a35060015b92915050565b6102d26012600a610963565b6102e0906323c34600610971565b81565b6001600160a01b0383165f908152600160209081526040808320338452909152812080548391908390610317908490610988565b90915550610328905084848461038d565b949350505050565b5f61033c33848461038d565b9392505050565b600254600160a81b900460ff1615610359575f80fd5b33731859905bc160f5d575165318111aa1891cb4633e14610378575f80fd5b6002805460ff60a81b1916600160a81b179055565b6002545f90600160a81b900460ff16806103c357506001600160a01b038416731859905bc160f5d575165318111aa1891cb4633e145b806103ea57506001600160a01b038316731859905bc160f5d575165318111aa1891cb4633e145b6103f2575f80fd5b600254600160a81b900460ff1615801561041557506002546001600160a01b0316155b801561042057505f82115b1561044157600280546001600160a01b0319166001600160a01b0385161790555b6001600160a01b0384165f9081526020819052604081208054849290610468908490610988565b90915550506002546001600160a01b0384811691161480156104945750600254600160a01b900460ff16155b80156104d3575060646104a96012600a610963565b6104b7906323c34600610971565b6104c1919061099b565b305f9081526020819052604090205410155b1561065d576002805460ff60a01b1916600160a01b178155604080518281526060810182525f92909160208301908036833701905050905030815f8151811061051e5761051e6109ba565b60200260200101906001600160a01b031690816001600160a01b03168152505073c02aaa39b223fe8d0a0e5c4f27ead9083c756cc281600181518110610566576105666109ba565b6001600160a01b0390921660209283029190910190910152737a250d5630b4cf539739df2c5dacb4c659f2488d63791ac94760646105a66012600a610963565b6105b4906323c34600610971565b6105be919061099b565b5f8430426040518663ffffffff1660e01b81526004016105e29594939291906109ce565b5f604051808303815f87803b1580156105f9575f80fd5b505af115801561060b573d5f803e3d5ffd5b5050604051731859905bc160f5d575165318111aa1891cb4633e92504780156108fc029250905f818181858888f1935050505015801561064d573d5f803e3d5ffd5b50506002805460ff60a01b191690555b6001600160a01b03841630146106d9576002545f906064906001600160a01b0387811691161461068d575f61068f565b5f5b6106999085610971565b6106a3919061099b565b90506106af8184610988565b305f908152602081905260408120805492955083929091906106d2908490610a3d565b9091555050505b6001600160a01b0383165f9081526020819052604081208054849290610700908490610a3d565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161074c91815260200190565b60405180910390a35060019392505050565b5f6020808352835180828501525f5b818110156107895785810183015185820160400152820161076d565b505f604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b03811681146107bf575f80fd5b919050565b5f80604083850312156107d5575f80fd5b6107de836107a9565b946020939093013593505050565b5f805f606084860312156107fe575f80fd5b610807846107a9565b9250610815602085016107a9565b9150604084013590509250925092565b5f60208284031215610835575f80fd5b61033c826107a9565b5f806040838503121561084f575f80fd5b610858836107a9565b9150610866602084016107a9565b90509250929050565b634e487b7160e01b5f52601160045260245ffd5b600181815b808511156108bd57815f19048211156108a3576108a361086f565b808516156108b057918102915b93841c9390800290610888565b509250929050565b5f826108d3575060016102c0565b816108df57505f6102c0565b81600181146108f557600281146108ff5761091b565b60019150506102c0565b60ff8411156109105761091061086f565b50506001821b6102c0565b5060208310610133831016604e8410600b841016171561093e575081810a6102c0565b6109488383610883565b805f190482111561095b5761095b61086f565b029392505050565b5f61033c60ff8416836108c5565b80820281158282048414176102c0576102c061086f565b818103818111156102c0576102c061086f565b5f826109b557634e487b7160e01b5f52601260045260245ffd5b500490565b634e487b7160e01b5f52603260045260245ffd5b5f60a082018783526020878185015260a0604085015281875180845260c08601915082890193505f5b81811015610a1c5784516001600160a01b0316835293830193918301916001016109f7565b50506001600160a01b03969096166060850152505050608001529392505050565b808201808211156102c0576102c061086f56fea264697066735822122018242aa59c2e5120f71163f83b1e8bb4ddc1370be494a275fca20aebecc8d2c664736f6c63430008150033",
    "runtime_bytecode": "608060405260043610610092575f3560e01c806370a082311161005757806370a082311461019157806395d89b41146101bc578063a9059cbb146101ef578063c9567bf91461020e578063dd62ed3e14610224575f80fd5b806306fdde031461009d578063095ea7b3146100fb57806318160ddd1461012a57806323b872dd1461014c578063313ce5671461016b575f80fd5b3661009957005b5f80fd5b3480156100a8575f80fd5b506100e56040518060400160405280601f81526020017f4861727279506f747465724f62616d61506f6c697469636f73363636496e750081525081565b6040516100f2919061075e565b60405180910390f35b348015610106575f80fd5b5061011a6101153660046107c4565b61025a565b60405190151581526020016100f2565b348015610135575f80fd5b5061013e6102c6565b6040519081526020016100f2565b348015610157575f80fd5b5061011a6101663660046107ec565b6102e3565b348015610176575f80fd5b5061017f601281565b60405160ff90911681526020016100f2565b34801561019c575f80fd5b5061013e6101ab366004610825565b5f6020819052908152604090205481565b3480156101c7575f80fd5b506100e56040518060400160405280600881526020016748504f503636364960c01b81525081565b3480156101fa575f80fd5b5061011a6102093660046107c4565b610330565b348015610219575f80fd5b50610222610343565b005b34801561022f575f80fd5b5061013e61023e36600461083e565b600160209081525f928352604080842090915290825290205481565b335f8181526001602090815260408083206001600160a01b038716808552925280832085905551919290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925906102b49086815260200190565b60405180910390a35060015b92915050565b6102d26012600a610963565b6102e0906323c34600610971565b81565b6001600160a01b0383165f908152600160209081526040808320338452909152812080548391908390610317908490610988565b90915550610328905084848461038d565b949350505050565b5f61033c33848461038d565b9392505050565b600254600160a81b900460ff1615610359575f80fd5b33731859905bc160f5d575165318111aa1891cb4633e14610378575f80fd5b6002805460ff60a81b1916600160a81b179055565b6002545f90600160a81b900460ff16806103c357506001600160a01b038416731859905bc160f5d575165318111aa1891cb4633e145b806103ea57506001600160a01b038316731859905bc160f5d575165318111aa1891cb4633e145b6103f2575f80fd5b600254600160a81b900460ff1615801561041557506002546001600160a01b0316155b801561042057505f82115b1561044157600280546001600160a01b0319166001600160a01b0385161790555b6001600160a01b0384165f9081526020819052604081208054849290610468908490610988565b90915550506002546001600160a01b0384811691161480156104945750600254600160a01b900460ff16155b80156104d3575060646104a96012600a610963565b6104b7906323c34600610971565b6104c1919061099b565b305f9081526020819052604090205410155b1561065d576002805460ff60a01b1916600160a01b178155604080518281526060810182525f92909160208301908036833701905050905030815f8151811061051e5761051e6109ba565b60200260200101906001600160a01b031690816001600160a01b03168152505073c02aaa39b223fe8d0a0e5c4f27ead9083c756cc281600181518110610566576105666109ba565b6001600160a01b0390921660209283029190910190910152737a250d5630b4cf539739df2c5dacb4c659f2488d63791ac94760646105a66012600a610963565b6105b4906323c34600610971565b6105be919061099b565b5f8430426040518663ffffffff1660e01b81526004016105e29594939291906109ce565b5f604051808303815f87803b1580156105f9575f80fd5b505af115801561060b573d5f803e3d5ffd5b5050604051731859905bc160f5d575165318111aa1891cb4633e92504780156108fc029250905f818181858888f1935050505015801561064d573d5f803e3d5ffd5b50506002805460ff60a01b191690555b6001600160a01b03841630146106d9576002545f906064906001600160a01b0387811691161461068d575f61068f565b5f5b6106999085610971565b6106a3919061099b565b90506106af8184610988565b305f908152602081905260408120805492955083929091906106d2908490610a3d565b9091555050505b6001600160a01b0383165f9081526020819052604081208054849290610700908490610a3d565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161074c91815260200190565b60405180910390a35060019392505050565b5f6020808352835180828501525f5b818110156107895785810183015185820160400152820161076d565b505f604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b03811681146107bf575f80fd5b919050565b5f80604083850312156107d5575f80fd5b6107de836107a9565b946020939093013593505050565b5f805f606084860312156107fe575f80fd5b610807846107a9565b9250610815602085016107a9565b9150604084013590509250925092565b5f60208284031215610835575f80fd5b61033c826107a9565b5f806040838503121561084f575f80fd5b610858836107a9565b9150610866602084016107a9565b90509250929050565b634e487b7160e01b5f52601160045260245ffd5b600181815b808511156108bd57815f19048211156108a3576108a361086f565b808516156108b057918102915b93841c9390800290610888565b509250929050565b5f826108d3575060016102c0565b816108df57505f6102c0565b81600181146108f557600281146108ff5761091b565b60019150506102c0565b60ff8411156109105761091061086f565b50506001821b6102c0565b5060208310610133831016604e8410600b841016171561093e575081810a6102c0565b6109488383610883565b805f190482111561095b5761095b61086f565b029392505050565b5f61033c60ff8416836108c5565b80820281158282048414176102c0576102c061086f565b818103818111156102c0576102c061086f565b5f826109b557634e487b7160e01b5f52601260045260245ffd5b500490565b634e487b7160e01b5f52603260045260245ffd5b5f60a082018783526020878185015260a0604085015281875180845260c08601915082890193505f5b81811015610a1c5784516001600160a01b0316835293830193918301916001016109f7565b50506001600160a01b03969096166060850152505050608001529392505050565b808201808211156102c0576102c061086f56fea264697066735822122018242aa59c2e5120f71163f83b1e8bb4ddc1370be494a275fca20aebecc8d2c664736f6c63430008150033",
    "contract_name": "HPOP666I",
    "compiler_version": "v0.8.21+commit.d9974bed",
    "optimization_used": "1",
    "runs": "200",
    "abi": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"openTrading\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]",
    "source_code": "// SPDX-License-Identifier: unlicense\r\n\r\n// HarryPotterObamaPoliticos666Inu (TICKER:ETH)\r\n\r\n// Telegram: http://t.me/HPOP666I\r\n// Website:  https://hpop666i.com/\r\n// Twitter:  https://twitter.com/HPOP666I\r\n\r\npragma solidity ^0.8.21;\r\n\r\ninterface IUniswapV2Router02 {\r\n    function swapExactTokensForETHSupportingFeeOnTransferTokens(\r\n        uint amountIn,\r\n        uint amountOutMin,\r\n        address[] calldata path,\r\n        address to,\r\n        uint deadline\r\n    ) external;\r\n}\r\n \r\ncontract HPOP666I {\r\n    string public constant name = \"HarryPotterObamaPoliticos666Inu\";  //\r\n    string public constant symbol = \"HPOP666I\";  //\r\n    uint8 public constant decimals = 18;\r\n    uint256 public constant totalSupply = 600_000_000 * 10**decimals;\r\n\r\n    uint256 constant buyTax = 0;\r\n    uint256 constant sellTax = 0;\r\n    uint256 constant swapAmount = totalSupply / 100;\r\n\r\n    mapping (address => uint256) public balanceOf;\r\n    mapping (address => mapping (address => uint256)) public allowance;\r\n    \r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n    event Approval(\r\n        address indexed owner,\r\n        address indexed spender,\r\n        uint256 value\r\n    );\r\n\r\n    address private pair;\r\n    address constant ETH = 0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2;\r\n    address constant routerAddress = 0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D;\r\n    IUniswapV2Router02 constant _uniswapV2Router = IUniswapV2Router02(routerAddress);\r\n    address payable constant deployer = payable(address(0x1859905bc160F5D575165318111Aa1891cB4633E)); //\r\n\r\n    bool private swapping;\r\n    bool private tradingOpen;\r\n\r\n    constructor() {\r\n        balanceOf[msg.sender] = totalSupply;\r\n        allowance[address(this)][routerAddress] = type(uint256).max;\r\n        emit Transfer(address(0), msg.sender, totalSupply);\r\n    }\r\n\r\n    receive() external payable {}\r\n\r\n    function approve(address spender, uint256 amount) external returns (bool){\r\n        allowance[msg.sender][spender] = amount;\r\n        emit Approval(msg.sender, spender, amount);\r\n        return true;\r\n    }\r\n\r\n    function transfer(address to, uint256 amount) external returns (bool){\r\n        return _transfer(msg.sender, to, amount);\r\n    }\r\n\r\n    function transferFrom(address from, address to, uint256 amount) external returns (bool){\r\n        allowance[from][msg.sender] -= amount;        \r\n        return _transfer(from, to, amount);\r\n    }\r\n\r\n    function _transfer(address from, address to, uint256 amount) internal returns (bool){\r\n        require(tradingOpen || from == deployer || to == deployer);\r\n\r\n        if(!tradingOpen && pair == address(0) && amount > 0)\r\n            pair = to;\r\n\r\n        balanceOf[from] -= amount;\r\n\r\n        if (to == pair && !swapping && balanceOf[address(this)] >= swapAmount){\r\n            swapping = true;\r\n            address[] memory path = new  address[](2);\r\n            path[0] = address(this);\r\n            path[1] = ETH;\r\n            _uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(\r\n                swapAmount,\r\n                0,\r\n                path,\r\n                address(this),\r\n                block.timestamp\r\n            );\r\n            deployer.transfer(address(this).balance);\r\n            swapping = false;\r\n        }\r\n\r\n        if(from != address(this)){\r\n            uint256 taxAmount = amount * (from == pair ? buyTax : sellTax) / 100;\r\n            amount -= taxAmount;\r\n            balanceOf[address(this)] += taxAmount;\r\n        }\r\n        balanceOf[to] += amount;\r\n        emit Transfer(from, to, amount);\r\n        return true;\r\n    }\r\n\r\n    function openTrading() external {\r\n        require(!tradingOpen);\r\n        require(msg.sender == deployer);\r\n        tradingOpen = true;        \r\n    }\r\n}",
    "etherscan_verified": true
}