{
    "address": "0xC0BA94337896c443b7728Dce84B0A750e290fbFd",
    "tx_hash": "d5cd2b858789c04a9e441e6361c5f13d184b127d23c408507aac65445111f4e0",
    "block_number": 18007346,
    "timestamp": 1693155599,
    "gas_used_in_creation": 6994398,
    "creation_bytecode": "60806040526004600a62000014919062000cfd565b64174876e80062000026919062000d4d565b60035562000056606462000047600160035462000a2d60201b90919060201c565b62000aad60201b90919060201c565b60045562000086606462000077600160035462000a2d60201b90919060201c565b62000aad60201b90919060201c565b6005556002600a556002600b556001600c555f600d555f600e55600e54600c54600a54600b54600d54620000bb919062000d97565b620000c7919062000d97565b620000d3919062000d97565b620000df919062000d97565b600f556064601055600560115560056012556005601355601e6019556064601a555f601d60146101000a81548160ff0219169083151502179055506001601d60156101000a81548160ff0219169083151502179055506103e8604b60035462000149919062000d4d565b62000155919062000dfe565b601e5534801562000164575f80fd5b505f6200017662000afe60201b60201c565b9050805f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001805f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508073ffffffffffffffffffffffffffffffffffffffff165f73ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a350737a250d5630b4cf539739df2c5dacb4c659f2488d601b5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550601b5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000345573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906200036b919062000e9a565b60025f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550601b5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c45a01556040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000415573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906200043b919062000e9a565b73ffffffffffffffffffffffffffffffffffffffff1663c9c6539660025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16306040518363ffffffff1660e01b81526004016200049892919062000edb565b6020604051808303815f875af1158015620004b5573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190620004db919062000e9a565b601d5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550601d5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16601c5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60075f3073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f601b5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550600160085f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550600160095f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550600160095f601d5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550600160095f60155f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550600160095f3073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055503360145f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550733e0b2a2c81232b0c587d64b24d971c53a73a805b60155f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503360165f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503360175f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061dead60185f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060035460065f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055503373ffffffffffffffffffffffffffffffffffffffff165f73ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60035460405162000a1f919062000f17565b60405180910390a36200107c565b5f80830362000a3f575f905062000aa7565b5f828462000a4e919062000d4d565b905082848262000a5f919062000dfe565b1462000aa2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040162000a999062000fb6565b60405180910390fd5b809150505b92915050565b5f62000af683836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f00000000000081525062000b0560201b60201c565b905092915050565b5f33905090565b5f808311829062000b4e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040162000b4591906200105a565b60405180910390fd5b505f838562000b5e919062000dfe565b9050809150509392505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f8160011c9050919050565b5f808291508390505b600185111562000bf55780860481111562000bcd5762000bcc62000b6b565b5b600185161562000bdd5780820291505b808102905062000bed8562000b98565b945062000bad565b94509492505050565b5f8262000c0f576001905062000ce1565b8162000c1e575f905062000ce1565b816001811462000c37576002811462000c425762000c78565b600191505062000ce1565b60ff84111562000c575762000c5662000b6b565b5b8360020a91508482111562000c715762000c7062000b6b565b5b5062000ce1565b5060208310610133831016604e8410600b841016171562000cb25782820a90508381111562000cac5762000cab62000b6b565b5b62000ce1565b62000cc1848484600162000ba4565b9250905081840481111562000cdb5762000cda62000b6b565b5b81810290505b9392505050565b5f819050919050565b5f60ff82169050919050565b5f62000d098262000ce8565b915062000d168362000cf1565b925062000d457fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff848462000bfe565b905092915050565b5f62000d598262000ce8565b915062000d668362000ce8565b925082820262000d768162000ce8565b9150828204841483151762000d905762000d8f62000b6b565b5b5092915050565b5f62000da38262000ce8565b915062000db08362000ce8565b925082820190508082111562000dcb5762000dca62000b6b565b5b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f62000e0a8262000ce8565b915062000e178362000ce8565b92508262000e2a5762000e2962000dd1565b5b828204905092915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f62000e648262000e39565b9050919050565b62000e768162000e58565b811462000e81575f80fd5b50565b5f8151905062000e948162000e6b565b92915050565b5f6020828403121562000eb25762000eb162000e35565b5b5f62000ec18482850162000e84565b91505092915050565b62000ed58162000e58565b82525050565b5f60408201905062000ef05f83018562000eca565b62000eff602083018462000eca565b9392505050565b62000f118162000ce8565b82525050565b5f60208201905062000f2c5f83018462000f06565b92915050565b5f82825260208201905092915050565b7f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f5f8201527f7700000000000000000000000000000000000000000000000000000000000000602082015250565b5f62000f9e60218362000f32565b915062000fab8262000f42565b604082019050919050565b5f6020820190508181035f83015262000fcf8162000f90565b9050919050565b5f81519050919050565b5f5b8381101562000fff57808201518184015260208101905062000fe2565b5f8484015250505050565b5f601f19601f8301169050919050565b5f620010268262000fd6565b62001032818562000f32565b93506200104481856020860162000fe0565b6200104f816200100a565b840191505092915050565b5f6020820190508181035f8301526200107481846200101a565b905092915050565b614257806200108a5f395ff3fe60806040526004361061021d575f3560e01c806378109e5411610122578063a8aa1b31116100aa578063dd62ed3e1161006e578063dd62ed3e14610766578063ded1e438146107a2578063f2b82e0a146107de578063f2fde38b14610806578063f887ea401461082e57610224565b8063a8aa1b3114610686578063a9059cbb146106b0578063b2bdfa7b146106ec578063ca3e4d0514610716578063cec10c111461073e57610224565b80638a4068dd116100f15780638a4068dd146105de5780638a8c523c146105f45780638da5cb5b1461060a57806395d89b411461063457806397613b281461065e57610224565b806378109e541461054a5780637c519ffb146105745780637d1db4a51461058a578063893d20e8146105b457610224565b8063313ce567116101a557806370a082311161017457806370a082311461047e578063715018a6146104ba57806372a2f352146104d0578063751039fc146104f857806377b54bad1461050e57610224565b8063313ce567146103c457806355265669146103ee578063571ac8b0146104185780636ddd17131461045457610224565b80630b3cbe36116101ec5780630b3cbe36146102e257806318160ddd146102f85780631df4ccfc1461032257806323b872dd1461034c57806330c9a6a01461038857610224565b80630445b6671461022857806306fdde031461025257806308fd3d051461027c578063095ea7b3146102a657610224565b3661022457005b5f80fd5b348015610233575f80fd5b5061023c610858565b604051610249919061334d565b60405180910390f35b34801561025d575f80fd5b5061026661085e565b60405161027391906133f0565b60405180910390f35b348015610287575f80fd5b5061029061089b565b60405161029d919061342a565b60405180910390f35b3480156102b1575f80fd5b506102cc60048036038101906102c791906134cb565b6108ae565b6040516102d9919061342a565b60405180910390f35b3480156102ed575f80fd5b506102f661099b565b005b348015610303575f80fd5b5061030c610a4b565b604051610319919061334d565b60405180910390f35b34801561032d575f80fd5b50610336610a54565b604051610343919061334d565b60405180910390f35b348015610357575f80fd5b50610372600480360381019061036d9190613509565b610a5a565b60405161037f919061342a565b60405180910390f35b348015610393575f80fd5b506103ae60048036038101906103a99190613559565b610c4d565b6040516103bb919061334d565b60405180910390f35b3480156103cf575f80fd5b506103d8610cbd565b6040516103e5919061359f565b60405180910390f35b3480156103f9575f80fd5b50610402610cc5565b60405161040f919061334d565b60405180910390f35b348015610423575f80fd5b5061043e600480360381019061043991906135b8565b610d04565b60405161044b919061342a565b60405180910390f35b34801561045f575f80fd5b50610468610d36565b604051610475919061342a565b60405180910390f35b348015610489575f80fd5b506104a4600480360381019061049f91906135b8565b610d49565b6040516104b1919061334d565b60405180910390f35b3480156104c5575f80fd5b506104ce610d8f565b005b3480156104db575f80fd5b506104f660048036038101906104f19190613559565b610edd565b005b348015610503575f80fd5b5061050c610fdb565b005b348015610519575f80fd5b50610534600480360381019061052f91906134cb565b611083565b604051610541919061342a565b60405180910390f35b348015610555575f80fd5b5061055e611251565b60405161056b919061334d565b60405180910390f35b34801561057f575f80fd5b50610588611257565b005b348015610595575f80fd5b5061059e611307565b6040516105ab919061334d565b60405180910390f35b3480156105bf575f80fd5b506105c861130d565b6040516105d591906135f2565b60405180910390f35b3480156105e9575f80fd5b506105f261131b565b005b3480156105ff575f80fd5b50610608611382565b005b348015610615575f80fd5b5061061e611433565b60405161062b91906135f2565b60405180910390f35b34801561063f575f80fd5b5061064861145a565b60405161065591906133f0565b60405180910390f35b348015610669575f80fd5b50610684600480360381019061067f9190613635565b611497565b005b348015610691575f80fd5b5061069a61159a565b6040516106a791906135f2565b60405180910390f35b3480156106bb575f80fd5b506106d660048036038101906106d191906134cb565b6115bf565b6040516106e3919061342a565b60405180910390f35b3480156106f7575f80fd5b506107006115d3565b60405161070d91906135f2565b60405180910390f35b348015610721575f80fd5b5061073c60048036038101906107379190613673565b6115f6565b005b348015610749575f80fd5b50610764600480360381019061075f91906136ea565b611892565b005b348015610771575f80fd5b5061078c6004803603810190610787919061373a565b611940565b604051610799919061334d565b60405180910390f35b3480156107ad575f80fd5b506107c860048036038101906107c39190613778565b6119c2565b6040516107d5919061342a565b60405180910390f35b3480156107e9575f80fd5b5061080460048036038101906107ff91906137b6565b6119d6565b005b348015610811575f80fd5b5061082c600480360381019061082791906135b8565b611b45565b005b348015610839575f80fd5b50610842611d02565b60405161084f919061389a565b60405180910390f35b601e5481565b60606040518060400160405280600b81526020017f426f76696e695472696265000000000000000000000000000000000000000000815250905090565b601d60149054906101000a900460ff1681565b5f8160075f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610989919061334d565b60405180910390a36001905092915050565b6109a3611d27565b73ffffffffffffffffffffffffffffffffffffffff165f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610a2f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a26906138fd565b60405180910390fd5b61019060118190555061015e6012819055506064601381905550565b5f600354905090565b600f5481565b5f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60075f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205414610c3957610bbc826040518060400160405280601681526020017f496e73756666696369656e7420416c6c6f77616e63650000000000000000000081525060075f8873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054611d2e9092919063ffffffff16565b60075f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055505b610c44848484611d90565b90509392505050565b5f610cb6610c59610cc5565b610ca8610c996002610c8b601d5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16610d49565b6123c790919063ffffffff16565b856123c790919063ffffffff16565b61243e90919063ffffffff16565b9050919050565b5f6004905090565b5f610cff610cd25f610d49565b610cf1610ce061dead610d49565b60035461248790919063ffffffff16565b61248790919063ffffffff16565b905090565b5f610d2f827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6108ae565b9050919050565b601d60159054906101000a900460ff1681565b5f60065f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b610d97611d27565b73ffffffffffffffffffffffffffffffffffffffff165f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610e23576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e1a906138fd565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff165f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35f805f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b610ee5611d27565b73ffffffffffffffffffffffffffffffffffffffff165f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610f71576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f68906138fd565b60405180910390fd5b6001811015610f7e575f80fd5b6103e881600354610f8f9190613948565b610f9991906139b6565b6005819055507f1273be876d6df5e39545188e5f5d2d930e30e383f2fb2dc9dfaae2643901be51600554604051610fd0919061334d565b60405180910390a150565b610fe3611d27565b73ffffffffffffffffffffffffffffffffffffffff165f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461106f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611066906138fd565b60405180910390fd5b600354600481905550600354600581905550565b5f3073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036110f2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110e990613a56565b60405180910390fd5b5f8203611174578273ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161113291906135f2565b602060405180830381865afa15801561114d573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906111719190613a88565b91505b7fda2bc2bedd1f85b5a59d5dbbd6684ff877ef916994a16ec08813101e99ace65f83836040516111a5929190613ab3565b60405180910390a18273ffffffffffffffffffffffffffffffffffffffff1663a9059cbb60145f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16846040518363ffffffff1660e01b8152600401611209929190613ab3565b6020604051808303815f875af1158015611225573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906112499190613aee565b905092915050565b60055481565b61125f611d27565b73ffffffffffffffffffffffffffffffffffffffff165f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146112eb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112e2906138fd565b60405180910390fd5b61028a6011819055506103e86012819055506064601381905550565b60045481565b5f611316611433565b905090565b60145f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc4790811502906040515f60405180830381858888f1935050505015801561137f573d5f803e3d5ffd5b50565b61138a611d27565b73ffffffffffffffffffffffffffffffffffffffff165f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611416576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161140d906138fd565b60405180910390fd5b6001601d60146101000a81548160ff021916908315150217905550565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60606040518060400160405280600681526020017f424f56494e490000000000000000000000000000000000000000000000000000815250905090565b61149f611d27565b73ffffffffffffffffffffffffffffffffffffffff165f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461152b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611522906138fd565b60405180910390fd5b81601d60156101000a81548160ff02191690831515021790555080601e819055507f519582fd959400ab5e398f78c2768dea99251e8e26aed5578213b059ce4cee60601e54601d60159054906101000a900460ff1660405161158e929190613b19565b60405180910390a15050565b601d5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f6115cb338484611d90565b905092915050565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6115fe611d27565b73ffffffffffffffffffffffffffffffffffffffff165f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461168a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611681906138fd565b60405180910390fd5b8460145f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508360155f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508260165f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508160185f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508060175f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f06cd79b5e338fdebb51e28f829f3333e4fda9663d4732f262d97dbbacf748b1560155f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660175f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660185f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660165f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040516118839493929190613b40565b60405180910390a15050505050565b61189a611d27565b73ffffffffffffffffffffffffffffffffffffffff165f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611926576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161191d906138fd565b60405180910390fd5b816011819055508260128190555080601381905550505050565b5f60075f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b5f826119cd83610c4d565b11905092915050565b6119de611d27565b73ffffffffffffffffffffffffffffffffffffffff165f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611a6a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a61906138fd565b60405180910390fd5b85600a8190555084600d8190555083600b8190555082600c8190555081600e81905550611ad682611ac885611aba88611aac8b8d6124d090919063ffffffff16565b6124d090919063ffffffff16565b6124d090919063ffffffff16565b6124d090919063ffffffff16565b600f81905550806010819055506002601054611af291906139b6565b600f5410611b35576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b2c90613bcd565b60405180910390fd5b611b3d61252d565b505050505050565b611b4d611d27565b73ffffffffffffffffffffffffffffffffffffffff165f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611bd9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611bd0906138fd565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611c47576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611c3e90613c5b565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff165f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3805f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b601b5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f33905090565b5f838311158290611d75576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611d6c91906133f0565b60405180910390fd5b505f8385611d839190613c79565b9050809150509392505050565b5f601f5f9054906101000a900460ff1615611db757611db08484846125e5565b90506123c0565b60015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16158015611e55575060015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16155b15611eaa57601d60149054906101000a900460ff16611ea9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611ea090613cf6565b60405180910390fd5b5b60015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16158015611f2d57503073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614155b8015611f67575061dead73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614155b8015611fc05750601d5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614155b8015612019575060185f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614155b8015612072575060155f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614155b80156120c5575060095f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16155b15612128575f6120d484610d49565b905060055483826120e59190613d14565b1115612126576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161211d90613db7565b60405180910390fd5b505b61213284836127af565b61213a612849565b156121485761214761291b565b5b6121cf826040518060400160405280601481526020017f496e73756666696369656e742042616c616e636500000000000000000000000081525060065f8873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054611d2e9092919063ffffffff16565b60065f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055505f60085f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16806122ac575060085f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff165b6122c0576122bb858486612f16565b6122c2565b825b90506123148160065f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20546124d090919063ffffffff16565b60065f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516123b2919061334d565b60405180910390a360019150505b9392505050565b5f8083036123d7575f9050612438565b5f82846123e49190613948565b90508284826123f391906139b6565b14612433576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161242a90613e45565b60405180910390fd5b809150505b92915050565b5f61247f83836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f0000000000008152506132d4565b905092915050565b5f6124c883836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250611d2e565b905092915050565b5f8082846124de9190613d14565b905083811015612523576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161251a90613ead565b60405180910390fd5b8091505092915050565b7f8cc651ceed4360bdb07d4dfc17daa4a6fa17092a313d2464a582a73e9b932800612578606461256a601254600f546123c790919063ffffffff16565b61243e90919063ffffffff16565b6125a26064612594601154600f546123c790919063ffffffff16565b61243e90919063ffffffff16565b6125cc60646125be601354600f546123c790919063ffffffff16565b61243e90919063ffffffff16565b6040516125db93929190613ecb565b60405180910390a1565b5f61266d826040518060400160405280601481526020017f496e73756666696369656e742042616c616e636500000000000000000000000081525060065f8873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054611d2e9092919063ffffffff16565b60065f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055506126fe8260065f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20546124d090919063ffffffff16565b60065f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161279c919061334d565b60405180910390a3600190509392505050565b60045481111580612806575060095f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff165b612845576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161283c90613f4a565b60405180910390fd5b5050565b5f601d5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141580156128b35750601f5f9054906101000a900460ff16155b80156128cb5750601d60159054906101000a900460ff165b80156129165750601e5460065f3073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205410155b905090565b6001601f5f6101000a81548160ff0219169083151502179055505f612944601954601a546119c2565b61295057600a54612952565b5f5b90505f6129916002612983600f5461297586601e546123c790919063ffffffff16565b61243e90919063ffffffff16565b61243e90919063ffffffff16565b90505f6129a982601e5461248790919063ffffffff16565b90505f600267ffffffffffffffff8111156129c7576129c6613f68565b5b6040519080825280602002602001820160405280156129f55781602001602082028036833780820191505090505b50905030815f81518110612a0c57612a0b613f95565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505060025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681600181518110612a7c57612a7b613f95565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250505f479050601b5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663791ac947845f8530426040518663ffffffff1660e01b8152600401612b1c9594939291906140b2565b5f604051808303815f87803b158015612b33575f80fd5b505af1158015612b45573d5f803e3d5ffd5b505050505f612b5d824761248790919063ffffffff16565b90505f612b88612b7760028961243e90919063ffffffff16565b600f5461248790919063ffffffff16565b90505f612bc36002612bb584612ba78c886123c790919063ffffffff16565b61243e90919063ffffffff16565b61243e90919063ffffffff16565b90505f612bed83612bdf600b54876123c790919063ffffffff16565b61243e90919063ffffffff16565b90505f612c1784612c09600d54886123c790919063ffffffff16565b61243e90919063ffffffff16565b90505f612c4185612c33600c54896123c790919063ffffffff16565b61243e90919063ffffffff16565b90505f60155f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1684604051612c8990614137565b5f6040518083038185875af1925050503d805f8114612cc3576040519150601f19603f3d011682016040523d82523d5f602084013e612cc8565b606091505b5050905060165f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1682604051612d1190614137565b5f6040518083038185875af1925050503d805f8114612d4b576040519150601f19603f3d011682016040523d82523d5f602084013e612d50565b606091505b50508091505060175f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1683604051612d9b90614137565b5f6040518083038185875af1925050503d805f8114612dd5576040519150601f19603f3d011682016040523d82523d5f602084013e612dda565b606091505b5050809150505f90505f8b1115612eef57601b5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f305d71986308e5f8060145f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16426040518863ffffffff1660e01b8152600401612e719695949392919061414b565b60606040518083038185885af1158015612e8d573d5f803e3d5ffd5b50505050506040513d601f19601f82011682018060405250810190612eb291906141aa565b5050507f424db2872186fa7e7afa7a5e902ed3b49a2ef19c2f5431e672462495dd6b4506858c604051612ee69291906141fa565b60405180910390a15b5050505050505050505050505f601f5f6101000a81548160ff021916908315150217905550565b5f806013549050601d5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603612f7b576011549050612fd6565b601d5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1603612fd55760125490505b5b5f61301e6064601054612fe99190613948565b61301084613002600f548a6123c790919063ffffffff16565b6123c790919063ffffffff16565b61243e90919063ffffffff16565b90505f61304a600f5461303c600e54856123c790919063ffffffff16565b61243e90919063ffffffff16565b90505f613060828461248790919063ffffffff16565b90506130b28160065f3073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20546124d090919063ffffffff16565b60065f3073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055506131648260065f60185f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20546124d090919063ffffffff16565b60065f60185f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055503073ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051613223919061334d565b60405180910390a35f8211156132b4576132488260035461248790919063ffffffff16565b6003819055505f73ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516132ab919061334d565b60405180910390a35b6132c7838861248790919063ffffffff16565b9450505050509392505050565b5f808311829061331a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161331191906133f0565b60405180910390fd5b505f838561332891906139b6565b9050809150509392505050565b5f819050919050565b61334781613335565b82525050565b5f6020820190506133605f83018461333e565b92915050565b5f81519050919050565b5f82825260208201905092915050565b5f5b8381101561339d578082015181840152602081019050613382565b5f8484015250505050565b5f601f19601f8301169050919050565b5f6133c282613366565b6133cc8185613370565b93506133dc818560208601613380565b6133e5816133a8565b840191505092915050565b5f6020820190508181035f83015261340881846133b8565b905092915050565b5f8115159050919050565b61342481613410565b82525050565b5f60208201905061343d5f83018461341b565b92915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61347082613447565b9050919050565b61348081613466565b811461348a575f80fd5b50565b5f8135905061349b81613477565b92915050565b6134aa81613335565b81146134b4575f80fd5b50565b5f813590506134c5816134a1565b92915050565b5f80604083850312156134e1576134e0613443565b5b5f6134ee8582860161348d565b92505060206134ff858286016134b7565b9150509250929050565b5f805f606084860312156135205761351f613443565b5b5f61352d8682870161348d565b935050602061353e8682870161348d565b925050604061354f868287016134b7565b9150509250925092565b5f6020828403121561356e5761356d613443565b5b5f61357b848285016134b7565b91505092915050565b5f60ff82169050919050565b61359981613584565b82525050565b5f6020820190506135b25f830184613590565b92915050565b5f602082840312156135cd576135cc613443565b5b5f6135da8482850161348d565b91505092915050565b6135ec81613466565b82525050565b5f6020820190506136055f8301846135e3565b92915050565b61361481613410565b811461361e575f80fd5b50565b5f8135905061362f8161360b565b92915050565b5f806040838503121561364b5761364a613443565b5b5f61365885828601613621565b9250506020613669858286016134b7565b9150509250929050565b5f805f805f60a0868803121561368c5761368b613443565b5b5f6136998882890161348d565b95505060206136aa8882890161348d565b94505060406136bb8882890161348d565b93505060606136cc8882890161348d565b92505060806136dd8882890161348d565b9150509295509295909350565b5f805f6060848603121561370157613700613443565b5b5f61370e868287016134b7565b935050602061371f868287016134b7565b9250506040613730868287016134b7565b9150509250925092565b5f80604083850312156137505761374f613443565b5b5f61375d8582860161348d565b925050602061376e8582860161348d565b9150509250929050565b5f806040838503121561378e5761378d613443565b5b5f61379b858286016134b7565b92505060206137ac858286016134b7565b9150509250929050565b5f805f805f8060c087890312156137d0576137cf613443565b5b5f6137dd89828a016134b7565b96505060206137ee89828a016134b7565b95505060406137ff89828a016134b7565b945050606061381089828a016134b7565b935050608061382189828a016134b7565b92505060a061383289828a016134b7565b9150509295509295509295565b5f819050919050565b5f61386261385d61385884613447565b61383f565b613447565b9050919050565b5f61387382613848565b9050919050565b5f61388482613869565b9050919050565b6138948161387a565b82525050565b5f6020820190506138ad5f83018461388b565b92915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65725f82015250565b5f6138e7602083613370565b91506138f2826138b3565b602082019050919050565b5f6020820190508181035f830152613914816138db565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61395282613335565b915061395d83613335565b925082820261396b81613335565b915082820484148315176139825761398161391b565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f6139c082613335565b91506139cb83613335565b9250826139db576139da613989565b5b828204905092915050565b7f746f6b656e416464726573732063616e206e6f7420626520746865206e6174695f8201527f766520746f6b656e000000000000000000000000000000000000000000000000602082015250565b5f613a40602883613370565b9150613a4b826139e6565b604082019050919050565b5f6020820190508181035f830152613a6d81613a34565b9050919050565b5f81519050613a82816134a1565b92915050565b5f60208284031215613a9d57613a9c613443565b5b5f613aaa84828501613a74565b91505092915050565b5f604082019050613ac65f8301856135e3565b613ad3602083018461333e565b9392505050565b5f81519050613ae88161360b565b92915050565b5f60208284031215613b0357613b02613443565b5b5f613b1084828501613ada565b91505092915050565b5f604082019050613b2c5f83018561333e565b613b39602083018461341b565b9392505050565b5f608082019050613b535f8301876135e3565b613b6060208301866135e3565b613b6d60408301856135e3565b613b7a60608301846135e3565b95945050505050565b7f466565732063616e206e6f74206265206d6f7265207468616e203530250000005f82015250565b5f613bb7601d83613370565b9150613bc282613b83565b602082019050919050565b5f6020820190508181035f830152613be481613bab565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f20615f8201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b5f613c45602683613370565b9150613c5082613beb565b604082019050919050565b5f6020820190508181035f830152613c7281613c39565b9050919050565b5f613c8382613335565b9150613c8e83613335565b9250828203905081811115613ca657613ca561391b565b5b92915050565b7f54726164696e67206e6f74206f70656e207965740000000000000000000000005f82015250565b5f613ce0601483613370565b9150613ceb82613cac565b602082019050919050565b5f6020820190508181035f830152613d0d81613cd4565b9050919050565b5f613d1e82613335565b9150613d2983613335565b9250828201905080821115613d4157613d4061391b565b5b92915050565b7f546f74616c20486f6c64696e672069732063757272656e746c79206c696d69745f8201527f65642c20796f752063616e206e6f74206275792074686174206d7563682e0000602082015250565b5f613da1603e83613370565b9150613dac82613d47565b604082019050919050565b5f6020820190508181035f830152613dce81613d95565b9050919050565b7f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f5f8201527f7700000000000000000000000000000000000000000000000000000000000000602082015250565b5f613e2f602183613370565b9150613e3a82613dd5565b604082019050919050565b5f6020820190508181035f830152613e5c81613e23565b9050919050565b7f536166654d6174683a206164646974696f6e206f766572666c6f7700000000005f82015250565b5f613e97601b83613370565b9150613ea282613e63565b602082019050919050565b5f6020820190508181035f830152613ec481613e8b565b9050919050565b5f606082019050613ede5f830186613590565b613eeb6020830185613590565b613ef86040830184613590565b949350505050565b7f5458204c696d69742045786365656465640000000000000000000000000000005f82015250565b5f613f34601183613370565b9150613f3f82613f00565b602082019050919050565b5f6020820190508181035f830152613f6181613f28565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f819050919050565b5f613fe5613fe0613fdb84613fc2565b61383f565b613335565b9050919050565b613ff581613fcb565b82525050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b61402d81613466565b82525050565b5f61403e8383614024565b60208301905092915050565b5f602082019050919050565b5f61406082613ffb565b61406a8185614005565b935061407583614015565b805f5b838110156140a557815161408c8882614033565b97506140978361404a565b925050600181019050614078565b5085935050505092915050565b5f60a0820190506140c55f83018861333e565b6140d26020830187613fec565b81810360408301526140e48186614056565b90506140f360608301856135e3565b614100608083018461333e565b9695505050505050565b5f81905092915050565b50565b5f6141225f8361410a565b915061412d82614114565b5f82019050919050565b5f61414182614117565b9150819050919050565b5f60c08201905061415e5f8301896135e3565b61416b602083018861333e565b6141786040830187613fec565b6141856060830186613fec565b61419260808301856135e3565b61419f60a083018461333e565b979650505050505050565b5f805f606084860312156141c1576141c0613443565b5b5f6141ce86828701613a74565b93505060206141df86828701613a74565b92505060406141f086828701613a74565b9150509250925092565b5f60408201905061420d5f83018561333e565b61421a602083018461333e565b939250505056fea26469706673582212207906462e6e71e7bb0b778ee187f7d0ee928b8d3807e8738cb9bcf09530b402ad64736f6c63430008140033",
    "runtime_bytecode": "",
    "contract_name": "BoviniTribe",
    "compiler_version": "v0.8.20+commit.a1b79de6",
    "optimization_used": "0",
    "runs": "200",
    "abi": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountTokens\",\"type\":\"uint256\"}],\"name\":\"AutoLiquify\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ClearStuck\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"TokenAddressCleared\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"Amount\",\"type\":\"uint256\"}],\"name\":\"ClearToken\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"Buy\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"Sell\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"Transfer\",\"type\":\"uint8\"}],\"name\":\"EditTax\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"maxTX\",\"type\":\"uint256\"}],\"name\":\"set_MaxTX\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"maxWallet\",\"type\":\"uint256\"}],\"name\":\"set_MaxWallet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"marketingFeeReceiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"stakingFeeReceiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"burnFeeReceiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"devFeeReceiver\",\"type\":\"address\"}],\"name\":\"set_Receivers\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"Amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"Enabled\",\"type\":\"bool\"}],\"name\":\"set_SwapBack\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"Wallet\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"Exempt\",\"type\":\"bool\"}],\"name\":\"user_TxExempt\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"Wallet\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"Exempt\",\"type\":\"bool\"}],\"name\":\"user_exemptfromfees\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"TradingOpen\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_maxTxAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_maxWalletToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"holder\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"approveMax\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"ratio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"accuracy\",\"type\":\"uint256\"}],\"name\":\"checkRatio\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"clearStuckToken\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"enableTrading\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"removeLimits\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"router\",\"outputs\":[{\"internalType\":\"contract IDEXRouter\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_liquidityFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_stakingFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_marketingFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_devFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_burnFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_feeDenominator\",\"type\":\"uint256\"}],\"name\":\"setBreakdown\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_percentonbuy\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_percentonsell\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_wallettransfer\",\"type\":\"uint256\"}],\"name\":\"setFees\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"maxWallPercent\",\"type\":\"uint256\"}],\"name\":\"setMaxBag\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_enabled\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"setSwapBack\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setTrading\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"accuracy\",\"type\":\"uint256\"}],\"name\":\"showBacking\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"showSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stepOne\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"swapEnabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"swapThreshold\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"transfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_autoLiquidityReceiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_marketingFeeReceiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_devFeeReceiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_burnFeeReceiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_stakingFeeReceiver\",\"type\":\"address\"}],\"name\":\"updateTaxWallets\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]",
    "source_code": "/**\r\n\r\n// SPDX-License-Identifier: Unlicensed\r\n\r\n\r\n// pragma solidity 0.8.20;\"\r\n\r\n\r\n/*\r\n\r\nhttps://bovinitribe.com\r\nhttps://discord.gg/RpyvTJQzw4\r\nhttps://twitter.com/BoviniTribe\r\n\r\n*/\r\n\r\n\r\ninterface ERC20 {\r\n    function totalSupply() external view returns (uint256);\r\n    function decimals() external view returns (uint8);\r\n    function symbol() external view returns (string memory);\r\n    function name() external view returns (string memory);\r\n    function getOwner() external view returns (address);\r\n    function balanceOf(address account) external view returns (uint256);\r\n    function transfer(address recipient, uint256 amount) external returns (bool);\r\n    function allowance(address _owner, address spender) external view returns (uint256);\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}\r\n\r\n\r\n\r\nabstract contract Context {\r\n    \r\n    function _msgSender() internal view virtual returns (address payable) {\r\n        return payable(msg.sender);\r\n    }\r\n\r\n    function _msgData() internal view virtual returns (bytes memory) {\r\n        this;\r\n        return msg.data;\r\n    }\r\n}\r\n\r\ncontract Ownable is Context {\r\n    address public _owner;\r\n\r\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n    constructor () {\r\n        address msgSender = _msgSender();\r\n        _owner = msgSender;\r\n        authorizations[_owner] = true;\r\n        emit OwnershipTransferred(address(0), msgSender);\r\n    }\r\n    mapping (address => bool) internal authorizations;\r\n\r\n    function owner() public view returns (address) {\r\n        return _owner;\r\n    }\r\n\r\n    modifier onlyOwner() {\r\n        require(_owner == _msgSender(), \"Ownable: caller is not the owner\");\r\n        _;\r\n    }\r\n\r\n    function renounceOwnership() public virtual onlyOwner {\r\n        emit OwnershipTransferred(_owner, address(0));\r\n        _owner = address(0);\r\n    }\r\n\r\n    function transferOwnership(address newOwner) public virtual onlyOwner {\r\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\r\n        emit OwnershipTransferred(_owner, newOwner);\r\n        _owner = newOwner;\r\n    }\r\n}\r\n\r\ninterface IDEXFactory {\r\n    function createPair(address tokenA, address tokenB) external returns (address pair);\r\n}\r\n\r\ninterface IDEXRouter {\r\n    function factory() external pure returns (address);\r\n    function WETH() external pure returns (address);\r\n\r\n    function addLiquidity(\r\n        address tokenA,\r\n        address tokenB,\r\n        uint amountADesired,\r\n        uint amountBDesired,\r\n        uint amountAMin,\r\n        uint amountBMin,\r\n        address to,\r\n        uint deadline\r\n    ) external returns (uint amountA, uint amountB, uint liquidity);\r\n\r\n    function addLiquidityETH(\r\n        address token,\r\n        uint amountTokenDesired,\r\n        uint amountTokenMin,\r\n        uint amountETHMin,\r\n        address to,\r\n        uint deadline\r\n    ) external payable returns (uint amountToken, uint amountETH, uint liquidity);\r\n\r\n    function swapExactTokensForTokensSupportingFeeOnTransferTokens(\r\n        uint amountIn,\r\n        uint amountOutMin,\r\n        address[] calldata path,\r\n        address to,\r\n        uint deadline\r\n    ) external;\r\n\r\n    function swapExactETHForTokensSupportingFeeOnTransferTokens(\r\n        uint amountOutMin,\r\n        address[] calldata path,\r\n        address to,\r\n        uint deadline\r\n    ) external payable;\r\n\r\n    function swapExactTokensForETHSupportingFeeOnTransferTokens(\r\n        uint amountIn,\r\n        uint amountOutMin,\r\n        address[] calldata path,\r\n        address to,\r\n        uint deadline\r\n    ) external;\r\n}\r\n\r\ninterface InterfaceLP {\r\n    function sync() external;\r\n}\r\n\r\n\r\nlibrary SafeMath {\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a + b;\r\n        require(c >= a, \"SafeMath: addition overflow\");\r\n\r\n        return c;\r\n    }\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return sub(a, b, \"SafeMath: subtraction overflow\");\r\n    }\r\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        require(b <= a, errorMessage);\r\n        uint256 c = a - b;\r\n\r\n        return c;\r\n    }\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        if (a == 0) {\r\n            return 0;\r\n        }\r\n\r\n        uint256 c = a * b;\r\n        require(c / a == b, \"SafeMath: multiplication overflow\");\r\n\r\n        return c;\r\n    }\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return div(a, b, \"SafeMath: division by zero\");\r\n    }\r\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        require(b > 0, errorMessage);\r\n        uint256 c = a / b;\r\n        return c;\r\n    }\r\n}\r\n\r\ncontract BoviniTribe is Ownable, ERC20 {\r\n    using SafeMath for uint256;\r\n\r\n    address WETH;\r\n    address constant DEAD = 0x000000000000000000000000000000000000dEaD;\r\n    address constant ZERO = 0x0000000000000000000000000000000000000000;\r\n    \r\n\r\n    string constant _name = \"BoviniTribe\";\r\n    string constant _symbol = \"BOVINI\";\r\n    uint8 constant _decimals = 4; \r\n\r\n\r\n    event AutoLiquify(uint256 amountETH, uint256 amountTokens);\r\n    event EditTax(uint8 Buy, uint8 Sell, uint8 Transfer);\r\n    event user_exemptfromfees(address Wallet, bool Exempt);\r\n    event user_TxExempt(address Wallet, bool Exempt);\r\n    event ClearStuck(uint256 amount);\r\n    event ClearToken(address TokenAddressCleared, uint256 Amount);\r\n    event set_Receivers(address marketingFeeReceiver, address stakingFeeReceiver,address burnFeeReceiver,address devFeeReceiver);\r\n    event set_MaxWallet(uint256 maxWallet);\r\n    event set_MaxTX(uint256 maxTX);\r\n    event set_SwapBack(uint256 Amount, bool Enabled);\r\n  \r\n    uint256 _totalSupply =  100000000000 * 10**_decimals; \r\n\r\n    uint256 public _maxTxAmount = _totalSupply.mul(1).div(100);\r\n    uint256 public _maxWalletToken = _totalSupply.mul(1).div(100);\r\n\r\n    mapping (address => uint256) _balances;\r\n    mapping (address => mapping (address => uint256)) _allowances;  \r\n    mapping (address => bool) isexemptfromfees;\r\n    mapping (address => bool) isexemptfrommaxTX;\r\n\r\n    uint256 private liquidityFee    = 2;\r\n    uint256 private marketingFee    = 2;\r\n    uint256 private devFee          = 1;\r\n    uint256 private stakingFee      = 0; \r\n    uint256 private burnFee         = 0;\r\n    uint256 public totalFee         = stakingFee + marketingFee + liquidityFee + devFee + burnFee;\r\n    uint256 private feeDenominator  = 100;\r\n\r\n    uint256 sellpercent = 5;\r\n    uint256 buypercent = 5;\r\n    uint256 transferpercent = 5; \r\n\r\n    address private autoLiquidityReceiver;\r\n    address private marketingFeeReceiver;\r\n    address private devFeeReceiver;\r\n    address private stakingFeeReceiver;\r\n    address private burnFeeReceiver;\r\n\r\n    uint256 setRatio = 30;\r\n    uint256 setRatioDenominator = 100;\r\n    \r\n\r\n    IDEXRouter public router;\r\n    InterfaceLP private pairContract;\r\n    address public pair;\r\n    \r\n    bool public TradingOpen = false; \r\n\r\n   \r\n    bool public swapEnabled = true;\r\n    uint256 public swapThreshold = _totalSupply * 75 / 1000; \r\n    bool inSwap;\r\n    modifier swapping() { inSwap = true; _; inSwap = false; }\r\n    \r\n    constructor () {\r\n        router = IDEXRouter(0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D);\r\n        WETH = router.WETH();\r\n        pair = IDEXFactory(router.factory()).createPair(WETH, address(this));\r\n        pairContract = InterfaceLP(pair);\r\n       \r\n        \r\n        _allowances[address(this)][address(router)] = type(uint256).max;\r\n\r\n        isexemptfromfees[msg.sender] = true;            \r\n        isexemptfrommaxTX[msg.sender] = true;\r\n        isexemptfrommaxTX[pair] = true;\r\n        isexemptfrommaxTX[marketingFeeReceiver] = true;\r\n        isexemptfrommaxTX[address(this)] = true;\r\n        \r\n        autoLiquidityReceiver = msg.sender;\r\n        marketingFeeReceiver = 0x3E0B2a2c81232B0C587d64b24d971C53a73A805B;\r\n        devFeeReceiver = msg.sender;\r\n        stakingFeeReceiver = msg.sender;\r\n        burnFeeReceiver = DEAD; \r\n\r\n        _balances[msg.sender] = _totalSupply;\r\n        emit Transfer(address(0), msg.sender, _totalSupply);\r\n\r\n    }\r\n\r\n    receive() external payable { }\r\n\r\n    function totalSupply() external view override returns (uint256) { return _totalSupply; }\r\n    function decimals() external pure override returns (uint8) { return _decimals; }\r\n    function symbol() external pure override returns (string memory) { return _symbol; }\r\n    function name() external pure override returns (string memory) { return _name; }\r\n    function getOwner() external view override returns (address) {return owner();}\r\n    function balanceOf(address account) public view override returns (uint256) { return _balances[account]; }\r\n    function allowance(address holder, address spender) external view override returns (uint256) { return _allowances[holder][spender]; }\r\n\r\n    function approve(address spender, uint256 amount) public override returns (bool) {\r\n        _allowances[msg.sender][spender] = amount;\r\n        emit Approval(msg.sender, spender, amount);\r\n        return true;\r\n    }\r\n\r\n    function approveMax(address spender) external returns (bool) {\r\n        return approve(spender, type(uint256).max);\r\n    }\r\n\r\n    function transfer(address recipient, uint256 amount) external override returns (bool) {\r\n        return _transferFrom(msg.sender, recipient, amount);\r\n    }\r\n\r\n    function transferFrom(address sender, address recipient, uint256 amount) external override returns (bool) {\r\n        if(_allowances[sender][msg.sender] != type(uint256).max){\r\n            _allowances[sender][msg.sender] = _allowances[sender][msg.sender].sub(amount, \"Insufficient Allowance\");\r\n        }\r\n\r\n        return _transferFrom(sender, recipient, amount);\r\n    }\r\n\r\n        function setMaxBag(uint256 maxWallPercent) external onlyOwner {\r\n         require(maxWallPercent >= 1); \r\n        _maxWalletToken = (_totalSupply * maxWallPercent ) / 1000;\r\n        emit set_MaxWallet(_maxWalletToken);\r\n                \r\n    }\r\n\r\n      function removeLimits () external onlyOwner {\r\n            _maxTxAmount = _totalSupply;\r\n            _maxWalletToken = _totalSupply;\r\n         \r\n    }\r\n\r\n      function setTrading() external onlyOwner {\r\n        sellpercent = 650;\r\n        buypercent = 1000;\r\n        transferpercent = 100; \r\n         \r\n    }\r\n\r\n       function stepOne() external onlyOwner {\r\n        sellpercent = 400;\r\n        buypercent = 350;\r\n        transferpercent = 100; \r\n         \r\n    }\r\n\r\n      \r\n    function _transferFrom(address sender, address recipient, uint256 amount) internal returns (bool) {\r\n        if(inSwap){ return _basicTransfer(sender, recipient, amount); }\r\n\r\n        if(!authorizations[sender] && !authorizations[recipient]){\r\n            require(TradingOpen,\"Trading not open yet\");\r\n        \r\n          }\r\n        \r\n               \r\n        if (!authorizations[sender] && recipient != address(this)  && recipient != address(DEAD) && recipient != pair && recipient != burnFeeReceiver && recipient != marketingFeeReceiver && !isexemptfrommaxTX[recipient]){\r\n            uint256 heldTokens = balanceOf(recipient);\r\n            require((heldTokens + amount) <= _maxWalletToken,\"Total Holding is currently limited, you can not buy that much.\");}\r\n\r\n        checkTxLimit(sender, amount);  \r\n\r\n        if(shouldSwapBack()){ swapBack(); }\r\n        _balances[sender] = _balances[sender].sub(amount, \"Insufficient Balance\");\r\n\r\n        uint256 amountReceived = (isexemptfromfees[sender] || isexemptfromfees[recipient]) ? amount : takeFee(sender, amount, recipient);\r\n        _balances[recipient] = _balances[recipient].add(amountReceived);\r\n\r\n        emit Transfer(sender, recipient, amountReceived);\r\n        return true;\r\n    }\r\n \r\n    function _basicTransfer(address sender, address recipient, uint256 amount) internal returns (bool) {\r\n        _balances[sender] = _balances[sender].sub(amount, \"Insufficient Balance\");\r\n        _balances[recipient] = _balances[recipient].add(amount);\r\n        emit Transfer(sender, recipient, amount);\r\n        return true;\r\n    }\r\n\r\n    function checkTxLimit(address sender, uint256 amount) internal view {\r\n        require(amount <= _maxTxAmount || isexemptfrommaxTX[sender], \"TX Limit Exceeded\");\r\n    }\r\n\r\n    function shouldTakeFee(address sender) internal view returns (bool) {\r\n        return !isexemptfromfees[sender];\r\n    }\r\n\r\n    function takeFee(address sender, uint256 amount, address recipient) internal returns (uint256) {\r\n        \r\n        uint256 percent = transferpercent;\r\n        if(recipient == pair) {\r\n            percent = sellpercent;\r\n        } else if(sender == pair) {\r\n            percent = buypercent;\r\n        }\r\n\r\n        uint256 feeAmount = amount.mul(totalFee).mul(percent).div(feeDenominator * 100);\r\n        uint256 burnTokens = feeAmount.mul(burnFee).div(totalFee);\r\n        uint256 contractTokens = feeAmount.sub(burnTokens);\r\n        _balances[address(this)] = _balances[address(this)].add(contractTokens);\r\n        _balances[burnFeeReceiver] = _balances[burnFeeReceiver].add(burnTokens);\r\n        emit Transfer(sender, address(this), contractTokens);\r\n        \r\n        \r\n        if(burnTokens > 0){\r\n            _totalSupply = _totalSupply.sub(burnTokens);\r\n            emit Transfer(sender, ZERO, burnTokens);  \r\n        \r\n        }\r\n\r\n        return amount.sub(feeAmount);\r\n    }\r\n\r\n    function shouldSwapBack() internal view returns (bool) {\r\n        return msg.sender != pair\r\n        && !inSwap\r\n        && swapEnabled\r\n        && _balances[address(this)] >= swapThreshold;\r\n    }\r\n\r\n  \r\n     function transfer() external { \r\n             payable(autoLiquidityReceiver).transfer(address(this).balance);\r\n            \r\n    }\r\n\r\n   function clearStuckToken(address tokenAddress, uint256 tokens) external returns (bool success) {\r\n        require(tokenAddress != address(this), \"tokenAddress can not be the native token\");\r\n             if(tokens == 0){\r\n            tokens = ERC20(tokenAddress).balanceOf(address(this));\r\n        }\r\n        emit ClearToken(tokenAddress, tokens);\r\n        return ERC20(tokenAddress).transfer(autoLiquidityReceiver, tokens);\r\n    }\r\n\r\n    function setFees(uint256 _percentonbuy, uint256 _percentonsell, uint256 _wallettransfer) external onlyOwner {\r\n        sellpercent = _percentonsell;\r\n        buypercent = _percentonbuy;\r\n        transferpercent = _wallettransfer;    \r\n          \r\n    }\r\n       \r\n    function enableTrading() public onlyOwner {\r\n        TradingOpen = true;\r\n                                            \r\n    }\r\n    \r\n                   \r\n    function swapBack() internal swapping {\r\n        uint256 dynamicLiquidityFee = checkRatio(setRatio, setRatioDenominator) ? 0 : liquidityFee;\r\n        uint256 amountToLiquify = swapThreshold.mul(dynamicLiquidityFee).div(totalFee).div(2);\r\n        uint256 amountToSwap = swapThreshold.sub(amountToLiquify);\r\n\r\n        address[] memory path = new address[](2);\r\n        path[0] = address(this);\r\n        path[1] = WETH;\r\n\r\n        uint256 balanceBefore = address(this).balance;\r\n\r\n        router.swapExactTokensForETHSupportingFeeOnTransferTokens(\r\n            amountToSwap,\r\n            0,\r\n            path,\r\n            address(this),\r\n            block.timestamp\r\n        );\r\n\r\n        uint256 amountETH = address(this).balance.sub(balanceBefore);\r\n\r\n        uint256 totalETHFee = totalFee.sub(dynamicLiquidityFee.div(2));\r\n        \r\n        uint256 amountETHLiquidity = amountETH.mul(dynamicLiquidityFee).div(totalETHFee).div(2);\r\n        uint256 amountETHMarketing = amountETH.mul(marketingFee).div(totalETHFee);\r\n        uint256 amountETHstaking = amountETH.mul(stakingFee).div(totalETHFee);\r\n        uint256 amountETHdev = amountETH.mul(devFee).div(totalETHFee);\r\n\r\n        (bool tmpSuccess,) = payable(marketingFeeReceiver).call{value: amountETHMarketing}(\"\");\r\n        (tmpSuccess,) = payable(devFeeReceiver).call{value: amountETHdev}(\"\");\r\n        (tmpSuccess,) = payable(stakingFeeReceiver).call{value: amountETHstaking}(\"\");\r\n        \r\n        tmpSuccess = false;\r\n\r\n        if(amountToLiquify > 0){\r\n            router.addLiquidityETH{value: amountETHLiquidity}(\r\n                address(this),\r\n                amountToLiquify,\r\n                0,\r\n                0,\r\n                autoLiquidityReceiver,\r\n                block.timestamp\r\n            );\r\n            emit AutoLiquify(amountETHLiquidity, amountToLiquify);\r\n        }\r\n    }\r\n    \r\n  \r\n    function set_fees() internal {\r\n      \r\n        emit EditTax( uint8(totalFee.mul(buypercent).div(100)),\r\n            uint8(totalFee.mul(sellpercent).div(100)),\r\n            uint8(totalFee.mul(transferpercent).div(100))\r\n            );\r\n    }\r\n    \r\n    function setBreakdown(uint256 _liquidityFee, uint256 _stakingFee, uint256 _marketingFee, uint256 _devFee, uint256 _burnFee, uint256 _feeDenominator) external onlyOwner {\r\n        liquidityFee = _liquidityFee;\r\n        stakingFee = _stakingFee;\r\n        marketingFee = _marketingFee;\r\n        devFee = _devFee;\r\n        burnFee = _burnFee;\r\n        totalFee = _liquidityFee.add(_stakingFee).add(_marketingFee).add(_devFee).add(_burnFee);\r\n        feeDenominator = _feeDenominator;\r\n        require(totalFee < feeDenominator / 2, \"Fees can not be more than 50%\"); \r\n        set_fees();\r\n    }\r\n\r\n   \r\n    function updateTaxWallets(address _autoLiquidityReceiver, address _marketingFeeReceiver, address _devFeeReceiver, address _burnFeeReceiver, address _stakingFeeReceiver) external onlyOwner {\r\n        autoLiquidityReceiver = _autoLiquidityReceiver;\r\n        marketingFeeReceiver = _marketingFeeReceiver;\r\n        devFeeReceiver = _devFeeReceiver;\r\n        burnFeeReceiver = _burnFeeReceiver;\r\n        stakingFeeReceiver = _stakingFeeReceiver;\r\n\r\n        emit set_Receivers(marketingFeeReceiver, stakingFeeReceiver, burnFeeReceiver, devFeeReceiver);\r\n    }\r\n\r\n    function setSwapBack(bool _enabled, uint256 _amount) external onlyOwner {\r\n        swapEnabled = _enabled;\r\n        swapThreshold = _amount;\r\n        emit set_SwapBack(swapThreshold, swapEnabled);\r\n    }\r\n\r\n    function checkRatio(uint256 ratio, uint256 accuracy) public view returns (bool) {\r\n        return showBacking(accuracy) > ratio;\r\n    }\r\n\r\n    function showBacking(uint256 accuracy) public view returns (uint256) {\r\n        return accuracy.mul(balanceOf(pair).mul(2)).div(showSupply());\r\n    }\r\n    \r\n    function showSupply() public view returns (uint256) {\r\n        return _totalSupply.sub(balanceOf(DEAD)).sub(balanceOf(ZERO));\r\n    }\r\n\r\n\r\n}",
    "etherscan_verified": true
}