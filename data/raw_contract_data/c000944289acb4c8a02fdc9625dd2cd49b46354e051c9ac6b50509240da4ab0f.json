{
    "address": "0xd0ccce1D39ceE3F1eA77D14C495eAbA9DF6BCA69",
    "tx_hash": "c000944289acb4c8a02fdc9625dd2cd49b46354e051c9ac6b50509240da4ab0f",
    "block_number": 18007410,
    "timestamp": 1693156391,
    "gas_used_in_creation": 3008755,
    "creation_bytecode": "60806040525f60065f6101000a81548160ff021916908315150217905550601c600755602460085560026009556002600a55601e600b556028600c556019600d555f600e556009600a6200005491906200060b565b629896806200006491906200065b565b600f556009600a6200007791906200060b565b629896806200008791906200065b565b6010556009600a6200009a91906200060b565b62989680620000aa91906200065b565b6011556009600a620000bd91906200060b565b62989680620000cd91906200065b565b6012555f601460156101000a81548160ff0219169083151502179055505f601460166101000a81548160ff02191690831515021790555034801562000110575f80fd5b505f620001226200044b60201b60201c565b9050805f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff165f73ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a350620001ce6200044b60201b60201c565b600660016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506009600a6200021e91906200060b565b633b9aca006200022f91906200065b565b60015f620002426200044b60201b60201c565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550600160035f620002946200045260201b60201c565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550600160035f3073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550600160035f600660019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550620003bf6200044b60201b60201c565b73ffffffffffffffffffffffffffffffffffffffff165f73ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef6009600a6200041d91906200060b565b633b9aca006200042e91906200065b565b6040516200043d9190620006b6565b60405180910390a3620006d1565b5f33905090565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f8160011c9050919050565b5f808291508390505b60018511156200050357808604811115620004db57620004da62000479565b5b6001851615620004eb5780820291505b8081029050620004fb85620004a6565b9450620004bb565b94509492505050565b5f826200051d5760019050620005ef565b816200052c575f9050620005ef565b8160018114620005455760028114620005505762000586565b6001915050620005ef565b60ff84111562000565576200056462000479565b5b8360020a9150848211156200057f576200057e62000479565b5b50620005ef565b5060208310610133831016604e8410600b8410161715620005c05782820a905083811115620005ba57620005b962000479565b5b620005ef565b620005cf8484846001620004b2565b92509050818404811115620005e957620005e862000479565b5b81810290505b9392505050565b5f819050919050565b5f60ff82169050919050565b5f6200061782620005f6565b91506200062483620005ff565b9250620006537fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff84846200050c565b905092915050565b5f6200066782620005f6565b91506200067483620005f6565b92508282026200068481620005f6565b915082820484148315176200069e576200069d62000479565b5b5092915050565b620006b081620005f6565b82525050565b5f602082019050620006cb5f830184620006a5565b92915050565b612e7080620006df5f395ff3fe608060405260043610610122575f3560e01c8063751039fc1161009f578063a9059cbb11610063578063a9059cbb146103af578063bf474bed146103eb578063c876d0b914610415578063c9567bf91461043f578063dd62ed3e1461045557610129565b8063751039fc146102f15780637d1db4a5146103075780638da5cb5b146103315780638f9a55c01461035b57806395d89b411461038557610129565b8063313ce567116100e6578063313ce567146102235780633bbac5791461024d57806351bc3c851461028957806370a082311461029f578063715018a6146102db57610129565b806306fdde031461012d578063095ea7b3146101575780630faee56f1461019357806318160ddd146101bd57806323b872dd146101e757610129565b3661012957005b5f80fd5b348015610138575f80fd5b50610141610491565b60405161014e9190612016565b60405180910390f35b348015610162575f80fd5b5061017d600480360381019061017891906120c7565b6104ce565b60405161018a919061211f565b60405180910390f35b34801561019e575f80fd5b506101a76104eb565b6040516101b49190612147565b60405180910390f35b3480156101c8575f80fd5b506101d16104f1565b6040516101de9190612147565b60405180910390f35b3480156101f2575f80fd5b5061020d60048036038101906102089190612160565b610514565b60405161021a919061211f565b60405180910390f35b34801561022e575f80fd5b506102376105e8565b60405161024491906121cb565b60405180910390f35b348015610258575f80fd5b50610273600480360381019061026e91906121e4565b6105f0565b604051610280919061211f565b60405180910390f35b348015610294575f80fd5b5061029d610642565b005b3480156102aa575f80fd5b506102c560048036038101906102c091906121e4565b6106da565b6040516102d29190612147565b60405180910390f35b3480156102e6575f80fd5b506102ef610720565b005b3480156102fc575f80fd5b5061030561086e565b005b348015610312575f80fd5b5061031b6109b6565b6040516103289190612147565b60405180910390f35b34801561033c575f80fd5b506103456109bc565b604051610352919061221e565b60405180910390f35b348015610366575f80fd5b5061036f6109e3565b60405161037c9190612147565b60405180910390f35b348015610390575f80fd5b506103996109e9565b6040516103a69190612016565b60405180910390f35b3480156103ba575f80fd5b506103d560048036038101906103d091906120c7565b610a26565b6040516103e2919061211f565b60405180910390f35b3480156103f6575f80fd5b506103ff610a43565b60405161040c9190612147565b60405180910390f35b348015610420575f80fd5b50610429610a49565b604051610436919061211f565b60405180910390f35b34801561044a575f80fd5b50610453610a5b565b005b348015610460575f80fd5b5061047b60048036038101906104769190612237565b610f7a565b6040516104889190612147565b60405180910390f35b60606040518060400160405280600f81526020017f4d616e696c6c612046696e616e63650000000000000000000000000000000000815250905090565b5f6104e16104da610ffc565b8484611003565b6001905092915050565b60125481565b5f6009600a61050091906123d1565b633b9aca0061050f919061241b565b905090565b5f6105208484846111c6565b6105dd8461052c610ffc565b6105d885604051806060016040528060288152602001612e136028913960025f8b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f61058f610ffc565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054611a5b9092919063ffffffff16565b611003565b600190509392505050565b5f6009905090565b5f60045f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff169050919050565b600660019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610683610ffc565b73ffffffffffffffffffffffffffffffffffffffff16146106a2575f80fd5b5f6106ac306106da565b90505f8111156106c0576106bf81611abd565b5b5f4790505f8111156106d6576106d581611d44565b5b5050565b5f60015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b610728610ffc565b73ffffffffffffffffffffffffffffffffffffffff165f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146107b4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107ab906124a6565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff165f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35f805f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b610876610ffc565b73ffffffffffffffffffffffffffffffffffffffff165f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610902576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108f9906124a6565b60405180910390fd5b6009600a61091091906123d1565b633b9aca0061091f919061241b565b600f819055506009600a61093391906123d1565b633b9aca00610942919061241b565b6010819055505f60065f6101000a81548160ff0219169083151502179055507f947f344d56e1e8c70dc492fb94c4ddddd490c016aab685f5e7e47b2e85cb44cf6009600a61099091906123d1565b633b9aca0061099f919061241b565b6040516109ac9190612147565b60405180910390a1565b600f5481565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60105481565b60606040518060400160405280600481526020017f4d4e4c4100000000000000000000000000000000000000000000000000000000815250905090565b5f610a39610a32610ffc565b84846111c6565b6001905092915050565b60115481565b60065f9054906101000a900460ff1681565b610a63610ffc565b73ffffffffffffffffffffffffffffffffffffffff165f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610aef576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ae6906124a6565b60405180910390fd5b60148054906101000a900460ff1615610b3d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b349061250e565b60405180910390fd5b737a250d5630b4cf539739df2c5dacb4c659f2488d60135f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610bd93060135f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff166009600a610bc591906123d1565b633b9aca00610bd4919061241b565b611003565b60135f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c45a01556040518163ffffffff1660e01b8152600401602060405180830381865afa158015610c43573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610c679190612540565b73ffffffffffffffffffffffffffffffffffffffff1663c9c653963060135f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa158015610ced573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610d119190612540565b6040518363ffffffff1660e01b8152600401610d2e92919061256b565b6020604051808303815f875af1158015610d4a573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610d6e9190612540565b60145f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060135f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f305d7194730610df5306106da565b5f80610dff6109bc565b426040518863ffffffff1660e01b8152600401610e21969594939291906125d4565b60606040518083038185885af1158015610e3d573d5f803e3d5ffd5b50505050506040513d601f19601f82011682018060405250810190610e629190612647565b50505060145f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663095ea7b360135f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff167fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6040518363ffffffff1660e01b8152600401610f02929190612697565b6020604051808303815f875af1158015610f1e573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610f4291906126e8565b506001601460166101000a81548160ff02191690831515021790555060016014806101000a81548160ff021916908315150217905550565b5f60025f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b5f33905090565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611071576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161106890612783565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036110df576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110d690612811565b60405180910390fd5b8060025f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516111b99190612147565b60405180910390a3505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611234576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161122b9061289f565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036112a2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112999061292d565b60405180910390fd5b5f81116112e4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112db906129bb565b60405180910390fd5b5f6112ed6109bc565b73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161415801561135b575061132b6109bc565b73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614155b156117ab5760045f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff161580156113fe575060045f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16155b611406575f80fd5b60145f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480156114af575060135f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614155b8015611502575060035f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16155b156115bc57600f5482111561154c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161154390612a23565b60405180910390fd5b60105482611559856106da565b6115639190612a41565b11156115a4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161159b90612abe565b60405180910390fd5b600e5f8154809291906115b690612adc565b91905055505b6115f860646115ea600b54600e54116115d7576007546115db565b6009545b85611dad90919063ffffffff16565b611e2490919063ffffffff16565b905060145f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614801561168257503073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614155b156116c6576116c360646116b5600c54600e54116116a2576008546116a6565b600a545b85611dad90919063ffffffff16565b611e2490919063ffffffff16565b90505b5f6116d0306106da565b9050601460159054906101000a900460ff1615801561173b575060145f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16145b80156117535750601460169054906101000a900460ff165b8015611760575060115481115b801561176f5750600d54600e54115b156117a95761179161178c8461178784601254611e6d565b611e6d565b611abd565b5f4790505f8111156117a7576117a647611d44565b5b505b505b5f8111156118aa576118038160015f3073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054611e8590919063ffffffff16565b60015f3073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055503073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516118a19190612147565b60405180910390a35b6118fa8260015f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054611ee290919063ffffffff16565b60015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208190555061199d6119518284611ee290919063ffffffff16565b60015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054611e8590919063ffffffff16565b60015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef611a408486611ee290919063ffffffff16565b604051611a4d9190612147565b60405180910390a350505050565b5f838311158290611aa2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a999190612016565b60405180910390fd5b505f8385611ab09190612b23565b9050809150509392505050565b6001601460156101000a81548160ff0219169083151502179055505f810315611d275760148054906101000a900460ff1615611d27575f600267ffffffffffffffff811115611b0f57611b0e612b56565b5b604051908082528060200260200182016040528015611b3d5781602001602082028036833780820191505090505b50905030815f81518110611b5457611b53612b83565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505060135f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa158015611bf8573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611c1c9190612540565b81600181518110611c3057611c2f612b83565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050611c963060135f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1684611003565b60135f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663791ac947835f8430426040518663ffffffff1660e01b8152600401611cf8959493929190612c67565b5f604051808303815f87803b158015611d0f575f80fd5b505af1158015611d21573d5f803e3d5ffd5b50505050505b5f601460156101000a81548160ff02191690831515021790555050565b600660019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc8290811502906040515f60405180830381858888f19350505050158015611da9573d5f803e3d5ffd5b5050565b5f808303611dbd575f9050611e1e565b5f8284611dca919061241b565b9050828482611dd99190612cec565b14611e19576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611e1090612d8c565b60405180910390fd5b809150505b92915050565b5f611e6583836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250611f2b565b905092915050565b5f818311611e7b5782611e7d565b815b905092915050565b5f808284611e939190612a41565b905083811015611ed8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611ecf90612df4565b60405180910390fd5b8091505092915050565b5f611f2383836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250611a5b565b905092915050565b5f8083118290611f71576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611f689190612016565b60405180910390fd5b505f8385611f7f9190612cec565b9050809150509392505050565b5f81519050919050565b5f82825260208201905092915050565b5f5b83811015611fc3578082015181840152602081019050611fa8565b5f8484015250505050565b5f601f19601f8301169050919050565b5f611fe882611f8c565b611ff28185611f96565b9350612002818560208601611fa6565b61200b81611fce565b840191505092915050565b5f6020820190508181035f83015261202e8184611fde565b905092915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6120638261203a565b9050919050565b61207381612059565b811461207d575f80fd5b50565b5f8135905061208e8161206a565b92915050565b5f819050919050565b6120a681612094565b81146120b0575f80fd5b50565b5f813590506120c18161209d565b92915050565b5f80604083850312156120dd576120dc612036565b5b5f6120ea85828601612080565b92505060206120fb858286016120b3565b9150509250929050565b5f8115159050919050565b61211981612105565b82525050565b5f6020820190506121325f830184612110565b92915050565b61214181612094565b82525050565b5f60208201905061215a5f830184612138565b92915050565b5f805f6060848603121561217757612176612036565b5b5f61218486828701612080565b935050602061219586828701612080565b92505060406121a6868287016120b3565b9150509250925092565b5f60ff82169050919050565b6121c5816121b0565b82525050565b5f6020820190506121de5f8301846121bc565b92915050565b5f602082840312156121f9576121f8612036565b5b5f61220684828501612080565b91505092915050565b61221881612059565b82525050565b5f6020820190506122315f83018461220f565b92915050565b5f806040838503121561224d5761224c612036565b5b5f61225a85828601612080565b925050602061226b85828601612080565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f8160011c9050919050565b5f808291508390505b60018511156122f7578086048111156122d3576122d2612275565b5b60018516156122e25780820291505b80810290506122f0856122a2565b94506122b7565b94509492505050565b5f8261230f57600190506123ca565b8161231c575f90506123ca565b8160018114612332576002811461233c5761236b565b60019150506123ca565b60ff84111561234e5761234d612275565b5b8360020a91508482111561236557612364612275565b5b506123ca565b5060208310610133831016604e8410600b84101617156123a05782820a90508381111561239b5761239a612275565b5b6123ca565b6123ad84848460016122ae565b925090508184048111156123c4576123c3612275565b5b81810290505b9392505050565b5f6123db82612094565b91506123e6836121b0565b92506124137fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8484612300565b905092915050565b5f61242582612094565b915061243083612094565b925082820261243e81612094565b9150828204841483151761245557612454612275565b5b5092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65725f82015250565b5f612490602083611f96565b915061249b8261245c565b602082019050919050565b5f6020820190508181035f8301526124bd81612484565b9050919050565b7f54726164696e6720697320616c7265616479206f70656e0000000000000000005f82015250565b5f6124f8601783611f96565b9150612503826124c4565b602082019050919050565b5f6020820190508181035f830152612525816124ec565b9050919050565b5f8151905061253a8161206a565b92915050565b5f6020828403121561255557612554612036565b5b5f6125628482850161252c565b91505092915050565b5f60408201905061257e5f83018561220f565b61258b602083018461220f565b9392505050565b5f819050919050565b5f819050919050565b5f6125be6125b96125b484612592565b61259b565b612094565b9050919050565b6125ce816125a4565b82525050565b5f60c0820190506125e75f83018961220f565b6125f46020830188612138565b61260160408301876125c5565b61260e60608301866125c5565b61261b608083018561220f565b61262860a0830184612138565b979650505050505050565b5f815190506126418161209d565b92915050565b5f805f6060848603121561265e5761265d612036565b5b5f61266b86828701612633565b935050602061267c86828701612633565b925050604061268d86828701612633565b9150509250925092565b5f6040820190506126aa5f83018561220f565b6126b76020830184612138565b9392505050565b6126c781612105565b81146126d1575f80fd5b50565b5f815190506126e2816126be565b92915050565b5f602082840312156126fd576126fc612036565b5b5f61270a848285016126d4565b91505092915050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f206164645f8201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b5f61276d602483611f96565b915061277882612713565b604082019050919050565b5f6020820190508181035f83015261279a81612761565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f2061646472655f8201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b5f6127fb602283611f96565b9150612806826127a1565b604082019050919050565b5f6020820190508181035f830152612828816127ef565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f2061645f8201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b5f612889602583611f96565b91506128948261282f565b604082019050919050565b5f6020820190508181035f8301526128b68161287d565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f20616464725f8201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b5f612917602383611f96565b9150612922826128bd565b604082019050919050565b5f6020820190508181035f8301526129448161290b565b9050919050565b7f5472616e7366657220616d6f756e74206d7573742062652067726561746572205f8201527f7468616e207a65726f0000000000000000000000000000000000000000000000602082015250565b5f6129a5602983611f96565b91506129b08261294b565b604082019050919050565b5f6020820190508181035f8301526129d281612999565b9050919050565b7f4578636565647320746865205f6d61785478416d6f756e742e000000000000005f82015250565b5f612a0d601983611f96565b9150612a18826129d9565b602082019050919050565b5f6020820190508181035f830152612a3a81612a01565b9050919050565b5f612a4b82612094565b9150612a5683612094565b9250828201905080821115612a6e57612a6d612275565b5b92915050565b7f4578636565647320746865206d617857616c6c657453697a652e0000000000005f82015250565b5f612aa8601a83611f96565b9150612ab382612a74565b602082019050919050565b5f6020820190508181035f830152612ad581612a9c565b9050919050565b5f612ae682612094565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203612b1857612b17612275565b5b600182019050919050565b5f612b2d82612094565b9150612b3883612094565b9250828203905081811115612b5057612b4f612275565b5b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b612be281612059565b82525050565b5f612bf38383612bd9565b60208301905092915050565b5f602082019050919050565b5f612c1582612bb0565b612c1f8185612bba565b9350612c2a83612bca565b805f5b83811015612c5a578151612c418882612be8565b9750612c4c83612bff565b925050600181019050612c2d565b5085935050505092915050565b5f60a082019050612c7a5f830188612138565b612c8760208301876125c5565b8181036040830152612c998186612c0b565b9050612ca8606083018561220f565b612cb56080830184612138565b9695505050505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f612cf682612094565b9150612d0183612094565b925082612d1157612d10612cbf565b5b828204905092915050565b7f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f5f8201527f7700000000000000000000000000000000000000000000000000000000000000602082015250565b5f612d76602183611f96565b9150612d8182612d1c565b604082019050919050565b5f6020820190508181035f830152612da381612d6a565b9050919050565b7f536166654d6174683a206164646974696f6e206f766572666c6f7700000000005f82015250565b5f612dde601b83611f96565b9150612de982612daa565b602082019050919050565b5f6020820190508181035f830152612e0b81612dd2565b905091905056fe45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365a26469706673582212201ce0a19668025d591b240c45b2987ea225809ec22af5f497ddc9821eda2c27d664736f6c63430008150033",
    "runtime_bytecode": "608060405260043610610122575f3560e01c8063751039fc1161009f578063a9059cbb11610063578063a9059cbb146103af578063bf474bed146103eb578063c876d0b914610415578063c9567bf91461043f578063dd62ed3e1461045557610129565b8063751039fc146102f15780637d1db4a5146103075780638da5cb5b146103315780638f9a55c01461035b57806395d89b411461038557610129565b8063313ce567116100e6578063313ce567146102235780633bbac5791461024d57806351bc3c851461028957806370a082311461029f578063715018a6146102db57610129565b806306fdde031461012d578063095ea7b3146101575780630faee56f1461019357806318160ddd146101bd57806323b872dd146101e757610129565b3661012957005b5f80fd5b348015610138575f80fd5b50610141610491565b60405161014e9190612016565b60405180910390f35b348015610162575f80fd5b5061017d600480360381019061017891906120c7565b6104ce565b60405161018a919061211f565b60405180910390f35b34801561019e575f80fd5b506101a76104eb565b6040516101b49190612147565b60405180910390f35b3480156101c8575f80fd5b506101d16104f1565b6040516101de9190612147565b60405180910390f35b3480156101f2575f80fd5b5061020d60048036038101906102089190612160565b610514565b60405161021a919061211f565b60405180910390f35b34801561022e575f80fd5b506102376105e8565b60405161024491906121cb565b60405180910390f35b348015610258575f80fd5b50610273600480360381019061026e91906121e4565b6105f0565b604051610280919061211f565b60405180910390f35b348015610294575f80fd5b5061029d610642565b005b3480156102aa575f80fd5b506102c560048036038101906102c091906121e4565b6106da565b6040516102d29190612147565b60405180910390f35b3480156102e6575f80fd5b506102ef610720565b005b3480156102fc575f80fd5b5061030561086e565b005b348015610312575f80fd5b5061031b6109b6565b6040516103289190612147565b60405180910390f35b34801561033c575f80fd5b506103456109bc565b604051610352919061221e565b60405180910390f35b348015610366575f80fd5b5061036f6109e3565b60405161037c9190612147565b60405180910390f35b348015610390575f80fd5b506103996109e9565b6040516103a69190612016565b60405180910390f35b3480156103ba575f80fd5b506103d560048036038101906103d091906120c7565b610a26565b6040516103e2919061211f565b60405180910390f35b3480156103f6575f80fd5b506103ff610a43565b60405161040c9190612147565b60405180910390f35b348015610420575f80fd5b50610429610a49565b604051610436919061211f565b60405180910390f35b34801561044a575f80fd5b50610453610a5b565b005b348015610460575f80fd5b5061047b60048036038101906104769190612237565b610f7a565b6040516104889190612147565b60405180910390f35b60606040518060400160405280600f81526020017f4d616e696c6c612046696e616e63650000000000000000000000000000000000815250905090565b5f6104e16104da610ffc565b8484611003565b6001905092915050565b60125481565b5f6009600a61050091906123d1565b633b9aca0061050f919061241b565b905090565b5f6105208484846111c6565b6105dd8461052c610ffc565b6105d885604051806060016040528060288152602001612e136028913960025f8b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f61058f610ffc565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054611a5b9092919063ffffffff16565b611003565b600190509392505050565b5f6009905090565b5f60045f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff169050919050565b600660019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610683610ffc565b73ffffffffffffffffffffffffffffffffffffffff16146106a2575f80fd5b5f6106ac306106da565b90505f8111156106c0576106bf81611abd565b5b5f4790505f8111156106d6576106d581611d44565b5b5050565b5f60015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b610728610ffc565b73ffffffffffffffffffffffffffffffffffffffff165f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146107b4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107ab906124a6565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff165f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35f805f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b610876610ffc565b73ffffffffffffffffffffffffffffffffffffffff165f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610902576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108f9906124a6565b60405180910390fd5b6009600a61091091906123d1565b633b9aca0061091f919061241b565b600f819055506009600a61093391906123d1565b633b9aca00610942919061241b565b6010819055505f60065f6101000a81548160ff0219169083151502179055507f947f344d56e1e8c70dc492fb94c4ddddd490c016aab685f5e7e47b2e85cb44cf6009600a61099091906123d1565b633b9aca0061099f919061241b565b6040516109ac9190612147565b60405180910390a1565b600f5481565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60105481565b60606040518060400160405280600481526020017f4d4e4c4100000000000000000000000000000000000000000000000000000000815250905090565b5f610a39610a32610ffc565b84846111c6565b6001905092915050565b60115481565b60065f9054906101000a900460ff1681565b610a63610ffc565b73ffffffffffffffffffffffffffffffffffffffff165f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610aef576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ae6906124a6565b60405180910390fd5b60148054906101000a900460ff1615610b3d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b349061250e565b60405180910390fd5b737a250d5630b4cf539739df2c5dacb4c659f2488d60135f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610bd93060135f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff166009600a610bc591906123d1565b633b9aca00610bd4919061241b565b611003565b60135f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c45a01556040518163ffffffff1660e01b8152600401602060405180830381865afa158015610c43573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610c679190612540565b73ffffffffffffffffffffffffffffffffffffffff1663c9c653963060135f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa158015610ced573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610d119190612540565b6040518363ffffffff1660e01b8152600401610d2e92919061256b565b6020604051808303815f875af1158015610d4a573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610d6e9190612540565b60145f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060135f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f305d7194730610df5306106da565b5f80610dff6109bc565b426040518863ffffffff1660e01b8152600401610e21969594939291906125d4565b60606040518083038185885af1158015610e3d573d5f803e3d5ffd5b50505050506040513d601f19601f82011682018060405250810190610e629190612647565b50505060145f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663095ea7b360135f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff167fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6040518363ffffffff1660e01b8152600401610f02929190612697565b6020604051808303815f875af1158015610f1e573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610f4291906126e8565b506001601460166101000a81548160ff02191690831515021790555060016014806101000a81548160ff021916908315150217905550565b5f60025f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b5f33905090565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611071576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161106890612783565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036110df576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110d690612811565b60405180910390fd5b8060025f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516111b99190612147565b60405180910390a3505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611234576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161122b9061289f565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036112a2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112999061292d565b60405180910390fd5b5f81116112e4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112db906129bb565b60405180910390fd5b5f6112ed6109bc565b73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161415801561135b575061132b6109bc565b73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614155b156117ab5760045f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff161580156113fe575060045f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16155b611406575f80fd5b60145f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480156114af575060135f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614155b8015611502575060035f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16155b156115bc57600f5482111561154c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161154390612a23565b60405180910390fd5b60105482611559856106da565b6115639190612a41565b11156115a4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161159b90612abe565b60405180910390fd5b600e5f8154809291906115b690612adc565b91905055505b6115f860646115ea600b54600e54116115d7576007546115db565b6009545b85611dad90919063ffffffff16565b611e2490919063ffffffff16565b905060145f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614801561168257503073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614155b156116c6576116c360646116b5600c54600e54116116a2576008546116a6565b600a545b85611dad90919063ffffffff16565b611e2490919063ffffffff16565b90505b5f6116d0306106da565b9050601460159054906101000a900460ff1615801561173b575060145f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16145b80156117535750601460169054906101000a900460ff165b8015611760575060115481115b801561176f5750600d54600e54115b156117a95761179161178c8461178784601254611e6d565b611e6d565b611abd565b5f4790505f8111156117a7576117a647611d44565b5b505b505b5f8111156118aa576118038160015f3073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054611e8590919063ffffffff16565b60015f3073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055503073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516118a19190612147565b60405180910390a35b6118fa8260015f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054611ee290919063ffffffff16565b60015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208190555061199d6119518284611ee290919063ffffffff16565b60015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054611e8590919063ffffffff16565b60015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef611a408486611ee290919063ffffffff16565b604051611a4d9190612147565b60405180910390a350505050565b5f838311158290611aa2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a999190612016565b60405180910390fd5b505f8385611ab09190612b23565b9050809150509392505050565b6001601460156101000a81548160ff0219169083151502179055505f810315611d275760148054906101000a900460ff1615611d27575f600267ffffffffffffffff811115611b0f57611b0e612b56565b5b604051908082528060200260200182016040528015611b3d5781602001602082028036833780820191505090505b50905030815f81518110611b5457611b53612b83565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505060135f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa158015611bf8573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611c1c9190612540565b81600181518110611c3057611c2f612b83565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050611c963060135f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1684611003565b60135f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663791ac947835f8430426040518663ffffffff1660e01b8152600401611cf8959493929190612c67565b5f604051808303815f87803b158015611d0f575f80fd5b505af1158015611d21573d5f803e3d5ffd5b50505050505b5f601460156101000a81548160ff02191690831515021790555050565b600660019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc8290811502906040515f60405180830381858888f19350505050158015611da9573d5f803e3d5ffd5b5050565b5f808303611dbd575f9050611e1e565b5f8284611dca919061241b565b9050828482611dd99190612cec565b14611e19576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611e1090612d8c565b60405180910390fd5b809150505b92915050565b5f611e6583836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250611f2b565b905092915050565b5f818311611e7b5782611e7d565b815b905092915050565b5f808284611e939190612a41565b905083811015611ed8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611ecf90612df4565b60405180910390fd5b8091505092915050565b5f611f2383836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250611a5b565b905092915050565b5f8083118290611f71576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611f689190612016565b60405180910390fd5b505f8385611f7f9190612cec565b9050809150509392505050565b5f81519050919050565b5f82825260208201905092915050565b5f5b83811015611fc3578082015181840152602081019050611fa8565b5f8484015250505050565b5f601f19601f8301169050919050565b5f611fe882611f8c565b611ff28185611f96565b9350612002818560208601611fa6565b61200b81611fce565b840191505092915050565b5f6020820190508181035f83015261202e8184611fde565b905092915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6120638261203a565b9050919050565b61207381612059565b811461207d575f80fd5b50565b5f8135905061208e8161206a565b92915050565b5f819050919050565b6120a681612094565b81146120b0575f80fd5b50565b5f813590506120c18161209d565b92915050565b5f80604083850312156120dd576120dc612036565b5b5f6120ea85828601612080565b92505060206120fb858286016120b3565b9150509250929050565b5f8115159050919050565b61211981612105565b82525050565b5f6020820190506121325f830184612110565b92915050565b61214181612094565b82525050565b5f60208201905061215a5f830184612138565b92915050565b5f805f6060848603121561217757612176612036565b5b5f61218486828701612080565b935050602061219586828701612080565b92505060406121a6868287016120b3565b9150509250925092565b5f60ff82169050919050565b6121c5816121b0565b82525050565b5f6020820190506121de5f8301846121bc565b92915050565b5f602082840312156121f9576121f8612036565b5b5f61220684828501612080565b91505092915050565b61221881612059565b82525050565b5f6020820190506122315f83018461220f565b92915050565b5f806040838503121561224d5761224c612036565b5b5f61225a85828601612080565b925050602061226b85828601612080565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f8160011c9050919050565b5f808291508390505b60018511156122f7578086048111156122d3576122d2612275565b5b60018516156122e25780820291505b80810290506122f0856122a2565b94506122b7565b94509492505050565b5f8261230f57600190506123ca565b8161231c575f90506123ca565b8160018114612332576002811461233c5761236b565b60019150506123ca565b60ff84111561234e5761234d612275565b5b8360020a91508482111561236557612364612275565b5b506123ca565b5060208310610133831016604e8410600b84101617156123a05782820a90508381111561239b5761239a612275565b5b6123ca565b6123ad84848460016122ae565b925090508184048111156123c4576123c3612275565b5b81810290505b9392505050565b5f6123db82612094565b91506123e6836121b0565b92506124137fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8484612300565b905092915050565b5f61242582612094565b915061243083612094565b925082820261243e81612094565b9150828204841483151761245557612454612275565b5b5092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65725f82015250565b5f612490602083611f96565b915061249b8261245c565b602082019050919050565b5f6020820190508181035f8301526124bd81612484565b9050919050565b7f54726164696e6720697320616c7265616479206f70656e0000000000000000005f82015250565b5f6124f8601783611f96565b9150612503826124c4565b602082019050919050565b5f6020820190508181035f830152612525816124ec565b9050919050565b5f8151905061253a8161206a565b92915050565b5f6020828403121561255557612554612036565b5b5f6125628482850161252c565b91505092915050565b5f60408201905061257e5f83018561220f565b61258b602083018461220f565b9392505050565b5f819050919050565b5f819050919050565b5f6125be6125b96125b484612592565b61259b565b612094565b9050919050565b6125ce816125a4565b82525050565b5f60c0820190506125e75f83018961220f565b6125f46020830188612138565b61260160408301876125c5565b61260e60608301866125c5565b61261b608083018561220f565b61262860a0830184612138565b979650505050505050565b5f815190506126418161209d565b92915050565b5f805f6060848603121561265e5761265d612036565b5b5f61266b86828701612633565b935050602061267c86828701612633565b925050604061268d86828701612633565b9150509250925092565b5f6040820190506126aa5f83018561220f565b6126b76020830184612138565b9392505050565b6126c781612105565b81146126d1575f80fd5b50565b5f815190506126e2816126be565b92915050565b5f602082840312156126fd576126fc612036565b5b5f61270a848285016126d4565b91505092915050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f206164645f8201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b5f61276d602483611f96565b915061277882612713565b604082019050919050565b5f6020820190508181035f83015261279a81612761565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f2061646472655f8201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b5f6127fb602283611f96565b9150612806826127a1565b604082019050919050565b5f6020820190508181035f830152612828816127ef565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f2061645f8201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b5f612889602583611f96565b91506128948261282f565b604082019050919050565b5f6020820190508181035f8301526128b68161287d565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f20616464725f8201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b5f612917602383611f96565b9150612922826128bd565b604082019050919050565b5f6020820190508181035f8301526129448161290b565b9050919050565b7f5472616e7366657220616d6f756e74206d7573742062652067726561746572205f8201527f7468616e207a65726f0000000000000000000000000000000000000000000000602082015250565b5f6129a5602983611f96565b91506129b08261294b565b604082019050919050565b5f6020820190508181035f8301526129d281612999565b9050919050565b7f4578636565647320746865205f6d61785478416d6f756e742e000000000000005f82015250565b5f612a0d601983611f96565b9150612a18826129d9565b602082019050919050565b5f6020820190508181035f830152612a3a81612a01565b9050919050565b5f612a4b82612094565b9150612a5683612094565b9250828201905080821115612a6e57612a6d612275565b5b92915050565b7f4578636565647320746865206d617857616c6c657453697a652e0000000000005f82015250565b5f612aa8601a83611f96565b9150612ab382612a74565b602082019050919050565b5f6020820190508181035f830152612ad581612a9c565b9050919050565b5f612ae682612094565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203612b1857612b17612275565b5b600182019050919050565b5f612b2d82612094565b9150612b3883612094565b9250828203905081811115612b5057612b4f612275565b5b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b612be281612059565b82525050565b5f612bf38383612bd9565b60208301905092915050565b5f602082019050919050565b5f612c1582612bb0565b612c1f8185612bba565b9350612c2a83612bca565b805f5b83811015612c5a578151612c418882612be8565b9750612c4c83612bff565b925050600181019050612c2d565b5085935050505092915050565b5f60a082019050612c7a5f830188612138565b612c8760208301876125c5565b8181036040830152612c998186612c0b565b9050612ca8606083018561220f565b612cb56080830184612138565b9695505050505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f612cf682612094565b9150612d0183612094565b925082612d1157612d10612cbf565b5b828204905092915050565b7f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f5f8201527f7700000000000000000000000000000000000000000000000000000000000000602082015250565b5f612d76602183611f96565b9150612d8182612d1c565b604082019050919050565b5f6020820190508181035f830152612da381612d6a565b9050919050565b7f536166654d6174683a206164646974696f6e206f766572666c6f7700000000005f82015250565b5f612dde601b83611f96565b9150612de982612daa565b602082019050919050565b5f6020820190508181035f830152612e0b81612dd2565b905091905056fe45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365a26469706673582212201ce0a19668025d591b240c45b2987ea225809ec22af5f497ddc9821eda2c27d664736f6c63430008150033",
    "contract_name": "Manilla",
    "compiler_version": "v0.8.21+commit.d9974bed",
    "optimization_used": "0",
    "runs": "200",
    "abi": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_maxTxAmount\",\"type\":\"uint256\"}],\"name\":\"MaxTxAmountUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"_maxTaxSwap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_maxTxAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_maxWalletSize\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_taxSwapThreshold\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"a\",\"type\":\"address\"}],\"name\":\"isBot\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"manualSwap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"openTrading\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"removeLimits\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"transferDelayEnabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]",
    "source_code": "{{\r\n  \"language\": \"Solidity\",\r\n  \"sources\": {\r\n    \"contracts/Manilla.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\n\\n/**\\n\\nManilla Finance - $MNLA\\n\\nWebsite: https://manilla.finance/\\nTelegram: https://t.me/manilla_finance\\nTwitter: https://twitter.com/manilla_finance\\n\\n**/\\n\\npragma solidity 0.8.21;\\n\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n}\\n\\ninterface IERC20 {\\n    function totalSupply() external view returns (uint256);\\n    function balanceOf(address account) external view returns (uint256);\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n    function allowance(address owner, address spender) external view returns (uint256);\\n    function approve(address spender, uint256 amount) external returns (bool);\\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\\nlibrary SafeMath {\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        uint256 c = a + b;\\n        require(c >= a, \\\"SafeMath: addition overflow\\\");\\n        return c;\\n    }\\n\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return sub(a, b, \\\"SafeMath: subtraction overflow\\\");\\n    }\\n\\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b <= a, errorMessage);\\n        uint256 c = a - b;\\n        return c;\\n    }\\n\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n        uint256 c = a * b;\\n        require(c / a == b, \\\"SafeMath: multiplication overflow\\\");\\n        return c;\\n    }\\n\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return div(a, b, \\\"SafeMath: division by zero\\\");\\n    }\\n\\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b > 0, errorMessage);\\n        uint256 c = a / b;\\n        return c;\\n    }\\n\\n}\\n\\ncontract Ownable is Context {\\n    address private _owner;\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    constructor () {\\n        address msgSender = _msgSender();\\n        _owner = msgSender;\\n        emit OwnershipTransferred(address(0), msgSender);\\n    }\\n\\n    function owner() public view returns (address) {\\n        return _owner;\\n    }\\n\\n    modifier onlyOwner() {\\n        require(_owner == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    function renounceOwnership() public virtual onlyOwner {\\n        emit OwnershipTransferred(_owner, address(0));\\n        _owner = address(0);\\n    }\\n\\n}\\n\\ninterface IUniswapV2Factory {\\n    function createPair(address tokenA, address tokenB) external returns (address pair);\\n}\\n\\ninterface IUniswapV2Router02 {\\n    function swapExactTokensForETHSupportingFeeOnTransferTokens(\\n        uint amountIn,\\n        uint amountOutMin,\\n        address[] calldata path,\\n        address to,\\n        uint deadline\\n    ) external;\\n    function factory() external pure returns (address);\\n    function WETH() external pure returns (address);\\n    function addLiquidityETH(\\n        address token,\\n        uint amountTokenDesired,\\n        uint amountTokenMin,\\n        uint amountETHMin,\\n        address to,\\n        uint deadline\\n    ) external payable returns (uint amountToken, uint amountETH, uint liquidity);\\n}\\n\\ncontract Manilla is Context, IERC20, Ownable {\\n    using SafeMath for uint256;\\n    mapping (address => uint256) private _balances;\\n    mapping (address => mapping (address => uint256)) private _allowances;\\n    mapping (address => bool) private _isExcludedFromFee;\\n    mapping (address => bool) private bots;\\n    mapping(address => uint256) private _holderLastTransferTimestamp;\\n    bool public transferDelayEnabled = false;\\n    address payable private _taxWallet;\\n\\n    uint256 private _initialBuyTax=28;\\n    uint256 private _initialSellTax=36;\\n    uint256 private _finalBuyTax=2;\\n    uint256 private _finalSellTax=2;\\n    uint256 private _reduceBuyTaxAt=30;\\n    uint256 private _reduceSellTaxAt=40;\\n    uint256 private _preventSwapBefore=25;\\n    uint256 private _buyCount=0;\\n\\n    uint8 private constant _decimals = 9;\\n    uint256 private constant _tTotal = 1000000000 * 10**_decimals;\\n    string private constant _name = unicode\\\"Manilla Finance\\\";\\n    string private constant _symbol = unicode\\\"MNLA\\\";\\n    uint256 public _maxTxAmount = 10000000 * 10**_decimals;\\n    uint256 public _maxWalletSize = 10000000 * 10**_decimals;\\n    uint256 public _taxSwapThreshold= 10000000 * 10**_decimals;\\n    uint256 public _maxTaxSwap= 10000000 * 10**_decimals;\\n\\n    IUniswapV2Router02 private uniswapV2Router;\\n    address private uniswapV2Pair;\\n    bool private tradingOpen;\\n    bool private inSwap = false;\\n    bool private swapEnabled = false;\\n\\n    event MaxTxAmountUpdated(uint _maxTxAmount);\\n    modifier lockTheSwap {\\n        inSwap = true;\\n        _;\\n        inSwap = false;\\n    }\\n\\n    constructor () {\\n        _taxWallet = payable(_msgSender());\\n        _balances[_msgSender()] = _tTotal;\\n        _isExcludedFromFee[owner()] = true;\\n        _isExcludedFromFee[address(this)] = true;\\n        _isExcludedFromFee[_taxWallet] = true;\\n\\n        emit Transfer(address(0), _msgSender(), _tTotal);\\n    }\\n\\n    function name() public pure returns (string memory) {\\n        return _name;\\n    }\\n\\n    function symbol() public pure returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    function decimals() public pure returns (uint8) {\\n        return _decimals;\\n    }\\n\\n    function totalSupply() public pure override returns (uint256) {\\n        return _tTotal;\\n    }\\n\\n    function balanceOf(address account) public view override returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    function transfer(address recipient, uint256 amount) public override returns (bool) {\\n        _transfer(_msgSender(), recipient, amount);\\n        return true;\\n    }\\n\\n    function allowance(address owner, address spender) public view override returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    function approve(address spender, uint256 amount) public override returns (bool) {\\n        _approve(_msgSender(), spender, amount);\\n        return true;\\n    }\\n\\n    function transferFrom(address sender, address recipient, uint256 amount) public override returns (bool) {\\n        _transfer(sender, recipient, amount);\\n        _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \\\"ERC20: transfer amount exceeds allowance\\\"));\\n        return true;\\n    }\\n\\n    function _approve(address owner, address spender, uint256 amount) private {\\n        require(owner != address(0), \\\"ERC20: approve from the zero address\\\");\\n        require(spender != address(0), \\\"ERC20: approve to the zero address\\\");\\n        _allowances[owner][spender] = amount;\\n        emit Approval(owner, spender, amount);\\n    }\\n\\n    function _transfer(address from, address to, uint256 amount) private {\\n        require(from != address(0), \\\"ERC20: transfer from the zero address\\\");\\n        require(to != address(0), \\\"ERC20: transfer to the zero address\\\");\\n        require(amount > 0, \\\"Transfer amount must be greater than zero\\\");\\n        uint256 taxAmount = 0;\\n        if (from != owner() && to != owner()) {\\n            require(!bots[from] && !bots[to]);\\n\\n            if (from == uniswapV2Pair && to != address(uniswapV2Router) && ! _isExcludedFromFee[to] ) {\\n                require(amount <= _maxTxAmount, \\\"Exceeds the _maxTxAmount.\\\");\\n                require(balanceOf(to) + amount <= _maxWalletSize, \\\"Exceeds the maxWalletSize.\\\");\\n                _buyCount++;\\n            }\\n\\n            taxAmount = amount.mul((_buyCount > _reduceBuyTaxAt) ? _finalBuyTax : _initialBuyTax).div(100);\\n            if(to == uniswapV2Pair && from != address(this) ) {\\n                taxAmount = amount.mul((_buyCount > _reduceSellTaxAt) ? _finalSellTax : _initialSellTax).div(100);\\n            }\\n\\n            uint256 contractTokenBalance = balanceOf(address(this));\\n            if (!inSwap && to == uniswapV2Pair && swapEnabled && contractTokenBalance > _taxSwapThreshold && _buyCount > _preventSwapBefore) {\\n                swapTokensForEth(min(amount, min(contractTokenBalance, _maxTaxSwap)));\\n                uint256 contractETHBalance = address(this).balance;\\n                if(contractETHBalance > 0) {\\n                    sendETHToFee(address(this).balance);\\n                }\\n            }\\n        }\\n\\n        if(taxAmount > 0) {\\n          _balances[address(this)] = _balances[address(this)].add(taxAmount);\\n          emit Transfer(from, address(this), taxAmount);\\n        }\\n\\n        _balances[from] = _balances[from].sub(amount);\\n        _balances[to] = _balances[to].add(amount.sub(taxAmount));\\n        emit Transfer(from, to, amount.sub(taxAmount));\\n    }\\n\\n\\n    function min(uint256 a, uint256 b) private pure returns (uint256) {\\n      return (a > b) ? b : a;\\n    }\\n\\n    function swapTokensForEth(uint256 tokenAmount) private lockTheSwap {\\n        if(tokenAmount == 0) { return; }\\n        if(!tradingOpen) { return; }\\n        address[] memory path = new address[](2);\\n        path[0] = address(this);\\n        path[1] = uniswapV2Router.WETH();\\n        _approve(address(this), address(uniswapV2Router), tokenAmount);\\n        uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(\\n            tokenAmount,\\n            0,\\n            path,\\n            address(this),\\n            block.timestamp\\n        );\\n    }\\n\\n    function removeLimits() external onlyOwner {\\n        _maxTxAmount = _tTotal;\\n        _maxWalletSize = _tTotal;\\n        transferDelayEnabled = false;\\n        emit MaxTxAmountUpdated(_tTotal);\\n    }\\n\\n    function sendETHToFee(uint256 amount) private {\\n        _taxWallet.transfer(amount);\\n    }\\n\\n    function isBot(address a) public view returns (bool) {\\n      return bots[a];\\n    }\\n\\n    function openTrading() external onlyOwner() {\\n        require(!tradingOpen, \\\"Trading is already open\\\");\\n        uniswapV2Router = IUniswapV2Router02(0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D);\\n        _approve(address(this), address(uniswapV2Router), _tTotal);\\n        uniswapV2Pair = IUniswapV2Factory(uniswapV2Router.factory()).createPair(address(this), uniswapV2Router.WETH());\\n        uniswapV2Router.addLiquidityETH{value: address(this).balance}(address(this), balanceOf(address(this)), 0, 0, owner(), block.timestamp);\\n        IERC20(uniswapV2Pair).approve(address(uniswapV2Router), type(uint).max);\\n        swapEnabled = true;\\n        tradingOpen = true;\\n    }\\n\\n    receive() external payable {}\\n\\n    function manualSwap() external {\\n        require(_msgSender() == _taxWallet);\\n        uint256 tokenBalance = balanceOf(address(this));\\n\\n        if(tokenBalance > 0){\\n          swapTokensForEth(tokenBalance);\\n        }\\n\\n        uint256 ethBalance = address(this).balance;\\n\\n        if(ethBalance > 0){\\n          sendETHToFee(ethBalance);\\n        }\\n    }\\n}\"\r\n    }\r\n  },\r\n  \"settings\": {\r\n    \"optimizer\": {\r\n      \"enabled\": false,\r\n      \"runs\": 200\r\n    },\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"devdoc\",\r\n          \"userdoc\",\r\n          \"metadata\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    },\r\n    \"libraries\": {}\r\n  }\r\n}}",
    "etherscan_verified": true
}