{
    "address": "0xf06ea21cB6894CC70e2EF280026D5Fc5bEE15421",
    "tx_hash": "14fc950371aa2b4e1df40f651018d43898e09795d3c4c60a0806d47572127c21",
    "block_number": 18002912,
    "timestamp": 1693101983,
    "gas_used_in_creation": 1765996,
    "creation_bytecode": "6080604052670de0b6b3a7640000600e5562015180600f5534801561002357600080fd5b50604051611dc6380380611dc683398101604081905261004291610112565b600080546001600160a01b03191633178082556040516001600160a01b039190911691907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a3600180546001600160a01b0319166001600160a01b039290921691909117905560026020526804d31f847531c400007f20de3dd312970f46a1d560f6c70f0e5bd10e638b9bb3836368f28838c607ea3e55601e600052680cf4ca91b9465c00007f6ea47ca2f9e3a67b0e336c514aa9f125109f49309b7162caec32e7d27e5c838c55610140565b600060208284031215610123578081fd5b81516001600160a01b0381168114610139578182fd5b9392505050565b611c778061014f6000396000f3fe608060405234801561001057600080fd5b50600436106101da5760003560e01c806391dc842e11610104578063c5b79288116100a2578063f2fde38b11610071578063f2fde38b1461039b578063f9266919146103ae578063fc938b6d146103b6578063fd5e6dd1146103cb576101da565b8063c5b7928814610365578063cb6d8ee614610378578063d11aca6214610380578063e01c93b914610388576101da565b8063a71038cb116100de578063a71038cb1461033a578063af78feef1461034d578063c061b41a14610355578063c24126761461035d576101da565b806391dc842e146102f957806399b956a01461030c578063a5879de314610332576101da565b80635d14b06f1161017c578063762c12741161014b578063762c1274146102b65780637b80b13e146102be578063850bad94146102d15780638da5cb5b146102e4576101da565b80635d14b06f14610275578063636bfbab1461028857806366829b16146102905780636b792c4b146102a3576101da565b80632ccff7ef116101b85780632ccff7ef1461021a5780633023f05c1461022d57806331d7a2621461024f5780635312ea8e14610262576101da565b8063140773bf146101df57806316ada547146101f457806328696de214610212575b600080fd5b6101f26101ed3660046118b6565b6103de565b005b6101fc610416565b6040516102099190611b25565b60405180910390f35b6101f261041c565b6101f26102283660046118ce565b610452565b61024061023b366004611795565b6104cf565b6040516102099392919061197a565b6101fc61025d366004611795565b6105fd565b6101f26102703660046118b6565b6107cf565b6101f26102833660046117dc565b610881565b6101fc6111af565b6101f261029e366004611795565b6111b5565b6101f26102b13660046118b6565b611201565b6101fc611258565b6101fc6102cc3660046117b1565b61125e565b6101fc6102df3660046118b6565b61128f565b6102ec6112a1565b6040516102099190611929565b6101fc6103073660046117b1565b6112b0565b61031f61031a366004611795565b6112cc565b6040516102099796959493929190611b44565b6101fc61130e565b6101f26103483660046118ce565b611314565b6101fc611593565b6101fc611599565b6102ec61159f565b6101f26103733660046118b6565b6115ae565b6101fc6115dd565b6101f26115e3565b6101fc6103963660046117b1565b61161c565b6101f26103a9366004611795565b611638565b6101fc6116e3565b6103be6116e9565b60405161020991906119bd565b6102ec6103d93660046118b6565b6116f2565b6000546001600160a01b031633146104115760405162461bcd60e51b815260040161040890611a5e565b60405180910390fd5b600e55565b600f5481565b6000546001600160a01b031633146104465760405162461bcd60e51b815260040161040890611a5e565b600d805460ff19169055565b6000546001600160a01b0316331461047c5760405162461bcd60e51b815260040161040890611a5e565b60026020527f20de3dd312970f46a1d560f6c70f0e5bd10e638b9bb3836368f28838c607ea3e91909155601e6000527f6ea47ca2f9e3a67b0e336c514aa9f125109f49309b7162caec32e7d27e5c838c55565b6001600160a01b0381166000908152600360209081526040808320600483528184206005845293829020815483518186028101860190945280845260609586958695919392859183018282801561054557602002820191906000526020600020905b815481526020019060010190808311610531575b505050505092508180548060200260200160405190810160405280929190818152602001828054801561059757602002820191906000526020600020905b815481526020019060010190808311610583575b50505050509150808054806020026020016040519081016040528092919081815260200182805480156105e957602002820191906000526020600020905b8154815260200190600101908083116105d5575b505050505090509250925092509193909250565b60008060005b6001600160a01b0384166000908152600360205260409020548110156107c857600f546001600160a01b038516600090815260046020526040812080549192918490811061066157634e487b7160e01b600052603260045260246000fd5b90600052602060002001546106769190611bac565b6001600160a01b03861660009081526005602052604090208054849081106106ae57634e487b7160e01b600052603260045260246000fd5b90600052602060002001546106c39190611b74565b9050804211156107b5576107a6670de0b6b3a76400006107a060646107a0600360008b6001600160a01b03166001600160a01b03168152602001908152602001600020878154811061072557634e487b7160e01b600052603260045260246000fd5b906000526020600020015460026000600460008e6001600160a01b03166001600160a01b031681526020019081526020016000208a8154811061077857634e487b7160e01b600052603260045260246000fd5b906000526020600020015481526020019081526020016000205461171c90919063ffffffff16565b90611757565b93506107b28484611b74565b92505b50806107c081611be2565b915050610603565b5092915050565b6000546001600160a01b031633146107f95760405162461bcd60e51b815260040161040890611a5e565b60015460405163a9059cbb60e01b81526001600160a01b039091169063a9059cbb9061082b9033908590600401611961565b602060405180830381600087803b15801561084557600080fd5b505af1158015610859573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061087d9190611896565b5050565b60005b8151811015610d6057336000908152600660205260409020546108b95760405162461bcd60e51b815260040161040890611a36565b6000610945600f5460046000336001600160a01b03166001600160a01b0316815260200190815260200160002085858151811061090657634e487b7160e01b600052603260045260246000fd5b60200260200101518154811061092c57634e487b7160e01b600052603260045260246000fd5b906000526020600020015461171c90919063ffffffff16565b336000908152600560205260409020845185908590811061097657634e487b7160e01b600052603260045260246000fd5b60200260200101518154811061099c57634e487b7160e01b600052603260045260246000fd5b90600052602060002001546109b19190611b74565b90508042116109d25760405162461bcd60e51b815260040161040890611aee565b6000610acd670de0b6b3a76400006107a060646107a060036000336001600160a01b03166001600160a01b03168152602001908152602001600020898981518110610a2d57634e487b7160e01b600052603260045260246000fd5b602002602001015181548110610a5357634e487b7160e01b600052603260045260246000fd5b90600052602060002001546002600060046000336001600160a01b03166001600160a01b031681526020019081526020016000208c8c81518110610aa757634e487b7160e01b600052603260045260246000fd5b60200260200101518154811061077857634e487b7160e01b600052603260045260246000fd5b33600090815260066020526040812060040180549293508392909190610af4908490611b74565b90915550503360009081526003602052604090208451859085908110610b2a57634e487b7160e01b600052603260045260246000fd5b602002602001015181548110610b5057634e487b7160e01b600052603260045260246000fd5b6000918252602080832090910154338352600690915260408220805491929091610b7b908490611bcb565b90915550503360009081526003602052604090208451859085908110610bb157634e487b7160e01b600052603260045260246000fd5b602002602001015181548110610bd757634e487b7160e01b600052603260045260246000fd5b906000526020600020015460066000336001600160a01b03166001600160a01b031681526020019081526020016000206006016000828254610c199190611b74565b90915550503360009081526003602052604081208551869086908110610c4f57634e487b7160e01b600052603260045260246000fd5b602002602001015181548110610c7557634e487b7160e01b600052603260045260246000fd5b60009182526020808320909101929092553381526004909152604081208551869086908110610cb457634e487b7160e01b600052603260045260246000fd5b602002602001015181548110610cda57634e487b7160e01b600052603260045260246000fd5b60009182526020808320909101929092553381526005909152604081208551869086908110610d1957634e487b7160e01b600052603260045260246000fd5b602002602001015181548110610d3f57634e487b7160e01b600052603260045260246000fd5b60009182526020909120015550819050610d5881611be2565b915050610884565b5060005b815181101561102c576000828281518110610d8f57634e487b7160e01b600052603260045260246000fd5b602002602001015190505b33600090815260036020526040902054610db690600190611bcb565b811015610f5057336000908152600360205260409020610dd7826001611b74565b81548110610df557634e487b7160e01b600052603260045260246000fd5b600091825260208083209091015433835260039091526040909120805483908110610e3057634e487b7160e01b600052603260045260246000fd5b6000918252602080832090910192909255338152600490915260409020610e58826001611b74565b81548110610e7657634e487b7160e01b600052603260045260246000fd5b600091825260208083209091015433835260049091526040909120805483908110610eb157634e487b7160e01b600052603260045260246000fd5b6000918252602080832090910192909255338152600590915260409020610ed9826001611b74565b81548110610ef757634e487b7160e01b600052603260045260246000fd5b600091825260208083209091015433835260059091526040909120805483908110610f3257634e487b7160e01b600052603260045260246000fd5b60009182526020909120015580610f4881611be2565b915050610d9a565b50336000908152600360205260409020805480610f7d57634e487b7160e01b600052603160045260246000fd5b6000828152602080822083016000199081018390559092019092553382526004905260409020805480610fc057634e487b7160e01b600052603160045260246000fd5b600082815260208082208301600019908101839055909201909255338252600590526040902080548061100357634e487b7160e01b600052603160045260246000fd5b60019003818190600052602060002001600090559055808061102490611be2565b915050610d64565b503360009081526006602081905260408220600481015491015461104f91611779565b33600090815260066020526040812060040154600980549394509092909190611079908490611b74565b9250508190555080600b60008282546110929190611b74565b909155505033600090815260066020526040902060040154600c546110b79190611bcb565b600c553360009081526006602081905260409091200154600a546110db9190611bcb565b600a5560015460405163a9059cbb60e01b81526001600160a01b039091169063a9059cbb906111109033908590600401611961565b602060405180830381600087803b15801561112a57600080fd5b505af115801561113e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111629190611896565b50336000908152600660205260409020600481015460039091015461118691611779565b336000908152600660208190526040822060038101939093556004830182905591909101555050565b600e5481565b6000546001600160a01b031633146111df5760405162461bcd60e51b815260040161040890611a5e565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b0316331461122b5760405162461bcd60e51b815260040161040890611a5e565b604051339082156108fc029083906000818181858888f1935050505015801561087d573d6000803e3d6000fd5b600c5481565b6005602052816000526040600020818154811061127a57600080fd5b90600052602060002001600091509150505481565b60026020526000908152604090205481565b6000546001600160a01b031690565b6003602052816000526040600020818154811061127a57600080fd5b60066020528060005260406000206000915090508060000154908060010154908060020154908060030154908060040154908060050154908060060154905087565b60075490565b600d5460ff16151560011461133b5760405162461bcd60e51b815260040161040890611ac2565b600e5482101561135d5760405162461bcd60e51b815260040161040890611a0e565b6000818152600260205260409020546113885760405162461bcd60e51b815260040161040890611a93565b6001546040516323b872dd60e01b81526001600160a01b03909116906323b872dd906113bc9033903090879060040161193d565b602060405180830381600087803b1580156113d657600080fd5b505af11580156113ea573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061140e9190611896565b50336000818152600360209081526040808320805460018181018355918552838520018790558484526005835281842080549182018155845282842064ffffffffff421691015592825260069052908120805484929061146f908490611b74565b9091555050336000818152600460209081526040822080546001818101835591845291832090910184905560078054918201815582527fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c6880180546001600160a01b031916909217909155600880548492906114eb908490611b74565b9250508190555081600a60008282546115049190611b74565b909155505060008181526002602052604081205461153590670de0b6b3a7640000906107a09060649082908861171c565b905080600c60008282546115499190611b74565b9091555050604051309033907fe44628ed4b392c5ef46ffc833d640eefd957e81a312e583e0cc57eed5f04ada39061158690879087904290611b2e565b60405180910390a3505050565b600b5481565b600a5481565b6001546001600160a01b031681565b6000546001600160a01b031633146115d85760405162461bcd60e51b815260040161040890611a5e565b600f55565b60085481565b6000546001600160a01b0316331461160d5760405162461bcd60e51b815260040161040890611a5e565b600d805460ff19166001179055565b6004602052816000526040600020818154811061127a57600080fd5b6000546001600160a01b031633146116625760405162461bcd60e51b815260040161040890611a5e565b6001600160a01b0381166116885760405162461bcd60e51b8152600401610408906119c8565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b60095481565b600d5460ff1681565b6007818154811061170257600080fd5b6000918252602090912001546001600160a01b0316905081565b60008261172b57506000611751565b60006117378385611bac565b9050826117448583611b8c565b1461174e57600080fd5b90505b92915050565b600080821161176557600080fd5b60006117718385611b8c565b949350505050565b6000806117868385611b74565b90508381101561174e57600080fd5b6000602082840312156117a6578081fd5b813561174e81611c29565b600080604083850312156117c3578081fd5b82356117ce81611c29565b946020939093013593505050565b600060208083850312156117ee578182fd5b823567ffffffffffffffff80821115611805578384fd5b818501915085601f830112611818578384fd5b81358181111561182a5761182a611c13565b8381026040518582820101818110858211171561184957611849611c13565b604052828152858101935084860182860187018a1015611867578788fd5b8795505b8386101561188957803585526001959095019493860193860161186b565b5098975050505050505050565b6000602082840312156118a7578081fd5b8151801515811461174e578182fd5b6000602082840312156118c7578081fd5b5035919050565b600080604083850312156118e0578182fd5b50508035926020909101359150565b6000815180845260208085019450808401835b8381101561191e57815187529582019590820190600101611902565b509495945050505050565b6001600160a01b0391909116815260200190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b03929092168252602082015260400190565b60006060825261198d60608301866118ef565b828103602084015261199f81866118ef565b905082810360408401526119b381856118ef565b9695505050505050565b901515815260200190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b6020808252600e908201526d125b9d985b1a5908185b5bdd5b9d60921b604082015260600190565b6020808252600e908201526d0102232b837b9b4ba32903737ba160951b604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208082526015908201527424b73b30b634b2103230bc9039b2b632b1ba34b7b760591b604082015260600190565b6020808252601290820152715374616b696e67206973207061757365642160701b604082015260600190565b60208082526019908201527f756e7374616b652074696d65206e6f7420726561636865642100000000000000604082015260600190565b90815260200190565b9283526020830191909152604082015260600190565b968752602087019590955260408601939093526060850191909152608084015260a083015260c082015260e00190565b60008219821115611b8757611b87611bfd565b500190565b600082611ba757634e487b7160e01b81526012600452602481fd5b500490565b6000816000190483118215151615611bc657611bc6611bfd565b500290565b600082821015611bdd57611bdd611bfd565b500390565b6000600019821415611bf657611bf6611bfd565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b0381168114611c3e57600080fd5b5056fea264697066735822122034b13f799fe304aa052462fd9684647f00c645d96a4333886c54767b92ebda7d64736f6c634300080000330000000000000000000000009813037ee2218799597d83d4a5b6f3b6778218d9",
    "runtime_bytecode": "",
    "contract_name": "BONEStaking",
    "compiler_version": "v0.8.0+commit.c7dfd78e",
    "optimization_used": "1",
    "runs": "200",
    "abi": "[{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_token\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"From\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"day\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"}],\"name\":\"Deposite_\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"Token\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_add\",\"type\":\"address\"}],\"name\":\"UserInformation\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"Users\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"DepositeToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastUpdated\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lockableDays\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"WithdrawReward\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"WithdrawAbleReward\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"depositeTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"WithdrawDepositeAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WITHDRAWN\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"allocation\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"changeMinimmumAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_14dayspercent\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_30dayspercent\",\"type\":\"uint256\"}],\"name\":\"changePercentages\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"changeToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_time\",\"type\":\"uint256\"}],\"name\":\"changetimeCal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"depositeToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"depositetime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"disableStaking\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_token\",\"type\":\"uint256\"}],\"name\":\"emergencyWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"Amount\",\"type\":\"uint256\"}],\"name\":\"emergencyWithdrawETH\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"enableStaking\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_lockableDays\",\"type\":\"uint256\"}],\"name\":\"farm\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"_index\",\"type\":\"uint256[]\"}],\"name\":\"harvest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isStakingAvilable\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"lockabledays\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minimumDeposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_add\",\"type\":\"address\"}],\"name\":\"pendingRewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardtobewithdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"stakers\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"time\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalRewardEarned\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalStakedToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalStaker\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_totalstakers\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totallockvalue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]",
    "source_code": "// SPDX-License-Identifier: MIT\r\npragma solidity 0.8.0;\r\ninterface IERC20 {\r\n    function transfer(address to, uint256 value) external returns (bool);\r\n\r\n    function approve(address spender, uint256 value) external returns (bool);\r\n\r\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\r\n\r\n    function totalSupply() external view returns (uint256);\r\n\r\n    function balanceOf(address who) external view returns (uint256);\r\n\r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}\r\n\r\nlibrary SafeMath {\r\n    /**\r\n\r\n    * @dev Multiplies two unsigned integers, reverts on overflow.\r\n\r\n    */\r\n\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\r\n\r\n        // benefit is lost if 'b' is also tested.\r\n\r\n        // See: https://github.com/OpenZeppelin/openzeppelin-solidity/pull/522\r\n\r\n        if (a == 0) {\r\n            return 0;\r\n        }\r\n\r\n        uint256 c = a * b;\r\n\r\n        require(c / a == b);\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n\r\n    * @dev Integer division of two unsigned integers truncating the quotient, reverts on division by zero.\r\n\r\n    */\r\n\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        // Solidity only automatically asserts when dividing by 0\r\n\r\n        require(b > 0);\r\n\r\n        uint256 c = a / b;\r\n\r\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n\r\n    * @dev Subtracts two unsigned integers, reverts on overflow (i.e. if subtrahend is greater than minuend).\r\n\r\n    */\r\n\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        require(b <= a);\r\n\r\n        uint256 c = a - b;\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n\r\n    * @dev Adds two unsigned integers, reverts on overflow.\r\n\r\n    */\r\n\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a + b;\r\n\r\n        require(c >= a);\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n\r\n    * @dev Divides two unsigned integers and returns the remainder (unsigned integer modulo),\r\n\r\n    * reverts when dividing by zero.\r\n\r\n    */\r\n\r\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        require(b != 0);\r\n\r\n        return a % b;\r\n    }\r\n}\r\n\r\ncontract Ownable   {\r\n    address private _owner;\r\n\r\n    event OwnershipTransferred(\r\n        address indexed previousOwner,\r\n        address indexed newOwner\r\n    );\r\n\r\n    /**\r\n\r\n     * @dev Initializes the contract setting the deployer as the initial owner.\r\n\r\n     */\r\n\r\n    constructor()  {\r\n        _owner = msg.sender;\r\n\r\n        emit OwnershipTransferred(address(0), _owner);\r\n    }\r\n\r\n    /**\r\n\r\n     * @dev Returns the address of the current owner.\r\n\r\n     */\r\n\r\n    function owner() public view returns (address) {\r\n        return _owner;\r\n    }\r\n\r\n    /**\r\n\r\n     * @dev Throws if called by any account other than the owner.\r\n\r\n     */\r\n\r\n    modifier onlyOwner() {\r\n        require(_owner == msg.sender, \"Ownable: caller is not the owner\");\r\n\r\n        _;\r\n    }\r\n\r\n    /**\r\n\r\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\r\n\r\n     * Can only be called by the current owner.\r\n\r\n     */\r\n\r\n    function transferOwnership(address newOwner) public onlyOwner {\r\n        require(\r\n            newOwner != address(0),\r\n            \"Ownable: new owner is the zero address\"\r\n        );\r\n\r\n        emit OwnershipTransferred(_owner, newOwner);\r\n\r\n        _owner = newOwner;\r\n    }\r\n}\r\n\r\n\r\ncontract BONEStaking is Ownable{\r\n    using SafeMath for uint256;\r\n    IERC20 public Token;\r\n\r\n    struct userInfo {\r\n        uint256 DepositeToken;\r\n        uint256 lastUpdated;\r\n        uint256 lockableDays;\r\n        uint256 WithdrawReward;\r\n        uint256 WithdrawAbleReward;\r\n        uint256 depositeTime;\r\n        uint256 WithdrawDepositeAmount;\r\n    }\r\n    \r\n     event Deposite_(address indexed to,address indexed From, uint256 amount, uint256 day,uint256 time);\r\n\r\n    \r\n    mapping(uint256 => uint256) public allocation;\r\n    mapping(address => uint256[] ) public depositeToken;\r\n    mapping(address => uint256[] ) public lockabledays;\r\n    mapping(address => uint256[] ) public depositetime;   \r\n    mapping(address =>  userInfo) public Users;\r\n    address [] public stakers;\r\n    uint256 public totalStakedToken;\r\n    uint256 public totalRewardEarned;\r\n    uint256 public totallockvalue;\r\n    uint256 public WITHDRAWN;\r\n    uint256 public rewardtobewithdraw;\r\n    bool public isStakingAvilable;\r\n    uint256 public  minimumDeposit = 1E18; //1 token\r\n    \r\n    uint256 public time = 1 days; //\r\n\r\n    constructor(IERC20 _token)  {\r\n        Token = _token;\r\n      \r\n\r\n        allocation[14]=89000000000000000000; //89 % \r\n        allocation[30] = 239000000000000000000; //239 %\r\n      \r\n\r\n        \r\n    }\r\n\r\n    function farm(uint256 _amount, uint256 _lockableDays) public \r\n    {\r\n        require(isStakingAvilable==true,\"Staking is paused!\");\r\n        require(_amount >= minimumDeposit, \"Invalid amount\");\r\n        require(allocation[_lockableDays] > 0, \"Invalid day selection\");\r\n        Token.transferFrom(msg.sender, address(this), _amount);\r\n        depositeToken[msg.sender].push(_amount);\r\n        depositetime[msg.sender].push(uint40(block.timestamp));\r\n        Users[msg.sender].DepositeToken += _amount;\r\n        lockabledays[msg.sender].push(_lockableDays);\r\n        stakers.push(msg.sender);\r\n        totalStakedToken+=_amount;\r\n        totallockvalue+=_amount;\r\n        uint256 reward = (allocation[_lockableDays].mul(_amount).div(100)).div(1e18);\r\n        rewardtobewithdraw+=reward;\r\n        emit Deposite_(msg.sender,address(this),_amount,_lockableDays,block.timestamp);\r\n    }\r\n    \r\n\r\n\r\n\r\n        function pendingRewards(address _add) public view returns(uint256 reward)\r\n    {\r\n        uint256 Reward;\r\n        for(uint256 z=0 ; z< depositeToken[_add].length;z++){\r\n        uint256 lockTime = depositetime[_add][z]+(lockabledays[_add][z]*time);\r\n        if(block.timestamp > lockTime ){\r\n        reward = (allocation[lockabledays[_add][z]].mul(depositeToken[_add][z]).div(100)).div(1e18);\r\n        Reward += reward;\r\n        }\r\n    }\r\n    return Reward;\r\n    }\r\n\r\n  \r\n    \r\n    \r\n    function harvest(uint256 [] memory _index) public \r\n    {\r\n          for(uint256 z=0 ; z< _index.length;z++){\r\n              \r\n        require( Users[msg.sender].DepositeToken > 0, \" Deposite not \");\r\n        \r\n        uint256 lockTime =depositetime[msg.sender][_index[z]]+(lockabledays[msg.sender][_index[z]].mul(time));\r\n        require(block.timestamp > lockTime,\"unstake time not reached!\");\r\n        uint256 reward = (allocation[lockabledays[msg.sender][_index[z]]].mul(depositeToken[msg.sender][_index[z]]).div(100)).div(1e18);\r\n        \r\n        Users[msg.sender].WithdrawAbleReward += reward;\r\n        Users[msg.sender].DepositeToken -= depositeToken[msg.sender][_index[z]];\r\n        Users[msg.sender].WithdrawDepositeAmount += depositeToken[msg.sender][_index[z]];\r\n        depositeToken[msg.sender][_index[z]] = 0;\r\n        lockabledays[msg.sender][_index[z]] = 0;\r\n        depositetime[msg.sender][_index[z]] = 0;\r\n \r\n    }\r\n            for(uint256 t=0 ; t< _index.length;t++){\r\n            for(uint256 i = _index[t]; i <  depositeToken[msg.sender].length - 1; i++) \r\n        {\r\n            depositeToken[msg.sender][i] = depositeToken[msg.sender][i + 1];\r\n            lockabledays[msg.sender][i] = lockabledays[msg.sender][i + 1];\r\n            depositetime[msg.sender][i] = depositetime[msg.sender][i + 1];\r\n        }\r\n          depositeToken[msg.sender].pop();\r\n          lockabledays[msg.sender].pop();\r\n          depositetime[msg.sender].pop();\r\n    }\r\n             uint256 totalwithdrawAmount;\r\n             \r\n             totalwithdrawAmount = Users[msg.sender].WithdrawDepositeAmount.add(Users[msg.sender].WithdrawAbleReward);\r\n             totalRewardEarned+=Users[msg.sender].WithdrawAbleReward;\r\n             WITHDRAWN+=totalwithdrawAmount;\r\n             rewardtobewithdraw=rewardtobewithdraw-Users[msg.sender].WithdrawAbleReward;\r\n             totallockvalue=totallockvalue-Users[msg.sender].WithdrawDepositeAmount;\r\n             Token.transfer(msg.sender,  totalwithdrawAmount);\r\n             Users[msg.sender].WithdrawReward =Users[msg.sender].WithdrawReward.add(Users[msg.sender].WithdrawAbleReward );\r\n             Users[msg.sender].WithdrawAbleReward =0;\r\n             Users[msg.sender].WithdrawDepositeAmount = 0;\r\n         \r\n    }\r\n\r\n    function UserInformation(address _add) public view returns(uint256 [] memory , uint256 [] memory,uint256 [] memory){\r\n        return(depositeToken[_add],lockabledays[_add],depositetime[_add]);\r\n    }\r\n \r\n \r\n    function emergencyWithdraw(uint256 _token) external onlyOwner {\r\n         Token.transfer(msg.sender, _token);\r\n    }\r\n\r\n    function emergencyWithdrawETH(uint256 Amount) external onlyOwner {\r\n        payable(msg.sender).transfer(Amount);\r\n    }\r\n\r\n    function changetimeCal(uint256 _time) external onlyOwner{\r\n        time=_time;\r\n    }\r\n\r\n    function changeMinimmumAmount(uint256 amount) external onlyOwner{\r\n        minimumDeposit=amount;\r\n    }\r\n\r\n    function changePercentages(uint256 _14dayspercent,uint256 _30dayspercent) external onlyOwner{\r\n        allocation[14]=_14dayspercent;\r\n        allocation[30] = _30dayspercent;\r\n        \r\n    }\r\n\r\n    function changeToken(IERC20 _token) external onlyOwner{\r\n        Token=_token;\r\n    }\r\n\r\n    function enableStaking() external onlyOwner{\r\n        isStakingAvilable=true;\r\n    }\r\n\r\n    function disableStaking() external onlyOwner{\r\n        isStakingAvilable=false;\r\n    }\r\n\r\n    function totalStaker() public view returns(uint256 _totalstakers) {\r\n       _totalstakers =stakers.length;\r\n       return _totalstakers;\r\n    }\r\n    \r\n   \r\n}\r\n\r\n// Bone mainnet: 0x9813037ee2218799597d83D4a5B6F3b6778218d9",
    "etherscan_verified": true
}