{
    "address": "0x85188f89Ef6A5714818DefC0607727c9BE9f8949",
    "tx_hash": "dc9fb6e49a1ded329c993eaf921392fd48b69eeab8972f904013dab755f63852",
    "block_number": 18009141,
    "timestamp": 1693177331,
    "gas_used_in_creation": 6566213,
    "creation_bytecode": "608060405266038d7ea4c680005f196200001a919062000897565b5f19620000289190620008fb565b6006555f60085560196009555f600a556019600b55600a54600c55600b54600d55600c54600e55600d54600f55730ac499464984579ecfe342930b8d249cb6ebafda60125f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550730ac499464984579ecfe342930b8d249cb6ebafda60135f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505f6015806101000a81548160ff0219169083151502179055506001601560166101000a81548160ff02191690831515021790555062000163606462000154600266038d7ea4c68000620006fc60201b90919060201c565b6200077c60201b90919060201c565b60165562000198606462000189600266038d7ea4c68000620006fc60201b90919060201c565b6200077c60201b90919060201c565b601755620001ce6103e8620001bf600166038d7ea4c68000620006fc60201b90919060201c565b6200077c60201b90919060201c565b601855348015620001dd575f80fd5b505f620001ef620007cd60201b60201c565b9050805f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff165f73ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35060065460025f620002a1620007cd60201b60201c565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055505f737a250d5630b4cf539739df2c5dacb4c659f2488d90508060145f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff1663c45a01556040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000380573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190620003a691906200099a565b73ffffffffffffffffffffffffffffffffffffffff1663c9c65396308373ffffffffffffffffffffffffffffffffffffffff1663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa1580156200040c573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906200043291906200099a565b6040518363ffffffff1660e01b815260040162000451929190620009db565b6020604051808303815f875af11580156200046e573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906200049491906200099a565b60155f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600160055f620004e8620007d460201b60201c565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550600160055f3073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550600160055f60125f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550600160055f60135f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff02191690831515021790555062000688620007cd60201b60201c565b73ffffffffffffffffffffffffffffffffffffffff165f73ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef66038d7ea4c68000604051620006ed919062000a17565b60405180910390a35062000bfd565b5f8083036200070e575f905062000776565b5f82846200071d919062000a32565b90508284826200072e919062000a7c565b1462000771576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620007689062000b37565b60405180910390fd5b809150505b92915050565b5f620007c583836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250620007fb60201b60201c565b905092915050565b5f33905090565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b5f808311829062000844576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200083b919062000bdb565b60405180910390fd5b505f838562000854919062000a7c565b9050809150509392505050565b5f819050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f620008a38262000861565b9150620008b08362000861565b925082620008c357620008c26200086a565b5b828206905092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f620009078262000861565b9150620009148362000861565b92508282039050818111156200092f576200092e620008ce565b5b92915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f620009648262000939565b9050919050565b620009768162000958565b811462000981575f80fd5b50565b5f8151905062000994816200096b565b92915050565b5f60208284031215620009b257620009b162000935565b5b5f620009c18482850162000984565b91505092915050565b620009d58162000958565b82525050565b5f604082019050620009f05f830185620009ca565b620009ff6020830184620009ca565b9392505050565b62000a118162000861565b82525050565b5f60208201905062000a2c5f83018462000a06565b92915050565b5f62000a3e8262000861565b915062000a4b8362000861565b925082820262000a5b8162000861565b9150828204841483151762000a755762000a74620008ce565b5b5092915050565b5f62000a888262000861565b915062000a958362000861565b92508262000aa85762000aa76200086a565b5b828204905092915050565b5f82825260208201905092915050565b7f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f5f8201527f7700000000000000000000000000000000000000000000000000000000000000602082015250565b5f62000b1f60218362000ab3565b915062000b2c8262000ac3565b604082019050919050565b5f6020820190508181035f83015262000b508162000b11565b9050919050565b5f81519050919050565b5f5b8381101562000b8057808201518184015260208101905062000b63565b5f8484015250505050565b5f601f19601f8301169050919050565b5f62000ba78262000b57565b62000bb3818562000ab3565b935062000bc581856020860162000b61565b62000bd08162000b8b565b840191505092915050565b5f6020820190508181035f83015262000bf5818462000b9b565b905092915050565b6141638062000c0b5f395ff3fe6080604052600436106101da575f3560e01c8063751039fc11610101578063a2a957bb11610094578063c492f04611610063578063c492f04614610661578063dd62ed3e14610689578063ea1644d5146106c5578063f2fde38b146106ed576101e1565b8063a2a957bb146105ab578063a9059cbb146105d3578063bfd792841461060f578063c3c8cd801461064b576101e1565b80638f70ccf7116100d05780638f70ccf7146105075780638f9a55c01461052f57806395d89b411461055957806398a5c31514610583576101e1565b8063751039fc146104615780637d1db4a5146104775780637f2feddc146104a15780638da5cb5b146104dd576101e1565b8063313ce567116101795780636fc3eaec116101485780636fc3eaec146103d157806370a08231146103e7578063715018a61461042357806374010ece14610439576101e1565b8063313ce5671461032d57806349bd5a5e146103575780636b999053146103815780636d8aa8f8146103a9576101e1565b80631694505e116101b55780631694505e1461027357806318160ddd1461029d57806323b872dd146102c75780632fd689e314610303576101e1565b8062b8cf2a146101e557806306fdde031461020d578063095ea7b314610237576101e1565b366101e157005b5f80fd5b3480156101f0575f80fd5b5061020b60048036038101906102069190612f7f565b610715565b005b348015610218575f80fd5b5061022161083a565b60405161022e9190613040565b60405180910390f35b348015610242575f80fd5b5061025d60048036038101906102589190613093565b610877565b60405161026a91906130eb565b60405180910390f35b34801561027e575f80fd5b50610287610894565b604051610294919061315f565b60405180910390f35b3480156102a8575f80fd5b506102b16108b9565b6040516102be9190613187565b60405180910390f35b3480156102d2575f80fd5b506102ed60048036038101906102e891906131a0565b6108c7565b6040516102fa91906130eb565b60405180910390f35b34801561030e575f80fd5b5061031761099b565b6040516103249190613187565b60405180910390f35b348015610338575f80fd5b506103416109a1565b60405161034e919061320b565b60405180910390f35b348015610362575f80fd5b5061036b6109a9565b6040516103789190613233565b60405180910390f35b34801561038c575f80fd5b506103a760048036038101906103a2919061324c565b6109ce565b005b3480156103b4575f80fd5b506103cf60048036038101906103ca91906132a1565b610ab9565b005b3480156103dc575f80fd5b506103e5610b6a565b005b3480156103f2575f80fd5b5061040d6004803603810190610408919061324c565b610c37565b60405161041a9190613187565b60405180910390f35b34801561042e575f80fd5b50610437610c85565b005b348015610444575f80fd5b5061045f600480360381019061045a91906132cc565b610dd3565b005b34801561046c575f80fd5b50610475610e9a565b005b348015610482575f80fd5b5061048b610f4c565b6040516104989190613187565b60405180910390f35b3480156104ac575f80fd5b506104c760048036038101906104c2919061324c565b610f52565b6040516104d49190613187565b60405180910390f35b3480156104e8575f80fd5b506104f1610f67565b6040516104fe9190613233565b60405180910390f35b348015610512575f80fd5b5061052d600480360381019061052891906132a1565b610f8e565b005b34801561053a575f80fd5b5061054361103f565b6040516105509190613187565b60405180910390f35b348015610564575f80fd5b5061056d611045565b60405161057a9190613040565b60405180910390f35b34801561058e575f80fd5b506105a960048036038101906105a491906132cc565b611082565b005b3480156105b6575f80fd5b506105d160048036038101906105cc91906132f7565b611120565b005b3480156105de575f80fd5b506105f960048036038101906105f49190613093565b611316565b60405161060691906130eb565b60405180910390f35b34801561061a575f80fd5b506106356004803603810190610630919061324c565b611333565b60405161064291906130eb565b60405180910390f35b348015610656575f80fd5b5061065f611350565b005b34801561066c575f80fd5b50610687600480360381019061068291906133b4565b611425565b005b348015610694575f80fd5b506106af60048036038101906106aa9190613411565b61155a565b6040516106bc9190613187565b60405180910390f35b3480156106d0575f80fd5b506106eb60048036038101906106e691906132cc565b6115dc565b005b3480156106f8575f80fd5b50610713600480360381019061070e919061324c565b6116a3565b005b61071d611860565b73ffffffffffffffffffffffffffffffffffffffff165f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146107a9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107a090613499565b60405180910390fd5b5f5b815181101561083657600160105f8484815181106107cc576107cb6134b7565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550808061082e90613511565b9150506107ab565b5050565b60606040518060400160405280600a81526020017f4d415452495820424f5400000000000000000000000000000000000000000000815250905090565b5f61088a610883611860565b8484611867565b6001905092915050565b60145f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f66038d7ea4c68000905090565b5f6108d3848484611a2a565b610990846108df611860565b61098b856040518060600160405280602881526020016141066028913960045f8b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f610942611860565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205461228a9092919063ffffffff16565b611867565b600190509392505050565b60185481565b5f6009905090565b60155f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6109d6611860565b73ffffffffffffffffffffffffffffffffffffffff165f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610a62576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a5990613499565b60405180910390fd5b5f60105f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff02191690831515021790555050565b610ac1611860565b73ffffffffffffffffffffffffffffffffffffffff165f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610b4d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b4490613499565b60405180910390fd5b80601560166101000a81548160ff02191690831515021790555050565b60125f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610baa611860565b73ffffffffffffffffffffffffffffffffffffffff161480610c1f575060135f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610c07611860565b73ffffffffffffffffffffffffffffffffffffffff16145b610c27575f80fd5b5f479050610c34816122ec565b50565b5f610c7e60025f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054612405565b9050919050565b610c8d611860565b73ffffffffffffffffffffffffffffffffffffffff165f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610d19576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d1090613499565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff165f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35f805f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b610ddb611860565b73ffffffffffffffffffffffffffffffffffffffff165f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610e67576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e5e90613499565b60405180910390fd5b5f8111610e72575f80fd5b60648166038d7ea4c68000610e879190613558565b610e9191906135c6565b60168190555050565b610ea2611860565b73ffffffffffffffffffffffffffffffffffffffff165f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610f2e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f2590613499565b60405180910390fd5b66038d7ea4c6800060168190555066038d7ea4c68000601781905550565b60165481565b6011602052805f5260405f205f915090505481565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610f96611860565b73ffffffffffffffffffffffffffffffffffffffff165f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611022576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161101990613499565b60405180910390fd5b80601560146101000a81548160ff02191690831515021790555050565b60175481565b60606040518060400160405280600281526020017f4d42000000000000000000000000000000000000000000000000000000000000815250905090565b61108a611860565b73ffffffffffffffffffffffffffffffffffffffff165f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611116576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161110d90613499565b60405180910390fd5b8060188190555050565b611128611860565b73ffffffffffffffffffffffffffffffffffffffff165f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146111b4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111ab90613499565b60405180910390fd5b5f84101580156111c5575060058411155b611204576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111fb90613666565b60405180910390fd5b5f8210158015611215575060328211155b611254576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161124b906136f4565b60405180910390fd5b5f8310158015611265575060058311155b6112a4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161129b90613782565b60405180910390fd5b5f81101580156112b5575060638111155b6112f4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112eb90613810565b60405180910390fd5b8360088190555082600a819055508160098190555080600b8190555050505050565b5f611329611322611860565b8484611a2a565b6001905092915050565b6010602052805f5260405f205f915054906101000a900460ff1681565b60125f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16611390611860565b73ffffffffffffffffffffffffffffffffffffffff161480611405575060135f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166113ed611860565b73ffffffffffffffffffffffffffffffffffffffff16145b61140d575f80fd5b5f61141730610c37565b905061142281612471565b50565b61142d611860565b73ffffffffffffffffffffffffffffffffffffffff165f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146114b9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114b090613499565b60405180910390fd5b5f5b83839050811015611554578160055f8686858181106114dd576114dc6134b7565b5b90506020020160208101906114f2919061324c565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550808061154c90613511565b9150506114bb565b50505050565b5f60045f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b6115e4611860565b73ffffffffffffffffffffffffffffffffffffffff165f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611670576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161166790613499565b60405180910390fd5b5f811161167b575f80fd5b60648166038d7ea4c680006116909190613558565b61169a91906135c6565b60178190555050565b6116ab611860565b73ffffffffffffffffffffffffffffffffffffffff165f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611737576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161172e90613499565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036117a5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161179c9061389e565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff165f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3805f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b5f33905090565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036118d5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016118cc9061392c565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611943576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161193a906139ba565b60405180910390fd5b8060045f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92583604051611a1d9190613187565b60405180910390a3505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611a98576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a8f90613a48565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611b06576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611afd90613ad6565b60405180910390fd5b5f8111611b48576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b3f90613b64565b60405180910390fd5b611b50610f67565b73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614158015611bbe5750611b8e610f67565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b15611f9757601560149054906101000a900460ff16611c4d57611bdf610f67565b73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614611c4c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611c4390613bf2565b60405180910390fd5b5b601654811115611c92576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611c8990613c5a565b60405180910390fd5b60105f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16158015611d30575060105f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16155b611d6f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611d6690613ce8565b60405180910390fd5b60155f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614611e1b5760175481611dd084610c37565b611dda9190613d06565b10611e1a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611e1190613da9565b60405180910390fd5b5b5f611e2530610c37565b90505f60185482101590506016548210611e3f5760165491505b808015611e57575060158054906101000a900460ff16155b8015611eb0575060155f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614155b8015611ec85750601560169054906101000a900460ff165b8015611f1b575060055f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16155b8015611f6e575060055f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16155b15611f9457611f7c82612471565b5f4790505f811115611f9257611f91476122ec565b5b505b50505b5f6001905060055f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff1680612037575060055f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff165b806120e8575060155f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16141580156120e7575060155f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614155b5b156120f5575f9050612278565b60155f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614801561219e575060145f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614155b156121b657600854600c81905550600954600d819055505b60155f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614801561225f575060145f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614155b1561227757600a54600c81905550600b54600d819055505b5b612284848484846126da565b50505050565b5f8383111582906122d1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016122c89190613040565b60405180910390fd5b505f83856122df9190613dc7565b9050809150509392505050565b60135f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc61234e600561234060038661270790919063ffffffff16565b61277e90919063ffffffff16565b90811502906040515f60405180830381858888f19350505050158015612376573d5f803e3d5ffd5b5060125f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc6123d960056123cb60028661270790919063ffffffff16565b61277e90919063ffffffff16565b90811502906040515f60405180830381858888f19350505050158015612401573d5f803e3d5ffd5b5050565b5f60065482111561244b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161244290613e6a565b60405180910390fd5b5f6124546127c7565b9050612469818461277e90919063ffffffff16565b915050919050565b60016015806101000a81548160ff0219169083151502179055505f600267ffffffffffffffff8111156124a7576124a6612de9565b5b6040519080825280602002602001820160405280156124d55781602001602082028036833780820191505090505b50905030815f815181106124ec576124eb6134b7565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505060145f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa158015612590573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906125b49190613e9c565b816001815181106125c8576125c76134b7565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505061262e3060145f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1684611867565b60145f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663791ac947835f8430426040518663ffffffff1660e01b8152600401612690959493929190613fb7565b5f604051808303815f87803b1580156126a7575f80fd5b505af11580156126b9573d5f803e3d5ffd5b50505050505f6015806101000a81548160ff02191690831515021790555050565b806126e8576126e76127f0565b5b6126f3848484612829565b80612701576127006129e9565b5b50505050565b5f808303612717575f9050612778565b5f82846127249190613558565b905082848261273391906135c6565b14612773576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161276a9061407f565b60405180910390fd5b809150505b92915050565b5f6127bf83836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f0000000000008152506129fd565b905092915050565b5f805f6127d2612a5e565b915091506127e9818361277e90919063ffffffff16565b9250505090565b5f600c5414801561280257505f600d54145b61282757600c54600e81905550600d54600f819055505f600c819055505f600d819055505b565b5f805f805f8061283887612ab7565b9550955095509550955095506128948660025f8c73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054612b1790919063ffffffff16565b60025f8b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055506129258560025f8b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054612b6090919063ffffffff16565b60025f8a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208190555061296f81612bbd565b6129798483612c74565b8773ffffffffffffffffffffffffffffffffffffffff168973ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef856040516129d69190613187565b60405180910390a3505050505050505050565b600e54600c81905550600f54600d81905550565b5f8083118290612a43576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612a3a9190613040565b60405180910390fd5b505f8385612a5191906135c6565b9050809150509392505050565b5f805f60065490505f66038d7ea4c680009050612a8d66038d7ea4c6800060065461277e90919063ffffffff16565b821015612aaa5760065466038d7ea4c68000935093505050612ab3565b81819350935050505b9091565b5f805f805f805f805f612acf8a600c54600d54612cae565b9250925092505f612ade6127c7565b90505f805f612aef8e878787612d40565b9250925092508282828989899c509c509c509c509c509c505050505050505091939550919395565b5f612b5883836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525061228a565b905092915050565b5f808284612b6e9190613d06565b905083811015612bb3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612baa906140e7565b60405180910390fd5b8091505092915050565b5f612bc66127c7565b90505f612bdc828461270790919063ffffffff16565b9050612c2e8160025f3073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054612b6090919063ffffffff16565b60025f3073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505050565b612c8982600654612b1790919063ffffffff16565b600681905550612ca481600754612b6090919063ffffffff16565b6007819055505050565b5f805f80612cd86064612cca888a61270790919063ffffffff16565b61277e90919063ffffffff16565b90505f612d016064612cf3888b61270790919063ffffffff16565b61277e90919063ffffffff16565b90505f612d2982612d1b858c612b1790919063ffffffff16565b612b1790919063ffffffff16565b905080838395509550955050505093509350939050565b5f805f80612d57858961270790919063ffffffff16565b90505f612d6d868961270790919063ffffffff16565b90505f612d83878961270790919063ffffffff16565b90505f612dab82612d9d8587612b1790919063ffffffff16565b612b1790919063ffffffff16565b9050838184965096509650505050509450945094915050565b5f604051905090565b5f80fd5b5f80fd5b5f80fd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b612e1f82612dd9565b810181811067ffffffffffffffff82111715612e3e57612e3d612de9565b5b80604052505050565b5f612e50612dc4565b9050612e5c8282612e16565b919050565b5f67ffffffffffffffff821115612e7b57612e7a612de9565b5b602082029050602081019050919050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f612eb982612e90565b9050919050565b612ec981612eaf565b8114612ed3575f80fd5b50565b5f81359050612ee481612ec0565b92915050565b5f612efc612ef784612e61565b612e47565b90508083825260208201905060208402830185811115612f1f57612f1e612e8c565b5b835b81811015612f485780612f348882612ed6565b845260208401935050602081019050612f21565b5050509392505050565b5f82601f830112612f6657612f65612dd5565b5b8135612f76848260208601612eea565b91505092915050565b5f60208284031215612f9457612f93612dcd565b5b5f82013567ffffffffffffffff811115612fb157612fb0612dd1565b5b612fbd84828501612f52565b91505092915050565b5f81519050919050565b5f82825260208201905092915050565b5f5b83811015612ffd578082015181840152602081019050612fe2565b5f8484015250505050565b5f61301282612fc6565b61301c8185612fd0565b935061302c818560208601612fe0565b61303581612dd9565b840191505092915050565b5f6020820190508181035f8301526130588184613008565b905092915050565b5f819050919050565b61307281613060565b811461307c575f80fd5b50565b5f8135905061308d81613069565b92915050565b5f80604083850312156130a9576130a8612dcd565b5b5f6130b685828601612ed6565b92505060206130c78582860161307f565b9150509250929050565b5f8115159050919050565b6130e5816130d1565b82525050565b5f6020820190506130fe5f8301846130dc565b92915050565b5f819050919050565b5f61312761312261311d84612e90565b613104565b612e90565b9050919050565b5f6131388261310d565b9050919050565b5f6131498261312e565b9050919050565b6131598161313f565b82525050565b5f6020820190506131725f830184613150565b92915050565b61318181613060565b82525050565b5f60208201905061319a5f830184613178565b92915050565b5f805f606084860312156131b7576131b6612dcd565b5b5f6131c486828701612ed6565b93505060206131d586828701612ed6565b92505060406131e68682870161307f565b9150509250925092565b5f60ff82169050919050565b613205816131f0565b82525050565b5f60208201905061321e5f8301846131fc565b92915050565b61322d81612eaf565b82525050565b5f6020820190506132465f830184613224565b92915050565b5f6020828403121561326157613260612dcd565b5b5f61326e84828501612ed6565b91505092915050565b613280816130d1565b811461328a575f80fd5b50565b5f8135905061329b81613277565b92915050565b5f602082840312156132b6576132b5612dcd565b5b5f6132c38482850161328d565b91505092915050565b5f602082840312156132e1576132e0612dcd565b5b5f6132ee8482850161307f565b91505092915050565b5f805f806080858703121561330f5761330e612dcd565b5b5f61331c8782880161307f565b945050602061332d8782880161307f565b935050604061333e8782880161307f565b925050606061334f8782880161307f565b91505092959194509250565b5f80fd5b5f8083601f84011261337457613373612dd5565b5b8235905067ffffffffffffffff8111156133915761339061335b565b5b6020830191508360208202830111156133ad576133ac612e8c565b5b9250929050565b5f805f604084860312156133cb576133ca612dcd565b5b5f84013567ffffffffffffffff8111156133e8576133e7612dd1565b5b6133f48682870161335f565b935093505060206134078682870161328d565b9150509250925092565b5f806040838503121561342757613426612dcd565b5b5f61343485828601612ed6565b925050602061344585828601612ed6565b9150509250929050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65725f82015250565b5f613483602083612fd0565b915061348e8261344f565b602082019050919050565b5f6020820190508181035f8301526134b081613477565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61351b82613060565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361354d5761354c6134e4565b5b600182019050919050565b5f61356282613060565b915061356d83613060565b925082820261357b81613060565b91508282048414831517613592576135916134e4565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f6135d082613060565b91506135db83613060565b9250826135eb576135ea613599565b5b828204905092915050565b7f4275792072657761726473206d757374206265206265747765656e20302520615f8201527f6e64203525000000000000000000000000000000000000000000000000000000602082015250565b5f613650602583612fd0565b915061365b826135f6565b604082019050919050565b5f6020820190508181035f83015261367d81613644565b9050919050565b7f42757920746178206d757374206265206265747765656e20302520616e6420355f8201527f3025000000000000000000000000000000000000000000000000000000000000602082015250565b5f6136de602283612fd0565b91506136e982613684565b604082019050919050565b5f6020820190508181035f83015261370b816136d2565b9050919050565b7f53656c6c2072657761726473206d757374206265206265747765656e203025205f8201527f616e642035250000000000000000000000000000000000000000000000000000602082015250565b5f61376c602683612fd0565b915061377782613712565b604082019050919050565b5f6020820190508181035f83015261379981613760565b9050919050565b7f53656c6c20746178206d757374206265206265747765656e20302520616e64205f8201527f3939250000000000000000000000000000000000000000000000000000000000602082015250565b5f6137fa602383612fd0565b9150613805826137a0565b604082019050919050565b5f6020820190508181035f830152613827816137ee565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f20615f8201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b5f613888602683612fd0565b91506138938261382e565b604082019050919050565b5f6020820190508181035f8301526138b58161387c565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f206164645f8201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b5f613916602483612fd0565b9150613921826138bc565b604082019050919050565b5f6020820190508181035f8301526139438161390a565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f2061646472655f8201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b5f6139a4602283612fd0565b91506139af8261394a565b604082019050919050565b5f6020820190508181035f8301526139d181613998565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f2061645f8201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b5f613a32602583612fd0565b9150613a3d826139d8565b604082019050919050565b5f6020820190508181035f830152613a5f81613a26565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f20616464725f8201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b5f613ac0602383612fd0565b9150613acb82613a66565b604082019050919050565b5f6020820190508181035f830152613aed81613ab4565b9050919050565b7f5472616e7366657220616d6f756e74206d7573742062652067726561746572205f8201527f7468616e207a65726f0000000000000000000000000000000000000000000000602082015250565b5f613b4e602983612fd0565b9150613b5982613af4565b604082019050919050565b5f6020820190508181035f830152613b7b81613b42565b9050919050565b7f544f4b454e3a2054686973206163636f756e742063616e6e6f742073656e64205f8201527f746f6b656e7320756e74696c2074726164696e6720697320656e61626c656400602082015250565b5f613bdc603f83612fd0565b9150613be782613b82565b604082019050919050565b5f6020820190508181035f830152613c0981613bd0565b9050919050565b7f544f4b454e3a204d6178205472616e73616374696f6e204c696d6974000000005f82015250565b5f613c44601c83612fd0565b9150613c4f82613c10565b602082019050919050565b5f6020820190508181035f830152613c7181613c38565b9050919050565b7f544f4b454e3a20596f7572206163636f756e7420697320626c61636b6c6973745f8201527f6564210000000000000000000000000000000000000000000000000000000000602082015250565b5f613cd2602383612fd0565b9150613cdd82613c78565b604082019050919050565b5f6020820190508181035f830152613cff81613cc6565b9050919050565b5f613d1082613060565b9150613d1b83613060565b9250828201905080821115613d3357613d326134e4565b5b92915050565b7f544f4b454e3a2042616c616e636520657863656564732077616c6c65742073695f8201527f7a65210000000000000000000000000000000000000000000000000000000000602082015250565b5f613d93602383612fd0565b9150613d9e82613d39565b604082019050919050565b5f6020820190508181035f830152613dc081613d87565b9050919050565b5f613dd182613060565b9150613ddc83613060565b9250828203905081811115613df457613df36134e4565b5b92915050565b7f416d6f756e74206d757374206265206c657373207468616e20746f74616c20725f8201527f65666c656374696f6e7300000000000000000000000000000000000000000000602082015250565b5f613e54602a83612fd0565b9150613e5f82613dfa565b604082019050919050565b5f6020820190508181035f830152613e8181613e48565b9050919050565b5f81519050613e9681612ec0565b92915050565b5f60208284031215613eb157613eb0612dcd565b5b5f613ebe84828501613e88565b91505092915050565b5f819050919050565b5f613eea613ee5613ee084613ec7565b613104565b613060565b9050919050565b613efa81613ed0565b82525050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b613f3281612eaf565b82525050565b5f613f438383613f29565b60208301905092915050565b5f602082019050919050565b5f613f6582613f00565b613f6f8185613f0a565b9350613f7a83613f1a565b805f5b83811015613faa578151613f918882613f38565b9750613f9c83613f4f565b925050600181019050613f7d565b5085935050505092915050565b5f60a082019050613fca5f830188613178565b613fd76020830187613ef1565b8181036040830152613fe98186613f5b565b9050613ff86060830185613224565b6140056080830184613178565b9695505050505050565b7f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f5f8201527f7700000000000000000000000000000000000000000000000000000000000000602082015250565b5f614069602183612fd0565b91506140748261400f565b604082019050919050565b5f6020820190508181035f8301526140968161405d565b9050919050565b7f536166654d6174683a206164646974696f6e206f766572666c6f7700000000005f82015250565b5f6140d1601b83612fd0565b91506140dc8261409d565b602082019050919050565b5f6020820190508181035f8301526140fe816140c5565b905091905056fe45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365a2646970667358221220ec70256bf9ba8c1320a622664c0197ac528eb8114d6f85513378ced30f21025164736f6c63430008140033",
    "runtime_bytecode": "6080604052600436106101da575f3560e01c8063751039fc11610101578063a2a957bb11610094578063c492f04611610063578063c492f04614610661578063dd62ed3e14610689578063ea1644d5146106c5578063f2fde38b146106ed576101e1565b8063a2a957bb146105ab578063a9059cbb146105d3578063bfd792841461060f578063c3c8cd801461064b576101e1565b80638f70ccf7116100d05780638f70ccf7146105075780638f9a55c01461052f57806395d89b411461055957806398a5c31514610583576101e1565b8063751039fc146104615780637d1db4a5146104775780637f2feddc146104a15780638da5cb5b146104dd576101e1565b8063313ce567116101795780636fc3eaec116101485780636fc3eaec146103d157806370a08231146103e7578063715018a61461042357806374010ece14610439576101e1565b8063313ce5671461032d57806349bd5a5e146103575780636b999053146103815780636d8aa8f8146103a9576101e1565b80631694505e116101b55780631694505e1461027357806318160ddd1461029d57806323b872dd146102c75780632fd689e314610303576101e1565b8062b8cf2a146101e557806306fdde031461020d578063095ea7b314610237576101e1565b366101e157005b5f80fd5b3480156101f0575f80fd5b5061020b60048036038101906102069190612f7f565b610715565b005b348015610218575f80fd5b5061022161083a565b60405161022e9190613040565b60405180910390f35b348015610242575f80fd5b5061025d60048036038101906102589190613093565b610877565b60405161026a91906130eb565b60405180910390f35b34801561027e575f80fd5b50610287610894565b604051610294919061315f565b60405180910390f35b3480156102a8575f80fd5b506102b16108b9565b6040516102be9190613187565b60405180910390f35b3480156102d2575f80fd5b506102ed60048036038101906102e891906131a0565b6108c7565b6040516102fa91906130eb565b60405180910390f35b34801561030e575f80fd5b5061031761099b565b6040516103249190613187565b60405180910390f35b348015610338575f80fd5b506103416109a1565b60405161034e919061320b565b60405180910390f35b348015610362575f80fd5b5061036b6109a9565b6040516103789190613233565b60405180910390f35b34801561038c575f80fd5b506103a760048036038101906103a2919061324c565b6109ce565b005b3480156103b4575f80fd5b506103cf60048036038101906103ca91906132a1565b610ab9565b005b3480156103dc575f80fd5b506103e5610b6a565b005b3480156103f2575f80fd5b5061040d6004803603810190610408919061324c565b610c37565b60405161041a9190613187565b60405180910390f35b34801561042e575f80fd5b50610437610c85565b005b348015610444575f80fd5b5061045f600480360381019061045a91906132cc565b610dd3565b005b34801561046c575f80fd5b50610475610e9a565b005b348015610482575f80fd5b5061048b610f4c565b6040516104989190613187565b60405180910390f35b3480156104ac575f80fd5b506104c760048036038101906104c2919061324c565b610f52565b6040516104d49190613187565b60405180910390f35b3480156104e8575f80fd5b506104f1610f67565b6040516104fe9190613233565b60405180910390f35b348015610512575f80fd5b5061052d600480360381019061052891906132a1565b610f8e565b005b34801561053a575f80fd5b5061054361103f565b6040516105509190613187565b60405180910390f35b348015610564575f80fd5b5061056d611045565b60405161057a9190613040565b60405180910390f35b34801561058e575f80fd5b506105a960048036038101906105a491906132cc565b611082565b005b3480156105b6575f80fd5b506105d160048036038101906105cc91906132f7565b611120565b005b3480156105de575f80fd5b506105f960048036038101906105f49190613093565b611316565b60405161060691906130eb565b60405180910390f35b34801561061a575f80fd5b506106356004803603810190610630919061324c565b611333565b60405161064291906130eb565b60405180910390f35b348015610656575f80fd5b5061065f611350565b005b34801561066c575f80fd5b50610687600480360381019061068291906133b4565b611425565b005b348015610694575f80fd5b506106af60048036038101906106aa9190613411565b61155a565b6040516106bc9190613187565b60405180910390f35b3480156106d0575f80fd5b506106eb60048036038101906106e691906132cc565b6115dc565b005b3480156106f8575f80fd5b50610713600480360381019061070e919061324c565b6116a3565b005b61071d611860565b73ffffffffffffffffffffffffffffffffffffffff165f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146107a9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107a090613499565b60405180910390fd5b5f5b815181101561083657600160105f8484815181106107cc576107cb6134b7565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550808061082e90613511565b9150506107ab565b5050565b60606040518060400160405280600a81526020017f4d415452495820424f5400000000000000000000000000000000000000000000815250905090565b5f61088a610883611860565b8484611867565b6001905092915050565b60145f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f66038d7ea4c68000905090565b5f6108d3848484611a2a565b610990846108df611860565b61098b856040518060600160405280602881526020016141066028913960045f8b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f610942611860565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205461228a9092919063ffffffff16565b611867565b600190509392505050565b60185481565b5f6009905090565b60155f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6109d6611860565b73ffffffffffffffffffffffffffffffffffffffff165f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610a62576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a5990613499565b60405180910390fd5b5f60105f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff02191690831515021790555050565b610ac1611860565b73ffffffffffffffffffffffffffffffffffffffff165f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610b4d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b4490613499565b60405180910390fd5b80601560166101000a81548160ff02191690831515021790555050565b60125f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610baa611860565b73ffffffffffffffffffffffffffffffffffffffff161480610c1f575060135f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610c07611860565b73ffffffffffffffffffffffffffffffffffffffff16145b610c27575f80fd5b5f479050610c34816122ec565b50565b5f610c7e60025f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054612405565b9050919050565b610c8d611860565b73ffffffffffffffffffffffffffffffffffffffff165f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610d19576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d1090613499565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff165f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35f805f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b610ddb611860565b73ffffffffffffffffffffffffffffffffffffffff165f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610e67576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e5e90613499565b60405180910390fd5b5f8111610e72575f80fd5b60648166038d7ea4c68000610e879190613558565b610e9191906135c6565b60168190555050565b610ea2611860565b73ffffffffffffffffffffffffffffffffffffffff165f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610f2e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f2590613499565b60405180910390fd5b66038d7ea4c6800060168190555066038d7ea4c68000601781905550565b60165481565b6011602052805f5260405f205f915090505481565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610f96611860565b73ffffffffffffffffffffffffffffffffffffffff165f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611022576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161101990613499565b60405180910390fd5b80601560146101000a81548160ff02191690831515021790555050565b60175481565b60606040518060400160405280600281526020017f4d42000000000000000000000000000000000000000000000000000000000000815250905090565b61108a611860565b73ffffffffffffffffffffffffffffffffffffffff165f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611116576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161110d90613499565b60405180910390fd5b8060188190555050565b611128611860565b73ffffffffffffffffffffffffffffffffffffffff165f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146111b4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111ab90613499565b60405180910390fd5b5f84101580156111c5575060058411155b611204576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111fb90613666565b60405180910390fd5b5f8210158015611215575060328211155b611254576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161124b906136f4565b60405180910390fd5b5f8310158015611265575060058311155b6112a4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161129b90613782565b60405180910390fd5b5f81101580156112b5575060638111155b6112f4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112eb90613810565b60405180910390fd5b8360088190555082600a819055508160098190555080600b8190555050505050565b5f611329611322611860565b8484611a2a565b6001905092915050565b6010602052805f5260405f205f915054906101000a900460ff1681565b60125f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16611390611860565b73ffffffffffffffffffffffffffffffffffffffff161480611405575060135f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166113ed611860565b73ffffffffffffffffffffffffffffffffffffffff16145b61140d575f80fd5b5f61141730610c37565b905061142281612471565b50565b61142d611860565b73ffffffffffffffffffffffffffffffffffffffff165f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146114b9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114b090613499565b60405180910390fd5b5f5b83839050811015611554578160055f8686858181106114dd576114dc6134b7565b5b90506020020160208101906114f2919061324c565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550808061154c90613511565b9150506114bb565b50505050565b5f60045f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b6115e4611860565b73ffffffffffffffffffffffffffffffffffffffff165f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611670576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161166790613499565b60405180910390fd5b5f811161167b575f80fd5b60648166038d7ea4c680006116909190613558565b61169a91906135c6565b60178190555050565b6116ab611860565b73ffffffffffffffffffffffffffffffffffffffff165f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611737576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161172e90613499565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036117a5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161179c9061389e565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff165f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3805f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b5f33905090565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036118d5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016118cc9061392c565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611943576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161193a906139ba565b60405180910390fd5b8060045f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92583604051611a1d9190613187565b60405180910390a3505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611a98576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a8f90613a48565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611b06576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611afd90613ad6565b60405180910390fd5b5f8111611b48576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b3f90613b64565b60405180910390fd5b611b50610f67565b73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614158015611bbe5750611b8e610f67565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b15611f9757601560149054906101000a900460ff16611c4d57611bdf610f67565b73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614611c4c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611c4390613bf2565b60405180910390fd5b5b601654811115611c92576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611c8990613c5a565b60405180910390fd5b60105f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16158015611d30575060105f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16155b611d6f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611d6690613ce8565b60405180910390fd5b60155f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614611e1b5760175481611dd084610c37565b611dda9190613d06565b10611e1a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611e1190613da9565b60405180910390fd5b5b5f611e2530610c37565b90505f60185482101590506016548210611e3f5760165491505b808015611e57575060158054906101000a900460ff16155b8015611eb0575060155f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614155b8015611ec85750601560169054906101000a900460ff165b8015611f1b575060055f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16155b8015611f6e575060055f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16155b15611f9457611f7c82612471565b5f4790505f811115611f9257611f91476122ec565b5b505b50505b5f6001905060055f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff1680612037575060055f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff165b806120e8575060155f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16141580156120e7575060155f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614155b5b156120f5575f9050612278565b60155f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614801561219e575060145f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614155b156121b657600854600c81905550600954600d819055505b60155f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614801561225f575060145f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614155b1561227757600a54600c81905550600b54600d819055505b5b612284848484846126da565b50505050565b5f8383111582906122d1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016122c89190613040565b60405180910390fd5b505f83856122df9190613dc7565b9050809150509392505050565b60135f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc61234e600561234060038661270790919063ffffffff16565b61277e90919063ffffffff16565b90811502906040515f60405180830381858888f19350505050158015612376573d5f803e3d5ffd5b5060125f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc6123d960056123cb60028661270790919063ffffffff16565b61277e90919063ffffffff16565b90811502906040515f60405180830381858888f19350505050158015612401573d5f803e3d5ffd5b5050565b5f60065482111561244b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161244290613e6a565b60405180910390fd5b5f6124546127c7565b9050612469818461277e90919063ffffffff16565b915050919050565b60016015806101000a81548160ff0219169083151502179055505f600267ffffffffffffffff8111156124a7576124a6612de9565b5b6040519080825280602002602001820160405280156124d55781602001602082028036833780820191505090505b50905030815f815181106124ec576124eb6134b7565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505060145f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa158015612590573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906125b49190613e9c565b816001815181106125c8576125c76134b7565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505061262e3060145f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1684611867565b60145f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663791ac947835f8430426040518663ffffffff1660e01b8152600401612690959493929190613fb7565b5f604051808303815f87803b1580156126a7575f80fd5b505af11580156126b9573d5f803e3d5ffd5b50505050505f6015806101000a81548160ff02191690831515021790555050565b806126e8576126e76127f0565b5b6126f3848484612829565b80612701576127006129e9565b5b50505050565b5f808303612717575f9050612778565b5f82846127249190613558565b905082848261273391906135c6565b14612773576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161276a9061407f565b60405180910390fd5b809150505b92915050565b5f6127bf83836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f0000000000008152506129fd565b905092915050565b5f805f6127d2612a5e565b915091506127e9818361277e90919063ffffffff16565b9250505090565b5f600c5414801561280257505f600d54145b61282757600c54600e81905550600d54600f819055505f600c819055505f600d819055505b565b5f805f805f8061283887612ab7565b9550955095509550955095506128948660025f8c73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054612b1790919063ffffffff16565b60025f8b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055506129258560025f8b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054612b6090919063ffffffff16565b60025f8a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208190555061296f81612bbd565b6129798483612c74565b8773ffffffffffffffffffffffffffffffffffffffff168973ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef856040516129d69190613187565b60405180910390a3505050505050505050565b600e54600c81905550600f54600d81905550565b5f8083118290612a43576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612a3a9190613040565b60405180910390fd5b505f8385612a5191906135c6565b9050809150509392505050565b5f805f60065490505f66038d7ea4c680009050612a8d66038d7ea4c6800060065461277e90919063ffffffff16565b821015612aaa5760065466038d7ea4c68000935093505050612ab3565b81819350935050505b9091565b5f805f805f805f805f612acf8a600c54600d54612cae565b9250925092505f612ade6127c7565b90505f805f612aef8e878787612d40565b9250925092508282828989899c509c509c509c509c509c505050505050505091939550919395565b5f612b5883836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525061228a565b905092915050565b5f808284612b6e9190613d06565b905083811015612bb3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612baa906140e7565b60405180910390fd5b8091505092915050565b5f612bc66127c7565b90505f612bdc828461270790919063ffffffff16565b9050612c2e8160025f3073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054612b6090919063ffffffff16565b60025f3073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505050565b612c8982600654612b1790919063ffffffff16565b600681905550612ca481600754612b6090919063ffffffff16565b6007819055505050565b5f805f80612cd86064612cca888a61270790919063ffffffff16565b61277e90919063ffffffff16565b90505f612d016064612cf3888b61270790919063ffffffff16565b61277e90919063ffffffff16565b90505f612d2982612d1b858c612b1790919063ffffffff16565b612b1790919063ffffffff16565b905080838395509550955050505093509350939050565b5f805f80612d57858961270790919063ffffffff16565b90505f612d6d868961270790919063ffffffff16565b90505f612d83878961270790919063ffffffff16565b90505f612dab82612d9d8587612b1790919063ffffffff16565b612b1790919063ffffffff16565b9050838184965096509650505050509450945094915050565b5f604051905090565b5f80fd5b5f80fd5b5f80fd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b612e1f82612dd9565b810181811067ffffffffffffffff82111715612e3e57612e3d612de9565b5b80604052505050565b5f612e50612dc4565b9050612e5c8282612e16565b919050565b5f67ffffffffffffffff821115612e7b57612e7a612de9565b5b602082029050602081019050919050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f612eb982612e90565b9050919050565b612ec981612eaf565b8114612ed3575f80fd5b50565b5f81359050612ee481612ec0565b92915050565b5f612efc612ef784612e61565b612e47565b90508083825260208201905060208402830185811115612f1f57612f1e612e8c565b5b835b81811015612f485780612f348882612ed6565b845260208401935050602081019050612f21565b5050509392505050565b5f82601f830112612f6657612f65612dd5565b5b8135612f76848260208601612eea565b91505092915050565b5f60208284031215612f9457612f93612dcd565b5b5f82013567ffffffffffffffff811115612fb157612fb0612dd1565b5b612fbd84828501612f52565b91505092915050565b5f81519050919050565b5f82825260208201905092915050565b5f5b83811015612ffd578082015181840152602081019050612fe2565b5f8484015250505050565b5f61301282612fc6565b61301c8185612fd0565b935061302c818560208601612fe0565b61303581612dd9565b840191505092915050565b5f6020820190508181035f8301526130588184613008565b905092915050565b5f819050919050565b61307281613060565b811461307c575f80fd5b50565b5f8135905061308d81613069565b92915050565b5f80604083850312156130a9576130a8612dcd565b5b5f6130b685828601612ed6565b92505060206130c78582860161307f565b9150509250929050565b5f8115159050919050565b6130e5816130d1565b82525050565b5f6020820190506130fe5f8301846130dc565b92915050565b5f819050919050565b5f61312761312261311d84612e90565b613104565b612e90565b9050919050565b5f6131388261310d565b9050919050565b5f6131498261312e565b9050919050565b6131598161313f565b82525050565b5f6020820190506131725f830184613150565b92915050565b61318181613060565b82525050565b5f60208201905061319a5f830184613178565b92915050565b5f805f606084860312156131b7576131b6612dcd565b5b5f6131c486828701612ed6565b93505060206131d586828701612ed6565b92505060406131e68682870161307f565b9150509250925092565b5f60ff82169050919050565b613205816131f0565b82525050565b5f60208201905061321e5f8301846131fc565b92915050565b61322d81612eaf565b82525050565b5f6020820190506132465f830184613224565b92915050565b5f6020828403121561326157613260612dcd565b5b5f61326e84828501612ed6565b91505092915050565b613280816130d1565b811461328a575f80fd5b50565b5f8135905061329b81613277565b92915050565b5f602082840312156132b6576132b5612dcd565b5b5f6132c38482850161328d565b91505092915050565b5f602082840312156132e1576132e0612dcd565b5b5f6132ee8482850161307f565b91505092915050565b5f805f806080858703121561330f5761330e612dcd565b5b5f61331c8782880161307f565b945050602061332d8782880161307f565b935050604061333e8782880161307f565b925050606061334f8782880161307f565b91505092959194509250565b5f80fd5b5f8083601f84011261337457613373612dd5565b5b8235905067ffffffffffffffff8111156133915761339061335b565b5b6020830191508360208202830111156133ad576133ac612e8c565b5b9250929050565b5f805f604084860312156133cb576133ca612dcd565b5b5f84013567ffffffffffffffff8111156133e8576133e7612dd1565b5b6133f48682870161335f565b935093505060206134078682870161328d565b9150509250925092565b5f806040838503121561342757613426612dcd565b5b5f61343485828601612ed6565b925050602061344585828601612ed6565b9150509250929050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65725f82015250565b5f613483602083612fd0565b915061348e8261344f565b602082019050919050565b5f6020820190508181035f8301526134b081613477565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61351b82613060565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361354d5761354c6134e4565b5b600182019050919050565b5f61356282613060565b915061356d83613060565b925082820261357b81613060565b91508282048414831517613592576135916134e4565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f6135d082613060565b91506135db83613060565b9250826135eb576135ea613599565b5b828204905092915050565b7f4275792072657761726473206d757374206265206265747765656e20302520615f8201527f6e64203525000000000000000000000000000000000000000000000000000000602082015250565b5f613650602583612fd0565b915061365b826135f6565b604082019050919050565b5f6020820190508181035f83015261367d81613644565b9050919050565b7f42757920746178206d757374206265206265747765656e20302520616e6420355f8201527f3025000000000000000000000000000000000000000000000000000000000000602082015250565b5f6136de602283612fd0565b91506136e982613684565b604082019050919050565b5f6020820190508181035f83015261370b816136d2565b9050919050565b7f53656c6c2072657761726473206d757374206265206265747765656e203025205f8201527f616e642035250000000000000000000000000000000000000000000000000000602082015250565b5f61376c602683612fd0565b915061377782613712565b604082019050919050565b5f6020820190508181035f83015261379981613760565b9050919050565b7f53656c6c20746178206d757374206265206265747765656e20302520616e64205f8201527f3939250000000000000000000000000000000000000000000000000000000000602082015250565b5f6137fa602383612fd0565b9150613805826137a0565b604082019050919050565b5f6020820190508181035f830152613827816137ee565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f20615f8201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b5f613888602683612fd0565b91506138938261382e565b604082019050919050565b5f6020820190508181035f8301526138b58161387c565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f206164645f8201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b5f613916602483612fd0565b9150613921826138bc565b604082019050919050565b5f6020820190508181035f8301526139438161390a565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f2061646472655f8201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b5f6139a4602283612fd0565b91506139af8261394a565b604082019050919050565b5f6020820190508181035f8301526139d181613998565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f2061645f8201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b5f613a32602583612fd0565b9150613a3d826139d8565b604082019050919050565b5f6020820190508181035f830152613a5f81613a26565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f20616464725f8201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b5f613ac0602383612fd0565b9150613acb82613a66565b604082019050919050565b5f6020820190508181035f830152613aed81613ab4565b9050919050565b7f5472616e7366657220616d6f756e74206d7573742062652067726561746572205f8201527f7468616e207a65726f0000000000000000000000000000000000000000000000602082015250565b5f613b4e602983612fd0565b9150613b5982613af4565b604082019050919050565b5f6020820190508181035f830152613b7b81613b42565b9050919050565b7f544f4b454e3a2054686973206163636f756e742063616e6e6f742073656e64205f8201527f746f6b656e7320756e74696c2074726164696e6720697320656e61626c656400602082015250565b5f613bdc603f83612fd0565b9150613be782613b82565b604082019050919050565b5f6020820190508181035f830152613c0981613bd0565b9050919050565b7f544f4b454e3a204d6178205472616e73616374696f6e204c696d6974000000005f82015250565b5f613c44601c83612fd0565b9150613c4f82613c10565b602082019050919050565b5f6020820190508181035f830152613c7181613c38565b9050919050565b7f544f4b454e3a20596f7572206163636f756e7420697320626c61636b6c6973745f8201527f6564210000000000000000000000000000000000000000000000000000000000602082015250565b5f613cd2602383612fd0565b9150613cdd82613c78565b604082019050919050565b5f6020820190508181035f830152613cff81613cc6565b9050919050565b5f613d1082613060565b9150613d1b83613060565b9250828201905080821115613d3357613d326134e4565b5b92915050565b7f544f4b454e3a2042616c616e636520657863656564732077616c6c65742073695f8201527f7a65210000000000000000000000000000000000000000000000000000000000602082015250565b5f613d93602383612fd0565b9150613d9e82613d39565b604082019050919050565b5f6020820190508181035f830152613dc081613d87565b9050919050565b5f613dd182613060565b9150613ddc83613060565b9250828203905081811115613df457613df36134e4565b5b92915050565b7f416d6f756e74206d757374206265206c657373207468616e20746f74616c20725f8201527f65666c656374696f6e7300000000000000000000000000000000000000000000602082015250565b5f613e54602a83612fd0565b9150613e5f82613dfa565b604082019050919050565b5f6020820190508181035f830152613e8181613e48565b9050919050565b5f81519050613e9681612ec0565b92915050565b5f60208284031215613eb157613eb0612dcd565b5b5f613ebe84828501613e88565b91505092915050565b5f819050919050565b5f613eea613ee5613ee084613ec7565b613104565b613060565b9050919050565b613efa81613ed0565b82525050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b613f3281612eaf565b82525050565b5f613f438383613f29565b60208301905092915050565b5f602082019050919050565b5f613f6582613f00565b613f6f8185613f0a565b9350613f7a83613f1a565b805f5b83811015613faa578151613f918882613f38565b9750613f9c83613f4f565b925050600181019050613f7d565b5085935050505092915050565b5f60a082019050613fca5f830188613178565b613fd76020830187613ef1565b8181036040830152613fe98186613f5b565b9050613ff86060830185613224565b6140056080830184613178565b9695505050505050565b7f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f5f8201527f7700000000000000000000000000000000000000000000000000000000000000602082015250565b5f614069602183612fd0565b91506140748261400f565b604082019050919050565b5f6020820190508181035f8301526140968161405d565b9050919050565b7f536166654d6174683a206164646974696f6e206f766572666c6f7700000000005f82015250565b5f6140d1601b83612fd0565b91506140dc8261409d565b602082019050919050565b5f6020820190508181035f8301526140fe816140c5565b905091905056fe45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365a2646970667358221220ec70256bf9ba8c1320a622664c0197ac528eb8114d6f85513378ced30f21025164736f6c63430008140033",
    "contract_name": "MATRIXBOT",
    "compiler_version": "v0.8.20+commit.a1b79de6",
    "optimization_used": "0",
    "runs": "200",
    "abi": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_maxTxAmount\",\"type\":\"uint256\"}],\"name\":\"MaxTxAmountUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"_buyMap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_maxTxAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_maxWalletSize\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_swapTokensAtAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"bots_\",\"type\":\"address[]\"}],\"name\":\"blockBots\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"bots\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"bool\",\"name\":\"excluded\",\"type\":\"bool\"}],\"name\":\"excludeMultipleAccountsFromFees\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"manualsend\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"manualswap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"removeLimits\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"redisFeeOnBuy\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"redisFeeOnSell\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"taxFeeOnBuy\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"taxFeeOnSell\",\"type\":\"uint256\"}],\"name\":\"setFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountPercent\",\"type\":\"uint256\"}],\"name\":\"setMaxTxnAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountPercent\",\"type\":\"uint256\"}],\"name\":\"setMaxWalletSize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"swapTokensAtAmount\",\"type\":\"uint256\"}],\"name\":\"setMinSwapTokensThreshold\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_tradingOpen\",\"type\":\"bool\"}],\"name\":\"setTrading\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_swapEnabled\",\"type\":\"bool\"}],\"name\":\"toggleSwap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"notbot\",\"type\":\"address\"}],\"name\":\"unblockBot\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"uniswapV2Pair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"uniswapV2Router\",\"outputs\":[{\"internalType\":\"contract IUniswapV2Router02\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]",
    "source_code": "/**\r\n\r\nTwitter: https://twitter.com/MatrixBot_ERC\r\n\r\nWebsite: https://matrixbot.vip\r\n\r\nTelegram: https://t.me/MatrixBotETH\r\n\r\n*/\r\n\r\n// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.9;\r\n\r\n \r\nabstract contract Context {\r\n    function _msgSender() internal view virtual returns (address) {\r\n        return msg.sender;\r\n    }\r\n}\r\n \r\ninterface IERC20 {\r\n    function totalSupply() external view returns (uint256);\r\n \r\n    function balanceOf(address account) external view returns (uint256);\r\n \r\n    function transfer(address recipient, uint256 amount) external returns (bool);\r\n \r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n \r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n \r\n    function transferFrom(\r\n        address sender,\r\n        address recipient,\r\n        uint256 amount\r\n    ) external returns (bool);\r\n \r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n    event Approval(\r\n        address indexed owner,\r\n        address indexed spender,\r\n        uint256 value\r\n    );\r\n}\r\n \r\ncontract Ownable is Context {\r\n    address internal _owner;\r\n    address private _previousOwner;\r\n    event OwnershipTransferred(\r\n        address indexed previousOwner,\r\n        address indexed newOwner\r\n    );\r\n \r\n    constructor() {\r\n        address msgSender = _msgSender();\r\n        _owner = msgSender;\r\n        emit OwnershipTransferred(address(0), msgSender);\r\n    }\r\n \r\n    function owner() public view returns (address) {\r\n        return _owner;\r\n    }\r\n \r\n    modifier onlyOwner() {\r\n        require(_owner == _msgSender(), \"Ownable: caller is not the owner\");\r\n        _;\r\n    }\r\n \r\n    function renounceOwnership() public virtual onlyOwner {\r\n        emit OwnershipTransferred(_owner, address(0));\r\n        _owner = address(0);\r\n    }\r\n \r\n    function transferOwnership(address newOwner) public virtual onlyOwner {\r\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\r\n        emit OwnershipTransferred(_owner, newOwner);\r\n        _owner = newOwner;\r\n    }\r\n \r\n}\r\n\r\nlibrary SafeMath {\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a + b;\r\n        require(c >= a, \"SafeMath: addition overflow\");\r\n        return c;\r\n    }\r\n \r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return sub(a, b, \"SafeMath: subtraction overflow\");\r\n    }\r\n \r\n    function sub(\r\n        uint256 a,\r\n        uint256 b,\r\n        string memory errorMessage\r\n    ) internal pure returns (uint256) {\r\n        require(b <= a, errorMessage);\r\n        uint256 c = a - b;\r\n        return c;\r\n    }\r\n \r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        if (a == 0) {\r\n            return 0;\r\n        }\r\n        uint256 c = a * b;\r\n        require(c / a == b, \"SafeMath: multiplication overflow\");\r\n        return c;\r\n    }\r\n \r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return div(a, b, \"SafeMath: division by zero\");\r\n    }\r\n \r\n    function div(\r\n        uint256 a,\r\n        uint256 b,\r\n        string memory errorMessage\r\n    ) internal pure returns (uint256) {\r\n        require(b > 0, errorMessage);\r\n        uint256 c = a / b;\r\n        return c;\r\n    }\r\n}\r\n \r\ninterface IUniswapV2Factory {\r\n    function createPair(address tokenA, address tokenB)\r\n        external\r\n        returns (address pair);\r\n}\r\n \r\ninterface IUniswapV2Router02 {\r\n    function swapExactTokensForETHSupportingFeeOnTransferTokens(\r\n        uint256 amountIn,\r\n        uint256 amountOutMin,\r\n        address[] calldata path,\r\n        address to,\r\n        uint256 deadline\r\n    ) external;\r\n \r\n    function factory() external pure returns (address);\r\n \r\n    function WETH() external pure returns (address);\r\n \r\n    function addLiquidityETH(\r\n        address token,\r\n        uint256 amountTokenDesired,\r\n        uint256 amountTokenMin,\r\n        uint256 amountETHMin,\r\n        address to,\r\n        uint256 deadline\r\n    )\r\n        external\r\n        payable\r\n        returns (\r\n            uint256 amountToken,\r\n            uint256 amountETH,\r\n            uint256 liquidity\r\n        );\r\n}\r\n \r\ncontract MATRIXBOT is Context, IERC20, Ownable {\r\n \r\n    using SafeMath for uint256;\r\n \r\n    string private constant _name = \"MATRIX BOT\";\r\n    string private constant _symbol = \"MB\";\r\n    uint8 private constant _decimals = 9;\r\n \r\n    mapping(address => uint256) private _rOwned;\r\n    mapping(address => uint256) private _tOwned;\r\n    mapping(address => mapping(address => uint256)) private _allowances;\r\n    mapping(address => bool) private _isExcludedFromFee;\r\n    uint256 private constant MAX = ~uint256(0);\r\n    uint256 private constant _tTotal = 1000000 * 10**9;\r\n    uint256 private _rTotal = (MAX - (MAX % _tTotal));\r\n    uint256 private _tFeeTotal;\r\n    uint256 private _redisFeeOnBuy = 0;  \r\n    uint256 private _taxFeeOnBuy = 25;  \r\n    uint256 private _redisFeeOnSell = 0;  \r\n    uint256 private _taxFeeOnSell = 25;\r\n \r\n    uint256 private _redisFee = _redisFeeOnSell;\r\n    uint256 private _taxFee = _taxFeeOnSell;\r\n \r\n    uint256 private _previousredisFee = _redisFee;\r\n    uint256 private _previoustaxFee = _taxFee;\r\n \r\n    mapping(address => bool) public bots; mapping (address => uint256) public _buyMap; \r\n    address payable private _developmentAddress = payable(0x0ac499464984579eCfe342930B8d249cb6ebaFda); \r\n    address payable private _marketingAddress = payable(0x0ac499464984579eCfe342930B8d249cb6ebaFda);\r\n \r\n    IUniswapV2Router02 public uniswapV2Router;\r\n    address public uniswapV2Pair;\r\n \r\n    bool private tradingOpen;\r\n    bool private inSwap = false;\r\n    bool private swapEnabled = true;\r\n \r\n    uint256 public _maxTxAmount = _tTotal.mul(2).div(100);\r\n    uint256 public _maxWalletSize = _tTotal.mul(2).div(100); \r\n    uint256 public _swapTokensAtAmount = _tTotal.mul(1).div(1000);\r\n \r\n    event MaxTxAmountUpdated(uint256 _maxTxAmount);\r\n    modifier lockTheSwap {\r\n        inSwap = true;\r\n        _;\r\n        inSwap = false;\r\n    }\r\n \r\n    constructor() {\r\n \r\n        _rOwned[_msgSender()] = _rTotal;\r\n \r\n        IUniswapV2Router02 _uniswapV2Router = IUniswapV2Router02(0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D);\r\n        uniswapV2Router = _uniswapV2Router;\r\n        uniswapV2Pair = IUniswapV2Factory(_uniswapV2Router.factory())\r\n            .createPair(address(this), _uniswapV2Router.WETH());\r\n \r\n        _isExcludedFromFee[owner()] = true;\r\n        _isExcludedFromFee[address(this)] = true;\r\n        _isExcludedFromFee[_developmentAddress] = true;\r\n        _isExcludedFromFee[_marketingAddress] = true;\r\n \r\n        emit Transfer(address(0), _msgSender(), _tTotal);\r\n    }\r\n \r\n    function name() public pure returns (string memory) {\r\n        return _name;\r\n    }\r\n \r\n    function symbol() public pure returns (string memory) {\r\n        return _symbol;\r\n    }\r\n \r\n    function decimals() public pure returns (uint8) {\r\n        return _decimals;\r\n    }\r\n \r\n    function totalSupply() public pure override returns (uint256) {\r\n        return _tTotal;\r\n    }\r\n \r\n    function balanceOf(address account) public view override returns (uint256) {\r\n        return tokenFromReflection(_rOwned[account]);\r\n    }\r\n \r\n    function transfer(address recipient, uint256 amount)\r\n        public\r\n        override\r\n        returns (bool)\r\n    {\r\n        _transfer(_msgSender(), recipient, amount);\r\n        return true;\r\n    }\r\n \r\n    function allowance(address owner, address spender)\r\n        public\r\n        view\r\n        override\r\n        returns (uint256)\r\n    {\r\n        return _allowances[owner][spender];\r\n    }\r\n \r\n    function approve(address spender, uint256 amount)\r\n        public\r\n        override\r\n        returns (bool)\r\n    {\r\n        _approve(_msgSender(), spender, amount);\r\n        return true;\r\n    }\r\n \r\n    function transferFrom(\r\n        address sender,\r\n        address recipient,\r\n        uint256 amount\r\n    ) public override returns (bool) {\r\n        _transfer(sender, recipient, amount);\r\n        _approve(\r\n            sender,\r\n            _msgSender(),\r\n            _allowances[sender][_msgSender()].sub(\r\n                amount,\r\n                \"ERC20: transfer amount exceeds allowance\"\r\n            )\r\n        );\r\n        return true;\r\n    }\r\n \r\n    function tokenFromReflection(uint256 rAmount)\r\n        private\r\n        view\r\n        returns (uint256)\r\n    {\r\n        require(\r\n            rAmount <= _rTotal,\r\n            \"Amount must be less than total reflections\"\r\n        );\r\n        uint256 currentRate = _getRate();\r\n        return rAmount.div(currentRate);\r\n    }\r\n \r\n    function removeAllFee() private {\r\n        if (_redisFee == 0 && _taxFee == 0) return;\r\n \r\n        _previousredisFee = _redisFee;\r\n        _previoustaxFee = _taxFee;\r\n \r\n        _redisFee = 0;\r\n        _taxFee = 0;\r\n    }\r\n \r\n    function restoreAllFee() private {\r\n        _redisFee = _previousredisFee;\r\n        _taxFee = _previoustaxFee;\r\n    }\r\n \r\n    function _approve(\r\n        address owner,\r\n        address spender,\r\n        uint256 amount\r\n    ) private {\r\n        require(owner != address(0), \"ERC20: approve from the zero address\");\r\n        require(spender != address(0), \"ERC20: approve to the zero address\");\r\n        _allowances[owner][spender] = amount;\r\n        emit Approval(owner, spender, amount);\r\n    }\r\n \r\n    function _transfer(\r\n        address from,\r\n        address to,\r\n        uint256 amount\r\n    ) private {\r\n        require(from != address(0), \"ERC20: transfer from the zero address\");\r\n        require(to != address(0), \"ERC20: transfer to the zero address\");\r\n        require(amount > 0, \"Transfer amount must be greater than zero\");\r\n \r\n        if (from != owner() && to != owner()) {\r\n \r\n            //Trade start check\r\n            if (!tradingOpen) {\r\n                require(from == owner(), \"TOKEN: This account cannot send tokens until trading is enabled\");\r\n            }\r\n \r\n            require(amount <= _maxTxAmount, \"TOKEN: Max Transaction Limit\");\r\n            require(!bots[from] && !bots[to], \"TOKEN: Your account is blacklisted!\");\r\n \r\n            if(to != uniswapV2Pair) {\r\n                require(balanceOf(to) + amount < _maxWalletSize, \"TOKEN: Balance exceeds wallet size!\");\r\n            }\r\n \r\n            uint256 contractTokenBalance = balanceOf(address(this));\r\n            bool canSwap = contractTokenBalance >= _swapTokensAtAmount;\r\n \r\n            if(contractTokenBalance >= _maxTxAmount)\r\n            {\r\n                contractTokenBalance = _maxTxAmount;\r\n            }\r\n \r\n            if (canSwap && !inSwap && from != uniswapV2Pair && swapEnabled && !_isExcludedFromFee[from] && !_isExcludedFromFee[to]) {\r\n                swapTokensForEth(contractTokenBalance);\r\n                uint256 contractETHBalance = address(this).balance;\r\n                if (contractETHBalance > 0) {\r\n                    sendETHToFee(address(this).balance);\r\n                }\r\n            }\r\n        }\r\n \r\n        bool takeFee = true;\r\n \r\n        //Transfer Tokens\r\n        if ((_isExcludedFromFee[from] || _isExcludedFromFee[to]) || (from != uniswapV2Pair && to != uniswapV2Pair)) {\r\n            takeFee = false;\r\n        } else {\r\n \r\n            //Set Fee for Buys\r\n            if(from == uniswapV2Pair && to != address(uniswapV2Router)) {\r\n                _redisFee = _redisFeeOnBuy;\r\n                _taxFee = _taxFeeOnBuy;\r\n            }\r\n \r\n            //Set Fee for Sells\r\n            if (to == uniswapV2Pair && from != address(uniswapV2Router)) {\r\n                _redisFee = _redisFeeOnSell;\r\n                _taxFee = _taxFeeOnSell;\r\n            }\r\n \r\n        }\r\n \r\n        _tokenTransfer(from, to, amount, takeFee);\r\n    }\r\n \r\n    function swapTokensForEth(uint256 tokenAmount) private lockTheSwap {\r\n        address[] memory path = new address[](2);\r\n        path[0] = address(this);\r\n        path[1] = uniswapV2Router.WETH();\r\n        _approve(address(this), address(uniswapV2Router), tokenAmount);\r\n        uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(\r\n            tokenAmount,\r\n            0,\r\n            path,\r\n            address(this),\r\n            block.timestamp\r\n        );\r\n    }\r\n \r\n    function sendETHToFee(uint256 amount) private {\r\n        _marketingAddress.transfer(amount.mul(3).div(5));\r\n        _developmentAddress.transfer(amount.mul(2).div(5));\r\n    }\r\n \r\n    function setTrading(bool _tradingOpen) public onlyOwner {\r\n        tradingOpen = _tradingOpen;\r\n    }\r\n \r\n    function manualswap() external {\r\n        require(_msgSender() == _developmentAddress || _msgSender() == _marketingAddress);\r\n        uint256 contractBalance = balanceOf(address(this));\r\n        swapTokensForEth(contractBalance);\r\n    }\r\n \r\n    function manualsend() external {\r\n        require(_msgSender() == _developmentAddress || _msgSender() == _marketingAddress);\r\n        uint256 contractETHBalance = address(this).balance;\r\n        sendETHToFee(contractETHBalance);\r\n    }\r\n \r\n    function blockBots(address[] memory bots_) public onlyOwner {\r\n        for (uint256 i = 0; i < bots_.length; i++) {\r\n            bots[bots_[i]] = true;\r\n        }\r\n    }\r\n \r\n    function unblockBot(address notbot) public onlyOwner {\r\n        bots[notbot] = false;\r\n    }\r\n \r\n    function _tokenTransfer(\r\n        address sender,\r\n        address recipient,\r\n        uint256 amount,\r\n        bool takeFee\r\n    ) private {\r\n        if (!takeFee) removeAllFee();\r\n        _transferStandard(sender, recipient, amount);\r\n        if (!takeFee) restoreAllFee();\r\n    }\r\n \r\n    function _transferStandard(\r\n        address sender,\r\n        address recipient,\r\n        uint256 tAmount\r\n    ) private {\r\n        (\r\n            uint256 rAmount,\r\n            uint256 rTransferAmount,\r\n            uint256 rFee,\r\n            uint256 tTransferAmount,\r\n            uint256 tFee,\r\n            uint256 tTeam\r\n        ) = _getValues(tAmount);\r\n        _rOwned[sender] = _rOwned[sender].sub(rAmount);\r\n        _rOwned[recipient] = _rOwned[recipient].add(rTransferAmount);\r\n        _takeTeam(tTeam);\r\n        _reflectFee(rFee, tFee);\r\n        emit Transfer(sender, recipient, tTransferAmount);\r\n    }\r\n \r\n    function _takeTeam(uint256 tTeam) private {\r\n        uint256 currentRate = _getRate();\r\n        uint256 rTeam = tTeam.mul(currentRate);\r\n        _rOwned[address(this)] = _rOwned[address(this)].add(rTeam);\r\n    }\r\n \r\n    function _reflectFee(uint256 rFee, uint256 tFee) private {\r\n        _rTotal = _rTotal.sub(rFee);\r\n        _tFeeTotal = _tFeeTotal.add(tFee);\r\n    }\r\n \r\n    receive() external payable {}\r\n \r\n    function _getValues(uint256 tAmount)\r\n        private\r\n        view\r\n        returns (\r\n            uint256,\r\n            uint256,\r\n            uint256,\r\n            uint256,\r\n            uint256,\r\n            uint256\r\n        )\r\n    {\r\n        (uint256 tTransferAmount, uint256 tFee, uint256 tTeam) =\r\n            _getTValues(tAmount, _redisFee, _taxFee);\r\n        uint256 currentRate = _getRate();\r\n        (uint256 rAmount, uint256 rTransferAmount, uint256 rFee) =\r\n            _getRValues(tAmount, tFee, tTeam, currentRate);\r\n        return (rAmount, rTransferAmount, rFee, tTransferAmount, tFee, tTeam);\r\n    }\r\n \r\n    function _getTValues(\r\n        uint256 tAmount,\r\n        uint256 redisFee,\r\n        uint256 taxFee\r\n    )\r\n        private\r\n        pure\r\n        returns (\r\n            uint256,\r\n            uint256,\r\n            uint256\r\n        )\r\n    {\r\n        uint256 tFee = tAmount.mul(redisFee).div(100);\r\n        uint256 tTeam = tAmount.mul(taxFee).div(100);\r\n        uint256 tTransferAmount = tAmount.sub(tFee).sub(tTeam);\r\n        return (tTransferAmount, tFee, tTeam);\r\n    }\r\n \r\n    function _getRValues(\r\n        uint256 tAmount,\r\n        uint256 tFee,\r\n        uint256 tTeam,\r\n        uint256 currentRate\r\n    )\r\n        private\r\n        pure\r\n        returns (\r\n            uint256,\r\n            uint256,\r\n            uint256\r\n        )\r\n    {\r\n        uint256 rAmount = tAmount.mul(currentRate);\r\n        uint256 rFee = tFee.mul(currentRate);\r\n        uint256 rTeam = tTeam.mul(currentRate);\r\n        uint256 rTransferAmount = rAmount.sub(rFee).sub(rTeam);\r\n        return (rAmount, rTransferAmount, rFee);\r\n    }\r\n \r\n    function _getRate() private view returns (uint256) {\r\n        (uint256 rSupply, uint256 tSupply) = _getCurrentSupply();\r\n        return rSupply.div(tSupply);\r\n    }\r\n \r\n    function _getCurrentSupply() private view returns (uint256, uint256) {\r\n        uint256 rSupply = _rTotal;\r\n        uint256 tSupply = _tTotal;\r\n        if (rSupply < _rTotal.div(_tTotal)) return (_rTotal, _tTotal);\r\n        return (rSupply, tSupply);\r\n    }\r\n \r\n    function setFee(uint256 redisFeeOnBuy, uint256 redisFeeOnSell, uint256 taxFeeOnBuy, uint256 taxFeeOnSell) public onlyOwner {\r\n        require(redisFeeOnBuy >= 0 && redisFeeOnBuy <= 5, \"Buy rewards must be between 0% and 5%\");\r\n        require(taxFeeOnBuy >= 0 && taxFeeOnBuy <= 50, \"Buy tax must be between 0% and 50%\");\r\n        require(redisFeeOnSell >= 0 && redisFeeOnSell <= 5, \"Sell rewards must be between 0% and 5%\");\r\n        require(taxFeeOnSell >= 0 && taxFeeOnSell <= 99, \"Sell tax must be between 0% and 99%\");\r\n\r\n        _redisFeeOnBuy = redisFeeOnBuy;\r\n        _redisFeeOnSell = redisFeeOnSell;\r\n        _taxFeeOnBuy = taxFeeOnBuy;\r\n        _taxFeeOnSell = taxFeeOnSell;\r\n\r\n    }\r\n \r\n    function setMinSwapTokensThreshold(uint256 swapTokensAtAmount) public onlyOwner {\r\n        _swapTokensAtAmount = swapTokensAtAmount;\r\n    }\r\n \r\n    function toggleSwap(bool _swapEnabled) public onlyOwner {\r\n        swapEnabled = _swapEnabled;\r\n    }\r\n \r\n    function setMaxTxnAmount(uint256 amountPercent) public onlyOwner {\r\n        require(amountPercent>0);\r\n        _maxTxAmount = (_tTotal * amountPercent ) / 100;\r\n    }\r\n\r\n    function setMaxWalletSize(uint256 amountPercent) public onlyOwner {\r\n        require(amountPercent>0);\r\n        _maxWalletSize = (_tTotal * amountPercent ) / 100;\r\n    }\r\n\r\n    function removeLimits() external onlyOwner{\r\n        _maxTxAmount = _tTotal;\r\n        _maxWalletSize = _tTotal;\r\n    }\r\n \r\n    function excludeMultipleAccountsFromFees(address[] calldata accounts, bool excluded) public onlyOwner {\r\n        for(uint256 i = 0; i < accounts.length; i++) {\r\n            _isExcludedFromFee[accounts[i]] = excluded;\r\n        }\r\n    }\r\n\r\n}",
    "etherscan_verified": true
}