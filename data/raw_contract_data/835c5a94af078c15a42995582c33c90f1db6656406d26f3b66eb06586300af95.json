{
    "address": "0x3E04B913dD981C1E6DF41aCBD8fB12A0B2A69171",
    "tx_hash": "835c5a94af078c15a42995582c33c90f1db6656406d26f3b66eb06586300af95",
    "block_number": 18000436,
    "timestamp": 1693072139,
    "gas_used_in_creation": 932693,
    "creation_bytecode": "",
    "runtime_bytecode": "60806040526004361061011e575f3560e01c8063715018a61161009d578063a0ab4b6211610062578063a0ab4b621461032d578063a9059cbb1461035b578063c816841b1461037a578063dd62ed3e14610399578063f4293890146103dd575f80fd5b8063715018a6146102b5578063821cd173146102c957806382bf293c146102de578063893d20e8146102fd57806395d89b4114610129575f80fd5b80632b112e49116100e35780632b112e49146102025780632f54bf6e14610216578063313ce56714610243578063495bb3ea1461026957806370a082311461028a575f80fd5b806306fdde0314610129578063095ea7b31461017257806311704f52146101a157806318160ddd146101c157806323b872dd146101e3575f80fd5b3661012557005b5f80fd5b348015610134575f80fd5b5061015c60405180604001604052806008815260200167444f47454241534560c01b81525081565b6040516101699190610a5a565b60405180910390f35b34801561017d575f80fd5b5061019161018c366004610ac0565b6103f1565b6040519015158152602001610169565b3480156101ac575f80fd5b5060055461019190600160a01b900460ff1681565b3480156101cc575f80fd5b506101d561045d565b604051908152602001610169565b3480156101ee575f80fd5b506101916101fd366004610ae8565b610477565b34801561020d575f80fd5b506101d5610533565b348015610221575f80fd5b50610191610230366004610b21565b5f546001600160a01b0391821691161490565b34801561024e575f80fd5b50610257601281565b60405160ff9091168152602001610169565b348015610274575f80fd5b50610288610283366004610b21565b6105b6565b005b348015610295575f80fd5b506101d56102a4366004610b21565b60026020525f908152604090205481565b3480156102c0575f80fd5b5061028861066b565b3480156102d4575f80fd5b506101d560015481565b3480156102e9575f80fd5b506102886102f8366004610b3a565b6106a5565b348015610308575f80fd5b505f546001600160a01b03165b6040516001600160a01b039091168152602001610169565b348015610338575f80fd5b50610191610347366004610b21565b60046020525f908152604090205460ff1681565b348015610366575f80fd5b50610191610375366004610ac0565b610755565b348015610385575f80fd5b50600554610315906001600160a01b031681565b3480156103a4575f80fd5b506101d56103b3366004610b51565b6001600160a01b039182165f90815260036020908152604080832093909416825291909152205490565b3480156103e8575f80fd5b50610288610768565b335f8181526003602090815260408083206001600160a01b038716808552925280832085905551919290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259061044b9086815260200190565b60405180910390a35060015b92915050565b6104696012600a610c76565b610474906015610c84565b81565b6001600160a01b0383165f9081526003602090815260408083203384529091528120545f1914610520576040805180820182526016815275496e73756666696369656e7420416c6c6f77616e636560501b6020808301919091526001600160a01b0387165f9081526003825283812033825290915291909120546104fc9184906107bd565b6001600160a01b0385165f9081526003602090815260408083203384529091529020555b61052b8484846107f5565b949350505050565b60026020527fac33ff75c19e70fe83507db0d683fd3465c996598dc972688b7ace676c89077b5461dead5f9081527f6a9609baa168169acaea398c4407efea4be641bb08e21e88806d9836fd9333cc549091906105926012600a610c76565b61059d906015610c84565b6105a79190610c9b565b6105b19190610c9b565b905090565b5f546001600160a01b031633146105e85760405162461bcd60e51b81526004016105df90610cae565b60405180910390fd5b600554600160a01b900460ff16156106425760405162461bcd60e51b815260206004820181905260248201527f43616e7420646f2061667465722074726164696e6720686173206f70656e656460448201526064016105df565b600580546001600160a01b039092166001600160a81b031990921691909117600160a01b179055565b5f546001600160a01b031633146106945760405162461bcd60e51b81526004016105df90610cae565b5f80546001600160a01b0319169055565b5f546001600160a01b031633146106ce5760405162461bcd60e51b81526004016105df90610cae565b600260015410156107215760405162461bcd60e51b815260206004820152601c60248201527f43616e7420736574206d61782077616c6c65742062656c6f772032250000000060448201526064016105df565b6064816107306012600a610c76565b61073b906015610c84565b6107459190610c84565b61074f9190610cce565b60015550565b5f6107613384846107f5565b9392505050565b5f546001600160a01b031633146107915760405162461bcd60e51b81526004016105df90610cae565b60405133904780156108fc02915f818181858888f193505050501580156107ba573d5f803e3d5ffd5b50565b5f81848411156107e05760405162461bcd60e51b81526004016105df9190610a5a565b505f6107ec8486610c9b565b95945050505050565b6001600160a01b0383165f9081526004602052604081205460ff1615801561083557506001600160a01b0383165f9081526004602052604090205460ff16155b801561084f57506005546001600160a01b03848116911614155b15610918576001546001600160a01b0384165f9081526002602052604090205461087a908490610ced565b11156108c85760405162461bcd60e51b815260206004820152601860248201527f6d61782077616c6c6574206c696d69742072656163686564000000000000000060448201526064016105df565b600554600160a01b900460ff166109185760405162461bcd60e51b8152602060048201526014602482015273151c98591a5b99c81b9bdd081bdc195b881e595d60621b60448201526064016105df565b6040805180820182526014815273496e73756666696369656e742042616c616e636560601b6020808301919091526001600160a01b0387165f908152600290915291909120546109699184906107bd565b6001600160a01b038086165f90815260026020526040808220939093559085168152205461099790836109fc565b6001600160a01b038085165f8181526002602052604090819020939093559151908616907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906109ea9086815260200190565b60405180910390a35060019392505050565b5f80610a088385610ced565b9050838110156107615760405162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f77000000000060448201526064016105df565b5f6020808352835180828501525f5b81811015610a8557858101830151858201604001528201610a69565b505f604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b0381168114610abb575f80fd5b919050565b5f8060408385031215610ad1575f80fd5b610ada83610aa5565b946020939093013593505050565b5f805f60608486031215610afa575f80fd5b610b0384610aa5565b9250610b1160208501610aa5565b9150604084013590509250925092565b5f60208284031215610b31575f80fd5b61076182610aa5565b5f60208284031215610b4a575f80fd5b5035919050565b5f8060408385031215610b62575f80fd5b610b6b83610aa5565b9150610b7960208401610aa5565b90509250929050565b634e487b7160e01b5f52601160045260245ffd5b600181815b80851115610bd057815f1904821115610bb657610bb6610b82565b80851615610bc357918102915b93841c9390800290610b9b565b509250929050565b5f82610be657506001610457565b81610bf257505f610457565b8160018114610c085760028114610c1257610c2e565b6001915050610457565b60ff841115610c2357610c23610b82565b50506001821b610457565b5060208310610133831016604e8410600b8410161715610c51575081810a610457565b610c5b8383610b96565b805f1904821115610c6e57610c6e610b82565b029392505050565b5f61076160ff841683610bd8565b808202811582820484141761045757610457610b82565b8181038181111561045757610457610b82565b60208082526006908201526510a7aba722a960d11b604082015260600190565b5f82610ce857634e487b7160e01b5f52601260045260245ffd5b500490565b8082018082111561045757610457610b8256fea26469706673582212209a19aa48afc257101023362cc8aa5311f42b32b2c9a30139cf794da9a257514464736f6c63430008150033",
    "contract_name": "DOGEBASE",
    "compiler_version": "v0.8.21+commit.d9974bed",
    "optimization_used": "1",
    "runs": "200",
    "abi": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"_isWalletLimitsExempted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_maxWalletTokenAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"holder\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCirculatingSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_pair\",\"type\":\"address\"}],\"name\":\"goLive\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"manualSend\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"__maxWalletTokenAmount\",\"type\":\"uint256\"}],\"name\":\"setMaxWalletPercent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tradingLive\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"uniswapPair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]",
    "source_code": "// SPDX-License-Identifier: UNLICENSED\r\n// https://t.me/DogeBaseErc\r\n\r\npragma solidity 0.8.21;\r\n\r\nlibrary SafeMath {\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a + b;\r\n        require(c >= a, \"SafeMath: addition overflow\");\r\n\r\n        return c;\r\n    }\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return sub(a, b, \"SafeMath: subtraction overflow\");\r\n    }\r\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        require(b <= a, errorMessage);\r\n        uint256 c = a - b;\r\n\r\n        return c;\r\n    }\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        if (a == 0) {\r\n            return 0;\r\n        }\r\n\r\n        uint256 c = a * b;\r\n        require(c / a == b, \"SafeMath: multiplication overflow\");\r\n\r\n        return c;\r\n    }\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return div(a, b, \"SafeMath: division by zero\");\r\n    }\r\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        require(b > 0, errorMessage);\r\n        uint256 c = a / b;\r\n        return c;\r\n    }\r\n}\r\n\r\ninterface ERC20 {\r\n    function getOwner() external view returns (address);\r\n    function balanceOf(address account) external view returns (uint256);\r\n    function transfer(address recipient, uint256 amount) external returns (bool);\r\n    function allowance(address _owner, address spender) external view returns (uint256);\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}\r\n\r\nabstract contract Ownr {\r\n    address internal owner;\r\n\r\n    constructor(address _owner) {\r\n        owner = _owner;\r\n    }\r\n\r\n    modifier onlyOwner() {\r\n        require(isOwner(msg.sender), \"!OWNER\"); _;\r\n    }\r\n\r\n    function isOwner(address account) public view returns (bool) {\r\n        return account == owner;\r\n    }\r\n\r\n    function renounceOwnership() external onlyOwner {\r\n        owner = address(0);\r\n    }\r\n\r\n}\r\n\r\ncontract DOGEBASE is ERC20, Ownr {\r\n    using SafeMath for uint256;\r\n\r\n    string public constant name = \"DOGEBASE\";\r\n    string public constant symbol = \"DOGEBASE\";\r\n    uint8 public constant decimals = 18;\r\n    \r\n    uint256 public constant totalSupply = 21 * 10**decimals;\r\n\r\n    uint256 public _maxWalletTokenAmount = totalSupply / 50;\r\n\r\n    mapping (address => uint256) public balanceOf;\r\n    mapping (address => mapping (address => uint256)) _allowances;\r\n\r\n    mapping (address => bool) public _isWalletLimitsExempted;\r\n\r\n    address public uniswapPair;\r\n\r\n    bool public tradingLive = false;\r\n\r\n    address constant DEAD = 0x000000000000000000000000000000000000dEaD;\r\n    address constant ZERO = 0x0000000000000000000000000000000000000000;\r\n\r\n    constructor () Ownr(msg.sender) {\r\n        _isWalletLimitsExempted[msg.sender] = true;\r\n        _isWalletLimitsExempted[address(this)] = true;\r\n        _isWalletLimitsExempted[DEAD] = true;\r\n\r\n        balanceOf[msg.sender] = totalSupply;\r\n        emit Transfer(address(0), msg.sender, totalSupply);\r\n    }\r\n\r\n    function goLive(address _pair) external onlyOwner {\r\n        require(!tradingLive,\"Cant do after trading has opened\");\r\n        tradingLive = true;\r\n        uniswapPair = _pair;\r\n    }\r\n\r\n    function transfer(address recipient, uint256 amount) external override returns (bool) {\r\n        return _transferFrom(msg.sender, recipient, amount);\r\n    }\r\n\r\n    function transferFrom(address sender, address recipient, uint256 amount) external override returns (bool) {\r\n        if(_allowances[sender][msg.sender] != type(uint256).max){\r\n            _allowances[sender][msg.sender] = _allowances[sender][msg.sender].sub(amount, \"Insufficient Allowance\");\r\n        }\r\n        return _transferFrom(sender, recipient, amount);\r\n    }\r\n\r\n    function setMaxWalletPercent(uint256 __maxWalletTokenAmount) external onlyOwner {\r\n        require(_maxWalletTokenAmount >= 2, \"Cant set max wallet below 2%\");\r\n        _maxWalletTokenAmount = (totalSupply * __maxWalletTokenAmount ) / 100;\r\n    }\r\n\r\n    function _transferFrom(address sender, address recipient, uint256 amount) internal returns (bool) {\r\n\r\n        if (!_isWalletLimitsExempted[sender] && !_isWalletLimitsExempted[recipient] && recipient != uniswapPair) {\r\n            require((balanceOf[recipient] + amount) <= _maxWalletTokenAmount,\"max wallet limit reached\");\r\n            require(tradingLive,\"Trading not open yet\");\r\n        }\r\n\r\n        balanceOf[sender] = balanceOf[sender].sub(amount, \"Insufficient Balance\");\r\n        balanceOf[recipient] = balanceOf[recipient].add(amount);\r\n        emit Transfer(sender, recipient, amount);\r\n    \r\n        return true;\r\n    }\r\n    \r\n    function manualSend() external onlyOwner {\r\n        payable(msg.sender).transfer(address(this).balance);\r\n    }\r\n\r\n    function getCirculatingSupply() public view returns (uint256) {\r\n        return (totalSupply - balanceOf[DEAD] - balanceOf[ZERO]);\r\n    }\r\n\r\n        function getOwner() external view override returns (address) { return owner; }\r\n    function allowance(address holder, address spender) external view override returns (uint256) { return _allowances[holder][spender]; }\r\n\r\n    function approve(address spender, uint256 amount) public override returns (bool) {\r\n        _allowances[msg.sender][spender] = amount;\r\n        emit Approval(msg.sender, spender, amount);\r\n        return true;\r\n    }\r\n       receive() external payable { }\r\n\r\n}",
    "etherscan_verified": true
}