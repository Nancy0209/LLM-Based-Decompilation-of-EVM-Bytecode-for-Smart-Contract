{
    "address": "0x2bAa6759eF2a982BBf5619E21eC244eA7a2Ee3C4",
    "tx_hash": "d161c54f060737a1dc62a929ddfb14db0d6b1e216cbc30618fa3481710074a63",
    "block_number": 18006932,
    "timestamp": 1693150571,
    "gas_used_in_creation": 3379292,
    "creation_bytecode": "6080604052604051806020016040528062278d0062ffffff16815250600c9060016200002d9291906200017d565b506040518060200160405280603260ff16815250601090600162000053929190620001c9565b503480156200006157600080fd5b5060405162003b8638038062003b86833981810160405281019062000087919062000260565b82600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506064600b8190555066038d7ea4c680006004819055506103e8600a8190555064174876e8006005819055505050506200033d565b8260048101928215620001b6579160200282015b82811115620001b5578251829062ffffff1690559160200191906001019062000191565b5b509050620001c5919062000213565b5090565b826004810192821562000200579160200282015b82811115620001ff578251829060ff16905591602001919060010190620001dd565b5b5090506200020f919062000213565b5090565b5b808211156200022e57600081600090555060010162000214565b5090565b600081519050620002438162000309565b92915050565b6000815190506200025a8162000323565b92915050565b6000806000606084860312156200027c576200027b62000304565b5b60006200028c8682870162000249565b93505060206200029f8682870162000232565b9250506040620002b28682870162000232565b9150509250925092565b6000620002c982620002e4565b9050919050565b6000620002dd82620002e4565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b6200031481620002bc565b81146200032057600080fd5b50565b6200032e81620002d0565b81146200033a57600080fd5b50565b613839806200034d6000396000f3fe608060405234801561001057600080fd5b50600436106101da5760003560e01c8063b067354d11610104578063ddc63262116100a2578063ef14101e11610071578063ef14101e1461053f578063f7c618c11461055d578063f8eb741a1461057b578063fe6f1b05146105ac576101da565b8063ddc63262146104c9578063df4d17dc146104e5578063e086e5ec14610501578063ede85eb71461050b576101da565b8063c73174bf116100de578063c73174bf14610441578063cb6d8ee61461045d578063d287de4e1461047b578063da04197e14610499576101da565b8063b067354d146103e9578063b6cfb9aa14610407578063c037283814610423576101da565b80636356cdac1161017c578063869890381161014b57806386989038146103555780638da5cb5b146103735780639502ddfd146103915780639845db70146103af576101da565b80636356cdac146102bd57806364949357146102ed5780637a6346e71461031d5780637b0472f014610339576101da565b80634543a17c116101b85780634543a17c1461024957806350baa6221461026557806351ed6a30146102815780635faf30ad1461029f576101da565b80630db192e8146101df5780631df4ccfc1461020f5780632e17de781461022d575b600080fd5b6101f960048036038101906101f49190612cd6565b6105ca565b60405161020691906131f6565b60405180910390f35b6102176108a5565b60405161022491906131f6565b60405180910390f35b61024760048036038101906102429190612d43565b6108ab565b005b610263600480360381019061025e9190612d9d565b610d87565b005b61027f600480360381019061027a9190612d43565b610e29565b005b610289610f4b565b6040516102969190613099565b60405180910390f35b6102a7610f6f565b6040516102b491906131f6565b60405180910390f35b6102d760048036038101906102d29190612d43565b6112bc565b6040516102e491906131f6565b60405180910390f35b61030760048036038101906103029190612d43565b6112d7565b6040516103149190613003565b60405180910390f35b61033760048036038101906103329190612ddd565b61130a565b005b610353600480360381019061034e9190612d9d565b61140c565b005b61035d611ca4565b60405161036a91906131f6565b60405180910390f35b61037b611caa565b604051610388919061301e565b60405180910390f35b610399611cd0565b6040516103a691906131f6565b60405180910390f35b6103c960048036038101906103c49190612d03565b611cd6565b6040516103e09b9a9998979695949392919061328d565b60405180910390f35b6103f1611d57565b6040516103fe91906131f6565b60405180910390f35b610421600480360381019061041c9190612d43565b611d5d565b005b61042b611df7565b60405161043891906131f6565b60405180910390f35b61045b60048036038101906104569190612ddd565b611dfd565b005b610465611eff565b60405161047291906131f6565b60405180910390f35b610483611f05565b60405161049091906131f6565b60405180910390f35b6104b360048036038101906104ae9190612d43565b611f0b565b6040516104c091906131f6565b60405180910390f35b6104e360048036038101906104de9190612d43565b611f26565b005b6104ff60048036038101906104fa9190612cd6565b6124ed565b005b6105096125c1565b005b61052560048036038101906105209190612cd6565b6126e3565b60405161053695949392919061323a565b60405180910390f35b610547612726565b6040516105549190613099565b60405180910390f35b61056561274c565b6040516105729190613099565b60405180910390f35b61059560048036038101906105909190612d03565b612772565b6040516105a3929190613211565b60405180910390f35b6105b4612a5d565b6040516105c191906131f6565b60405180910390f35b60008060005b601460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206003015481101561089b57601660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082815260200190815260200160002060090160009054906101000a900460ff161580156106e65750601660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082815260200190815260200160002060090160019054906101000a900460ff16155b15610888576000601660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000838152602001908152602001600020600101544261074c9190613435565b90506107b4601660008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008481526020019081526020016000206008015482612a6390919063ffffffff16565b9050601660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008381526020019081526020016000206004015481101561082457808361081d9190613354565b9250610886565b601660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002060040154836108839190613354565b92505b505b80806108939061352c565b9150506105d0565b5080915050919050565b600b5481565b601660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082815260200190815260200160002060090160019054906101000a900460ff161561094c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610943906130f6565b60405180910390fd5b42601660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002060000154106109e1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109d8906131d6565b60405180910390fd5b601660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082815260200190815260200160002060090160009054906101000a900460ff16610a5057610a4f81611f26565b5b6001601660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002060090160016101000a81548160ff02191690831515021790555060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33601660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000858152602001908152602001600020600201546040518363ffffffff1660e01b8152600401610b6a929190613070565b600060405180830381600087803b158015610b8457600080fd5b505af1158015610b98573d6000803e3d6000fd5b50505050610c04601660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002060020154600654612ade90919063ffffffff16565b600681905550610cb2601660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002060020154601460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154612ade90919063ffffffff16565b601460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101819055507fdd932dbf4936c18597ed8cf0290c4866ee0974179a6a475acd677b06bec81c6033601660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600084815260200190815260200160002060020154604051610d7c929190613070565b60405180910390a150565b3373ffffffffffffffffffffffffffffffffffffffff16600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610e17576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e0e90613176565b60405180910390fd5b81600581905550806004819055505050565b3373ffffffffffffffffffffffffffffffffffffffff16600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610eb9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610eb090613176565b60405180910390fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401610f16929190613070565b600060405180830381600087803b158015610f3057600080fd5b505af1158015610f44573d6000803e3d6000fd5b5050505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080730d4a11d5eeaac28ec3f61d100daf4d40471f18529050600073dac17f958d2ee523a2206206994597c13d831ec79050600073c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2905060008273ffffffffffffffffffffffffffffffffffffffff166370a08231856040518263ffffffff1660e01b8152600401610ff69190613003565b60206040518083038186803b15801561100e57600080fd5b505afa158015611022573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110469190612d70565b905060008273ffffffffffffffffffffffffffffffffffffffff166370a08231866040518263ffffffff1660e01b81526004016110839190613003565b60206040518083038186803b15801561109b57600080fd5b505afa1580156110af573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110d39190612d70565b90506000611104826110f6670de0b6b3a764000086612a6390919063ffffffff16565b612b3c90919063ffffffff16565b90506000733ac4b2c0cbb85d309f1a7d0410e8e10594e5c9289050600073e1223f2d494c37f83e1bdda5015e990938f00d81905060008673ffffffffffffffffffffffffffffffffffffffff166370a08231846040518263ffffffff1660e01b81526004016111739190613003565b60206040518083038186803b15801561118b57600080fd5b505afa15801561119f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111c39190612d70565b905060008273ffffffffffffffffffffffffffffffffffffffff166370a08231856040518263ffffffff1660e01b81526004016112009190613003565b60206040518083038186803b15801561121857600080fd5b505afa15801561122c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112509190612d70565b905060006112a9670de0b6b3a764000061129b8861128d8661127f633b9aca008a612a6390919063ffffffff16565b612b3c90919063ffffffff16565b612a6390919063ffffffff16565b612b3c90919063ffffffff16565b9050809b50505050505050505050505090565b601081600481106112cc57600080fd5b016000915090505481565b60156020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b3373ffffffffffffffffffffffffffffffffffffffff16600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461139a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161139190613176565b60405180910390fd5b83600c6000600481106113b0576113af6135d3565b5b018190555082600c6001600481106113cb576113ca6135d3565b5b018190555081600c6002600481106113e6576113e56135d3565b5b018190555080600c600360048110611401576114006135d3565b5b018190555050505050565b6000811015801561141e575060038111155b61145d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161145490613136565b60405180910390fd5b6005548210156114a2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161149990613116565b60405180910390fd5b60006114ac610f6f565b905060006114eb6114dc600a546114ce600b5488612a6390919063ffffffff16565b612b3c90919063ffffffff16565b85612b8690919063ffffffff16565b90506000611518633b9aca0061150a8585612a6390919063ffffffff16565b612b3c90919063ffffffff16565b9050601460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060040160009054906101000a900460ff16611636576001601460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060040160006101000a81548160ff0219169083151502179055503360156000600954815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600960008154809291906116309061352c565b91905055505b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330886040518463ffffffff1660e01b815260040161169393929190613039565b600060405180830381600087803b1580156116ad57600080fd5b505af11580156116c1573d6000803e3d6000fd5b505050506000601460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030154905061176183601460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154612ade90919063ffffffff16565b601460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001819055506117bc83600754612ade90919063ffffffff16565b6007819055506117ea600c86600481106117d9576117d86135d3565b5b015442612ade90919063ffffffff16565b601660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008381526020019081526020016000206000018190555042601660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008381526020019081526020016000206001018190555082601660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008381526020019081526020016000206002018190555061192d600a5461191f6010886004811061190e5761190d6135d3565b5b015485612a6390919063ffffffff16565b612b3c90919063ffffffff16565b601660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000838152602001908152602001600020600401819055506119ff600c866004811061199b5761199a6135d3565b5b0154601660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600084815260200190815260200160002060040154612b3c90919063ffffffff16565b601660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008381526020019081526020016000206008018190555081601660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000838152602001908152602001600020600301819055506000601660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002060050181905550601660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082815260200190815260200160002060040154601660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000838152602001908152602001600020600601819055506000601660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002060070181905550601460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206003016000815480929190611c5e9061352c565b91905055507fa4e109bb7f03a3cbe671105ffecfc362319eaa88ecaf35997a4d3a2328d66d6c3384604051611c94929190613070565b60405180910390a1505050505050565b60095481565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60055481565b6016602052816000526040600020602052806000526040600020600091509150508060000154908060010154908060020154908060030154908060040154908060050154908060060154908060070154908060080154908060090160009054906101000a900460ff16908060090160019054906101000a900460ff1690508b565b60045481565b3373ffffffffffffffffffffffffffffffffffffffff16600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611ded576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611de490613176565b60405180910390fd5b80600b8190555050565b60085481565b3373ffffffffffffffffffffffffffffffffffffffff16600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611e8d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611e8490613176565b60405180910390fd5b836010600060048110611ea357611ea26135d3565b5b0181905550826010600160048110611ebe57611ebd6135d3565b5b0181905550816010600260048110611ed957611ed86135d3565b5b0181905550806010600360048110611ef457611ef36135d3565b5b018190555050505050565b60075481565b60065481565b600c8160048110611f1b57600080fd5b016000915090505481565b601660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082815260200190815260200160002060090160009054906101000a900460ff1615611fc7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611fbe90613196565b60405180910390fd5b601660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082815260200190815260200160002060090160019054906101000a900460ff1615612068576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161205f906130f6565b60405180910390fd5b6000806120753384612772565b809250819350505080601660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600085815260200190815260200160002060050181905550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33846040518363ffffffff1660e01b8152600401612132929190613070565b600060405180830381600087803b15801561214c57600080fd5b505af1158015612160573d6000803e3d6000fd5b5050505061217982600854612ade90919063ffffffff16565b6008819055506121e582601660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600086815260200190815260200160002060060154612b8690919063ffffffff16565b601660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000858152602001908152602001600020600601819055506122a282601660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600086815260200190815260200160002060070154612ade90919063ffffffff16565b601660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008581526020019081526020016000206007018190555061234e82601460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020154612ade90919063ffffffff16565b601460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020181905550601660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600084815260200190815260200160002060040154601660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008581526020019081526020016000206007015414156124af576001601660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600085815260200190815260200160002060090160006101000a81548160ff0219169083151502179055505b7ffb9432fa1fa7e0db773769fb77b5f241e9eb4987776725d22c900b3949b38e9733836040516124e0929190613070565b60405180910390a1505050565b3373ffffffffffffffffffffffffffffffffffffffff16600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461257d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161257490613176565b60405180910390fd5b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b3373ffffffffffffffffffffffffffffffffffffffff16600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614612651576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161264890613176565b60405180910390fd5b600047905060008111612699576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612690906131b6565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f193505050501580156126df573d6000803e3d6000fd5b5050565b60146020528060005260406000206000915090508060000154908060010154908060020154908060030154908060040160009054906101000a900460ff16905085565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080600080601660008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600086815260200190815260200160002060090160009054906101000a900460ff161580156128445750601660008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600086815260200190815260200160002060090160019054906101000a900460ff16155b15612a4e57600080601660008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000888152602001908152602001600020600501549050429250600081141561290557601660008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008881526020019081526020016000206001015490505b80836129119190613435565b9150612979601660008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008981526020019081526020016000206008015483612a6390919063ffffffff16565b9150601660008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000888152602001908152602001600020600601548210156129e95781846129e29190613354565b9350612a4b565b601660008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008881526020019081526020016000206006015484612a489190613354565b93505b50505b81819350935050509250929050565b600a5481565b600080831415612a765760009050612ad8565b60008284612a8491906133db565b9050828482612a9391906133aa565b14612ad3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612aca90613156565b60405180910390fd5b809150505b92915050565b6000808284612aed9190613354565b905083811015612b32576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612b29906130d6565b60405180910390fd5b8091505092915050565b6000612b7e83836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250612bd0565b905092915050565b6000612bc883836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250612c33565b905092915050565b60008083118290612c17576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612c0e91906130b4565b60405180910390fd5b5060008385612c2691906133aa565b9050809150509392505050565b6000838311158290612c7b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612c7291906130b4565b60405180910390fd5b5060008385612c8a9190613435565b9050809150509392505050565b600081359050612ca6816137d5565b92915050565b600081359050612cbb816137ec565b92915050565b600081519050612cd0816137ec565b92915050565b600060208284031215612cec57612ceb613602565b5b6000612cfa84828501612c97565b91505092915050565b60008060408385031215612d1a57612d19613602565b5b6000612d2885828601612c97565b9250506020612d3985828601612cac565b9150509250929050565b600060208284031215612d5957612d58613602565b5b6000612d6784828501612cac565b91505092915050565b600060208284031215612d8657612d85613602565b5b6000612d9484828501612cc1565b91505092915050565b60008060408385031215612db457612db3613602565b5b6000612dc285828601612cac565b9250506020612dd385828601612cac565b9150509250929050565b60008060008060808587031215612df757612df6613602565b5b6000612e0587828801612cac565b9450506020612e1687828801612cac565b9350506040612e2787828801612cac565b9250506060612e3887828801612cac565b91505092959194509250565b612e4d8161347b565b82525050565b612e5c81613469565b82525050565b612e6b8161348d565b82525050565b612e7a816134c3565b82525050565b6000612e8b82613338565b612e958185613343565b9350612ea58185602086016134f9565b612eae81613607565b840191505092915050565b6000612ec6601b83613343565b9150612ed182613618565b602082019050919050565b6000612ee9601083613343565b9150612ef482613641565b602082019050919050565b6000612f0c601e83613343565b9150612f178261366a565b602082019050919050565b6000612f2f601383613343565b9150612f3a82613693565b602082019050919050565b6000612f52602183613343565b9150612f5d826136bc565b604082019050919050565b6000612f75600a83613343565b9150612f808261370b565b602082019050919050565b6000612f98601283613343565b9150612fa382613734565b602082019050919050565b6000612fbb601983613343565b9150612fc68261375d565b602082019050919050565b6000612fde602483613343565b9150612fe982613786565b604082019050919050565b612ffd816134b9565b82525050565b60006020820190506130186000830184612e53565b92915050565b60006020820190506130336000830184612e44565b92915050565b600060608201905061304e6000830186612e53565b61305b6020830185612e53565b6130686040830184612ff4565b949350505050565b60006040820190506130856000830185612e53565b6130926020830184612ff4565b9392505050565b60006020820190506130ae6000830184612e71565b92915050565b600060208201905081810360008301526130ce8184612e80565b905092915050565b600060208201905081810360008301526130ef81612eb9565b9050919050565b6000602082019050818103600083015261310f81612edc565b9050919050565b6000602082019050818103600083015261312f81612eff565b9050919050565b6000602082019050818103600083015261314f81612f22565b9050919050565b6000602082019050818103600083015261316f81612f45565b9050919050565b6000602082019050818103600083015261318f81612f68565b9050919050565b600060208201905081810360008301526131af81612f8b565b9050919050565b600060208201905081810360008301526131cf81612fae565b9050919050565b600060208201905081810360008301526131ef81612fd1565b9050919050565b600060208201905061320b6000830184612ff4565b92915050565b60006040820190506132266000830185612ff4565b6132336020830184612ff4565b9392505050565b600060a08201905061324f6000830188612ff4565b61325c6020830187612ff4565b6132696040830186612ff4565b6132766060830185612ff4565b6132836080830184612e62565b9695505050505050565b6000610160820190506132a3600083018e612ff4565b6132b0602083018d612ff4565b6132bd604083018c612ff4565b6132ca606083018b612ff4565b6132d7608083018a612ff4565b6132e460a0830189612ff4565b6132f160c0830188612ff4565b6132fe60e0830187612ff4565b61330c610100830186612ff4565b61331a610120830185612e62565b613328610140830184612e62565b9c9b505050505050505050505050565b600081519050919050565b600082825260208201905092915050565b600061335f826134b9565b915061336a836134b9565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561339f5761339e613575565b5b828201905092915050565b60006133b5826134b9565b91506133c0836134b9565b9250826133d0576133cf6135a4565b5b828204905092915050565b60006133e6826134b9565b91506133f1836134b9565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561342a57613429613575565b5b828202905092915050565b6000613440826134b9565b915061344b836134b9565b92508282101561345e5761345d613575565b5b828203905092915050565b600061347482613499565b9050919050565b600061348682613499565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006134ce826134d5565b9050919050565b60006134e0826134e7565b9050919050565b60006134f282613499565b9050919050565b60005b838110156135175780820151818401526020810190506134fc565b83811115613526576000848401525b50505050565b6000613537826134b9565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561356a57613569613575565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600080fd5b6000601f19601f8301169050919050565b7f536166654d6174683a206164646974696f6e206f766572666c6f770000000000600082015250565b7f616c726561647920756e7374616b656400000000000000000000000000000000600082015250565b7f7374616b65206d6f7265207468616e206d696e696d756d20616d6f756e740000600082015250565b7f496e76616c69642054696d6520506572696f6400000000000000000000000000600082015250565b7f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f60008201527f7700000000000000000000000000000000000000000000000000000000000000602082015250565b7f6f6e6c79206f776e657200000000000000000000000000000000000000000000600082015250565b7f616c7265616479207769746864726177616e0000000000000000000000000000600082015250565b7f646f6573206e6f74206861766520616e792062616c616e636500000000000000600082015250565b7f63616e6e6f7420756e7374616b65206166746572206265666f7265206475726160008201527f74696f6e00000000000000000000000000000000000000000000000000000000602082015250565b6137de81613469565b81146137e957600080fd5b50565b6137f5816134b9565b811461380057600080fd5b5056fea264697066735822122063860048a24f1557239cdcbff4a31013831fe071d749391773988822bcc5581c64736f6c63430008070033000000000000000000000000d733178dd3a916b023e655d6ccb5c20ab0baff25000000000000000000000000e1223f2d494c37f83e1bdda5015e990938f00d81000000000000000000000000dac17f958d2ee523a2206206994597c13d831ec7",
    "runtime_bytecode": "608060405234801561001057600080fd5b50600436106101da5760003560e01c8063b067354d11610104578063ddc63262116100a2578063ef14101e11610071578063ef14101e1461053f578063f7c618c11461055d578063f8eb741a1461057b578063fe6f1b05146105ac576101da565b8063ddc63262146104c9578063df4d17dc146104e5578063e086e5ec14610501578063ede85eb71461050b576101da565b8063c73174bf116100de578063c73174bf14610441578063cb6d8ee61461045d578063d287de4e1461047b578063da04197e14610499576101da565b8063b067354d146103e9578063b6cfb9aa14610407578063c037283814610423576101da565b80636356cdac1161017c578063869890381161014b57806386989038146103555780638da5cb5b146103735780639502ddfd146103915780639845db70146103af576101da565b80636356cdac146102bd57806364949357146102ed5780637a6346e71461031d5780637b0472f014610339576101da565b80634543a17c116101b85780634543a17c1461024957806350baa6221461026557806351ed6a30146102815780635faf30ad1461029f576101da565b80630db192e8146101df5780631df4ccfc1461020f5780632e17de781461022d575b600080fd5b6101f960048036038101906101f49190612cd6565b6105ca565b60405161020691906131f6565b60405180910390f35b6102176108a5565b60405161022491906131f6565b60405180910390f35b61024760048036038101906102429190612d43565b6108ab565b005b610263600480360381019061025e9190612d9d565b610d87565b005b61027f600480360381019061027a9190612d43565b610e29565b005b610289610f4b565b6040516102969190613099565b60405180910390f35b6102a7610f6f565b6040516102b491906131f6565b60405180910390f35b6102d760048036038101906102d29190612d43565b6112bc565b6040516102e491906131f6565b60405180910390f35b61030760048036038101906103029190612d43565b6112d7565b6040516103149190613003565b60405180910390f35b61033760048036038101906103329190612ddd565b61130a565b005b610353600480360381019061034e9190612d9d565b61140c565b005b61035d611ca4565b60405161036a91906131f6565b60405180910390f35b61037b611caa565b604051610388919061301e565b60405180910390f35b610399611cd0565b6040516103a691906131f6565b60405180910390f35b6103c960048036038101906103c49190612d03565b611cd6565b6040516103e09b9a9998979695949392919061328d565b60405180910390f35b6103f1611d57565b6040516103fe91906131f6565b60405180910390f35b610421600480360381019061041c9190612d43565b611d5d565b005b61042b611df7565b60405161043891906131f6565b60405180910390f35b61045b60048036038101906104569190612ddd565b611dfd565b005b610465611eff565b60405161047291906131f6565b60405180910390f35b610483611f05565b60405161049091906131f6565b60405180910390f35b6104b360048036038101906104ae9190612d43565b611f0b565b6040516104c091906131f6565b60405180910390f35b6104e360048036038101906104de9190612d43565b611f26565b005b6104ff60048036038101906104fa9190612cd6565b6124ed565b005b6105096125c1565b005b61052560048036038101906105209190612cd6565b6126e3565b60405161053695949392919061323a565b60405180910390f35b610547612726565b6040516105549190613099565b60405180910390f35b61056561274c565b6040516105729190613099565b60405180910390f35b61059560048036038101906105909190612d03565b612772565b6040516105a3929190613211565b60405180910390f35b6105b4612a5d565b6040516105c191906131f6565b60405180910390f35b60008060005b601460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206003015481101561089b57601660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082815260200190815260200160002060090160009054906101000a900460ff161580156106e65750601660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082815260200190815260200160002060090160019054906101000a900460ff16155b15610888576000601660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000838152602001908152602001600020600101544261074c9190613435565b90506107b4601660008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008481526020019081526020016000206008015482612a6390919063ffffffff16565b9050601660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008381526020019081526020016000206004015481101561082457808361081d9190613354565b9250610886565b601660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002060040154836108839190613354565b92505b505b80806108939061352c565b9150506105d0565b5080915050919050565b600b5481565b601660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082815260200190815260200160002060090160019054906101000a900460ff161561094c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610943906130f6565b60405180910390fd5b42601660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002060000154106109e1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109d8906131d6565b60405180910390fd5b601660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082815260200190815260200160002060090160009054906101000a900460ff16610a5057610a4f81611f26565b5b6001601660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002060090160016101000a81548160ff02191690831515021790555060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33601660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000858152602001908152602001600020600201546040518363ffffffff1660e01b8152600401610b6a929190613070565b600060405180830381600087803b158015610b8457600080fd5b505af1158015610b98573d6000803e3d6000fd5b50505050610c04601660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002060020154600654612ade90919063ffffffff16565b600681905550610cb2601660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002060020154601460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154612ade90919063ffffffff16565b601460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101819055507fdd932dbf4936c18597ed8cf0290c4866ee0974179a6a475acd677b06bec81c6033601660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600084815260200190815260200160002060020154604051610d7c929190613070565b60405180910390a150565b3373ffffffffffffffffffffffffffffffffffffffff16600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610e17576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e0e90613176565b60405180910390fd5b81600581905550806004819055505050565b3373ffffffffffffffffffffffffffffffffffffffff16600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610eb9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610eb090613176565b60405180910390fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401610f16929190613070565b600060405180830381600087803b158015610f3057600080fd5b505af1158015610f44573d6000803e3d6000fd5b5050505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080730d4a11d5eeaac28ec3f61d100daf4d40471f18529050600073dac17f958d2ee523a2206206994597c13d831ec79050600073c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2905060008273ffffffffffffffffffffffffffffffffffffffff166370a08231856040518263ffffffff1660e01b8152600401610ff69190613003565b60206040518083038186803b15801561100e57600080fd5b505afa158015611022573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110469190612d70565b905060008273ffffffffffffffffffffffffffffffffffffffff166370a08231866040518263ffffffff1660e01b81526004016110839190613003565b60206040518083038186803b15801561109b57600080fd5b505afa1580156110af573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110d39190612d70565b90506000611104826110f6670de0b6b3a764000086612a6390919063ffffffff16565b612b3c90919063ffffffff16565b90506000733ac4b2c0cbb85d309f1a7d0410e8e10594e5c9289050600073e1223f2d494c37f83e1bdda5015e990938f00d81905060008673ffffffffffffffffffffffffffffffffffffffff166370a08231846040518263ffffffff1660e01b81526004016111739190613003565b60206040518083038186803b15801561118b57600080fd5b505afa15801561119f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111c39190612d70565b905060008273ffffffffffffffffffffffffffffffffffffffff166370a08231856040518263ffffffff1660e01b81526004016112009190613003565b60206040518083038186803b15801561121857600080fd5b505afa15801561122c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112509190612d70565b905060006112a9670de0b6b3a764000061129b8861128d8661127f633b9aca008a612a6390919063ffffffff16565b612b3c90919063ffffffff16565b612a6390919063ffffffff16565b612b3c90919063ffffffff16565b9050809b50505050505050505050505090565b601081600481106112cc57600080fd5b016000915090505481565b60156020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b3373ffffffffffffffffffffffffffffffffffffffff16600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461139a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161139190613176565b60405180910390fd5b83600c6000600481106113b0576113af6135d3565b5b018190555082600c6001600481106113cb576113ca6135d3565b5b018190555081600c6002600481106113e6576113e56135d3565b5b018190555080600c600360048110611401576114006135d3565b5b018190555050505050565b6000811015801561141e575060038111155b61145d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161145490613136565b60405180910390fd5b6005548210156114a2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161149990613116565b60405180910390fd5b60006114ac610f6f565b905060006114eb6114dc600a546114ce600b5488612a6390919063ffffffff16565b612b3c90919063ffffffff16565b85612b8690919063ffffffff16565b90506000611518633b9aca0061150a8585612a6390919063ffffffff16565b612b3c90919063ffffffff16565b9050601460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060040160009054906101000a900460ff16611636576001601460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060040160006101000a81548160ff0219169083151502179055503360156000600954815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600960008154809291906116309061352c565b91905055505b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330886040518463ffffffff1660e01b815260040161169393929190613039565b600060405180830381600087803b1580156116ad57600080fd5b505af11580156116c1573d6000803e3d6000fd5b505050506000601460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030154905061176183601460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154612ade90919063ffffffff16565b601460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001819055506117bc83600754612ade90919063ffffffff16565b6007819055506117ea600c86600481106117d9576117d86135d3565b5b015442612ade90919063ffffffff16565b601660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008381526020019081526020016000206000018190555042601660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008381526020019081526020016000206001018190555082601660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008381526020019081526020016000206002018190555061192d600a5461191f6010886004811061190e5761190d6135d3565b5b015485612a6390919063ffffffff16565b612b3c90919063ffffffff16565b601660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000838152602001908152602001600020600401819055506119ff600c866004811061199b5761199a6135d3565b5b0154601660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600084815260200190815260200160002060040154612b3c90919063ffffffff16565b601660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008381526020019081526020016000206008018190555081601660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000838152602001908152602001600020600301819055506000601660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002060050181905550601660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082815260200190815260200160002060040154601660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000838152602001908152602001600020600601819055506000601660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002060070181905550601460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206003016000815480929190611c5e9061352c565b91905055507fa4e109bb7f03a3cbe671105ffecfc362319eaa88ecaf35997a4d3a2328d66d6c3384604051611c94929190613070565b60405180910390a1505050505050565b60095481565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60055481565b6016602052816000526040600020602052806000526040600020600091509150508060000154908060010154908060020154908060030154908060040154908060050154908060060154908060070154908060080154908060090160009054906101000a900460ff16908060090160019054906101000a900460ff1690508b565b60045481565b3373ffffffffffffffffffffffffffffffffffffffff16600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611ded576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611de490613176565b60405180910390fd5b80600b8190555050565b60085481565b3373ffffffffffffffffffffffffffffffffffffffff16600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611e8d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611e8490613176565b60405180910390fd5b836010600060048110611ea357611ea26135d3565b5b0181905550826010600160048110611ebe57611ebd6135d3565b5b0181905550816010600260048110611ed957611ed86135d3565b5b0181905550806010600360048110611ef457611ef36135d3565b5b018190555050505050565b60075481565b60065481565b600c8160048110611f1b57600080fd5b016000915090505481565b601660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082815260200190815260200160002060090160009054906101000a900460ff1615611fc7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611fbe90613196565b60405180910390fd5b601660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082815260200190815260200160002060090160019054906101000a900460ff1615612068576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161205f906130f6565b60405180910390fd5b6000806120753384612772565b809250819350505080601660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600085815260200190815260200160002060050181905550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33846040518363ffffffff1660e01b8152600401612132929190613070565b600060405180830381600087803b15801561214c57600080fd5b505af1158015612160573d6000803e3d6000fd5b5050505061217982600854612ade90919063ffffffff16565b6008819055506121e582601660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600086815260200190815260200160002060060154612b8690919063ffffffff16565b601660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000858152602001908152602001600020600601819055506122a282601660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600086815260200190815260200160002060070154612ade90919063ffffffff16565b601660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008581526020019081526020016000206007018190555061234e82601460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020154612ade90919063ffffffff16565b601460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020181905550601660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600084815260200190815260200160002060040154601660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008581526020019081526020016000206007015414156124af576001601660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600085815260200190815260200160002060090160006101000a81548160ff0219169083151502179055505b7ffb9432fa1fa7e0db773769fb77b5f241e9eb4987776725d22c900b3949b38e9733836040516124e0929190613070565b60405180910390a1505050565b3373ffffffffffffffffffffffffffffffffffffffff16600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461257d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161257490613176565b60405180910390fd5b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b3373ffffffffffffffffffffffffffffffffffffffff16600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614612651576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161264890613176565b60405180910390fd5b600047905060008111612699576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612690906131b6565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f193505050501580156126df573d6000803e3d6000fd5b5050565b60146020528060005260406000206000915090508060000154908060010154908060020154908060030154908060040160009054906101000a900460ff16905085565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080600080601660008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600086815260200190815260200160002060090160009054906101000a900460ff161580156128445750601660008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600086815260200190815260200160002060090160019054906101000a900460ff16155b15612a4e57600080601660008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000888152602001908152602001600020600501549050429250600081141561290557601660008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008881526020019081526020016000206001015490505b80836129119190613435565b9150612979601660008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008981526020019081526020016000206008015483612a6390919063ffffffff16565b9150601660008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000888152602001908152602001600020600601548210156129e95781846129e29190613354565b9350612a4b565b601660008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008881526020019081526020016000206006015484612a489190613354565b93505b50505b81819350935050509250929050565b600a5481565b600080831415612a765760009050612ad8565b60008284612a8491906133db565b9050828482612a9391906133aa565b14612ad3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612aca90613156565b60405180910390fd5b809150505b92915050565b6000808284612aed9190613354565b905083811015612b32576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612b29906130d6565b60405180910390fd5b8091505092915050565b6000612b7e83836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250612bd0565b905092915050565b6000612bc883836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250612c33565b905092915050565b60008083118290612c17576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612c0e91906130b4565b60405180910390fd5b5060008385612c2691906133aa565b9050809150509392505050565b6000838311158290612c7b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612c7291906130b4565b60405180910390fd5b5060008385612c8a9190613435565b9050809150509392505050565b600081359050612ca6816137d5565b92915050565b600081359050612cbb816137ec565b92915050565b600081519050612cd0816137ec565b92915050565b600060208284031215612cec57612ceb613602565b5b6000612cfa84828501612c97565b91505092915050565b60008060408385031215612d1a57612d19613602565b5b6000612d2885828601612c97565b9250506020612d3985828601612cac565b9150509250929050565b600060208284031215612d5957612d58613602565b5b6000612d6784828501612cac565b91505092915050565b600060208284031215612d8657612d85613602565b5b6000612d9484828501612cc1565b91505092915050565b60008060408385031215612db457612db3613602565b5b6000612dc285828601612cac565b9250506020612dd385828601612cac565b9150509250929050565b60008060008060808587031215612df757612df6613602565b5b6000612e0587828801612cac565b9450506020612e1687828801612cac565b9350506040612e2787828801612cac565b9250506060612e3887828801612cac565b91505092959194509250565b612e4d8161347b565b82525050565b612e5c81613469565b82525050565b612e6b8161348d565b82525050565b612e7a816134c3565b82525050565b6000612e8b82613338565b612e958185613343565b9350612ea58185602086016134f9565b612eae81613607565b840191505092915050565b6000612ec6601b83613343565b9150612ed182613618565b602082019050919050565b6000612ee9601083613343565b9150612ef482613641565b602082019050919050565b6000612f0c601e83613343565b9150612f178261366a565b602082019050919050565b6000612f2f601383613343565b9150612f3a82613693565b602082019050919050565b6000612f52602183613343565b9150612f5d826136bc565b604082019050919050565b6000612f75600a83613343565b9150612f808261370b565b602082019050919050565b6000612f98601283613343565b9150612fa382613734565b602082019050919050565b6000612fbb601983613343565b9150612fc68261375d565b602082019050919050565b6000612fde602483613343565b9150612fe982613786565b604082019050919050565b612ffd816134b9565b82525050565b60006020820190506130186000830184612e53565b92915050565b60006020820190506130336000830184612e44565b92915050565b600060608201905061304e6000830186612e53565b61305b6020830185612e53565b6130686040830184612ff4565b949350505050565b60006040820190506130856000830185612e53565b6130926020830184612ff4565b9392505050565b60006020820190506130ae6000830184612e71565b92915050565b600060208201905081810360008301526130ce8184612e80565b905092915050565b600060208201905081810360008301526130ef81612eb9565b9050919050565b6000602082019050818103600083015261310f81612edc565b9050919050565b6000602082019050818103600083015261312f81612eff565b9050919050565b6000602082019050818103600083015261314f81612f22565b9050919050565b6000602082019050818103600083015261316f81612f45565b9050919050565b6000602082019050818103600083015261318f81612f68565b9050919050565b600060208201905081810360008301526131af81612f8b565b9050919050565b600060208201905081810360008301526131cf81612fae565b9050919050565b600060208201905081810360008301526131ef81612fd1565b9050919050565b600060208201905061320b6000830184612ff4565b92915050565b60006040820190506132266000830185612ff4565b6132336020830184612ff4565b9392505050565b600060a08201905061324f6000830188612ff4565b61325c6020830187612ff4565b6132696040830186612ff4565b6132766060830185612ff4565b6132836080830184612e62565b9695505050505050565b6000610160820190506132a3600083018e612ff4565b6132b0602083018d612ff4565b6132bd604083018c612ff4565b6132ca606083018b612ff4565b6132d7608083018a612ff4565b6132e460a0830189612ff4565b6132f160c0830188612ff4565b6132fe60e0830187612ff4565b61330c610100830186612ff4565b61331a610120830185612e62565b613328610140830184612e62565b9c9b505050505050505050505050565b600081519050919050565b600082825260208201905092915050565b600061335f826134b9565b915061336a836134b9565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561339f5761339e613575565b5b828201905092915050565b60006133b5826134b9565b91506133c0836134b9565b9250826133d0576133cf6135a4565b5b828204905092915050565b60006133e6826134b9565b91506133f1836134b9565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561342a57613429613575565b5b828202905092915050565b6000613440826134b9565b915061344b836134b9565b92508282101561345e5761345d613575565b5b828203905092915050565b600061347482613499565b9050919050565b600061348682613499565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006134ce826134d5565b9050919050565b60006134e0826134e7565b9050919050565b60006134f282613499565b9050919050565b60005b838110156135175780820151818401526020810190506134fc565b83811115613526576000848401525b50505050565b6000613537826134b9565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561356a57613569613575565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600080fd5b6000601f19601f8301169050919050565b7f536166654d6174683a206164646974696f6e206f766572666c6f770000000000600082015250565b7f616c726561647920756e7374616b656400000000000000000000000000000000600082015250565b7f7374616b65206d6f7265207468616e206d696e696d756d20616d6f756e740000600082015250565b7f496e76616c69642054696d6520506572696f6400000000000000000000000000600082015250565b7f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f60008201527f7700000000000000000000000000000000000000000000000000000000000000602082015250565b7f6f6e6c79206f776e657200000000000000000000000000000000000000000000600082015250565b7f616c7265616479207769746864726177616e0000000000000000000000000000600082015250565b7f646f6573206e6f74206861766520616e792062616c616e636500000000000000600082015250565b7f63616e6e6f7420756e7374616b65206166746572206265666f7265206475726160008201527f74696f6e00000000000000000000000000000000000000000000000000000000602082015250565b6137de81613469565b81146137e957600080fd5b50565b6137f5816134b9565b811461380057600080fd5b5056fea264697066735822122063860048a24f1557239cdcbff4a31013831fe071d749391773988822bcc5581c64736f6c63430008070033",
    "contract_name": "TKNStake",
    "compiler_version": "v0.8.7+commit.e28d00a7",
    "optimization_used": "0",
    "runs": "200",
    "abi": "[{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token2\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"Staker\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"HARVEST\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"Staker\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"STAKE\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"Staker\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"UNSTAKE\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"Bonus\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"Duration\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"first\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"second\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"third\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fourth\",\"type\":\"uint256\"}],\"name\":\"SetStakeBonus\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"first\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"second\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"third\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fourth\",\"type\":\"uint256\"}],\"name\":\"SetStakeDuration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_min\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_max\",\"type\":\"uint256\"}],\"name\":\"SetStakeLimits\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_fee\",\"type\":\"uint256\"}],\"name\":\"SetTotalFees\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"Stakers\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalStakedTokenUser\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalUnstakedTokenUser\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalClaimedRewardTokenUser\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stakeCount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"alreadyExists\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"StakersID\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceinUSD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"harvest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"initToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxStakeableToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minimumStakeToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"percentDivider\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"realtimeReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"blockno\",\"type\":\"uint256\"}],\"name\":\"realtimeRewardPerBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timeperiod\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakeToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"stakersRecord\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"unstaketime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"staketime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardTokenAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastharvesttime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"remainingreward\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"harvestreward\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"persecondreward\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"withdrawan\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"unstaked\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token3\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalClaimedRewardToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalStakedToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalStakers\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalUnStakedToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"unstake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawETH\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]",
    "source_code": "// SPDX-License-Identifier: Unlicensed\r\n\r\npragma solidity ^0.8.6;\r\n\r\ninterface IERC20 {\r\n    event Approval(\r\n        address indexed owner,\r\n        address indexed spender,\r\n        uint256 value\r\n    );\r\n\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n    function name() external view returns (string memory);\r\n\r\n    function symbol() external view returns (string memory);\r\n\r\n    function decimals() external view returns (uint8);\r\n\r\n    function totalSupply() external view returns (uint256);\r\n\r\n    function balanceOf(address owner) external view returns (uint256);\r\n\r\n    function allowance(address owner, address spender)\r\n        external\r\n        view\r\n        returns (uint256);\r\n\r\n    function approve(address spender, uint256 value) external;\r\n\r\n    function transfer(address to, uint256 value) external;\r\n\r\n    function transferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 value\r\n    ) external;\r\n}\r\n\r\ncontract TKNStake {\r\n    using SafeMath for uint256;\r\n    IERC20 public stakeToken;\r\n    IERC20 public rewardToken;\r\n    IERC20 public token3;\r\n\r\n    address payable public owner;\r\n\r\n    uint256 public maxStakeableToken;\r\n    uint256 public minimumStakeToken;\r\n    uint256 public totalUnStakedToken;\r\n    uint256 public totalStakedToken;\r\n    uint256 public totalClaimedRewardToken;\r\n    uint256 public totalStakers;\r\n    uint256 public percentDivider;\r\n    uint256 public totalFee;\r\n\r\n    //STAKING DURATION\r\n    uint256[4] public Duration = [30 days];\r\n\r\n    //APY BONUS IN PERCENTAGE \r\n    uint256[4] public Bonus = [50];\r\n\r\n    struct Stake {\r\n        uint256 unstaketime;\r\n        uint256 staketime;\r\n        uint256 amount;\r\n        uint256 rewardTokenAmount;\r\n        uint256 reward;\r\n        uint256 lastharvesttime;\r\n        uint256 remainingreward;\r\n        uint256 harvestreward;\r\n        uint256 persecondreward;\r\n        bool withdrawan;\r\n        bool unstaked;\r\n    }\r\n\r\n    struct User {\r\n        uint256 totalStakedTokenUser;\r\n        uint256 totalUnstakedTokenUser;\r\n        uint256 totalClaimedRewardTokenUser;\r\n        uint256 stakeCount;\r\n        bool alreadyExists;\r\n    }\r\n\r\n    mapping(address => User) public Stakers;\r\n    mapping(uint256 => address) public StakersID;\r\n    mapping(address => mapping(uint256 => Stake)) public stakersRecord;\r\n    event STAKE(address Staker, uint256 amount);\r\n    event HARVEST(address Staker, uint256 amount);\r\n    event UNSTAKE(address Staker, uint256 amount);\r\n\r\n\r\n\r\n    modifier onlyowner() {\r\n        require(owner == msg.sender, \"only owner\");\r\n        _;\r\n    }\r\n\r\n    constructor(address payable _owner, address token1, address token2) {\r\n        owner = _owner;\r\n        stakeToken = IERC20(token1);\r\n        rewardToken = IERC20(token2);\r\n        totalFee = 100;\r\n        maxStakeableToken = 1e15;\r\n        percentDivider = 1000;\r\n        minimumStakeToken = 1e11;\r\n    }\r\n\r\n    function stake(uint256 amount1, uint256 timeperiod) public {\r\n        require(timeperiod >= 0 && timeperiod <= 3, \"Invalid Time Period\");\r\n        require(amount1 >= minimumStakeToken, \"stake more than minimum amount\");\r\n        uint256 TKNVAL = getPriceinUSD();\r\n        uint256 amount = amount1.sub((amount1.mul(totalFee)).div(percentDivider));\r\n        uint256 rewardtokenPrice = (amount.mul(TKNVAL)).div(1e9);\r\n        if (!Stakers[msg.sender].alreadyExists) {\r\n            Stakers[msg.sender].alreadyExists = true;\r\n            StakersID[totalStakers] = msg.sender;\r\n            totalStakers++;\r\n        }\r\n\r\n        stakeToken.transferFrom(msg.sender, address(this), amount1);\r\n\r\n        uint256 index = Stakers[msg.sender].stakeCount;\r\n        Stakers[msg.sender].totalStakedTokenUser = Stakers[msg.sender]\r\n            .totalStakedTokenUser\r\n            .add(amount);\r\n        totalStakedToken = totalStakedToken.add(amount);\r\n        stakersRecord[msg.sender][index].unstaketime = block.timestamp.add(\r\n            Duration[timeperiod]\r\n        );\r\n        stakersRecord[msg.sender][index].staketime = block.timestamp;\r\n        stakersRecord[msg.sender][index].amount = amount;\r\n        stakersRecord[msg.sender][index].reward = rewardtokenPrice\r\n            .mul(Bonus[timeperiod])\r\n            .div(percentDivider);\r\n        stakersRecord[msg.sender][index].persecondreward = stakersRecord[\r\n            msg.sender\r\n        ][index].reward.div(Duration[timeperiod]);\r\n\r\n        stakersRecord[msg.sender][index].rewardTokenAmount = rewardtokenPrice;\r\n        stakersRecord[msg.sender][index].lastharvesttime = 0;\r\n        stakersRecord[msg.sender][index].remainingreward = stakersRecord[msg.sender][index].reward;\r\n        stakersRecord[msg.sender][index].harvestreward = 0;\r\n        Stakers[msg.sender].stakeCount++;\r\n\r\n        emit STAKE(msg.sender, amount);\r\n    }\r\n\r\n    function unstake(uint256 index) public {\r\n        require(!stakersRecord[msg.sender][index].unstaked, \"already unstaked\");\r\n        require(\r\n            stakersRecord[msg.sender][index].unstaketime < block.timestamp,\r\n            \"cannot unstake after before duration\"\r\n        );\r\n\r\n        if(!stakersRecord[msg.sender][index].withdrawan){\r\n            harvest(index);\r\n        }\r\n        stakersRecord[msg.sender][index].unstaked = true;\r\n\r\n        stakeToken.transfer(\r\n            msg.sender,\r\n            stakersRecord[msg.sender][index].amount\r\n        );\r\n        \r\n        totalUnStakedToken = totalUnStakedToken.add(\r\n            stakersRecord[msg.sender][index].amount\r\n        );\r\n        Stakers[msg.sender].totalUnstakedTokenUser = Stakers[msg.sender]\r\n            .totalUnstakedTokenUser\r\n            .add(stakersRecord[msg.sender][index].amount);\r\n\r\n        emit UNSTAKE(\r\n            msg.sender,\r\n            stakersRecord[msg.sender][index].amount\r\n        );\r\n    }\r\n\r\n    function harvest(uint256 index) public {\r\n        require(\r\n            !stakersRecord[msg.sender][index].withdrawan,\r\n            \"already withdrawan\"\r\n        );\r\n        require(!stakersRecord[msg.sender][index].unstaked, \"already unstaked\");\r\n        uint256 rewardTillNow;\r\n        uint256 commontimestamp;\r\n        (rewardTillNow,commontimestamp) = realtimeRewardPerBlock(msg.sender , index);\r\n        stakersRecord[msg.sender][index].lastharvesttime =  commontimestamp;\r\n        rewardToken.transfer(\r\n            msg.sender,\r\n            rewardTillNow\r\n        );\r\n        totalClaimedRewardToken = totalClaimedRewardToken.add(\r\n            rewardTillNow\r\n        );\r\n        stakersRecord[msg.sender][index].remainingreward = stakersRecord[msg.sender][index].remainingreward.sub(rewardTillNow);\r\n        stakersRecord[msg.sender][index].harvestreward = stakersRecord[msg.sender][index].harvestreward.add(rewardTillNow);\r\n        Stakers[msg.sender].totalClaimedRewardTokenUser = Stakers[msg.sender]\r\n            .totalClaimedRewardTokenUser\r\n            .add(rewardTillNow);\r\n\r\n        if(stakersRecord[msg.sender][index].harvestreward == stakersRecord[msg.sender][index].reward){\r\n            stakersRecord[msg.sender][index].withdrawan = true;\r\n\r\n        }\r\n\r\n        emit HARVEST(\r\n            msg.sender,\r\n            rewardTillNow\r\n        );\r\n    }\r\n\r\n    function getPriceinUSD() public view returns (uint256){\r\n        \r\n        address USDT_WETH = 0x0d4a11d5EEaaC28EC3F61d100daF4d40471f1852; //USDT_WETH pancake pool address\r\n        IERC20 USDTTOKEN = IERC20(0xdAC17F958D2ee523a2206206994597C13D831ec7); // USDT Token address\r\n        IERC20 WETHTOKEN = IERC20(0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2); // WETH Token address\r\n        uint256 USDTSUPPLYINUSDT_WETH = USDTTOKEN.balanceOf(USDT_WETH);\r\n        uint256 WETHSUPPLYINUSDT_WETH = WETHTOKEN.balanceOf(USDT_WETH);\r\n        uint256 BNBPRICE = (USDTSUPPLYINUSDT_WETH.mul(1e18)).div(WETHSUPPLYINUSDT_WETH);\r\n        address TKN_WETH = 0x3Ac4B2C0cBb85d309f1a7D0410e8E10594e5c928; // TKN_WETH pancake pool address\r\n        IERC20 TKNTOKEN = IERC20(0xE1223F2d494c37f83E1BDda5015E990938f00d81); // TKN Token address \r\n        uint256 WETHSUPPLYINTKN_WETH =(WETHTOKEN.balanceOf(TKN_WETH));\r\n        uint256 TKNSUPPLYINTKN_WETH = (TKNTOKEN.balanceOf(TKN_WETH));\r\n        uint256 TKNUSDVAL = (((WETHSUPPLYINTKN_WETH.mul(1e9)).div((TKNSUPPLYINTKN_WETH))).mul(BNBPRICE)).div(1e18);\r\n        return TKNUSDVAL;\r\n    }\r\n\r\n    function realtimeRewardPerBlock(address user, uint256 blockno) public view returns (uint256,uint256) {\r\n        uint256 ret;\r\n        uint256 commontimestamp;\r\n            if (\r\n                !stakersRecord[user][blockno].withdrawan &&\r\n                !stakersRecord[user][blockno].unstaked\r\n            ) {\r\n                uint256 val;\r\n                uint256 tempharvesttime = stakersRecord[user][blockno].lastharvesttime;\r\n                commontimestamp = block.timestamp;\r\n                if(tempharvesttime == 0){\r\n                    tempharvesttime = stakersRecord[user][blockno].staketime;\r\n                }\r\n                val = commontimestamp - tempharvesttime;\r\n                val = val.mul(stakersRecord[user][blockno].persecondreward);\r\n                if (val < stakersRecord[user][blockno].remainingreward) {\r\n                    ret += val;\r\n                } else {\r\n                    ret += stakersRecord[user][blockno].remainingreward;\r\n                }\r\n            }\r\n        return (ret,commontimestamp);\r\n    }\r\n\r\n    function realtimeReward(address user) public view returns (uint256) {\r\n        uint256 ret;\r\n        for (uint256 i; i < Stakers[user].stakeCount; i++) {\r\n            if (\r\n                !stakersRecord[user][i].withdrawan &&\r\n                !stakersRecord[user][i].unstaked\r\n            ) {\r\n                uint256 val;\r\n                val = block.timestamp - stakersRecord[user][i].staketime;\r\n                val = val.mul(stakersRecord[user][i].persecondreward);\r\n                if (val < stakersRecord[user][i].reward) {\r\n                    ret += val;\r\n                } else {\r\n                    ret += stakersRecord[user][i].reward;\r\n                }\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n\r\n\r\n    function SetStakeLimits(uint256 _min, uint256 _max) external onlyowner {\r\n        minimumStakeToken = _min;\r\n        maxStakeableToken = _max;\r\n    }\r\n    function SetTotalFees(uint256 _fee) external onlyowner {\r\n        totalFee = _fee;\r\n    }\r\n\r\n    function SetStakeDuration(\r\n        uint256 first,\r\n        uint256 second,\r\n        uint256 third,\r\n        uint256 fourth\r\n    ) external onlyowner {\r\n        Duration[0] = first;\r\n        Duration[1] = second;\r\n        Duration[2] = third;\r\n        Duration[3] = fourth;\r\n    }\r\n\r\n    function SetStakeBonus(\r\n        uint256 first,\r\n        uint256 second,\r\n        uint256 third,\r\n        uint256 fourth\r\n    ) external onlyowner {\r\n        Bonus[0] = first;\r\n        Bonus[1] = second;\r\n        Bonus[2] = third;\r\n        Bonus[3] = fourth;\r\n    }\r\n\r\n\r\n    function withdrawETH() public onlyowner {\r\n        uint256 balance = address(this).balance;\r\n        require(balance > 0, \"does not have any balance\");\r\n        payable(msg.sender).transfer(balance);\r\n    }\r\n\r\n    function initToken(address addr) public onlyowner{\r\n        token3 = IERC20(addr);\r\n    }\r\n    function withdrawToken(uint256 amount) public onlyowner {\r\n        token3.transfer(msg.sender\r\n        , amount);\r\n    }\r\n}\r\n\r\nlibrary SafeMath {\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a + b;\r\n        require(c >= a, \"SafeMath: addition overflow\");\r\n\r\n        return c;\r\n    }\r\n\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return sub(a, b, \"SafeMath: subtraction overflow\");\r\n    }\r\n\r\n    function sub(\r\n        uint256 a,\r\n        uint256 b,\r\n        string memory errorMessage\r\n    ) internal pure returns (uint256) {\r\n        require(b <= a, errorMessage);\r\n        uint256 c = a - b;\r\n\r\n        return c;\r\n    }\r\n\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\r\n        // benefit is lost if 'b' is also tested.\r\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\r\n        if (a == 0) {\r\n            return 0;\r\n        }\r\n\r\n        uint256 c = a * b;\r\n        require(c / a == b, \"SafeMath: multiplication overflow\");\r\n\r\n        return c;\r\n    }\r\n\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return div(a, b, \"SafeMath: division by zero\");\r\n    }\r\n\r\n    function div(\r\n        uint256 a,\r\n        uint256 b,\r\n        string memory errorMessage\r\n    ) internal pure returns (uint256) {\r\n        require(b > 0, errorMessage);\r\n        uint256 c = a / b;\r\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\r\n\r\n        return c;\r\n    }\r\n\r\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return mod(a, b, \"SafeMath: modulo by zero\");\r\n    }\r\n\r\n    function mod(\r\n        uint256 a,\r\n        uint256 b,\r\n        string memory errorMessage\r\n    ) internal pure returns (uint256) {\r\n        require(b != 0, errorMessage);\r\n        return a % b;\r\n    }\r\n}",
    "etherscan_verified": true
}