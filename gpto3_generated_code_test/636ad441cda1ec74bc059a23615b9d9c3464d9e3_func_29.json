{
    "contract_address": "0x636aD441CdA1EC74BC059A23615b9D9c3464d9e3",
    "heimdall_input": "function setBuyDestFee(uint256 arg0) public {\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        _buyDestroyFee = arg0;\n        require(!(_buyLiquidityFee > ~(_buyMarketingFee)), \"SafeMath: addition overflow\");\n        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x11;\n        require(!((_buyLiquidityFee + _buyMarketingFee) < _buyLiquidityFee), \"SafeMath: addition overflow\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x1b;\n        var_d = 0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000;\n    }",
    "llm_output": "function setBuyDestFee(uint256 newBuyDestroyFee) public {\n    require(msg.sender == owner(), \"Ownable: caller is not the owner\");\n\n    _buyDestroyFee = newBuyDestroyFee;\n\n    // Overflow checks preserved from decompiled logic\n    require(!(_buyLiquidityFee > ~_buyMarketingFee), \"SafeMath: addition overflow\");\n    require(!((_buyLiquidityFee + _buyMarketingFee) < _buyLiquidityFee), \"SafeMath: addition overflow\");\n}",
    "ground_truth": "function setBuyDestFee(uint256 newBuyDestroyFee) public onlyOwner {\r\n        _buyDestroyFee = newBuyDestroyFee;\r\n        _totalTaxIfBuying = _buyLiquidityFee.add(_buyMarketingFee).add(_buyTeamFee).add(_buyDestroyFee);\r\n    }"
}