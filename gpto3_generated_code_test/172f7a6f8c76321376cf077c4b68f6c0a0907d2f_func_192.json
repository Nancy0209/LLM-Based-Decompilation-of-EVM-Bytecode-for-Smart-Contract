{
    "contract_address": "0x172F7a6F8C76321376cf077c4b68f6C0A0907d2f",
    "heimdall_input": "function transferOwnership(address arg0) public {\n        require(arg0 == (address(arg0)));\n        require(address(msg.sender) == (address(getOwner / 0x01)), \"!Owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_b = ((0x04 + var_c) + 0x20) - (0x04 + var_c);\n        var_d = 0x06;\n        var_e = 0x214f776e65720000000000000000000000000000000000000000000000000000;\n        getOwner = (address(arg0) * 0x01) | (uint96(getOwner));\n        address var_a = address(arg0);\n        emit OwnershipTransferred(address(arg0));\n    }",
    "llm_output": "function transferOwnership(address payable newOwner) public {\n        // Redundant check preserved from original byte-code\n        require(newOwner == address(newOwner));\n\n        // Only the current owner can transfer ownership\n        require(msg.sender == owner, \"!Owner\");\n\n        owner = newOwner;\n\n        emit OwnershipTransferred(newOwner);\n    }",
    "ground_truth": "function transferOwnership(address payable adr) public onlyOwner {\r\n        owner = adr;\r\n        emit OwnershipTransferred(adr);\r\n    }"
}