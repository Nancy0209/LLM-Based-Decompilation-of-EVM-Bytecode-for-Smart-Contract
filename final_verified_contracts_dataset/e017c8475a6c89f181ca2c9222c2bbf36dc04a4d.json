{
    "address": "0xE017C8475A6C89f181CA2C9222c2Bbf36dc04A4D",
    "tx_hash": "1f9298b471d800fca351f78272cd189b40e6d71da92d23dd54aaac7e9d0c21cb",
    "block_number": 18003191,
    "timestamp": 1693105355,
    "gas_used_in_creation": 1167131,
    "creation_bytecode": "608060405234801562000010575f80fd5b506040518060400160405280601381526020017f506570654f726967696e616c56657273696f6e0000000000000000000000000081525060059081620000579190620003df565b506040518060400160405280600381526020017f504f560000000000000000000000000000000000000000000000000000000000815250600490816200009e9190620003df565b50600960035f6101000a81548160ff021916908360ff160217905550670de0b6b3a76400006002819055506002545f803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055503373ffffffffffffffffffffffffffffffffffffffff165f73ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef6002546040516200016d9190620004d4565b60405180910390a3620004ef565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680620001f757607f821691505b6020821081036200020d576200020c620001b2565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f60088302620002717fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8262000234565b6200027d868362000234565b95508019841693508086168417925050509392505050565b5f819050919050565b5f819050919050565b5f620002c7620002c1620002bb8462000295565b6200029e565b62000295565b9050919050565b5f819050919050565b620002e283620002a7565b620002fa620002f182620002ce565b84845462000240565b825550505050565b5f90565b6200031062000302565b6200031d818484620002d7565b505050565b5b818110156200034457620003385f8262000306565b60018101905062000323565b5050565b601f82111562000393576200035d8162000213565b620003688462000225565b8101602085101562000378578190505b62000390620003878562000225565b83018262000322565b50505b505050565b5f82821c905092915050565b5f620003b55f198460080262000398565b1980831691505092915050565b5f620003cf8383620003a4565b9150826002028217905092915050565b620003ea826200017b565b67ffffffffffffffff81111562000406576200040562000185565b5b620004128254620001df565b6200041f82828562000348565b5f60209050601f83116001811462000455575f841562000440578287015190505b6200044c8582620003c2565b865550620004bb565b601f198416620004658662000213565b5f5b828110156200048e5784890151825560018201915060208501945060208101905062000467565b86831015620004ae5784890151620004aa601f891682620003a4565b8355505b6001600288020188555050505b505050505050565b620004ce8162000295565b82525050565b5f602082019050620004e95f830184620004c3565b92915050565b6111cd80620004fd5f395ff3fe608060405234801561000f575f80fd5b50600436106100a7575f3560e01c8063395093511161006f578063395093511461016557806370a082311461019557806395d89b41146101c5578063a457c2d7146101e3578063a9059cbb14610213578063dd62ed3e14610243576100a7565b806306fdde03146100ab578063095ea7b3146100c957806318160ddd146100f957806323b872dd14610117578063313ce56714610147575b5f80fd5b6100b3610273565b6040516100c09190610bf8565b60405180910390f35b6100e360048036038101906100de9190610ca9565b610303565b6040516100f09190610d01565b60405180910390f35b610101610319565b60405161010e9190610d29565b60405180910390f35b610131600480360381019061012c9190610d42565b610322565b60405161013e9190610d01565b60405180910390f35b61014f6103e8565b60405161015c9190610dad565b60405180910390f35b61017f600480360381019061017a9190610ca9565b6103fd565b60405161018c9190610d01565b60405180910390f35b6101af60048036038101906101aa9190610dc6565b61049d565b6040516101bc9190610d29565b60405180910390f35b6101cd6104e2565b6040516101da9190610bf8565b60405180910390f35b6101fd60048036038101906101f89190610ca9565b610572565b60405161020a9190610d01565b60405180910390f35b61022d60048036038101906102289190610ca9565b61062c565b60405161023a9190610d01565b60405180910390f35b61025d60048036038101906102589190610df1565b610642565b60405161026a9190610d29565b60405180910390f35b60606005805461028290610e5c565b80601f01602080910402602001604051908101604052809291908181526020018280546102ae90610e5c565b80156102f95780601f106102d0576101008083540402835291602001916102f9565b820191905f5260205f20905b8154815290600101906020018083116102dc57829003601f168201915b5050505050905090565b5f61030f3384846106c4565b6001905092915050565b5f600254905090565b5f61032e848484610887565b6103dd84336103d88560405180606001604052806028815260200161114b6028913960015f8b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054610b059092919063ffffffff16565b6106c4565b600190509392505050565b5f60035f9054906101000a900460ff16905090565b5f610493338461048e8560015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054610b5990919063ffffffff16565b6106c4565b6001905092915050565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b6060600480546104f190610e5c565b80601f016020809104026020016040519081016040528092919081815260200182805461051d90610e5c565b80156105685780601f1061053f57610100808354040283529160200191610568565b820191905f5260205f20905b81548152906001019060200180831161054b57829003601f168201915b5050505050905090565b5f610622338461061d856040518060600160405280602581526020016111736025913960015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054610b059092919063ffffffff16565b6106c4565b6001905092915050565b5f610638338484610887565b6001905092915050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610732576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161072990610efc565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036107a0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161079790610f8a565b60405180910390fd5b8060015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258360405161087a9190610d29565b60405180910390a3505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036108f5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108ec90611018565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610963576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161095a906110a6565b60405180910390fd5b6109cc81604051806060016040528060268152602001611125602691395f808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054610b059092919063ffffffff16565b5f808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550610a5b815f808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054610b5990919063ffffffff16565b5f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610af89190610d29565b60405180910390a3505050565b5f838311158290610b4c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b439190610bf8565b60405180910390fd5b5082840390509392505050565b5f8183610b6691906110f1565b905092915050565b5f81519050919050565b5f82825260208201905092915050565b5f5b83811015610ba5578082015181840152602081019050610b8a565b5f8484015250505050565b5f601f19601f8301169050919050565b5f610bca82610b6e565b610bd48185610b78565b9350610be4818560208601610b88565b610bed81610bb0565b840191505092915050565b5f6020820190508181035f830152610c108184610bc0565b905092915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610c4582610c1c565b9050919050565b610c5581610c3b565b8114610c5f575f80fd5b50565b5f81359050610c7081610c4c565b92915050565b5f819050919050565b610c8881610c76565b8114610c92575f80fd5b50565b5f81359050610ca381610c7f565b92915050565b5f8060408385031215610cbf57610cbe610c18565b5b5f610ccc85828601610c62565b9250506020610cdd85828601610c95565b9150509250929050565b5f8115159050919050565b610cfb81610ce7565b82525050565b5f602082019050610d145f830184610cf2565b92915050565b610d2381610c76565b82525050565b5f602082019050610d3c5f830184610d1a565b92915050565b5f805f60608486031215610d5957610d58610c18565b5b5f610d6686828701610c62565b9350506020610d7786828701610c62565b9250506040610d8886828701610c95565b9150509250925092565b5f60ff82169050919050565b610da781610d92565b82525050565b5f602082019050610dc05f830184610d9e565b92915050565b5f60208284031215610ddb57610dda610c18565b5b5f610de884828501610c62565b91505092915050565b5f8060408385031215610e0757610e06610c18565b5b5f610e1485828601610c62565b9250506020610e2585828601610c62565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680610e7357607f821691505b602082108103610e8657610e85610e2f565b5b50919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f206164645f8201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b5f610ee6602483610b78565b9150610ef182610e8c565b604082019050919050565b5f6020820190508181035f830152610f1381610eda565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f2061646472655f8201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b5f610f74602283610b78565b9150610f7f82610f1a565b604082019050919050565b5f6020820190508181035f830152610fa181610f68565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f2061645f8201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b5f611002602583610b78565b915061100d82610fa8565b604082019050919050565b5f6020820190508181035f83015261102f81610ff6565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f20616464725f8201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b5f611090602383610b78565b915061109b82611036565b604082019050919050565b5f6020820190508181035f8301526110bd81611084565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6110fb82610c76565b915061110683610c76565b925082820190508082111561111e5761111d6110c4565b5b9291505056fe45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa264697066735822122031670549758f1fb2b36df88d581730d8d1d82c6f1e659e2473976ae1ea73947164736f6c63430008150033",
    "runtime_bytecode": "608060405234801561000f575f80fd5b50600436106100a7575f3560e01c8063395093511161006f578063395093511461016557806370a082311461019557806395d89b41146101c5578063a457c2d7146101e3578063a9059cbb14610213578063dd62ed3e14610243576100a7565b806306fdde03146100ab578063095ea7b3146100c957806318160ddd146100f957806323b872dd14610117578063313ce56714610147575b5f80fd5b6100b3610273565b6040516100c09190610bf8565b60405180910390f35b6100e360048036038101906100de9190610ca9565b610303565b6040516100f09190610d01565b60405180910390f35b610101610319565b60405161010e9190610d29565b60405180910390f35b610131600480360381019061012c9190610d42565b610322565b60405161013e9190610d01565b60405180910390f35b61014f6103e8565b60405161015c9190610dad565b60405180910390f35b61017f600480360381019061017a9190610ca9565b6103fd565b60405161018c9190610d01565b60405180910390f35b6101af60048036038101906101aa9190610dc6565b61049d565b6040516101bc9190610d29565b60405180910390f35b6101cd6104e2565b6040516101da9190610bf8565b60405180910390f35b6101fd60048036038101906101f89190610ca9565b610572565b60405161020a9190610d01565b60405180910390f35b61022d60048036038101906102289190610ca9565b61062c565b60405161023a9190610d01565b60405180910390f35b61025d60048036038101906102589190610df1565b610642565b60405161026a9190610d29565b60405180910390f35b60606005805461028290610e5c565b80601f01602080910402602001604051908101604052809291908181526020018280546102ae90610e5c565b80156102f95780601f106102d0576101008083540402835291602001916102f9565b820191905f5260205f20905b8154815290600101906020018083116102dc57829003601f168201915b5050505050905090565b5f61030f3384846106c4565b6001905092915050565b5f600254905090565b5f61032e848484610887565b6103dd84336103d88560405180606001604052806028815260200161114b6028913960015f8b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054610b059092919063ffffffff16565b6106c4565b600190509392505050565b5f60035f9054906101000a900460ff16905090565b5f610493338461048e8560015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054610b5990919063ffffffff16565b6106c4565b6001905092915050565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b6060600480546104f190610e5c565b80601f016020809104026020016040519081016040528092919081815260200182805461051d90610e5c565b80156105685780601f1061053f57610100808354040283529160200191610568565b820191905f5260205f20905b81548152906001019060200180831161054b57829003601f168201915b5050505050905090565b5f610622338461061d856040518060600160405280602581526020016111736025913960015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054610b059092919063ffffffff16565b6106c4565b6001905092915050565b5f610638338484610887565b6001905092915050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610732576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161072990610efc565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036107a0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161079790610f8a565b60405180910390fd5b8060015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258360405161087a9190610d29565b60405180910390a3505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036108f5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108ec90611018565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610963576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161095a906110a6565b60405180910390fd5b6109cc81604051806060016040528060268152602001611125602691395f808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054610b059092919063ffffffff16565b5f808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550610a5b815f808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054610b5990919063ffffffff16565b5f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610af89190610d29565b60405180910390a3505050565b5f838311158290610b4c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b439190610bf8565b60405180910390fd5b5082840390509392505050565b5f8183610b6691906110f1565b905092915050565b5f81519050919050565b5f82825260208201905092915050565b5f5b83811015610ba5578082015181840152602081019050610b8a565b5f8484015250505050565b5f601f19601f8301169050919050565b5f610bca82610b6e565b610bd48185610b78565b9350610be4818560208601610b88565b610bed81610bb0565b840191505092915050565b5f6020820190508181035f830152610c108184610bc0565b905092915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610c4582610c1c565b9050919050565b610c5581610c3b565b8114610c5f575f80fd5b50565b5f81359050610c7081610c4c565b92915050565b5f819050919050565b610c8881610c76565b8114610c92575f80fd5b50565b5f81359050610ca381610c7f565b92915050565b5f8060408385031215610cbf57610cbe610c18565b5b5f610ccc85828601610c62565b9250506020610cdd85828601610c95565b9150509250929050565b5f8115159050919050565b610cfb81610ce7565b82525050565b5f602082019050610d145f830184610cf2565b92915050565b610d2381610c76565b82525050565b5f602082019050610d3c5f830184610d1a565b92915050565b5f805f60608486031215610d5957610d58610c18565b5b5f610d6686828701610c62565b9350506020610d7786828701610c62565b9250506040610d8886828701610c95565b9150509250925092565b5f60ff82169050919050565b610da781610d92565b82525050565b5f602082019050610dc05f830184610d9e565b92915050565b5f60208284031215610ddb57610dda610c18565b5b5f610de884828501610c62565b91505092915050565b5f8060408385031215610e0757610e06610c18565b5b5f610e1485828601610c62565b9250506020610e2585828601610c62565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680610e7357607f821691505b602082108103610e8657610e85610e2f565b5b50919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f206164645f8201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b5f610ee6602483610b78565b9150610ef182610e8c565b604082019050919050565b5f6020820190508181035f830152610f1381610eda565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f2061646472655f8201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b5f610f74602283610b78565b9150610f7f82610f1a565b604082019050919050565b5f6020820190508181035f830152610fa181610f68565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f2061645f8201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b5f611002602583610b78565b915061100d82610fa8565b604082019050919050565b5f6020820190508181035f83015261102f81610ff6565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f20616464725f8201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b5f611090602383610b78565b915061109b82611036565b604082019050919050565b5f6020820190508181035f8301526110bd81611084565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6110fb82610c76565b915061110683610c76565b925082820190508082111561111e5761111d6110c4565b5b9291505056fe45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa264697066735822122031670549758f1fb2b36df88d581730d8d1d82c6f1e659e2473976ae1ea73947164736f6c63430008150033",
    "contract_name": "POV",
    "compiler_version": "v0.8.21+commit.d9974bed",
    "optimization_used": "0",
    "runs": "200",
    "abi": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]",
    "source_code": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\nlibrary SafeMath {\r\n    \r\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\r\n        unchecked {\r\n            uint256 c = a + b;\r\n            if (c < a) return (false, 0);\r\n            return (true, c);\r\n        }\r\n    }\r\n\r\n   \r\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\r\n        unchecked {\r\n            if (b > a) return (false, 0);\r\n            return (true, a - b);\r\n        }\r\n    }\r\n\r\n    \r\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\r\n        unchecked {\r\n           \r\n            if (a == 0) return (true, 0);\r\n            uint256 c = a * b;\r\n            if (c / a != b) return (false, 0);\r\n            return (true, c);\r\n        }\r\n    }\r\n\r\n   \r\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\r\n        unchecked {\r\n            if (b == 0) return (false, 0);\r\n            return (true, a / b);\r\n        }\r\n    }\r\n\r\n   \r\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\r\n        unchecked {\r\n            if (b == 0) return (false, 0);\r\n            return (true, a % b);\r\n        }\r\n    }\r\n\r\n   \r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a + b;\r\n    }\r\n\r\n \r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a - b;\r\n    }\r\n\r\n   \r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a * b;\r\n    }\r\n\r\n  \r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a / b;\r\n    }\r\n\r\n    \r\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a % b;\r\n    }\r\n\r\n    \r\n    function sub(\r\n        uint256 a,\r\n        uint256 b,\r\n        string memory errorMessage\r\n    ) internal pure returns (uint256) {\r\n        unchecked {\r\n            require(b <= a, errorMessage);\r\n            return a - b;\r\n        }\r\n    }\r\n\r\n    \r\n    function div(\r\n        uint256 a,\r\n        uint256 b,\r\n        string memory errorMessage\r\n    ) internal pure returns (uint256) {\r\n        unchecked {\r\n            require(b > 0, errorMessage);\r\n            return a / b;\r\n        }\r\n    }\r\n\r\n    \r\n    function mod(\r\n        uint256 a,\r\n        uint256 b,\r\n        string memory errorMessage\r\n    ) internal pure returns (uint256) {\r\n        unchecked {\r\n            require(b > 0, errorMessage);\r\n            return a % b;\r\n        }\r\n    }\r\n}\r\n\r\ninterface IERC20 {\r\n    \r\n    function totalSupply() external view returns (uint256);\r\n\r\n    function balanceOf(address account) external view returns (uint256);\r\n\r\n    \r\n    function transfer(address recipient, uint256 amount) external returns (bool);\r\n\r\n    \r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n\r\n   \r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n\r\n   \r\n    function transferFrom(\r\n        address sender,\r\n        address recipient,\r\n        uint256 amount\r\n    ) external returns (bool);\r\n\r\n   \r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n    \r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}\r\n\r\ncontract POV is IERC20 {\r\n    using SafeMath for uint256;\r\n    \r\n    mapping (address => uint256) private _balances;\r\n    mapping (address => mapping (address => uint256)) private _allowances;\r\n    \r\n    uint256 private _totalSupply;\r\n    uint8 private _decimals;\r\n    string private _symbol;\r\n    string private _name;\r\n    \r\n    constructor() {\r\n        _name = \"PepeOriginalVersion\";\r\n        _symbol = \"POV\";\r\n        _decimals = 9;\r\n        _totalSupply = 1000000000000000000;\r\n        _balances[msg.sender] = _totalSupply;\r\n        \r\n        emit Transfer(address(0), msg.sender, _totalSupply);\r\n    }\r\n    \r\n    function decimals() external view  returns (uint8) {\r\n        return _decimals;\r\n    }\r\n    \r\n    function symbol() external view  returns (string memory) {\r\n        return _symbol;\r\n    }\r\n   \r\n    function name() external view  returns (string memory) {\r\n        return _name;\r\n    }\r\n    \r\n    \r\n    function totalSupply() external view override returns (uint256) {\r\n        return _totalSupply;\r\n    }\r\n    \r\n   \r\n    function balanceOf(address account) external view override returns (uint256) {\r\n        return _balances[account];\r\n    }\r\n\r\n    function transfer(address recipient, uint256 amount) public override  returns (bool) {\r\n        _transfer(msg.sender, recipient, amount);\r\n        return true;\r\n    }\r\n    \r\n    function allowance(address owner, address spender) external view override returns (uint256) {\r\n        return _allowances[owner][spender];\r\n    }\r\n    \r\n    function approve(address spender, uint256 amount) public  override  returns (bool) {\r\n        _approve(msg.sender, spender, amount);\r\n        return true;\r\n    }\r\n    \r\n    function transferFrom(\r\n        address sender,\r\n        address recipient,\r\n        uint256 amount\r\n    ) public override  returns (bool) {\r\n        _transfer(sender, recipient, amount);\r\n        _approve(\r\n            sender,\r\n            msg.sender,\r\n            _allowances[sender][msg.sender].sub(\r\n                amount,\r\n                \"ERC20: transfer amount exceeds allowance\"\r\n            )\r\n        );\r\n        return true;\r\n    }\r\n    \r\n    function increaseAllowance(address spender, uint256 addedValue)\r\n        public\r\n        \r\n        returns (bool)\r\n    {\r\n        _approve(\r\n            msg.sender,\r\n            spender,\r\n            _allowances[msg.sender][spender].add(addedValue)\r\n        );\r\n        return true;\r\n    }\r\n    \r\n    function decreaseAllowance(address spender, uint256 subtractedValue)\r\n        public\r\n        \r\n        returns (bool)\r\n    {\r\n        _approve(\r\n            msg.sender,\r\n            spender,\r\n            _allowances[msg.sender][spender].sub(\r\n                subtractedValue,\r\n                \"ERC20: decreased allowance below zero\"\r\n            )\r\n        );\r\n        return true;\r\n    }\r\n    \r\n    function _transfer(address sender, address recipient, uint256 amount) internal {\r\n        require(sender != address(0), \"ERC20: transfer from the zero address\");\r\n        require(recipient != address(0), \"ERC20: transfer to the zero address\");\r\n        \r\n        _balances[sender] = _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\");\r\n        _balances[recipient] = _balances[recipient].add(amount);\r\n        emit Transfer(sender, recipient, amount);\r\n    }\r\n    \r\n    function _approve(address owner, address spender, uint256 amount) internal {\r\n        require(owner != address(0), \"ERC20: approve from the zero address\");\r\n        require(spender != address(0), \"ERC20: approve to the zero address\");\r\n        \r\n        _allowances[owner][spender] = amount;\r\n        emit Approval(owner, spender, amount);\r\n         }\r\n}",
    "etherscan_verified": true
}