{
    "address": "0xdcb0A4559562a8854074Aeaf47B9549aD1eC1163",
    "tx_hash": "d63dc82887c5f774e18b56b31eee05c491c4f6c31e5f393f1cb3bb31a59d3a74",
    "block_number": 18002187,
    "timestamp": 1693093235,
    "gas_used_in_creation": 3150482,
    "creation_bytecode": "60806040525f60065f6101000a81548160ff0219169083151502179055506014600755601460085560016009556001600a556019600b556019600c556014600d555f600e556008600a6200005491906200060b565b621e84806200006491906200065b565b600f556008600a6200007791906200060b565b621e84806200008791906200065b565b6010556008600a6200009a91906200060b565b620186a0620000aa91906200065b565b6011556008600a620000bd91906200060b565b620f4240620000cd91906200065b565b6012555f601460156101000a81548160ff0219169083151502179055505f601460166101000a81548160ff02191690831515021790555034801562000110575f80fd5b505f620001226200044b60201b60201c565b9050805f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff165f73ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a350620001ce6200044b60201b60201c565b600660016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506008600a6200021e91906200060b565b6305f5e1006200022f91906200065b565b60015f620002426200044b60201b60201c565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550600160035f620002946200045260201b60201c565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550600160035f3073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550600160035f600660019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550620003bf6200044b60201b60201c565b73ffffffffffffffffffffffffffffffffffffffff165f73ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef6008600a6200041d91906200060b565b6305f5e1006200042e91906200065b565b6040516200043d9190620006b6565b60405180910390a3620006d1565b5f33905090565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f8160011c9050919050565b5f808291508390505b60018511156200050357808604811115620004db57620004da62000479565b5b6001851615620004eb5780820291505b8081029050620004fb85620004a6565b9450620004bb565b94509492505050565b5f826200051d5760019050620005ef565b816200052c575f9050620005ef565b8160018114620005455760028114620005505762000586565b6001915050620005ef565b60ff84111562000565576200056462000479565b5b8360020a9150848211156200057f576200057e62000479565b5b50620005ef565b5060208310610133831016604e8410600b8410161715620005c05782820a905083811115620005ba57620005b962000479565b5b620005ef565b620005cf8484846001620004b2565b92509050818404811115620005e957620005e862000479565b5b81810290505b9392505050565b5f819050919050565b5f60ff82169050919050565b5f6200061782620005f6565b91506200062483620005ff565b9250620006537fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff84846200050c565b905092915050565b5f6200066782620005f6565b91506200067483620005f6565b92508282026200068481620005f6565b915082820484148315176200069e576200069d62000479565b5b5092915050565b620006b081620005f6565b82525050565b5f602082019050620006cb5f830184620006a5565b92915050565b61310380620006df5f395ff3fe608060405260043610610122575f3560e01c8063751039fc1161009f578063a9059cbb11610063578063a9059cbb146103af578063bf474bed146103eb578063c876d0b914610415578063c9567bf91461043f578063dd62ed3e1461045557610129565b8063751039fc146102f15780637d1db4a5146103075780638da5cb5b146103315780638f9a55c01461035b57806395d89b411461038557610129565b8063313ce567116100e6578063313ce567146102235780633bbac5791461024d57806351bc3c851461028957806370a082311461029f578063715018a6146102db57610129565b806306fdde031461012d578063095ea7b3146101575780630faee56f1461019357806318160ddd146101bd57806323b872dd146101e757610129565b3661012957005b5f80fd5b348015610138575f80fd5b50610141610491565b60405161014e91906121f4565b60405180910390f35b348015610162575f80fd5b5061017d600480360381019061017891906122a5565b6104b1565b60405161018a91906122fd565b60405180910390f35b34801561019e575f80fd5b506101a76104ce565b6040516101b49190612325565b60405180910390f35b3480156101c8575f80fd5b506101d16104d4565b6040516101de9190612325565b60405180910390f35b3480156101f2575f80fd5b5061020d6004803603810190610208919061233e565b6104f7565b60405161021a91906122fd565b60405180910390f35b34801561022e575f80fd5b506102376105cb565b60405161024491906123a9565b60405180910390f35b348015610258575f80fd5b50610273600480360381019061026e91906123c2565b6105d3565b60405161028091906122fd565b60405180910390f35b348015610294575f80fd5b5061029d610625565b005b3480156102aa575f80fd5b506102c560048036038101906102c091906123c2565b6106bd565b6040516102d29190612325565b60405180910390f35b3480156102e6575f80fd5b506102ef610703565b005b3480156102fc575f80fd5b50610305610851565b005b348015610312575f80fd5b5061031b610999565b6040516103289190612325565b60405180910390f35b34801561033c575f80fd5b5061034561099f565b60405161035291906123fc565b60405180910390f35b348015610366575f80fd5b5061036f6109c6565b60405161037c9190612325565b60405180910390f35b348015610390575f80fd5b506103996109cc565b6040516103a691906121f4565b60405180910390f35b3480156103ba575f80fd5b506103d560048036038101906103d091906122a5565b610a09565b6040516103e291906122fd565b60405180910390f35b3480156103f6575f80fd5b506103ff610a26565b60405161040c9190612325565b60405180910390f35b348015610420575f80fd5b50610429610a2c565b60405161043691906122fd565b60405180910390f35b34801561044a575f80fd5b50610453610a3e565b005b348015610460575f80fd5b5061047b60048036038101906104769190612415565b610f5d565b6040516104889190612325565b60405180910390f35b606060405180606001604052806027815260200161307f60279139905090565b5f6104c46104bd610fdf565b8484610fe6565b6001905092915050565b60125481565b5f6008600a6104e391906125af565b6305f5e1006104f291906125f9565b905090565b5f6105038484846111a9565b6105c08461050f610fdf565b6105bb856040518060600160405280602881526020016130a66028913960025f8b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f610572610fdf565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054611c289092919063ffffffff16565b610fe6565b600190509392505050565b5f6008905090565b5f60045f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff169050919050565b600660019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610666610fdf565b73ffffffffffffffffffffffffffffffffffffffff1614610685575f80fd5b5f61068f306106bd565b90505f8111156106a3576106a281611c8a565b5b5f4790505f8111156106b9576106b881611f11565b5b5050565b5f60015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b61070b610fdf565b73ffffffffffffffffffffffffffffffffffffffff165f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610797576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161078e90612684565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff165f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35f805f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b610859610fdf565b73ffffffffffffffffffffffffffffffffffffffff165f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146108e5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108dc90612684565b60405180910390fd5b6008600a6108f391906125af565b6305f5e10061090291906125f9565b600f819055506008600a61091691906125af565b6305f5e10061092591906125f9565b6010819055505f60065f6101000a81548160ff0219169083151502179055507f947f344d56e1e8c70dc492fb94c4ddddd490c016aab685f5e7e47b2e85cb44cf6008600a61097391906125af565b6305f5e10061098291906125f9565b60405161098f9190612325565b60405180910390a1565b600f5481565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60105481565b60606040518060400160405280600581526020017f4a55444153000000000000000000000000000000000000000000000000000000815250905090565b5f610a1c610a15610fdf565b84846111a9565b6001905092915050565b60115481565b60065f9054906101000a900460ff1681565b610a46610fdf565b73ffffffffffffffffffffffffffffffffffffffff165f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610ad2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ac990612684565b60405180910390fd5b60148054906101000a900460ff1615610b20576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b17906126ec565b60405180910390fd5b737a250d5630b4cf539739df2c5dacb4c659f2488d60135f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610bbc3060135f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff166008600a610ba891906125af565b6305f5e100610bb791906125f9565b610fe6565b60135f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c45a01556040518163ffffffff1660e01b8152600401602060405180830381865afa158015610c26573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610c4a919061271e565b73ffffffffffffffffffffffffffffffffffffffff1663c9c653963060135f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa158015610cd0573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610cf4919061271e565b6040518363ffffffff1660e01b8152600401610d11929190612749565b6020604051808303815f875af1158015610d2d573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610d51919061271e565b60145f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060135f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f305d7194730610dd8306106bd565b5f80610de261099f565b426040518863ffffffff1660e01b8152600401610e04969594939291906127b2565b60606040518083038185885af1158015610e20573d5f803e3d5ffd5b50505050506040513d601f19601f82011682018060405250810190610e459190612825565b50505060145f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663095ea7b360135f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff167fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6040518363ffffffff1660e01b8152600401610ee5929190612875565b6020604051808303815f875af1158015610f01573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610f2591906128c6565b506001601460166101000a81548160ff02191690831515021790555060016014806101000a81548160ff021916908315150217905550565b5f60025f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b5f33905090565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611054576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161104b90612961565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036110c2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110b9906129ef565b60405180910390fd5b8060025f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258360405161119c9190612325565b60405180910390a3505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611217576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161120e90612a7d565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611285576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161127c90612b0b565b60405180910390fd5b5f81116112c7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112be90612b99565b60405180910390fd5b5f6112d061099f565b73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161415801561133e575061130e61099f565b73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614155b156119785760045f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff161580156113e1575060045f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16155b6113e9575f80fd5b60065f9054906101000a900460ff161561156f5760135f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141580156114a7575060145f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614155b1561156e574360055f3273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20541061152b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161152290612c27565b60405180910390fd5b4360055f3273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055505b5b60145f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16148015611618575060135f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614155b801561166b575060035f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16155b1561174457600f548211156116b5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116ac90612c8f565b60405180910390fd5b601054826116c2856106bd565b6116cc9190612cad565b111561170d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161170490612d2a565b60405180910390fd5b600d54600e54101561172c5761172283611f7a565b1561172b575f80fd5b5b600e5f81548092919061173e90612d48565b91905055505b6117806064611772600b54600e541161175f57600754611763565b6009545b85611f8b90919063ffffffff16565b61200290919063ffffffff16565b905060145f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614801561180a57503073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614155b1561189357600f54821115611854576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161184b90612c8f565b60405180910390fd5b6118906064611882600c54600e541161186f57600854611873565b600a545b85611f8b90919063ffffffff16565b61200290919063ffffffff16565b90505b5f61189d306106bd565b9050601460159054906101000a900460ff16158015611908575060145f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16145b80156119205750601460169054906101000a900460ff165b801561192d575060115481115b801561193c5750600d54600e54115b156119765761195e611959846119548460125461204b565b61204b565b611c8a565b5f4790505f8111156119745761197347611f11565b5b505b505b5f811115611a77576119d08160015f3073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205461206390919063ffffffff16565b60015f3073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055503073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051611a6e9190612325565b60405180910390a35b611ac78260015f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20546120c090919063ffffffff16565b60015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550611b6a611b1e82846120c090919063ffffffff16565b60015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205461206390919063ffffffff16565b60015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef611c0d84866120c090919063ffffffff16565b604051611c1a9190612325565b60405180910390a350505050565b5f838311158290611c6f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611c6691906121f4565b60405180910390fd5b505f8385611c7d9190612d8f565b9050809150509392505050565b6001601460156101000a81548160ff0219169083151502179055505f810315611ef45760148054906101000a900460ff1615611ef4575f600267ffffffffffffffff811115611cdc57611cdb612dc2565b5b604051908082528060200260200182016040528015611d0a5781602001602082028036833780820191505090505b50905030815f81518110611d2157611d20612def565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505060135f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa158015611dc5573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611de9919061271e565b81600181518110611dfd57611dfc612def565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050611e633060135f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1684610fe6565b60135f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663791ac947835f8430426040518663ffffffff1660e01b8152600401611ec5959493929190612ed3565b5f604051808303815f87803b158015611edc575f80fd5b505af1158015611eee573d5f803e3d5ffd5b50505050505b5f601460156101000a81548160ff02191690831515021790555050565b600660019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc8290811502906040515f60405180830381858888f19350505050158015611f76573d5f803e3d5ffd5b5050565b5f80823b90505f8111915050919050565b5f808303611f9b575f9050611ffc565b5f8284611fa891906125f9565b9050828482611fb79190612f58565b14611ff7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611fee90612ff8565b60405180910390fd5b809150505b92915050565b5f61204383836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250612109565b905092915050565b5f818311612059578261205b565b815b905092915050565b5f8082846120719190612cad565b9050838110156120b6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016120ad90613060565b60405180910390fd5b8091505092915050565b5f61210183836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250611c28565b905092915050565b5f808311829061214f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161214691906121f4565b60405180910390fd5b505f838561215d9190612f58565b9050809150509392505050565b5f81519050919050565b5f82825260208201905092915050565b5f5b838110156121a1578082015181840152602081019050612186565b5f8484015250505050565b5f601f19601f8301169050919050565b5f6121c68261216a565b6121d08185612174565b93506121e0818560208601612184565b6121e9816121ac565b840191505092915050565b5f6020820190508181035f83015261220c81846121bc565b905092915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61224182612218565b9050919050565b61225181612237565b811461225b575f80fd5b50565b5f8135905061226c81612248565b92915050565b5f819050919050565b61228481612272565b811461228e575f80fd5b50565b5f8135905061229f8161227b565b92915050565b5f80604083850312156122bb576122ba612214565b5b5f6122c88582860161225e565b92505060206122d985828601612291565b9150509250929050565b5f8115159050919050565b6122f7816122e3565b82525050565b5f6020820190506123105f8301846122ee565b92915050565b61231f81612272565b82525050565b5f6020820190506123385f830184612316565b92915050565b5f805f6060848603121561235557612354612214565b5b5f6123628682870161225e565b93505060206123738682870161225e565b925050604061238486828701612291565b9150509250925092565b5f60ff82169050919050565b6123a38161238e565b82525050565b5f6020820190506123bc5f83018461239a565b92915050565b5f602082840312156123d7576123d6612214565b5b5f6123e48482850161225e565b91505092915050565b6123f681612237565b82525050565b5f60208201905061240f5f8301846123ed565b92915050565b5f806040838503121561242b5761242a612214565b5b5f6124388582860161225e565b92505060206124498582860161225e565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f8160011c9050919050565b5f808291508390505b60018511156124d5578086048111156124b1576124b0612453565b5b60018516156124c05780820291505b80810290506124ce85612480565b9450612495565b94509492505050565b5f826124ed57600190506125a8565b816124fa575f90506125a8565b8160018114612510576002811461251a57612549565b60019150506125a8565b60ff84111561252c5761252b612453565b5b8360020a91508482111561254357612542612453565b5b506125a8565b5060208310610133831016604e8410600b841016171561257e5782820a90508381111561257957612578612453565b5b6125a8565b61258b848484600161248c565b925090508184048111156125a2576125a1612453565b5b81810290505b9392505050565b5f6125b982612272565b91506125c48361238e565b92506125f17fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff84846124de565b905092915050565b5f61260382612272565b915061260e83612272565b925082820261261c81612272565b9150828204841483151761263357612632612453565b5b5092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65725f82015250565b5f61266e602083612174565b91506126798261263a565b602082019050919050565b5f6020820190508181035f83015261269b81612662565b9050919050565b7f74726164696e6720697320616c7265616479206f70656e0000000000000000005f82015250565b5f6126d6601783612174565b91506126e1826126a2565b602082019050919050565b5f6020820190508181035f830152612703816126ca565b9050919050565b5f8151905061271881612248565b92915050565b5f6020828403121561273357612732612214565b5b5f6127408482850161270a565b91505092915050565b5f60408201905061275c5f8301856123ed565b61276960208301846123ed565b9392505050565b5f819050919050565b5f819050919050565b5f61279c61279761279284612770565b612779565b612272565b9050919050565b6127ac81612782565b82525050565b5f60c0820190506127c55f8301896123ed565b6127d26020830188612316565b6127df60408301876127a3565b6127ec60608301866127a3565b6127f960808301856123ed565b61280660a0830184612316565b979650505050505050565b5f8151905061281f8161227b565b92915050565b5f805f6060848603121561283c5761283b612214565b5b5f61284986828701612811565b935050602061285a86828701612811565b925050604061286b86828701612811565b9150509250925092565b5f6040820190506128885f8301856123ed565b6128956020830184612316565b9392505050565b6128a5816122e3565b81146128af575f80fd5b50565b5f815190506128c08161289c565b92915050565b5f602082840312156128db576128da612214565b5b5f6128e8848285016128b2565b91505092915050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f206164645f8201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b5f61294b602483612174565b9150612956826128f1565b604082019050919050565b5f6020820190508181035f8301526129788161293f565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f2061646472655f8201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b5f6129d9602283612174565b91506129e48261297f565b604082019050919050565b5f6020820190508181035f830152612a06816129cd565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f2061645f8201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b5f612a67602583612174565b9150612a7282612a0d565b604082019050919050565b5f6020820190508181035f830152612a9481612a5b565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f20616464725f8201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b5f612af5602383612174565b9150612b0082612a9b565b604082019050919050565b5f6020820190508181035f830152612b2281612ae9565b9050919050565b7f5472616e7366657220616d6f756e74206d7573742062652067726561746572205f8201527f7468616e207a65726f0000000000000000000000000000000000000000000000602082015250565b5f612b83602983612174565b9150612b8e82612b29565b604082019050919050565b5f6020820190508181035f830152612bb081612b77565b9050919050565b7f4f6e6c79206f6e65207472616e736665722070657220626c6f636b20616c6c6f5f8201527f7765642e00000000000000000000000000000000000000000000000000000000602082015250565b5f612c11602483612174565b9150612c1c82612bb7565b604082019050919050565b5f6020820190508181035f830152612c3e81612c05565b9050919050565b7f4578636565647320746865205f6d61785478416d6f756e742e000000000000005f82015250565b5f612c79601983612174565b9150612c8482612c45565b602082019050919050565b5f6020820190508181035f830152612ca681612c6d565b9050919050565b5f612cb782612272565b9150612cc283612272565b9250828201905080821115612cda57612cd9612453565b5b92915050565b7f4578636565647320746865206d617857616c6c657453697a652e0000000000005f82015250565b5f612d14601a83612174565b9150612d1f82612ce0565b602082019050919050565b5f6020820190508181035f830152612d4181612d08565b9050919050565b5f612d5282612272565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203612d8457612d83612453565b5b600182019050919050565b5f612d9982612272565b9150612da483612272565b9250828203905081811115612dbc57612dbb612453565b5b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b612e4e81612237565b82525050565b5f612e5f8383612e45565b60208301905092915050565b5f602082019050919050565b5f612e8182612e1c565b612e8b8185612e26565b9350612e9683612e36565b805f5b83811015612ec6578151612ead8882612e54565b9750612eb883612e6b565b925050600181019050612e99565b5085935050505092915050565b5f60a082019050612ee65f830188612316565b612ef360208301876127a3565b8181036040830152612f058186612e77565b9050612f1460608301856123ed565b612f216080830184612316565b9695505050505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f612f6282612272565b9150612f6d83612272565b925082612f7d57612f7c612f2b565b5b828204905092915050565b7f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f5f8201527f7700000000000000000000000000000000000000000000000000000000000000602082015250565b5f612fe2602183612174565b9150612fed82612f88565b604082019050919050565b5f6020820190508181035f83015261300f81612fd6565b9050919050565b7f536166654d6174683a206164646974696f6e206f766572666c6f7700000000005f82015250565b5f61304a601b83612174565b915061305582613016565b602082019050919050565b5f6020820190508181035f8301526130778161303e565b905091905056fe4d697374616b6573486176654265656e4d61646546726f6d4157616c6c657449436f6e74726f6c45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365a26469706673582212206da15263ce6bf0bf5e9eee5aa3f15b370bc4dbf58b6776ef129edf72947914e564736f6c63430008140033",
    "runtime_bytecode": "608060405260043610610122575f3560e01c8063751039fc1161009f578063a9059cbb11610063578063a9059cbb146103af578063bf474bed146103eb578063c876d0b914610415578063c9567bf91461043f578063dd62ed3e1461045557610129565b8063751039fc146102f15780637d1db4a5146103075780638da5cb5b146103315780638f9a55c01461035b57806395d89b411461038557610129565b8063313ce567116100e6578063313ce567146102235780633bbac5791461024d57806351bc3c851461028957806370a082311461029f578063715018a6146102db57610129565b806306fdde031461012d578063095ea7b3146101575780630faee56f1461019357806318160ddd146101bd57806323b872dd146101e757610129565b3661012957005b5f80fd5b348015610138575f80fd5b50610141610491565b60405161014e91906121f4565b60405180910390f35b348015610162575f80fd5b5061017d600480360381019061017891906122a5565b6104b1565b60405161018a91906122fd565b60405180910390f35b34801561019e575f80fd5b506101a76104ce565b6040516101b49190612325565b60405180910390f35b3480156101c8575f80fd5b506101d16104d4565b6040516101de9190612325565b60405180910390f35b3480156101f2575f80fd5b5061020d6004803603810190610208919061233e565b6104f7565b60405161021a91906122fd565b60405180910390f35b34801561022e575f80fd5b506102376105cb565b60405161024491906123a9565b60405180910390f35b348015610258575f80fd5b50610273600480360381019061026e91906123c2565b6105d3565b60405161028091906122fd565b60405180910390f35b348015610294575f80fd5b5061029d610625565b005b3480156102aa575f80fd5b506102c560048036038101906102c091906123c2565b6106bd565b6040516102d29190612325565b60405180910390f35b3480156102e6575f80fd5b506102ef610703565b005b3480156102fc575f80fd5b50610305610851565b005b348015610312575f80fd5b5061031b610999565b6040516103289190612325565b60405180910390f35b34801561033c575f80fd5b5061034561099f565b60405161035291906123fc565b60405180910390f35b348015610366575f80fd5b5061036f6109c6565b60405161037c9190612325565b60405180910390f35b348015610390575f80fd5b506103996109cc565b6040516103a691906121f4565b60405180910390f35b3480156103ba575f80fd5b506103d560048036038101906103d091906122a5565b610a09565b6040516103e291906122fd565b60405180910390f35b3480156103f6575f80fd5b506103ff610a26565b60405161040c9190612325565b60405180910390f35b348015610420575f80fd5b50610429610a2c565b60405161043691906122fd565b60405180910390f35b34801561044a575f80fd5b50610453610a3e565b005b348015610460575f80fd5b5061047b60048036038101906104769190612415565b610f5d565b6040516104889190612325565b60405180910390f35b606060405180606001604052806027815260200161307f60279139905090565b5f6104c46104bd610fdf565b8484610fe6565b6001905092915050565b60125481565b5f6008600a6104e391906125af565b6305f5e1006104f291906125f9565b905090565b5f6105038484846111a9565b6105c08461050f610fdf565b6105bb856040518060600160405280602881526020016130a66028913960025f8b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f610572610fdf565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054611c289092919063ffffffff16565b610fe6565b600190509392505050565b5f6008905090565b5f60045f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff169050919050565b600660019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610666610fdf565b73ffffffffffffffffffffffffffffffffffffffff1614610685575f80fd5b5f61068f306106bd565b90505f8111156106a3576106a281611c8a565b5b5f4790505f8111156106b9576106b881611f11565b5b5050565b5f60015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b61070b610fdf565b73ffffffffffffffffffffffffffffffffffffffff165f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610797576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161078e90612684565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff165f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35f805f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b610859610fdf565b73ffffffffffffffffffffffffffffffffffffffff165f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146108e5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108dc90612684565b60405180910390fd5b6008600a6108f391906125af565b6305f5e10061090291906125f9565b600f819055506008600a61091691906125af565b6305f5e10061092591906125f9565b6010819055505f60065f6101000a81548160ff0219169083151502179055507f947f344d56e1e8c70dc492fb94c4ddddd490c016aab685f5e7e47b2e85cb44cf6008600a61097391906125af565b6305f5e10061098291906125f9565b60405161098f9190612325565b60405180910390a1565b600f5481565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60105481565b60606040518060400160405280600581526020017f4a55444153000000000000000000000000000000000000000000000000000000815250905090565b5f610a1c610a15610fdf565b84846111a9565b6001905092915050565b60115481565b60065f9054906101000a900460ff1681565b610a46610fdf565b73ffffffffffffffffffffffffffffffffffffffff165f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610ad2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ac990612684565b60405180910390fd5b60148054906101000a900460ff1615610b20576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b17906126ec565b60405180910390fd5b737a250d5630b4cf539739df2c5dacb4c659f2488d60135f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610bbc3060135f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff166008600a610ba891906125af565b6305f5e100610bb791906125f9565b610fe6565b60135f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c45a01556040518163ffffffff1660e01b8152600401602060405180830381865afa158015610c26573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610c4a919061271e565b73ffffffffffffffffffffffffffffffffffffffff1663c9c653963060135f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa158015610cd0573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610cf4919061271e565b6040518363ffffffff1660e01b8152600401610d11929190612749565b6020604051808303815f875af1158015610d2d573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610d51919061271e565b60145f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060135f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f305d7194730610dd8306106bd565b5f80610de261099f565b426040518863ffffffff1660e01b8152600401610e04969594939291906127b2565b60606040518083038185885af1158015610e20573d5f803e3d5ffd5b50505050506040513d601f19601f82011682018060405250810190610e459190612825565b50505060145f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663095ea7b360135f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff167fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6040518363ffffffff1660e01b8152600401610ee5929190612875565b6020604051808303815f875af1158015610f01573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610f2591906128c6565b506001601460166101000a81548160ff02191690831515021790555060016014806101000a81548160ff021916908315150217905550565b5f60025f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b5f33905090565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611054576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161104b90612961565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036110c2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110b9906129ef565b60405180910390fd5b8060025f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258360405161119c9190612325565b60405180910390a3505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611217576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161120e90612a7d565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611285576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161127c90612b0b565b60405180910390fd5b5f81116112c7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112be90612b99565b60405180910390fd5b5f6112d061099f565b73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161415801561133e575061130e61099f565b73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614155b156119785760045f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff161580156113e1575060045f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16155b6113e9575f80fd5b60065f9054906101000a900460ff161561156f5760135f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141580156114a7575060145f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614155b1561156e574360055f3273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20541061152b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161152290612c27565b60405180910390fd5b4360055f3273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055505b5b60145f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16148015611618575060135f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614155b801561166b575060035f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16155b1561174457600f548211156116b5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116ac90612c8f565b60405180910390fd5b601054826116c2856106bd565b6116cc9190612cad565b111561170d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161170490612d2a565b60405180910390fd5b600d54600e54101561172c5761172283611f7a565b1561172b575f80fd5b5b600e5f81548092919061173e90612d48565b91905055505b6117806064611772600b54600e541161175f57600754611763565b6009545b85611f8b90919063ffffffff16565b61200290919063ffffffff16565b905060145f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614801561180a57503073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614155b1561189357600f54821115611854576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161184b90612c8f565b60405180910390fd5b6118906064611882600c54600e541161186f57600854611873565b600a545b85611f8b90919063ffffffff16565b61200290919063ffffffff16565b90505b5f61189d306106bd565b9050601460159054906101000a900460ff16158015611908575060145f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16145b80156119205750601460169054906101000a900460ff165b801561192d575060115481115b801561193c5750600d54600e54115b156119765761195e611959846119548460125461204b565b61204b565b611c8a565b5f4790505f8111156119745761197347611f11565b5b505b505b5f811115611a77576119d08160015f3073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205461206390919063ffffffff16565b60015f3073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055503073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051611a6e9190612325565b60405180910390a35b611ac78260015f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20546120c090919063ffffffff16565b60015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550611b6a611b1e82846120c090919063ffffffff16565b60015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205461206390919063ffffffff16565b60015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef611c0d84866120c090919063ffffffff16565b604051611c1a9190612325565b60405180910390a350505050565b5f838311158290611c6f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611c6691906121f4565b60405180910390fd5b505f8385611c7d9190612d8f565b9050809150509392505050565b6001601460156101000a81548160ff0219169083151502179055505f810315611ef45760148054906101000a900460ff1615611ef4575f600267ffffffffffffffff811115611cdc57611cdb612dc2565b5b604051908082528060200260200182016040528015611d0a5781602001602082028036833780820191505090505b50905030815f81518110611d2157611d20612def565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505060135f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa158015611dc5573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611de9919061271e565b81600181518110611dfd57611dfc612def565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050611e633060135f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1684610fe6565b60135f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663791ac947835f8430426040518663ffffffff1660e01b8152600401611ec5959493929190612ed3565b5f604051808303815f87803b158015611edc575f80fd5b505af1158015611eee573d5f803e3d5ffd5b50505050505b5f601460156101000a81548160ff02191690831515021790555050565b600660019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc8290811502906040515f60405180830381858888f19350505050158015611f76573d5f803e3d5ffd5b5050565b5f80823b90505f8111915050919050565b5f808303611f9b575f9050611ffc565b5f8284611fa891906125f9565b9050828482611fb79190612f58565b14611ff7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611fee90612ff8565b60405180910390fd5b809150505b92915050565b5f61204383836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250612109565b905092915050565b5f818311612059578261205b565b815b905092915050565b5f8082846120719190612cad565b9050838110156120b6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016120ad90613060565b60405180910390fd5b8091505092915050565b5f61210183836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250611c28565b905092915050565b5f808311829061214f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161214691906121f4565b60405180910390fd5b505f838561215d9190612f58565b9050809150509392505050565b5f81519050919050565b5f82825260208201905092915050565b5f5b838110156121a1578082015181840152602081019050612186565b5f8484015250505050565b5f601f19601f8301169050919050565b5f6121c68261216a565b6121d08185612174565b93506121e0818560208601612184565b6121e9816121ac565b840191505092915050565b5f6020820190508181035f83015261220c81846121bc565b905092915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61224182612218565b9050919050565b61225181612237565b811461225b575f80fd5b50565b5f8135905061226c81612248565b92915050565b5f819050919050565b61228481612272565b811461228e575f80fd5b50565b5f8135905061229f8161227b565b92915050565b5f80604083850312156122bb576122ba612214565b5b5f6122c88582860161225e565b92505060206122d985828601612291565b9150509250929050565b5f8115159050919050565b6122f7816122e3565b82525050565b5f6020820190506123105f8301846122ee565b92915050565b61231f81612272565b82525050565b5f6020820190506123385f830184612316565b92915050565b5f805f6060848603121561235557612354612214565b5b5f6123628682870161225e565b93505060206123738682870161225e565b925050604061238486828701612291565b9150509250925092565b5f60ff82169050919050565b6123a38161238e565b82525050565b5f6020820190506123bc5f83018461239a565b92915050565b5f602082840312156123d7576123d6612214565b5b5f6123e48482850161225e565b91505092915050565b6123f681612237565b82525050565b5f60208201905061240f5f8301846123ed565b92915050565b5f806040838503121561242b5761242a612214565b5b5f6124388582860161225e565b92505060206124498582860161225e565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f8160011c9050919050565b5f808291508390505b60018511156124d5578086048111156124b1576124b0612453565b5b60018516156124c05780820291505b80810290506124ce85612480565b9450612495565b94509492505050565b5f826124ed57600190506125a8565b816124fa575f90506125a8565b8160018114612510576002811461251a57612549565b60019150506125a8565b60ff84111561252c5761252b612453565b5b8360020a91508482111561254357612542612453565b5b506125a8565b5060208310610133831016604e8410600b841016171561257e5782820a90508381111561257957612578612453565b5b6125a8565b61258b848484600161248c565b925090508184048111156125a2576125a1612453565b5b81810290505b9392505050565b5f6125b982612272565b91506125c48361238e565b92506125f17fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff84846124de565b905092915050565b5f61260382612272565b915061260e83612272565b925082820261261c81612272565b9150828204841483151761263357612632612453565b5b5092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65725f82015250565b5f61266e602083612174565b91506126798261263a565b602082019050919050565b5f6020820190508181035f83015261269b81612662565b9050919050565b7f74726164696e6720697320616c7265616479206f70656e0000000000000000005f82015250565b5f6126d6601783612174565b91506126e1826126a2565b602082019050919050565b5f6020820190508181035f830152612703816126ca565b9050919050565b5f8151905061271881612248565b92915050565b5f6020828403121561273357612732612214565b5b5f6127408482850161270a565b91505092915050565b5f60408201905061275c5f8301856123ed565b61276960208301846123ed565b9392505050565b5f819050919050565b5f819050919050565b5f61279c61279761279284612770565b612779565b612272565b9050919050565b6127ac81612782565b82525050565b5f60c0820190506127c55f8301896123ed565b6127d26020830188612316565b6127df60408301876127a3565b6127ec60608301866127a3565b6127f960808301856123ed565b61280660a0830184612316565b979650505050505050565b5f8151905061281f8161227b565b92915050565b5f805f6060848603121561283c5761283b612214565b5b5f61284986828701612811565b935050602061285a86828701612811565b925050604061286b86828701612811565b9150509250925092565b5f6040820190506128885f8301856123ed565b6128956020830184612316565b9392505050565b6128a5816122e3565b81146128af575f80fd5b50565b5f815190506128c08161289c565b92915050565b5f602082840312156128db576128da612214565b5b5f6128e8848285016128b2565b91505092915050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f206164645f8201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b5f61294b602483612174565b9150612956826128f1565b604082019050919050565b5f6020820190508181035f8301526129788161293f565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f2061646472655f8201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b5f6129d9602283612174565b91506129e48261297f565b604082019050919050565b5f6020820190508181035f830152612a06816129cd565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f2061645f8201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b5f612a67602583612174565b9150612a7282612a0d565b604082019050919050565b5f6020820190508181035f830152612a9481612a5b565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f20616464725f8201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b5f612af5602383612174565b9150612b0082612a9b565b604082019050919050565b5f6020820190508181035f830152612b2281612ae9565b9050919050565b7f5472616e7366657220616d6f756e74206d7573742062652067726561746572205f8201527f7468616e207a65726f0000000000000000000000000000000000000000000000602082015250565b5f612b83602983612174565b9150612b8e82612b29565b604082019050919050565b5f6020820190508181035f830152612bb081612b77565b9050919050565b7f4f6e6c79206f6e65207472616e736665722070657220626c6f636b20616c6c6f5f8201527f7765642e00000000000000000000000000000000000000000000000000000000602082015250565b5f612c11602483612174565b9150612c1c82612bb7565b604082019050919050565b5f6020820190508181035f830152612c3e81612c05565b9050919050565b7f4578636565647320746865205f6d61785478416d6f756e742e000000000000005f82015250565b5f612c79601983612174565b9150612c8482612c45565b602082019050919050565b5f6020820190508181035f830152612ca681612c6d565b9050919050565b5f612cb782612272565b9150612cc283612272565b9250828201905080821115612cda57612cd9612453565b5b92915050565b7f4578636565647320746865206d617857616c6c657453697a652e0000000000005f82015250565b5f612d14601a83612174565b9150612d1f82612ce0565b602082019050919050565b5f6020820190508181035f830152612d4181612d08565b9050919050565b5f612d5282612272565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203612d8457612d83612453565b5b600182019050919050565b5f612d9982612272565b9150612da483612272565b9250828203905081811115612dbc57612dbb612453565b5b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b612e4e81612237565b82525050565b5f612e5f8383612e45565b60208301905092915050565b5f602082019050919050565b5f612e8182612e1c565b612e8b8185612e26565b9350612e9683612e36565b805f5b83811015612ec6578151612ead8882612e54565b9750612eb883612e6b565b925050600181019050612e99565b5085935050505092915050565b5f60a082019050612ee65f830188612316565b612ef360208301876127a3565b8181036040830152612f058186612e77565b9050612f1460608301856123ed565b612f216080830184612316565b9695505050505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f612f6282612272565b9150612f6d83612272565b925082612f7d57612f7c612f2b565b5b828204905092915050565b7f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f5f8201527f7700000000000000000000000000000000000000000000000000000000000000602082015250565b5f612fe2602183612174565b9150612fed82612f88565b604082019050919050565b5f6020820190508181035f83015261300f81612fd6565b9050919050565b7f536166654d6174683a206164646974696f6e206f766572666c6f7700000000005f82015250565b5f61304a601b83612174565b915061305582613016565b602082019050919050565b5f6020820190508181035f8301526130778161303e565b905091905056fe4d697374616b6573486176654265656e4d61646546726f6d4157616c6c657449436f6e74726f6c45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365a26469706673582212206da15263ce6bf0bf5e9eee5aa3f15b370bc4dbf58b6776ef129edf72947914e564736f6c63430008140033",
    "contract_name": "JUDAS",
    "compiler_version": "v0.8.20+commit.a1b79de6",
    "optimization_used": "0",
    "runs": "200",
    "abi": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_maxTxAmount\",\"type\":\"uint256\"}],\"name\":\"MaxTxAmountUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"_maxTaxSwap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_maxTxAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_maxWalletSize\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_taxSwapThreshold\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"a\",\"type\":\"address\"}],\"name\":\"isBot\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"manualSwap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"openTrading\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"removeLimits\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"transferDelayEnabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]",
    "source_code": "{{\r\n  \"language\": \"Solidity\",\r\n  \"sources\": {\r\n    \"judas.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\r\\n\\r\\n/**\\r\\n\\r\\nhttps://t.me/judasportal\\r\\nhttps://twitter.com/JudasERC\\r\\n\\r\\n**/\\r\\n\\r\\npragma solidity 0.8.20;\\r\\n\\r\\nabstract contract Context {\\r\\n    function _msgSender() internal view virtual returns (address) {\\r\\n        return msg.sender;\\r\\n    }\\r\\n}\\r\\n\\r\\ninterface IERC20 {\\r\\n    function totalSupply() external view returns (uint256);\\r\\n    function balanceOf(address account) external view returns (uint256);\\r\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\r\\n    function allowance(address owner, address spender) external view returns (uint256);\\r\\n    function approve(address spender, uint256 amount) external returns (bool);\\r\\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\\r\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\r\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\r\\n}\\r\\n\\r\\nlibrary SafeMath {\\r\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        uint256 c = a + b;\\r\\n        require(c >= a, \\\"SafeMath: addition overflow\\\");\\r\\n        return c;\\r\\n    }\\r\\n\\r\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        return sub(a, b, \\\"SafeMath: subtraction overflow\\\");\\r\\n    }\\r\\n\\r\\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\r\\n        require(b <= a, errorMessage);\\r\\n        uint256 c = a - b;\\r\\n        return c;\\r\\n    }\\r\\n\\r\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        if (a == 0) {\\r\\n            return 0;\\r\\n        }\\r\\n        uint256 c = a * b;\\r\\n        require(c / a == b, \\\"SafeMath: multiplication overflow\\\");\\r\\n        return c;\\r\\n    }\\r\\n\\r\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        return div(a, b, \\\"SafeMath: division by zero\\\");\\r\\n    }\\r\\n\\r\\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\r\\n        require(b > 0, errorMessage);\\r\\n        uint256 c = a / b;\\r\\n        return c;\\r\\n    }\\r\\n\\r\\n}\\r\\n\\r\\ncontract Ownable is Context {\\r\\n    address private _owner;\\r\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\r\\n\\r\\n    constructor () {\\r\\n        address msgSender = _msgSender();\\r\\n        _owner = msgSender;\\r\\n        emit OwnershipTransferred(address(0), msgSender);\\r\\n    }\\r\\n\\r\\n    function owner() public view returns (address) {\\r\\n        return _owner;\\r\\n    }\\r\\n\\r\\n    modifier onlyOwner() {\\r\\n        require(_owner == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    function renounceOwnership() public virtual onlyOwner {\\r\\n        emit OwnershipTransferred(_owner, address(0));\\r\\n        _owner = address(0);\\r\\n    }\\r\\n\\r\\n}\\r\\n\\r\\ninterface IUniswapV2Factory {\\r\\n    function createPair(address tokenA, address tokenB) external returns (address pair);\\r\\n}\\r\\n\\r\\ninterface IUniswapV2Router02 {\\r\\n    function swapExactTokensForETHSupportingFeeOnTransferTokens(\\r\\n        uint amountIn,\\r\\n        uint amountOutMin,\\r\\n        address[] calldata path,\\r\\n        address to,\\r\\n        uint deadline\\r\\n    ) external;\\r\\n    function factory() external pure returns (address);\\r\\n    function WETH() external pure returns (address);\\r\\n    function addLiquidityETH(\\r\\n        address token,\\r\\n        uint amountTokenDesired,\\r\\n        uint amountTokenMin,\\r\\n        uint amountETHMin,\\r\\n        address to,\\r\\n        uint deadline\\r\\n    ) external payable returns (uint amountToken, uint amountETH, uint liquidity);\\r\\n}\\r\\n\\r\\ncontract JUDAS is Context, IERC20, Ownable {\\r\\n    using SafeMath for uint256;\\r\\n    mapping (address => uint256) private _balances;\\r\\n    mapping (address => mapping (address => uint256)) private _allowances;\\r\\n    mapping (address => bool) private _isExcludedFromFee;\\r\\n    mapping (address => bool) private bots;\\r\\n    mapping(address => uint256) private _holderLastTransferTimestamp;\\r\\n    bool public transferDelayEnabled = false;\\r\\n    address payable private _taxWallet;\\r\\n\\r\\n    uint256 private _initialBuyTax=20;\\r\\n    uint256 private _initialSellTax=20;\\r\\n    uint256 private _finalBuyTax=1;\\r\\n    uint256 private _finalSellTax=1;\\r\\n    uint256 private _reduceBuyTaxAt=25;\\r\\n    uint256 private _reduceSellTaxAt=25;\\r\\n    uint256 private _preventSwapBefore=20;\\r\\n    uint256 private _buyCount=0;\\r\\n\\r\\n    uint8 private constant _decimals = 8;\\r\\n    uint256 private constant _tTotal = 100000000 * 10**_decimals;\\r\\n    string private constant _name = unicode\\\"MistakesHaveBeenMadeFromAWalletIControl\\\";\\r\\n    string private constant _symbol = unicode\\\"JUDAS\\\";\\r\\n    uint256 public _maxTxAmount =   2000000 * 10**_decimals;\\r\\n    uint256 public _maxWalletSize = 2000000 * 10**_decimals;\\r\\n    uint256 public _taxSwapThreshold=100000 * 10**_decimals;\\r\\n    uint256 public _maxTaxSwap=1000000 * 10**_decimals;\\r\\n\\r\\n    IUniswapV2Router02 private uniswapV2Router;\\r\\n    address private uniswapV2Pair;\\r\\n    bool private tradingOpen;\\r\\n    bool private inSwap = false;\\r\\n    bool private swapEnabled = false;\\r\\n\\r\\n    event MaxTxAmountUpdated(uint _maxTxAmount);\\r\\n    modifier lockTheSwap {\\r\\n        inSwap = true;\\r\\n        _;\\r\\n        inSwap = false;\\r\\n    }\\r\\n\\r\\n    constructor () {\\r\\n        _taxWallet = payable(_msgSender());\\r\\n        _balances[_msgSender()] = _tTotal;\\r\\n        _isExcludedFromFee[owner()] = true;\\r\\n        _isExcludedFromFee[address(this)] = true;\\r\\n        _isExcludedFromFee[_taxWallet] = true;\\r\\n\\r\\n        emit Transfer(address(0), _msgSender(), _tTotal);\\r\\n    }\\r\\n\\r\\n    function name() public pure returns (string memory) {\\r\\n        return _name;\\r\\n    }\\r\\n\\r\\n    function symbol() public pure returns (string memory) {\\r\\n        return _symbol;\\r\\n    }\\r\\n\\r\\n    function decimals() public pure returns (uint8) {\\r\\n        return _decimals;\\r\\n    }\\r\\n\\r\\n    function totalSupply() public pure override returns (uint256) {\\r\\n        return _tTotal;\\r\\n    }\\r\\n\\r\\n    function balanceOf(address account) public view override returns (uint256) {\\r\\n        return _balances[account];\\r\\n    }\\r\\n\\r\\n    function transfer(address recipient, uint256 amount) public override returns (bool) {\\r\\n        _transfer(_msgSender(), recipient, amount);\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    function allowance(address owner, address spender) public view override returns (uint256) {\\r\\n        return _allowances[owner][spender];\\r\\n    }\\r\\n\\r\\n    function approve(address spender, uint256 amount) public override returns (bool) {\\r\\n        _approve(_msgSender(), spender, amount);\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    function transferFrom(address sender, address recipient, uint256 amount) public override returns (bool) {\\r\\n        _transfer(sender, recipient, amount);\\r\\n        _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \\\"ERC20: transfer amount exceeds allowance\\\"));\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    function _approve(address owner, address spender, uint256 amount) private {\\r\\n        require(owner != address(0), \\\"ERC20: approve from the zero address\\\");\\r\\n        require(spender != address(0), \\\"ERC20: approve to the zero address\\\");\\r\\n        _allowances[owner][spender] = amount;\\r\\n        emit Approval(owner, spender, amount);\\r\\n    }\\r\\n\\r\\n    function _transfer(address from, address to, uint256 amount) private {\\r\\n        require(from != address(0), \\\"ERC20: transfer from the zero address\\\");\\r\\n        require(to != address(0), \\\"ERC20: transfer to the zero address\\\");\\r\\n        require(amount > 0, \\\"Transfer amount must be greater than zero\\\");\\r\\n        uint256 taxAmount=0;\\r\\n        if (from != owner() && to != owner()) {\\r\\n            require(!bots[from] && !bots[to]);\\r\\n\\r\\n            if (transferDelayEnabled) {\\r\\n                if (to != address(uniswapV2Router) && to != address(uniswapV2Pair)) {\\r\\n                  require(_holderLastTransferTimestamp[tx.origin] < block.number,\\\"Only one transfer per block allowed.\\\");\\r\\n                  _holderLastTransferTimestamp[tx.origin] = block.number;\\r\\n                }\\r\\n            }\\r\\n\\r\\n            if (from == uniswapV2Pair && to != address(uniswapV2Router) && ! _isExcludedFromFee[to] ) {\\r\\n                require(amount <= _maxTxAmount, \\\"Exceeds the _maxTxAmount.\\\");\\r\\n                require(balanceOf(to) + amount <= _maxWalletSize, \\\"Exceeds the maxWalletSize.\\\");\\r\\n                if(_buyCount<_preventSwapBefore){\\r\\n                  require(!isContract(to));\\r\\n                }\\r\\n                _buyCount++;\\r\\n            }\\r\\n\\r\\n\\r\\n            taxAmount = amount.mul((_buyCount>_reduceBuyTaxAt)?_finalBuyTax:_initialBuyTax).div(100);\\r\\n            if(to == uniswapV2Pair && from!= address(this) ){\\r\\n                require(amount <= _maxTxAmount, \\\"Exceeds the _maxTxAmount.\\\");\\r\\n                taxAmount = amount.mul((_buyCount>_reduceSellTaxAt)?_finalSellTax:_initialSellTax).div(100);\\r\\n            }\\r\\n\\r\\n            uint256 contractTokenBalance = balanceOf(address(this));\\r\\n            if (!inSwap && to == uniswapV2Pair && swapEnabled && contractTokenBalance>_taxSwapThreshold && _buyCount>_preventSwapBefore) {\\r\\n                swapTokensForEth(min(amount,min(contractTokenBalance,_maxTaxSwap)));\\r\\n                uint256 contractETHBalance = address(this).balance;\\r\\n                if(contractETHBalance > 0) {\\r\\n                    sendETHToFee(address(this).balance);\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n\\r\\n        if(taxAmount>0){\\r\\n          _balances[address(this)]=_balances[address(this)].add(taxAmount);\\r\\n          emit Transfer(from, address(this),taxAmount);\\r\\n        }\\r\\n        _balances[from]=_balances[from].sub(amount);\\r\\n        _balances[to]=_balances[to].add(amount.sub(taxAmount));\\r\\n        emit Transfer(from, to, amount.sub(taxAmount));\\r\\n    }\\r\\n\\r\\n\\r\\n    function min(uint256 a, uint256 b) private pure returns (uint256){\\r\\n      return (a>b)?b:a;\\r\\n    }\\r\\n\\r\\n    function swapTokensForEth(uint256 tokenAmount) private lockTheSwap {\\r\\n        if(tokenAmount==0){return;}\\r\\n        if(!tradingOpen){return;}\\r\\n        address[] memory path = new address[](2);\\r\\n        path[0] = address(this);\\r\\n        path[1] = uniswapV2Router.WETH();\\r\\n        _approve(address(this), address(uniswapV2Router), tokenAmount);\\r\\n        uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(\\r\\n            tokenAmount,\\r\\n            0,\\r\\n            path,\\r\\n            address(this),\\r\\n            block.timestamp\\r\\n        );\\r\\n    }\\r\\n\\r\\n    function removeLimits() external onlyOwner{\\r\\n        _maxTxAmount = _tTotal;\\r\\n        _maxWalletSize=_tTotal;\\r\\n        transferDelayEnabled=false;\\r\\n        emit MaxTxAmountUpdated(_tTotal);\\r\\n    }\\r\\n\\r\\n    function sendETHToFee(uint256 amount) private {\\r\\n        _taxWallet.transfer(amount);\\r\\n    }\\r\\n\\r\\n    function isBot(address a) public view returns (bool){\\r\\n      return bots[a];\\r\\n    }\\r\\n\\r\\n    function openTrading() external onlyOwner() {\\r\\n        require(!tradingOpen,\\\"trading is already open\\\");\\r\\n        uniswapV2Router = IUniswapV2Router02(0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D);\\r\\n        _approve(address(this), address(uniswapV2Router), _tTotal);\\r\\n        uniswapV2Pair = IUniswapV2Factory(uniswapV2Router.factory()).createPair(address(this), uniswapV2Router.WETH());\\r\\n        uniswapV2Router.addLiquidityETH{value: address(this).balance}(address(this),balanceOf(address(this)),0,0,owner(),block.timestamp);\\r\\n        IERC20(uniswapV2Pair).approve(address(uniswapV2Router), type(uint).max);\\r\\n        swapEnabled = true;\\r\\n        tradingOpen = true;\\r\\n    }\\r\\n\\r\\n    receive() external payable {}\\r\\n\\r\\n    function isContract(address account) private view returns (bool) {\\r\\n        uint256 size;\\r\\n        assembly {\\r\\n            size := extcodesize(account)\\r\\n        }\\r\\n        return size > 0;\\r\\n    }\\r\\n\\r\\n    function manualSwap() external {\\r\\n        require(_msgSender()==_taxWallet);\\r\\n        uint256 tokenBalance=balanceOf(address(this));\\r\\n        if(tokenBalance>0){\\r\\n          swapTokensForEth(tokenBalance);\\r\\n        }\\r\\n        uint256 ethBalance=address(this).balance;\\r\\n        if(ethBalance>0){\\r\\n          sendETHToFee(ethBalance);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    \\r\\n    \\r\\n    \\r\\n}\"\r\n    }\r\n  },\r\n  \"settings\": {\r\n    \"optimizer\": {\r\n      \"enabled\": false,\r\n      \"runs\": 200\r\n    },\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"devdoc\",\r\n          \"userdoc\",\r\n          \"metadata\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    }\r\n  }\r\n}}",
    "etherscan_verified": true
}