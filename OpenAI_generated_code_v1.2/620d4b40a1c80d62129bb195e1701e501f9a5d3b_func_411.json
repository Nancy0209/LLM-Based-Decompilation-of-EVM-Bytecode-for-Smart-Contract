{
    "contract_address": "0x620d4B40A1c80D62129bb195e1701e501F9a5d3b",
    "heimdall_input": "function supportsInterface(bytes4 arg0) public pure returns (bool) {\n        require(arg0 == (uint32(arg0)));\n        require(uint32(arg0) == 0x01ffc9a700000000000000000000000000000000000000000000000000000000);\n        require(uint32(arg0) == 0x01ffc9a700000000000000000000000000000000000000000000000000000000);\n        require(uint32(arg0) == 0x01ffc9a700000000000000000000000000000000000000000000000000000000);\n        uint32 var_a = !(!(uint32(arg0)) == 0x01ffc9a700000000000000000000000000000000000000000000000000000000);\n        return !(!(uint32(arg0)) == 0x01ffc9a700000000000000000000000000000000000000000000000000000000);\n        require(0x2a55205a00000000000000000000000000000000000000000000000000000000 == (uint32(arg0)));\n        var_a = !(!0x2a55205a00000000000000000000000000000000000000000000000000000000 == (uint32(arg0)));\n        return !(!0x2a55205a00000000000000000000000000000000000000000000000000000000 == (uint32(arg0)));\n        var_a = !(!(uint32(arg0)) == 0x01ffc9a700000000000000000000000000000000000000000000000000000000);\n        return !(!(uint32(arg0)) == 0x01ffc9a700000000000000000000000000000000000000000000000000000000);\n    }",
    "llm_output": "function supportsInterface(bytes4 interfaceId) public pure returns (bool) {\n    if (interfaceId == 0x01ffc9a7) { // ERC165 interface ID\n        return true;\n    } else if (interfaceId == 0x2a55205a) { // ERC2981 interface ID\n        return true;\n    }\n    return false;\n}",
    "ground_truth": "function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        // The interface IDs are constants representing the first 4 bytes\\n        // of the XOR of all function selectors in the interface.\\n        // See: [ERC165](https://eips.ethereum.org/EIPS/eip-165)\\n        // (e.g. `bytes4(i.functionA.selector ^ i.functionB.selector ^ ...)`)\\n        return\\n            interfaceId == 0x01ffc9a7 || // ERC165 interface ID for ERC165.\\n            interfaceId == 0x80ac58cd || // ERC165 interface ID for ERC721.\\n            interfaceId == 0x5b5e139f; // ERC165 interface ID for ERC721Metadata.\\n    }"
}