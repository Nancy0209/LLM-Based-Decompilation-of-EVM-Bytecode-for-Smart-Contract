{
    "contract_address": "0x20ad88B64104B4E9B3915aAB9c3bfb4E4121622f",
    "heimdall_input": "function name() public view returns (string memory) {\n        if (lastLpBurnTimeb) {\n            if (lastLpBurnTimeb - ((lastLpBurnTimeb >> 0x01) < 0x20)) {\n                var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                var_b = 0x22;\n                uint256 var_c = var_c + (0x20 + (((0x1f + (lastLpBurnTimeb >> 0x01)) / 0x20) * 0x20));\n                bytes32 var_d = lastLpBurnTimeb >> 0x01;\n                if (lastLpBurnTimeb) {\n                    if (lastLpBurnTimeb - ((lastLpBurnTimeb >> 0x01) < 0x20)) {\n                        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                        var_b = 0x22;\n                        if (!lastLpBurnTimeb >> 0x01) {\n                            if (0x1f < (lastLpBurnTimeb >> 0x01)) {\n                                var_a = 0x03;\n                                var_e = storage_map_n[var_a];\n                                if ((0x20 + var_c) + (lastLpBurnTimeb >> 0x01) > (0x20 + (0x20 + var_c))) {\n                                    var_e = 0x20;\n                                    uint256 var_f = var_c.length;\n                                    uint256 var_g = 0;\n                                    return abi.encodePacked(0x20, var_c.length);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }",
    "llm_output": "function name() public view returns (string memory) {\n    if (lastLpBurnTime > 0) {\n        uint256 shiftedValue = lastLpBurnTime >> 1;\n        if (lastLpBurnTime - shiftedValue < 32) {\n            revert(\"Decompiler artifact\");\n        }\n\n        uint256 calculatedOffset = 32 + (((31 + shiftedValue) / 32) * 32);\n        bytes32 shiftedBytes = bytes32(shiftedValue);\n\n        if (lastLpBurnTime > 0) {\n            if (lastLpBurnTime - shiftedValue < 32) {\n                revert(\"Decompiler artifact\");\n            }\n\n            if (shiftedValue == 0) {\n                if (31 < shiftedValue) {\n                    uint256 storageValue = storage_map_n[3];\n                    if ((32 + calculatedOffset) + shiftedValue > (32 + (32 + calculatedOffset))) {\n                        uint256 length = calculatedOffset.length;\n                        return abi.encodePacked(uint256(32), length);\n                    }\n                }\n            }\n        }\n    }\n}",
    "ground_truth": "function name() public view virtual override returns (string memory) {\r\n        return _name;\r\n    }"
}