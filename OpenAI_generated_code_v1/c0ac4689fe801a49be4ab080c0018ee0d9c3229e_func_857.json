{
    "contract_address": "0xc0aC4689fe801A49Be4Ab080c0018eE0d9C3229e",
    "heimdall_input": "function setRoyaltyFeePercent(uint256 arg0) public {\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        require(royaltyAndReferralDecimals, \"Cannot exceed 100%\");\n        require(0x0a, \"Cannot exceed 100%\");\n        require((0 == 0) | !0x64, \"Cannot exceed 100%\");\n        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x11;\n        require(!(arg0 > 0), \"Cannot exceed 100%\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x12;\n        var_d = 0x43616e6e6f742065786365656420313030250000000000000000000000000000;\n        royaltyFeePercent = arg0;\n        if (0x0a == 0x01) {\n            require(0x0a == 0x01);\n            require(0x0a == 0x02);\n            var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n            var_f = 0x11;\n            require(!royaltyAndReferralDecimals > 0xff);\n            require(!((0x0a < 0x0b) & (royaltyAndReferralDecimals < 0x4e)) | ((0x0a < 0x0133) & (royaltyAndReferralDecimals < 0x20)));\n            require(!royaltyAndReferralDecimals > 0x01);\n            var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n            var_f = 0x11;\n            require(!0x0a > 0x1999999999999999999999999999999999999999999999999999999999999999);\n        }\n        require(!0x01 > 0x1999999999999999999999999999999999999999999999999999999999999999);\n        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x11;\n    }",
    "llm_output": "pragma solidity ^0.8.0;\n\ncontract RoyaltyManager {\n    address public owner;\n    uint256 public royaltyFeePercent;\n    uint256 public royaltyAndReferralDecimals;\n\n    function setRoyaltyFeePercent(uint256 newRoyaltyFeePercent) public {\n        require(msg.sender == owner, \"Ownable: caller is not the owner\");\n\n        // Ensure the new royalty fee percent does not exceed 100%\n        require(royaltyAndReferralDecimals > 0, \"Cannot exceed 100%\");\n        require(newRoyaltyFeePercent <= 100, \"Cannot exceed 100%\");\n        require(newRoyaltyFeePercent >= 0, \"Cannot exceed 100%\");\n\n        royaltyFeePercent = newRoyaltyFeePercent;\n\n        // Additional logic with unclear purpose (likely decompiler artifacts)\n        if (royaltyAndReferralDecimals == 1) {\n            require(royaltyAndReferralDecimals == 1, \"Invalid state\");\n            require(royaltyAndReferralDecimals == 2, \"Invalid state\");\n            require(!(royaltyAndReferralDecimals > 255), \"Invalid state\");\n            require(\n                !((royaltyAndReferralDecimals < 11 && royaltyAndReferralDecimals < 78) || \n                (royaltyAndReferralDecimals < 307 && royaltyAndReferralDecimals < 32)),\n                \"Invalid state\"\n            );\n            require(!(royaltyAndReferralDecimals > 1), \"Invalid state\");\n            require(!(royaltyAndReferralDecimals > 0x1999999999999999999999999999999999999999999999999999999999999999), \"Invalid state\");\n        }\n\n        require(!(1 > 0x1999999999999999999999999999999999999999999999999999999999999999), \"Invalid state\");\n    }\n}",
    "ground_truth": "function setRoyaltyFeePercent(uint256 newPercent) external onlyOwner {\\n        require(\\n            newPercent <= 100 * 10**royaltyAndReferralDecimals,\\n            \\\"Cannot exceed 100%\\\"\\n        );\\n        royaltyFeePercent = newPercent;\\n    }"
}