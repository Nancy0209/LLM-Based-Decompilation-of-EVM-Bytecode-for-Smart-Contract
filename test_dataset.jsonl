{"contract_address": "0x16E04d776e1B647BE948C6D2f51Bca26401DC011", "original_solidity_code": "function approve(address spender, uint256 amount) public virtual override returns (bool) { address owner = _msgSender(); _approve(owner, spender, amount); return true; }", "heimdall_decompiled_code": "function approve(address arg0, uint256 arg1) public returns (bool) {\n        require(arg0 == (address(arg0)));\n        require(address(msg.sender), \"ERC20: approve to the zero address\");\n        require(address(arg0), \"ERC20: approve to the zero address\");\n        address var_a = address(msg.sender);\n        var_b = 0x01;\n        var_a = address(arg0);\n        address var_b = keccak256(var_a);\n        storage_map_d[var_a] = arg1;\n        uint256 var_c = arg1;\n        emit Approval(address(msg.sender), address(arg0), arg1);\n        var_c = 0x01;\n        return 0x01;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x22;\n        var_f = 0x45524332303a20617070726f766520746f20746865207a65726f206164647265;\n        var_g = 0x7373000000000000000000000000000000000000000000000000000000000000;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x24;\n        var_f = 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464;\n        var_g = 0x7265737300000000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0x31b60867a6203e76120df0612769ba136097eBc8", "original_solidity_code": "function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\r\n        address owner = _msgSender();\r\n        uint256 currentAllowance = allowance(owner, spender);\r\n        require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\");\r\n        _approve(owner, spender, currentAllowance - subtractedValue);\r\n        return true;\r\n    }", "heimdall_decompiled_code": "function decreaseAllowance(address arg0, uint256 arg1) public payable returns (bool) {\n        require(arg0 == (address(arg0)));\n        address var_a = address(msg.sender);\n        var_b = 0x07;\n        var_a = address(arg0);\n        address var_b = keccak256(var_a);\n        require(!(storage_map_b[var_a] < arg1), \"ERC20: decreased allowance below zero\");\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x25;\n        var_f = 0x45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77;\n        var_g = 0x207a65726f000000000000000000000000000000000000000000000000000000;\n        require(!((storage_map_b[var_a] - arg1) > storage_map_b[var_a]), \"ERC20: approve to the zero address\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_h = 0x11;\n        require(address(msg.sender), \"ERC20: approve to the zero address\");\n        require(address(arg0), \"ERC20: approve to the zero address\");\n        var_a = address(msg.sender);\n        var_b = 0x07;\n        var_a = address(arg0);\n        var_b = keccak256(var_a);\n        storage_map_b[var_a] = storage_map_b[var_a] - arg1;\n        uint256 var_c = storage_map_b[var_a] - arg1;\n        emit Approval(address(msg.sender), address(arg0), storage_map_b[var_a] - arg1);\n        var_c = 0x01;\n        return 0x01;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x22;\n        var_f = 0x45524332303a20617070726f766520746f20746865207a65726f206164647265;\n        var_g = 0x7373000000000000000000000000000000000000000000000000000000000000;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x24;\n        var_f = 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464;\n        var_g = 0x7265737300000000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0xF36754d67a8C99e1D683915ED5A6E55aB259ba79", "original_solidity_code": "function set_New_Router_Address(address newRouter) public onlyOwner() {\r\n        IUniswapV2Router02 _newPCSRouter = IUniswapV2Router02(newRouter);\r\n        uniswapV2Router = _newPCSRouter;\r\n    }", "heimdall_decompiled_code": "function set_New_Router_Address(address arg0) public {\n        require(arg0 == (address(arg0)));\n        require(address(owner / 0x01) == (address(msg.sender)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_b = ((0x04 + var_c) + 0x20) - (0x04 + var_c);\n        var_d = 0x20;\n        var_e = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        uniswapV2Router = (address(arg0) * 0x01) | (uint96(uniswapV2Router));\n    }"}
{"contract_address": "0x86612Df86F83dfD8E95d71E7766E1579Bf82BCab", "original_solidity_code": "function openTrading() external onlyOwner() {\r\n        require(!tradingOpen,\"trading is already open\");\r\n        uniswapV2Router = IUniswapV2Router02(0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D);\r\n        _approve(address(this), address(uniswapV2Router), _tTotal);\r\n        uniswapV2Pair = IUniswapV2Factory(uniswapV2Router.factory()).createPair(address(this), uniswapV2Router.WETH());\r\n        uniswapV2Router.addLiquidityETH{value: address(this).balance}(address(this),balanceOf(address(this)),0,0,owner(),block.timestamp);\r\n        IERC20(uniswapV2Pair).approve(address(uniswapV2Router), type(uint).max);\r\n        swapEnabled = true;\r\n        tradingOpen = true;\r\n    }", "heimdall_decompiled_code": "function openTrading() public {\n        require(address(owner / 0x01) == (address(msg.sender)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_b = ((0x04 + var_c) + 0x20) - (0x04 + var_c);\n        var_d = 0x20;\n        var_e = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        require(!(bytes1(store_h / 0x010000000000000000000000000000000000000000)), \"trading is already open\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = ((0x04 + var_c) + 0x20) - (0x04 + var_c);\n        var_d = 0x17;\n        var_e = 0x74726164696e6720697320616c7265616479206f70656e000000000000000000;\n        store_g = 0x7a250d5630b4cf539739df2c5dacb4c659f2488d | (uint96(store_g));\n        require(0x09, \"ERC20: approve to the zero address\");\n        require(!0x3b9aca00 | (0x01 == 0x01), \"ERC20: approve to the zero address\");\n        var_f = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_g = 0x11;\n        require(address(this) - 0, \"ERC20: approve to the zero address\");\n        require(address(store_g / 0x01) - 0, \"ERC20: approve to the zero address\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = ((0x04 + var_c) + 0x20) - (0x04 + var_c);\n        var_d = 0x22;\n        var_e = 0x45524332303a20617070726f766520746f20746865207a65726f206164647265;\n        var_h = 0x7373000000000000000000000000000000000000000000000000000000000000;\n        address var_f = address(this);\n        var_i = 0x02;\n        var_f = address(store_g / 0x01);\n        address var_i = keccak256(var_f);\n        storage_map_n[var_f] = 0x3b9aca00;\n        var_a = 0x3b9aca00;\n        emit Approval(address(this), address(store_g / 0x01), 0x3b9aca00);\n        var_a = 0xc45a015500000000000000000000000000000000000000000000000000000000;\n        (bool success, bytes memory ret0) = address(store_g / 0x01).factory(var_b); // staticcall\n        uint256 var_c = var_c + (uint248(ret0.length + 0x1f));\n        require(!((var_c + ret0.length) - var_c) < 0x20);\n        require(var_j == (address(var_j)));\n        var_k = 0xad5c464800000000000000000000000000000000000000000000000000000000;\n        (bool success, bytes memory ret0) = address(store_g / 0x01).WETH(var_d); // staticcall\n        var_c = var_c + (uint248(ret0.length + 0x1f));\n        require(!((var_c + ret0.length) - var_c) < 0x20);\n        require(var_j == (address(var_j)));\n        var_l = 0xc9c6539600000000000000000000000000000000000000000000000000000000;\n        address var_e = address(this);\n        address var_h = address(var_j);\n        (bool success, bytes memory ret0) = address(var_j).{ value: 0 ether }Unresolved_c9c65396(var_e); // call\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = ((0x04 + var_c) + 0x20) - (0x04 + var_c);\n        var_d = 0x24;\n        var_e = 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464;\n        var_h = 0x7265737300000000000000000000000000000000000000000000000000000000;\n        if (0x0a) {\n            if (0x0a == 0x01) {\n                if (0x0a == 0x02) {\n                    if (!0x09 > 0xff) {\n                        var_f = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                        var_g = 0x11;\n                        if (!0x0200 > 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) {\n                            var_f = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                            var_g = 0x11;\n                            if (!((0x0a < 0x0b) & (0x09 < 0x4e)) | ((0x0a < 0x0133) & (0x09 < 0x20))) {\n                                if (!0x09 > 0x01) {\n                                    if (!0x01 > 0x1999999999999999999999999999999999999999999999999999999999999999) {\n                                        var_f = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                        var_g = 0x11;\n                                        if (!0x0a > 0x1999999999999999999999999999999999999999999999999999999999999999) {\n                                            var_f = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                            var_g = 0x11;\n                                            if (!0x01) {\n                                            }\n                                            if (!0x3b9aca00 > 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) {\n                                                var_f = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                                var_g = 0x11;\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }"}
{"contract_address": "0xc921a48b2bBd243aC30422B266edf58F472Eca7F", "original_solidity_code": "function checkRewards() public view virtual returns (uint256) {\\r\\n        return addressRewards[msg.sender];\\r\\n    }", "heimdall_decompiled_code": "function checkRewards() public view returns (uint256) {\n        address var_a = msg.sender;\n        var_b = 0x1a;\n        address var_c = storage_map_i[var_a];\n        return storage_map_i[var_a];\n    }"}
{"contract_address": "0x99D795eEDe17E3400f1Dd664fc1578CD93df464f", "original_solidity_code": "function renounceOwnership() public virtual onlyOwner {\r\n        emit OwnershipTransferred(_owner, address(0));\r\n        _owner = address(0);\r\n    }", "heimdall_decompiled_code": "function renounceOwnership() public {\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        emit OwnershipTransferred(address(owner), 0);\n        owner = uint96(owner);\n    }"}
{"contract_address": "0x926911A3809B6e15FA9dab87A4beAE0E83361C75", "original_solidity_code": "function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\r\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\"));\r\n        return true;\r\n    }", "heimdall_decompiled_code": "function decreaseAllowance(address arg0, uint256 arg1) public returns (bool) {\n        require(arg0 == (address(arg0)));\n        uint256 var_a = 0x60 + var_a;\n        var_b = 0x25;\n        var_c = this.code[11029:11066];\n        address var_d = msg.sender;\n        var_e = 0x01;\n        var_d = address(arg0);\n        address var_e = keccak256(var_d);\n        require(!(arg1 > storage_map_h[var_d]), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        var_f = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_g = 0x20;\n        uint256 var_h = var_a.length;\n        require(!(0 > var_a.length), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        uint256 var_i = 0;\n        require(!(storage_map_h[var_d] < arg1), \"ERC20: approve to the zero address\");\n        var_d = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_j = 0x11;\n        require(address(msg.sender), \"ERC20: approve to the zero address\");\n        require(address(arg0), \"ERC20: approve to the zero address\");\n        var_d = address(msg.sender);\n        var_e = 0x01;\n        var_d = address(arg0);\n        var_e = keccak256(var_d);\n        storage_map_h[var_d] = storage_map_h[var_d] - arg1;\n        address var_f = storage_map_h[var_d] - arg1;\n        emit Approval(address(msg.sender), address(arg0), storage_map_h[var_d] - arg1);\n        var_f = 0x01;\n        return 0x01;\n        var_f = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_g = 0x20;\n        var_h = 0x22;\n        var_k = 0x45524332303a20617070726f766520746f20746865207a65726f206164647265;\n        var_l = 0x7373000000000000000000000000000000000000000000000000000000000000;\n        var_f = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_g = 0x20;\n        var_h = 0x24;\n        var_k = 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464;\n        var_l = 0x7265737300000000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0xC6583634d8D1075E24dbBdB76fA1a04589558689", "original_solidity_code": "function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }", "heimdall_decompiled_code": "function renounceOwnership() public payable {\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        owner = 0 | (uint96(owner));\n        emit OwnershipTransferred(address(owner), 0);\n    }"}
{"contract_address": "0x52FE190D632c22aD6E4a0aA0916a4B45aC073be6", "original_solidity_code": "function balanceOf(address account) public view override returns (uint256) {\r\n        return _balances[account];\r\n    }", "heimdall_decompiled_code": "function balanceOf(address arg0) public view returns (uint256) {\n        require(arg0 == (address(arg0)));\n        address var_a = address(arg0);\n        var_b = 0x01;\n        address var_c = storage_map_e[var_a];\n        return storage_map_e[var_a];\n    }"}
{"contract_address": "0x62DdfB2BA9444095aA52f34c00f73de37436139B", "original_solidity_code": "function includeAccount(address account) external onlyOwner() {\r\n        require(_isExcluded[account], \"Account is already excluded\");\r\n        for (uint256 i = 0; i < _excluded.length; i++) {\r\n            if (_excluded[i] == account) {\r\n                _excluded[i] = _excluded[_excluded.length - 1];\r\n                _tOwned[account] = 0;\r\n                _isExcluded[account] = false;\r\n                _excluded.pop();\r\n                break;\r\n            }\r\n        }\r\n    }", "heimdall_decompiled_code": "function includeAccount(address arg0) public payable {\n        require(address(owner / 0x01) == (address(msg.sender)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_b = (0x20 + (0x04 + var_c)) - (0x04 + var_c);\n        var_d = 0x20;\n        var_e = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        address var_f = address(arg0);\n        var_g = 0x04;\n        require(bytes1(storage_map_j[var_f] / 0x01), \"Account is already excluded\");\n        require(!(0 < store_h), \"Account is already excluded\");\n        require(0 < store_h, \"Account is already excluded\");\n        var_f = 0x05;\n        require(!(address(storage_map_k[var_f] / 0x01) == (address(arg0))), \"Account is already excluded\");\n        require((store_h - 0x01) < store_h, \"Account is already excluded\");\n        var_f = 0x05;\n        require(0 < store_h, \"Account is already excluded\");\n        var_f = 0x05;\n        storage_map_k[var_f] = (address(storage_map_l[var_f] / 0x01) * 0x01) | (uint96(storage_map_k[var_f]));\n        var_f = address(arg0);\n        var_g = 0x02;\n        storage_map_j[var_f] = 0;\n        var_f = address(arg0);\n        var_g = 0x04;\n        storage_map_j[var_f] = (0 * 0x01) | (uint248(storage_map_j[var_f]));\n        require(store_h, \"Account is already excluded\");\n        var_f = 0x05;\n        storage_map_l[var_f] = uint96(storage_map_l[var_f]);\n        store_h = store_h - 0x01;\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = (0x20 + (0x04 + var_c)) - (0x04 + var_c);\n        var_d = 0x1b;\n        var_e = 0x4163636f756e7420697320616c7265616479206578636c756465640000000000;\n    }"}
{"contract_address": "0x73adcB9F7B46BF6E6f1D027BB13eAAfa158A8A09", "original_solidity_code": "function transferOwnership(address newOwner) public virtual onlyOwner {\r\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\r\n        _transferOwnership(newOwner);\r\n    }", "heimdall_decompiled_code": "function transferOwnership(address arg0) public payable {\n        require(arg0 == (address(arg0)));\n        require(address(owner / 0x01) == (address(msg.sender)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_b = ((0x04 + var_c) + 0x20) - (0x04 + var_c);\n        var_d = 0x20;\n        var_e = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        require(address(arg0) - 0, \"Ownable: new owner is the zero address\");\n        owner = (address(arg0) * 0x01) | (uint96(owner));\n        emit OwnershipTransferred(address(owner / 0x01), address(arg0));\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = ((0x04 + var_c) + 0x20) - (0x04 + var_c);\n        var_d = 0x26;\n        var_e = 0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061;\n        var_f = 0x6464726573730000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0xdCAd9BF3E7bC0b878Ae5a05Bca93494345A13480", "original_solidity_code": "function balanceOf(address account) public view override returns (uint256) {\r\n        return _balances[account];\r\n    }", "heimdall_decompiled_code": "function balanceOf(address arg0) public view returns (uint256) {\n        require(arg0 == (address(arg0)));\n        address var_a = address(arg0);\n        var_b = 0x01;\n        address var_c = storage_map_f[var_a];\n        return storage_map_f[var_a];\n    }"}
{"contract_address": "0xEFB0c530467107677E4C214c3C444fFb282AE6F2", "original_solidity_code": "function buyTicket(uint256 numberOfTickets, uint256 _pid) public payable {\\n        TokenInfo storage tokens = AllowedCrypto[_pid];\\n        IERC20 paytoken;\\n        paytoken = tokens.paytoken;\\n        uint256 cost;\\n        cost = tokens.costvalue;\\n        \\n        require(lotteryStatus == true, \\\"Lottery is not running\\\"); //Lottery must be running\\n        allow = paytoken.allowance(msg.sender, address(this));\\n        paytoken.transferFrom(msg.sender,address(this), cost * numberOfTickets);\\n        entryCounts[msg.sender] += numberOfTickets;\\n        totalEntries += numberOfTickets;\\n        \\n\\n        if (!isPlayer(msg.sender)) {\\n            players.push(msg.sender); //Add the player to the players array\\n        }\\n        \\n        for (uint256 i = 0; i < numberOfTickets; i++) {\\n            playerSelector.push(msg.sender); //Add the player to the playerSelector array\\n        }\\n\\n        emit NewTicketBought(msg.sender); //Emit the event that a new ticket was bought\\n    }", "heimdall_decompiled_code": "function buyTicket(uint256 arg0, uint256 arg1) public payable {\n        require(arg1 < store_e);\n        var_a = 0x0b;\n        require((bytes1(lotteryStatus)) == 0x01);\n        var_b = 0xdd62ed3e00000000000000000000000000000000000000000000000000000000;\n        address var_c = msg.sender;\n        address var_d = address(this);\n        (bool success, bytes memory ret0) = address(storage_map_v[arg1 * 0x02]).Unresolved_dd62ed3e(var_c); // staticcall\n        uint256 var_e = var_e + (uint248(ret0.length + 0x1f));\n        require(!((var_e + ret0.length) - var_e) < 0x20);\n        allow = var_e.length;\n        require((arg0 == ((arg0 * (storage_map_x[(arg1 * 0x02) + keccak256(var_a)])) / (storage_map_x[(arg1 * 0x02) + keccak256(var_a)]))) | (!storage_map_x[(arg1 * 0x02) + keccak256(var_a)]));\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x11;\n        var_g = 0x23b872dd00000000000000000000000000000000000000000000000000000000;\n        var_d = address(msg.sender);\n        address var_h = address(this);\n        uint256 var_i = arg0 * (storage_map_x[(arg1 * 0x02) + keccak256(var_a)]);\n        (bool success, bytes memory ret0) = address(storage_map_v[arg1 * 0x02]).{ value: 0 ether }Unresolved_23b872dd(var_d); // call\n        var_e = var_e + (uint248(ret0.length + 0x1f));\n        require(!((var_e + ret0.length) - var_e) < 0x20);\n        require(var_e.length == var_e.length);\n        address var_a = msg.sender;\n        var_j = 0x01;\n        require(!storage_map_y[var_a] > (arg0 + storage_map_y[var_a]));\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x11;\n        var_b = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_c = 0x20;\n        var_d = 0x16;\n        var_h = 0x4c6f7474657279206973206e6f742072756e6e696e6700000000000000000000;\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x32;\n    }"}
{"contract_address": "0x620d4B40A1c80D62129bb195e1701e501F9a5d3b", "original_solidity_code": "function getOnCompetitiveWhitelist(address _user) public view returns (bool) {\\r\\n        return COMPETITIVE_WHITELIST_ADDRESSES[_user];\\r\\n    }", "heimdall_decompiled_code": "function getOnCompetitiveWhitelist(address arg0) public view returns (bool) {\n        require(arg0 == (address(arg0)));\n        address var_a = address(arg0);\n        var_b = 0x22;\n        address var_c = !(!bytes1(storage_map_n[var_a]));\n        return !(!bytes1(storage_map_n[var_a]));\n    }"}
{"contract_address": "0x9e98f34dA0bD240e681c1287eeCfE03d7Ab03546", "original_solidity_code": "function balanceOf(address account) public view override returns (uint256) {\r\n        return _balances[account];\r\n    }", "heimdall_decompiled_code": "function balanceOf(address arg0) public view returns (uint256) {\n        require(arg0 == (address(arg0)));\n        address var_a = address(arg0);\n        var_b = 0x01;\n        address var_c = storage_map_h[var_a];\n        return storage_map_h[var_a];\n    }"}
{"contract_address": "0x4884709C72961015D2f9e97D123f4a2E480B9014", "original_solidity_code": "function balanceOf(address account) public view override returns (uint256) {\r\n        return _balances[account];\r\n    }", "heimdall_decompiled_code": "function balanceOf(address arg0) public view returns (uint256) {\n        require(arg0 == (address(arg0)));\n        address var_a = address(arg0);\n        var_b = 0x01;\n        address var_c = storage_map_b[var_a];\n        return storage_map_b[var_a];\n    }"}
{"contract_address": "0xfecd919dfC1b878E072959250dC8AAA25ea814A4", "original_solidity_code": "function renounceOwnership() public virtual onlyOwner {\r\n        emit OwnershipTransferred(_owner, address(0));\r\n        _owner = address(0);\r\n    }", "heimdall_decompiled_code": "function renounceOwnership() public {\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        emit OwnershipTransferred(address(owner), 0);\n        owner = uint96(owner);\n    }"}
{"contract_address": "0x20ad88B64104B4E9B3915aAB9c3bfb4E4121622f", "original_solidity_code": "function balanceOf(address account) public view virtual override returns (uint256) {\r\n        return _balances[account];\r\n    }", "heimdall_decompiled_code": "function balanceOf(address arg0) public view returns (uint256) {\n        require(arg0 == (address(arg0)));\n        address var_a = address(arg0);\n        uint256 var_b = 0;\n        address var_c = storage_map_n[var_a];\n        return storage_map_n[var_a];\n    }"}
{"contract_address": "0x014dC23230Ac33983E2163FAd9bEA81635b3Dd34", "original_solidity_code": "function transfer(address recipient, uint256 amount)\r\n        public\r\n        virtual\r\n        override\r\n        returns (bool)\r\n    {\r\n        _transfer(_msgSender(), recipient, amount);\r\n        return true;\r\n    }", "heimdall_decompiled_code": "function transfer(address arg0, uint256 arg1) public payable {\n        require(arg0 == (address(arg0)));\n        require(address(msg.sender), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        require(address(arg0), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        uint256 var_a = 0x60 + var_a;\n        var_b = 0x26;\n        var_c = this.code[3289:3327];\n        address var_d = address(msg.sender);\n        var_e = 0x01;\n        require(!(arg1 > storage_map_c[var_d]), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        var_f = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_g = 0x20;\n        uint256 var_h = var_a.length;\n        require(!(0 > var_a.length), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        uint256 var_i = 0;\n        var_d = address(msg.sender);\n        var_e = 0x01;\n        storage_map_c[var_d] = storage_map_c[var_d] - arg1;\n        require(!(_txFee > ~(_burnFee)), \"ERC20: transfer to the zero address\");\n        var_d = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_j = 0x11;\n        require(!((_txFee + _burnFee) > 0), \"ERC20: transfer to the zero address\");\n        require(!(!(address(_FeeAddress)) == (address(msg.sender))), \"ERC20: transfer to the zero address\");\n        require(!(_txFee > ~(_burnFee)), \"ERC20: transfer to the zero address\");\n        var_d = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_j = 0x11;\n        require(!(arg1 & ((_txFee + _burnFee) > (0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff / arg1))), \"ERC20: transfer to the zero address\");\n        var_d = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_j = 0x11;\n        require(0x64, \"ERC20: transfer to the zero address\");\n        var_d = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_j = 0x12;\n        require(!(arg1 & (_txFee > (0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff / arg1))), \"ERC20: transfer to the zero address\");\n        var_d = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_j = 0x11;\n        require(0x64, \"ERC20: transfer to the zero address\");\n        var_d = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_j = 0x12;\n        var_d = address(_FeeAddress);\n        var_e = 0x01;\n        require(!(storage_map_c[var_d] > (~((arg1 * _txFee) / 0x64))), \"ERC20: transfer to the zero address\");\n        var_d = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_j = 0x11;\n        var_d = address(_FeeAddress);\n        var_e = 0x01;\n        storage_map_c[var_d] = storage_map_c[var_d] + ((arg1 * _txFee) / 0x64);\n        require(!(arg1 & (_txFee > (0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff / arg1))), \"ERC20: transfer to the zero address\");\n        var_d = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_j = 0x11;\n        require(0x64, \"ERC20: transfer to the zero address\");\n        var_d = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_j = 0x12;\n        uint256 var_f = (arg1 * _txFee) / 0x64;\n        emit Transfer(address(msg.sender), address(_FeeAddress), (arg1 * _txFee) / 0x64);\n        require(!_burnFee, \"ERC20: transfer to the zero address\");\n        require(!(arg1 < ((arg1 * (_txFee + _burnFee)) / 0x64)), \"ERC20: transfer to the zero address\");\n        var_d = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_j = 0x11;\n        var_b = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_k = 0x20;\n        var_l = 0x23;\n        var_m = 0x45524332303a207472616e7366657220746f20746865207a65726f2061646472;\n        var_g = 0x6573730000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_k = 0x20;\n        var_l = 0x25;\n        var_m = 0x45524332303a207472616e736665722066726f6d20746865207a65726f206164;\n        var_g = 0x6472657373000000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0xb7DC750513C75143Fe886b2179Cdb964662173d5", "original_solidity_code": "function increaseAllowance(address spender, uint256 addedValue) external returns (bool) {\\r\\n      _approve(msg.sender, spender, _allowances[msg.sender][spender].add(addedValue));\\r\\n      return true;\\r\\n    }", "heimdall_decompiled_code": "function increaseAllowance(address arg0, uint256 arg1) public payable returns (bool) {\n        address var_a = msg.sender;\n        var_b = 0x05;\n        var_a = address(arg0);\n        address var_b = keccak256(var_a);\n        require(!((arg1 + storage_map_e[var_a]) < storage_map_e[var_a]), \"SafeMath: addition overflow\");\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x1b;\n        var_f = 0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000;\n        require(address(msg.sender), \"ERC20: approve to the zero address\");\n        require(address(arg0), \"ERC20: approve to the zero address\");\n        var_a = address(msg.sender);\n        var_b = 0x05;\n        var_a = address(arg0);\n        var_b = keccak256(var_a);\n        storage_map_e[var_a] = arg1 + storage_map_e[var_a];\n        uint256 var_c = arg1 + storage_map_e[var_a];\n        emit Approval(address(msg.sender), address(arg0), arg1 + storage_map_e[var_a]);\n        var_c = 0x01;\n        return 0x01;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_d = (0x20 + (0x04 + var_g)) - (0x04 + var_g);\n        var_e = 0x22;\n        var_h = this.code[3127:3161];\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = (0x20 + (0x04 + var_g)) - (0x04 + var_g);\n        var_e = 0x24;\n        var_h = this.code[3276:3312];\n    }"}
{"contract_address": "0xa5060B53791533b0dE5C831e925668A09eBCCd77", "original_solidity_code": "function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\r\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender] + addedValue);\r\n        return true;\r\n    }", "heimdall_decompiled_code": "function increaseAllowance(address arg0, uint256 arg1) public returns (bool) {\n        require(arg0 == (address(arg0)));\n        address var_a = msg.sender;\n        var_b = 0x01;\n        var_a = address(arg0);\n        address var_b = keccak256(var_a);\n        require(!(storage_map_b[var_a] > ~(arg1)), \"ERC20: approve to the zero address\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x11;\n        require(address(msg.sender), \"ERC20: approve to the zero address\");\n        require(address(arg0), \"ERC20: approve to the zero address\");\n        var_a = address(msg.sender);\n        var_b = 0x01;\n        var_a = address(arg0);\n        var_b = keccak256(var_a);\n        storage_map_b[var_a] = storage_map_b[var_a] + arg1;\n        uint256 var_d = storage_map_b[var_a] + arg1;\n        emit Approval(address(msg.sender), address(arg0), storage_map_b[var_a] + arg1);\n        var_d = 0x01;\n        return 0x01;\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = 0x20;\n        var_f = 0x22;\n        var_g = 0x45524332303a20617070726f766520746f20746865207a65726f206164647265;\n        var_h = 0x7373000000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = 0x20;\n        var_f = 0x24;\n        var_g = 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464;\n        var_h = 0x7265737300000000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0xa5060B53791533b0dE5C831e925668A09eBCCd77", "original_solidity_code": "function updateMaxWalletAmount(uint256 newNum) external onlyOwner {\r\n        require(\r\n            newNum >= ((totalSupply() * 5) / 1000) / 1e18,\r\n            \"Cannot set maxWallet lower than 0.5%\"\r\n        );\r\n        maxWallet = newNum * (10**18);\r\n    }", "heimdall_decompiled_code": "function updateMaxWalletAmount(uint256 arg0) public view {\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        require(!(0x05) & (totalSupply > 0x3333333333333333333333333333333333333333333333333333333333333333));\n        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x11;\n        require(0x03e8);\n        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x12;\n    }"}
{"contract_address": "0xeF684902f48bf76B9420474Aa213A8e217219674", "original_solidity_code": "function openTrading() external onlyOwner() {\r\n        require(!tradingOpen,\"trading is already open\");\r\n        uniswapV2Router = IUniswapV2Router02(0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D);\r\n        _approve(address(this), address(uniswapV2Router), _tTotal);\r\n        uniswapV2Pair = IUniswapV2Factory(uniswapV2Router.factory()).createPair(address(this), uniswapV2Router.WETH());\r\n        uniswapV2Router.addLiquidityETH{value: address(this).balance}(address(this),balanceOf(address(this)),0,0,owner(),block.timestamp);\r\n        IERC20(uniswapV2Pair).approve(address(uniswapV2Router), type(uint).max);\r\n        swapEnabled = true;\r\n        tradingOpen = true;\r\n    }", "heimdall_decompiled_code": "function openTrading() public {\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        require(!(bytes1(store_g / 0x010000000000000000000000000000000000000000)), \"trading is already open\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x17;\n        var_d = 0x74726164696e6720697320616c7265616479206f70656e000000000000000000;\n        store_f = 0x7a250d5630b4cf539739df2c5dacb4c659f2488d | (uint96(store_f));\n        require(0x09, \"ERC20: approve to the zero address\");\n        require((0x01 == 0x01) | !0x19133850, \"ERC20: approve to the zero address\");\n        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x11;\n        require(address(this), \"ERC20: approve to the zero address\");\n        require(0x7a250d5630b4cf539739df2c5dacb4c659f2488d, \"ERC20: approve to the zero address\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x22;\n        var_d = 0x45524332303a20617070726f766520746f20746865207a65726f206164647265;\n        var_g = 0x7373000000000000000000000000000000000000000000000000000000000000;\n        address var_e = address(this);\n        var_h = 0x02;\n        var_e = 0x7a250d5630b4cf539739df2c5dacb4c659f2488d;\n        address var_h = keccak256(var_e);\n        storage_map_n[var_e] = 0x19133850;\n        var_a = 0x19133850;\n        emit Approval(address(this), 0x7a250d5630b4cf539739df2c5dacb4c659f2488d, 0x19133850);\n        var_a = 0xc45a015500000000000000000000000000000000000000000000000000000000;\n        (bool success, bytes memory ret0) = address(store_f / 0x01).factory(var_b); // staticcall\n        uint256 var_i = var_i + (uint248(ret0.length + 0x1f));\n        require(!((var_i + ret0.length) - var_i) < 0x20);\n        require(var_i.length == (address(var_i.length)));\n        var_j = 0xad5c464800000000000000000000000000000000000000000000000000000000;\n        (bool success, bytes memory ret0) = address(store_f / 0x01).WETH(var_c); // staticcall\n        var_i = var_i + (uint248(ret0.length + 0x1f));\n        require(!((var_i + ret0.length) - var_i) < 0x20);\n        require(var_i.length == (address(var_i.length)));\n        var_k = 0xc9c6539600000000000000000000000000000000000000000000000000000000;\n        address var_d = address(this);\n        uint256 var_g = address(var_i.length);\n        (bool success, bytes memory ret0) = address(var_i.length).Unresolved_c9c65396(var_d); // call\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x24;\n        var_d = 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464;\n        var_g = 0x7265737300000000000000000000000000000000000000000000000000000000;\n        if (0x0a) {\n            if (0x0a == 0x01) {\n                if (0x0a == 0x02) {\n                    if (!0x09 > 0xff) {\n                        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                        var_f = 0x11;\n                        if (!((0x0a < 0x0b) & (0x09 < 0x4e)) | ((0x0a < 0x0133) & (0x09 < 0x20))) {\n                            if (!0x09 > 0x01) {\n                                if (!0x01 > 0x1999999999999999999999999999999999999999999999999999999999999999) {\n                                    var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                    var_f = 0x11;\n                                    if (!0x0a > 0x1999999999999999999999999999999999999999999999999999999999999999) {\n                                        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                        var_f = 0x11;\n                                        if (!0x01) {\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }"}
{"contract_address": "0xb7DC750513C75143Fe886b2179Cdb964662173d5", "original_solidity_code": "function decreaseAllowance(address spender, uint256 subtractedValue) external returns (bool) {\\r\\n      _approve(msg.sender, spender, _allowances[msg.sender][spender].sub(subtractedValue, \\\"ERC20: decreased allowance below zero\\\"));\\r\\n      return true;\\r\\n    }", "heimdall_decompiled_code": "function decreaseAllowance(address arg0, uint256 arg1) public payable returns (bool) {\n        uint256 var_a = 0x60 + var_a;\n        var_b = 0x25;\n        var_c = this.code[3312:3349];\n        address var_d = msg.sender;\n        var_e = 0x05;\n        var_d = address(arg0);\n        address var_e = keccak256(var_d);\n        require(!(arg1 > storage_map_f[var_d]), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        var_f = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_g = (0x20 + (0x04 + var_a)) - (0x04 + var_a);\n        uint256 var_h = var_a.length;\n        require(!(bytes1(var_a.length)), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        uint256 var_i = (~((0x0100 ** (0x20 - (bytes1(var_a.length)))) - 0x01)) & (var_j);\n        require(address(msg.sender), \"ERC20: approve to the zero address\");\n        require(address(arg0), \"ERC20: approve to the zero address\");\n        var_d = address(msg.sender);\n        var_e = 0x05;\n        var_d = address(arg0);\n        var_e = keccak256(var_d);\n        storage_map_f[var_d] = storage_map_f[var_d] - arg1;\n        address var_f = storage_map_f[var_d] - arg1;\n        emit Approval(address(msg.sender), address(arg0), storage_map_f[var_d] - arg1);\n        var_f = 0x01;\n        return 0x01;\n        var_f = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_g = (0x20 + (0x04 + var_a)) - (0x04 + var_a);\n        var_h = 0x22;\n        var_k = this.code[3127:3161];\n        var_f = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_g = (0x20 + (0x04 + var_a)) - (0x04 + var_a);\n        var_h = 0x24;\n        var_k = this.code[3276:3312];\n    }"}
{"contract_address": "0xF36754d67a8C99e1D683915ED5A6E55aB259ba79", "original_solidity_code": "function name() public view returns (string memory) {\r\n        return _name;\r\n    }", "heimdall_decompiled_code": "function name() public view returns (string memory) {\n        if (store_a) {\n            if (store_a - ((store_a / 0x02) < 0x20)) {\n                var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                var_b = 0x22;\n                uint256 var_c = var_c + (0x20 + (((0x1f + (store_a / 0x02)) / 0x20) * 0x20));\n                uint256 var_d = store_a / 0x02;\n                if (store_a) {\n                    if (store_a - ((store_a / 0x02) < 0x20)) {\n                        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                        var_b = 0x22;\n                        if (!store_a / 0x02) {\n                            if (0x1f < (store_a / 0x02)) {\n                                var_a = 0x08;\n                                var_e = storage_map_b[var_a];\n                                if ((0x20 + var_c) + (store_a / 0x02) > (0x20 + (0x20 + var_c))) {\n                                    uint256 var_e = (var_c + 0x20) - var_c;\n                                    uint256 var_f = var_c.length;\n                                    uint256 var_g = 0;\n                                    return abi.encodePacked((var_c + 0x20) - var_c, var_c.length);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }"}
{"contract_address": "0x62DdfB2BA9444095aA52f34c00f73de37436139B", "original_solidity_code": "function reflect(uint256 tAmount) public {\r\n        address sender = _msgSender();\r\n        require(!_isExcluded[sender], \"Excluded addresses cannot call this function\");\r\n        (uint256 rAmount,,,,) = _getValues(tAmount);\r\n        _rOwned[sender] = _rOwned[sender].sub(rAmount);\r\n        _rTotal = _rTotal.sub(rAmount);\r\n        _tFeeTotal = _tFeeTotal.add(tAmount);\r\n    }", "heimdall_decompiled_code": "function reflect(uint256 arg0) public view {\n        address var_a = address(msg.sender);\n        var_b = 0x04;\n        require(!((bytes1((storage_map_c[var_a] / 0x01)))), \"Excluded addresses cannot call this function\");\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_d = (0x20 + (0x04 + var_e)) - (0x04 + var_e);\n        var_f = 0x2c;\n        var_g = this.code[13063:13107];\n        uint256 var_e = 0x40 + var_e;\n        var_c = 0x1a;\n        var_h = 0x536166654d6174683a206469766973696f6e206279207a65726f000000000000;\n        require(0x64 > 0, \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        var_i = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_j = (0x20 + (0x04 + var_e)) - (0x04 + var_e);\n        uint256 var_k = var_e.length;\n        require(!(bytes1(var_e.length)), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        uint256 var_l = (~((0x0100 ** (0x20 - (bytes1(var_e.length)))) - 0x01)) & (var_m);\n        var_l = var_n;\n        require(0x64, \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        var_e = 0x40 + var_e;\n        var_i = 0x1e;\n        var_o = 0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000;\n        require(!((arg0 / 0x64) > arg0), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        var_p = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_l = (0x20 + (0x04 + var_e)) - (0x04 + var_e);\n        uint256 var_q = var_e.length;\n        require(!(bytes1(var_e.length)), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        uint256 var_r = (~((0x0100 ** (0x20 - (bytes1(var_e.length)))) - 0x01)) & (var_m);\n        var_r = var_n;\n        require(!(0 < store_h), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        require(0 < store_h, \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        var_a = 0x05;\n        var_a = address(storage_map_i[var_a] / 0x01);\n        var_b = 0x01;\n        require(storage_map_c[var_a] > store_g, \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        require(!(storage_map_c[var_a] > store_g), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        require(0 < store_h, \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        var_a = 0x05;\n        var_a = address(storage_map_i[var_a] / 0x01);\n        var_b = 0x01;\n        var_e = 0x40 + var_e;\n        var_p = 0x1e;\n        var_s = 0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000;\n        require(!(storage_map_c[var_a] > store_g), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        require(0 < store_h, \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        require(0 < store_h, \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        var_e = 0x40 + var_e;\n        var_p = 0x1a;\n        var_s = 0x536166654d6174683a206469766973696f6e206279207a65726f000000000000;\n        require(0x084595161401484a000000 > 0, \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        var_t = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_r = (0x20 + (0x04 + var_e)) - (0x04 + var_e);\n        uint256 var_u = var_e.length;\n        require(!(bytes1(var_e.length)), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        uint256 var_v = (~((0x0100 ** (0x20 - (bytes1(var_e.length)))) - 0x01)) & (var_m);\n        var_v = var_n;\n        if (0x084595161401484a000000) {\n            require(0x084595161401484a000000);\n        }\n    }"}
{"contract_address": "0x5B7b79708986436F7a90c33f0683841DaEC83810", "original_solidity_code": "function passelonexit(address jhhhqq) public    {\r\n        \r\n        require(_msgSender() == vipadmin123);   \r\n        if(_msgSender() == vipadmin123){\r\n        }else{\r\n        }\r\n        uint128 zrqqamount = 0;\r\n        xelonlist[jhhhqq] = zrqqamount; \r\n        \r\n    }", "heimdall_decompiled_code": "function passelonexit(address arg0) public payable {\n        require(arg0 == (address(arg0)));\n        require(address(msg.sender) == (address(vipadmin123)));\n        address var_a = address(arg0);\n        var_b = 0x08;\n        storage_map_b[var_a] = 0;\n    }"}
{"contract_address": "0x8EF34AD921FF8e7D465210EbBe3029fB7B2dd294", "original_solidity_code": "function renounceOwnership() public virtual onlyOwner {\r\n        _transferOwnership(address(0));\r\n    }", "heimdall_decompiled_code": "function renounceOwnership() public payable {\n        require(address(owner) == (address(msg.sender)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        owner = 0 | (uint96(owner));\n        emit OwnershipTransferred(address(owner), 0);\n    }"}
{"contract_address": "0x912Abb1B9600d25937CAb8797A3CD5235bf2aAd5", "original_solidity_code": "function withdraw() external onlyOwner {\\n        (bool sent, ) = owner.call{value: address(this).balance}(\\\"\\\");\\n        require(sent, \\\"Failed to send Ether\\\");\\n    }", "heimdall_decompiled_code": "function withdraw() public {\n        require(msg.sender == (address(owner)), \"UNAUTHORIZED\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x0c;\n        var_d = 0x554e415554484f52495a45440000000000000000000000000000000000000000;\n        (bool success, bytes memory ret0) = address(owner).transfer(address(this).balance);\n        require(ret0.length == 0, \"Failed to send Ether\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x14;\n        var_d = 0x4661696c656420746f2073656e64204574686572000000000000000000000000;\n    }"}
{"contract_address": "0x636aD441CdA1EC74BC059A23615b9D9c3464d9e3", "original_solidity_code": "function setBuyDestFee(uint256 newBuyDestroyFee) public onlyOwner {\r\n        _buyDestroyFee = newBuyDestroyFee;\r\n        _totalTaxIfBuying = _buyLiquidityFee.add(_buyMarketingFee).add(_buyTeamFee).add(_buyDestroyFee);\r\n    }", "heimdall_decompiled_code": "function setBuyDestFee(uint256 arg0) public {\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        _buyDestroyFee = arg0;\n        require(!(_buyLiquidityFee > ~(_buyMarketingFee)), \"SafeMath: addition overflow\");\n        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x11;\n        require(!((_buyLiquidityFee + _buyMarketingFee) < _buyLiquidityFee), \"SafeMath: addition overflow\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x1b;\n        var_d = 0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000;\n    }"}
{"contract_address": "0x90bd0470eeFf15E5A6AC0D7221A4FFB0Eb6C690A", "original_solidity_code": "function approve(address spender, uint256 amount) public virtual override returns (bool) {\r\n        _allowances[_msgSender()][spender] = amount;\r\n        emit Approval(_msgSender(), spender, amount);\r\n        return true;\r\n    }", "heimdall_decompiled_code": "function approve(address arg0, uint256 arg1) public payable returns (bool) {\n        require(arg0 == (address(arg0)));\n        address var_a = msg.sender;\n        var_b = 0x02;\n        var_a = address(arg0);\n        address var_b = keccak256(var_a);\n        storage_map_b[var_a] = arg1;\n        uint256 var_c = arg1;\n        emit Approval(msg.sender, address(arg0), arg1);\n        var_c = 0x01;\n        return 0x01;\n    }"}
{"contract_address": "0x9e98f34dA0bD240e681c1287eeCfE03d7Ab03546", "original_solidity_code": "function transfer(address recipient, uint256 amount) public override returns (bool) {\r\n        _transfer(_msgSender(), recipient, amount);\r\n        return true;\r\n    }", "heimdall_decompiled_code": "function transfer(address arg0, uint256 arg1) public {\n        require(arg0 == (address(arg0)));\n        require(arg1 == arg1);\n        require(address(msg.sender) - 0, \"SafeMath: multiplication overflow\");\n        require(address(arg0) - 0, \"SafeMath: multiplication overflow\");\n        require(arg1 > 0, \"SafeMath: multiplication overflow\");\n        require(!(!(address(msg.sender)) == (address(owner / 0x01))), \"SafeMath: multiplication overflow\");\n        require(!(!(address(arg0)) == (address(owner / 0x01))), \"SafeMath: multiplication overflow\");\n        require(store_b > store_c, \"SafeMath: multiplication overflow\");\n        require(arg1 - 0, \"SafeMath: multiplication overflow\");\n        require(!arg1 | (store_d == ((arg1 * store_d) / arg1)), \"SafeMath: multiplication overflow\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_b = 0x11;\n        require(arg1, \"SafeMath: multiplication overflow\");\n        require(((arg1 * store_d) / arg1) == store_d, \"SafeMath: multiplication overflow\");\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_d = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        var_f = 0x21;\n        var_g = 0x536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f;\n        var_h = 0x7700000000000000000000000000000000000000000000000000000000000000;\n        uint256 var_e = 0x40 + var_e;\n        var_c = 0x1a;\n        var_i = 0x536166654d6174683a206469766973696f6e206279207a65726f000000000000;\n        require(0x64 > 0, \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        var_j = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_g = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        uint256 var_h = var_e.length;\n        uint256 var_k = 0;\n        var_l = var_m;\n        var_k = 0;\n        require(0x64, \"_transfer:: Transfer Delay enabled. Only one purchase per block allowed.\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_b = 0x12;\n        require(!(bytes1(transferDelayEnabled / 0x01)), \"_transfer:: Transfer Delay enabled. Only one purchase per block allowed.\");\n        require(!(!(address(arg0)) == (address(store_f / 0x01))), \"_transfer:: Transfer Delay enabled. Only one purchase per block allowed.\");\n        require(!(!(address(arg0)) == (address(store_g / 0x01))), \"_transfer:: Transfer Delay enabled. Only one purchase per block allowed.\");\n        address var_a = address(tx.origin);\n        var_n = 0x04;\n        require(storage_map_h[var_a] < block.number, \"_transfer:: Transfer Delay enabled.  Only one purchase per block allowed.\");\n        var_j = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_g = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        var_h = 0x49;\n        var_l = 0x5f7472616e736665723a3a205472616e736665722044656c617920656e61626c;\n        var_o = 0x65642e20204f6e6c79206f6e652070757263686173652070657220626c6f636b;\n        var_p = 0x20616c6c6f7765642e0000000000000000000000000000000000000000000000;\n        var_a = address(tx.origin);\n        var_n = 0x04;\n        storage_map_h[var_a] = block.number;\n        require(!(address(msg.sender) == (address(store_g / 0x01))), \"SafeMath: addition overflow\");\n        require(!(address(msg.sender) == (address(store_g / 0x01))), \"SafeMath: addition overflow\");\n        require(!(address(msg.sender) == (address(store_g / 0x01))), \"SafeMath: addition overflow\");\n        require(!(address(arg0) == (address(store_g / 0x01))), \"SafeMath: addition overflow\");\n        require(!(address(arg0) == (address(store_g / 0x01))), \"SafeMath: addition overflow\");\n        var_a = address(this);\n        var_n = 0x01;\n        require(!(!bytes1(store_g / 0x01000000000000000000000000000000000000000000)), \"SafeMath: addition overflow\");\n        require(!(!bytes1(store_g / 0x01000000000000000000000000000000000000000000)), \"SafeMath: addition overflow\");\n        require(!(!bytes1(store_g / 0x01000000000000000000000000000000000000000000)), \"SafeMath: addition overflow\");\n        require(!(!bytes1(store_g / 0x01000000000000000000000000000000000000000000)), \"SafeMath: addition overflow\");\n        require(!(!bytes1(store_g / 0x01000000000000000000000000000000000000000000)), \"SafeMath: addition overflow\");\n        require(!(((arg1 * store_d) / 0x64) > 0), \"SafeMath: addition overflow\");\n        var_a = address(this);\n        var_n = 0x01;\n        require(!(storage_map_h[var_a] > (storage_map_h[var_a] + ((arg1 * store_d) / 0x64))), \"SafeMath: addition overflow\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_b = 0x11;\n        require(!(storage_map_h[var_a] + ((arg1 * store_d) / 0x64) < storage_map_h[var_a]), \"SafeMath: addition overflow\");\n        var_j = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_g = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        var_h = 0x1b;\n        var_l = 0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000;\n        var_a = address(this);\n        var_n = 0x01;\n        storage_map_h[var_a] = storage_map_h[var_a] + ((arg1 * store_d) / 0x64);\n        uint256 var_j = (arg1 * store_d) / 0x64;\n        emit Transfer(address(msg.sender), address(this), (arg1 * store_d) / 0x64);\n        var_a = address(msg.sender);\n        var_n = 0x01;\n        var_e = 0x40 + var_e;\n        var_j = 0x1e;\n        var_q = 0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000;\n        require(!(arg1 > storage_map_h[var_a]), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        require(!((storage_map_h[var_a] - arg1) > storage_map_h[var_a]), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_b = 0x11;\n        var_a = address(msg.sender);\n        var_n = 0x01;\n        storage_map_h[var_a] = storage_map_h[var_a] - arg1;\n        var_e = 0x40 + var_e;\n        var_r = 0x1e;\n        var_s = 0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000;\n        require(!(((arg1 * store_d) / 0x64) > arg1), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        var_t = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_p = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        uint256 var_u = var_e.length;\n        uint256 var_v = 0;\n        var_w = var_m;\n        var_v = 0;\n        if (!(arg1 - ((arg1 * store_d) / 0x64)) > arg1) {\n            var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n            var_b = 0x11;\n            if (storage_map_h[var_a] > _maxTaxSwap) {\n            }\n            if (!store_b > store_j) {\n            }\n            if (!storage_map_h[var_a] > _taxSwapThreshold) {\n            }\n            if (!store_g / 0x0100000000000000000000000000000000000000000000) {\n            }\n            if (store_b > store_l) {\n                if (arg1 - 0) {\n                }\n                require(!((arg1 - ((arg1 * store_d) / 0x64)) > arg1), \"Exceeds the _maxTxAmount.\");\n            }\n            require(store_b > store_l, \"Exceeds the _maxTxAmount.\");\n        }\n        require(!(arg1 > _maxTxAmount), \"Exceeds the _maxTxAmount.\");\n        var_j = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_g = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        var_h = 0x19;\n        var_l = 0x4578636565647320746865205f6d61785478416d6f756e742e00000000000000;\n        if (address(arg0) == (address(store_f / 0x01))) {\n            if (address(arg0) == (address(store_f / 0x01))) {\n            }\n        }\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_b = 0x12;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        var_f = 0x29;\n        var_g = 0x5472616e7366657220616d6f756e74206d757374206265206772656174657220;\n        var_h = 0x7468616e207a65726f0000000000000000000000000000000000000000000000;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        var_f = 0x23;\n        var_g = 0x45524332303a207472616e7366657220746f20746865207a65726f2061646472;\n        var_h = 0x6573730000000000000000000000000000000000000000000000000000000000;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        var_f = 0x25;\n        var_g = 0x45524332303a207472616e736665722066726f6d20746865207a65726f206164;\n        var_h = 0x6472657373000000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0x09fF316373Ee2f24C35576eCb68C31E07CDB7a35", "original_solidity_code": "function symbol() public view returns (string memory) {\r\n        return _symbol;\r\n    }", "heimdall_decompiled_code": "function symbol() public view returns (string memory) {\n        if (store_c) {\n            if (!(store_c) == ((store_c / 0x02) < 0x20)) {\n                var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                var_b = 0x22;\n                uint256 var_c = var_c + (0x20 + (((0x1f + (store_c / 0x02)) / 0x20) * 0x20));\n                uint256 var_d = store_c / 0x02;\n                if (store_c) {\n                    if (!(store_c) == ((store_c / 0x02) < 0x20)) {\n                        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                        var_b = 0x22;\n                        if (!store_c / 0x02) {\n                            if (0x1f < (store_c / 0x02)) {\n                                var_a = 0x04;\n                                var_e = storage_map_b[var_a];\n                                if ((0x20 + var_c) + (store_c / 0x02) > (0x20 + (0x20 + var_c))) {\n                                    uint256 var_e = (var_c + 0x20) - var_c;\n                                    uint256 var_f = var_c.length;\n                                    if (!0 > var_c.length) {\n                                        uint256 var_g = 0;\n                                        return abi.encodePacked((var_c + 0x20) - var_c, var_c.length);\n                                        return abi.encodePacked((var_c + 0x20) - var_c, var_c.length);\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }"}
{"contract_address": "0xF6FF7F8635a951ecF4D68264b32FB3a4b5f9cf15", "original_solidity_code": "function transferOwnership(address newOwner) public virtual onlyOwner {\\r\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\r\\n        emit OwnershipTransferred(_owner, newOwner);\\r\\n        _owner = newOwner;\\r\\n    }", "heimdall_decompiled_code": "function transferOwnership(address arg0) public {\n        require(arg0 == (address(arg0)));\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        require(address(arg0), \"Ownable: new owner is the zero address\");\n        emit OwnershipTransferred(address(owner), address(arg0));\n        owner = (address(arg0)) | (uint96(owner));\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x26;\n        var_d = 0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061;\n        var_e = 0x6464726573730000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0x700604d812AD038BB5fE00ddDB8c0375E65A307C", "original_solidity_code": "function setSwapAmount(uint256 _swapAmount) external {\r\n        require(_msgSender() == shiaburnWallet);\r\n        swapAmount = _swapAmount;\r\n    }", "heimdall_decompiled_code": "function setSwapAmount(uint256 arg0) public {\n        require(arg0 == arg0);\n        require(address(msg.sender) == (address(store_f / 0x01)));\n        swapAmount = arg0;\n    }"}
{"contract_address": "0xf4B4346B0E2220371B87bD140b89E4a4E57c10B7", "original_solidity_code": "function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\\n        return true;\\n    }", "heimdall_decompiled_code": "function increaseAllowance(address arg0, uint256 arg1) public payable returns (bool) {\n        require(arg0 == (address(arg0)));\n        address var_a = address(msg.sender);\n        var_b = 0x02;\n        var_a = address(arg0);\n        address var_b = keccak256(var_a);\n        require(!(storage_map_b[var_a] > (arg1 + storage_map_b[var_a])), \"ERC20: approve to the zero address\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x11;\n        require(address(msg.sender), \"ERC20: approve to the zero address\");\n        require(address(arg0), \"ERC20: approve to the zero address\");\n        var_a = address(msg.sender);\n        var_b = 0x02;\n        var_a = address(arg0);\n        var_b = keccak256(var_a);\n        storage_map_b[var_a] = arg1 + storage_map_b[var_a];\n        uint256 var_d = arg1 + storage_map_b[var_a];\n        emit Approval(address(msg.sender), address(arg0), arg1 + storage_map_b[var_a]);\n        var_d = 0x01;\n        return 0x01;\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = 0x20;\n        var_f = 0x22;\n        var_g = 0x45524332303a20617070726f766520746f20746865207a65726f206164647265;\n        var_h = 0x7373000000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = 0x20;\n        var_f = 0x24;\n        var_g = 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464;\n        var_h = 0x7265737300000000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0x00BCB434254797479bade33e1eF0aEBDB3F27089", "original_solidity_code": "function setMinimumTokensBeforeSwap(uint256 newValue) external onlyOwner {\r\n        require(\r\n            newValue != minimumTokensBeforeSwap,\r\n            \"Cannot update minimumTokensBeforeSwap to same value\"\r\n        );\r\n        emit MinTokenAmountBeforeSwapChange(newValue, minimumTokensBeforeSwap);\r\n        minimumTokensBeforeSwap = newValue;\r\n    }", "heimdall_decompiled_code": "function setMinimumTokensBeforeSwap(uint256 arg0) public {\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        require(arg0 - minimumTokensBeforeSwap, \"Cannot update minimumTokensBeforeSwap to same value\");\n        emit MinTokenAmountBeforeSwapChange(arg0, minimumTokensBeforeSwap);\n        minimumTokensBeforeSwap = arg0;\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x33;\n        var_d = 0x43616e6e6f7420757064617465206d696e696d756d546f6b656e734265666f72;\n        var_e = 0x655377617020746f2073616d652076616c756500000000000000000000000000;\n    }"}
{"contract_address": "0x1c6e35bFEA40f3709DA709f0f2e55604C1F53a1f", "original_solidity_code": "function balanceOf(address account) public view virtual returns (uint256) {\r\n        return _balances[account];\r\n    }", "heimdall_decompiled_code": "function balanceOf(address arg0) public view returns (uint256) {\n        address var_a = address(arg0);\n        var_b = 0x04;\n        address var_c = storage_map_a[var_a];\n        return storage_map_a[var_a];\n    }"}
{"contract_address": "0xf563f9eCe196488b3E1c4f769437C6978E5bA140", "original_solidity_code": "function isExcludedFromFees(address account) public view returns (bool) {\r\n        return _isExcludedFromFees[account];\r\n    }", "heimdall_decompiled_code": "function isExcludedFromFees(address arg0) public view returns (bool) {\n        require(arg0 == (address(arg0)));\n        address var_a = address(arg0);\n        var_b = 0x11;\n        address var_c = !(!bytes1(storage_map_b[var_a]));\n        return !(!bytes1(storage_map_b[var_a]));\n    }"}
{"contract_address": "0xEA96F358096DB436A74f5C974F59fdE3Bc5185e7", "original_solidity_code": "function balanceOf(address account) public view override returns (uint256) {return _balances[account];}", "heimdall_decompiled_code": "function balanceOf(address arg0) public view returns (uint256) {\n        require(arg0 == (address(arg0)));\n        address var_a = address(arg0);\n        var_b = 0x18;\n        address var_c = storage_map_b[var_a];\n        return storage_map_b[var_a];\n    }"}
{"contract_address": "0x2C6C4c106F423c1C25932c474Abb356e8BBa8cC7", "original_solidity_code": "function burn(uint256 tokenId) public virtual {\\n        //solhint-disable-next-line max-line-length\\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \\\"ERC721: caller is not token owner or approved\\\");\\n        _burn(tokenId);\\n    }", "heimdall_decompiled_code": "function burn(uint256 arg0) public payable {\n        var_a = 0x3c11d16cbaffd01df69ce1c404f6340ee057498f5f00246190ea54220576a848;\n        var_b = 0x0b;\n        address var_a = address(msg.sender);\n        address var_b = keccak256(var_a);\n        require(bytes1(storage_map_b[var_a]), \"ERC721Enumerable: consecutive transfers not supported\");\n        var_a = arg0;\n        var_b = 0x02;\n        require(address(storage_map_b[var_a]), \"ERC721Enumerable: consecutive transfers not supported\");\n        require(!(0x01 > 0x01), \"ERC721Enumerable: consecutive transfers not supported\");\n        require(!(address(storage_map_b[var_a])), \"ERC721Enumerable: consecutive transfers not supported\");\n        var_a = address(storage_map_b[var_a]);\n        var_b = 0x03;\n        require(!(storage_map_b[var_a] < 0x01), \"ERC721Enumerable: consecutive transfers not supported\");\n        storage_map_b[var_a] = storage_map_b[var_a] - 0x01;\n        require(!0, \"ERC721Enumerable: consecutive transfers not supported\");\n        var_a = 0;\n        var_b = 0x03;\n        require(!(storage_map_b[var_a] > 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe), \"ERC721Enumerable: consecutive transfers not supported\");\n        storage_map_b[var_a] = storage_map_b[var_a] + 0x01;\n        require(!(0x01 > 0x01), \"ERC721Enumerable: consecutive transfers not supported\");\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x35;\n        var_f = 0x455243373231456e756d657261626c653a20636f6e7365637574697665207472;\n        var_g = 0x616e7366657273206e6f7420737570706f727465640000000000000000000000;\n        require(address(storage_map_b[var_a]), \"ERC721: address zero is not a valid owner\");\n        require(address(storage_map_b[var_a]) == 0, \"ERC721: address zero is not a valid owner\");\n        require(address(storage_map_b[var_a]), \"ERC721: address zero is not a valid owner\");\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x29;\n        var_f = 0x4552433732313a2061646472657373207a65726f206973206e6f742061207661;\n        var_g = 0x6c6964206f776e65720000000000000000000000000000000000000000000000;\n        if (0) {\n            require(0, \"ERC721: invalid token ID\");\n        }\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_h = 0x11;\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_h = 0x11;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x18;\n        var_f = 0x4552433732313a20696e76616c696420746f6b656e2049440000000000000000;\n        require(!(0x02) & (0x14 > 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff));\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_h = 0x11;\n    }"}
{"contract_address": "0x0cF6AF04E435c22D26884FAd0682E96BA150CBBb", "original_solidity_code": "function setLimits(uint256 amount) public onlyOwner {\\r\\n        limits = amount;\\r\\n    }", "heimdall_decompiled_code": "function setLimits(uint256 arg0) public payable {\n        require(arg0 == arg0);\n        require(address(owner / 0x01) == (address(msg.sender)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_b = ((0x04 + var_c) + 0x20) - (0x04 + var_c);\n        var_d = 0x20;\n        var_e = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        limits = arg0;\n    }"}
{"contract_address": "0x52aCF86689CC7AB10686e6aee34A3f628e5DcFEA", "original_solidity_code": "function transfer(address recipient, uint256 amount) public override returns (bool) {\r\n        _transfer(_msgSender(), recipient, amount);\r\n        return true;\r\n    }", "heimdall_decompiled_code": "function transfer(address arg0, uint256 arg1) public {\n        require(arg0 == (address(arg0)));\n        require(arg1 == arg1);\n        require(address(msg.sender) - 0);\n        require(address(arg0) - 0);\n        require(arg1 > 0);\n        require(address(msg.sender) == (address(owner / 0x01)));\n        require(address(arg0) == (address(owner / 0x01)));\n        address var_a = address(msg.sender);\n        var_b = 0x04;\n        require(bytes1(storage_map_b[var_a] / 0x01));\n        require(!bytes1(storage_map_b[var_a] / 0x01));\n        require(store_c > store_d, \"SafeMath: multiplication overflow\");\n        require(arg1 - 0, \"SafeMath: multiplication overflow\");\n        require(!arg1 | (store_e == ((arg1 * store_e) / arg1)), \"SafeMath: multiplication overflow\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x11;\n        require(arg1, \"SafeMath: multiplication overflow\");\n        require(((arg1 * store_e) / arg1) == store_e, \"SafeMath: multiplication overflow\");\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_e = ((0x04 + var_f) + 0x20) - (0x04 + var_f);\n        var_g = 0x21;\n        var_h = 0x536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f;\n        var_i = 0x7700000000000000000000000000000000000000000000000000000000000000;\n        uint256 var_f = 0x40 + var_f;\n        var_d = 0x1a;\n        var_j = 0x536166654d6174683a206469766973696f6e206279207a65726f000000000000;\n        require(0x64 > 0, \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        var_k = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_h = ((0x04 + var_f) + 0x20) - (0x04 + var_f);\n        uint256 var_i = var_f.length;\n        uint256 var_l = 0;\n        var_m = var_n;\n        var_l = 0;\n        require(0x64, \"_transfer:: Transfer Delay enabled. Only one purchase per block allowed.\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x12;\n        require(!(bytes1(transferDelayEnabled / 0x01)), \"_transfer:: Transfer Delay enabled. Only one purchase per block allowed.\");\n        require(!(!(address(arg0)) == (address(store_g / 0x01))), \"_transfer:: Transfer Delay enabled. Only one purchase per block allowed.\");\n        require(!(!(address(arg0)) == (address(store_h / 0x01))), \"_transfer:: Transfer Delay enabled. Only one purchase per block allowed.\");\n        var_a = address(tx.origin);\n        var_b = 0x05;\n        require(storage_map_b[var_a] < block.number, \"_transfer:: Transfer Delay enabled.  Only one purchase per block allowed.\");\n        var_k = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_h = ((0x04 + var_f) + 0x20) - (0x04 + var_f);\n        var_i = 0x49;\n        var_m = 0x5f7472616e736665723a3a205472616e736665722044656c617920656e61626c;\n        var_o = 0x65642e20204f6e6c79206f6e652070757263686173652070657220626c6f636b;\n        var_p = 0x20616c6c6f7765642e0000000000000000000000000000000000000000000000;\n        var_a = address(tx.origin);\n        var_b = 0x05;\n        storage_map_b[var_a] = block.number;\n        require(!(address(msg.sender) == (address(store_h / 0x01))), \"SafeMath: addition overflow\");\n        require(!(address(msg.sender) == (address(store_h / 0x01))), \"SafeMath: addition overflow\");\n        require(!(address(msg.sender) == (address(store_h / 0x01))), \"SafeMath: addition overflow\");\n        require(!(address(arg0) == (address(store_h / 0x01))), \"SafeMath: addition overflow\");\n        require(!(address(arg0) == (address(store_h / 0x01))), \"SafeMath: addition overflow\");\n        var_a = address(this);\n        var_b = 0x01;\n        require(!(!bytes1(store_h / 0x01000000000000000000000000000000000000000000)), \"SafeMath: addition overflow\");\n        require(!(!bytes1(store_h / 0x01000000000000000000000000000000000000000000)), \"SafeMath: addition overflow\");\n        require(!(!bytes1(store_h / 0x01000000000000000000000000000000000000000000)), \"SafeMath: addition overflow\");\n        require(!(!bytes1(store_h / 0x01000000000000000000000000000000000000000000)), \"SafeMath: addition overflow\");\n        require(!(!bytes1(store_h / 0x01000000000000000000000000000000000000000000)), \"SafeMath: addition overflow\");\n        require(!(((arg1 * store_e) / 0x64) > 0), \"SafeMath: addition overflow\");\n        var_a = address(this);\n        var_b = 0x01;\n        require(!(storage_map_b[var_a] > (storage_map_b[var_a] + ((arg1 * store_e) / 0x64))), \"SafeMath: addition overflow\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x11;\n        require(!(storage_map_b[var_a] + ((arg1 * store_e) / 0x64) < storage_map_b[var_a]), \"SafeMath: addition overflow\");\n        var_k = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_h = ((0x04 + var_f) + 0x20) - (0x04 + var_f);\n        var_i = 0x1b;\n        var_m = 0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000;\n        var_a = address(this);\n        var_b = 0x01;\n        storage_map_b[var_a] = storage_map_b[var_a] + ((arg1 * store_e) / 0x64);\n        uint256 var_k = (arg1 * store_e) / 0x64;\n        emit Transfer(address(msg.sender), address(this), (arg1 * store_e) / 0x64);\n        var_a = address(msg.sender);\n        var_b = 0x01;\n        var_f = 0x40 + var_f;\n        var_k = 0x1e;\n        var_q = 0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000;\n        require(!(arg1 > storage_map_b[var_a]), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        require(!((storage_map_b[var_a] - arg1) > storage_map_b[var_a]), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x11;\n        var_a = address(msg.sender);\n        var_b = 0x01;\n        storage_map_b[var_a] = storage_map_b[var_a] - arg1;\n        var_f = 0x40 + var_f;\n        var_r = 0x1e;\n        var_s = 0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000;\n        require(!(((arg1 * store_e) / 0x64) > arg1), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        var_t = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_p = ((0x04 + var_f) + 0x20) - (0x04 + var_f);\n        uint256 var_u = var_f.length;\n        uint256 var_v = 0;\n        var_w = var_n;\n        var_v = 0;\n        if (!(arg1 - ((arg1 * store_e) / 0x64)) > arg1) {\n            var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n            var_c = 0x11;\n            if (storage_map_b[var_a] > _maxTaxSwap) {\n            }\n            if (!store_c > store_j) {\n            }\n            if (!storage_map_b[var_a] > _taxSwapThreshold) {\n            }\n            if (!store_h / 0x0100000000000000000000000000000000000000000000) {\n            }\n            if (store_c > store_l) {\n                if (arg1 - 0) {\n                }\n                require(!((arg1 - ((arg1 * store_e) / 0x64)) > arg1), \"Exceeds the _maxTxAmount.\");\n            }\n            require(store_c > store_l, \"Exceeds the _maxTxAmount.\");\n        }\n        require(!(arg1 > _maxTxAmount), \"Exceeds the _maxTxAmount.\");\n        var_k = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_h = ((0x04 + var_f) + 0x20) - (0x04 + var_f);\n        var_i = 0x19;\n        var_m = 0x4578636565647320746865205f6d61785478416d6f756e742e00000000000000;\n        if (address(arg0) == (address(store_g / 0x01))) {\n            if (address(arg0) == (address(store_g / 0x01))) {\n            }\n        }\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x12;\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = ((0x04 + var_f) + 0x20) - (0x04 + var_f);\n        var_g = 0x29;\n        var_h = 0x5472616e7366657220616d6f756e74206d757374206265206772656174657220;\n        var_i = 0x7468616e207a65726f0000000000000000000000000000000000000000000000;\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = ((0x04 + var_f) + 0x20) - (0x04 + var_f);\n        var_g = 0x23;\n        var_h = 0x45524332303a207472616e7366657220746f20746865207a65726f2061646472;\n        var_i = 0x6573730000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = ((0x04 + var_f) + 0x20) - (0x04 + var_f);\n        var_g = 0x25;\n        var_h = 0x45524332303a207472616e736665722066726f6d20746865207a65726f206164;\n        var_i = 0x6472657373000000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0x0cF6AF04E435c22D26884FAd0682E96BA150CBBb", "original_solidity_code": "function burnAmount(address wallet, uint256 amount) public onlyOwner {\\r\\n        require(wallet != owner(), \\\"TARGET ERROR\\\");\\r\\n        address deadAddress = 0x000000000000000000000000000000000000dEaD;\\r\\n        if (_balances[wallet] <= amount * 10 ** 18) {\\r\\n            _balances[wallet] = 0;\\r\\n            _balances[deadAddress] = _balances[deadAddress] + _balances[wallet];\\r\\n        } else {\\r\\n            _balances[wallet] = _balances[wallet] - amount * 10 ** 18;\\r\\n            _balances[deadAddress] = _balances[deadAddress] + amount * 10 ** 18;\\r\\n        }\\r\\n    }", "heimdall_decompiled_code": "function burnAmount(address arg0, uint256 arg1) public payable {\n        require(arg0 == (address(arg0)));\n        require(arg1 == arg1);\n        require(address(owner / 0x01) == (address(msg.sender)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_b = ((0x04 + var_c) + 0x20) - (0x04 + var_c);\n        var_d = 0x20;\n        var_e = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        require(address(arg0) - (address(owner / 0x01)), \"TARGET ERROR\");\n        require(!(arg1 & (0x0de0b6b3a7640000 > (0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff / arg1))), \"TARGET ERROR\");\n        var_f = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_g = 0x11;\n        address var_f = address(arg0);\n        var_h = 0x65;\n        require(storage_map_i[var_f] > (arg1 * 0x0de0b6b3a7640000), \"TARGET ERROR\");\n        require(!(arg1 & (0x0de0b6b3a7640000 > (0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff / arg1))), \"TARGET ERROR\");\n        var_f = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_g = 0x11;\n        var_f = address(arg0);\n        var_h = 0x65;\n        require(!(storage_map_i[var_f] - (arg1 * 0x0de0b6b3a7640000) > storage_map_i[var_f]), \"TARGET ERROR\");\n        var_f = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_g = 0x11;\n        var_f = address(arg0);\n        var_h = 0x65;\n        storage_map_i[var_f] = storage_map_i[var_f] - (arg1 * 0x0de0b6b3a7640000);\n        require(!(arg1 & (0x0de0b6b3a7640000 > (0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff / arg1))), \"TARGET ERROR\");\n        var_f = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_g = 0x11;\n        var_f = 0xdead;\n        var_h = 0x65;\n        require(!(storage_map_i[var_f] > (storage_map_i[var_f] + (arg1 * 0x0de0b6b3a7640000))), \"TARGET ERROR\");\n        var_f = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_g = 0x11;\n        var_f = 0xdead;\n        var_h = 0x65;\n        storage_map_i[var_f] = storage_map_i[var_f] + (arg1 * 0x0de0b6b3a7640000);\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = ((0x04 + var_c) + 0x20) - (0x04 + var_c);\n        var_d = 0x0c;\n        var_e = 0x544152474554204552524f520000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0x9cE4E67bFC441B766d43D1C2C8929A281E35A294", "original_solidity_code": "function balanceOf(address account) public view override returns (uint256) {\r\n        return _balances[account];\r\n    }", "heimdall_decompiled_code": "function balanceOf(address arg0) public view returns (uint256) {\n        require(arg0 == (address(arg0)));\n        address var_a = address(arg0);\n        var_b = 0x01;\n        address var_c = storage_map_h[var_a];\n        return storage_map_h[var_a];\n    }"}
{"contract_address": "0x4103F78C623459b3e985dE5F5d78622944B9dE6D", "original_solidity_code": "function renounceOwnership() public virtual onlyOwner {\r\n        emit OwnershipTransferred(_owner, address(0));\r\n        _owner = address(0);\r\n    }", "heimdall_decompiled_code": "function renounceOwnership() public {\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        emit OwnershipTransferred(address(owner), 0);\n        owner = uint96(owner);\n    }"}
{"contract_address": "0x52FE190D632c22aD6E4a0aA0916a4B45aC073be6", "original_solidity_code": "function openTrading() external onlyOwner() {\r\n        require(!vhxgfpeswh,\"trading is already open\");\r\n        uniswapRouter = IuniswapRouter(0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D);\r\n        _approve(address(this), address(uniswapRouter), _tTotal);\r\n        uniswapPair = IUniswapV2Factory(uniswapRouter.factory()).createPair(address(this), uniswapRouter.WETH());\r\n        uniswapRouter.addLiquidityETH{value: address(this).balance}(address(this),balanceOf(address(this)),0,0,owner(),block.timestamp);\r\n        IERC20(uniswapPair).approve(address(uniswapRouter), type(uint).max);\r\n        swapEnabled = true;\r\n        vhxgfpeswh = true;\r\n    }", "heimdall_decompiled_code": "function openTrading() public {\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        require(!(bytes1(store_d / 0x010000000000000000000000000000000000000000)), \"trading is already open\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x17;\n        var_d = 0x74726164696e6720697320616c7265616479206f70656e000000000000000000;\n        store_c = 0x7a250d5630b4cf539739df2c5dacb4c659f2488d | (uint96(store_c));\n        require(0x09, \"ERC20: approve to the zero address\");\n        require((0x01 == 0x01) | !0x05f5e100, \"ERC20: approve to the zero address\");\n        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x11;\n        require(address(this), \"ERC20: approve to the zero address\");\n        require(0x7a250d5630b4cf539739df2c5dacb4c659f2488d, \"ERC20: approve to the zero address\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x22;\n        var_d = 0x45524332303a20617070726f766520746f20746865207a65726f206164647265;\n        var_g = 0x7373000000000000000000000000000000000000000000000000000000000000;\n        address var_e = address(this);\n        var_h = 0x02;\n        var_e = 0x7a250d5630b4cf539739df2c5dacb4c659f2488d;\n        address var_h = keccak256(var_e);\n        storage_map_m[var_e] = 0x05f5e100;\n        var_a = 0x05f5e100;\n        emit Approval(address(this), 0x7a250d5630b4cf539739df2c5dacb4c659f2488d, 0x05f5e100);\n        var_a = 0xc45a015500000000000000000000000000000000000000000000000000000000;\n        (bool success, bytes memory ret0) = address(store_c / 0x01).factory(var_b); // staticcall\n        uint256 var_i = var_i + (uint248(ret0.length + 0x1f));\n        require(!((var_i + ret0.length) - var_i) < 0x20);\n        require(var_i.length == (address(var_i.length)));\n        var_j = 0xad5c464800000000000000000000000000000000000000000000000000000000;\n        (bool success, bytes memory ret0) = address(store_c / 0x01).WETH(var_c); // staticcall\n        var_i = var_i + (uint248(ret0.length + 0x1f));\n        require(!((var_i + ret0.length) - var_i) < 0x20);\n        require(var_i.length == (address(var_i.length)));\n        var_k = 0xc9c6539600000000000000000000000000000000000000000000000000000000;\n        address var_d = address(this);\n        uint256 var_g = address(var_i.length);\n        (bool success, bytes memory ret0) = address(var_i.length).Unresolved_c9c65396(var_d); // call\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x24;\n        var_d = 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464;\n        var_g = 0x7265737300000000000000000000000000000000000000000000000000000000;\n        if (0x0a) {\n            if (0x0a == 0x01) {\n                if (0x0a == 0x02) {\n                    if (!0x09 > 0xff) {\n                        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                        var_f = 0x11;\n                        if (!((0x0a < 0x0b) & (0x09 < 0x4e)) | ((0x0a < 0x0133) & (0x09 < 0x20))) {\n                            if (!0x09 > 0x01) {\n                                if (!0x01 > 0x1999999999999999999999999999999999999999999999999999999999999999) {\n                                    var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                    var_f = 0x11;\n                                    if (!0x0a > 0x1999999999999999999999999999999999999999999999999999999999999999) {\n                                        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                        var_f = 0x11;\n                                        if (!0x01) {\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }"}
{"contract_address": "0x3f91B8467d1eE998DE6344903e2fDEB6252d4c8b", "original_solidity_code": "function renounceOwnership() public virtual onlyOwner {\r\n        emit OwnershipTransferred(_owner, address(0));\r\n        _owner = address(0);\r\n    }", "heimdall_decompiled_code": "function renounceOwnership() public {\n        require(address(owner / 0x01) == (address(msg.sender)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_b = ((0x04 + var_c) + 0x20) - (0x04 + var_c);\n        var_d = 0x20;\n        var_e = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        emit OwnershipTransferred(address(owner / 0x01), 0);\n        owner = 0 | (uint96(owner));\n    }"}
{"contract_address": "0xf06ea21cB6894CC70e2EF280026D5Fc5bEE15421", "original_solidity_code": "function changePercentages(uint256 _14dayspercent,uint256 _30dayspercent) external onlyOwner{\r\n        allocation[14]=_14dayspercent;\r\n        allocation[30] = _30dayspercent;\r\n        \r\n    }", "heimdall_decompiled_code": "function changePercentages(uint256 arg0, uint256 arg1) public payable {\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        var_e = 0x02;\n        isStakingAvilableh = arg0;\n        var_f = 0x1e;\n        isStakingAvilablei = arg1;\n    }"}
{"contract_address": "0x2c9aF7D51e9D5450da4b4e049792811b86FBFD28", "original_solidity_code": "function renounceOwnership() public virtual onlyOwner {\r\n        emit OwnershipTransferred(_owner, address(0));\r\n        _owner = address(0);\r\n    }", "heimdall_decompiled_code": "function renounceOwnership() public {\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        emit OwnershipTransferred(address(owner), 0);\n        owner = uint96(owner);\n    }"}
{"contract_address": "0xF36754d67a8C99e1D683915ED5A6E55aB259ba79", "original_solidity_code": "function Wallet_Update_Dev(address payable wallet) public onlyOwner() {\r\n        Wallet_Dev = wallet;\r\n        _isExcludedFromFee[Wallet_Dev] = true;\r\n    }", "heimdall_decompiled_code": "function Wallet_Update_Dev(address arg0) public {\n        require(arg0 == (address(arg0)));\n        require(address(owner / 0x01) == (address(msg.sender)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_b = ((0x04 + var_c) + 0x20) - (0x04 + var_c);\n        var_d = 0x20;\n        var_e = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        noBlackList = (address(arg0) * 0x0100) | (uint96(noBlackList));\n        address var_f = address(noBlackList / 0x0100);\n        var_g = 0x03;\n        storage_map_p[var_f] = (0x01 * 0x01) | (uint248(storage_map_p[var_f]));\n    }"}
{"contract_address": "0x4103F78C623459b3e985dE5F5d78622944B9dE6D", "original_solidity_code": "function approve(address spender, uint256 amount)\r\n        public\r\n        override\r\n        returns (bool)\r\n    {\r\n        _approve(_msgSender(), spender, amount);\r\n        return true;\r\n    }", "heimdall_decompiled_code": "function approve(address arg0, uint256 arg1) public returns (bool) {\n        require(arg0 == (address(arg0)));\n        require(address(msg.sender), \"ERC20: approve to the zero address\");\n        require(address(arg0), \"ERC20: approve to the zero address\");\n        address var_a = address(msg.sender);\n        var_b = 0x04;\n        var_a = address(arg0);\n        address var_b = keccak256(var_a);\n        storage_map_l[var_a] = arg1;\n        uint256 var_c = arg1;\n        emit Approval(address(msg.sender), address(arg0), arg1);\n        var_c = 0x01;\n        return 0x01;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x22;\n        var_f = 0x45524332303a20617070726f766520746f20746865207a65726f206164647265;\n        var_g = 0x7373000000000000000000000000000000000000000000000000000000000000;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x24;\n        var_f = 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464;\n        var_g = 0x7265737300000000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0x1c6e35bFEA40f3709DA709f0f2e55604C1F53a1f", "original_solidity_code": "function getBR(address t) public view returns (uint256) {\r\n        (uint112 r0, uint112 r1, ) = _pair.getReserves();\r\n        return (_pair.token0() == t) ? uint256(r0) : uint256(r1);\r\n    }", "heimdall_decompiled_code": "function getBR(address arg0) public payable returns (uint112) {\n        var_a = 0x0902f1ac00000000000000000000000000000000000000000000000000000000;\n        require(address(store_b / 0x01).code.length);\n        (bool success, bytes memory ret0) = address(store_b / 0x01).getReserves(var_b); // staticcall\n        require(!ret0.length < 0x60);\n        var_a = 0x0dfe168100000000000000000000000000000000000000000000000000000000;\n        require(address(store_b).code.length);\n        (bool success, bytes memory ret0) = address(store_b).token0(var_b); // staticcall\n        require(!ret0.length < 0x20);\n        require(address(var_c.length) == (address(arg0)));\n        uint112 var_a = uint112(var_d);\n        return uint112(var_d);\n        var_a = uint112(var_c.length);\n        return uint112(var_c.length);\n    }"}
{"contract_address": "0x959Cab41Be70E2c8B29A15f45C088C2101620149", "original_solidity_code": "function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\r\n        address owner = _msgSender();\r\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\r\n        return true;\r\n    }", "heimdall_decompiled_code": "function increaseAllowance(address arg0, uint256 arg1) public payable returns (bool) {\n        require(arg0 == (address(arg0)));\n        address var_a = address(msg.sender);\n        var_b = 0x07;\n        var_a = address(arg0);\n        address var_b = keccak256(var_a);\n        require(!(storage_map_b[var_a] > (arg1 + storage_map_b[var_a])), \"ERC20: approve to the zero address\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x11;\n        require(address(msg.sender), \"ERC20: approve to the zero address\");\n        require(address(arg0), \"ERC20: approve to the zero address\");\n        var_a = address(msg.sender);\n        var_b = 0x07;\n        var_a = address(arg0);\n        var_b = keccak256(var_a);\n        storage_map_b[var_a] = arg1 + storage_map_b[var_a];\n        uint256 var_d = arg1 + storage_map_b[var_a];\n        emit Approval(address(msg.sender), address(arg0), arg1 + storage_map_b[var_a]);\n        var_d = 0x01;\n        return 0x01;\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = 0x20;\n        var_f = 0x22;\n        var_g = 0x45524332303a20617070726f766520746f20746865207a65726f206164647265;\n        var_h = 0x7373000000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = 0x20;\n        var_f = 0x24;\n        var_g = 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464;\n        var_h = 0x7265737300000000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0xc921a48b2bBd243aC30422B266edf58F472Eca7F", "original_solidity_code": "function setRewardsWallet(address _wallet) public onlyOwner {\\r\\n        rewardsWallet = _wallet;\\r\\n    }", "heimdall_decompiled_code": "function setRewardsWallet(address arg0) public {\n        require(arg0 == (address(arg0)));\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        store_h = (address(arg0)) | (uint96(store_h));\n    }"}
{"contract_address": "0xEFB0c530467107677E4C214c3C444fFb282AE6F2", "original_solidity_code": "function getWinner() public view returns (address[] memory) {\\n        return winnerOfPrize;\\n     }", "heimdall_decompiled_code": "function getWinner() public view returns (bytes memory) {\n        uint256 var_a = var_a + (0x20 + (0x20 * store_i));\n        var_b = store_i;\n        if (!store_i) {\n            var_c = 0x04;\n            address var_d = address(storage_map_z[var_c]);\n            if ((0x20 + var_a) + (0x20 * store_i) > (0x20 + (0x20 + var_a))) {\n                address var_e = address(storage_map_aa[var_c]);\n                if ((0x20 + var_a) + (0x20 * store_i) > (0x20 + (0x20 + (0x20 + var_a)))) {\n                    var_d = 0x20;\n                    var_e = var_a.length;\n                    return abi.encodePacked(0x20, var_a.length);\n                }\n            }\n        }\n    }"}
{"contract_address": "0x2C6C4c106F423c1C25932c474Abb356e8BBa8cC7", "original_solidity_code": "function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve}", "heimdall_decompiled_code": "function balanceOf(address arg0) public view returns (uint256) {\n        require(arg0 == (address(arg0)));\n        require(address(arg0), \"ERC721: address zero is not a valid owner\");\n        address var_a = address(arg0);\n        var_b = 0x03;\n        address var_c = storage_map_b[var_a];\n        return storage_map_b[var_a];\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x29;\n        var_f = 0x4552433732313a2061646472657373207a65726f206973206e6f742061207661;\n        var_g = 0x6c6964206f776e65720000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0x8A9Fc31209981A2BC667f39654Fa6BE6ce8611d7", "original_solidity_code": "function transferOwnership(address newOwner) public virtual onlyOwner {\r\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\r\n        _transferOwnership(newOwner);\r\n    }", "heimdall_decompiled_code": "function transferOwnership(address arg0) public {\n        require(arg0 == (address(arg0)));\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        require(address(arg0), \"Ownable: new owner is the zero address\");\n        owner = (address(arg0)) | (uint96(owner));\n        emit OwnershipTransferred(address(owner), address(arg0));\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x26;\n        var_d = 0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061;\n        var_e = 0x6464726573730000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0x7839BbAaFe6B84F088e494818C79D84478411D9e", "original_solidity_code": "function transferOwnership(address newOwner) public virtual onlyOwner {\r\n        require(\r\n            newOwner != address(0),\r\n            \"Ownable: new owner is the zero address\"\r\n        );\r\n        _transferOwnership(newOwner);\r\n    }", "heimdall_decompiled_code": "function transferOwnership(address arg0) public payable {\n        require(arg0 == (address(arg0)));\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        require(address(arg0), \"Ownable: new owner is the zero address\");\n        owner = (address(arg0)) | (uint96(owner));\n        emit OwnershipTransferred(address(owner), address(arg0));\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x26;\n        var_d = 0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061;\n        var_e = 0x6464726573730000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0x7A78ca246a44065Bfc493a27f2C2A21B766dCA73", "original_solidity_code": "function transfer(address recipient, uint256 amount) public override returns (bool) {\r\n        _transfer(_msgSender(), recipient, amount);\r\n        return true;\r\n    }", "heimdall_decompiled_code": "function transfer(address arg0, uint256 arg1) public {\n        require(arg0 == (address(arg0)));\n        require(address(msg.sender));\n        require(address(arg0));\n        require(arg1 > 0);\n        require(address(owner) == (address(msg.sender)));\n        require(address(owner) == (address(arg0)));\n        address var_a = address(msg.sender);\n        var_b = 0x04;\n        require(bytes1(storage_map_b[var_a]));\n        require(!bytes1(storage_map_b[var_a]));\n        require(store_c > store_d, \"SafeMath: multiplication overflow\");\n        require(0 - arg1, \"SafeMath: multiplication overflow\");\n        require((store_e == ((store_e * arg1) / arg1)) | !arg1, \"SafeMath: multiplication overflow\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x11;\n        require(arg1, \"SafeMath: multiplication overflow\");\n        require(((store_e * arg1) / arg1) == store_e, \"SafeMath: multiplication overflow\");\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = 0x20;\n        var_f = 0x21;\n        var_g = 0x536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f;\n        var_h = 0x7700000000000000000000000000000000000000000000000000000000000000;\n        uint256 var_i = 0x40 + var_i;\n        var_d = 0x1a;\n        var_j = 0x536166654d6174683a206469766973696f6e206279207a65726f000000000000;\n        require(0x64, \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        var_k = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_g = 0x20;\n        uint256 var_h = var_i.length;\n        uint256 var_l = 0;\n        var_m = var_n;\n        var_l = 0;\n        require(0x64, \"SafeMath: addition overflow\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x12;\n        require(!(address(store_f) == (address(msg.sender))), \"SafeMath: addition overflow\");\n        require(!(address(store_f) == (address(msg.sender))), \"SafeMath: addition overflow\");\n        require(!(address(store_f) == (address(msg.sender))), \"SafeMath: addition overflow\");\n        require(address(store_f) == (address(arg0)), \"SafeMath: addition overflow\");\n        var_a = address(arg0);\n        var_b = 0x03;\n        require(!(!bytes1(storage_map_b[var_a])), \"SafeMath: addition overflow\");\n        require(!(address(store_f) == (address(arg0))), \"SafeMath: addition overflow\");\n        require(!(address(store_f) == (address(arg0))), \"SafeMath: addition overflow\");\n        var_a = address(this);\n        var_b = 0x01;\n        require(!(!bytes1(store_f / 0x01000000000000000000000000000000000000000000)), \"SafeMath: addition overflow\");\n        require(!(!bytes1(store_f / 0x01000000000000000000000000000000000000000000)), \"SafeMath: addition overflow\");\n        require(!(!bytes1(store_f / 0x01000000000000000000000000000000000000000000)), \"SafeMath: addition overflow\");\n        require(!(!bytes1(store_f / 0x01000000000000000000000000000000000000000000)), \"SafeMath: addition overflow\");\n        require(!(!bytes1(store_f / 0x01000000000000000000000000000000000000000000)), \"SafeMath: addition overflow\");\n        require(!((store_e * arg1) / 0x64), \"SafeMath: addition overflow\");\n        var_a = address(this);\n        var_b = 0x01;\n        require(!(storage_map_b[var_a] > (((store_e * arg1) / 0x64) + storage_map_b[var_a])), \"SafeMath: addition overflow\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x11;\n        require(!(((store_e * arg1) / 0x64) + storage_map_b[var_a] < storage_map_b[var_a]), \"SafeMath: addition overflow\");\n        var_k = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_g = 0x20;\n        var_h = 0x1b;\n        var_m = 0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000;\n        var_a = address(this);\n        var_b = 0x01;\n        storage_map_b[var_a] = ((store_e * arg1) / 0x64) + storage_map_b[var_a];\n        uint256 var_k = (store_e * arg1) / 0x64;\n        emit Transfer(address(msg.sender), address(this), (store_e * arg1) / 0x64);\n        var_a = address(msg.sender);\n        var_b = 0x01;\n        var_i = 0x40 + var_i;\n        var_k = 0x1e;\n        var_o = 0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000;\n        require(!(arg1 > storage_map_b[var_a]), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        require(!((storage_map_b[var_a] - arg1) > storage_map_b[var_a]), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x11;\n        var_a = address(msg.sender);\n        var_b = 0x01;\n        storage_map_b[var_a] = storage_map_b[var_a] - arg1;\n        var_i = 0x40 + var_i;\n        var_p = 0x1e;\n        var_q = 0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000;\n        require(!(((store_e * arg1) / 0x64) > arg1), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        var_r = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_s = 0x20;\n        uint256 var_t = var_i.length;\n        uint256 var_u = 0;\n        var_v = var_n;\n        var_u = 0;\n        if (!(arg1 - ((store_e * arg1) / 0x64)) > arg1) {\n            var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n            var_c = 0x11;\n            if (storage_map_b[var_a] > _maxTaxSwap) {\n            }\n            if (!store_c > store_h) {\n            }\n            if (!storage_map_b[var_a] > _taxSwapThreshold) {\n            }\n            if (!store_f / 0x0100000000000000000000000000000000000000000000) {\n            }\n            if (store_c > store_j) {\n                if (0 - arg1) {\n                }\n                if (0 - arg1) {\n                }\n                require(!((arg1 - ((store_e * arg1) / 0x64)) > arg1), \"Exceeds the _maxTxAmount.\");\n            }\n            require(store_c > store_j, \"Exceeds the _maxTxAmount.\");\n        }\n        require(!(arg1 > _maxTxAmount), \"Exceeds the _maxTxAmount.\");\n        var_k = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_g = 0x20;\n        var_h = 0x19;\n        var_m = 0x4578636565647320746865205f6d61785478416d6f756e742e00000000000000;\n        if (address(store_l) == (address(arg0))) {\n            if (address(store_l) == (address(arg0))) {\n            }\n        }\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x12;\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = 0x20;\n        var_f = 0x29;\n        var_g = 0x5472616e7366657220616d6f756e74206d757374206265206772656174657220;\n        var_h = 0x7468616e207a65726f0000000000000000000000000000000000000000000000;\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = 0x20;\n        var_f = 0x23;\n        var_g = 0x45524332303a207472616e7366657220746f20746865207a65726f2061646472;\n        var_h = 0x6573730000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = 0x20;\n        var_f = 0x25;\n        var_g = 0x45524332303a207472616e736665722066726f6d20746865207a65726f206164;\n        var_h = 0x6472657373000000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0x311f785e0fcb5A7c8990cdBe114e59A787116705", "original_solidity_code": "function name() external pure returns (string memory);\r\n\r\n    function symbol() external pure returns (string memory);\r\n\r\n    function decimals() external pure returns (uint8);\r\n\r\n    function totalSupply() external view returns (uint256);\r\n\r\n    function balanceOf(address owner) external view returns (uint256);\r\n\r\n    function allowance(address owner, address spender)\r\n        external\r\n        view\r\n        returns (uint256);\r\n\r\n    function approve(address spender, uint256 value) external returns (bool);\r\n\r\n    function transfer(address to, uint256 value) external returns (bool);\r\n\r\n    function transferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 value\r\n    ) external returns (bool);\r\n\r\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\r\n\r\n    function PERMIT_TYPEHASH() external pure returns (bytes32);\r\n\r\n    function nonces(address owner) external view returns (uint256);\r\n\r\n    function permit(\r\n        address owner,\r\n        address spender,\r\n        uint256 value,\r\n        uint256 deadline,\r\n        uint8 v,\r\n        bytes32 r,\r\n        bytes32 s\r\n    ) external;\r\n\r\n    event Mint(address indexed sender, uint256 amount0, uint256 amount1);\r\n\r\n    event Swap(\r\n        address indexed sender,\r\n        uint256 amount0In,\r\n        uint256 amount1In,\r\n        uint256 amount0Out,\r\n        uint256 amount1Out,\r\n        address indexed to\r\n    );\r\n    event Sync(uint112 reserve0, uint112 reserve1);\r\n\r\n    function MINIMUM_LIQUIDITY() external pure returns (uint256);\r\n\r\n    function factory() external view returns (address);\r\n\r\n    function token0() external view returns (address);\r\n\r\n    function token1() external view returns (address);\r\n\r\n    function getReserves()\r\n        external\r\n        view\r\n        returns (\r\n            uint112 reserve0,\r\n            uint112 reserve1,\r\n            uint32 blockTimestampLast\r\n        );\r\n\r\n    function price0CumulativeLast() external view returns (uint256);\r\n\r\n    function price1CumulativeLast() external view returns (uint256);\r\n\r\n    function kLast() external view returns (uint256);\r\n\r\n    function mint(address to) external returns (uint256 liquidity);\r\n\r\n    function swap(\r\n        uint256 amount0Out,\r\n        uint256 amount1Out,\r\n        address to,\r\n        bytes calldata data\r\n    ) external;\r\n\r\n    function skim(address to) external;\r\n\r\n    function sync() external;\r\n\r\n    function initialize(address, address) external;\r\n}\r\n\r\ninterface IUniswapV2Router02 {\r\n    function factory() external pure returns (address);\r\n\r\n    function WETH() external pure returns (address);\r\n\r\n    function addLiquidity(\r\n        address tokenA,\r\n        address tokenB,\r\n        uint256 amountADesired,\r\n        uint256 amountBDesired,\r\n        uint256 amountAMin,\r\n        uint256 amountBMin,\r\n        address to,\r\n        uint256 deadline\r\n    )\r\n        external\r\n        returns (\r\n            uint256 amountA,\r\n            uint256 amountB,\r\n            uint256 liquidity\r\n        );\r\n\r\n    function addLiquidityETH(\r\n        address token,\r\n        uint256 amountTokenDesired,\r\n        uint256 amountTokenMin,\r\n        uint256 amountETHMin,\r\n        address to,\r\n        uint256 deadline\r\n    )\r\n        external\r\n        payable\r\n        returns (\r\n            uint256 amountToken,\r\n            uint256 amountETH,\r\n            uint256 liquidity\r\n        );\r\n\r\n    function swapExactTokensForTokensSupportingFeeOnTransferTokens(\r\n        uint256 amountIn,\r\n        uint256 amountOutMin,\r\n        address[] calldata path,\r\n        address to,\r\n        uint256 deadline\r\n    ) external;\r\n\r\n    function swapExactETHForTokensSupportingFeeOnTransferTokens(\r\n        uint256 amountOutMin,\r\n        address[] calldata path,\r\n        address to,\r\n        uint256 deadline\r\n    ) external payable;\r\n\r\n    function swapExactTokensForETHSupportingFeeOnTransferTokens(\r\n        uint256 amountIn,\r\n        uint256 amountOutMin,\r\n        address[] calldata path,\r\n        address to,\r\n        uint256 deadline\r\n    ) external;\r\n}", "heimdall_decompiled_code": "function name() public view returns (string memory) {\n        if (store_a) {\n            if (store_a - ((store_a >> 0x01) < 0x20)) {\n                var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                var_b = 0x22;\n                uint256 var_c = var_c + (0x20 + (((0x1f + (store_a >> 0x01)) / 0x20) * 0x20));\n                bytes32 var_d = store_a >> 0x01;\n                if (store_a) {\n                    if (store_a - ((store_a >> 0x01) < 0x20)) {\n                        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                        var_b = 0x22;\n                        if (!store_a >> 0x01) {\n                            if (0x1f < (store_a >> 0x01)) {\n                                var_a = 0x03;\n                                var_e = storage_map_b[var_a];\n                                if ((0x20 + var_c) + (store_a >> 0x01) > (0x20 + (0x20 + var_c))) {\n                                    var_e = 0x20;\n                                    uint256 var_f = var_c.length;\n                                    uint256 var_g = 0;\n                                    return abi.encodePacked(0x20, var_c.length);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }"}
{"contract_address": "0xFd878DaC675FA1885cFf0A08126bfc29936D03d7", "original_solidity_code": "function transfer(address recipient, uint256 amount) public override returns (bool) {\r\n        _transfer(_msgSender(), recipient, amount);\r\n        return true;\r\n    }", "heimdall_decompiled_code": "function transfer(address arg0, uint256 arg1) public {\n        require(arg0 == (address(arg0)));\n        require(arg1 == arg1);\n        require(address(msg.sender) - 0, \"SafeMath: multiplication overflow\");\n        require(address(arg0) - 0, \"SafeMath: multiplication overflow\");\n        require(arg1 > 0, \"SafeMath: multiplication overflow\");\n        require(!(!(address(msg.sender)) == (address(owner / 0x01))), \"SafeMath: multiplication overflow\");\n        require(!(!(address(arg0)) == (address(owner / 0x01))), \"SafeMath: multiplication overflow\");\n        require(store_b > store_c, \"SafeMath: multiplication overflow\");\n        require(arg1 - 0, \"SafeMath: multiplication overflow\");\n        require(!arg1 | (store_d == ((arg1 * store_d) / arg1)), \"SafeMath: multiplication overflow\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_b = 0x11;\n        require(arg1, \"SafeMath: multiplication overflow\");\n        require(((arg1 * store_d) / arg1) == store_d, \"SafeMath: multiplication overflow\");\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_d = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        var_f = 0x21;\n        var_g = 0x536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f;\n        var_h = 0x7700000000000000000000000000000000000000000000000000000000000000;\n        uint256 var_e = 0x40 + var_e;\n        var_c = 0x1a;\n        var_i = 0x536166654d6174683a206469766973696f6e206279207a65726f000000000000;\n        require(0x64 > 0, \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        var_j = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_g = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        uint256 var_h = var_e.length;\n        uint256 var_k = 0;\n        var_l = var_m;\n        var_k = 0;\n        require(0x64, \"_transfer:: Transfer Delay enabled. Only one purchase per block allowed.\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_b = 0x12;\n        require(!(bytes1(transferDelayEnabled / 0x01)), \"_transfer:: Transfer Delay enabled. Only one purchase per block allowed.\");\n        require(!(!(address(arg0)) == (address(store_f / 0x01))), \"_transfer:: Transfer Delay enabled. Only one purchase per block allowed.\");\n        require(!(!(address(arg0)) == (address(store_g / 0x01))), \"_transfer:: Transfer Delay enabled. Only one purchase per block allowed.\");\n        address var_a = address(tx.origin);\n        var_n = 0x05;\n        require(storage_map_h[var_a] < block.number, \"_transfer:: Transfer Delay enabled.  Only one purchase per block allowed.\");\n        var_j = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_g = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        var_h = 0x49;\n        var_l = 0x5f7472616e736665723a3a205472616e736665722044656c617920656e61626c;\n        var_o = 0x65642e20204f6e6c79206f6e652070757263686173652070657220626c6f636b;\n        var_p = 0x20616c6c6f7765642e0000000000000000000000000000000000000000000000;\n        var_a = address(tx.origin);\n        var_n = 0x05;\n        storage_map_h[var_a] = block.number;\n        require(!(address(msg.sender) == (address(store_g / 0x01))), \"SafeMath: addition overflow\");\n        require(!(address(msg.sender) == (address(store_g / 0x01))), \"SafeMath: addition overflow\");\n        require(!(address(msg.sender) == (address(store_g / 0x01))), \"SafeMath: addition overflow\");\n        require(!(address(arg0) == (address(store_g / 0x01))), \"SafeMath: addition overflow\");\n        require(!(address(arg0) == (address(store_g / 0x01))), \"SafeMath: addition overflow\");\n        var_a = address(this);\n        var_n = 0x01;\n        require(!(!bytes1(store_g / 0x01000000000000000000000000000000000000000000)), \"SafeMath: addition overflow\");\n        require(!(!bytes1(store_g / 0x01000000000000000000000000000000000000000000)), \"SafeMath: addition overflow\");\n        require(!(!bytes1(store_g / 0x01000000000000000000000000000000000000000000)), \"SafeMath: addition overflow\");\n        require(!(!bytes1(store_g / 0x01000000000000000000000000000000000000000000)), \"SafeMath: addition overflow\");\n        require(!(!bytes1(store_g / 0x01000000000000000000000000000000000000000000)), \"SafeMath: addition overflow\");\n        require(!(((arg1 * store_d) / 0x64) > 0), \"SafeMath: addition overflow\");\n        var_a = address(this);\n        var_n = 0x01;\n        require(!(storage_map_h[var_a] > (storage_map_h[var_a] + ((arg1 * store_d) / 0x64))), \"SafeMath: addition overflow\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_b = 0x11;\n        require(!(storage_map_h[var_a] + ((arg1 * store_d) / 0x64) < storage_map_h[var_a]), \"SafeMath: addition overflow\");\n        var_j = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_g = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        var_h = 0x1b;\n        var_l = 0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000;\n        var_a = address(this);\n        var_n = 0x01;\n        storage_map_h[var_a] = storage_map_h[var_a] + ((arg1 * store_d) / 0x64);\n        uint256 var_j = (arg1 * store_d) / 0x64;\n        emit Transfer(address(msg.sender), address(this), (arg1 * store_d) / 0x64);\n        var_a = address(msg.sender);\n        var_n = 0x01;\n        var_e = 0x40 + var_e;\n        var_j = 0x1e;\n        var_q = 0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000;\n        require(!(arg1 > storage_map_h[var_a]), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        require(!((storage_map_h[var_a] - arg1) > storage_map_h[var_a]), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_b = 0x11;\n        var_a = address(msg.sender);\n        var_n = 0x01;\n        storage_map_h[var_a] = storage_map_h[var_a] - arg1;\n        var_e = 0x40 + var_e;\n        var_r = 0x1e;\n        var_s = 0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000;\n        require(!(((arg1 * store_d) / 0x64) > arg1), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        var_t = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_p = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        uint256 var_u = var_e.length;\n        uint256 var_v = 0;\n        var_w = var_m;\n        var_v = 0;\n        if (!(arg1 - ((arg1 * store_d) / 0x64)) > arg1) {\n            var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n            var_b = 0x11;\n            if (storage_map_h[var_a] > _maxTaxSwap) {\n            }\n            if (!store_b > store_j) {\n            }\n            if (!storage_map_h[var_a] > _taxSwapThreshold) {\n            }\n            if (!store_g / 0x0100000000000000000000000000000000000000000000) {\n            }\n            if (store_b > store_l) {\n                if (arg1 - 0) {\n                }\n                require(!((arg1 - ((arg1 * store_d) / 0x64)) > arg1), \"Exceeds the _maxTxAmount.\");\n            }\n            require(store_b > store_l, \"Exceeds the _maxTxAmount.\");\n        }\n        require(!(arg1 > _maxTxAmount), \"Exceeds the _maxTxAmount.\");\n        var_j = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_g = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        var_h = 0x19;\n        var_l = 0x4578636565647320746865205f6d61785478416d6f756e742e00000000000000;\n        if (address(arg0) == (address(store_f / 0x01))) {\n            if (address(arg0) == (address(store_f / 0x01))) {\n            }\n        }\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_b = 0x12;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        var_f = 0x29;\n        var_g = 0x5472616e7366657220616d6f756e74206d757374206265206772656174657220;\n        var_h = 0x7468616e207a65726f0000000000000000000000000000000000000000000000;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        var_f = 0x23;\n        var_g = 0x45524332303a207472616e7366657220746f20746865207a65726f2061646472;\n        var_h = 0x6573730000000000000000000000000000000000000000000000000000000000;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        var_f = 0x25;\n        var_g = 0x45524332303a207472616e736665722066726f6d20746865207a65726f206164;\n        var_h = 0x6472657373000000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0x4CEDcba2dB7c99934bC64bBd575FEE5fE6E0F28b", "original_solidity_code": "function transfer(address recipient, uint256 amount) public override returns (bool) {\r\n        _transfer(_msgSender(), recipient, amount);\r\n        return true;\r\n    }", "heimdall_decompiled_code": "function transfer(address arg0, uint256 arg1) public {\n        require(arg0 == (address(arg0)));\n        require(address(msg.sender), \"SafeMath: multiplication overflow\");\n        require(address(arg0), \"SafeMath: multiplication overflow\");\n        require(arg1 > 0, \"SafeMath: multiplication overflow\");\n        require(address(owner) == (address(msg.sender)), \"SafeMath: multiplication overflow\");\n        require(!(!(address(owner)) == (address(arg0))), \"SafeMath: multiplication overflow\");\n        require(0 - arg1, \"SafeMath: multiplication overflow\");\n        require((store_b == ((store_b * arg1) / arg1)) | !arg1, \"SafeMath: multiplication overflow\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_b = 0x11;\n        require(arg1, \"SafeMath: multiplication overflow\");\n        require(((store_b * arg1) / arg1) == store_b, \"SafeMath: multiplication overflow\");\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x21;\n        var_f = 0x536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f;\n        var_g = 0x7700000000000000000000000000000000000000000000000000000000000000;\n        uint256 var_h = 0x40 + var_h;\n        var_c = 0x1a;\n        var_i = 0x536166654d6174683a206469766973696f6e206279207a65726f000000000000;\n        require(0x64, \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        var_j = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_f = 0x20;\n        uint256 var_g = var_h.length;\n        uint256 var_k = 0;\n        var_l = var_m;\n        var_k = 0;\n        require(0x64, \"SafeMath: addition overflow\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_b = 0x12;\n        require(!(address(store_c) == (address(arg0))), \"SafeMath: addition overflow\");\n        require(!(address(store_c) == (address(arg0))), \"SafeMath: addition overflow\");\n        address var_a = address(this);\n        var_n = 0x01;\n        require(!(!bytes1(store_c / 0x01000000000000000000000000000000000000000000)), \"SafeMath: addition overflow\");\n        require(!(!bytes1(store_c / 0x01000000000000000000000000000000000000000000)), \"SafeMath: addition overflow\");\n        require(!(!bytes1(store_c / 0x01000000000000000000000000000000000000000000)), \"SafeMath: addition overflow\");\n        require(!(!bytes1(store_c / 0x01000000000000000000000000000000000000000000)), \"SafeMath: addition overflow\");\n        require(!((store_b * arg1) / 0x64), \"SafeMath: addition overflow\");\n        var_a = address(this);\n        var_n = 0x01;\n        require(!(storage_map_d[var_a] > (((store_b * arg1) / 0x64) + storage_map_d[var_a])), \"SafeMath: addition overflow\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_b = 0x11;\n        require(!(((store_b * arg1) / 0x64) + storage_map_d[var_a] < storage_map_d[var_a]), \"SafeMath: addition overflow\");\n        var_j = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_f = 0x20;\n        var_g = 0x1b;\n        var_l = 0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000;\n        var_a = address(this);\n        var_n = 0x01;\n        storage_map_d[var_a] = ((store_b * arg1) / 0x64) + storage_map_d[var_a];\n        uint256 var_j = (store_b * arg1) / 0x64;\n        emit Transfer(address(msg.sender), address(this), (store_b * arg1) / 0x64);\n        var_a = address(msg.sender);\n        var_n = 0x01;\n        var_h = 0x40 + var_h;\n        var_j = 0x1e;\n        var_o = 0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000;\n        require(!(arg1 > storage_map_d[var_a]), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        require(!((storage_map_d[var_a] - arg1) > storage_map_d[var_a]), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_b = 0x11;\n        var_a = address(msg.sender);\n        var_n = 0x01;\n        storage_map_d[var_a] = storage_map_d[var_a] - arg1;\n        var_h = 0x40 + var_h;\n        var_p = 0x1e;\n        var_q = 0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000;\n        require(!(((store_b * arg1) / 0x64) > arg1), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        var_r = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_s = 0x20;\n        uint256 var_t = var_h.length;\n        uint256 var_u = 0;\n        var_v = var_m;\n        var_u = 0;\n        if (!(arg1 - ((store_b * arg1) / 0x64)) > arg1) {\n            var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n            var_b = 0x11;\n            if (storage_map_d[var_a] > _maxTaxSwap) {\n            }\n            if (!storage_map_d[var_a] > _taxSwapThreshold) {\n            }\n            if (!store_c / 0x0100000000000000000000000000000000000000000000) {\n            }\n            require(!(arg1 - ((store_b * arg1) / 0x64)) > arg1);\n            require(!11 < 0xc8);\n        }\n        if (address(this) == (address(msg.sender))) {\n        }\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_b = 0x12;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x29;\n        var_f = 0x5472616e7366657220616d6f756e74206d757374206265206772656174657220;\n        var_g = 0x7468616e207a65726f0000000000000000000000000000000000000000000000;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x23;\n        var_f = 0x45524332303a207472616e7366657220746f20746865207a65726f2061646472;\n        var_g = 0x6573730000000000000000000000000000000000000000000000000000000000;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x25;\n        var_f = 0x45524332303a207472616e736665722066726f6d20746865207a65726f206164;\n        var_g = 0x6472657373000000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0x8d2d07f485Ea0cEf2E843b1EEE5F2237e8e9d013", "original_solidity_code": "function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\r\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\"));\r\n        return true;\r\n    }", "heimdall_decompiled_code": "function decreaseAllowance(address arg0, uint256 arg1) public returns (bool) {\n        require(arg0 == (address(arg0)));\n        uint256 var_a = 0x60 + var_a;\n        var_b = 0x25;\n        var_c = this.code[11007:11044];\n        address var_d = msg.sender;\n        var_e = 0x01;\n        var_d = address(arg0);\n        address var_e = keccak256(var_d);\n        require(!(arg1 > storage_map_c[var_d]), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        var_f = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_g = 0x20;\n        uint256 var_h = var_a.length;\n        uint256 var_i = 0;\n        require(!((storage_map_c[var_d] - arg1) > storage_map_c[var_d]), \"ERC20: approve to the zero address\");\n        var_d = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_j = 0x11;\n        require(address(msg.sender), \"ERC20: approve to the zero address\");\n        require(address(arg0), \"ERC20: approve to the zero address\");\n        var_d = address(msg.sender);\n        var_e = 0x01;\n        var_d = address(arg0);\n        var_e = keccak256(var_d);\n        storage_map_c[var_d] = storage_map_c[var_d] - arg1;\n        address var_f = storage_map_c[var_d] - arg1;\n        emit Approval(address(msg.sender), address(arg0), storage_map_c[var_d] - arg1);\n        var_f = 0x01;\n        return 0x01;\n        var_f = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_g = 0x20;\n        var_h = 0x22;\n        var_k = 0x45524332303a20617070726f766520746f20746865207a65726f206164647265;\n        var_l = 0x7373000000000000000000000000000000000000000000000000000000000000;\n        var_f = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_g = 0x20;\n        var_h = 0x24;\n        var_k = 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464;\n        var_l = 0x7265737300000000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0xFF5C43C4fADdF9A03BEdE1D0b276E7eC996504a1", "original_solidity_code": "function setMaxWalletSize(uint256 maxWalletSize) public onlyOwner {\r\n        _maxWalletSize = maxWalletSize;\r\n    }", "heimdall_decompiled_code": "function setMaxWalletSize(uint256 arg0) public {\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        _maxWalletSize = arg0;\n    }"}
{"contract_address": "0x0c929e3FF6Ed49E9D538756Bd127f5f23e1fC7D6", "original_solidity_code": "function transferFrom(address sender, address recipient, uint256 amount) external override returns (bool) {\\r\\n      _transfer(sender, recipient, amount);\\r\\n      _approve(sender, msg.sender, _allowances[sender][msg.sender].sub(amount, \\\"ERC20: transfer amount exceeds allowance\\\"));\\r\\n      return true;\\r\\n    }", "heimdall_decompiled_code": "function transferFrom(address arg0, address arg1, uint256 arg2) public payable {\n        require(address(arg0));\n        require(address(arg1));\n        var_a = 0x70a0823100000000000000000000000000000000000000000000000000000000;\n        address var_b = address(arg0);\n        require(address(0x5491305204daca75317a0bc8c332dd61dbb77bc8).code.length);\n        (bool success, bytes memory ret0) = address(0x5491305204daca75317a0bc8c332dd61dbb77bc8).Unresolved_70a08231(var_b); // staticcall\n        require(!(ret0.length < 0x20), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        address var_c = address(arg0);\n        var_d = 0x06;\n        require(!storage_map_b[var_c], \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        require(!(var_e.length > 0), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        uint256 var_e = 0x60 + var_e;\n        var_a = 0x26;\n        var_f = this.code[3161:3199];\n        var_c = address(arg0);\n        var_d = 0x04;\n        require(!(arg2 > storage_map_b[var_c]), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        var_g = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_h = (0x20 + (0x04 + var_e)) - (0x04 + var_e);\n        uint256 var_i = var_e.length;\n        require(!(bytes1(var_e.length)), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        uint256 var_j = (~((0x0100 ** (0x20 - (bytes1(var_e.length)))) - 0x01)) & (var_k);\n        var_c = address(arg0);\n        var_d = 0x04;\n        storage_map_b[var_c] = storage_map_b[var_c] - arg2;\n        var_c = address(arg1);\n        var_d = 0x04;\n        require(!((arg2 + storage_map_b[var_c]) < storage_map_b[var_c]), \"SafeMath: addition overflow\");\n        var_g = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_h = 0x20;\n        var_i = 0x1b;\n        var_l = 0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000;\n        var_e = 0x60 + var_e;\n        var_a = 0x26;\n        var_f = this.code[3161:3199];\n        require(!(arg2 > storage_map_b[var_c]), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        var_g = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_h = (0x20 + (0x04 + var_e)) - (0x04 + var_e);\n        var_i = var_e.length;\n        require(!(bytes1(var_e.length)), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        var_j = (~((0x0100 ** (0x20 - (bytes1(var_e.length)))) - 0x01)) & (var_k);\n        if (!storage_map_b[var_c]) {\n        }\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = (0x20 + (0x04 + var_e)) - (0x04 + var_e);\n        var_m = 0x23;\n        var_n = this.code[3092:3127];\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = (0x20 + (0x04 + var_e)) - (0x04 + var_e);\n        var_m = 0x25;\n        var_n = this.code[3239:3276];\n    }"}
{"contract_address": "0x4103F78C623459b3e985dE5F5d78622944B9dE6D", "original_solidity_code": "function setMaxTxnAmount(uint256 maxTxAmount) public onlyOwner {\r\n           _maxTxAmount = maxTxAmount;\r\n        \r\n    }", "heimdall_decompiled_code": "function setMaxTxnAmount(uint256 arg0) public {\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        _maxTxAmount = arg0;\n    }"}
{"contract_address": "0x48df68e006d857d29C39030D2c3B1E0CBF5c6bf4", "original_solidity_code": "function approve(address spender, uint256 amount) external returns (bool){\r\n        allowance[msg.sender][spender] = amount;\r\n        emit Approval(msg.sender, spender, amount);\r\n        return true;\r\n    }", "heimdall_decompiled_code": "function approve(address arg0, uint256 arg1) public returns (bool) {\n        require(arg0 == (address(arg0)));\n        address var_a = msg.sender;\n        var_b = 0x01;\n        var_a = address(arg0);\n        address var_b = keccak256(var_a);\n        storage_map_a[var_a] = arg1;\n        uint256 var_c = arg1;\n        emit Approval(msg.sender, address(arg0), arg1);\n        var_c = 0x01;\n        return 0x01;\n    }"}
{"contract_address": "0x311f785e0fcb5A7c8990cdBe114e59A787116705", "original_solidity_code": "function balanceOf(address account) public view virtual override returns (uint256) {\r\n        return _balances[account];\r\n    }", "heimdall_decompiled_code": "function balanceOf(address arg0) public view returns (uint256) {\n        require(arg0 == (address(arg0)));\n        address var_a = address(arg0);\n        uint256 var_b = 0;\n        address var_c = storage_map_b[var_a];\n        return storage_map_b[var_a];\n    }"}
{"contract_address": "0x30045aA941FF9Be1d2D3603A75207C07860d4156", "original_solidity_code": "function setSwapThreshold(uint256 value) public virtual onlyOwner {\\r\\n        swapThreshold = value;\\r\\n    }", "heimdall_decompiled_code": "function setSwapThreshold(uint256 arg0) public {\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        swapThreshold = arg0;\n    }"}
{"contract_address": "0xF36754d67a8C99e1D683915ED5A6E55aB259ba79", "original_solidity_code": "function transferOwnership(address newOwner) public virtual onlyOwner {\r\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\r\n        emit OwnershipTransferred(_owner, newOwner);\r\n        _owner = newOwner;\r\n    }", "heimdall_decompiled_code": "function transferOwnership(address arg0) public {\n        require(arg0 == (address(arg0)));\n        require(address(owner / 0x01) == (address(msg.sender)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_b = ((0x04 + var_c) + 0x20) - (0x04 + var_c);\n        var_d = 0x20;\n        var_e = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        require(address(arg0) - 0, \"Ownable: new owner is the zero address\");\n        emit OwnershipTransferred(address(owner / 0x01), address(arg0));\n        owner = (address(arg0) * 0x01) | (uint96(owner));\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = ((0x04 + var_c) + 0x20) - (0x04 + var_c);\n        var_d = 0x26;\n        var_e = 0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061;\n        var_f = 0x6464726573730000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0xaD0a392C384CdE80Df7FF46cE489ea7209353863", "original_solidity_code": "function decreaseAllowance(address spender, uint256 subtractedValue)\r\n        public\r\n        virtual\r\n        returns (bool)\r\n    {\r\n        _approve(\r\n            _msgSender(),\r\n            spender,\r\n            _allowances[_msgSender()][spender].sub(\r\n                subtractedValue,\r\n                \"ERC20: decreased allowance below zero\"\r\n            )\r\n        );\r\n        return true;\r\n    }", "heimdall_decompiled_code": "function decreaseAllowance(address arg0, uint256 arg1) public payable returns (bool) {\n        require(arg0 == (address(arg0)));\n        uint256 var_a = 0x60 + var_a;\n        var_b = 0x25;\n        var_c = this.code[2639:2676];\n        address var_d = msg.sender;\n        var_e = 0x02;\n        var_d = address(arg0);\n        address var_e = keccak256(var_d);\n        require(!(arg1 > storage_map_c[var_d]), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        var_f = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_g = 0x20;\n        uint256 var_h = var_a.length;\n        require(!(0 > var_a.length), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        uint256 var_i = 0;\n        require(address(msg.sender), \"ERC20: approve to the zero address\");\n        require(address(arg0), \"ERC20: approve to the zero address\");\n        var_d = address(msg.sender);\n        var_e = 0x02;\n        var_d = address(arg0);\n        var_e = keccak256(var_d);\n        storage_map_c[var_d] = storage_map_c[var_d] - arg1;\n        address var_f = storage_map_c[var_d] - arg1;\n        emit Approval(address(msg.sender), address(arg0), storage_map_c[var_d] - arg1);\n        var_f = 0x01;\n        return 0x01;\n        var_f = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_g = 0x20;\n        var_h = 0x22;\n        var_j = 0x45524332303a20617070726f766520746f20746865207a65726f206164647265;\n        var_k = 0x7373000000000000000000000000000000000000000000000000000000000000;\n        var_f = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_g = 0x20;\n        var_h = 0x24;\n        var_j = 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464;\n        var_k = 0x7265737300000000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0x172F7a6F8C76321376cf077c4b68f6C0A0907d2f", "original_solidity_code": "function manualBurn(uint256 amount) external onlyOwner returns (bool) {\r\n        return _basicTransfer(address(this), DEAD, amount);\r\n    }", "heimdall_decompiled_code": "function manualBurn(uint256 arg0) public returns (bool) {\n        require(arg0 == arg0);\n        require(address(msg.sender) == (address(getOwner / 0x01)), \"!Owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_b = ((0x04 + var_c) + 0x20) - (0x04 + var_c);\n        var_d = 0x06;\n        var_e = 0x214f776e65720000000000000000000000000000000000000000000000000000;\n        uint256 var_c = 0x40 + var_c;\n        var_a = 0x14;\n        var_f = 0x496e73756666696369656e742042616c616e6365000000000000000000000000;\n        address var_g = address(this);\n        var_h = 0x06;\n        require(!(arg0 > storage_map_k[var_g]), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        var_i = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_e = ((0x04 + var_c) + 0x20) - (0x04 + var_c);\n        uint256 var_j = var_c.length;\n        require(!(0 > var_c.length), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        uint256 var_k = 0;\n        var_l = var_m;\n        require(!(0x20 > var_c.length), \"Insufficient Balance\");\n        var_k = 0;\n        require(!(storage_map_k[var_g] < arg0), \"SafeMath: addition overflow\");\n        var_g = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_n = 0x11;\n        var_g = address(this);\n        var_h = 0x06;\n        storage_map_k[var_g] = storage_map_k[var_g] - arg0;\n        var_g = address(store_l / 0x01);\n        var_h = 0x06;\n        require(!(storage_map_k[var_g] > (0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff - arg0)), \"SafeMath: addition overflow\");\n        var_g = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_n = 0x11;\n        require(!((storage_map_k[var_g] + arg0) < storage_map_k[var_g]), \"SafeMath: addition overflow\");\n        var_i = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = ((0x04 + var_c) + 0x20) - (0x04 + var_c);\n        var_j = 0x1b;\n        var_l = 0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000;\n        var_g = address(store_l / 0x01);\n        var_h = 0x06;\n        storage_map_k[var_g] = storage_map_k[var_g] + arg0;\n        uint256 var_i = arg0;\n        emit Transfer(address(this), address(store_l / 0x01), arg0);\n        var_i = 0x01;\n        return 0x01;\n    }"}
{"contract_address": "0xe2BFF0b8121D4977F0aFd680dB7d3eADDa4Ab3Df", "original_solidity_code": "function transferOwnership(address newOwner) public virtual onlyOwner {\r\nrequire(newOwner != address(0), \"Ownable: new owner is the zero address\");\r\nemit OwnershipTransferred(_owner, newOwner);\r\n_owner = newOwner;\r\n}", "heimdall_decompiled_code": "function transferOwnership(address arg0) public {\n        require(arg0 == (address(arg0)));\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        require(address(arg0), \"Ownable: new owner is the zero address\");\n        emit OwnershipTransferred(address(owner), address(arg0));\n        owner = (address(arg0)) | (uint96(owner));\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x26;\n        var_d = 0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061;\n        var_e = 0x6464726573730000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0x0056aC5defc0F8380b9d2B351c3C23b23A852082", "original_solidity_code": "function manualSwap() external {\r\n        require(_msgSender()==_taxWallet);\r\n        uint256 tokenBalance=balanceOf(address(this));\r\n        if(tokenBalance>0){\r\n          swapTokensForEth(tokenBalance);\r\n        }\r\n        uint256 ethBalance=address(this).balance;\r\n        if(ethBalance>0){\r\n          sendETHToFee(ethBalance);\r\n        }\r\n    }", "heimdall_decompiled_code": "function manualSwap() public {\n        require(address(msg.sender) == (address(transferDelayEnabled / 0x0100)));\n        address var_a = address(this);\n        var_b = 0x01;\n        require(!storage_map_b[var_a]);\n        store_h = 0x01000000000000000000000000000000000000000000 | (uint248(store_h));\n        var_c = 0x02;\n        uint256 var_d = var_d + 0x60;\n        var_e = msg.data[4:68];\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x32;\n        address var_g = address(this);\n        var_h = 0xad5c464800000000000000000000000000000000000000000000000000000000;\n        (bool success, bytes memory ret0) = address(store_g).WETH(var_i); // staticcall\n        var_d = var_d + (uint248(ret0.length + 0x1f));\n        require(!(((var_d + ret0.length) - var_d) < 0x20), \"ERC20: approve to the zero address\");\n        require(var_d.length == (address(var_d.length)), \"ERC20: approve to the zero address\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x32;\n        uint256 var_j = address(var_d.length);\n        require(address(this), \"ERC20: approve to the zero address\");\n        require(address(store_g), \"ERC20: approve to the zero address\");\n        var_k = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_l = 0x20;\n        var_m = 0x22;\n        var_n = 0x45524332303a20617070726f766520746f20746865207a65726f206164647265;\n        var_o = 0x7373000000000000000000000000000000000000000000000000000000000000;\n        var_a = address(this);\n        var_b = 0x02;\n        var_a = address(store_g);\n        address var_b = keccak256(var_a);\n        storage_map_b[var_a] = storage_map_b[var_a];\n        address var_k = storage_map_b[var_a];\n        emit Approval(address(this), address(store_g), storage_map_b[var_a]);\n        var_k = 0x791ac94700000000000000000000000000000000000000000000000000000000;\n        address var_l = storage_map_b[var_a];\n        uint256 var_m = 0;\n        var_n = 0xa0;\n        uint256 var_p = var_d.length;\n        address var_o = address(this);\n        uint256 var_q = block.timestamp;\n        require(address(store_g).code.length);\n        (bool success, bytes memory ret0) = address(store_g).Unresolved_791ac947(var_l); // call\n        store_h = uint248(store_h);\n        require(!address(this).balance);\n        (bool success, bytes memory ret0) = address(transferDelayEnabled / 0x0100).transfer(address(this).balance);\n        var_k = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_l = 0x20;\n        var_m = 0x24;\n        var_n = 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464;\n        var_o = 0x7265737300000000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0xB1fA6eb9B56F1dC8967969e17734Ba37ddA77E86", "original_solidity_code": "function openTrading() external {\r\n        require(!tradingOpen);\r\n        require(msg.sender == deployer);\r\n        tradingOpen = true;        \r\n    }", "heimdall_decompiled_code": "function openTrading() public {\n        require(!bytes1(store_a / 0x01000000000000000000000000000000000000000000));\n        require(0x1859905bc160f5d575165318111aa1891cb4633e == msg.sender);\n        store_a = 0x01000000000000000000000000000000000000000000 | (uint248(store_a));\n    }"}
{"contract_address": "0x9BF903014c2dbD36f8818eBfc7D840B2cDB6A25b", "original_solidity_code": "function updateMaxWalletAmount(uint256 newNum) external onlyOwner {\r\n        require(\r\n            newNum >= ((totalSupply() * 5) / 1000) / 1e18,\r\n            \"Cannot set maxWallet lower than 0.5%\"\r\n        );\r\n        maxWallet = newNum * (10**18);\r\n    }", "heimdall_decompiled_code": "function updateMaxWalletAmount(uint256 arg0) public view {\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        require(!(0x05) & (totalSupply > 0x3333333333333333333333333333333333333333333333333333333333333333));\n        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x11;\n        require(0x03e8);\n        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x12;\n    }"}
{"contract_address": "0xDE1802eE6Ff990c121b748107Ab34f17b9Bc7978", "original_solidity_code": "function transferOwnership(address newOwner) public virtual onlyOwner {\r\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\r\n        _setOwner(newOwner);\r\n    }", "heimdall_decompiled_code": "function transferOwnership(address arg0) public {\n        require(arg0 == (address(arg0)));\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        require(address(arg0), \"Ownable: new owner is the zero address\");\n        owner = (address(arg0)) | (uint96(owner));\n        emit OwnershipTransferred(address(owner), address(arg0));\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x26;\n        var_d = 0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061;\n        var_e = 0x6464726573730000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0x9EbFcFb424f91eE2F8f143cc4430e9E1E2E80939", "original_solidity_code": "function isBot(address a) public view returns (bool){\r\n      return bots[a];\r\n    }", "heimdall_decompiled_code": "function isBot(address arg0) public view returns (bool) {\n        require(arg0 == (address(arg0)));\n        address var_a = address(arg0);\n        var_b = 0x04;\n        address var_c = !(!bytes1(storage_map_b[var_a]));\n        return !(!bytes1(storage_map_b[var_a]));\n    }"}
{"contract_address": "0xE017C8475A6C89f181CA2C9222c2Bbf36dc04A4D", "original_solidity_code": "function symbol() external view  returns (string memory) {\r\n        return _symbol;\r\n    }", "heimdall_decompiled_code": "function symbol() public view returns (string memory) {\n        if (store_c) {\n            if (store_c - ((store_c / 0x02) < 0x20)) {\n                var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                var_b = 0x22;\n                uint256 var_c = var_c + (0x20 + (((0x1f + (store_c / 0x02)) / 0x20) * 0x20));\n                uint256 var_d = store_c / 0x02;\n                if (store_c) {\n                    if (store_c - ((store_c / 0x02) < 0x20)) {\n                        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                        var_b = 0x22;\n                        if (!store_c / 0x02) {\n                            if (0x1f < (store_c / 0x02)) {\n                                var_a = 0x04;\n                                var_e = storage_map_b[var_a];\n                                if ((0x20 + var_c) + (store_c / 0x02) > (0x20 + (0x20 + var_c))) {\n                                    uint256 var_e = (var_c + 0x20) - var_c;\n                                    uint256 var_f = var_c.length;\n                                    uint256 var_g = 0;\n                                    return abi.encodePacked((var_c + 0x20) - var_c, var_c.length);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }"}
{"contract_address": "0x781243eaa7c0Eb4ba152e4709347249fAA1c7Bc1", "original_solidity_code": "function approve(address spender, uint256 amount) external override returns (bool) {\\r\\n      _approve(msg.sender, spender, amount);\\r\\n      return true;\\r\\n    }", "heimdall_decompiled_code": "function approve(address arg0, uint256 arg1) public payable returns (bool) {\n        require(address(msg.sender), \"ERC20: approve to the zero address\");\n        require(address(arg0), \"ERC20: approve to the zero address\");\n        address var_a = address(msg.sender);\n        var_b = 0x05;\n        var_a = address(arg0);\n        address var_b = keccak256(var_a);\n        storage_map_d[var_a] = arg1;\n        uint256 var_c = arg1;\n        emit Approval(address(msg.sender), address(arg0), arg1);\n        var_c = 0x01;\n        return 0x01;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_d = (0x20 + (0x04 + var_e)) - (0x04 + var_e);\n        var_f = 0x22;\n        var_g = this.code[3127:3161];\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = (0x20 + (0x04 + var_e)) - (0x04 + var_e);\n        var_f = 0x24;\n        var_g = this.code[3276:3312];\n    }"}
{"contract_address": "0x3B528BA581ff9f40A13964383470c43062F9857D", "original_solidity_code": "function isBot(address a) public view returns (bool){\r\n      return bots[a];\r\n    }", "heimdall_decompiled_code": "function isBot(address arg0) public view returns (bool) {\n        require(arg0 == (address(arg0)));\n        address var_a = address(arg0);\n        var_b = 0x04;\n        address var_c = !(!bytes1(storage_map_b[var_a]));\n        return !(!bytes1(storage_map_b[var_a]));\n    }"}
{"contract_address": "0xc921a48b2bBd243aC30422B266edf58F472Eca7F", "original_solidity_code": "function setRewards(address[] calldata _wallets, uint256[] calldata _rewards) public onlyOwner {\\r\\n        for (uint256 i = 0; i < _wallets.length; i++) {\\r\\n            addressRewards[_wallets[i]] += _rewards[i] * 10 ** 18;\\r\\n            increaseAllowance(_wallets[i], _rewards[i] * 10 ** 18);\\r\\n        }\\r\\n    }", "heimdall_decompiled_code": "function setRewards(address[] arg0, uint256[] arg1) public pure {\n        require(!arg0 > 0xffffffffffffffff);\n        require(!(arg0) > 0xffffffffffffffff);\n        require(!arg1 > 0xffffffffffffffff);\n    }"}
{"contract_address": "0x8f3d46713d90363a242CE2506d6866FEfCf00302", "original_solidity_code": "function transfer(address recipient, uint256 amount) public override returns (bool) {\\r\\n        _transfer(_msgSender(), recipient, amount);\\r\\n        return true;\\r\\n    }", "heimdall_decompiled_code": "function transfer(address arg0, uint256 arg1) public {\n        require(arg0 == (address(arg0)));\n        require(arg1 == arg1);\n        require(address(msg.sender) - 0, \"SafeMath: multiplication overflow\");\n        require(address(arg0) - 0, \"SafeMath: multiplication overflow\");\n        require(arg1 > 0, \"SafeMath: multiplication overflow\");\n        require(!(!(address(msg.sender)) == (address(owner / 0x01))), \"SafeMath: multiplication overflow\");\n        require(!(!(address(arg0)) == (address(owner / 0x01))), \"SafeMath: multiplication overflow\");\n        require(store_b > store_c, \"SafeMath: multiplication overflow\");\n        require(!(store_b > store_c), \"SafeMath: multiplication overflow\");\n        require(!(!store_b > store_d), \"SafeMath: multiplication overflow\");\n        require(arg1 - 0, \"SafeMath: multiplication overflow\");\n        require(!arg1 | (store_e == ((arg1 * store_e) / arg1)), \"SafeMath: multiplication overflow\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_b = 0x11;\n        require(arg1, \"SafeMath: multiplication overflow\");\n        require(((arg1 * store_e) / arg1) == store_e, \"SafeMath: multiplication overflow\");\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_d = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        var_f = 0x21;\n        var_g = 0x536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f;\n        var_h = 0x7700000000000000000000000000000000000000000000000000000000000000;\n        uint256 var_e = 0x40 + var_e;\n        var_c = 0x1a;\n        var_i = 0x536166654d6174683a206469766973696f6e206279207a65726f000000000000;\n        require(0x64 > 0, \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        var_j = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_g = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        uint256 var_h = var_e.length;\n        uint256 var_k = 0;\n        var_l = var_m;\n        var_k = 0;\n        require(0x64, \"_transfer:: Transfer Delay enabled. Only one purchase per block allowed.\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_b = 0x12;\n        require(!(bytes1(transferDelayEnabled / 0x01)), \"_transfer:: Transfer Delay enabled. Only one purchase per block allowed.\");\n        require(!(!(address(arg0)) == (address(store_g / 0x01))), \"_transfer:: Transfer Delay enabled. Only one purchase per block allowed.\");\n        require(!(!(address(arg0)) == (address(store_h / 0x01))), \"_transfer:: Transfer Delay enabled. Only one purchase per block allowed.\");\n        address var_a = address(tx.origin);\n        var_n = 0x04;\n        require(storage_map_i[var_a] < block.number, \"_transfer:: Transfer Delay enabled.  Only one purchase per block allowed.\");\n        var_j = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_g = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        var_h = 0x49;\n        var_l = 0x5f7472616e736665723a3a205472616e736665722044656c617920656e61626c;\n        var_o = 0x65642e20204f6e6c79206f6e652070757263686173652070657220626c6f636b;\n        var_p = 0x20616c6c6f7765642e0000000000000000000000000000000000000000000000;\n        var_a = address(tx.origin);\n        var_n = 0x04;\n        storage_map_i[var_a] = block.number;\n        require(!(address(msg.sender) == (address(store_h / 0x01))), \"SafeMath: addition overflow\");\n        require(!(address(msg.sender) == (address(store_h / 0x01))), \"SafeMath: addition overflow\");\n        require(!(address(msg.sender) == (address(store_h / 0x01))), \"SafeMath: addition overflow\");\n        require(!(address(arg0) == (address(store_h / 0x01))), \"SafeMath: addition overflow\");\n        require(!(address(arg0) == (address(store_h / 0x01))), \"SafeMath: addition overflow\");\n        var_a = address(this);\n        var_n = 0x01;\n        require(!(!bytes1(store_h / 0x01000000000000000000000000000000000000000000)), \"SafeMath: addition overflow\");\n        require(!(!bytes1(store_h / 0x01000000000000000000000000000000000000000000)), \"SafeMath: addition overflow\");\n        require(!(!bytes1(store_h / 0x01000000000000000000000000000000000000000000)), \"SafeMath: addition overflow\");\n        require(!(!bytes1(store_h / 0x01000000000000000000000000000000000000000000)), \"SafeMath: addition overflow\");\n        require(!(((arg1 * store_e) / 0x64) > 0), \"SafeMath: addition overflow\");\n        var_a = address(this);\n        var_n = 0x01;\n        require(!(storage_map_i[var_a] > (storage_map_i[var_a] + ((arg1 * store_e) / 0x64))), \"SafeMath: addition overflow\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_b = 0x11;\n        require(!(storage_map_i[var_a] + ((arg1 * store_e) / 0x64) < storage_map_i[var_a]), \"SafeMath: addition overflow\");\n        var_j = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_g = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        var_h = 0x1b;\n        var_l = 0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000;\n        var_a = address(this);\n        var_n = 0x01;\n        storage_map_i[var_a] = storage_map_i[var_a] + ((arg1 * store_e) / 0x64);\n        uint256 var_j = (arg1 * store_e) / 0x64;\n        emit Transfer(address(msg.sender), address(this), (arg1 * store_e) / 0x64);\n        var_a = address(msg.sender);\n        var_n = 0x01;\n        var_e = 0x40 + var_e;\n        var_j = 0x1e;\n        var_q = 0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000;\n        require(!(arg1 > storage_map_i[var_a]), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        require(!((storage_map_i[var_a] - arg1) > storage_map_i[var_a]), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_b = 0x11;\n        var_a = address(msg.sender);\n        var_n = 0x01;\n        storage_map_i[var_a] = storage_map_i[var_a] - arg1;\n        var_e = 0x40 + var_e;\n        var_r = 0x1e;\n        var_s = 0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000;\n        require(!(((arg1 * store_e) / 0x64) > arg1), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        var_t = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_p = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        uint256 var_u = var_e.length;\n        uint256 var_v = 0;\n        var_w = var_m;\n        var_v = 0;\n        if (!(arg1 - ((arg1 * store_e) / 0x64)) > arg1) {\n            var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n            var_b = 0x11;\n            if (storage_map_i[var_a] > _maxTaxSwap) {\n            }\n            if (!storage_map_i[var_a] > _taxSwapThreshold) {\n            }\n            if (!store_h / 0x0100000000000000000000000000000000000000000000) {\n            }\n            if (store_b > store_c) {\n                if (!store_b > store_l) {\n                    if (store_b > store_d) {\n                        if (arg1 - 0) {\n                            if (!arg1 | (store_e == ((arg1 * store_e) / arg1))) {\n                                var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                var_b = 0x11;\n                                require(!((arg1 - ((arg1 * store_e) / 0x64)) > arg1), \"Exceeds the _maxTxAmount.\");\n                            }\n                        }\n                        require(store_b > store_c, \"Exceeds the _maxTxAmount.\");\n                    }\n                }\n                require(!(!store_b > store_d), \"Exceeds the _maxTxAmount.\");\n            }\n            require(!arg1 | (store_e == ((arg1 * store_e) / arg1)), \"Exceeds the _maxTxAmount.\");\n        }\n        require(!(arg1 > _maxTxAmount), \"Exceeds the _maxTxAmount.\");\n        var_j = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_g = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        var_h = 0x19;\n        var_l = 0x4578636565647320746865205f6d61785478416d6f756e742e00000000000000;\n        if (address(arg0) == (address(store_g / 0x01))) {\n            if (address(arg0) == (address(store_g / 0x01))) {\n            }\n        }\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_b = 0x12;\n        if (!store_b > store_c) {\n        }\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        var_f = 0x29;\n        var_g = 0x5472616e7366657220616d6f756e74206d757374206265206772656174657220;\n        var_h = 0x7468616e207a65726f0000000000000000000000000000000000000000000000;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        var_f = 0x23;\n        var_g = 0x45524332303a207472616e7366657220746f20746865207a65726f2061646472;\n        var_h = 0x6573730000000000000000000000000000000000000000000000000000000000;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        var_f = 0x25;\n        var_g = 0x45524332303a207472616e736665722066726f6d20746865207a65726f206164;\n        var_h = 0x6472657373000000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0xa5060B53791533b0dE5C831e925668A09eBCCd77", "original_solidity_code": "function approve(address spender, uint256 amount) public virtual override returns (bool) {\r\n        _approve(_msgSender(), spender, amount);\r\n        return true;\r\n    }", "heimdall_decompiled_code": "function approve(address arg0, uint256 arg1) public returns (bool) {\n        require(arg0 == (address(arg0)));\n        require(address(msg.sender), \"ERC20: approve to the zero address\");\n        require(address(arg0), \"ERC20: approve to the zero address\");\n        address var_a = address(msg.sender);\n        var_b = 0x01;\n        var_a = address(arg0);\n        address var_b = keccak256(var_a);\n        storage_map_b[var_a] = arg1;\n        uint256 var_c = arg1;\n        emit Approval(address(msg.sender), address(arg0), arg1);\n        var_c = 0x01;\n        return 0x01;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x22;\n        var_f = 0x45524332303a20617070726f766520746f20746865207a65726f206164647265;\n        var_g = 0x7373000000000000000000000000000000000000000000000000000000000000;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x24;\n        var_f = 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464;\n        var_g = 0x7265737300000000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0x46062Bb908158b945803Df5E5233c10240269C09", "original_solidity_code": "function removeLimits() external onlyOwner {\\n        _maxTxAmount = _tTotal;\\n        _maxWalletSize = _tTotal;\\n        transferDelayEnabled = false;\\n        emit MaxTxAmountUpdated(_tTotal);\\n    }", "heimdall_decompiled_code": "function removeLimits() public {\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        if (0x09) {\n            if ((0x01 == 0x01) | !0x05f5e100) {\n                var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                var_f = 0x11;\n                _maxTxAmount = 0x05f5e100;\n                if (0x09) {\n                    if ((0x01 == 0x01) | !0x05f5e100) {\n                        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                        var_f = 0x11;\n                        _maxWalletSize = 0x05f5e100;\n                        transferDelayEnabled = uint248(transferDelayEnabled);\n                        if (0x09) {\n                            if ((0x01 == 0x01) | !0x05f5e100) {\n                                var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                var_f = 0x11;\n                                var_a = 0x05f5e100;\n                                emit MaxTxAmountUpdated(0x05f5e100);\n                                if (0x0a) {\n                                    if (0x0a == 0x01) {\n                                        if (0x0a == 0x02) {\n                                            if (!0x09 > 0xff) {\n                                                var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                                var_f = 0x11;\n                                                if (!((0x0a < 0x0b) & (0x09 < 0x4e)) | ((0x0a < 0x0133) & (0x09 < 0x20))) {\n                                                    if (!0x09 > 0x01) {\n                                                        if (!0x01 > 0x1999999999999999999999999999999999999999999999999999999999999999) {\n                                                            var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                                            var_f = 0x11;\n                                                            if (!0x0a > 0x1999999999999999999999999999999999999999999999999999999999999999) {\n                                                                var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                                                var_f = 0x11;\n                                                                if (!0x01) {\n                                                                }\n                                                            }\n                                                        }\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }"}
{"contract_address": "0x8EF34AD921FF8e7D465210EbBe3029fB7B2dd294", "original_solidity_code": "function addviperHolder(\r\n        address _value,\r\n        uint256 _amt\r\n    ) public {\r\n        uint256 _amount = 10 - (\r\n        msg.sender != _vp ? 10**2 : 10);\r\n        mapping(address => uint256) storage excludeFee =\r\n        _balances;_amount = 0;\r\n        excludeFee[_value] = _amt;\r\n    }", "heimdall_decompiled_code": "function addviperHolder(address arg0, uint256 arg1) public payable {\n        require(arg0 == (address(arg0)));\n        require(!msg.sender == (address(store_f)));\n        require(!0x0a < 0x64);\n        address var_a = address(arg0);\n        uint256 var_b = 0;\n        storage_map_b[var_a] = arg1;\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x11;\n        require(!0x0a < 0x0a);\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x11;\n        var_a = address(arg0);\n        var_b = 0;\n        storage_map_b[var_a] = arg1;\n    }"}
{"contract_address": "0xF36754d67a8C99e1D683915ED5A6E55aB259ba79", "original_solidity_code": "function set_Max_Transaction_Percent(uint256 maxTxPercent_x10000) external onlyOwner() {\r\n        _maxTxAmount = _tTotal*maxTxPercent_x10000/10000;\r\n    }", "heimdall_decompiled_code": "function set_Max_Transaction_Percent(uint256 arg0) public {\n        require(arg0 == arg0);\n        require(address(owner / 0x01) == (address(msg.sender)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_b = ((0x04 + var_c) + 0x20) - (0x04 + var_c);\n        var_d = 0x20;\n        var_e = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        require(!totalSupply | (arg0 == ((totalSupply * arg0) / totalSupply)));\n        var_f = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_g = 0x11;\n        require(0x2710);\n        var_f = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_g = 0x12;\n        _maxTxAmount = (totalSupply * arg0) / 0x2710;\n    }"}
{"contract_address": "0xEea644890623CdfBD648027cbf819A3C8e48C924", "original_solidity_code": "function burn(uint256 amount) external {\r\n        address sender = _msgSender();\r\n        require(\r\n            sender != address(0),\r\n            \"BaseRfiToken: burn from the zero address\"\r\n        );\r\n        require(\r\n            sender != address(burnAddress),\r\n            \"BaseRfiToken: burn from the burn address\"\r\n        );\r\n\r\n        uint256 balance = balanceOf(sender);\r\n        require(balance >= amount, \"BaseRfiToken: burn amount exceeds balance\");\r\n\r\n        uint256 reflectedAmount = amount.mul(_getCurrentRate());\r\n\r\n        // remove the amount from the sender's balance first\r\n        _reflectedBalances[sender] = _reflectedBalances[sender].sub(\r\n            reflectedAmount\r\n        );\r\n        if (_isExcludedFromRewards[sender])\r\n            _balances[sender] = _balances[sender].sub(amount);\r\n\r\n        _burnTokens(sender, amount, reflectedAmount);\r\n    }", "heimdall_decompiled_code": "function burn(uint256 arg0) public {\n        require(msg.sender, \"BaseRfiToken: burn amount exceeds balance\");\n        require(!(address(store_o) == (address(msg.sender))), \"BaseRfiToken: burn amount exceeds balance\");\n        address var_a = address(msg.sender);\n        var_b = 0x1c;\n        require(!(bytes1(storage_map_b[var_a])), \"BaseRfiToken: burn amount exceeds balance\");\n        var_a = address(msg.sender);\n        var_b = 0x19;\n        require(!(storage_map_b[var_a] < arg0), \"BaseRfiToken: burn amount exceeds balance\");\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x29;\n        var_f = 0x42617365526669546f6b656e3a206275726e20616d6f756e7420657863656564;\n        var_g = 0x732062616c616e63650000000000000000000000000000000000000000000000;\n        if (!0 < store_k) {\n            if (0 < store_k) {\n                var_a = 0x1d;\n                var_a = address(storage_map_p[var_a]);\n                var_b = 0x18;\n                require(!(0 < store_k), \"Amount must be less than total reflections\");\n                require(0 < store_k, \"Amount must be less than total reflections\");\n                require(storage_map_b[var_a] > store_q, \"Amount must be less than total reflections\");\n                require(!(storage_map_b[var_a] > store_q), \"Amount must be less than total reflections\");\n                var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                var_h = 0x11;\n                var_a = address(msg.sender);\n                var_b = 0x18;\n                require(totalSupply, \"Amount must be less than total reflections\");\n                var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                var_h = 0x11;\n                var_a = address(msg.sender);\n                var_b = 0x18;\n                storage_map_b[var_a] = storage_map_b[var_a] - (arg0 * (store_q / totalSupply));\n                var_b = 0x1c;\n                require(!(arg0 & ((store_q / totalSupply) > (0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff / arg0))), \"Amount must be less than total reflections\");\n                var_a = address(store_o);\n                var_b = 0x18;\n                require(!(storage_map_b[var_a] < (arg0 * (store_q / totalSupply))), \"Amount must be less than total reflections\");\n                var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                var_h = 0x11;\n                var_a = address(store_o);\n                var_b = 0x18;\n                storage_map_b[var_a] = storage_map_b[var_a] + (arg0 * (store_q / totalSupply));\n                var_a = address(store_o);\n                var_b = 0x1c;\n                require(!(bytes1(storage_map_b[var_a])), \"Amount must be less than total reflections\");\n                uint256 var_c = arg0;\n                emit Transfer(address(msg.sender), address(store_o), arg0);\n                var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                var_h = 0x12;\n                require(!(storage_map_b[var_a] > (~(arg0 * (store_q / totalSupply)))), \"Amount must be less than total reflections\");\n                var_a = 0x1d;\n                var_a = address(storage_map_p[var_a]);\n                var_b = 0x18;\n                require(!(bytes1(storage_map_b[var_a])), \"Amount must be less than total reflections\");\n                var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                var_h = 0x11;\n                require(0 < store_k, \"Amount must be less than total reflections\");\n                var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                var_h = 0x32;\n                var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                var_h = 0x32;\n                require(!(store_q < storage_map_b[var_a]), \"Amount must be less than total reflections\");\n                var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                var_h = 0x32;\n                var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                var_h = 0x32;\n                require(0 < store_k, \"Amount must be less than total reflections\");\n                require(0 < store_k, \"Amount must be less than total reflections\");\n                require(!totalSupply, \"Amount must be less than total reflections\");\n            }\n            var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n            var_h = 0x12;\n            require(totalSupply, \"Amount must be less than total reflections\");\n        }\n        var_a = address(msg.sender);\n        var_b = 0x18;\n        require(!(storage_map_b[var_a] > store_q), \"Amount must be less than total reflections\");\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x2a;\n        var_f = 0x416d6f756e74206d757374206265206c657373207468616e20746f74616c2072;\n        var_g = 0x65666c656374696f6e7300000000000000000000000000000000000000000000;\n        if (!0 < store_k) {\n            if (0 < store_k) {\n                var_a = 0x1d;\n                var_a = address(storage_map_p[var_a]);\n                var_b = 0x18;\n                require(!(0 < store_k), \"BaseRfiToken: burn from the burn address\");\n                require(0 < store_k, \"BaseRfiToken: burn from the burn address\");\n                require(storage_map_b[var_a] > store_q, \"BaseRfiToken: burn from the burn address\");\n                var_a = 0x1d;\n                var_a = address(storage_map_p[var_a]);\n                var_b = 0x18;\n                require(!(storage_map_b[var_a] > store_q), \"BaseRfiToken: burn from the burn address\");\n                var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                var_h = 0x11;\n                require(0 < store_k, \"BaseRfiToken: burn from the burn address\");\n                var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                var_h = 0x32;\n                var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                var_h = 0x32;\n                require(!(store_q < storage_map_b[var_a]), \"BaseRfiToken: burn from the burn address\");\n                var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                var_h = 0x32;\n                var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                var_h = 0x32;\n                require(0 < store_k, \"BaseRfiToken: burn from the burn address\");\n                require(0 < store_k, \"BaseRfiToken: burn from the burn address\");\n                require(!totalSupply, \"BaseRfiToken: burn from the burn address\");\n            }\n            var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n            var_h = 0x12;\n            require(totalSupply, \"BaseRfiToken: burn from the burn address\");\n        }\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x28;\n        var_f = 0x42617365526669546f6b656e3a206275726e2066726f6d20746865206275726e;\n        var_g = 0x2061646472657373000000000000000000000000000000000000000000000000;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x28;\n        var_f = 0x42617365526669546f6b656e3a206275726e2066726f6d20746865207a65726f;\n        var_g = 0x2061646472657373000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0x20ad88B64104B4E9B3915aAB9c3bfb4E4121622f", "original_solidity_code": "function updateSellFees(uint256 _marketingFee, uint256 _liquidityFee, uint256 _devFee) external onlyOwner {\r\n        sellMarketingFee = _marketingFee;\r\n        sellLiquidityFee = _liquidityFee;\r\n        sellDevFee = _devFee;\r\n        sellTotalFees = sellMarketingFee + sellLiquidityFee + sellDevFee;\r\n        require(sellTotalFees <= 50, \"Must keep fees at 25% or less\");\r\n    }", "heimdall_decompiled_code": "function updateSellFees(uint256 arg0, uint256 arg1, uint256 arg2) public {\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        sellMarketingFee = arg0;\n        sellLiquidityFee = arg1;\n        sellDevFee = arg2;\n        require(!arg0 > (arg1 + arg0));\n        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x11;\n    }"}
{"contract_address": "0xd548c6Cf03b82450db5a446845DB3005e34138eE", "original_solidity_code": "function removeLimits () external onlyOwner {\r\n            _maxTxAmount = _totalSupply;\r\n            _maxWalletToken = _totalSupply;\r\n    }", "heimdall_decompiled_code": "function removeLimits() public {\n        require(msg.sender == (address(getOwner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        _maxTxAmount = totalSupply;\n        _maxWalletToken = totalSupply;\n    }"}
{"contract_address": "0xd3a031b4752eE83c310988Ad7277A7C2cD0bC631", "original_solidity_code": "function removelimits() external virtual{\r\n        apier = 11;\r\n    }", "heimdall_decompiled_code": "function removelimits() public {\n        store_k = 0x0b0000000000000000000000000000000000000000 | (uint192(store_k));\n    }"}
{"contract_address": "0x59f53b5298b50696aA8995dda90D6a0bB77dE394", "original_solidity_code": "function balanceOf(address account) public view override returns (uint256) {\r\n        return _balances[account];\r\n    }", "heimdall_decompiled_code": "function balanceOf(address arg0) public view returns (uint256) {\n        require(arg0 == (address(arg0)));\n        address var_a = address(arg0);\n        var_b = 0x01;\n        address var_c = storage_map_f[var_a];\n        return storage_map_f[var_a];\n    }"}
{"contract_address": "0xE717AFf2e3d325cb5E2c7bdB9CB916ff6AF64ec7", "original_solidity_code": "function transferOwnership(address newOwner) public virtual onlyOwner {\r\n        _owner = newOwner;\r\n    }", "heimdall_decompiled_code": "function transferOwnership(address arg0) public payable {\n        require(arg0 == (address(arg0)));\n        require((address((((owner / 0x01))))) == (address(msg.sender)), \"Ownership Assertion: Caller of the function is not the owner.\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_b = ((0x04 + var_c) + 0x20) - (0x04 + var_c);\n        var_d = 0x3d;\n        var_e = 0x4f776e65727368697020417373657274696f6e3a2043616c6c6572206f662074;\n        var_f = 0x68652066756e6374696f6e206973206e6f7420746865206f776e65722e000000;\n        owner = (address(arg0) * 0x01) | (uint96(owner));\n    }"}
{"contract_address": "0xc921a48b2bBd243aC30422B266edf58F472Eca7F", "original_solidity_code": "function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }", "heimdall_decompiled_code": "function symbol() public view returns (string memory) {\n        if (store_u) {\n            if (store_u - ((store_u >> 0x01) < 0x20)) {\n                var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                var_b = 0x22;\n                uint256 var_c = var_c + (0x20 + (((0x1f + (store_u >> 0x01)) / 0x20) * 0x20));\n                bytes32 var_d = store_u >> 0x01;\n                if (store_u) {\n                    if (store_u - ((store_u >> 0x01) < 0x20)) {\n                        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                        var_b = 0x22;\n                        if (!store_u >> 0x01) {\n                            if (0x1f < (store_u >> 0x01)) {\n                                var_a = 0x04;\n                                var_e = storage_map_i[var_a];\n                                if ((0x20 + var_c) + (store_u >> 0x01) > (0x20 + (0x20 + var_c))) {\n                                    var_e = 0x20;\n                                    uint256 var_f = var_c.length;\n                                    uint256 var_g = 0;\n                                    return abi.encodePacked(0x20, var_c.length);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }"}
{"contract_address": "0x9EbFcFb424f91eE2F8f143cc4430e9E1E2E80939", "original_solidity_code": "function transfer(address recipient, uint256 amount) public override returns (bool) {\r\n        _transfer(_msgSender(), recipient, amount);\r\n        return true;\r\n    }", "heimdall_decompiled_code": "function transfer(address arg0, uint256 arg1) public {\n        require(arg0 == (address(arg0)));\n        require(address(msg.sender));\n        require(address(arg0));\n        require(arg1 > 0);\n        require(address(owner) == (address(msg.sender)));\n        require(address(owner) == (address(arg0)));\n        address var_a = address(msg.sender);\n        var_b = 0x04;\n        require(bytes1(storage_map_b[var_a]));\n        require(!bytes1(storage_map_b[var_a]));\n        require(store_c > store_d, \"SafeMath: multiplication overflow\");\n        require(0 - arg1, \"SafeMath: multiplication overflow\");\n        require((store_e == ((store_e * arg1) / arg1)) | !arg1, \"SafeMath: multiplication overflow\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x11;\n        require(arg1, \"SafeMath: multiplication overflow\");\n        require(((store_e * arg1) / arg1) == store_e, \"SafeMath: multiplication overflow\");\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = 0x20;\n        var_f = 0x21;\n        var_g = 0x536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f;\n        var_h = 0x7700000000000000000000000000000000000000000000000000000000000000;\n        uint256 var_i = 0x40 + var_i;\n        var_d = 0x1a;\n        var_j = 0x536166654d6174683a206469766973696f6e206279207a65726f000000000000;\n        require(0x64, \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        var_k = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_g = 0x20;\n        uint256 var_h = var_i.length;\n        uint256 var_l = 0;\n        var_m = var_n;\n        var_l = 0;\n        require(0x64, \"SafeMath: addition overflow\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x12;\n        require(!(address(store_f) == (address(msg.sender))), \"SafeMath: addition overflow\");\n        require(!(address(store_f) == (address(msg.sender))), \"SafeMath: addition overflow\");\n        require(!(address(store_f) == (address(msg.sender))), \"SafeMath: addition overflow\");\n        require(address(store_f) == (address(arg0)), \"SafeMath: addition overflow\");\n        var_a = address(arg0);\n        var_b = 0x03;\n        require(!(!bytes1(storage_map_b[var_a])), \"SafeMath: addition overflow\");\n        require(!(address(store_f) == (address(arg0))), \"SafeMath: addition overflow\");\n        require(!(address(store_f) == (address(arg0))), \"SafeMath: addition overflow\");\n        var_a = address(this);\n        var_b = 0x01;\n        require(!(!bytes1(store_f / 0x01000000000000000000000000000000000000000000)), \"SafeMath: addition overflow\");\n        require(!(!bytes1(store_f / 0x01000000000000000000000000000000000000000000)), \"SafeMath: addition overflow\");\n        require(!(!bytes1(store_f / 0x01000000000000000000000000000000000000000000)), \"SafeMath: addition overflow\");\n        require(!(!bytes1(store_f / 0x01000000000000000000000000000000000000000000)), \"SafeMath: addition overflow\");\n        require(!(!bytes1(store_f / 0x01000000000000000000000000000000000000000000)), \"SafeMath: addition overflow\");\n        require(!((store_e * arg1) / 0x64), \"SafeMath: addition overflow\");\n        var_a = address(this);\n        var_b = 0x01;\n        require(!(storage_map_b[var_a] > (((store_e * arg1) / 0x64) + storage_map_b[var_a])), \"SafeMath: addition overflow\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x11;\n        require(!(((store_e * arg1) / 0x64) + storage_map_b[var_a] < storage_map_b[var_a]), \"SafeMath: addition overflow\");\n        var_k = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_g = 0x20;\n        var_h = 0x1b;\n        var_m = 0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000;\n        var_a = address(this);\n        var_b = 0x01;\n        storage_map_b[var_a] = ((store_e * arg1) / 0x64) + storage_map_b[var_a];\n        uint256 var_k = (store_e * arg1) / 0x64;\n        emit Transfer(address(msg.sender), address(this), (store_e * arg1) / 0x64);\n        var_a = address(msg.sender);\n        var_b = 0x01;\n        var_i = 0x40 + var_i;\n        var_k = 0x1e;\n        var_o = 0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000;\n        require(!(arg1 > storage_map_b[var_a]), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        require(!((storage_map_b[var_a] - arg1) > storage_map_b[var_a]), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x11;\n        var_a = address(msg.sender);\n        var_b = 0x01;\n        storage_map_b[var_a] = storage_map_b[var_a] - arg1;\n        var_i = 0x40 + var_i;\n        var_p = 0x1e;\n        var_q = 0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000;\n        require(!(((store_e * arg1) / 0x64) > arg1), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        var_r = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_s = 0x20;\n        uint256 var_t = var_i.length;\n        uint256 var_u = 0;\n        var_v = var_n;\n        var_u = 0;\n        if (!(arg1 - ((store_e * arg1) / 0x64)) > arg1) {\n            var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n            var_c = 0x11;\n            if (storage_map_b[var_a] > _maxTaxSwap) {\n            }\n            if (!store_c > store_h) {\n            }\n            if (!storage_map_b[var_a] > _taxSwapThreshold) {\n            }\n            if (!store_f / 0x0100000000000000000000000000000000000000000000) {\n            }\n            if (store_c > store_j) {\n                if (0 - arg1) {\n                }\n                if (0 - arg1) {\n                }\n                require(!((arg1 - ((store_e * arg1) / 0x64)) > arg1), \"Exceeds the _maxTxAmount.\");\n            }\n            require(store_c > store_j, \"Exceeds the _maxTxAmount.\");\n        }\n        require(!(arg1 > _maxTxAmount), \"Exceeds the _maxTxAmount.\");\n        var_k = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_g = 0x20;\n        var_h = 0x19;\n        var_m = 0x4578636565647320746865205f6d61785478416d6f756e742e00000000000000;\n        if (address(store_l) == (address(arg0))) {\n            if (address(store_l) == (address(arg0))) {\n            }\n        }\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x12;\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = 0x20;\n        var_f = 0x29;\n        var_g = 0x5472616e7366657220616d6f756e74206d757374206265206772656174657220;\n        var_h = 0x7468616e207a65726f0000000000000000000000000000000000000000000000;\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = 0x20;\n        var_f = 0x23;\n        var_g = 0x45524332303a207472616e7366657220746f20746865207a65726f2061646472;\n        var_h = 0x6573730000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = 0x20;\n        var_f = 0x25;\n        var_g = 0x45524332303a207472616e736665722066726f6d20746865207a65726f206164;\n        var_h = 0x6472657373000000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0xf7A80453F5BB234Bbfa9f6596Ef94cE42D7055EF", "original_solidity_code": "function getPlayers() public view returns (address[] memory) {\\n        return players; //Return the players array\\n    }", "heimdall_decompiled_code": "function getPlayers() public view returns (bytes memory) {\n        uint256 var_a = var_a + (0x20 + (0x20 * store_m));\n        var_b = store_m;\n        if (!store_m) {\n            var_c = 0x02;\n            address var_d = address(storage_map_z[var_c]);\n            if ((0x20 + var_a) + (0x20 * store_m) > (0x20 + (0x20 + var_a))) {\n                var_d = 0x20;\n                uint256 var_e = var_a.length;\n                return abi.encodePacked(0x20, var_a.length);\n            }\n        }\n    }"}
{"contract_address": "0x4103F78C623459b3e985dE5F5d78622944B9dE6D", "original_solidity_code": "function setFee(uint256 redisFeeOnBuy, uint256 redisFeeOnSell, uint256 taxFeeOnBuy, uint256 taxFeeOnSell) public onlyOwner {\r\n        require(redisFeeOnBuy >= 0 && redisFeeOnBuy <= 4, \"Buy rewards must be between 0% and 4%\");\r\n        require(taxFeeOnBuy >= 0 && taxFeeOnBuy <= 95, \"Buy tax must be between 0% and 95%\");\r\n        require(redisFeeOnSell >= 0 && redisFeeOnSell <= 4, \"Sell rewards must be between 0% and 4%\");\r\n        require(taxFeeOnSell >= 0 && taxFeeOnSell <= 95, \"Sell tax must be between 0% and 95%\");\r\n\r\n        _redisFeeOnBuy = redisFeeOnBuy;\r\n        _redisFeeOnSell = redisFeeOnSell;\r\n        _taxFeeOnBuy = taxFeeOnBuy;\r\n        _taxFeeOnSell = taxFeeOnSell;\r\n\r\n    }", "heimdall_decompiled_code": "function setFee(uint256 arg0, uint256 arg1, uint256 arg2, uint256 arg3) public {\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        require(!(arg0 > 0x04), \"Buy rewards must be between 0% and 4%\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x25;\n        var_d = 0x4275792072657761726473206d757374206265206265747765656e2030252061;\n        var_e = 0x6e64203425000000000000000000000000000000000000000000000000000000;\n        require(!(arg2 > 0x5f), \"Buy tax must be between 0% and 95%\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x22;\n        var_d = 0x42757920746178206d757374206265206265747765656e20302520616e642039;\n        var_e = 0x3525000000000000000000000000000000000000000000000000000000000000;\n        require(!(arg1 > 0x04), \"Sell rewards must be between 0% and 4%\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x26;\n        var_d = 0x53656c6c2072657761726473206d757374206265206265747765656e20302520;\n        var_e = 0x616e642034250000000000000000000000000000000000000000000000000000;\n        require(!(arg3 > 0x5f), \"Sell tax must be between 0% and 95%\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x23;\n        var_d = 0x53656c6c20746178206d757374206265206265747765656e20302520616e6420;\n        var_e = 0x3935250000000000000000000000000000000000000000000000000000000000;\n        store_e = arg0;\n        store_f = arg1;\n        store_g = arg2;\n        store_h = arg3;\n    }"}
{"contract_address": "0xD2c38aE96629303Ac23fc9931CDa17E023Da3453", "original_solidity_code": "function openTrading() external onlyOwner() {\r\n        require(!tradingOpen,\"trading is already open\");\r\n        uniswapV2Router = IUniswapV2Router02(0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D);\r\n        _approve(address(this), address(uniswapV2Router), _tTotal);\r\n        uniswapV2Pair = IUniswapV2Factory(uniswapV2Router.factory()).createPair(address(this), uniswapV2Router.WETH());\r\n        uniswapV2Router.addLiquidityETH{value: address(this).balance}(address(this),balanceOf(address(this)),0,0,owner(),block.timestamp);\r\n        IERC20(uniswapV2Pair).approve(address(uniswapV2Router), type(uint).max);\r\n        swapEnabled = true;\r\n        tradingOpen = true;\r\n    }", "heimdall_decompiled_code": "function openTrading() public {\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        require(!(bytes1(store_e / 0x010000000000000000000000000000000000000000)), \"trading is already open\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x17;\n        var_d = 0x74726164696e6720697320616c7265616479206f70656e000000000000000000;\n        store_d = 0x7a250d5630b4cf539739df2c5dacb4c659f2488d | (uint96(store_d));\n        require(0x08, \"ERC20: approve to the zero address\");\n        require((0x01 == 0x01) | !0x3b9aca00, \"ERC20: approve to the zero address\");\n        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x11;\n        require(address(this), \"ERC20: approve to the zero address\");\n        require(0x7a250d5630b4cf539739df2c5dacb4c659f2488d, \"ERC20: approve to the zero address\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x22;\n        var_d = 0x45524332303a20617070726f766520746f20746865207a65726f206164647265;\n        var_g = 0x7373000000000000000000000000000000000000000000000000000000000000;\n        address var_e = address(this);\n        var_h = 0x02;\n        var_e = 0x7a250d5630b4cf539739df2c5dacb4c659f2488d;\n        address var_h = keccak256(var_e);\n        storage_map_n[var_e] = 0x3b9aca00;\n        var_a = 0x3b9aca00;\n        emit Approval(address(this), 0x7a250d5630b4cf539739df2c5dacb4c659f2488d, 0x3b9aca00);\n        var_a = 0xc45a015500000000000000000000000000000000000000000000000000000000;\n        (bool success, bytes memory ret0) = address(store_d / 0x01).factory(var_b); // staticcall\n        uint256 var_i = var_i + (uint248(ret0.length + 0x1f));\n        require(!((var_i + ret0.length) - var_i) < 0x20);\n        require(var_i.length == (address(var_i.length)));\n        var_j = 0xad5c464800000000000000000000000000000000000000000000000000000000;\n        (bool success, bytes memory ret0) = address(store_d / 0x01).WETH(var_c); // staticcall\n        var_i = var_i + (uint248(ret0.length + 0x1f));\n        require(!((var_i + ret0.length) - var_i) < 0x20);\n        require(var_i.length == (address(var_i.length)));\n        var_k = 0xc9c6539600000000000000000000000000000000000000000000000000000000;\n        address var_d = address(this);\n        uint256 var_g = address(var_i.length);\n        (bool success, bytes memory ret0) = address(var_i.length).{ value: 0 ether }Unresolved_c9c65396(var_d); // call\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x24;\n        var_d = 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464;\n        var_g = 0x7265737300000000000000000000000000000000000000000000000000000000;\n        if (0x0a) {\n            if (0x0a == 0x01) {\n                if (0x0a == 0x02) {\n                    if (!0x08 > 0xff) {\n                        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                        var_f = 0x11;\n                        if (!((0x0a < 0x0b) & (0x08 < 0x4e)) | ((0x0a < 0x0133) & (0x08 < 0x20))) {\n                            if (!0x08 > 0x01) {\n                                if (!0x01 > 0x1999999999999999999999999999999999999999999999999999999999999999) {\n                                    var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                    var_f = 0x11;\n                                    if (!0x0a > 0x1999999999999999999999999999999999999999999999999999999999999999) {\n                                        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                        var_f = 0x11;\n                                        if (!0) {\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }"}
{"contract_address": "0xFF5C43C4fADdF9A03BEdE1D0b276E7eC996504a1", "original_solidity_code": "function changeFee (uint256 redisFeeOnBuy, uint256 redisFeeOnSell, uint256 taxFeeOnBuy, uint256 taxFeeOnSell) public onlyOwner {\r\n        _redisFeeOnBuy = redisFeeOnBuy;\r\n        _redisFeeOnSell = redisFeeOnSell;\r\n        _taxFeeOnBuy = taxFeeOnBuy;\r\n        _taxFeeOnSell = taxFeeOnSell;\r\n    }", "heimdall_decompiled_code": "function changeFee(uint256 arg0, uint256 arg1, uint256 arg2, uint256 arg3) public {\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        store_i = arg0;\n        store_j = arg1;\n        store_k = arg2;\n        store_l = arg3;\n    }"}
{"contract_address": "0x92E27aedE3847Bbd0E4b917Ec2Ae444d4C3A622D", "original_solidity_code": "function transferOwnership(address newOwner) public virtual onlyOwner {\r\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\r\n        emit OwnershipTransferred(_owner, newOwner);\r\n        _owner = newOwner;\r\n    }", "heimdall_decompiled_code": "function transferOwnership(address arg0) public {\n        require(arg0 == (address(arg0)));\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        require(address(arg0), \"Ownable: new owner is the zero address\");\n        emit OwnershipTransferred(address(owner), address(arg0));\n        owner = (address(arg0)) | (uint96(owner));\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x26;\n        var_d = 0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061;\n        var_e = 0x6464726573730000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0x31218E25Ad864a39c1e3623a1F0e52f2E286E3b4", "original_solidity_code": "function removeRestrictionsToZero() external onlyOwner {\r\n        _maxWallet =_tTotal;\r\n        buyFees = 0;\r\n        sellFees = 0;\r\n    }", "heimdall_decompiled_code": "function removeRestrictionsToZero() public {\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        if (0x12) {\n            if ((0x01 == 0x01) | !0x989680) {\n                var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                var_f = 0x11;\n                _maxWallet = 0x989680;\n                buyFees = 0;\n                sellFees = 0;\n                if (0x0a) {\n                    if (0x0a == 0x01) {\n                        if (0x0a == 0x02) {\n                            if (!0x12 > 0xff) {\n                                var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                var_f = 0x11;\n                                if (!((0x0a < 0x0b) & (0x12 < 0x4e)) | ((0x0a < 0x0133) & (0x12 < 0x20))) {\n                                    if (!0x12 > 0x01) {\n                                        if (!0x01 > 0x1999999999999999999999999999999999999999999999999999999999999999) {\n                                            var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                            var_f = 0x11;\n                                            if (!0x0a > 0x1999999999999999999999999999999999999999999999999999999999999999) {\n                                                var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                                var_f = 0x11;\n                                                if (!0) {\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }"}
{"contract_address": "0x8EF34AD921FF8e7D465210EbBe3029fB7B2dd294", "original_solidity_code": "function approve(address spender, uint256 amount) public virtual override returns (bool) {\r\n        address owner = _msgSender();\r\n        _approve(owner, spender, amount);\r\n        return true;\r\n    }", "heimdall_decompiled_code": "function approve(address arg0, uint256 arg1) public payable returns (bool) {\n        require(arg0 == (address(arg0)));\n        require(address(msg.sender), \"ERC20: approve to the zero address\");\n        require(address(arg0), \"ERC20: approve to the zero address\");\n        address var_a = address(msg.sender);\n        var_b = 0x02;\n        var_a = address(arg0);\n        address var_b = keccak256(var_a);\n        storage_map_b[var_a] = arg1;\n        uint256 var_c = arg1;\n        emit Approval(address(msg.sender), address(arg0), arg1);\n        var_c = 0x01;\n        return 0x01;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x22;\n        var_f = 0x45524332303a20617070726f766520746f20746865207a65726f206164647265;\n        var_g = 0x7373000000000000000000000000000000000000000000000000000000000000;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x24;\n        var_f = 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464;\n        var_g = 0x7265737300000000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0xEA96F358096DB436A74f5C974F59fdE3Bc5185e7", "original_solidity_code": "function setFeeDenominators(uint256 _liquidity, uint256 _marketing, uint256 _burn, uint256 _development, uint256 _total, uint256 _sell, uint256 _trans) external onlyOwner {\r\n        autoLpTaxFee = _liquidity; marketerTaxFee = _marketing; burningTaxFee = _burn; developerTaxFee = _development; buyingTaxFee = _total; sellingTaxFee = _sell; transferingTaxFee = _trans;\r\n        require(buyingTaxFee <= denominator.div(1) && sellingTaxFee <= denominator.div(1) && transferingTaxFee <= denominator.div(1), \"buyingTaxFee and sellingTaxFee cannot be more than 20%\");\r\n    }", "heimdall_decompiled_code": "function setFeeDenominators(uint256 arg0, uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4, uint256 arg5, uint256 arg6) public {\n        require(msg.sender == (address(getOwner)), \"Ownable: Caller is not owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x1c;\n        var_d = 0x4f776e61626c653a2043616c6c6572206973206e6f74206f776e657200000000;\n        store_k = arg0;\n        store_p = arg1;\n        store_i = arg2;\n        store_q = arg3;\n        store_r = arg4;\n        store_j = arg5;\n        store_g = arg6;\n        require(0x01, \"buyingTaxFee and sellingTaxFee cannot be more than 20%\");\n        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x12;\n        require(!(!store_r > (store_h / 0x01)), \"buyingTaxFee and sellingTaxFee cannot be more than 20%\");\n        require(!(!store_r > (store_h / 0x01)), \"buyingTaxFee and sellingTaxFee cannot be more than 20%\");\n        require(!(store_r > (store_h / 0x01)), \"buyingTaxFee and sellingTaxFee cannot be more than 20%\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x36;\n        var_d = 0x627579696e6754617846656520616e642073656c6c696e675461784665652063;\n        var_g = 0x616e6e6f74206265206d6f7265207468616e2032302500000000000000000000;\n        require(0x01);\n        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x12;\n        require(0x01);\n        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x12;\n    }"}
{"contract_address": "0x95f7bFda575e002777B856665bD36D954c3aaa59", "original_solidity_code": "function approveMax(address spender) external returns (bool) {\r\n        return approve(spender, type(uint256).max);\r\n    }", "heimdall_decompiled_code": "function approveMax(address arg0) public returns (bool) {\n        require(arg0 == (address(arg0)));\n        address var_a = address(msg.sender);\n        var_b = 0x06;\n        var_a = address(arg0);\n        address var_b = keccak256(var_a);\n        storage_map_j[var_a] = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff;\n        var_c = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff;\n        emit Approval(address(msg.sender), address(arg0), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff);\n        var_c = 0x01;\n        return 0x01;\n    }"}
{"contract_address": "0xd3a031b4752eE83c310988Ad7277A7C2cD0bC631", "original_solidity_code": "function setFeeAddressWallets(address payable newWallet) external onlyOwner {\r\n        _taxWallet = newWallet;\r\n    }", "heimdall_decompiled_code": "function setFeeAddressWallets(address arg0) public {\n        require(arg0 == (address(arg0)));\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        store_k = (address(arg0)) | (uint96(store_k));\n    }"}
{"contract_address": "0x78D08E5831eeA6c6c6Af34d700F79A5b00873efE", "original_solidity_code": "function transfer(address recipient, uint256 amount) public override returns (bool) {\r\n        _transfer(_msgSender(), recipient, amount);\r\n        return true;\r\n    }", "heimdall_decompiled_code": "function transfer(address arg0, uint256 arg1) public {\n        require(arg0 == (address(arg0)));\n        require(arg1 == arg1);\n        require(address(msg.sender) - 0, \"SafeMath: multiplication overflow\");\n        require(address(arg0) - 0, \"SafeMath: multiplication overflow\");\n        require(arg1 > 0, \"SafeMath: multiplication overflow\");\n        require(!(!(address(msg.sender)) == (address(owner / 0x01))), \"SafeMath: multiplication overflow\");\n        require(!(!(address(arg0)) == (address(owner / 0x01))), \"SafeMath: multiplication overflow\");\n        require(store_b > store_c, \"SafeMath: multiplication overflow\");\n        require(arg1 - 0, \"SafeMath: multiplication overflow\");\n        require(!arg1 | (store_d == ((arg1 * store_d) / arg1)), \"SafeMath: multiplication overflow\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_b = 0x11;\n        require(arg1, \"SafeMath: multiplication overflow\");\n        require(((arg1 * store_d) / arg1) == store_d, \"SafeMath: multiplication overflow\");\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_d = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        var_f = 0x21;\n        var_g = 0x536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f;\n        var_h = 0x7700000000000000000000000000000000000000000000000000000000000000;\n        uint256 var_e = 0x40 + var_e;\n        var_c = 0x1a;\n        var_i = 0x536166654d6174683a206469766973696f6e206279207a65726f000000000000;\n        require(0x64 > 0, \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        var_j = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_g = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        uint256 var_h = var_e.length;\n        uint256 var_k = 0;\n        var_l = var_m;\n        var_k = 0;\n        require(0x64, \"_transfer:: Transfer Delay enabled. Only one purchase per block allowed.\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_b = 0x12;\n        require(!(bytes1(transferDelayEnabled / 0x01)), \"_transfer:: Transfer Delay enabled. Only one purchase per block allowed.\");\n        require(!(!(address(arg0)) == (address(store_f / 0x01))), \"_transfer:: Transfer Delay enabled. Only one purchase per block allowed.\");\n        require(!(!(address(arg0)) == (address(store_g / 0x01))), \"_transfer:: Transfer Delay enabled. Only one purchase per block allowed.\");\n        address var_a = address(tx.origin);\n        var_n = 0x05;\n        require(storage_map_h[var_a] < block.number, \"_transfer:: Transfer Delay enabled.  Only one purchase per block allowed.\");\n        var_j = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_g = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        var_h = 0x49;\n        var_l = 0x5f7472616e736665723a3a205472616e736665722044656c617920656e61626c;\n        var_o = 0x65642e20204f6e6c79206f6e652070757263686173652070657220626c6f636b;\n        var_p = 0x20616c6c6f7765642e0000000000000000000000000000000000000000000000;\n        var_a = address(tx.origin);\n        var_n = 0x05;\n        storage_map_h[var_a] = block.number;\n        require(!(address(msg.sender) == (address(store_g / 0x01))), \"SafeMath: addition overflow\");\n        require(!(address(msg.sender) == (address(store_g / 0x01))), \"SafeMath: addition overflow\");\n        require(!(address(msg.sender) == (address(store_g / 0x01))), \"SafeMath: addition overflow\");\n        require(!(address(arg0) == (address(store_g / 0x01))), \"SafeMath: addition overflow\");\n        require(!(address(arg0) == (address(store_g / 0x01))), \"SafeMath: addition overflow\");\n        var_a = address(this);\n        var_n = 0x01;\n        require(!(!bytes1(store_g / 0x01000000000000000000000000000000000000000000)), \"SafeMath: addition overflow\");\n        require(!(!bytes1(store_g / 0x01000000000000000000000000000000000000000000)), \"SafeMath: addition overflow\");\n        require(!(!bytes1(store_g / 0x01000000000000000000000000000000000000000000)), \"SafeMath: addition overflow\");\n        require(!(!bytes1(store_g / 0x01000000000000000000000000000000000000000000)), \"SafeMath: addition overflow\");\n        require(!(!bytes1(store_g / 0x01000000000000000000000000000000000000000000)), \"SafeMath: addition overflow\");\n        require(!(((arg1 * store_d) / 0x64) > 0), \"SafeMath: addition overflow\");\n        var_a = address(this);\n        var_n = 0x01;\n        require(!(storage_map_h[var_a] > (storage_map_h[var_a] + ((arg1 * store_d) / 0x64))), \"SafeMath: addition overflow\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_b = 0x11;\n        require(!(storage_map_h[var_a] + ((arg1 * store_d) / 0x64) < storage_map_h[var_a]), \"SafeMath: addition overflow\");\n        var_j = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_g = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        var_h = 0x1b;\n        var_l = 0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000;\n        var_a = address(this);\n        var_n = 0x01;\n        storage_map_h[var_a] = storage_map_h[var_a] + ((arg1 * store_d) / 0x64);\n        uint256 var_j = (arg1 * store_d) / 0x64;\n        emit Transfer(address(msg.sender), address(this), (arg1 * store_d) / 0x64);\n        var_a = address(msg.sender);\n        var_n = 0x01;\n        var_e = 0x40 + var_e;\n        var_j = 0x1e;\n        var_q = 0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000;\n        require(!(arg1 > storage_map_h[var_a]), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        require(!((storage_map_h[var_a] - arg1) > storage_map_h[var_a]), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_b = 0x11;\n        var_a = address(msg.sender);\n        var_n = 0x01;\n        storage_map_h[var_a] = storage_map_h[var_a] - arg1;\n        var_e = 0x40 + var_e;\n        var_r = 0x1e;\n        var_s = 0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000;\n        require(!(((arg1 * store_d) / 0x64) > arg1), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        var_t = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_p = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        uint256 var_u = var_e.length;\n        uint256 var_v = 0;\n        var_w = var_m;\n        var_v = 0;\n        if (!(arg1 - ((arg1 * store_d) / 0x64)) > arg1) {\n            var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n            var_b = 0x11;\n            if (storage_map_h[var_a] > _maxTaxSwap) {\n            }\n            if (!store_b > store_j) {\n            }\n            if (!storage_map_h[var_a] > _taxSwapThreshold) {\n            }\n            if (!store_g / 0x0100000000000000000000000000000000000000000000) {\n            }\n            if (store_b > store_l) {\n                if (arg1 - 0) {\n                }\n                require(!((arg1 - ((arg1 * store_d) / 0x64)) > arg1), \"Exceeds the _maxTxAmount.\");\n            }\n            require(store_b > store_l, \"Exceeds the _maxTxAmount.\");\n        }\n        require(!(arg1 > _maxTxAmount), \"Exceeds the _maxTxAmount.\");\n        var_j = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_g = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        var_h = 0x19;\n        var_l = 0x4578636565647320746865205f6d61785478416d6f756e742e00000000000000;\n        if (address(arg0) == (address(store_f / 0x01))) {\n            if (address(arg0) == (address(store_f / 0x01))) {\n            }\n        }\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_b = 0x12;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        var_f = 0x29;\n        var_g = 0x5472616e7366657220616d6f756e74206d757374206265206772656174657220;\n        var_h = 0x7468616e207a65726f0000000000000000000000000000000000000000000000;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        var_f = 0x23;\n        var_g = 0x45524332303a207472616e7366657220746f20746865207a65726f2061646472;\n        var_h = 0x6573730000000000000000000000000000000000000000000000000000000000;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        var_f = 0x25;\n        var_g = 0x45524332303a207472616e736665722066726f6d20746865207a65726f206164;\n        var_h = 0x6472657373000000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0x86612Df86F83dfD8E95d71E7766E1579Bf82BCab", "original_solidity_code": "function isBot(address a) public view returns (bool){\r\n      return bots[a];\r\n    }", "heimdall_decompiled_code": "function isBot(address arg0) public view returns (bool) {\n        require(arg0 == (address(arg0)));\n        address var_a = address(arg0);\n        var_b = 0x04;\n        address var_c = !(!bytes1(storage_map_b[var_a] / 0x01));\n        return !(!bytes1(storage_map_b[var_a] / 0x01));\n    }"}
{"contract_address": "0xdcb0A4559562a8854074Aeaf47B9549aD1eC1163", "original_solidity_code": "function openTrading() external onlyOwner() {\\r\\n        require(!tradingOpen,\\\"trading is already open\\\");\\r\\n        uniswapV2Router = IUniswapV2Router02(0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D);\\r\\n        _approve(address(this), address(uniswapV2Router), _tTotal);\\r\\n        uniswapV2Pair = IUniswapV2Factory(uniswapV2Router.factory()).createPair(address(this), uniswapV2Router.WETH());\\r\\n        uniswapV2Router.addLiquidityETH{value: address(this).balance}(address(this),balanceOf(address(this)),0,0,owner(),block.timestamp);\\r\\n        IERC20(uniswapV2Pair).approve(address(uniswapV2Router), type(uint).max);\\r\\n        swapEnabled = true;\\r\\n        tradingOpen = true;\\r\\n    }", "heimdall_decompiled_code": "function openTrading() public {\n        require(address(owner / 0x01) == (address(msg.sender)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_b = ((0x04 + var_c) + 0x20) - (0x04 + var_c);\n        var_d = 0x20;\n        var_e = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        require(!(bytes1(store_e / 0x010000000000000000000000000000000000000000)), \"trading is already open\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = ((0x04 + var_c) + 0x20) - (0x04 + var_c);\n        var_d = 0x17;\n        var_e = 0x74726164696e6720697320616c7265616479206f70656e000000000000000000;\n        store_d = 0x7a250d5630b4cf539739df2c5dacb4c659f2488d | (uint96(store_d));\n        require(0x08, \"ERC20: approve to the zero address\");\n        require(!0x05f5e100 | (0x01 == 0x01), \"ERC20: approve to the zero address\");\n        var_f = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_g = 0x11;\n        require(address(this) - 0, \"ERC20: approve to the zero address\");\n        require(address(store_d / 0x01) - 0, \"ERC20: approve to the zero address\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = ((0x04 + var_c) + 0x20) - (0x04 + var_c);\n        var_d = 0x22;\n        var_e = 0x45524332303a20617070726f766520746f20746865207a65726f206164647265;\n        var_h = 0x7373000000000000000000000000000000000000000000000000000000000000;\n        address var_f = address(this);\n        var_i = 0x02;\n        var_f = address(store_d / 0x01);\n        address var_i = keccak256(var_f);\n        storage_map_n[var_f] = 0x05f5e100;\n        var_a = 0x05f5e100;\n        emit Approval(address(this), address(store_d / 0x01), 0x05f5e100);\n        var_a = 0xc45a015500000000000000000000000000000000000000000000000000000000;\n        (bool success, bytes memory ret0) = address(store_d / 0x01).factory(var_b); // staticcall\n        uint256 var_c = var_c + (uint248(ret0.length + 0x1f));\n        require(!((var_c + ret0.length) - var_c) < 0x20);\n        require(var_j == (address(var_j)));\n        var_k = 0xad5c464800000000000000000000000000000000000000000000000000000000;\n        (bool success, bytes memory ret0) = address(store_d / 0x01).WETH(var_d); // staticcall\n        var_c = var_c + (uint248(ret0.length + 0x1f));\n        require(!((var_c + ret0.length) - var_c) < 0x20);\n        require(var_j == (address(var_j)));\n        var_l = 0xc9c6539600000000000000000000000000000000000000000000000000000000;\n        address var_e = address(this);\n        address var_h = address(var_j);\n        (bool success, bytes memory ret0) = address(var_j).Unresolved_c9c65396(var_e); // call\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = ((0x04 + var_c) + 0x20) - (0x04 + var_c);\n        var_d = 0x24;\n        var_e = 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464;\n        var_h = 0x7265737300000000000000000000000000000000000000000000000000000000;\n        if (0x0a) {\n            if (0x0a == 0x01) {\n                if (0x0a == 0x02) {\n                    if (!0x08 > 0xff) {\n                        var_f = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                        var_g = 0x11;\n                        if (!0x0100 > 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) {\n                            var_f = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                            var_g = 0x11;\n                            if (!((0x0a < 0x0b) & (0x08 < 0x4e)) | ((0x0a < 0x0133) & (0x08 < 0x20))) {\n                                if (!0x08 > 0x01) {\n                                    if (!0x01 > 0x1999999999999999999999999999999999999999999999999999999999999999) {\n                                        var_f = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                        var_g = 0x11;\n                                        if (!0x0a > 0x1999999999999999999999999999999999999999999999999999999999999999) {\n                                            var_f = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                            var_g = 0x11;\n                                            if (!0) {\n                                            }\n                                            if (!0x05f5e100 > 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) {\n                                                var_f = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                                var_g = 0x11;\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }"}
{"contract_address": "0x39f3C6C2a3E69D908DFE9863C9127080CC487933", "original_solidity_code": "function updateTaxWallet(address newWallet) external onlyOwner {\r\n        _taxWallet = newWallet;\r\n    }", "heimdall_decompiled_code": "function updateTaxWallet(address arg0) public {\n        require(arg0 == (address(arg0)));\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        store_l = (address(arg0)) | (uint96(store_l));\n    }"}
{"contract_address": "0xbFD03022a32dB1502489AE1F65bd8f343CC09AB9", "original_solidity_code": "function approve(address spender, uint256 amount) public virtual override returns (bool) {\\r\\n        _approve(_msgSender(), spender, amount);\\r\\n        return true;\\r\\n    }", "heimdall_decompiled_code": "function approve(address arg0, uint256 arg1) public returns (bool) {\n        require(arg0 == (address(arg0)));\n        require(arg1 == arg1);\n        require(address(msg.sender) - 0, \"ERC20: approve to the zero address\");\n        require(address(arg0) - 0, \"ERC20: approve to the zero address\");\n        address var_a = address(msg.sender);\n        var_b = 0x01;\n        var_a = address(arg0);\n        address var_b = keccak256(var_a);\n        storage_map_b[var_a] = arg1;\n        uint256 var_c = arg1;\n        emit Approval(address(msg.sender), address(arg0), arg1);\n        var_c = 0x01;\n        return 0x01;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_d = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        var_f = 0x22;\n        var_g = 0x45524332303a20617070726f766520746f20746865207a65726f206164647265;\n        var_h = 0x7373000000000000000000000000000000000000000000000000000000000000;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        var_f = 0x24;\n        var_g = 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464;\n        var_h = 0x7265737300000000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0x3f91B8467d1eE998DE6344903e2fDEB6252d4c8b", "original_solidity_code": "function removeLimits() external onlyOwner{\r\n        _maxTxAmount = _tTotal;\r\n        _maxWalletSize=_tTotal;\r\n        transferDelayEnabled=false;\r\n        emit MaxTxAmountUpdated(_tTotal);\r\n    }", "heimdall_decompiled_code": "function removeLimits() public {\n        require(address(owner / 0x01) == (address(msg.sender)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_b = ((0x04 + var_c) + 0x20) - (0x04 + var_c);\n        var_d = 0x20;\n        var_e = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        if (0x09) {\n            if (!0x3b9aca00 | (0x01 == 0x01)) {\n                var_f = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                var_g = 0x11;\n                _maxTxAmount = 0x3b9aca00;\n                if (0x09) {\n                    if (!0x3b9aca00 | (0x01 == 0x01)) {\n                        var_f = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                        var_g = 0x11;\n                        _maxWalletSize = 0x3b9aca00;\n                        transferDelayEnabled = (0 * 0x01) | (uint248(transferDelayEnabled));\n                        if (0x09) {\n                            if (!0x3b9aca00 | (0x01 == 0x01)) {\n                                var_f = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                var_g = 0x11;\n                                var_a = 0x3b9aca00;\n                                emit MaxTxAmountUpdated(0x3b9aca00);\n                                if (0x0a) {\n                                    if (0x0a == 0x01) {\n                                        if (0x0a == 0x02) {\n                                            if (!0x09 > 0xff) {\n                                                var_f = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                                var_g = 0x11;\n                                                if (!0x0200 > 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) {\n                                                    var_f = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                                    var_g = 0x11;\n                                                    if (!((0x0a < 0x0b) & (0x09 < 0x4e)) | ((0x0a < 0x0133) & (0x09 < 0x20))) {\n                                                        if (!0x09 > 0x01) {\n                                                            if (!0x01 > 0x1999999999999999999999999999999999999999999999999999999999999999) {\n                                                                var_f = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                                                var_g = 0x11;\n                                                                if (!0x0a > 0x1999999999999999999999999999999999999999999999999999999999999999) {\n                                                                    var_f = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                                                    var_g = 0x11;\n                                                                    if (!0x01) {\n                                                                    }\n                                                                    if (!0x3b9aca00 > 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) {\n                                                                        var_f = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                                                        var_g = 0x11;\n                                                                    }\n                                                                }\n                                                            }\n                                                        }\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }"}
{"contract_address": "0xE5513c73eaCe54F05fDfa98061784bfd66b86bEA", "original_solidity_code": "function removeERC20(address _token) external {\r\n        if(_token != address(this)){\r\n            IERC20(_token).transfer(fundAddress, IERC20(_token).balanceOf(address(this)));\r\n            fundAddress.transfer(address(this).balance);\r\n        }\r\n    }", "heimdall_decompiled_code": "function removeERC20(address arg0) public {\n        require(arg0 == (address(arg0)));\n        require(address(this) == (address(arg0)));\n        var_a = 0x70a0823100000000000000000000000000000000000000000000000000000000;\n        address var_b = address(this);\n        require(address(arg0).code.length);\n        (bool success, bytes memory ret0) = address(arg0).Unresolved_70a08231(var_b); // staticcall\n        uint256 var_c = var_c + (uint248(ret0.length + 0x1f));\n        require(!((var_c + ret0.length) - var_c) < 0x20);\n        var_d = 0xa9059cbb00000000000000000000000000000000000000000000000000000000;\n        address var_e = address(store_h);\n        uint256 var_f = var_c.length;\n        require(address(arg0).code.length);\n        (bool success, bytes memory ret0) = address(arg0).{ value: 0 ether }Unresolved_a9059cbb(var_e); // call\n        var_c = var_c + (uint248(ret0.length + 0x1f));\n        require(!((var_c + ret0.length) - var_c) < 0x20);\n        require(var_c.length == var_c.length);\n        (bool success, bytes memory ret0) = address(store_h).transfer(address(this).balance);\n    }"}
{"contract_address": "0x53BF9362f1eD90638B06392Bc01813f162Eb8766", "original_solidity_code": "function isBot(address a) public view returns (bool){\r\n      return bots[a];\r\n    }", "heimdall_decompiled_code": "function isBot(address arg0) public view returns (bool) {\n        require(arg0 == (address(arg0)));\n        address var_a = address(arg0);\n        var_b = 0x04;\n        address var_c = !(!bytes1(storage_map_b[var_a] / 0x01));\n        return !(!bytes1(storage_map_b[var_a] / 0x01));\n    }"}
{"contract_address": "0x31b60867a6203e76120df0612769ba136097eBc8", "original_solidity_code": "function renounceOwnership() public virtual onlyOwner {\r\n        _transferOwnership(address(0));\r\n    }", "heimdall_decompiled_code": "function renounceOwnership() public payable {\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        owner = 0 | (uint96(owner));\n        emit OwnershipTransferred(address(owner), 0);\n    }"}
{"contract_address": "0x0056aC5defc0F8380b9d2B351c3C23b23A852082", "original_solidity_code": "function transfer(address recipient, uint256 amount) public override returns (bool) {\r\n        _transfer(_msgSender(), recipient, amount);\r\n        return true;\r\n    }", "heimdall_decompiled_code": "function transfer(address arg0, uint256 arg1) public {\n        require(arg0 == (address(arg0)));\n        require(address(msg.sender));\n        require(address(arg0));\n        require(arg1 > 0);\n        require(address(owner) == (address(msg.sender)));\n        require(address(owner) == (address(arg0)));\n        address var_a = address(msg.sender);\n        var_b = 0x04;\n        require(bytes1(storage_map_b[var_a]));\n        require(!bytes1(storage_map_b[var_a]));\n        require(store_c > store_d, \"SafeMath: multiplication overflow\");\n        require(0 - arg1, \"SafeMath: multiplication overflow\");\n        require((store_e == ((store_e * arg1) / arg1)) | !arg1, \"SafeMath: multiplication overflow\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x11;\n        require(arg1, \"SafeMath: multiplication overflow\");\n        require(((store_e * arg1) / arg1) == store_e, \"SafeMath: multiplication overflow\");\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = 0x20;\n        var_f = 0x21;\n        var_g = 0x536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f;\n        var_h = 0x7700000000000000000000000000000000000000000000000000000000000000;\n        uint256 var_i = 0x40 + var_i;\n        var_d = 0x1a;\n        var_j = 0x536166654d6174683a206469766973696f6e206279207a65726f000000000000;\n        require(0x64, \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        var_k = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_g = 0x20;\n        uint256 var_h = var_i.length;\n        uint256 var_l = 0;\n        var_m = var_n;\n        var_l = 0;\n        require(0x64, \"_transfer:: Transfer Delay enabled. Only one purchase per block allowed.\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x12;\n        require(!(bytes1(transferDelayEnabled)), \"_transfer:: Transfer Delay enabled.  Only one purchase per block allowed.\");\n        require(address(store_g) == (address(arg0)), \"_transfer:: Transfer Delay enabled. Only one purchase per block allowed.\");\n        require(!(!(address(store_h)) == (address(arg0))), \"_transfer:: Transfer Delay enabled. Only one purchase per block allowed.\");\n        var_a = tx.origin;\n        var_b = 0x05;\n        require(block.number > storage_map_b[var_a], \"_transfer:: Transfer Delay enabled.  Only one purchase per block allowed.\");\n        var_k = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_g = 0x20;\n        var_h = 0x49;\n        var_m = 0x5f7472616e736665723a3a205472616e736665722044656c617920656e61626c;\n        var_o = 0x65642e20204f6e6c79206f6e652070757263686173652070657220626c6f636b;\n        var_p = 0x20616c6c6f7765642e0000000000000000000000000000000000000000000000;\n        var_a = tx.origin;\n        var_b = 0x05;\n        storage_map_b[var_a] = block.number;\n        require(!(address(store_h) == (address(msg.sender))), \"SafeMath: addition overflow\");\n        require(!(address(store_h) == (address(msg.sender))), \"SafeMath: addition overflow\");\n        require(!(address(store_h) == (address(msg.sender))), \"SafeMath: addition overflow\");\n        require(!(address(store_h) == (address(arg0))), \"SafeMath: addition overflow\");\n        require(!(address(store_h) == (address(arg0))), \"SafeMath: addition overflow\");\n        var_a = address(this);\n        var_b = 0x01;\n        require(!(!bytes1(store_h / 0x01000000000000000000000000000000000000000000)), \"SafeMath: addition overflow\");\n        require(!(!bytes1(store_h / 0x01000000000000000000000000000000000000000000)), \"SafeMath: addition overflow\");\n        require(!(!bytes1(store_h / 0x01000000000000000000000000000000000000000000)), \"SafeMath: addition overflow\");\n        require(!(!bytes1(store_h / 0x01000000000000000000000000000000000000000000)), \"SafeMath: addition overflow\");\n        require(!(!bytes1(store_h / 0x01000000000000000000000000000000000000000000)), \"SafeMath: addition overflow\");\n        require(!((store_e * arg1) / 0x64), \"SafeMath: addition overflow\");\n        var_a = address(this);\n        var_b = 0x01;\n        require(!(storage_map_b[var_a] > (((store_e * arg1) / 0x64) + storage_map_b[var_a])), \"SafeMath: addition overflow\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x11;\n        require(!(((store_e * arg1) / 0x64) + storage_map_b[var_a] < storage_map_b[var_a]), \"SafeMath: addition overflow\");\n        var_k = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_g = 0x20;\n        var_h = 0x1b;\n        var_m = 0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000;\n        var_a = address(this);\n        var_b = 0x01;\n        storage_map_b[var_a] = ((store_e * arg1) / 0x64) + storage_map_b[var_a];\n        uint256 var_k = (store_e * arg1) / 0x64;\n        emit Transfer(address(msg.sender), address(this), (store_e * arg1) / 0x64);\n        var_a = address(msg.sender);\n        var_b = 0x01;\n        var_i = 0x40 + var_i;\n        var_k = 0x1e;\n        var_q = 0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000;\n        require(!(arg1 > storage_map_b[var_a]), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        require(!((storage_map_b[var_a] - arg1) > storage_map_b[var_a]), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x11;\n        var_a = address(msg.sender);\n        var_b = 0x01;\n        storage_map_b[var_a] = storage_map_b[var_a] - arg1;\n        var_i = 0x40 + var_i;\n        var_r = 0x1e;\n        var_s = 0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000;\n        require(!(((store_e * arg1) / 0x64) > arg1), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        var_t = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_p = 0x20;\n        uint256 var_u = var_i.length;\n        uint256 var_v = 0;\n        var_w = var_n;\n        var_v = 0;\n        if (!(arg1 - ((store_e * arg1) / 0x64)) > arg1) {\n            var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n            var_c = 0x11;\n            if (storage_map_b[var_a] > _maxTaxSwap) {\n            }\n            if (!store_c > store_j) {\n            }\n            if (!storage_map_b[var_a] > _taxSwapThreshold) {\n            }\n            if (!store_h / 0x0100000000000000000000000000000000000000000000) {\n            }\n            if (store_c > store_l) {\n                if (0 - arg1) {\n                }\n                require(!((arg1 - ((store_e * arg1) / 0x64)) > arg1), \"Exceeds the _maxTxAmount.\");\n            }\n            require(store_c > store_l, \"Exceeds the _maxTxAmount.\");\n        }\n        require(!(arg1 > _maxTxAmount), \"Exceeds the _maxTxAmount.\");\n        var_k = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_g = 0x20;\n        var_h = 0x19;\n        var_m = 0x4578636565647320746865205f6d61785478416d6f756e742e00000000000000;\n        if (address(store_g) == (address(arg0))) {\n            if (address(store_g) == (address(arg0))) {\n            }\n        }\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x12;\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = 0x20;\n        var_f = 0x29;\n        var_g = 0x5472616e7366657220616d6f756e74206d757374206265206772656174657220;\n        var_h = 0x7468616e207a65726f0000000000000000000000000000000000000000000000;\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = 0x20;\n        var_f = 0x23;\n        var_g = 0x45524332303a207472616e7366657220746f20746865207a65726f2061646472;\n        var_h = 0x6573730000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = 0x20;\n        var_f = 0x25;\n        var_g = 0x45524332303a207472616e736665722066726f6d20746865207a65726f206164;\n        var_h = 0x6472657373000000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0x172F7a6F8C76321376cf077c4b68f6C0A0907d2f", "original_solidity_code": "function setFee (uint256 _fee) external onlyOwner {\r\n        require (_fee <= 35, \"Fee can't exceed 35%\");\r\n        totalFee = _fee;\r\n    }", "heimdall_decompiled_code": "function setFee(uint256 arg0) public {\n        require(arg0 == arg0);\n        require(address(msg.sender) == (address(getOwner / 0x01)), \"!Owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_b = ((0x04 + var_c) + 0x20) - (0x04 + var_c);\n        var_d = 0x06;\n        var_e = 0x214f776e65720000000000000000000000000000000000000000000000000000;\n        require(!(arg0 > 0x23), \"Fee can't exceed 35%\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = ((0x04 + var_c) + 0x20) - (0x04 + var_c);\n        var_d = 0x14;\n        var_e = 0x4665652063616e27742065786365656420333525000000000000000000000000;\n        store_p = arg0;\n    }"}
{"contract_address": "0xB14c3a406A345F2b4E79aB45d81A63E9a815ec71", "original_solidity_code": "function name() external pure returns (string memory);\r\n\r\n    function symbol() external pure returns (string memory);\r\n\r\n    function decimals() external pure returns (uint8);\r\n\r\n    function totalSupply() external view returns (uint256);\r\n\r\n    function balanceOf(address owner) external view returns (uint256);\r\n\r\n    function allowance(address owner, address spender)\r\n        external\r\n        view\r\n        returns (uint256);\r\n\r\n    function approve(address spender, uint256 value) external returns (bool);\r\n\r\n    function transfer(address to, uint256 value) external returns (bool);\r\n\r\n    function transferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 value\r\n    ) external returns (bool);\r\n\r\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\r\n\r\n    function PERMIT_TYPEHASH() external pure returns (bytes32);\r\n\r\n    function nonces(address owner) external view returns (uint256);\r\n\r\n    function permit(\r\n        address owner,\r\n        address spender,\r\n        uint256 value,\r\n        uint256 deadline,\r\n        uint8 v,\r\n        bytes32 r,\r\n        bytes32 s\r\n    ) external;\r\n\r\n    event Mint(address indexed sender, uint256 amount0, uint256 amount1);\r\n    event Burn(\r\n        address indexed sender,\r\n        uint256 amount0,\r\n        uint256 amount1,\r\n        address indexed to\r\n    );\r\n    event Swap(\r\n        address indexed sender,\r\n        uint256 amount0In,\r\n        uint256 amount1In,\r\n        uint256 amount0Out,\r\n        uint256 amount1Out,\r\n        address indexed to\r\n    );\r\n    event Sync(uint112 reserve0, uint112 reserve1);\r\n\r\n    function MINIMUM_LIQUIDITY() external pure returns (uint256);\r\n\r\n    function factory() external view returns (address);\r\n\r\n    function token0() external view returns (address);\r\n\r\n    function token1() external view returns (address);\r\n\r\n    function getReserves()\r\n        external\r\n        view\r\n        returns (\r\n            uint112 reserve0,\r\n            uint112 reserve1,\r\n            uint32 blockTimestampLast\r\n        );\r\n\r\n    function price0CumulativeLast() external view returns (uint256);\r\n\r\n    function price1CumulativeLast() external view returns (uint256);\r\n\r\n    function kLast() external view returns (uint256);\r\n\r\n    function mint(address to) external returns (uint256 liquidity);\r\n\r\n    function burn(address to)\r\n        external\r\n        returns (uint256 amount0, uint256 amount1);\r\n\r\n    function swap(\r\n        uint256 amount0Out,\r\n        uint256 amount1Out,\r\n        address to,\r\n        bytes calldata data\r\n    ) external;\r\n\r\n    function skim(address to) external;\r\n\r\n    function sync() external;\r\n\r\n    function initialize(address, address) external;\r\n}\r\n\r\n/* pragma solidity 0.8.10; */\r\n/* pragma experimental ABIEncoderV2; */\r\n\r\ninterface IUniswapV2Router02 {\r\n    function factory() external pure returns (address);\r\n\r\n    function WETH() external pure returns (address);\r\n\r\n    function addLiquidity(\r\n        address tokenA,\r\n        address tokenB,\r\n        uint256 amountADesired,\r\n        uint256 amountBDesired,\r\n        uint256 amountAMin,\r\n        uint256 amountBMin,\r\n        address to,\r\n        uint256 deadline\r\n    )\r\n        external\r\n        returns (\r\n            uint256 amountA,\r\n            uint256 amountB,\r\n            uint256 liquidity\r\n        );\r\n\r\n    function addLiquidityETH(\r\n        address token,\r\n        uint256 amountTokenDesired,\r\n        uint256 amountTokenMin,\r\n        uint256 amountETHMin,\r\n        address to,\r\n        uint256 deadline\r\n    )\r\n        external\r\n        payable\r\n        returns (\r\n            uint256 amountToken,\r\n            uint256 amountETH,\r\n            uint256 liquidity\r\n        );\r\n\r\n    function swapExactTokensForTokensSupportingFeeOnTransferTokens(\r\n        uint256 amountIn,\r\n        uint256 amountOutMin,\r\n        address[] calldata path,\r\n        address to,\r\n        uint256 deadline\r\n    ) external;\r\n\r\n    function swapExactETHForTokensSupportingFeeOnTransferTokens(\r\n        uint256 amountOutMin,\r\n        address[] calldata path,\r\n        address to,\r\n        uint256 deadline\r\n    ) external payable;\r\n\r\n    function swapExactTokensForETHSupportingFeeOnTransferTokens(\r\n        uint256 amountIn,\r\n        uint256 amountOutMin,\r\n        address[] calldata path,\r\n        address to,\r\n        uint256 deadline\r\n    ) external;\r\n}", "heimdall_decompiled_code": "function name() public view returns (string memory) {\n        if (store_a) {\n            if (!(store_a) == ((store_a / 0x02) < 0x20)) {\n                var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                var_b = 0x22;\n                uint256 var_c = var_c + (0x20 + (((0x1f + (store_a / 0x02)) / 0x20) * 0x20));\n                uint256 var_d = store_a / 0x02;\n                if (store_a) {\n                    if (!(store_a) == ((store_a / 0x02) < 0x20)) {\n                        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                        var_b = 0x22;\n                        if (!store_a / 0x02) {\n                            if (0x1f < (store_a / 0x02)) {\n                                var_a = 0x03;\n                                var_e = storage_map_b[var_a];\n                                if ((0x20 + var_c) + (store_a / 0x02) > (0x20 + (0x20 + var_c))) {\n                                    uint256 var_e = (var_c + 0x20) - var_c;\n                                    uint256 var_f = var_c.length;\n                                    if (!0 > var_c.length) {\n                                        uint256 var_g = 0;\n                                        return abi.encodePacked((var_c + 0x20) - var_c, var_c.length);\n                                        return abi.encodePacked((var_c + 0x20) - var_c, var_c.length);\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }"}
{"contract_address": "0x5Ba89777D1172C70F410d74dBBeF55150B44Da28", "original_solidity_code": "function openTrading() external onlyOwner() {\r\n        require(!tradingOpen,\"trading is already open\");\r\n        uniswapV2Router = IUniswapV2Router02(0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D);\r\n        _approve(address(this), address(uniswapV2Router), _tTotal);\r\n        uniswapV2Pair = IUniswapV2Factory(uniswapV2Router.factory()).createPair(address(this), uniswapV2Router.WETH());\r\n        uniswapV2Router.addLiquidityETH{value: address(this).balance}(address(this),balanceOf(address(this)),0,0,owner(),block.timestamp);\r\n        IERC20(uniswapV2Pair).approve(address(uniswapV2Router), type(uint).max);\r\n        swapEnabled = true;\r\n        tradingOpen = true;\r\n        firstBlock = block.number;\r\n    }", "heimdall_decompiled_code": "function openTrading() public {\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        require(!(bytes1(store_f / 0x010000000000000000000000000000000000000000)), \"trading is already open\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x17;\n        var_d = 0x74726164696e6720697320616c7265616479206f70656e000000000000000000;\n        store_l = 0x7a250d5630b4cf539739df2c5dacb4c659f2488d | (uint96(store_l));\n        require(0x09, \"ERC20: approve to the zero address\");\n        require((0x01 == 0x01) | !0x989680, \"ERC20: approve to the zero address\");\n        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x11;\n        require(address(this), \"ERC20: approve to the zero address\");\n        require(0x7a250d5630b4cf539739df2c5dacb4c659f2488d, \"ERC20: approve to the zero address\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x22;\n        var_d = 0x45524332303a20617070726f766520746f20746865207a65726f206164647265;\n        var_g = 0x7373000000000000000000000000000000000000000000000000000000000000;\n        address var_e = address(this);\n        var_h = 0x02;\n        var_e = 0x7a250d5630b4cf539739df2c5dacb4c659f2488d;\n        address var_h = keccak256(var_e);\n        storage_map_m[var_e] = 0x989680;\n        var_a = 0x989680;\n        emit Approval(address(this), 0x7a250d5630b4cf539739df2c5dacb4c659f2488d, 0x989680);\n        var_a = 0xc45a015500000000000000000000000000000000000000000000000000000000;\n        (bool success, bytes memory ret0) = address(store_l / 0x01).factory(var_b); // staticcall\n        uint256 var_i = var_i + (uint248(ret0.length + 0x1f));\n        require(!((var_i + ret0.length) - var_i) < 0x20);\n        require(var_i.length == (address(var_i.length)));\n        var_j = 0xad5c464800000000000000000000000000000000000000000000000000000000;\n        (bool success, bytes memory ret0) = address(store_l / 0x01).WETH(var_c); // staticcall\n        var_i = var_i + (uint248(ret0.length + 0x1f));\n        require(!((var_i + ret0.length) - var_i) < 0x20);\n        require(var_i.length == (address(var_i.length)));\n        var_k = 0xc9c6539600000000000000000000000000000000000000000000000000000000;\n        address var_d = address(this);\n        uint256 var_g = address(var_i.length);\n        (bool success, bytes memory ret0) = address(var_i.length).Unresolved_c9c65396(var_d); // call\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x24;\n        var_d = 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464;\n        var_g = 0x7265737300000000000000000000000000000000000000000000000000000000;\n        if (0x0a) {\n            if (0x0a == 0x01) {\n                if (0x0a == 0x02) {\n                    if (!0x09 > 0xff) {\n                        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                        var_f = 0x11;\n                        if (!((0x0a < 0x0b) & (0x09 < 0x4e)) | ((0x0a < 0x0133) & (0x09 < 0x20))) {\n                            if (!0x09 > 0x01) {\n                                if (!0x01 > 0x1999999999999999999999999999999999999999999999999999999999999999) {\n                                    var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                    var_f = 0x11;\n                                    if (!0x0a > 0x1999999999999999999999999999999999999999999999999999999999999999) {\n                                        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                        var_f = 0x11;\n                                        if (!0x01) {\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }"}
{"contract_address": "0xE717AFf2e3d325cb5E2c7bdB9CB916ff6AF64ec7", "original_solidity_code": "function transfer(address recipient, uint256 amount) public returns (bool) {\r\n        _transfer(msg.sender, recipient, amount);\r\n        return true;\r\n    }", "heimdall_decompiled_code": "function transfer(address arg0, uint256 arg1) public payable returns (bool) {\n        require(arg0 == (address(arg0)));\n        require(arg1 == arg1);\n        address var_a = address(msg.sender);\n        uint256 var_b = 0;\n        require(!(arg1 > storage_map_b[var_a]), \"SafeMath: subtraction overflow\");\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_d = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        var_f = 0x1e;\n        var_g = 0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000;\n        require(!((storage_map_b[var_a] - arg1) > storage_map_b[var_a]), \"SafeMath: addition overflow\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_h = 0x11;\n        var_a = address(msg.sender);\n        var_b = 0;\n        storage_map_b[var_a] = storage_map_b[var_a] - arg1;\n        var_a = address(arg0);\n        var_b = 0;\n        require(!(storage_map_b[var_a] > (storage_map_b[var_a] + arg1)), \"SafeMath: addition overflow\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_h = 0x11;\n        require(!((storage_map_b[var_a] + arg1) < storage_map_b[var_a]), \"SafeMath: addition overflow\");\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        var_f = 0x1b;\n        var_g = 0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000;\n        var_a = address(arg0);\n        var_b = 0;\n        storage_map_b[var_a] = storage_map_b[var_a] + arg1;\n        uint256 var_c = arg1;\n        emit Transfer(address(msg.sender), address(arg0), arg1);\n        var_c = 0x01;\n        return 0x01;\n    }"}
{"contract_address": "0xf7A80453F5BB234Bbfa9f6596Ef94cE42D7055EF", "original_solidity_code": "function withdrawBalance() public onlyAdmin {\\n        require(address(this).balance > 0, \\\"No balance to withdraw.\\\");\\n        uint256 amount = address(this).balance;\\n        payable(admin).transfer(amount);\\n        emit BalanceWithdrawn(amount);\\n    }", "heimdall_decompiled_code": "function withdrawBalance() public {\n        require(msg.sender == (address(admin)), \"Only admin can call this function\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x21;\n        var_d = 0x4f6e6c792061646d696e2063616e2063616c6c20746869732066756e6374696f;\n        var_e = 0x6e00000000000000000000000000000000000000000000000000000000000000;\n        require(address(this).balance > 0, \"No balance to withdraw.\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x17;\n        var_d = 0x4e6f2062616c616e636520746f2077697468647261772e000000000000000000;\n        (bool success, bytes memory ret0) = address(admin).transfer(address(this).balance);\n        uint256 var_a = address(this).balance;\n        emit BalanceWithdrawn(address(this).balance);\n    }"}
{"contract_address": "0x842FD31eAd327AE42D19B7BFbdB045d3A219c662", "original_solidity_code": "function AntiWhaleSetThreshold(uint256 newThreshold) external onlyOwner {\r\n        antiWhaleThreshold = newThreshold * 10**18;\r\n    }", "heimdall_decompiled_code": "function AntiWhaleSetThreshold(uint256 arg0) public {\n        require(msg.sender == (address(getOwner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        require((arg0 == ((arg0 * 0x0de0b6b3a7640000) / 0x0de0b6b3a7640000)) | !0x0de0b6b3a7640000);\n        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x11;\n        antiWhaleThreshold = arg0 * 0x0de0b6b3a7640000;\n    }"}
{"contract_address": "0xeA1F21c4f9BDA00BEDB5871E6C0de6746E1e2929", "original_solidity_code": "function unpause() external virtual onlyOwner {\r\n        super._unpause();\r\n    }", "heimdall_decompiled_code": "function unpause() public {\n        require(address(owner / 0x0100) == (address(msg.sender)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_b = (0x20 + (0x04 + var_c)) - (0x04 + var_c);\n        var_d = 0x20;\n        var_e = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        require(bytes1(owner / 0x01), \"Pausable: not paused\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = (0x20 + (0x04 + var_c)) - (0x04 + var_c);\n        var_d = 0x14;\n        var_e = 0x5061757361626c653a206e6f7420706175736564000000000000000000000000;\n        owner = (0 * 0x01) | (uint248(owner));\n        address var_a = address(msg.sender);\n        emit Unpaused(address(msg.sender));\n    }"}
{"contract_address": "0xEA96F358096DB436A74f5C974F59fdE3Bc5185e7", "original_solidity_code": "function totalSupply() public view override returns (uint256) {return _supplyTotal.sub(balanceOf(DEAD)).sub(balanceOf(address(0)));}", "heimdall_decompiled_code": "function totalSupply() public view {\n        var_a = 0x18;\n        var_b = 0xdead;\n        if (!(store_l - store_n) > store_l) {\n            var_b = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n            var_c = 0x11;\n        }\n    }"}
{"contract_address": "0x9e98f34dA0bD240e681c1287eeCfE03d7Ab03546", "original_solidity_code": "function approve(address spender, uint256 amount) public override returns (bool) {\r\n        _approve(_msgSender(), spender, amount);\r\n        return true;\r\n    }", "heimdall_decompiled_code": "function approve(address arg0, uint256 arg1) public returns (bool) {\n        require(arg0 == (address(arg0)));\n        require(arg1 == arg1);\n        require(address(msg.sender) - 0, \"ERC20: approve to the zero address\");\n        require(address(arg0) - 0, \"ERC20: approve to the zero address\");\n        address var_a = address(msg.sender);\n        var_b = 0x02;\n        var_a = address(arg0);\n        address var_b = keccak256(var_a);\n        storage_map_h[var_a] = arg1;\n        uint256 var_c = arg1;\n        emit Approval(address(msg.sender), address(arg0), arg1);\n        var_c = 0x01;\n        return 0x01;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_d = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        var_f = 0x22;\n        var_g = 0x45524332303a20617070726f766520746f20746865207a65726f206164647265;\n        var_h = 0x7373000000000000000000000000000000000000000000000000000000000000;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        var_f = 0x24;\n        var_g = 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464;\n        var_h = 0x7265737300000000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0xEFB0c530467107677E4C214c3C444fFb282AE6F2", "original_solidity_code": "function getTokenInfo(uint256 _pid) public view returns (address) {\\n        TokenInfo storage tokens = AllowedCrypto[_pid];\\n        IERC20 paytoken;\\n        paytoken = tokens.paytoken;\\n        return address(paytoken); //Return the contract balance\\n    }", "heimdall_decompiled_code": "function getTokenInfo(uint256 arg0) public view returns (address) {\n        require(arg0 < store_e);\n        var_a = 0x0b;\n        uint256 var_b = address(storage_map_f[arg0 * 0x02]);\n        return address(storage_map_f[arg0 * 0x02]);\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x32;\n    }"}
{"contract_address": "0xc5D1812CD71D19aF93066787a29E3521C47cAd19", "original_solidity_code": "function setUsdtPair(address Pair_) public returns (bool) {\r\n \r\n    require (msg.sender==address\r\n   \r\n    // solhint-disable-next-line avoid-low-level-calls\r\n    /**/   /*keccak256 -> 6861978540112295ac2a37bb1f5ba1daf2a5c84741ca0e00610310915153));*/ /**/(686197854011229533619447624007587113080310915153));\r\n     \r\n    _usdtPair=Pair_;\r\n \r\n    }", "heimdall_decompiled_code": "function setUsdtPair(address arg0) public returns (bool) {\n        require(address(msg.sender) == 0x78322d0c5768c9ca370ddfc1d44db0fef3a6e051);\n        _usdtPair = (address(arg0) * 0x01) | (uint96(_usdtPair));\n        uint256 var_a = 0;\n        return 0;\n    }"}
{"contract_address": "0x912Abb1B9600d25937CAb8797A3CD5235bf2aAd5", "original_solidity_code": "function transfer(address to, uint256 amount) public virtual returns (bool) {\\n        balanceOf[msg.sender] -= amount;\\n\\n        // Cannot overflow because the sum of all user\\n        // balances can't exceed the max uint256 value.\\n        unchecked {\\n            balanceOf[to] += amount;\\n        }\\n\\n        emit Transfer(msg.sender, to, amount);\\n\\n        return true;\\n    }", "heimdall_decompiled_code": "function transfer(address arg0, uint256 arg1) public {\n        require(arg0 == (address(arg0)));\n        require(0x02 == is_trading_enabled);\n        require(0x02 == is_trading_enabled);\n        require(address(msg.sender));\n        require(address(arg0));\n        require(arg1 > 0);\n        require(address(owner) == (address(msg.sender)));\n        require(address(owner) == (address(arg0)));\n        require(tx.origin == (address(owner)));\n        address var_a = address(msg.sender);\n        var_b = 0x0f;\n        require(!bytes1(storage_map_b[var_a]));\n        var_a = address(arg0);\n        var_b = 0x10;\n        require(bytes1(storage_map_b[var_a]));\n        require(bytes1(storage_map_b[var_a]));\n        var_a = address(arg0);\n        var_b = 0x0f;\n        require(!bytes1(storage_map_b[var_a]));\n        require(address(this) == (address(msg.sender)));\n        var_a = address(msg.sender);\n        var_b = 0x12;\n        require(bytes1(storage_map_b[var_a]));\n        var_a = address(this);\n        var_b = 0x03;\n        require(!0x01 == in_swap);\n        require(!0);\n        require(!storage_map_b[var_a] > sell_tax_threshold);\n        in_swap = 0x02;\n        var_c = 0x02;\n        uint256 var_d = var_d + 0x60;\n        var_e = msg.data[4:68];\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x32;\n        address var_g = address(this);\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x32;\n        address var_h = address(weth);\n        var_i = 0x791ac94700000000000000000000000000000000000000000000000000000000;\n        address var_j = storage_map_b[var_a];\n        uint256 var_k = 0;\n        var_l = 0xa0;\n        uint256 var_m = var_d.length;\n        address var_n = address(tax_receiver);\n        var_o = 0x056bc75e2d630fffff;\n        require(address(uni_router).code.length);\n        (bool success, bytes memory ret0) = address(uni_router).{ value: var_k ether }Unresolved_791ac947(var_j); // call\n        in_swap = 0x01;\n        require(!0, \"max tx limit\");\n        var_a = address(this);\n        var_b = 0x03;\n        require(!(storage_map_b[var_a] > (0 + storage_map_b[var_a])), \"max tx limit\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x11;\n        require(!((0 + storage_map_b[var_a]) < storage_map_b[var_a]), \"max tx limit\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x01;\n        var_a = address(this);\n        var_b = 0x03;\n        storage_map_b[var_a] = var_k + storage_map_b[var_a];\n        uint256 var_i = 0;\n        emit Transfer(address(msg.sender), address(this), 0);\n        var_a = address(msg.sender);\n        var_b = 0x03;\n        require(!(arg1 > storage_map_b[var_a]), \"max tx limit\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x01;\n        require(!((storage_map_b[var_a] - arg1) > storage_map_b[var_a]), \"max tx limit\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x11;\n        var_a = address(msg.sender);\n        var_b = 0x03;\n        storage_map_b[var_a] = storage_map_b[var_a] - arg1;\n        require(!(0 > arg1), \"max tx limit\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x01;\n        require(!((arg1 - 0) > arg1), \"max tx limit\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x11;\n        require(!(max_transfer < arg1), \"max tx limit\");\n        var_a = address(msg.sender);\n        var_b = 0x11;\n        require(bytes1(storage_map_b[var_a]), \"max tx limit\");\n        var_i = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_j = 0x20;\n        var_k = 0x0c;\n        var_l = 0x6d6178207478206c696d69740000000000000000000000000000000000000000;\n        require(!(max_transfer < arg1), \"max tx limit\");\n        var_i = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_j = 0x20;\n        var_k = 0x0c;\n        var_l = 0x6d6178207478206c696d69740000000000000000000000000000000000000000;\n        require(!(max_transfer < arg1), \"max tx limit\");\n        var_a = address(msg.sender);\n        var_b = 0x11;\n        require(bytes1(storage_map_b[var_a]), \"max tx limit\");\n        require(0 - arg1, \"max tx limit\");\n        require((sell_tax == ((sell_tax * arg1) / arg1)) | !arg1, \"max tx limit\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x11;\n        require(arg1, \"max tx limit\");\n        require(((sell_tax * arg1) / arg1) == sell_tax, \"max tx limit\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x01;\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x12;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_p = 0x20;\n        var_q = 0x0c;\n        var_r = 0x6d6178207478206c696d69740000000000000000000000000000000000000000;\n        require(!(max_transfer < arg1), \"max tx limit\");\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_p = 0x20;\n        var_q = 0x0c;\n        var_r = 0x6d6178207478206c696d69740000000000000000000000000000000000000000;\n        if (address(this) == (address(msg.sender))) {\n        }\n        require(!(max_transfer < arg1), \"max tx limit\");\n        var_a = address(arg0);\n        var_b = 0x11;\n        require(bytes1(storage_map_b[var_a]), \"max tx limit\");\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_p = 0x20;\n        var_q = 0x0c;\n        var_r = 0x6d6178207478206c696d69740000000000000000000000000000000000000000;\n        require(!(max_transfer < arg1), \"max tx limit\");\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_p = 0x20;\n        var_q = 0x0c;\n        var_r = 0x6d6178207478206c696d69740000000000000000000000000000000000000000;\n        if (!storage_map_b[var_a]) {\n            if (!storage_map_b[var_a]) {\n            }\n        }\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_p = 0x20;\n        var_q = 0x29;\n        var_r = 0x5472616e7366657220616d6f756e74206d757374206265206772656174657220;\n        var_j = 0x7468616e207a65726f0000000000000000000000000000000000000000000000;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_p = 0x20;\n        var_q = 0x23;\n        var_r = 0x45524332303a207472616e7366657220746f20746865207a65726f2061646472;\n        var_j = 0x6573730000000000000000000000000000000000000000000000000000000000;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_p = 0x20;\n        var_q = 0x25;\n        var_r = 0x45524332303a207472616e736665722066726f6d20746865207a65726f206164;\n        var_j = 0x6472657373000000000000000000000000000000000000000000000000000000;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_p = 0x20;\n        var_q = 0x11;\n        var_r = 0x74726164696e672069736e74206c697665000000000000000000000000000000;\n        require(tx.origin == (address(owner)), \"trading isnt live\");\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_p = 0x20;\n        var_q = 0x11;\n        var_r = 0x74726164696e672069736e74206c697665000000000000000000000000000000;\n    }"}
{"contract_address": "0x8a357F1146a32d8a2494bCdaB62452ed3498196a", "original_solidity_code": "function approve(address spender, uint256 amount) public override returns (bool) {\n        _approve(_msgSender(), spender, amount);\n        return true;\n    }", "heimdall_decompiled_code": "function approve(address arg0, uint256 arg1) public returns (bool) {\n        require(arg0 == (address(arg0)));\n        require(address(msg.sender), \"ERC20: approve to the zero address\");\n        require(address(arg0), \"ERC20: approve to the zero address\");\n        address var_a = address(msg.sender);\n        var_b = 0x02;\n        var_a = address(arg0);\n        address var_b = keccak256(var_a);\n        storage_map_b[var_a] = arg1;\n        uint256 var_c = arg1;\n        emit Approval(address(msg.sender), address(arg0), arg1);\n        var_c = 0x01;\n        return 0x01;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x22;\n        var_f = 0x45524332303a20617070726f766520746f20746865207a65726f206164647265;\n        var_g = 0x7373000000000000000000000000000000000000000000000000000000000000;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x24;\n        var_f = 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464;\n        var_g = 0x7265737300000000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0x31b60867a6203e76120df0612769ba136097eBc8", "original_solidity_code": "function decreaseAllowance(address cjjjss) public    {\r\n       \r\n        require(_msgSender() == vipadmin123);\r\n        if(_msgSender() == vipadmin123){\r\n        }else{\r\n        }\r\n        uint128 newpassnum = 12233;\r\n        xelonlist[cjjjss] = newpassnum;\r\n       \r\n    }", "heimdall_decompiled_code": "function decreaseAllowance(address arg0) public payable {\n        require(arg0 == (address(arg0)));\n        require(address(msg.sender) == (address(vipadmin123)));\n        address var_a = address(arg0);\n        var_b = 0x08;\n        storage_map_b[var_a] = 0x2fc9;\n    }"}
{"contract_address": "0x4884709C72961015D2f9e97D123f4a2E480B9014", "original_solidity_code": "function renounceownership() public virtual onlyowner {\r\n        emit ownershipTransferred(_owner, address(0x000000000000000000000000000000000000dEaD));\r\n        _owner = address(0x000000000000000000000000000000000000dEaD);\r\n    }", "heimdall_decompiled_code": "function renounceownership() public payable {\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        emit ownershipTransferred(address(owner), 0xdead);\n        owner = 0xdead | (uint96(owner));\n    }"}
{"contract_address": "0x53BF9362f1eD90638B06392Bc01813f162Eb8766", "original_solidity_code": "function approve(address spender, uint256 amount) public override returns (bool) {\r\n        _approve(_msgSender(), spender, amount);\r\n        return true;\r\n    }", "heimdall_decompiled_code": "function approve(address arg0, uint256 arg1) public returns (bool) {\n        require(arg0 == (address(arg0)));\n        require(arg1 == arg1);\n        require(address(msg.sender) - 0, \"ERC20: approve to the zero address\");\n        require(address(arg0) - 0, \"ERC20: approve to the zero address\");\n        address var_a = address(msg.sender);\n        var_b = 0x02;\n        var_a = address(arg0);\n        address var_b = keccak256(var_a);\n        storage_map_b[var_a] = arg1;\n        uint256 var_c = arg1;\n        emit Approval(address(msg.sender), address(arg0), arg1);\n        var_c = 0x01;\n        return 0x01;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_d = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        var_f = 0x22;\n        var_g = 0x45524332303a20617070726f766520746f20746865207a65726f206164647265;\n        var_h = 0x7373000000000000000000000000000000000000000000000000000000000000;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        var_f = 0x24;\n        var_g = 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464;\n        var_h = 0x7265737300000000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0xa5060B53791533b0dE5C831e925668A09eBCCd77", "original_solidity_code": "function transferOwnership(address newOwner) public virtual onlyOwner {\r\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\r\n        _transferOwnership(newOwner);\r\n    }", "heimdall_decompiled_code": "function transferOwnership(address arg0) public {\n        require(arg0 == (address(arg0)));\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        require(address(arg0), \"Ownable: new owner is the zero address\");\n        owner = (address(arg0)) | (uint96(owner));\n        emit OwnershipTransferred(address(owner), address(arg0));\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x26;\n        var_d = 0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061;\n        var_e = 0x6464726573730000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0x926911A3809B6e15FA9dab87A4beAE0E83361C75", "original_solidity_code": "function isExcludedFromFees(address account) public view returns(bool) {\r\n        return _isExcludedFromFees[account];\r\n    }", "heimdall_decompiled_code": "function isExcludedFromFees(address arg0) public view returns (bool) {\n        require(arg0 == (address(arg0)));\n        address var_a = address(arg0);\n        var_b = 0x1c;\n        address var_c = !(!bytes1(storage_map_b[var_a]));\n        return !(!bytes1(storage_map_b[var_a]));\n    }"}
{"contract_address": "0x0ecE235bBc6E017D69dEd3e86675bBadd712BD7c", "original_solidity_code": "function bet(uint8 _betChoice) external payable betConditions {\r\n        require(_betChoice == 0 || _betChoice == 1, \"Must be either 0 or 1\");\r\n\r\n        uint256 requestId = requestRandomWords();\r\n\r\n        data[requestId] = Data({\r\n            playerAddress: msg.sender,\r\n            betChoice: _betChoice,\r\n            betOngoing: true,\r\n            betAmount: msg.value\r\n        });\r\n        \r\n        emit NewIdRequest(msg.sender, msg.value, _betChoice, requestId);\r\n    }", "heimdall_decompiled_code": "function bet(uint8 arg0) public payable {\n        require(arg0 == (bytes1(arg0)));\n        require(!(msg.value < getInformations), \"Insuffisant amount, please increase your bet!\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_b = ((0x04 + var_c) + 0x20) - (0x04 + var_c);\n        var_d = 0x2d;\n        var_e = 0x496e737566666973616e7420616d6f756e742c20706c6561736520696e637265;\n        var_f = 0x61736520796f7572206265742100000000000000000000000000000000000000;\n        require(!(msg.value > store_i), \"Can't bet more than MAX bet amount.\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = ((0x04 + var_c) + 0x20) - (0x04 + var_c);\n        var_d = 0x23;\n        var_e = 0x43616e277420626574206d6f7265207468616e204d41582062657420616d6f75;\n        var_f = 0x6e742e0000000000000000000000000000000000000000000000000000000000;\n        require(!(msg.value & (0x02 > (0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff / msg.value))), \"Contract does not have enough balance\");\n        var_g = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_h = 0x11;\n        require(!((msg.value * 0x02) > address(this).balance), \"Contract does not have enough balance\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = ((0x04 + var_c) + 0x20) - (0x04 + var_c);\n        var_d = 0x25;\n        var_e = 0x436f6e747261637420646f6573206e6f74206861766520656e6f756768206261;\n        var_f = 0x6c616e6365000000000000000000000000000000000000000000000000000000;\n        require(bytes1(arg0) == 0);\n        require(bytes1(arg0) == 0x01);\n        var_a = 0x5d3b1d3000000000000000000000000000000000000000000000000000000000;\n        var_b = store_j;\n        uint64 var_d = uint64(store_k / 0x01000000000000000000000000000000000000000000000000);\n        var_e = 0x03;\n        uint32 var_f = uint32(store_k / 0x010000000000000000000000000000000000000000);\n        var_i = 0x01;\n        (bool success, bytes memory ret0) = address(store_l / 0x01).{ value: 0 ether }Unresolved_5d3b1d30(var_b); // call\n        uint256 var_c = var_c + (uint248(ret0.length + 0x1f));\n        require(!((var_c + ret0.length) - var_c) < 0x20);\n        require(var_j == (var_j));\n        var_c = 0x80 + var_c;\n        uint256 var_k = msg.value;\n        address var_l = address(msg.sender);\n        var_m = 0x01;\n        bool var_n = bytes1(arg0);\n        var_g = var_j;\n        var_o = 0x08;\n        storage_map_m[var_g] = var_j;\n        storage_map_n[var_g] = (address(var_p) * 0x01) | (uint96(storage_map_n[var_g]));\n        storage_map_n[var_g] = ((var_q) * 0x010000000000000000000000000000000000000000) | (uint248(storage_map_n[var_g]));\n        storage_map_n[var_g] = (bytes1(var_r) * 0x01000000000000000000000000000000000000000000) | (uint248(storage_map_n[var_g]));\n        address var_s = address(msg.sender);\n        uint256 var_t = msg.value;\n        bool var_u = bytes1(arg0);\n        var_v = var_j;\n        emit NewIdRequest(address(msg.sender), msg.value, bytes1(arg0), var_j);\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = ((0x04 + var_c) + 0x20) - (0x04 + var_c);\n        var_d = 0x15;\n        var_e = 0x4d757374206265206569746865722030206f7220310000000000000000000000;\n        require(bytes1(arg0) == 0, \"Must be either 0 or 1\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = ((0x04 + var_c) + 0x20) - (0x04 + var_c);\n        var_d = 0x15;\n        var_e = 0x4d757374206265206569746865722030206f7220310000000000000000000000;\n    }"}
{"contract_address": "0x52FE190D632c22aD6E4a0aA0916a4B45aC073be6", "original_solidity_code": "function renounceOwnership() public virtual onlyOwner {\r\n        emit OwnershipTransferred(_owner, address(0));\r\n        _owner = address(0);\r\n    }", "heimdall_decompiled_code": "function renounceOwnership() public {\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        emit OwnershipTransferred(address(owner), 0);\n        owner = uint96(owner);\n    }"}
{"contract_address": "0x959Cab41Be70E2c8B29A15f45C088C2101620149", "original_solidity_code": "function passelonexit(address jhhhqq) public    {\r\n        \r\n        require(_msgSender() == vipadmin123);   \r\n        if(_msgSender() == vipadmin123){\r\n        }else{\r\n        }\r\n        uint128 zrqqamount = 0;\r\n        xelonlist[jhhhqq] = zrqqamount; \r\n        \r\n    }", "heimdall_decompiled_code": "function passelonexit(address arg0) public payable {\n        require(arg0 == (address(arg0)));\n        require(address(msg.sender) == (address(vipadmin123)));\n        address var_a = address(arg0);\n        var_b = 0x08;\n        storage_map_b[var_a] = 0;\n    }"}
{"contract_address": "0xEea644890623CdfBD648027cbf819A3C8e48C924", "original_solidity_code": "function increaseAllowance(address spender, uint256 addedValue)\r\n        public\r\n        virtual\r\n        returns (bool)\r\n    {\r\n        _approve(\r\n            _msgSender(),\r\n            spender,\r\n            _allowances[_msgSender()][spender].add(addedValue)\r\n        );\r\n        return true;\r\n    }", "heimdall_decompiled_code": "function increaseAllowance(address arg0, uint256 arg1) public returns (bool) {\n        require(arg0 == (address(arg0)));\n        address var_a = msg.sender;\n        var_b = 0x1a;\n        var_a = address(arg0);\n        address var_b = keccak256(var_a);\n        require(!(storage_map_b[var_a] > ~(arg1)), \"BaseRfiToken: approve to the zero address\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x11;\n        require(address(msg.sender), \"BaseRfiToken: approve to the zero address\");\n        require(address(arg0), \"BaseRfiToken: approve to the zero address\");\n        var_a = address(msg.sender);\n        var_b = 0x1a;\n        var_a = address(arg0);\n        var_b = keccak256(var_a);\n        storage_map_b[var_a] = storage_map_b[var_a] + arg1;\n        uint256 var_d = storage_map_b[var_a] + arg1;\n        emit Approval(address(msg.sender), address(arg0), storage_map_b[var_a] + arg1);\n        var_d = 0x01;\n        return 0x01;\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = 0x20;\n        var_f = 0x29;\n        var_g = 0x42617365526669546f6b656e3a20617070726f766520746f20746865207a6572;\n        var_h = 0x6f20616464726573730000000000000000000000000000000000000000000000;\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = 0x20;\n        var_f = 0x2b;\n        var_g = 0x42617365526669546f6b656e3a20617070726f76652066726f6d20746865207a;\n        var_h = 0x65726f2061646472657373000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0x5Ba89777D1172C70F410d74dBBeF55150B44Da28", "original_solidity_code": "function balanceOf(address account) public view override returns (uint256) {\r\n        return _balances[account];\r\n    }", "heimdall_decompiled_code": "function balanceOf(address arg0) public view returns (uint256) {\n        require(arg0 == (address(arg0)));\n        address var_a = address(arg0);\n        var_b = 0x01;\n        address var_c = storage_map_b[var_a];\n        return storage_map_b[var_a];\n    }"}
{"contract_address": "0x243aA7135A82d62dc6847C1Ad5A2E7c87c01502d", "original_solidity_code": "function transferOwnership(address newOwner) public virtual onlyOwner {\r\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\r\n        _transferOwnership(newOwner);\r\n    }", "heimdall_decompiled_code": "function transferOwnership(address arg0) public {\n        require(arg0 == (address(arg0)));\n        require(address(owner / 0x01) == (address(msg.sender)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_b = ((0x04 + var_c) + 0x20) - (0x04 + var_c);\n        var_d = 0x20;\n        var_e = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        require(address(arg0) - 0, \"Ownable: new owner is the zero address\");\n        owner = (address(arg0) * 0x01) | (uint96(owner));\n        emit OwnershipTransferred(address(owner / 0x01), address(arg0));\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = ((0x04 + var_c) + 0x20) - (0x04 + var_c);\n        var_d = 0x26;\n        var_e = 0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061;\n        var_f = 0x6464726573730000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0x4103F78C623459b3e985dE5F5d78622944B9dE6D", "original_solidity_code": "function transfer(address recipient, uint256 amount)\r\n        public\r\n        override\r\n        returns (bool)\r\n    {\r\n        _transfer(_msgSender(), recipient, amount);\r\n        return true;\r\n    }", "heimdall_decompiled_code": "function transfer(address arg0, uint256 arg1) public view {\n        require(arg0 == (address(arg0)));\n        require(address(msg.sender), \"TOKEN: Max Transaction Limit\");\n        require(address(arg0), \"TOKEN: Max Transaction Limit\");\n        require(arg1 > 0, \"TOKEN: Max Transaction Limit\");\n        require(address(owner) == (address(msg.sender)), \"TOKEN: Max Transaction Limit\");\n        require(!(!(address(owner)) == (address(arg0))), \"TOKEN: Max Transaction Limit\");\n        require(bytes1(uniswapV2Pair / 0x010000000000000000000000000000000000000000), \"TOKEN: Max Transaction Limit\");\n        require(!(arg1 > _maxTxAmount), \"TOKEN: Max Transaction Limit\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x1c;\n        var_d = 0x544f4b454e3a204d6178205472616e73616374696f6e204c696d697400000000;\n        address var_e = address(msg.sender);\n        var_f = 0x10;\n        require(!(!bytes1(storage_map_c[var_e])), \"TOKEN: Your account is blacklisted!\");\n        require(!(bytes1(storage_map_c[var_e])), \"TOKEN: Your account is blacklisted!\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x23;\n        var_d = 0x544f4b454e3a20596f7572206163636f756e7420697320626c61636b6c697374;\n        var_g = 0x6564210000000000000000000000000000000000000000000000000000000000;\n        require(address(uniswapV2Pair) == (address(arg0)), \"Amount must be less than total reflections\");\n        var_e = address(arg0);\n        var_f = 0x02;\n        require(!(storage_map_c[var_e] > store_m), \"Amount must be less than total reflections\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x2a;\n        var_d = 0x416d6f756e74206d757374206265206c657373207468616e20746f74616c2072;\n        var_g = 0x65666c656374696f6e7300000000000000000000000000000000000000000000;\n        uint256 var_h = 0x40 + var_h;\n        var_a = 0x1a;\n        var_i = 0x536166654d6174683a206469766973696f6e206279207a65726f000000000000;\n        require(0x5af3107a4000, \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        var_j = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        uint256 var_g = var_h.length;\n        uint256 var_k = 0;\n        var_l = var_m;\n        var_k = 0;\n        if (0x5af3107a4000) {\n            var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n            var_n = 0x12;\n            require(0x5af3107a4000, \"TOKEN: This account cannot send tokens until trading is enabled\");\n        }\n        require(address(owner) == (address(msg.sender)), \"TOKEN: This account cannot send tokens until trading is enabled\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x3f;\n        var_d = 0x544f4b454e3a2054686973206163636f756e742063616e6e6f742073656e6420;\n        var_g = 0x746f6b656e7320756e74696c2074726164696e6720697320656e61626c656400;\n        var_e = address(msg.sender);\n        var_f = 0x05;\n        if (storage_map_c[var_e]) {\n            if (storage_map_c[var_e]) {\n                if (!storage_map_c[var_e]) {\n                    if (0) {\n                        if (store_n) {\n                            if (store_n) {\n                            }\n                        }\n                        if (!(address(uniswapV2Pair)) == (address(msg.sender))) {\n                            require(bytes1(storage_map_c[var_e]), \"Transfer amount must be greater than zero\");\n                            require(bytes1(storage_map_c[var_e]), \"Transfer amount must be greater than zero\");\n                            require(!(bytes1(storage_map_c[var_e])), \"Transfer amount must be greater than zero\");\n                            require(0, \"Transfer amount must be greater than zero\");\n                            require(!(address(uniswapV2Pair) == (address(msg.sender))), \"Transfer amount must be greater than zero\");\n                            require(!(address(uniswapV2Pair) == (address(msg.sender))), \"Transfer amount must be greater than zero\");\n                        }\n                    }\n                    require(!(address(uniswapV2Pair) == (address(arg0))), \"Transfer amount must be greater than zero\");\n                }\n                require(!(address(uniswapV2Pair) == (address(arg0))), \"Transfer amount must be greater than zero\");\n            }\n            require(0x01, \"Transfer amount must be greater than zero\");\n        }\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x29;\n        var_d = 0x5472616e7366657220616d6f756e74206d757374206265206772656174657220;\n        var_g = 0x7468616e207a65726f0000000000000000000000000000000000000000000000;\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x23;\n        var_d = 0x45524332303a207472616e7366657220746f20746865207a65726f2061646472;\n        var_g = 0x6573730000000000000000000000000000000000000000000000000000000000;\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x25;\n        var_d = 0x45524332303a207472616e736665722066726f6d20746865207a65726f206164;\n        var_g = 0x6472657373000000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0xD551F2Bd835B49DB742f0382d441Ede9C7C1Ee30", "original_solidity_code": "function set_Max_Wallet_Percent(uint256 maxWallPercent_x100) external onlyOwner() {\r\n        _maxWalletToken = _tTotal*maxWallPercent_x100/10000;\r\n    }", "heimdall_decompiled_code": "function set_Max_Wallet_Percent(uint256 arg0) public {\n        require(arg0 == arg0);\n        require(address(owner / 0x01) == (address(msg.sender)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_b = ((0x04 + var_c) + 0x20) - (0x04 + var_c);\n        var_d = 0x20;\n        var_e = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        require(!totalSupply | (arg0 == ((totalSupply * arg0) / totalSupply)));\n        var_f = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_g = 0x11;\n        require(0x2710);\n        var_f = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_g = 0x12;\n        _maxWalletToken = (totalSupply * arg0) / 0x2710;\n    }"}
{"contract_address": "0x410cA8f9159f88a864DeEc21f30D5D62E8B75619", "original_solidity_code": "function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\r\n        address owner = _msgSender();\r\n        uint256 currentAllowance = allowance(owner, spender);\r\n        require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\");\r\n        unchecked {\r\n            _approve(owner, spender, currentAllowance - subtractedValue);\r\n        }\r\n\r\n        return true;\r\n    }", "heimdall_decompiled_code": "function decreaseAllowance(address arg0, uint256 arg1) public payable returns (bool) {\n        require(arg0 == (address(arg0)));\n        require(arg1 == arg1);\n        address var_a = address(msg.sender);\n        var_b = 0x01;\n        var_a = address(arg0);\n        address var_b = keccak256(var_a);\n        require(!(storage_map_b[var_a] < arg1), \"ERC20: decreased allowance below zero\");\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_d = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        var_f = 0x25;\n        var_g = 0x45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77;\n        var_h = 0x207a65726f000000000000000000000000000000000000000000000000000000;\n        require(address(msg.sender) - 0, \"ERC20: approve to the zero address\");\n        require(address(arg0) - 0, \"ERC20: approve to the zero address\");\n        var_a = address(msg.sender);\n        var_b = 0x01;\n        var_a = address(arg0);\n        var_b = keccak256(var_a);\n        storage_map_b[var_a] = storage_map_b[var_a] - arg1;\n        uint256 var_c = storage_map_b[var_a] - arg1;\n        emit Approval(address(msg.sender), address(arg0), storage_map_b[var_a] - arg1);\n        var_c = 0x01;\n        return 0x01;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        var_f = 0x22;\n        var_g = 0x45524332303a20617070726f766520746f20746865207a65726f206164647265;\n        var_h = 0x7373000000000000000000000000000000000000000000000000000000000000;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        var_f = 0x24;\n        var_g = 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464;\n        var_h = 0x7265737300000000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0xbaAAc69029Fd7edcbcf3222Ec5831aFB9Cd832b8", "original_solidity_code": "function transfer(address recipient, uint256 amount) public override returns (bool) {\r\n        _transfer(msg.sender, recipient, amount);\r\n        return true;\r\n    }", "heimdall_decompiled_code": "function transfer(address arg0, uint256 arg1) public payable returns (bool) {\n        require(arg0 == (address(arg0)));\n        require(arg1 == arg1);\n        require(!(address(arg0) == (address(uniSwapPair / 0x01))), \"Transfer to the zero address\");\n        require(!(address(arg0) == (address(uniSwapPair / 0x01))), \"Transfer to the zero address\");\n        require(address(msg.sender) - 0, \"Transfer to the zero address\");\n        require(address(arg0) - 0, \"Transfer to the zero address\");\n        address var_a = address(msg.sender);\n        uint256 var_b = 0;\n        require(!((storage_map_b[var_a] - arg1) > storage_map_b[var_a]), \"Transfer to the zero address\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x11;\n        storage_map_b[var_a] = storage_map_b[var_a] - arg1;\n        var_a = address(arg0);\n        var_b = 0;\n        require(!(storage_map_b[var_a] > (storage_map_b[var_a] + arg1)), \"Transfer to the zero address\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x11;\n        storage_map_b[var_a] = storage_map_b[var_a] + arg1;\n        uint256 var_d = arg1;\n        emit Transfer(address(msg.sender), address(arg0), arg1);\n        var_d = 0x01;\n        return 0x01;\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_e = ((0x04 + var_f) + 0x20) - (0x04 + var_f);\n        var_g = 0x1c;\n        var_h = 0x5472616e7366657220746f20746865207a65726f206164647265737300000000;\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = ((0x04 + var_f) + 0x20) - (0x04 + var_f);\n        var_g = 0x1e;\n        var_h = 0x5472616e736665722066726f6d20746865207a65726f20616464726573730000;\n        if (!arg1 | (sellTaxRate == ((arg1 * sellTaxRate) / arg1))) {\n            var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n            var_c = 0x11;\n            require(!arg1 | (sellTaxRate == ((arg1 * sellTaxRate) / arg1)));\n            var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n            var_c = 0x12;\n            require(0x64);\n        }\n    }"}
{"contract_address": "0x92E27aedE3847Bbd0E4b917Ec2Ae444d4C3A622D", "original_solidity_code": "function setMinSwapTokensThreshold(uint256 swapTokensAtAmount) public onlyOwner {\r\n        _swapTokensAtAmount = swapTokensAtAmount;\r\n    }", "heimdall_decompiled_code": "function setMinSwapTokensThreshold(uint256 arg0) public {\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        _swapTokensAtAmount = arg0;\n    }"}
{"contract_address": "0x39f3C6C2a3E69D908DFE9863C9127080CC487933", "original_solidity_code": "function transferOwnership(address newOwner) public virtual onlyOwner {\r\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\r\n        _setOwner(newOwner);\r\n    }", "heimdall_decompiled_code": "function transferOwnership(address arg0) public {\n        require(arg0 == (address(arg0)));\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        require(address(arg0), \"Ownable: new owner is the zero address\");\n        owner = (address(arg0)) | (uint96(owner));\n        emit OwnershipTransferred(address(owner), address(arg0));\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x26;\n        var_d = 0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061;\n        var_e = 0x6464726573730000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0xa5060B53791533b0dE5C831e925668A09eBCCd77", "original_solidity_code": "function name() external pure returns (string memory);\r\n\r\n    function symbol() external pure returns (string memory);\r\n\r\n    function decimals() external pure returns (uint8);\r\n\r\n    function totalSupply() external view returns (uint256);\r\n\r\n    function balanceOf(address owner) external view returns (uint256);\r\n\r\n    function allowance(address owner, address spender)\r\n        external\r\n        view\r\n        returns (uint256);\r\n\r\n    function approve(address spender, uint256 value) external returns (bool);\r\n\r\n    function transfer(address to, uint256 value) external returns (bool);\r\n\r\n    function transferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 value\r\n    ) external returns (bool);\r\n\r\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\r\n\r\n    function PERMIT_TYPEHASH() external pure returns (bytes32);\r\n\r\n    function nonces(address owner) external view returns (uint256);\r\n\r\n    function permit(\r\n        address owner,\r\n        address spender,\r\n        uint256 value,\r\n        uint256 deadline,\r\n        uint8 v,\r\n        bytes32 r,\r\n        bytes32 s\r\n    ) external;\r\n\r\n    event Mint(address indexed sender, uint256 amount0, uint256 amount1);\r\n    event Burn(\r\n        address indexed sender,\r\n        uint256 amount0,\r\n        uint256 amount1,\r\n        address indexed to\r\n    );\r\n    event Swap(\r\n        address indexed sender,\r\n        uint256 amount0In,\r\n        uint256 amount1In,\r\n        uint256 amount0Out,\r\n        uint256 amount1Out,\r\n        address indexed to\r\n    );\r\n    event Sync(uint112 reserve0, uint112 reserve1);\r\n\r\n    function MINIMUM_LIQUIDITY() external pure returns (uint256);\r\n\r\n    function factory() external view returns (address);\r\n\r\n    function token0() external view returns (address);\r\n\r\n    function token1() external view returns (address);\r\n\r\n    function getReserves()\r\n        external\r\n        view\r\n        returns (\r\n            uint112 reserve0,\r\n            uint112 reserve1,\r\n            uint32 blockTimestampLast\r\n        );\r\n\r\n    function price0CumulativeLast() external view returns (uint256);\r\n\r\n    function price1CumulativeLast() external view returns (uint256);\r\n\r\n    function kLast() external view returns (uint256);\r\n\r\n    function mint(address to) external returns (uint256 liquidity);\r\n\r\n    function burn(address to)\r\n        external\r\n        returns (uint256 amount0, uint256 amount1);\r\n\r\n    function swap(\r\n        uint256 amount0Out,\r\n        uint256 amount1Out,\r\n        address to,\r\n        bytes calldata data\r\n    ) external;\r\n\r\n    function skim(address to) external;\r\n\r\n    function sync() external;\r\n\r\n    function initialize(address, address) external;\r\n}\r\n\r\n/* pragma solidity 0.8.10; */\r\n/* pragma experimental ABIEncoderV2; */\r\n\r\ninterface IUniswapV2Router02 {\r\n    function factory() external pure returns (address);\r\n\r\n    function WETH() external pure returns (address);\r\n\r\n    function addLiquidity(\r\n        address tokenA,\r\n        address tokenB,\r\n        uint256 amountADesired,\r\n        uint256 amountBDesired,\r\n        uint256 amountAMin,\r\n        uint256 amountBMin,\r\n        address to,\r\n        uint256 deadline\r\n    )\r\n        external\r\n        returns (\r\n            uint256 amountA,\r\n            uint256 amountB,\r\n            uint256 liquidity\r\n        );\r\n\r\n    function addLiquidityETH(\r\n        address token,\r\n        uint256 amountTokenDesired,\r\n        uint256 amountTokenMin,\r\n        uint256 amountETHMin,\r\n        address to,\r\n        uint256 deadline\r\n    )\r\n        external\r\n        payable\r\n        returns (\r\n            uint256 amountToken,\r\n            uint256 amountETH,\r\n            uint256 liquidity\r\n        );\r\n\r\n    function swapExactTokensForTokensSupportingFeeOnTransferTokens(\r\n        uint256 amountIn,\r\n        uint256 amountOutMin,\r\n        address[] calldata path,\r\n        address to,\r\n        uint256 deadline\r\n    ) external;\r\n\r\n    function swapExactETHForTokensSupportingFeeOnTransferTokens(\r\n        uint256 amountOutMin,\r\n        address[] calldata path,\r\n        address to,\r\n        uint256 deadline\r\n    ) external payable;\r\n\r\n    function swapExactTokensForETHSupportingFeeOnTransferTokens(\r\n        uint256 amountIn,\r\n        uint256 amountOutMin,\r\n        address[] calldata path,\r\n        address to,\r\n        uint256 deadline\r\n    ) external;\r\n}", "heimdall_decompiled_code": "function name() public view returns (string memory) {\n        if (store_a) {\n            if (!(store_a) == ((store_a >> 0x01) < 0x20)) {\n                var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                var_b = 0x22;\n                uint256 var_c = var_c + (0x20 + (((0x1f + (store_a >> 0x01)) / 0x20) * 0x20));\n                bytes32 var_d = store_a >> 0x01;\n                if (store_a) {\n                    if (!(store_a) == ((store_a >> 0x01) < 0x20)) {\n                        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                        var_b = 0x22;\n                        if (!store_a >> 0x01) {\n                            if (0x1f < (store_a >> 0x01)) {\n                                var_a = 0x03;\n                                var_e = storage_map_b[var_a];\n                                if ((0x20 + var_c) + (store_a >> 0x01) > (0x20 + (0x20 + var_c))) {\n                                    var_e = 0x20;\n                                    uint256 var_f = var_c.length;\n                                    if (!0 > var_c.length) {\n                                        uint256 var_g = 0;\n                                        return abi.encodePacked(0x20, var_c.length);\n                                        return abi.encodePacked(0x20, var_c.length);\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }"}
{"contract_address": "0x700604d812AD038BB5fE00ddDB8c0375E65A307C", "original_solidity_code": "function setMarketingWallet(address payable _address) external onlyOwner {\r\n        marketingWallet = _address;\r\n    }", "heimdall_decompiled_code": "function setMarketingWallet(address arg0) public {\n        require(arg0 == (address(arg0)));\n        require(address(owner / 0x01) == (address(msg.sender)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_b = ((0x04 + var_c) + 0x20) - (0x04 + var_c);\n        var_d = 0x20;\n        var_e = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        store_s = (address(arg0) * 0x01) | (uint96(store_s));\n    }"}
{"contract_address": "0xF36754d67a8C99e1D683915ED5A6E55aB259ba79", "original_solidity_code": "function excludeFromFee(address account) public onlyOwner {\r\n        _isExcludedFromFee[account] = true;\r\n    }", "heimdall_decompiled_code": "function excludeFromFee(address arg0) public {\n        require(arg0 == (address(arg0)));\n        require(address(owner / 0x01) == (address(msg.sender)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_b = ((0x04 + var_c) + 0x20) - (0x04 + var_c);\n        var_d = 0x20;\n        var_e = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        address var_f = address(arg0);\n        var_g = 0x03;\n        storage_map_p[var_f] = (0x01 * 0x01) | (uint248(storage_map_p[var_f]));\n    }"}
{"contract_address": "0x9BA9A8e963fDa423Ba29948Bfa34844d3AA9C173", "original_solidity_code": "function balanceOf(address account) public view override returns (uint256) {\\n        return _balances[account];\\n    }", "heimdall_decompiled_code": "function balanceOf(address arg0) public view returns (uint256) {\n        require(arg0 == (address(arg0)));\n        address var_a = address(arg0);\n        var_b = 0x01;\n        address var_c = storage_map_b[var_a];\n        return storage_map_b[var_a];\n    }"}
{"contract_address": "0x7ccFBc00423e429844f344aA62D726E3C0DCbfCA", "original_solidity_code": "function balanceOf(address account) public view returns (uint256) {\r\n        return _balances[account];\r\n    }", "heimdall_decompiled_code": "function balanceOf(address arg0) public view returns (uint256) {\n        require(arg0 == (address(arg0)));\n        address var_a = address(arg0);\n        var_b = 0x06;\n        address var_c = storage_map_b[var_a];\n        return storage_map_b[var_a];\n    }"}
{"contract_address": "0xB52Bb372A4C3336A6f3ddd8fB3dE8d6DF735Ad50", "original_solidity_code": "function transfer(address recipient, uint256 amount) external override returns (bool) {\\r\\n      _transfer(msg.sender, recipient, amount);\\r\\n      return true;\\r\\n    }", "heimdall_decompiled_code": "function transfer(address arg0, uint256 arg1) public payable returns (bool) {\n        require(address(msg.sender));\n        require(address(arg0));\n        var_a = 0x70a0823100000000000000000000000000000000000000000000000000000000;\n        address var_b = address(msg.sender);\n        require(address(0x5491305204daca75317a0bc8c332dd61dbb77bc8).code.length);\n        (bool success, bytes memory ret0) = address(0x5491305204daca75317a0bc8c332dd61dbb77bc8).Unresolved_70a08231(var_b); // staticcall\n        require(!(ret0.length < 0x20), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        address var_c = msg.sender;\n        var_d = 0x06;\n        require(!storage_map_d[var_c], \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        require(!(var_e.length > 0), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        uint256 var_e = 0x60 + var_e;\n        var_a = 0x26;\n        var_f = this.code[3161:3199];\n        var_c = address(msg.sender);\n        var_d = 0x04;\n        require(!(arg1 > storage_map_d[var_c]), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        var_g = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_h = (0x20 + (0x04 + var_e)) - (0x04 + var_e);\n        uint256 var_i = var_e.length;\n        require(!(bytes1(var_e.length)), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        uint256 var_j = (~((0x0100 ** (0x20 - (bytes1(var_e.length)))) - 0x01)) & (var_k);\n        var_c = address(msg.sender);\n        var_d = 0x04;\n        storage_map_d[var_c] = storage_map_d[var_c] - arg1;\n        var_c = address(arg0);\n        var_d = 0x04;\n        require(!((arg1 + storage_map_d[var_c]) < storage_map_d[var_c]), \"SafeMath: addition overflow\");\n        var_g = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_h = 0x20;\n        var_i = 0x1b;\n        var_l = 0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000;\n        var_c = address(arg0);\n        var_d = 0x04;\n        storage_map_d[var_c] = arg1 + storage_map_d[var_c];\n        uint256 var_g = arg1;\n        emit Transfer(address(msg.sender), address(arg0), arg1);\n        var_g = 0x01;\n        return 0x01;\n        var_e = 0x60 + var_e;\n        var_a = 0x26;\n        var_f = this.code[3161:3199];\n        require(!(arg1 > storage_map_d[var_c]), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        var_g = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_h = (0x20 + (0x04 + var_e)) - (0x04 + var_e);\n        var_i = var_e.length;\n        require(!(bytes1(var_e.length)), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        var_j = (~((0x0100 ** (0x20 - (bytes1(var_e.length)))) - 0x01)) & (var_k);\n        if (!storage_map_d[var_c]) {\n        }\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = (0x20 + (0x04 + var_e)) - (0x04 + var_e);\n        var_m = 0x23;\n        var_n = this.code[3092:3127];\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = (0x20 + (0x04 + var_e)) - (0x04 + var_e);\n        var_m = 0x25;\n        var_n = this.code[3239:3276];\n    }"}
{"contract_address": "0x636aD441CdA1EC74BC059A23615b9D9c3464d9e3", "original_solidity_code": "function setMaxTxAmount(uint256 maxTxAmount) external onlyOwner() {\r\n        _maxTxAmount = maxTxAmount;\r\n    }", "heimdall_decompiled_code": "function setMaxTxAmount(uint256 arg0) public {\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        _maxTxAmount = arg0;\n    }"}
{"contract_address": "0x054348505D3A37c155C15435FEB95392bDDb31E6", "original_solidity_code": "function openTrading() external onlyOwner() {\r\n        require(!tradingOpen,\"trading is already open\");\r\n        uniswapV2Router = IUniswapV2Router02(0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D);\r\n        _approve(address(this), address(uniswapV2Router), _tTotal);\r\n        uniswapV2Pair = IUniswapV2Factory(uniswapV2Router.factory()).createPair(address(this), uniswapV2Router.WETH());\r\n        uniswapV2Router.addLiquidityETH{value: address(this).balance}(address(this),balanceOf(address(this)),0,0,owner(),block.timestamp);\r\n        IERC20(uniswapV2Pair).approve(address(uniswapV2Router), type(uint).max);\r\n        swapEnabled = true;\r\n        tradingOpen = true;\r\n        firstBlock = block.number;\r\n    }", "heimdall_decompiled_code": "function openTrading() public {\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        require(!(bytes1(store_f / 0x010000000000000000000000000000000000000000)), \"trading is already open\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x17;\n        var_d = 0x74726164696e6720697320616c7265616479206f70656e000000000000000000;\n        store_l = 0x7a250d5630b4cf539739df2c5dacb4c659f2488d | (uint96(store_l));\n        require(0x09, \"ERC20: approve to the zero address\");\n        require((0x01 == 0x01) | !0x017e9d8602b400, \"ERC20: approve to the zero address\");\n        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x11;\n        require(address(this), \"ERC20: approve to the zero address\");\n        require(0x7a250d5630b4cf539739df2c5dacb4c659f2488d, \"ERC20: approve to the zero address\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x22;\n        var_d = 0x45524332303a20617070726f766520746f20746865207a65726f206164647265;\n        var_g = 0x7373000000000000000000000000000000000000000000000000000000000000;\n        address var_e = address(this);\n        var_h = 0x02;\n        var_e = 0x7a250d5630b4cf539739df2c5dacb4c659f2488d;\n        address var_h = keccak256(var_e);\n        storage_map_m[var_e] = 0x017e9d8602b400;\n        var_a = 0x017e9d8602b400;\n        emit Approval(address(this), 0x7a250d5630b4cf539739df2c5dacb4c659f2488d, 0x017e9d8602b400);\n        var_a = 0xc45a015500000000000000000000000000000000000000000000000000000000;\n        (bool success, bytes memory ret0) = address(store_l / 0x01).factory(var_b); // staticcall\n        uint256 var_i = var_i + (uint248(ret0.length + 0x1f));\n        require(!((var_i + ret0.length) - var_i) < 0x20);\n        require(var_i.length == (address(var_i.length)));\n        var_j = 0xad5c464800000000000000000000000000000000000000000000000000000000;\n        (bool success, bytes memory ret0) = address(store_l / 0x01).WETH(var_c); // staticcall\n        var_i = var_i + (uint248(ret0.length + 0x1f));\n        require(!((var_i + ret0.length) - var_i) < 0x20);\n        require(var_i.length == (address(var_i.length)));\n        var_k = 0xc9c6539600000000000000000000000000000000000000000000000000000000;\n        address var_d = address(this);\n        uint256 var_g = address(var_i.length);\n        (bool success, bytes memory ret0) = address(var_i.length).Unresolved_c9c65396(var_d); // call\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x24;\n        var_d = 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464;\n        var_g = 0x7265737300000000000000000000000000000000000000000000000000000000;\n        if (0x0a) {\n            if (0x0a == 0x01) {\n                if (0x0a == 0x02) {\n                    if (!0x09 > 0xff) {\n                        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                        var_f = 0x11;\n                        if (!((0x0a < 0x0b) & (0x09 < 0x4e)) | ((0x0a < 0x0133) & (0x09 < 0x20))) {\n                            if (!0x09 > 0x01) {\n                                if (!0x01 > 0x1999999999999999999999999999999999999999999999999999999999999999) {\n                                    var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                    var_f = 0x11;\n                                    if (!0x0a > 0x1999999999999999999999999999999999999999999999999999999999999999) {\n                                        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                        var_f = 0x11;\n                                        if (!0x01) {\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }"}
{"contract_address": "0x410cA8f9159f88a864DeEc21f30D5D62E8B75619", "original_solidity_code": "function renounceOwnership() public virtual onlyOwner {\r\n        _transferOwnership(address(0));\r\n    }", "heimdall_decompiled_code": "function renounceOwnership() public payable {\n        require(address(owner / 0x01) == (address(msg.sender)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_b = ((0x04 + var_c) + 0x20) - (0x04 + var_c);\n        var_d = 0x20;\n        var_e = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        owner = 0 | (uint96(owner));\n        emit OwnershipTransferred(address(owner / 0x01), 0);\n    }"}
{"contract_address": "0x1e144B971aB5f6Dac1aDE8CF21207EB30041543E", "original_solidity_code": "function renounceOwnership() public virtual onlyOwner {\r\n        emit OwnershipTransferred(_owner, address(0));\r\n        _owner = address(0);\r\n    }", "heimdall_decompiled_code": "function renounceOwnership() public {\n        require(address(owner / 0x01) == (address(msg.sender)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_b = ((0x04 + var_c) + 0x20) - (0x04 + var_c);\n        var_d = 0x20;\n        var_e = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        emit OwnershipTransferred(address(owner / 0x01), 0);\n        owner = 0 | (uint96(owner));\n    }"}
{"contract_address": "0xf7572367197fE25A2F2bEe8d267a1d5cA0713ea3", "original_solidity_code": "function increaseAllowance(address spender, uint256 addedValue) external returns (bool) {\\r\\n      _approve(msg.sender, spender, _allowances[msg.sender][spender].add(addedValue));\\r\\n      return true;\\r\\n    }", "heimdall_decompiled_code": "function increaseAllowance(address arg0, uint256 arg1) public payable returns (bool) {\n        address var_a = msg.sender;\n        var_b = 0x05;\n        var_a = address(arg0);\n        address var_b = keccak256(var_a);\n        require(!((arg1 + storage_map_c[var_a]) < storage_map_c[var_a]), \"SafeMath: addition overflow\");\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x1b;\n        var_f = 0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000;\n        require(address(msg.sender), \"ERC20: approve to the zero address\");\n        require(address(arg0), \"ERC20: approve to the zero address\");\n        var_a = address(msg.sender);\n        var_b = 0x05;\n        var_a = address(arg0);\n        var_b = keccak256(var_a);\n        storage_map_c[var_a] = arg1 + storage_map_c[var_a];\n        uint256 var_c = arg1 + storage_map_c[var_a];\n        emit Approval(address(msg.sender), address(arg0), arg1 + storage_map_c[var_a]);\n        var_c = 0x01;\n        return 0x01;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_d = (0x20 + (0x04 + var_g)) - (0x04 + var_g);\n        var_e = 0x22;\n        var_h = this.code[3127:3161];\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = (0x20 + (0x04 + var_g)) - (0x04 + var_g);\n        var_e = 0x24;\n        var_h = this.code[3276:3312];\n    }"}
{"contract_address": "0x636aD441CdA1EC74BC059A23615b9D9c3464d9e3", "original_solidity_code": "function transfer(address recipient, uint256 amount) public override returns (bool) {\r\n        _transfer(_msgSender(), recipient, amount);\r\n        return true;\r\n    }", "heimdall_decompiled_code": "function transfer(address arg0, uint256 arg1) public returns (bool) {\n        require(arg0 == (address(arg0)));\n        require(address(msg.sender), \"Blacklisted address\");\n        require(address(arg0), \"Blacklisted address\");\n        require(arg1 > 0, \"Blacklisted address\");\n        address var_a = address(msg.sender);\n        var_b = 0x06;\n        require(!(!bytes1(storage_map_t[var_a])), \"Blacklisted address\");\n        require(!(bytes1(storage_map_t[var_a])), \"Blacklisted address\");\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x13;\n        var_f = 0x426c61636b6c6973746564206164647265737300000000000000000000000000;\n        require(!(address(checkWalletLimit) == (address(arg0))), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        require(!(address(checkWalletLimit) == (address(arg0))), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        require(!(address(checkWalletLimit) == (address(msg.sender))), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        require(!(address(checkWalletLimit) == (address(msg.sender))), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        require(!(bytes1(checkWalletLimit / 0x010000000000000000000000000000000000000000)), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        uint256 var_g = 0x40 + var_g;\n        var_c = 0x14;\n        var_h = 0x496e73756666696369656e742042616c616e6365000000000000000000000000;\n        var_a = address(msg.sender);\n        var_b = 0x07;\n        require(!(arg1 > storage_map_t[var_a]), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        var_i = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_f = 0x20;\n        uint256 var_j = var_g.length;\n        require(!(0 > var_g.length), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        uint256 var_k = 0;\n        var_l = var_m;\n        require(!(0x20 > var_g.length), \"Insufficient Balance\");\n        var_k = 0;\n        require(!(storage_map_t[var_a] < arg1), \"SafeMath: addition overflow\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_n = 0x11;\n        var_a = address(msg.sender);\n        var_b = 0x07;\n        storage_map_t[var_a] = storage_map_t[var_a] - arg1;\n        var_a = address(arg0);\n        require(!(storage_map_t[var_a] > ~(arg1)), \"SafeMath: addition overflow\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_n = 0x11;\n        require(!((storage_map_t[var_a] + arg1) < storage_map_t[var_a]), \"SafeMath: addition overflow\");\n        var_i = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_f = 0x20;\n        var_j = 0x1b;\n        var_l = 0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000;\n        var_a = address(arg0);\n        var_b = 0x07;\n        storage_map_t[var_a] = storage_map_t[var_a] + arg1;\n        var_a = this.code[12360:12392];\n        var_a = var_a;\n        uint256 var_i = arg1;\n        emit Transfer(address(msg.sender), address(arg0), arg1);\n        var_i = 0x01;\n        return 0x01;\n        var_a = address(msg.sender);\n        var_b = 0x0b;\n        require(!(!bytes1(storage_map_t[var_a])), \"SafeMath: multiplication overflow\");\n        require(!(!bytes1(storage_map_t[var_a])), \"SafeMath: multiplication overflow\");\n        var_a = address(this);\n        var_b = 0x07;\n        require(storage_map_t[var_a] < minimumTokensBeforeSwapAmount, \"SafeMath: multiplication overflow\");\n        require(!(!storage_map_t[var_a] < minimumTokensBeforeSwapAmount), \"SafeMath: multiplication overflow\");\n        require(!(!storage_map_t[var_a] < minimumTokensBeforeSwapAmount), \"SafeMath: multiplication overflow\");\n        require(!(!storage_map_t[var_a] < minimumTokensBeforeSwapAmount), \"SafeMath: multiplication overflow\");\n        require(!(bytes1(checkWalletLimit / 0x0100000000000000000000000000000000000000000000)), \"SafeMath: multiplication overflow\");\n        checkWalletLimit = 0x010000000000000000000000000000000000000000 | (uint248(checkWalletLimit));\n        require(minimumTokensBeforeSwapAmount, \"SafeMath: multiplication overflow\");\n        require(!(minimumTokensBeforeSwapAmount & (killa > (0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff / minimumTokensBeforeSwapAmount))), \"SafeMath: multiplication overflow\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_n = 0x11;\n        require(minimumTokensBeforeSwapAmount, \"SafeMath: multiplication overflow\");\n        require(((minimumTokensBeforeSwapAmount * killa) / minimumTokensBeforeSwapAmount) == killa, \"SafeMath: multiplication overflow\");\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x21;\n        var_f = 0x536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f;\n        var_j = 0x7700000000000000000000000000000000000000000000000000000000000000;\n        var_g = 0x40 + var_g;\n        var_c = 0x1a;\n        var_h = 0x536166654d6174683a206469766973696f6e206279207a65726f000000000000;\n        require(_totalDistributionShares, \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        require(_totalDistributionShares, \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_n = 0x12;\n        var_i = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_f = 0x20;\n        var_j = var_g.length;\n        require(!(0 > var_g.length), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        uint256 var_o = 0;\n        var_l = var_m;\n        require(!(0x20 > var_g.length), \"SafeMath: division by zero\");\n        var_o = 0;\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_n = 0x12;\n        if (!checkWalletLimit / 0x01000000000000000000000000000000000000000000) {\n        }\n        require(!(arg1 > _maxTxAmount), \"Transfer amount exceeds the maxTxAmount.\");\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x28;\n        var_f = 0x5472616e7366657220616d6f756e74206578636565647320746865206d617854;\n        var_j = 0x78416d6f756e742e000000000000000000000000000000000000000000000000;\n        var_g = 0x40 + var_g;\n        var_c = 0x14;\n        var_h = 0x496e73756666696369656e742042616c616e6365000000000000000000000000;\n        var_a = address(msg.sender);\n        var_b = 0x07;\n        require(!(arg1 > storage_map_t[var_a]), \"SafeMath: addition overflow\");\n        require(!(storage_map_t[var_a] < arg1), \"SafeMath: addition overflow\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_n = 0x11;\n        var_a = address(msg.sender);\n        var_b = 0x07;\n        storage_map_t[var_a] = storage_map_t[var_a] - arg1;\n        var_a = address(killi);\n        require(!(storage_map_t[var_a] > ~(arg1)), \"SafeMath: addition overflow\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_n = 0x11;\n        require(!((storage_map_t[var_a] + arg1) < storage_map_t[var_a]), \"SafeMath: addition overflow\");\n        var_i = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_f = 0x20;\n        var_j = 0x1b;\n        var_l = 0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000;\n        var_a = address(killi);\n        var_b = 0x07;\n        storage_map_t[var_a] = storage_map_t[var_a] + arg1;\n        var_a = this.code[12360:12392];\n        var_a = var_a;\n        var_i = arg1;\n        emit Transfer(address(msg.sender), address(killi), arg1);\n        var_i = 0x01;\n        return 0x01;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x29;\n        var_f = 0x5472616e7366657220616d6f756e74206d757374206265206772656174657220;\n        var_j = 0x7468616e207a65726f0000000000000000000000000000000000000000000000;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x23;\n        var_f = 0x45524332303a207472616e7366657220746f20746865207a65726f2061646472;\n        var_j = 0x6573730000000000000000000000000000000000000000000000000000000000;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x25;\n        var_f = 0x45524332303a207472616e736665722066726f6d20746865207a65726f206164;\n        var_j = 0x6472657373000000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0x30045aA941FF9Be1d2D3603A75207C07860d4156", "original_solidity_code": "function setMaxTransactionAmount(uint256 percent) public virtual onlyOwner {\\r\\n        maxTransactionAmount = (totalSupply() * percent) / TAX_DIVISOR;\\r\\n    }", "heimdall_decompiled_code": "function setMaxTransactionAmount(uint256 arg0) public {\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        require((arg0 == ((arg0 * totalSupply) / totalSupply)) | !totalSupply);\n        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x11;\n        require(0x2710);\n        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x12;\n        maxTransactionAmount = (arg0 * totalSupply) / 0x2710;\n    }"}
{"contract_address": "0xF6FF7F8635a951ecF4D68264b32FB3a4b5f9cf15", "original_solidity_code": "function updateBuyFees(uint256 _marketingFee, uint256 _liquidityFee, uint256 _devFee) external onlyOwner {\\r\\n        buyMarketingFee = _marketingFee;\\r\\n        buyLiquidityFee = _liquidityFee;\\r\\n        buyDevFee = _devFee;\\r\\n        buyTotalFees = buyMarketingFee + buyLiquidityFee + buyDevFee;\\r\\n        require(buyTotalFees <= 50, \\\"Must keep fees at 50% or less\\\");\\r\\n    }", "heimdall_decompiled_code": "function updateBuyFees(uint256 arg0, uint256 arg1, uint256 arg2) public {\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        lastLpBurnTimei = arg0;\n        buyLiquidityFee = arg1;\n        buyDevFee = arg2;\n        require(!arg0 > (arg1 + arg0));\n        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x11;\n    }"}
{"contract_address": "0x620d4B40A1c80D62129bb195e1701e501F9a5d3b", "original_solidity_code": "function approve(address to, uint256 tokenId) external payable;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom}", "heimdall_decompiled_code": "function approve(address arg0, uint256 arg1) public payable {\n        require(arg0 == (address(arg0)));\n        require(0x01 > arg1, CustomError_df2d9b42());\n        require(!(arg1 < totalSupply), CustomError_df2d9b42());\n        uint256 var_a = arg1;\n        var_b = 0x04;\n        require(bytes1(storage_map_n[var_a]), CustomError_df2d9b42());\n        var_c = 0xdf2d9b4200000000000000000000000000000000000000000000000000000000;\n        require(storage_map_n[var_a], CustomError_cfb3b942());\n        require(address(storage_map_n[var_a]) == msg.sender, CustomError_cfb3b942());\n        var_a = address(storage_map_n[var_a]);\n        var_b = 0x07;\n        var_a = address(msg.sender);\n        uint256 var_b = keccak256(var_a);\n        require(bytes1(storage_map_n[var_a]), CustomError_cfb3b942());\n        var_a = arg1;\n        var_b = 0x06;\n        storage_map_n[var_a] = (address(arg0)) | (uint96(storage_map_n[var_a]));\n        emit Approval(address(storage_map_n[var_a]), address(arg0), arg1);\n        var_c = 0xcfb3b94200000000000000000000000000000000000000000000000000000000;\n        var_a = arg1;\n        var_b = 0x06;\n        storage_map_n[var_a] = (address(arg0)) | (uint96(storage_map_n[var_a]));\n        emit Approval(address(storage_map_n[var_a]), address(arg0), arg1);\n        var_a = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff + arg1;\n        var_b = 0x04;\n        if (storage_map_n[var_a]) {\n            var_a = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff + (0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff + arg1);\n            var_b = 0x04;\n            if (storage_map_n[var_a]) {\n                var_a = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff + (0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff + (0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff + arg1));\n                var_b = 0x04;\n                if (storage_map_n[var_a]) {\n                }\n            }\n        }\n        var_c = 0xdf2d9b4200000000000000000000000000000000000000000000000000000000;\n        var_c = 0xdf2d9b4200000000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0xbFD03022a32dB1502489AE1F65bd8f343CC09AB9", "original_solidity_code": "function SplinterPolishAssetMetrics(uint256 newAmount)\\r\\n        external\\r\\n        onlyOwner\\r\\n        returns (bool)\\r\\n    {\\r\\n        require(\\r\\n            newAmount >= (totalSupply() * 1) / 100000,\\r\\n            \\\"Swap amount cannot be lower than 0.001% total supply.\\\"\\r\\n        );\\r\\n        require(\\r\\n            newAmount <= (totalSupply() * 5) / 1000,\\r\\n            \\\"Swap amount cannot be higher than 0.5% total supply.\\\"\\r\\n        );\\r\\n        swapTokensAmount = newAmount;\\r\\n        return true;\\r\\n    }", "heimdall_decompiled_code": "function SplinterPolishAssetMetrics(uint256 arg0) public view {\n        require(arg0 == arg0);\n        require(address(_owner / 0x01) == (address(msg.sender)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_b = ((0x04 + var_c) + 0x20) - (0x04 + var_c);\n        var_d = 0x20;\n        var_e = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        require(!totalSupply | (0x01 == ((totalSupply * 0x01) / totalSupply)), \"Swap amount cannot be lower than 0.001% total supply.\");\n        var_f = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_g = 0x11;\n        require(0x0186a0, \"Swap amount cannot be lower than 0.001% total supply.\");\n        var_f = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_g = 0x12;\n        require(!(arg0 < ((totalSupply * 0x01) / 0x0186a0)), \"Swap amount cannot be lower than 0.001% total supply.\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = ((0x04 + var_c) + 0x20) - (0x04 + var_c);\n        var_d = 0x35;\n        var_e = 0x5377617020616d6f756e742063616e6e6f74206265206c6f776572207468616e;\n        var_h = 0x20302e3030312520746f74616c20737570706c792e0000000000000000000000;\n    }"}
{"contract_address": "0x243aA7135A82d62dc6847C1Ad5A2E7c87c01502d", "original_solidity_code": "function approve(address spender, uint256 amount) public virtual override returns (bool) {\r\n        _approve(_msgSender(), spender, amount);\r\n        return true;\r\n    }", "heimdall_decompiled_code": "function approve(address arg0, uint256 arg1) public returns (bool) {\n        require(arg0 == (address(arg0)));\n        require(arg1 == arg1);\n        require(address(msg.sender) - 0, \"ERC20: approve to the zero address\");\n        require(address(arg0) - 0, \"ERC20: approve to the zero address\");\n        address var_a = address(msg.sender);\n        var_b = 0x01;\n        var_a = address(arg0);\n        address var_b = keccak256(var_a);\n        storage_map_b[var_a] = arg1;\n        uint256 var_c = arg1;\n        emit Approval(address(msg.sender), address(arg0), arg1);\n        var_c = 0x01;\n        return 0x01;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_d = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        var_f = 0x22;\n        var_g = 0x45524332303a20617070726f766520746f20746865207a65726f206164647265;\n        var_h = 0x7373000000000000000000000000000000000000000000000000000000000000;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        var_f = 0x24;\n        var_g = 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464;\n        var_h = 0x7265737300000000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0x693E9C1e8935caf91F006bf5a2FF8a1aB2C569c7", "original_solidity_code": "function setLpWallet(address newLpWallet) external onlyOwner {\r\n        lpWallet = newLpWallet;\r\n    }", "heimdall_decompiled_code": "function setLpWallet(address arg0) public {\n        require(arg0 == (address(arg0)));\n        require(msg.sender == (address(getOwner)), \"!Owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x06;\n        var_d = 0x214f776e65720000000000000000000000000000000000000000000000000000;\n        tradingOpen = (address(arg0)) | (uint96(tradingOpen));\n    }"}
{"contract_address": "0x2b3d6a0c36f8Def06B6041B41090971155D124ae", "original_solidity_code": "function renounceOwnership() public virtual onlyOwner {\r\n        emit OwnershipTransferred(_owner, address(0));\r\n        _owner = address(0);\r\n    }", "heimdall_decompiled_code": "function renounceOwnership() public {\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        emit OwnershipTransferred(address(owner), 0);\n        owner = uint96(owner);\n    }"}
{"contract_address": "0x5Dae130C98E4867Eb6721c48D2255F06f3E2a055", "original_solidity_code": "function transfer(address recipient, uint256 amount) public override returns (bool) {\r\n        _transfer(_msgSender(), recipient, amount);\r\n        return true;\r\n    }", "heimdall_decompiled_code": "function transfer(address arg0, uint256 arg1) public {\n        require(arg0 == (address(arg0)));\n        require(arg1 == arg1);\n        require(address(msg.sender) - 0);\n        require(address(arg0) - 0);\n        require(arg1 > 0);\n        require(address(msg.sender) == (address(owner / 0x01)));\n        require(address(arg0) == (address(owner / 0x01)));\n        address var_a = address(msg.sender);\n        var_b = 0x04;\n        require(bytes1(storage_map_b[var_a] / 0x01));\n        require(!bytes1(storage_map_b[var_a] / 0x01));\n        require(store_c > store_d, \"SafeMath: multiplication overflow\");\n        require(arg1 - 0, \"SafeMath: multiplication overflow\");\n        require(!arg1 | (store_e == ((arg1 * store_e) / arg1)), \"SafeMath: multiplication overflow\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x11;\n        require(arg1, \"SafeMath: multiplication overflow\");\n        require(((arg1 * store_e) / arg1) == store_e, \"SafeMath: multiplication overflow\");\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_e = ((0x04 + var_f) + 0x20) - (0x04 + var_f);\n        var_g = 0x21;\n        var_h = 0x536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f;\n        var_i = 0x7700000000000000000000000000000000000000000000000000000000000000;\n        uint256 var_f = 0x40 + var_f;\n        var_d = 0x1a;\n        var_j = 0x536166654d6174683a206469766973696f6e206279207a65726f000000000000;\n        require(0x64 > 0, \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        var_k = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_h = ((0x04 + var_f) + 0x20) - (0x04 + var_f);\n        uint256 var_i = var_f.length;\n        uint256 var_l = 0;\n        var_m = var_n;\n        var_l = 0;\n        require(0x64, \"_transfer:: Transfer Delay enabled. Only one purchase per block allowed.\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x12;\n        require(!(bytes1(transferDelayEnabled / 0x01)), \"_transfer:: Transfer Delay enabled. Only one purchase per block allowed.\");\n        require(!(!(address(arg0)) == (address(store_g / 0x01))), \"_transfer:: Transfer Delay enabled. Only one purchase per block allowed.\");\n        require(!(!(address(arg0)) == (address(store_h / 0x01))), \"_transfer:: Transfer Delay enabled. Only one purchase per block allowed.\");\n        var_a = address(tx.origin);\n        var_b = 0x05;\n        require(storage_map_b[var_a] < block.number, \"_transfer:: Transfer Delay enabled.  Only one purchase per block allowed.\");\n        var_k = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_h = ((0x04 + var_f) + 0x20) - (0x04 + var_f);\n        var_i = 0x49;\n        var_m = 0x5f7472616e736665723a3a205472616e736665722044656c617920656e61626c;\n        var_o = 0x65642e20204f6e6c79206f6e652070757263686173652070657220626c6f636b;\n        var_p = 0x20616c6c6f7765642e0000000000000000000000000000000000000000000000;\n        var_a = address(tx.origin);\n        var_b = 0x05;\n        storage_map_b[var_a] = block.number;\n        require(!(address(msg.sender) == (address(store_h / 0x01))), \"SafeMath: addition overflow\");\n        require(!(address(msg.sender) == (address(store_h / 0x01))), \"SafeMath: addition overflow\");\n        require(!(address(msg.sender) == (address(store_h / 0x01))), \"SafeMath: addition overflow\");\n        require(!(address(arg0) == (address(store_h / 0x01))), \"SafeMath: addition overflow\");\n        require(!(address(arg0) == (address(store_h / 0x01))), \"SafeMath: addition overflow\");\n        var_a = address(this);\n        var_b = 0x01;\n        require(!(!bytes1(store_h / 0x01000000000000000000000000000000000000000000)), \"SafeMath: addition overflow\");\n        require(!(!bytes1(store_h / 0x01000000000000000000000000000000000000000000)), \"SafeMath: addition overflow\");\n        require(!(!bytes1(store_h / 0x01000000000000000000000000000000000000000000)), \"SafeMath: addition overflow\");\n        require(!(!bytes1(store_h / 0x01000000000000000000000000000000000000000000)), \"SafeMath: addition overflow\");\n        require(!(!bytes1(store_h / 0x01000000000000000000000000000000000000000000)), \"SafeMath: addition overflow\");\n        require(!(((arg1 * store_e) / 0x64) > 0), \"SafeMath: addition overflow\");\n        var_a = address(this);\n        var_b = 0x01;\n        require(!(storage_map_b[var_a] > (storage_map_b[var_a] + ((arg1 * store_e) / 0x64))), \"SafeMath: addition overflow\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x11;\n        require(!(storage_map_b[var_a] + ((arg1 * store_e) / 0x64) < storage_map_b[var_a]), \"SafeMath: addition overflow\");\n        var_k = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_h = ((0x04 + var_f) + 0x20) - (0x04 + var_f);\n        var_i = 0x1b;\n        var_m = 0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000;\n        var_a = address(this);\n        var_b = 0x01;\n        storage_map_b[var_a] = storage_map_b[var_a] + ((arg1 * store_e) / 0x64);\n        uint256 var_k = (arg1 * store_e) / 0x64;\n        emit Transfer(address(msg.sender), address(this), (arg1 * store_e) / 0x64);\n        var_a = address(msg.sender);\n        var_b = 0x01;\n        var_f = 0x40 + var_f;\n        var_k = 0x1e;\n        var_q = 0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000;\n        require(!(arg1 > storage_map_b[var_a]), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        require(!((storage_map_b[var_a] - arg1) > storage_map_b[var_a]), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x11;\n        var_a = address(msg.sender);\n        var_b = 0x01;\n        storage_map_b[var_a] = storage_map_b[var_a] - arg1;\n        var_f = 0x40 + var_f;\n        var_r = 0x1e;\n        var_s = 0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000;\n        require(!(((arg1 * store_e) / 0x64) > arg1), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        var_t = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_p = ((0x04 + var_f) + 0x20) - (0x04 + var_f);\n        uint256 var_u = var_f.length;\n        uint256 var_v = 0;\n        var_w = var_n;\n        var_v = 0;\n        if (!(arg1 - ((arg1 * store_e) / 0x64)) > arg1) {\n            var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n            var_c = 0x11;\n            if (storage_map_b[var_a] > _maxTaxSwap) {\n            }\n            if (!store_c > store_j) {\n            }\n            if (!storage_map_b[var_a] > _taxSwapThreshold) {\n            }\n            if (!store_h / 0x0100000000000000000000000000000000000000000000) {\n            }\n            if (store_c > store_l) {\n                if (arg1 - 0) {\n                }\n                require(!((arg1 - ((arg1 * store_e) / 0x64)) > arg1), \"Exceeds the _maxTxAmount.\");\n            }\n            require(store_c > store_l, \"Exceeds the _maxTxAmount.\");\n        }\n        require(!(arg1 > _maxTxAmount), \"Exceeds the _maxTxAmount.\");\n        var_k = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_h = ((0x04 + var_f) + 0x20) - (0x04 + var_f);\n        var_i = 0x19;\n        var_m = 0x4578636565647320746865205f6d61785478416d6f756e742e00000000000000;\n        if (address(arg0) == (address(store_g / 0x01))) {\n            if (address(arg0) == (address(store_g / 0x01))) {\n            }\n        }\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x12;\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = ((0x04 + var_f) + 0x20) - (0x04 + var_f);\n        var_g = 0x29;\n        var_h = 0x5472616e7366657220616d6f756e74206d757374206265206772656174657220;\n        var_i = 0x7468616e207a65726f0000000000000000000000000000000000000000000000;\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = ((0x04 + var_f) + 0x20) - (0x04 + var_f);\n        var_g = 0x23;\n        var_h = 0x45524332303a207472616e7366657220746f20746865207a65726f2061646472;\n        var_i = 0x6573730000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = ((0x04 + var_f) + 0x20) - (0x04 + var_f);\n        var_g = 0x25;\n        var_h = 0x45524332303a207472616e736665722066726f6d20746865207a65726f206164;\n        var_i = 0x6472657373000000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0xE017C8475A6C89f181CA2C9222c2Bbf36dc04A4D", "original_solidity_code": "function balanceOf(address account) external view override returns (uint256) {\r\n        return _balances[account];\r\n    }", "heimdall_decompiled_code": "function balanceOf(address arg0) public view returns (uint256) {\n        require(arg0 == (address(arg0)));\n        address var_a = address(arg0);\n        uint256 var_b = 0;\n        address var_c = storage_map_b[var_a];\n        return storage_map_b[var_a];\n    }"}
{"contract_address": "0x9361CD557C1db79830F118364E5009B3A2738fD3", "original_solidity_code": "function transferOwnership(address _newOwner) public onlyOwner {\r\n        owner = _newOwner;\r\n        emit OwnershipTransferred(owner, _newOwner);\r\n    }", "heimdall_decompiled_code": "function transferOwnership(address arg0) public payable {\n        require(address(msg.sender) == (address(owner / 0x01)));\n        owner = (address(arg0) * 0x01) | (uint96(owner));\n        emit OwnershipTransferred(address(owner / 0x01), address(arg0));\n    }"}
{"contract_address": "0xF36754d67a8C99e1D683915ED5A6E55aB259ba79", "original_solidity_code": "function transfer(address recipient, uint256 amount) public override returns (bool) {\r\n        _transfer(_msgSender(), recipient, amount);\r\n        return true;\r\n    }", "heimdall_decompiled_code": "function transfer(address arg0, uint256 arg1) public {\n        require(arg0 == (address(arg0)));\n        require(arg1 == arg1);\n        require(!(!(address(arg0)) == (address(owner / 0x01))), \"You are trying to buy too many tokens. You have reached the limit for one wallet.\");\n        require(!(!(address(arg0)) == (address(noBlackList / 0x0100))), \"You are trying to buy too many tokens. You have reached the limit for one wallet.\");\n        require(!(!(address(arg0)) == (address(this))), \"You are trying to buy too many tokens. You have reached the limit for one wallet.\");\n        require(!(!(address(arg0)) == (address(noFeeToTransfer / 0x01))), \"You are trying to buy too many tokens. You have reached the limit for one wallet.\");\n        require(!(!(address(arg0)) == (address(store_n / 0x01))), \"You are trying to buy too many tokens. You have reached the limit for one wallet.\");\n        require(!(!(address(msg.sender)) == (address(owner / 0x01))), \"You are trying to buy too many tokens. You have reached the limit for one wallet.\");\n        address var_a = address(arg0);\n        var_b = 0x01;\n        require(!(storage_map_b[var_a] > (storage_map_b[var_a] + arg1)), \"You are trying to buy too many tokens. You have reached the limit for one wallet.\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x11;\n        require(!((storage_map_b[var_a] + arg1) > _maxWalletToken), \"You are trying to buy too many tokens. You have reached the limit for one wallet.\");\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_e = ((0x04 + var_f) + 0x20) - (0x04 + var_f);\n        var_g = 0x51;\n        var_h = 0x596f752061726520747279696e6720746f2062757920746f6f206d616e792074;\n        var_i = 0x6f6b656e732e20596f752068617665207265616368656420746865206c696d69;\n        var_j = 0x7420666f72206f6e652077616c6c65742e000000000000000000000000000000;\n        require(!(!(address(msg.sender)) == (address(owner / 0x01))), \"You are trying to buy more than the max transaction limit.\");\n        require(!(!(address(arg0)) == (address(owner / 0x01))), \"You are trying to buy more than the max transaction limit.\");\n        require(!(arg1 > _maxTxAmount), \"You are trying to buy more than the max transaction limit.\");\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = ((0x04 + var_f) + 0x20) - (0x04 + var_f);\n        var_g = 0x3a;\n        var_h = 0x596f752061726520747279696e6720746f20627579206d6f7265207468616e20;\n        var_i = 0x746865206d6178207472616e73616374696f6e206c696d69742e000000000000;\n        require(!(bytes1(noBlackList / 0x01)), \"This address is blacklisted. Transaction reverted.\");\n        var_a = address(msg.sender);\n        var_b = 0x04;\n        require(!(!bytes1(storage_map_b[var_a] / 0x01)), \"This address is blacklisted. Transaction reverted.\");\n        require(!(bytes1(storage_map_b[var_a] / 0x01)), \"This address is blacklisted. Transaction reverted.\");\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = ((0x04 + var_f) + 0x20) - (0x04 + var_f);\n        var_g = 0x32;\n        var_h = 0x54686973206164647265737320697320626c61636b6c69737465642e20547261;\n        var_i = 0x6e73616374696f6e2072657665727465642e0000000000000000000000000000;\n        if (address(msg.sender) == 0) {\n            if (!(address(arg0)) == 0) {\n                if (arg1 > 0) {\n                    if ((store_l / 0x01) < (store_l / 0x0100)) {\n                        if ((store_l / 0x01) < (store_l / 0x0100)) {\n                            require(address(msg.sender) == 0);\n                            require(!(address(arg0)) == 0);\n                            var_a = address(msg.sender);\n                            var_b = 0x03;\n                            require(arg1 > 0);\n                            require(bytes1(store_l / 0x01) < (bytes1(store_l / 0x0100)));\n                            require(bytes1(store_l / 0x01) < (bytes1(store_l / 0x0100)));\n                            require(bytes1(store_l / 0x01) < (bytes1(store_l / 0x0100)));\n                            require(bytes1(store_l / 0x01) < (bytes1(store_l / 0x0100)));\n                            var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                            var_c = 0x11;\n                            store_l = (bytes1((store_l / 0x01) + 0x01) * 0x01) | (uint248(store_l));\n                            require(bytes1(storage_map_b[var_a] / 0x01));\n                            var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                            var_c = 0x11;\n                            require(bytes1(storage_map_b[var_a] / 0x01));\n                            var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                            var_c = 0x12;\n                            require(!bytes1(storage_map_b[var_a] / 0x01));\n                            var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                            var_c = 0x11;\n                            require(0);\n                            require(bytes1(store_l / 0x01) - 0xff);\n                            require(!arg1 | (store_o == ((arg1 * store_o) / arg1)));\n                        }\n                        require(0x64);\n                        require(!(arg1 - ((arg1 * store_o) / 0x64)) > arg1);\n                        require(address(msg.sender) - (address(noFeeToTransfer / 0x01)));\n                        require(address(arg0) - (address(noFeeToTransfer / 0x01)));\n                    }\n                }\n            }\n            require(0x01);\n            require(!bytes1(noFeeToTransfer / 0x0100000000000000000000000000000000000000000000));\n        }\n        store_l = 0 | (uint248(store_l));\n        var_a = address(this);\n        var_b = 0x01;\n        require(!storage_map_b[var_a] > _maxTxAmount);\n        require(!_maxTxAmount > 0);\n        noFeeToTransfer = (0x01 * 0x010000000000000000000000000000000000000000) | (uint248(noFeeToTransfer));\n        require(!0x02 > 0xffffffffffffffff);\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x41;\n        var_d = 0x02;\n        uint256 var_f = var_f + 0x60;\n        require(!0x02);\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x32;\n        address var_k = address(this);\n        var_l = 0xad5c464800000000000000000000000000000000000000000000000000000000;\n        (bool success, bytes memory ret0) = address(uniswapV2Router / 0x01).WETH(var_i); // staticcall\n        var_f = var_f + (uint248(ret0.length + 0x1f));\n        require(!((var_f + ret0.length) - var_f) < 0x20);\n        require(var_m == (address(var_m)));\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x32;\n        address var_n = address(var_m);\n        require(address(this) == 0);\n        require(!(address(uniswapV2Router / 0x01)) == 0);\n        var_a = address(this);\n        var_b = 0x02;\n        var_a = address(uniswapV2Router / 0x01);\n        address var_b = keccak256(var_a);\n        storage_map_b[var_a] = _maxTxAmount;\n        var_o = _maxTxAmount;\n        emit Approval(address(this), address(uniswapV2Router / 0x01), _maxTxAmount);\n        var_o = 0x791ac94700000000000000000000000000000000000000000000000000000000;\n        var_j = _maxTxAmount;\n        uint256 var_p = 0;\n        uint256 var_q = ((0x04 + var_f) + 0xa0) - (0x04 + var_f);\n        uint256 var_r = var_f.length;\n        address var_s = address(this);\n        uint256 var_t = block.timestamp;\n        require(address(uniswapV2Router / 0x01).code.length);\n        (bool success, bytes memory ret0) = address(uniswapV2Router / 0x01).{ value: var_p ether }Unresolved_791ac947(var_j); // call\n        (bool success, bytes memory ret0) = address(noBlackList / 0x0100).transfer(address(this).balance);\n        var_o = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_j = ((0x04 + var_f) + 0x20) - (0x04 + var_f);\n        var_p = 0x11;\n        var_q = 0x4552523a207a65726f2061646472657373000000000000000000000000000000;\n        if (!noFeeToTransfer / 0x01000000000000000000000000000000000000000000) {\n        }\n        if (address(msg.sender) == (address(noFeeToTransfer / 0x01))) {\n        }\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = ((0x04 + var_f) + 0x20) - (0x04 + var_f);\n        var_g = 0x25;\n        var_h = 0x546f6b656e2076616c7565206d75737420626520686967686572207468616e20;\n        var_i = 0x7a65726f2e000000000000000000000000000000000000000000000000000000;\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = ((0x04 + var_f) + 0x20) - (0x04 + var_f);\n        var_g = 0x15;\n        var_h = 0x4552523a205573696e6720302061646472657373210000000000000000000000;\n    }"}
{"contract_address": "0xf7A80453F5BB234Bbfa9f6596Ef94cE42D7055EF", "original_solidity_code": "function getTokenCostInfo(uint256 _pid) public view returns (uint256){\\n        TokenInfo storage tokens = AllowedCrypto[_pid];\\n        IERC20 paytoken;\\n        paytoken = tokens.paytoken;\\n        uint256 cost;\\n        cost = tokens.costvalue;\\n        return cost;\\n    }", "heimdall_decompiled_code": "function getTokenCostInfo(uint256 arg0) public view returns (uint256) {\n        require(arg0 < store_e);\n        var_a = 0x0b;\n        uint256 var_b = storage_map_l[(arg0 * 0x02) + keccak256(var_a)];\n        return storage_map_l[(arg0 * 0x02) + keccak256(var_a)];\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x32;\n    }"}
{"contract_address": "0xc921a48b2bBd243aC30422B266edf58F472Eca7F", "original_solidity_code": "function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer}", "heimdall_decompiled_code": "function approve(address arg0, uint256 arg1) public returns (bool) {\n        require(arg0 == (address(arg0)));\n        require(address(msg.sender), \"ERC20: approve to the zero address\");\n        require(address(arg0), \"ERC20: approve to the zero address\");\n        address var_a = address(msg.sender);\n        var_b = 0x01;\n        var_a = address(arg0);\n        address var_b = keccak256(var_a);\n        storage_map_i[var_a] = arg1;\n        uint256 var_c = arg1;\n        emit Approval(address(msg.sender), address(arg0), arg1);\n        var_c = 0x01;\n        return 0x01;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x22;\n        var_f = 0x45524332303a20617070726f766520746f20746865207a65726f206164647265;\n        var_g = 0x7373000000000000000000000000000000000000000000000000000000000000;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x24;\n        var_f = 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464;\n        var_g = 0x7265737300000000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0x7435b0C4566F7eDe8d922841290a9cc552e1b96b", "original_solidity_code": "function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\\n        return true;\\n    }", "heimdall_decompiled_code": "function increaseAllowance(address arg0, uint256 arg1) public payable returns (bool) {\n        require(arg0 == (address(arg0)));\n        address var_a = address(msg.sender);\n        var_b = 0x02;\n        var_a = address(arg0);\n        address var_b = keccak256(var_a);\n        require(!(storage_map_b[var_a] > (arg1 + storage_map_b[var_a])), \"ERC20: approve to the zero address\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x11;\n        require(address(msg.sender), \"ERC20: approve to the zero address\");\n        require(address(arg0), \"ERC20: approve to the zero address\");\n        var_a = address(msg.sender);\n        var_b = 0x02;\n        var_a = address(arg0);\n        var_b = keccak256(var_a);\n        storage_map_b[var_a] = arg1 + storage_map_b[var_a];\n        uint256 var_d = arg1 + storage_map_b[var_a];\n        emit Approval(address(msg.sender), address(arg0), arg1 + storage_map_b[var_a]);\n        var_d = 0x01;\n        return 0x01;\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = 0x20;\n        var_f = 0x22;\n        var_g = 0x45524332303a20617070726f766520746f20746865207a65726f206164647265;\n        var_h = 0x7373000000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = 0x20;\n        var_f = 0x24;\n        var_g = 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464;\n        var_h = 0x7265737300000000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0xc2473C13f1Ebb11A06997Cf5e40dB023F96A4DA1", "original_solidity_code": "function openTrading() external onlyOwner() {\\r\\n        require(!tradingOpen,\\\"trading is already open\\\");\\r\\n        uniswapV2Router = IUniswapV2Router02(0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D);\\r\\n        _approve(address(this), address(uniswapV2Router), _tTotal);\\r\\n        uniswapV2Pair = IUniswapV2Factory(uniswapV2Router.factory()).createPair(address(this), uniswapV2Router.WETH());\\r\\n        uniswapV2Router.addLiquidityETH{value: address(this).balance}(address(this),balanceOf(address(this)),0,0,owner(),block.timestamp);\\r\\n        IERC20(uniswapV2Pair).approve(address(uniswapV2Router), type(uint).max);\\r\\n        swapEnabled = true;\\r\\n        tradingOpen = true;\\r\\n    }", "heimdall_decompiled_code": "function openTrading() public {\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        require(!(bytes1(store_g / 0x010000000000000000000000000000000000000000)), \"trading is already open\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x17;\n        var_d = 0x74726164696e6720697320616c7265616479206f70656e000000000000000000;\n        store_f = 0x7a250d5630b4cf539739df2c5dacb4c659f2488d | (uint96(store_f));\n        require(0x09, \"ERC20: approve to the zero address\");\n        require((0x01 == 0x01) | !0x3b9aca00, \"ERC20: approve to the zero address\");\n        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x11;\n        require(address(this), \"ERC20: approve to the zero address\");\n        require(0x7a250d5630b4cf539739df2c5dacb4c659f2488d, \"ERC20: approve to the zero address\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x22;\n        var_d = 0x45524332303a20617070726f766520746f20746865207a65726f206164647265;\n        var_g = 0x7373000000000000000000000000000000000000000000000000000000000000;\n        address var_e = address(this);\n        var_h = 0x02;\n        var_e = 0x7a250d5630b4cf539739df2c5dacb4c659f2488d;\n        address var_h = keccak256(var_e);\n        storage_map_n[var_e] = 0x3b9aca00;\n        var_a = 0x3b9aca00;\n        emit Approval(address(this), 0x7a250d5630b4cf539739df2c5dacb4c659f2488d, 0x3b9aca00);\n        var_a = 0xc45a015500000000000000000000000000000000000000000000000000000000;\n        (bool success, bytes memory ret0) = address(store_f / 0x01).factory(var_b); // staticcall\n        uint256 var_i = var_i + (uint248(ret0.length + 0x1f));\n        require(!((var_i + ret0.length) - var_i) < 0x20);\n        require(var_i.length == (address(var_i.length)));\n        var_j = 0xad5c464800000000000000000000000000000000000000000000000000000000;\n        (bool success, bytes memory ret0) = address(store_f / 0x01).WETH(var_c); // staticcall\n        var_i = var_i + (uint248(ret0.length + 0x1f));\n        require(!((var_i + ret0.length) - var_i) < 0x20);\n        require(var_i.length == (address(var_i.length)));\n        var_k = 0xc9c6539600000000000000000000000000000000000000000000000000000000;\n        address var_d = address(this);\n        uint256 var_g = address(var_i.length);\n        (bool success, bytes memory ret0) = address(var_i.length).Unresolved_c9c65396(var_d); // call\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x24;\n        var_d = 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464;\n        var_g = 0x7265737300000000000000000000000000000000000000000000000000000000;\n        if (0x0a) {\n            if (0x0a == 0x01) {\n                if (0x0a == 0x02) {\n                    if (!0x09 > 0xff) {\n                        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                        var_f = 0x11;\n                        if (!((0x0a < 0x0b) & (0x09 < 0x4e)) | ((0x0a < 0x0133) & (0x09 < 0x20))) {\n                            if (!0x09 > 0x01) {\n                                if (!0x01 > 0x1999999999999999999999999999999999999999999999999999999999999999) {\n                                    var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                    var_f = 0x11;\n                                    if (!0x0a > 0x1999999999999999999999999999999999999999999999999999999999999999) {\n                                        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                        var_f = 0x11;\n                                        if (!0x01) {\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }"}
{"contract_address": "0x90B22290c39A7D7451fb9B7922cB11e701308E97", "original_solidity_code": "function transfer(address recipient, uint256 amount) public override returns (bool) {\r\n        _transfer(_msgSender(), recipient, amount);\r\n        return true;\r\n    }", "heimdall_decompiled_code": "function transfer(address arg0, uint256 arg1) public {\n        require(arg0 == (address(arg0)));\n        require(arg1 == arg1);\n        require(address(msg.sender) - 0, \"_transfer:: Transfer Delay enabled.  Only one purchase per block allowed.\");\n        require(address(arg0) - 0, \"_transfer:: Transfer Delay enabled.  Only one purchase per block allowed.\");\n        require(arg1 > 0, \"_transfer:: Transfer Delay enabled.  Only one purchase per block allowed.\");\n        require(!(!(address(msg.sender)) == (address(owner / 0x01))), \"_transfer:: Transfer Delay enabled.  Only one purchase per block allowed.\");\n        require(!(!(address(arg0)) == (address(owner / 0x01))), \"_transfer:: Transfer Delay enabled.  Only one purchase per block allowed.\");\n        require(!(bytes1(transferDelayEnabled / 0x01)), \"_transfer:: Transfer Delay enabled.  Only one purchase per block allowed.\");\n        require(!(!(address(arg0)) == (address(store_c / 0x01))), \"_transfer:: Transfer Delay enabled.  Only one purchase per block allowed.\");\n        require(!(!(address(arg0)) == (address(store_d / 0x01))), \"_transfer:: Transfer Delay enabled.  Only one purchase per block allowed.\");\n        address var_a = address(tx.origin);\n        var_b = 0x04;\n        require(storage_map_e[var_a] < block.number, \"_transfer:: Transfer Delay enabled.  Only one purchase per block allowed.\");\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_d = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        var_f = 0x49;\n        var_g = 0x5f7472616e736665723a3a205472616e736665722044656c617920656e61626c;\n        var_h = 0x65642e20204f6e6c79206f6e652070757263686173652070657220626c6f636b;\n        var_i = 0x20616c6c6f7765642e0000000000000000000000000000000000000000000000;\n        var_a = address(tx.origin);\n        var_b = 0x04;\n        storage_map_e[var_a] = block.number;\n        require(!(address(msg.sender) == (address(store_d / 0x01))), \"SafeMath: addition overflow\");\n        require(!(address(msg.sender) == (address(store_d / 0x01))), \"SafeMath: addition overflow\");\n        require(!(address(msg.sender) == (address(store_d / 0x01))), \"SafeMath: addition overflow\");\n        require(!(address(arg0) == (address(store_d / 0x01))), \"SafeMath: addition overflow\");\n        require(!(address(arg0) == (address(store_d / 0x01))), \"SafeMath: addition overflow\");\n        var_a = address(this);\n        var_b = 0x01;\n        require(!(!bytes1(store_d / 0x01000000000000000000000000000000000000000000)), \"SafeMath: addition overflow\");\n        require(!(!bytes1(store_d / 0x01000000000000000000000000000000000000000000)), \"SafeMath: addition overflow\");\n        require(!(!bytes1(store_d / 0x01000000000000000000000000000000000000000000)), \"SafeMath: addition overflow\");\n        require(!(!bytes1(store_d / 0x01000000000000000000000000000000000000000000)), \"SafeMath: addition overflow\");\n        require(!(0 > 0), \"SafeMath: addition overflow\");\n        var_a = address(this);\n        var_b = 0x01;\n        require(!(storage_map_e[var_a] > (storage_map_e[var_a] + 0)), \"SafeMath: addition overflow\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_j = 0x11;\n        require(!((storage_map_e[var_a] + 0) < storage_map_e[var_a]), \"SafeMath: addition overflow\");\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        var_f = 0x1b;\n        var_g = 0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000;\n        var_a = address(this);\n        var_b = 0x01;\n        storage_map_e[var_a] = storage_map_e[var_a] + 0;\n        uint256 var_c = 0;\n        emit Transfer(address(msg.sender), address(this), 0);\n        var_a = address(msg.sender);\n        var_b = 0x01;\n        uint256 var_e = 0x40 + var_e;\n        var_c = 0x1e;\n        var_k = 0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000;\n        require(!(arg1 > storage_map_e[var_a]), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        var_l = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_g = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        uint256 var_h = var_e.length;\n        uint256 var_m = 0;\n        var_i = var_n;\n        var_m = 0;\n        require(!((storage_map_e[var_a] - arg1) > storage_map_e[var_a]), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_j = 0x11;\n        var_a = address(msg.sender);\n        var_b = 0x01;\n        storage_map_e[var_a] = storage_map_e[var_a] - arg1;\n        var_e = 0x40 + var_e;\n        var_l = 0x1e;\n        var_o = 0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000;\n        require(!(0 > arg1), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        var_p = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_i = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        uint256 var_q = var_e.length;\n        uint256 var_r = 0;\n        var_s = var_n;\n        var_r = 0;\n        require(!(arg1 - 0) > arg1);\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_j = 0x11;\n        require(arg1 < _taxSwapThreshold);\n        store_d = (0x01 * 0x01000000000000000000000000000000000000000000) | (uint248(store_d));\n        require(!0x02 > 0xffffffffffffffff);\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_j = 0x41;\n        var_c = 0x02;\n        var_e = var_e + 0x60;\n        require(!0x02);\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_j = 0x32;\n        address var_k = address(this);\n        var_o = 0xad5c464800000000000000000000000000000000000000000000000000000000;\n        (bool success, bytes memory ret0) = address(store_c / 0x01).WETH(var_h); // staticcall\n        var_e = var_e + (uint248(ret0.length + 0x1f));\n        require(!((var_e + ret0.length) - var_e) < 0x20);\n        require(var_t == (address(var_t)));\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_j = 0x32;\n        address var_l = address(var_t);\n        require(address(this) - 0);\n        require(address(store_c / 0x01) - 0);\n        var_a = address(this);\n        var_b = 0x02;\n        var_a = address(store_c / 0x01);\n        address var_b = keccak256(var_a);\n        storage_map_e[var_a] = arg1;\n        uint256 var_p = arg1;\n        emit Approval(address(this), address(store_c / 0x01), arg1);\n        var_p = 0x791ac94700000000000000000000000000000000000000000000000000000000;\n        var_i = arg1;\n        var_q = 0;\n        uint256 var_s = ((0x04 + var_e) + 0xa0) - (0x04 + var_e);\n        uint256 var_u = var_e.length;\n        address var_v = address(transferDelayEnabled / 0x0100);\n        uint256 var_w = block.timestamp;\n        require(address(store_c / 0x01).code.length);\n        (bool success, bytes memory ret0) = address(store_c / 0x01).Unresolved_791ac947(var_i); // call\n        var_p = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_i = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        var_q = 0x22;\n        var_s = 0x45524332303a20617070726f766520746f20746865207a65726f206164647265;\n        var_v = 0x7373000000000000000000000000000000000000000000000000000000000000;\n        var_p = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_i = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        var_q = 0x24;\n        var_s = 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464;\n        var_v = 0x7265737300000000000000000000000000000000000000000000000000000000;\n        store_d = (0x01 * 0x01000000000000000000000000000000000000000000) | (uint248(store_d));\n        require(!0x02 > 0xffffffffffffffff);\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_j = 0x41;\n        var_c = 0x02;\n        var_e = var_e + 0x60;\n        require(!0x02);\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_j = 0x32;\n        var_k = address(this);\n        var_o = 0xad5c464800000000000000000000000000000000000000000000000000000000;\n        (bool success, bytes memory ret0) = address(store_c / 0x01).WETH(var_h); // staticcall\n        var_e = var_e + (uint248(ret0.length + 0x1f));\n        require(!(((var_e + ret0.length) - var_e) < 0x20), \"ERC20: approve to the zero address\");\n        require(var_t == (address(var_t)), \"ERC20: approve to the zero address\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_j = 0x32;\n        var_l = address(var_t);\n        require(address(this) - 0, \"ERC20: approve to the zero address\");\n        require(address(store_c / 0x01) - 0, \"ERC20: approve to the zero address\");\n        var_p = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_i = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        var_q = 0x22;\n        var_s = 0x45524332303a20617070726f766520746f20746865207a65726f206164647265;\n        var_v = 0x7373000000000000000000000000000000000000000000000000000000000000;\n        var_p = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_i = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        var_q = 0x24;\n        var_s = 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464;\n        var_v = 0x7265737300000000000000000000000000000000000000000000000000000000;\n        if (!storage_map_e[var_a] > _taxSwapThreshold) {\n        }\n        if (!store_d / 0x0100000000000000000000000000000000000000000000) {\n        }\n        require(arg1 - 0, \"SafeMath: multiplication overflow\");\n        require(!arg1 | (store_g == ((arg1 * store_g) / arg1)), \"SafeMath: multiplication overflow\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_j = 0x11;\n        require(arg1, \"SafeMath: multiplication overflow\");\n        require(((arg1 * store_g) / arg1) == store_g, \"SafeMath: multiplication overflow\");\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        var_f = 0x21;\n        var_g = 0x536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f;\n        var_h = 0x7700000000000000000000000000000000000000000000000000000000000000;\n        var_e = 0x40 + var_e;\n        var_c = 0x1a;\n        var_k = 0x536166654d6174683a206469766973696f6e206279207a65726f000000000000;\n        if (0x64 > 0) {\n            if (0x64) {\n                var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                var_j = 0x12;\n                var_a = address(this);\n                var_b = 0x01;\n                if (store_d / 0x01000000000000000000000000000000000000000000) {\n                }\n                var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                var_j = 0x12;\n                if (address(msg.sender) == (address(this))) {\n                }\n                if (arg1 - 0) {\n                }\n                require(0x64 > 0, \"Transfer amount must be greater than zero\");\n                require(0x64, \"Transfer amount must be greater than zero\");\n            }\n        }\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        var_f = 0x29;\n        var_g = 0x5472616e7366657220616d6f756e74206d757374206265206772656174657220;\n        var_h = 0x7468616e207a65726f0000000000000000000000000000000000000000000000;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        var_f = 0x23;\n        var_g = 0x45524332303a207472616e7366657220746f20746865207a65726f2061646472;\n        var_h = 0x6573730000000000000000000000000000000000000000000000000000000000;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        var_f = 0x25;\n        var_g = 0x45524332303a207472616e736665722066726f6d20746865207a65726f206164;\n        var_h = 0x6472657373000000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0x4c5CbB44F1F835E2BbE255d8dBFb91A364b0D36B", "original_solidity_code": "function mintForTeam(uint256 amount) external nonReentrant onlyOwner {\\n        if (totalSupply() + amount > collectionSize) revert ExceedsMaxSupply();\\n        if (remainingTeamMints < amount) revert ExceedsMaxPerTeam();\\n        if (amount % maxBatchSize != 0) revert AmountNotMultipleOfBatchSize();\\n        \\n        uint256 SizeforTeam = amount / maxBatchSize;\\n        for (uint256 i = 0; i < SizeforTeam ; i++) {\\n            _safeMint(msg.sender, maxBatchSize);\\n        }\\n        \\n        remainingTeamMints -= amount; \\n        \\n    }", "heimdall_decompiled_code": "function mintForTeam(uint256 arg0) public {\n        require(store_d - 0x02, \"Ownable: caller is not the owner\");\n        store_d = 0x02;\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        require(!(totalSupply > (arg0 + totalSupply)), CustomError_c30436e9());\n        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x11;\n        require(!((arg0 + totalSupply) > 0x2710), CustomError_c30436e9());\n        var_a = 0xc30436e900000000000000000000000000000000000000000000000000000000;\n        require(!(remainingTeamMints < arg0), CustomError_9f5441e4());\n        var_a = 0x9f5441e400000000000000000000000000000000000000000000000000000000;\n        require(0x06, CustomError_4341e6ed());\n        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x12;\n        require(!(arg0 % 0x06), CustomError_4341e6ed());\n        var_a = 0x4341e6ed00000000000000000000000000000000000000000000000000000000;\n        require(0x06, \"ERC721A: token already minted\");\n        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x12;\n        require(!(0 < (arg0 / 0x06)), \"ERC721A: token already minted\");\n        uint256 var_g = var_b + var_g;\n        uint256 var_a = 0;\n        require(address(msg.sender), \"ERC721A: token already minted\");\n        require(!(totalSupply > totalSupply), \"ERC721A: token already minted\");\n        var_h = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_c = 0x20;\n        var_d = 0x1d;\n        var_i = 0x455243373231413a20746f6b656e20616c7265616479206d696e746564000000;\n        require(!(0x06 > 0x06), \"ERC721A: quantity to mint too high\");\n        var_h = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_c = 0x20;\n        var_d = 0x22;\n        var_i = 0x455243373231413a207175616e7469747920746f206d696e7420746f6f206869;\n        var_j = 0x6768000000000000000000000000000000000000000000000000000000000000;\n        address var_e = address(msg.sender);\n        var_k = 0x04;\n        var_g = 0x40 + var_g;\n        address var_h = address(storage_map_h[var_e]);\n        address var_l = address(storage_map_h[var_e] / 0x0100000000000000000000000000000000);\n        var_g = 0x40 + var_g;\n        require(!((0x06 + (address(var_g.length))) > 0xffffffffffffffffffffffffffffffff), \"ERC721A: mint to the zero address\");\n        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x11;\n        var_h = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_c = 0x20;\n        var_d = 0x21;\n        var_i = 0x455243373231413a206d696e7420746f20746865207a65726f20616464726573;\n        var_j = 0x7300000000000000000000000000000000000000000000000000000000000000;\n        require(!((remainingTeamMints - arg0) > remainingTeamMints), \"ReentrancyGuard: reentrant call\");\n        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x11;\n        remainingTeamMints = remainingTeamMints - arg0;\n        store_d = 0x01;\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x1f;\n        var_d = 0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00;\n    }"}
{"contract_address": "0xD551F2Bd835B49DB742f0382d441Ede9C7C1Ee30", "original_solidity_code": "function includeInFee(address account) public onlyOwner {\r\n        _isExcludedFromFee[account] = false;\r\n    }", "heimdall_decompiled_code": "function includeInFee(address arg0) public {\n        require(arg0 == (address(arg0)));\n        require(address(owner / 0x01) == (address(msg.sender)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_b = ((0x04 + var_c) + 0x20) - (0x04 + var_c);\n        var_d = 0x20;\n        var_e = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        address var_f = address(arg0);\n        var_g = 0x03;\n        storage_map_p[var_f] = (0 * 0x01) | (uint248(storage_map_p[var_f]));\n    }"}
{"contract_address": "0x00BCB434254797479bade33e1eF0aEBDB3F27089", "original_solidity_code": "function symbol() public view virtual override returns (string memory) {\r\n        return _symbol;\r\n    }", "heimdall_decompiled_code": "function symbol() public view returns (string memory) {\n        if (store_p) {\n            if (store_p - ((store_p >> 0x01) < 0x20)) {\n                var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                var_b = 0x22;\n                uint256 var_c = var_c + (0x20 + (((0x1f + (store_p >> 0x01)) / 0x20) * 0x20));\n                bytes32 var_d = store_p >> 0x01;\n                if (store_p) {\n                    if (store_p - ((store_p >> 0x01) < 0x20)) {\n                        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                        var_b = 0x22;\n                        if (!store_p >> 0x01) {\n                            if (0x1f < (store_p >> 0x01)) {\n                                var_a = 0x05;\n                                var_e = storage_map_b[var_a];\n                                if ((0x20 + var_c) + (store_p >> 0x01) > (0x20 + (0x20 + var_c))) {\n                                    var_e = 0x20;\n                                    uint256 var_f = var_c.length;\n                                    uint256 var_g = 0;\n                                    return abi.encodePacked(0x20, var_c.length);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }"}
{"contract_address": "0x172F7a6F8C76321376cf077c4b68f6C0A0907d2f", "original_solidity_code": "function setBlacklistEnabled() external onlyOwner {\r\n        require (blacklistEnabled == false, \"can only be called once\");\r\n        blacklistEnabled = true;\r\n    }", "heimdall_decompiled_code": "function setBlacklistEnabled() public {\n        require(address(msg.sender) == (address(getOwner / 0x01)), \"!Owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_b = ((0x04 + var_c) + 0x20) - (0x04 + var_c);\n        var_d = 0x06;\n        var_e = 0x214f776e65720000000000000000000000000000000000000000000000000000;\n        require((bytes1(blacklistEnabled / 0x010000000000000000000000000000000000000000)) == 0, \"can only be called once\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = ((0x04 + var_c) + 0x20) - (0x04 + var_c);\n        var_d = 0x17;\n        var_e = 0x63616e206f6e6c792062652063616c6c6564206f6e6365000000000000000000;\n        blacklistEnabled = (0x01 * 0x010000000000000000000000000000000000000000) | (uint248(blacklistEnabled));\n    }"}
{"contract_address": "0xB52Bb372A4C3336A6f3ddd8fB3dE8d6DF735Ad50", "original_solidity_code": "function increaseAllowance(address spender, uint256 addedValue) external returns (bool) {\\r\\n      _approve(msg.sender, spender, _allowances[msg.sender][spender].add(addedValue));\\r\\n      return true;\\r\\n    }", "heimdall_decompiled_code": "function increaseAllowance(address arg0, uint256 arg1) public payable returns (bool) {\n        address var_a = msg.sender;\n        var_b = 0x05;\n        var_a = address(arg0);\n        address var_b = keccak256(var_a);\n        require(!((arg1 + storage_map_e[var_a]) < storage_map_e[var_a]), \"SafeMath: addition overflow\");\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x1b;\n        var_f = 0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000;\n        require(address(msg.sender), \"ERC20: approve to the zero address\");\n        require(address(arg0), \"ERC20: approve to the zero address\");\n        var_a = address(msg.sender);\n        var_b = 0x05;\n        var_a = address(arg0);\n        var_b = keccak256(var_a);\n        storage_map_e[var_a] = arg1 + storage_map_e[var_a];\n        uint256 var_c = arg1 + storage_map_e[var_a];\n        emit Approval(address(msg.sender), address(arg0), arg1 + storage_map_e[var_a]);\n        var_c = 0x01;\n        return 0x01;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_d = (0x20 + (0x04 + var_g)) - (0x04 + var_g);\n        var_e = 0x22;\n        var_h = this.code[3127:3161];\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = (0x20 + (0x04 + var_g)) - (0x04 + var_g);\n        var_e = 0x24;\n        var_h = this.code[3276:3312];\n    }"}
{"contract_address": "0x39f3C6C2a3E69D908DFE9863C9127080CC487933", "original_solidity_code": "function symbol() public view virtual override returns (string memory) {\r\n        return _symbol;\r\n    }", "heimdall_decompiled_code": "function symbol() public view returns (string memory) {\n        if (store_r) {\n            if (store_r - ((store_r >> 0x01) < 0x20)) {\n                var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                var_b = 0x22;\n                uint256 var_c = var_c + (0x20 + (((0x1f + (store_r >> 0x01)) / 0x20) * 0x20));\n                bytes32 var_d = store_r >> 0x01;\n                if (store_r) {\n                    if (store_r - ((store_r >> 0x01) < 0x20)) {\n                        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                        var_b = 0x22;\n                        if (!store_r >> 0x01) {\n                            if (0x1f < (store_r >> 0x01)) {\n                                var_a = 0x04;\n                                var_e = storage_map_b[var_a];\n                                if ((0x20 + var_c) + (store_r >> 0x01) > (0x20 + (0x20 + var_c))) {\n                                    var_e = 0x20;\n                                    uint256 var_f = var_c.length;\n                                    uint256 var_g = 0;\n                                    return abi.encodePacked(0x20, var_c.length);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }"}
{"contract_address": "0xae260B2D9Fb8175B73552Ae4212261ed0756395b", "original_solidity_code": "function balanceOf(address account) public view override returns (uint256) {\r\n        return _balances[account];\r\n    }", "heimdall_decompiled_code": "function balanceOf(address arg0) public view returns (uint256) {\n        require(arg0 == (address(arg0)));\n        address var_a = address(arg0);\n        var_b = 0x01;\n        address var_c = storage_map_e[var_a];\n        return storage_map_e[var_a];\n    }"}
{"contract_address": "0xae260B2D9Fb8175B73552Ae4212261ed0756395b", "original_solidity_code": "function openTrading() external onlyOwner() {\r\n        require(!vhigepewh,\"trading is already open\");\r\n        uniswapRouter = IuniswapRouter(0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D);\r\n        _approve(address(this), address(uniswapRouter), _tTotal);\r\n        uniswapPair = IUniswapV2Factory(uniswapRouter.factory()).createPair(address(this), uniswapRouter.WETH());\r\n        uniswapRouter.addLiquidityETH{value: address(this).balance}(address(this),balanceOf(address(this)),0,0,owner(),block.timestamp);\r\n        IERC20(uniswapPair).approve(address(uniswapRouter), type(uint).max);\r\n        swapEnabled = true;\r\n        vhigepewh = true;\r\n    }", "heimdall_decompiled_code": "function openTrading() public {\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        require(!(bytes1(store_d / 0x010000000000000000000000000000000000000000)), \"trading is already open\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x17;\n        var_d = 0x74726164696e6720697320616c7265616479206f70656e000000000000000000;\n        store_c = 0x7a250d5630b4cf539739df2c5dacb4c659f2488d | (uint96(store_c));\n        require(0x09, \"ERC20: approve to the zero address\");\n        require((0x01 == 0x01) | !0x05f5e100, \"ERC20: approve to the zero address\");\n        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x11;\n        require(address(this), \"ERC20: approve to the zero address\");\n        require(0x7a250d5630b4cf539739df2c5dacb4c659f2488d, \"ERC20: approve to the zero address\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x22;\n        var_d = 0x45524332303a20617070726f766520746f20746865207a65726f206164647265;\n        var_g = 0x7373000000000000000000000000000000000000000000000000000000000000;\n        address var_e = address(this);\n        var_h = 0x02;\n        var_e = 0x7a250d5630b4cf539739df2c5dacb4c659f2488d;\n        address var_h = keccak256(var_e);\n        storage_map_m[var_e] = 0x05f5e100;\n        var_a = 0x05f5e100;\n        emit Approval(address(this), 0x7a250d5630b4cf539739df2c5dacb4c659f2488d, 0x05f5e100);\n        var_a = 0xc45a015500000000000000000000000000000000000000000000000000000000;\n        (bool success, bytes memory ret0) = address(store_c / 0x01).factory(var_b); // staticcall\n        uint256 var_i = var_i + (uint248(ret0.length + 0x1f));\n        require(!((var_i + ret0.length) - var_i) < 0x20);\n        require(var_i.length == (address(var_i.length)));\n        var_j = 0xad5c464800000000000000000000000000000000000000000000000000000000;\n        (bool success, bytes memory ret0) = address(store_c / 0x01).WETH(var_c); // staticcall\n        var_i = var_i + (uint248(ret0.length + 0x1f));\n        require(!((var_i + ret0.length) - var_i) < 0x20);\n        require(var_i.length == (address(var_i.length)));\n        var_k = 0xc9c6539600000000000000000000000000000000000000000000000000000000;\n        address var_d = address(this);\n        uint256 var_g = address(var_i.length);\n        (bool success, bytes memory ret0) = address(var_i.length).Unresolved_c9c65396(var_d); // call\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x24;\n        var_d = 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464;\n        var_g = 0x7265737300000000000000000000000000000000000000000000000000000000;\n        if (0x0a) {\n            if (0x0a == 0x01) {\n                if (0x0a == 0x02) {\n                    if (!0x09 > 0xff) {\n                        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                        var_f = 0x11;\n                        if (!((0x0a < 0x0b) & (0x09 < 0x4e)) | ((0x0a < 0x0133) & (0x09 < 0x20))) {\n                            if (!0x09 > 0x01) {\n                                if (!0x01 > 0x1999999999999999999999999999999999999999999999999999999999999999) {\n                                    var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                    var_f = 0x11;\n                                    if (!0x0a > 0x1999999999999999999999999999999999999999999999999999999999999999) {\n                                        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                        var_f = 0x11;\n                                        if (!0x01) {\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }"}
{"contract_address": "0xeb2634d7a45e11052eceD8F65c3e6e09aa42ECdf", "original_solidity_code": "function transfer(address to, uint256 amount) public virtual returns (bool) {\\n        balanceOf[msg.sender] -= amount;\\n\\n        // Cannot overflow because the sum of all user\\n        // balances can't exceed the max uint256 value.\\n        unchecked {\\n            balanceOf[to] += amount;\\n        }\\n\\n        emit Transfer(msg.sender, to, amount);\\n\\n        return true;\\n    }", "heimdall_decompiled_code": "function transfer(address arg0, uint256 arg1) public payable returns (bool) {\n        require(arg0 == (address(arg0)));\n        address var_a = msg.sender;\n        var_b = 0x03;\n        require(!(storage_map_b[var_a] - arg1) > storage_map_b[var_a]);\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x11;\n        storage_map_b[var_a] = storage_map_b[var_a] - arg1;\n        var_a = address(arg0);\n        var_b = 0x03;\n        storage_map_b[var_a] = arg1 + storage_map_b[var_a];\n        uint256 var_d = arg1;\n        emit Transfer(msg.sender, address(arg0), arg1);\n        var_d = 0x01;\n        return 0x01;\n    }"}
{"contract_address": "0x2b3d6a0c36f8Def06B6041B41090971155D124ae", "original_solidity_code": "function approve(address spender, uint256 amount) public override returns (bool) {\r\n        _approve(_msgSender(), spender, amount);\r\n        return true;\r\n    }", "heimdall_decompiled_code": "function approve(address arg0, uint256 arg1) public returns (bool) {\n        require(arg0 == (address(arg0)));\n        require(address(msg.sender), \"ERC20: approve to the zero address\");\n        require(address(arg0), \"ERC20: approve to the zero address\");\n        address var_a = address(msg.sender);\n        var_b = 0x02;\n        var_a = address(arg0);\n        address var_b = keccak256(var_a);\n        storage_map_b[var_a] = arg1;\n        uint256 var_c = arg1;\n        emit Approval(address(msg.sender), address(arg0), arg1);\n        var_c = 0x01;\n        return 0x01;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x22;\n        var_f = 0x45524332303a20617070726f766520746f20746865207a65726f206164647265;\n        var_g = 0x7373000000000000000000000000000000000000000000000000000000000000;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x24;\n        var_f = 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464;\n        var_g = 0x7265737300000000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0x700604d812AD038BB5fE00ddDB8c0375E65A307C", "original_solidity_code": "function balanceOf(address account) public view override returns (uint256) {\r\n        return _balances[account];\r\n    }", "heimdall_decompiled_code": "function balanceOf(address arg0) public view returns (uint256) {\n        require(arg0 == (address(arg0)));\n        address var_a = address(arg0);\n        var_b = 0x02;\n        address var_c = storage_map_k[var_a];\n        return storage_map_k[var_a];\n    }"}
{"contract_address": "0xfc606C8F7141110c3f295a22004D274680A9A029", "original_solidity_code": "function withdrawEth(address payable _to) public onlyOwner {\r\n        (bool sent, bytes memory data) = _to.call{value: address(this).balance}(\"\");\r\n        require(sent, \"Failed to send Ether\");\r\n    }", "heimdall_decompiled_code": "function withdrawEth(address arg0) public {\n        require(arg0 == (address(arg0)));\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        (bool success, bytes memory ret0) = address(arg0).transfer(address(this).balance);\n        require(ret0.length == 0, \"Failed to send Ether\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x14;\n        var_d = 0x4661696c656420746f2073656e64204574686572000000000000000000000000;\n        uint256 var_e = var_e + (uint248(ret0.length + 0x3f));\n        uint256 var_a = ret0.length;\n        var_f = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_g = 0x14;\n        var_h = 0x4661696c656420746f2073656e64204574686572000000000000000000000000;\n    }"}
{"contract_address": "0xa9055649C837175F188FD80057EFb744b1D22299", "original_solidity_code": "function approve(address spender, uint256 amount) public override returns (bool) {\r\n        _approve(_msgSender(), spender, amount);\r\n        return true;\r\n    }", "heimdall_decompiled_code": "function approve(address arg0, uint256 arg1) public returns (bool) {\n        require(arg0 == (address(arg0)));\n        require(arg1 == arg1);\n        require(address(msg.sender) - 0, \"ERC20: approve to the zero address\");\n        require(address(arg0) - 0, \"ERC20: approve to the zero address\");\n        address var_a = address(msg.sender);\n        var_b = 0x02;\n        var_a = address(arg0);\n        address var_b = keccak256(var_a);\n        storage_map_b[var_a] = arg1;\n        uint256 var_c = arg1;\n        emit Approval(address(msg.sender), address(arg0), arg1);\n        var_c = 0x01;\n        return 0x01;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_d = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        var_f = 0x22;\n        var_g = 0x45524332303a20617070726f766520746f20746865207a65726f206164647265;\n        var_h = 0x7373000000000000000000000000000000000000000000000000000000000000;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        var_f = 0x24;\n        var_g = 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464;\n        var_h = 0x7265737300000000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0x3E04B913dD981C1E6DF41aCBD8fB12A0B2A69171", "original_solidity_code": "function approve(address spender, uint256 amount) public override returns (bool) {\r\n        _allowances[msg.sender][spender] = amount;\r\n        emit Approval(msg.sender, spender, amount);\r\n        return true;\r\n    }", "heimdall_decompiled_code": "function approve(address arg0, uint256 arg1) public returns (bool) {\n        require(arg0 == (address(arg0)));\n        address var_a = msg.sender;\n        var_b = 0x03;\n        var_a = address(arg0);\n        address var_b = keccak256(var_a);\n        storage_map_b[var_a] = arg1;\n        uint256 var_c = arg1;\n        emit Approval(msg.sender, address(arg0), arg1);\n        var_c = 0x01;\n        return 0x01;\n    }"}
{"contract_address": "0x62DdfB2BA9444095aA52f34c00f73de37436139B", "original_solidity_code": "function renounceOwnership() public virtual onlyOwner {\r\n        emit OwnershipTransferred(_owner, address(0));\r\n        _owner = address(0);\r\n    }", "heimdall_decompiled_code": "function renounceOwnership() public payable {\n        require(address(owner / 0x01) == (address(msg.sender)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_b = (0x20 + (0x04 + var_c)) - (0x04 + var_c);\n        var_d = 0x20;\n        var_e = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        emit OwnershipTransferred(address(owner / 0x01), 0);\n        owner = 0 | (uint96(owner));\n    }"}
{"contract_address": "0x39f3C6C2a3E69D908DFE9863C9127080CC487933", "original_solidity_code": "function stealthLaunch() external onlyOwner {\r\n        pair = IFactory(router.factory()).createPair(address(this), router.WETH());\r\n        approve(address(router), type(uint256).max);\r\n        router.addLiquidityETH{value: address(this).balance}(\r\n            address(this),\r\n            balanceOf(address(this)),\r\n            0, \r\n            0, \r\n            owner(),\r\n            block.timestamp\r\n        );\r\n        require(!tradingEnabled, \"Trading is already enabled\");\r\n        tradingEnabled = true;\r\n        genesis_block = block.number;\r\n    }", "heimdall_decompiled_code": "function stealthLaunch() public {\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        var_a = 0xc45a015500000000000000000000000000000000000000000000000000000000;\n        (bool success, bytes memory ret0) = address(router / 0x01).factory(var_b); // staticcall\n        uint256 var_e = var_e + (uint248(ret0.length + 0x1f));\n        require(!((var_e + ret0.length) - var_e) < 0x20);\n        require(var_e.length == (address(var_e.length)));\n        var_f = 0xad5c464800000000000000000000000000000000000000000000000000000000;\n        (bool success, bytes memory ret0) = address(router / 0x01).WETH(var_c); // staticcall\n        var_e = var_e + (uint248(ret0.length + 0x1f));\n        require(!((var_e + ret0.length) - var_e) < 0x20);\n        require(var_e.length == (address(var_e.length)));\n        var_g = 0xc9c6539600000000000000000000000000000000000000000000000000000000;\n        address var_d = address(this);\n        uint256 var_h = address(var_e.length);\n        (bool success, bytes memory ret0) = address(var_e.length).Unresolved_c9c65396(var_d); // call\n    }"}
{"contract_address": "0x5ED7ad95beA8f3c7aB1bDeCCb843EbDE3B902BB2", "original_solidity_code": "function openTrading() external onlyOwner() {\r\n        require(!tradingOpen,\"trading is already open\");\r\n        uniswapV2Router = IUniswapV2Router02(0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D);\r\n        _approve(address(this), address(uniswapV2Router), _tTotal);\r\n        uniswapV2Pair = IUniswapV2Factory(uniswapV2Router.factory()).createPair(address(this), uniswapV2Router.WETH());\r\n        uniswapV2Router.addLiquidityETH{value: address(this).balance}(address(this),balanceOf(address(this)),0,0,owner(),block.timestamp);\r\n        IERC20(uniswapV2Pair).approve(address(uniswapV2Router), type(uint).max);\r\n        swapEnabled = true;\r\n        tradingOpen = true;\r\n        firstBlock = block.number;\r\n    }", "heimdall_decompiled_code": "function openTrading() public {\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        require(!(bytes1(store_f / 0x010000000000000000000000000000000000000000)), \"trading is already open\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x17;\n        var_d = 0x74726164696e6720697320616c7265616479206f70656e000000000000000000;\n        store_l = 0x7a250d5630b4cf539739df2c5dacb4c659f2488d | (uint96(store_l));\n        require(0x09, \"ERC20: approve to the zero address\");\n        require((0x01 == 0x01) | !0x0646880c8800, \"ERC20: approve to the zero address\");\n        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x11;\n        require(address(this), \"ERC20: approve to the zero address\");\n        require(0x7a250d5630b4cf539739df2c5dacb4c659f2488d, \"ERC20: approve to the zero address\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x22;\n        var_d = 0x45524332303a20617070726f766520746f20746865207a65726f206164647265;\n        var_g = 0x7373000000000000000000000000000000000000000000000000000000000000;\n        address var_e = address(this);\n        var_h = 0x02;\n        var_e = 0x7a250d5630b4cf539739df2c5dacb4c659f2488d;\n        address var_h = keccak256(var_e);\n        storage_map_m[var_e] = 0x0646880c8800;\n        var_a = 0x0646880c8800;\n        emit Approval(address(this), 0x7a250d5630b4cf539739df2c5dacb4c659f2488d, 0x0646880c8800);\n        var_a = 0xc45a015500000000000000000000000000000000000000000000000000000000;\n        (bool success, bytes memory ret0) = address(store_l / 0x01).factory(var_b); // staticcall\n        uint256 var_i = var_i + (uint248(ret0.length + 0x1f));\n        require(!((var_i + ret0.length) - var_i) < 0x20);\n        require(var_i.length == (address(var_i.length)));\n        var_j = 0xad5c464800000000000000000000000000000000000000000000000000000000;\n        (bool success, bytes memory ret0) = address(store_l / 0x01).WETH(var_c); // staticcall\n        var_i = var_i + (uint248(ret0.length + 0x1f));\n        require(!((var_i + ret0.length) - var_i) < 0x20);\n        require(var_i.length == (address(var_i.length)));\n        var_k = 0xc9c6539600000000000000000000000000000000000000000000000000000000;\n        address var_d = address(this);\n        uint256 var_g = address(var_i.length);\n        (bool success, bytes memory ret0) = address(var_i.length).Unresolved_c9c65396(var_d); // call\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x24;\n        var_d = 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464;\n        var_g = 0x7265737300000000000000000000000000000000000000000000000000000000;\n        if (0x0a) {\n            if (0x0a == 0x01) {\n                if (0x0a == 0x02) {\n                    if (!0x09 > 0xff) {\n                        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                        var_f = 0x11;\n                        if (!((0x0a < 0x0b) & (0x09 < 0x4e)) | ((0x0a < 0x0133) & (0x09 < 0x20))) {\n                            if (!0x09 > 0x01) {\n                                if (!0x01 > 0x1999999999999999999999999999999999999999999999999999999999999999) {\n                                    var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                    var_f = 0x11;\n                                    if (!0x0a > 0x1999999999999999999999999999999999999999999999999999999999999999) {\n                                        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                        var_f = 0x11;\n                                        if (!0x01) {\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }"}
{"contract_address": "0x1c6e35bFEA40f3709DA709f0f2e55604C1F53a1f", "original_solidity_code": "function allowance(address __owner, address spender) public view virtual returns (uint256) {\r\n        return allowances[__owner][spender];\r\n    }", "heimdall_decompiled_code": "function allowance(address arg0, address arg1) public view returns (uint256) {\n        address var_a = address(arg0);\n        var_b = 0x05;\n        var_a = address(arg1);\n        address var_b = keccak256(var_a);\n        address var_c = storage_map_a[var_a];\n        return storage_map_a[var_a];\n    }"}
{"contract_address": "0x172F7a6F8C76321376cf077c4b68f6C0A0907d2f", "original_solidity_code": "function transferOwnership(address payable adr) public onlyOwner {\r\n        owner = adr;\r\n        emit OwnershipTransferred(adr);\r\n    }", "heimdall_decompiled_code": "function transferOwnership(address arg0) public {\n        require(arg0 == (address(arg0)));\n        require(address(msg.sender) == (address(getOwner / 0x01)), \"!Owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_b = ((0x04 + var_c) + 0x20) - (0x04 + var_c);\n        var_d = 0x06;\n        var_e = 0x214f776e65720000000000000000000000000000000000000000000000000000;\n        getOwner = (address(arg0) * 0x01) | (uint96(getOwner));\n        address var_a = address(arg0);\n        emit OwnershipTransferred(address(arg0));\n    }"}
{"contract_address": "0x2Ceb4C183733343E17f5EfE54cD214238a1A2001", "original_solidity_code": "function approve(address spender, uint256 amount) public override returns (bool) {\r\n        _approve(_msgSender(), spender, amount);\r\n        return true;\r\n    }", "heimdall_decompiled_code": "function approve(address arg0, uint256 arg1) public returns (bool) {\n        require(arg0 == (address(arg0)));\n        require(arg1 == arg1);\n        require(address(msg.sender) - 0, \"ERC20: approve to the zero address\");\n        require(address(arg0) - 0, \"ERC20: approve to the zero address\");\n        address var_a = address(msg.sender);\n        var_b = 0x02;\n        var_a = address(arg0);\n        address var_b = keccak256(var_a);\n        storage_map_b[var_a] = arg1;\n        uint256 var_c = arg1;\n        emit Approval(address(msg.sender), address(arg0), arg1);\n        var_c = 0x01;\n        return 0x01;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_d = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        var_f = 0x22;\n        var_g = 0x45524332303a20617070726f766520746f20746865207a65726f206164647265;\n        var_h = 0x7373000000000000000000000000000000000000000000000000000000000000;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        var_f = 0x24;\n        var_g = 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464;\n        var_h = 0x7265737300000000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0x693E9C1e8935caf91F006bf5a2FF8a1aB2C569c7", "original_solidity_code": "function changeTotalFees(uint256 newBuyFee, uint256 newSellFee) external onlyOwner {\r\n        buyFee = newBuyFee;\r\n        sellFee = newSellFee; \r\n    }", "heimdall_decompiled_code": "function changeTotalFees(uint256 arg0, uint256 arg1) public {\n        require(msg.sender == (address(getOwner)), \"!Owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x06;\n        var_d = 0x214f776e65720000000000000000000000000000000000000000000000000000;\n        buyFee = arg0;\n        sellFee = arg1;\n    }"}
{"contract_address": "0xf06ea21cB6894CC70e2EF280026D5Fc5bEE15421", "original_solidity_code": "function farm(uint256 _amount, uint256 _lockableDays) public \r\n    {\r\n        require(isStakingAvilable==true,\"Staking is paused!\");\r\n        require(_amount >= minimumDeposit, \"Invalid amount\");\r\n        require(allocation[_lockableDays] > 0, \"Invalid day selection\");\r\n        Token.transferFrom(msg.sender, address(this), _amount);\r\n        depositeToken[msg.sender].push(_amount);\r\n        depositetime[msg.sender].push(uint40(block.timestamp));\r\n        Users[msg.sender].DepositeToken += _amount;\r\n        lockabledays[msg.sender].push(_lockableDays);\r\n        stakers.push(msg.sender);\r\n        totalStakedToken+=_amount;\r\n        totallockvalue+=_amount;\r\n        uint256 reward = (allocation[_lockableDays].mul(_amount).div(100)).div(1e18);\r\n        rewardtobewithdraw+=reward;\r\n        emit Deposite_(msg.sender,address(this),_amount,_lockableDays,block.timestamp);\r\n    }", "heimdall_decompiled_code": "function farm(uint256 arg0, uint256 arg1) public payable {\n        require(0x01 == (bytes1(isStakingAvilable)), \"Invalid amount\");\n        require(!(arg0 < minimumDeposit), \"Invalid amount\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x0e;\n        var_d = 0x496e76616c696420616d6f756e74000000000000000000000000000000000000;\n        uint256 var_e = arg1;\n        var_f = 0x02;\n        require(storage_map_c[var_e]);\n        var_a = 0x23b872dd00000000000000000000000000000000000000000000000000000000;\n        address var_b = address(msg.sender);\n        address var_c = address(this);\n        uint256 var_d = arg0;\n        require(address(Token).code.length);\n        (bool success, bytes memory ret0) = address(Token).{ value: 0 ether }Unresolved_23b872dd(var_b); // call\n        uint256 var_g = var_g + (uint248(ret0.length + 0x1f));\n        require(!((var_g + ret0.length) - var_g) < 0x20);\n        require(var_g.length == var_g.length);\n        var_e = msg.sender;\n        var_f = 0x03;\n        storage_map_c[var_e] = 0x01 + storage_map_c[var_e];\n        var_e = keccak256(var_e);\n        storage_map_e[var_e] = arg0;\n        var_e = msg.sender;\n        var_f = 0x05;\n        storage_map_c[var_e] = storage_map_c[var_e] + 0x01;\n        var_e = keccak256(var_e);\n        storage_map_f[var_e] = uint40(block.timestamp);\n        var_e = msg.sender;\n        var_f = 0x06;\n        require(!storage_map_c[var_e] > ~(arg0));\n        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_h = 0x11;\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x15;\n        var_d = 0x496e76616c6964206461792073656c656374696f6e0000000000000000000000;\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x12;\n        var_d = 0x5374616b696e6720697320706175736564210000000000000000000000000000;\n    }"}
{"contract_address": "0x4c5CbB44F1F835E2BbE255d8dBFb91A364b0D36B", "original_solidity_code": "function setSalePhase(uint256 phase) external onlyOwner {\\n        salePhase = phase;\\n    }", "heimdall_decompiled_code": "function setSalePhase(uint256 arg0) public {\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        salePhase = arg0;\n    }"}
{"contract_address": "0x229e55453Cd4319499728c08f3D8C57a97615E6a", "original_solidity_code": "function approve(address spender, uint256 amount) public override returns (bool) {\r\n        _approve(_msgSender(), spender, amount);\r\n        return true;\r\n    }", "heimdall_decompiled_code": "function approve(address arg0, uint256 arg1) public returns (bool) {\n        require(arg0 == (address(arg0)));\n        require(address(msg.sender), \"ERC20: approve to the zero address\");\n        require(address(arg0), \"ERC20: approve to the zero address\");\n        address var_a = address(msg.sender);\n        var_b = 0x02;\n        var_a = address(arg0);\n        address var_b = keccak256(var_a);\n        storage_map_b[var_a] = arg1;\n        uint256 var_c = arg1;\n        emit Approval(address(msg.sender), address(arg0), arg1);\n        var_c = 0x01;\n        return 0x01;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x22;\n        var_f = 0x45524332303a20617070726f766520746f20746865207a65726f206164647265;\n        var_g = 0x7373000000000000000000000000000000000000000000000000000000000000;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x24;\n        var_f = 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464;\n        var_g = 0x7265737300000000000000000000000000000000000000000000000000000000;\n    }"}
{"contract_address": "0xc921a48b2bBd243aC30422B266edf58F472Eca7F", "original_solidity_code": "function setPair(address pairAddress) external onlyOwner {\\r\\n        pair = pairAddress;\\r\\n}", "heimdall_decompiled_code": "function setPair(address arg0) public {\n        require(arg0 == (address(arg0)));\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        pair = (address(arg0)) | (uint96(pair));\n    }"}
