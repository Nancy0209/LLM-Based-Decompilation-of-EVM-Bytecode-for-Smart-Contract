{
    "contract_address": "0x5Bfdf57678baFB4eBB2c09279ac382397F3006b6",
    "heimdall_input": "function balanceOf(address arg0) public view {\n        require(arg0 == (address(arg0)));\n        address var_a = address(arg0);\n        var_b = 0x02;\n        require(!(storage_map_l[var_a] > store_m), \"Amount must be less than total reflections\");\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x2a;\n        var_f = 0x416d6f756e74206d757374206265206c657373207468616e20746f74616c2072;\n        var_g = 0x65666c656374696f6e7300000000000000000000000000000000000000000000;\n        uint256 var_h = 0x40 + var_h;\n        var_c = 0x1a;\n        var_i = 0x536166654d6174683a206469766973696f6e206279207a65726f000000000000;\n        require(0x0de0b6b3a7640000, \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        var_j = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_f = 0x20;\n        uint256 var_g = var_h.length;\n        require(!(0 > var_h.length), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        uint256 var_k = 0;\n        var_l = var_m;\n        require(!(0x20 > var_h.length), \"SafeMath: division by zero\");\n        var_k = 0;\n        if (0x0de0b6b3a7640000) {\n            var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n            var_n = 0x12;\n            require(0x0de0b6b3a7640000);\n        }\n    }",
    "llm_output": "function balanceOf(address account) public view {\n    // Redundant but preserved check\n    require(account == address(account));\n\n    address user = account;\n\n    // Placeholder variable (kept for fidelity)\n    uint8 _unusedFlag = 0x02;\n\n    // Reflection balance vs. total reflections check\n    require(!(_reflectionBalances[user] > _totalReflections), \"Amount must be less than total reflections\");\n\n    // -------- Decompiler artefacts (kept verbatim) --------\n    bytes32 _errSelector1 = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n    bytes32 _dummyData1   = 0x416d6f756e74206d757374206265206c657373207468616e20746f74616c2072;\n    bytes32 _dummyData2   = 0x65666c656374696f6e7300000000000000000000000000000000000000000000;\n    bytes memory _scratch = new bytes(0x40);\n    bytes32 _dummyData3   = 0x536166654d6174683a206469766973696f6e206279207a65726f000000000000;\n    // ------------------------------------------------------\n\n    // Constant-true require preserved\n    require(0x0de0b6b3a7640000 != 0, \"\");\n\n    bytes32 _errSelector2 = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n    uint256 _scratchLength = _scratch.length;\n\n    require(!(0 > _scratchLength), \"\");\n\n    uint256 _unusedCounter1 = 0;\n    uint256 _unusedCounter2 = _scratchLength;\n\n    require(!(0x20 > _scratchLength), \"SafeMath: division by zero\");\n\n    _unusedCounter1 = 0;\n\n    if (0x0de0b6b3a7640000 != 0) {\n        bytes4 _panicSelector = 0x4e487b71;\n        uint8  _panicCode     = 0x12;\n        require(0x0de0b6b3a7640000 != 0);\n    }\n}",
    "ground_truth": "function balanceOf(address account) public view override returns (uint256) {\r\nreturn tokenFromReflection(_rOwned[account]);\r\n}"
}