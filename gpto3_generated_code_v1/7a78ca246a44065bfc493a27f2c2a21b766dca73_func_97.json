{
    "contract_address": "0x7A78ca246a44065Bfc493a27f2C2A21B766dCA73",
    "heimdall_input": "function isBot(address arg0) public view returns (bool) {\n        require(arg0 == (address(arg0)));\n        address var_a = address(arg0);\n        var_b = 0x04;\n        address var_c = !(!bytes1(storage_map_b[var_a]));\n        return !(!bytes1(storage_map_b[var_a]));\n    }",
    "llm_output": "function isBot(address account) public view returns (bool) {\n    // Redundant but preserved check from the decompiled bytecode\n    require(account == address(account));\n\n    // Dummy assignment kept to maintain byte-for-byte logic fidelity\n    uint8 _unused = 0x04;\n\n    // Original bytecode stores a single byte; double negation converts it to a boolean\n    bool flagged = !(!bytes1(_botFlag[account]));\n    return flagged;\n}",
    "ground_truth": "function isBot(address a) public view returns (bool){\r\n      return bots[a];\r\n    }"
}