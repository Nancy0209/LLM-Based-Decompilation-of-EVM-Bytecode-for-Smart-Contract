{
    "contract_address": "0x842FD31eAd327AE42D19B7BFbdB045d3A219c662",
    "heimdall_input": "function changeW1(address arg0) public {\n        require(arg0 == (address(arg0)));\n        require(msg.sender == (address(getOwner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        require(address(arg0), \"BigBoss: Address Zero\");\n        store_b = (address(arg0) * 0x0100) | (uint96(store_b));\n        address var_a = address(arg0);\n        emit _changeW1(address(arg0));\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x15;\n        var_d = 0x426967426f73733a2041646472657373205a65726f0000000000000000000000;\n    }",
    "llm_output": "pragma solidity ^0.8.0;\n\ncontract BigBoss {\n    // ---------------------------------------------------------------------\n    // Storage\n    // ---------------------------------------------------------------------\n    address private _owner;\n    uint256 private _packedData;\n\n    // ---------------------------------------------------------------------\n    // Events\n    // ---------------------------------------------------------------------\n    event W1Changed(address newW1);\n\n    // ---------------------------------------------------------------------\n    // Constructor (assumes deployer is the owner)\n    // ---------------------------------------------------------------------\n    constructor() {\n        _owner = msg.sender;\n    }\n\n    // ---------------------------------------------------------------------\n    // External / Public Functions\n    // ---------------------------------------------------------------------\n    function changeW1(address newW1) external {\n        // -----------------------------------------------------------------\n        // Decompiled no-op placeholders (kept to preserve 1:1 logic mapping)\n        // -----------------------------------------------------------------\n        bytes32 _placeholder1 = 0x08c379a0000000000000000000000000000000000000000000000000000000;\n        uint256 _placeholder2 = 0x20;\n        uint256 _placeholder3 = 0x20;\n        bytes32 _placeholder4 = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        _placeholder1; _placeholder2; _placeholder3; _placeholder4; // silence compiler warnings\n\n        // -----------------------------------------------------------------\n        // Original Logic\n        // -----------------------------------------------------------------\n        require(newW1 == address(newW1));                         // tautological check (preserved)\n        require(msg.sender == _owner, \"Ownable: caller is not the owner\");\n        require(newW1 != address(0), \"BigBoss: Address Zero\");\n\n        // Pack the new address into the high-order bits while preserving\n        // the lower 96 bits of existing data (same arithmetic as decompiled).\n        _packedData =\n            (uint256(uint160(newW1)) * 0x0100) |                  // shift left by 8 bits\n            uint96(_packedData);                                  // retain lower 96 bits\n\n        emit W1Changed(newW1);\n\n        // -----------------------------------------------------------------\n        // Additional decompiled no-ops (kept for absolute fidelity)\n        // -----------------------------------------------------------------\n        bytes32 _placeholder5 = 0x08c379a0000000000000000000000000000000000000000000000000000000;\n        uint256 _placeholder6 = 0x20;\n        uint256 _placeholder7 = 0x15;\n        bytes32 _placeholder8 = 0x426967426f73733a2041646472657373205a65726f0000000000000000000000;\n        _placeholder5; _placeholder6; _placeholder7; _placeholder8; // silence compiler warnings\n    }\n}",
    "ground_truth": "function changeW1(address MarketingW) external onlyOwner {\r\n        require(MarketingW != address(0),\"BigBoss: Address Zero\");\r\n        MarketingAddress = payable(MarketingW);\r\n        emit _changeW1(MarketingW);\r\n    }"
}