{
    "contract_address": "0xaEAD18A6f788fb7460aDA9fDFf4C4Cd6Ba72dDBE",
    "heimdall_input": "function getApproved(uint256 arg0) public view returns (address) {\n        require(0x01 > arg0, CustomError_cf4700e4());\n        require(!(arg0 < totalSupply), CustomError_cf4700e4());\n        uint256 var_a = arg0;\n        var_b = 0x2569078dfb4b0305704d3008e7403993ae9601b85f7ae5e742de3de8f8011c44;\n        require(0 - storage_map_b[var_a], CustomError_cf4700e4());\n        require(!(bytes1(storage_map_b[var_a])), CustomError_cf4700e4());\n        var_a = 0xcf4700e400000000000000000000000000000000000000000000000000000000;\n        var_a = arg0;\n        var_b = 0x2569078dfb4b0305704d3008e7403993ae9601b85f7ae5e742de3de8f8011c46;\n        uint256 var_c = address(storage_map_b[var_a]);\n        return address(storage_map_b[var_a]);\n        if (arg0) {\n            var_a = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff + arg0;\n            var_b = 0x2569078dfb4b0305704d3008e7403993ae9601b85f7ae5e742de3de8f8011c44;\n            if (0 - storage_map_b[var_a]) {\n                require(arg0, CustomError_cf4700e4());\n                var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                var_d = 0x11;\n                var_a = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff + (0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff + arg0);\n                var_b = 0x2569078dfb4b0305704d3008e7403993ae9601b85f7ae5e742de3de8f8011c44;\n                require(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff + arg0, CustomError_cf4700e4());\n            }\n        }\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_d = 0x11;\n        require(0, CustomError_cf4700e4());\n        var_a = arg0;\n        var_b = 0x2569078dfb4b0305704d3008e7403993ae9601b85f7ae5e742de3de8f8011c46;\n        var_c = address(storage_map_b[var_a]);\n        return address(storage_map_b[var_a]);\n        var_a = 0xcf4700e400000000000000000000000000000000000000000000000000000000;\n    }",
    "llm_output": "function getApproved(uint256 tokenId) public view returns (address) {\n    /*  require(0x01 > tokenId, CustomError_cf4700e4()); */\n    if (!(1 > tokenId)) revert CustomError_cf4700e4();\n\n    /*  require(!(tokenId < totalSupply), CustomError_cf4700e4()); */\n    if (tokenId < totalSupply) revert CustomError_cf4700e4();\n\n    address approvedAddress = _tokenApprovals[tokenId];\n\n    /*  require(0 - storage_map_b[tokenId], CustomError_cf4700e4());\n        In the original byte-code this passes only when approvedAddress != 0  */\n    if (approvedAddress == address(0)) revert CustomError_cf4700e4();\n\n    /*  require(!(bytes1(storage_map_b[tokenId])), CustomError_cf4700e4());\n        This reverts when the most-significant byte of the address is non-zero */\n    uint8 mostSignificantByte = uint8(uint160(approvedAddress) >> 152);\n    if (mostSignificantByte != 0) revert CustomError_cf4700e4();\n\n    return approvedAddress;\n}",
    "ground_truth": "function getApproved(uint256 tokenId) public view virtual override returns (address) {\\n        if (!_exists(tokenId)) _revert(ApprovalQueryForNonexistentToken.selector);\\n\\n        return ERC721AStorage.layout()._tokenApprovals[tokenId].value;\\n    }"
}