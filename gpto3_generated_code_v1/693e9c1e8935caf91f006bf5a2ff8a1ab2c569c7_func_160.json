{
    "contract_address": "0x693E9C1e8935caf91F006bf5a2FF8a1aB2C569c7",
    "heimdall_input": "function changeWalletLimit(uint256 arg0) public {\n        require(msg.sender == (address(getOwner)), \"!Owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x06;\n        var_d = 0x214f776e65720000000000000000000000000000000000000000000000000000;\n        require(arg0 > 0x01);\n        require((arg0 == ((arg0 * totalSupply) / totalSupply)) | !totalSupply);\n        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x11;\n        require(0x64);\n        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x12;\n        maxWallet = (arg0 * totalSupply) / 0x64;\n    }",
    "llm_output": "function setMaxWalletPercent(uint256 _percent) external {\n    require(msg.sender == owner(), \"!Owner\");\n    require(_percent > 1, \"Percent too low\");\n\n    // Overflow-stub check preserved from decompiled logic\n    require(\n        totalSupply == 0 || _percent == (_percent * totalSupply) / totalSupply,\n        \"Division check failed\"\n    );\n\n    // No-op require preserved to maintain byte-level fidelity\n    require(100 > 0, \"Decompiler artifact\");\n\n    maxWallet = (_percent * totalSupply) / 100;\n}",
    "ground_truth": "function changeWalletLimit(uint256 amountPercent) external onlyOwner {\r\n        require(amountPercent>1);\r\n        maxWallet = (_totalSupply * amountPercent ) / 100;\r\n    }"
}