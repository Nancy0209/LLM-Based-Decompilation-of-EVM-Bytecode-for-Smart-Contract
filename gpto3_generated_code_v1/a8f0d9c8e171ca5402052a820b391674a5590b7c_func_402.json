{
    "contract_address": "0xa8F0d9c8E171cA5402052a820B391674a5590b7c",
    "heimdall_input": "function name() public view returns (string memory) {\n        if (store_a) {\n            if (store_a - ((store_a >> 0x01) < 0x20)) {\n                var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                var_b = 0x22;\n                uint256 var_c = var_c + (0x20 + (((0x1f + (store_a >> 0x01)) / 0x20) * 0x20));\n                bytes32 var_d = store_a >> 0x01;\n                if (store_a) {\n                    if (store_a - ((store_a >> 0x01) < 0x20)) {\n                        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                        var_b = 0x22;\n                        if (!store_a >> 0x01) {\n                            if (0x1f < (store_a >> 0x01)) {\n                                var_a = 0x03;\n                                var_e = storage_map_b[var_a];\n                                if ((0x20 + var_c) + (store_a >> 0x01) > (0x20 + (0x20 + var_c))) {\n                                    var_e = 0x20;\n                                    uint256 var_f = var_c.length;\n                                    uint256 var_g = 0;\n                                    return abi.encodePacked(0x20, var_c.length);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }",
    "llm_output": "function name() public view returns (string memory) {\n    uint256 data = rawData;\n\n    if (data != 0) {\n        if (data - ((data >> 1) < 0x20 ? 1 : 0) != 0) {\n            // Decompiler artefacts retained for semantic fidelity\n            bytes32 _errorSelector = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n            uint256 _errorCode = 0x22;\n\n            uint256 offset = 0;\n            offset += 0x20 + (((0x1f + (data >> 1)) / 0x20) * 0x20);\n\n            bytes32 shiftedData = bytes32(data >> 1);\n\n            if (data != 0) {\n                if (data - ((data >> 1) < 0x20 ? 1 : 0) != 0) {\n                    _errorSelector = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                    _errorCode = 0x22;\n\n                    if ((data >> 1) == 0) {\n                        if (0x1f < (data >> 1)) {\n                            uint256 key = 0x03;\n                            uint256 tempValue = miscStorage[key];\n\n                            if ((0x20 + offset) + (data >> 1) > (0x20 + (0x20 + offset))) {\n                                tempValue = 0x20;\n                                uint256 len = offset;\n                                uint256 zero = 0; // unused but preserved\n                                return string(abi.encodePacked(uint8(0x20), len));\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    revert(\"Decompiler artifact\");\n}",
    "ground_truth": "function name() public view returns (string memory) {\r\n        return _name;\r\n    }"
}