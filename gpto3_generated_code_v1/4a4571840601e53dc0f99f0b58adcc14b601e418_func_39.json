{
    "contract_address": "0x4a4571840601e53dC0f99F0b58AdCC14B601e418",
    "heimdall_input": "function balanceOf(address arg0) public view returns (uint256) {\n        require(arg0 == (address(arg0)));\n        address var_a = address(arg0);\n        var_b = 0x01;\n        address var_c = storage_map_b[var_a];\n        return storage_map_b[var_a];\n    }",
    "llm_output": "function balanceOf(address account) public view returns (uint256) {\n    require(account == address(account));\n\n    // Local address copy (mirrors original var_a usage)\n    address _addr = account;\n\n    // Unused flag preserved from decompiled logic (mirrors original var_b = 0x01)\n    uint256 _unusedFlag = 0x01;\n\n    // Cached balance read (mirrors original var_c assignment)\n    uint256 _balanceCache = _balances[_addr];\n\n    return _balances[_addr];\n}",
    "ground_truth": "function balanceOf(address account) public view override returns (uint256) {\r\n        return _balances[account];\r\n    }"
}