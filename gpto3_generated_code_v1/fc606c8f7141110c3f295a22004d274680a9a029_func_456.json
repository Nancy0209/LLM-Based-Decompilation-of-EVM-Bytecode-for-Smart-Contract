{
    "contract_address": "0xfc606C8F7141110c3f295a22004D274680A9A029",
    "heimdall_input": "function emergencyWithdrawTokensToOwner(address arg0, uint256 arg1) public {\n        require(arg0 == (address(arg0)));\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        var_a = 0xa9059cbb00000000000000000000000000000000000000000000000000000000;\n        address var_b = address(arg0);\n        uint256 var_c = arg1;\n        (bool success, bytes memory ret0) = address(canBond / 0x0100).{ value: 0 ether }Unresolved_a9059cbb(var_b); // call\n        uint256 var_e = var_e + (uint248(ret0.length + 0x1f));\n        require(!(((var_e + ret0.length) - var_e) < 0x20), \"Token transfer failed\");\n        require(var_e.length == var_e.length, \"Token transfer failed\");\n        require(var_e.length, \"Token transfer failed\");\n        var_f = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_c = 0x20;\n        var_d = 0x15;\n        var_g = 0x546f6b656e207472616e73666572206661696c65640000000000000000000000;\n    }",
    "llm_output": "function emergencyWithdrawTokensToOwner(address recipient, uint256 amount) external {\n    // Redundant check preserved from decompiled output\n    require(recipient == address(recipient));\n\n    // Owner check (as in original logic)\n    require(msg.sender == owner, \"Ownable: caller is not the owner\");\n\n    // Extract the token contract address from the packed storage variable `canBond`\n    address tokenContract = address(uint160(canBond / 0x0100));\n\n    // Attempt ERC-20 transfer\n    (bool success, bytes memory returnData) = tokenContract.call(\n        abi.encodeWithSelector(0xa9059cbb, recipient, amount) // transfer(address,uint256)\n    );\n\n    // Verify transfer result exactly as in the decompiled logic\n    require(\n        success && (returnData.length == 0 || abi.decode(returnData, (bool))),\n        \"Token transfer failed\"\n    );\n}",
    "ground_truth": "function emergencyWithdrawTokensToOwner(address to, uint256 amount) public onlyOwner {\r\n        require(token.transfer(to, amount), \"Token transfer failed\");\r\n    }"
}