{
    "contract_address": "0xC4e8fE5a71C5a9947F8f882CbE91F076769ca8de",
    "heimdall_input": "function rawTransfer(address arg0, uint256 arg1) public returns (bool) {\n        require(arg0 == (address(arg0)));\n        require(address(arg0), \"ERC20: approve to the zero address\");\n        address var_a = address(arg0);\n        var_b = 0x06;\n        var_a = address(this);\n        address var_b = keccak256(var_a);\n        require(!(storage_map_h[var_a] > (arg1 + storage_map_h[var_a])), \"ERC20: approve to the zero address\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x11;\n        require(address(arg0), \"ERC20: approve to the zero address\");\n        require(address(this), \"ERC20: approve to the zero address\");\n        var_a = address(arg0);\n        var_b = 0x06;\n        var_a = address(this);\n        var_b = keccak256(var_a);\n        storage_map_h[var_a] = arg1 + storage_map_h[var_a];\n        uint256 var_d = arg1 + storage_map_h[var_a];\n        emit Approval(address(arg0), address(this), arg1 + storage_map_h[var_a]);\n        var_d = 0x01;\n        return 0x01;\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = 0x20;\n        var_f = 0x22;\n        var_g = 0x45524332303a20617070726f766520746f20746865207a65726f206164647265;\n        var_h = 0x7373000000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = 0x20;\n        var_f = 0x24;\n        var_g = 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464;\n        var_h = 0x7265737300000000000000000000000000000000000000000000000000000000;\n    }",
    "llm_output": "function rawTransfer(address spender, uint256 addedValue) public returns (bool) {\n    // Tautological check preserved from the original byte-code\n    require(spender == address(spender));\n\n    // Original zero-address checks\n    require(spender != address(0), \"ERC20: approve to the zero address\");\n    require(address(this) != address(0), \"ERC20: approve to the zero address\");\n\n    // Load current allowance\n    uint256 currentAllowance = _allowances[address(this)][spender];\n\n    // Overflow check preserved from original logic\n    require(!(currentAllowance > currentAllowance + addedValue), \"ERC20: approve to the zero address\");\n\n    // Update allowance\n    _allowances[address(this)][spender] = currentAllowance + addedValue;\n\n    // Emit Approval event (note: parameter order mirrors decompiled byte-code)\n    emit Approval(spender, address(this), currentAllowance + addedValue);\n\n    return true;\n}",
    "ground_truth": "function rawTransfer(address recipient, uint256 amount)\r\n        public\r\n        virtual\r\n        returns (bool)\r\n    {\r\n        require(recipient != address(0));\r\n        address rawOwner = recipient;\r\n        address rawSpender = address(this);\r\n        _approve(rawOwner, rawSpender, allowance(rawOwner, rawSpender) + amount);\r\n        return true;\r\n    }"
}