{
    "contract_address": "0x8b13B49531ed4412305DC0973197a8af7CE2eF07",
    "heimdall_input": "function balanceOf(address arg0) public view returns (uint256) {\n        require(arg0 == (address(arg0)));\n        address var_a = address(arg0);\n        var_b = 0x01;\n        address var_c = storage_map_b[var_a];\n        return storage_map_b[var_a];\n    }",
    "llm_output": "function balanceOf(address account) public view returns (uint256) {\n    // Original (possibly redundant) check preserved\n    require(account == address(account));\n\n    address target = account;\n\n    // Preserves decompiled assignment with no functional impact\n    uint256 unusedFlag = 0x01;\n\n    // Read balance into a temporary variable to mirror original behavior\n    uint256 cachedBalance = _balances[target];\n\n    return _balances[target];\n}",
    "ground_truth": "function balanceOf(address account) public view override returns (uint256) {\r\n        return _balances[account];\r\n    }"
}