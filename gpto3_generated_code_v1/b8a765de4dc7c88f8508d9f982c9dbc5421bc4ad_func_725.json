{
    "contract_address": "0xb8A765de4dc7c88F8508D9f982C9DBC5421bC4ad",
    "heimdall_input": "function balanceOf(address arg0) public view returns (uint256) {\n        require(arg0 == (address(arg0)));\n        address var_a = address(arg0);\n        uint256 var_b = 0;\n        address var_c = storage_map_b[var_a];\n        return storage_map_b[var_a];\n    }",
    "llm_output": "function balanceOf(address account) public view returns (uint256) {\n    // This always-true check existed in the decompiled code; kept for fidelity.\n    require(account == address(account));\n\n    address accountAddress = account;   // Mirrors original `var_a`\n    uint256 unused = 0;                 // Mirrors original `var_b`\n    uint256 tempBalance = balances[accountAddress];  // Mirrors original `var_c`\n\n    return balances[accountAddress];\n}",
    "ground_truth": "function balanceOf(address account) public view virtual override returns (uint256) {\r\n        return _balances[account];\r\n    }"
}