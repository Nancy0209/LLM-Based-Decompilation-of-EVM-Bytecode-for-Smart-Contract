{
    "contract_address": "0x410cA8f9159f88a864DeEc21f30D5D62E8B75619",
    "heimdall_input": "function transferOwnership(address arg0) public payable {\n        require(arg0 == (address(arg0)));\n        require(address(owner / 0x01) == (address(msg.sender)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_b = ((0x04 + var_c) + 0x20) - (0x04 + var_c);\n        var_d = 0x20;\n        var_e = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        require(address(arg0) - 0, \"Ownable: new owner is the zero address\");\n        owner = (address(arg0) * 0x01) | (uint96(owner));\n        emit OwnershipTransferred(address(owner / 0x01), address(arg0));\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = ((0x04 + var_c) + 0x20) - (0x04 + var_c);\n        var_d = 0x26;\n        var_e = 0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061;\n        var_f = 0x6464726573730000000000000000000000000000000000000000000000000000;\n    }",
    "llm_output": "function transferOwnership(address newOwner) public payable {\n    // This check is functionally redundant but preserved for byte-code fidelity\n    require(newOwner == address(newOwner));\n\n    // Confirm the caller is the current owner\n    require(address(uint160(owner)) == msg.sender, \"Ownable: caller is not the owner\");\n\n    // Ensure the new owner is not the zero address\n    require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n\n    // Update owner while preserving the upper 96 bits of the packed word\n    owner = (uint256(uint160(newOwner)) * 0x01) | uint96(owner);\n\n    // Emit event (decompiler logic emits the new owner for both fields)\n    emit OwnershipTransferred(address(uint160(owner)), newOwner);\n}",
    "ground_truth": "function transferOwnership(address newOwner) public virtual onlyOwner {\r\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\r\n        _transferOwnership(newOwner);\r\n    }"
}