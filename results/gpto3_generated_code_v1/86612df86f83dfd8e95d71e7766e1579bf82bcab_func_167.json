{
    "contract_address": "0x86612Df86F83dfD8E95d71E7766E1579Bf82BCab",
    "heimdall_input": "function isBot(address arg0) public view returns (bool) {\n        require(arg0 == (address(arg0)));\n        address var_a = address(arg0);\n        var_b = 0x04;\n        address var_c = !(!bytes1(storage_map_b[var_a] / 0x01));\n        return !(!bytes1(storage_map_b[var_a] / 0x01));\n    }",
    "llm_output": "function isBot(address account) public view returns (bool) {\n    // Redundant check preserved from decompiled code\n    require(account == address(account));\n\n    // Unused placeholder retained to mirror original side-effect\n    uint256 _placeholder = 0x04;\n\n    // Double negation converted to an equivalent boolean expression\n    bool flagged = (blacklistedAddresses[account] / 0x01) != 0;\n\n    return flagged;\n}",
    "ground_truth": "function isBot(address a) public view returns (bool){\r\n      return bots[a];\r\n    }"
}