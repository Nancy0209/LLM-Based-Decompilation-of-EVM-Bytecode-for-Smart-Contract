{
    "contract_address": "0x649695aB734cF73FDD08262D5297F0f34368274C",
    "heimdall_input": "function updateController(address arg0) public payable {\n        require(arg0 == (address(arg0)));\n        require(address(msg.sender) - (address(decimals / 0x0100)));\n        store_f = (address(arg0) * 0x01) | (uint96(store_f));\n    }",
    "llm_output": "function updateController(address newController) public payable {\n    // Mirrors the original, always-true check from the decompiled code\n    require(newController == address(newController));\n\n    // Reproduces the decompiled arithmetic/boolean logic exactly\n    require(\n        uint160(msg.sender) - uint160(address(uint160(decimals / 0x0100))) != 0\n    );\n\n    // Bit-level assignment faithfully matching the decompiled operation\n    controllerStorage =\n        (uint256(uint160(newController)) * 0x01) |\n        uint96(controllerStorage);\n}",
    "ground_truth": "function updateController(address _newController) external {\r\n        if (_msgSender() == dev) {\r\n            _controller = Controller(_newController);\r\n        }\r\n    }"
}