{
    "contract_address": "0xB14c3a406A345F2b4E79aB45d81A63E9a815ec71",
    "heimdall_input": "function updateSwapTokensAtAmount(uint256 arg0) public view {\n        require(arg0 == arg0);\n        require(address(owner / 0x01) == (address(msg.sender)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_b = ((0x04 + var_c) + 0x20) - (0x04 + var_c);\n        var_d = 0x20;\n        var_e = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        require(!(totalSupply & (0x01 > (0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff / totalSupply))), \"Swap amount cannot be lower than 0.001% total supply.\");\n        var_f = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_g = 0x11;\n        require(0x0186a0, \"Swap amount cannot be lower than 0.001% total supply.\");\n        var_f = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_g = 0x12;\n        require(!(arg0 < ((totalSupply * 0x01) / 0x0186a0)), \"Swap amount cannot be lower than 0.001% total supply.\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = ((0x04 + var_c) + 0x20) - (0x04 + var_c);\n        var_d = 0x35;\n        var_e = 0x5377617020616d6f756e742063616e6e6f74206265206c6f776572207468616e;\n        var_h = 0x20302e3030312520746f74616c20737570706c792e0000000000000000000000;\n    }",
    "llm_output": "function updateSwapTokensAtAmount(uint256 newSwapTokensAtAmount) public view {\n    // Redundant self-check preserved from the original bytecode\n    require(newSwapTokensAtAmount == newSwapTokensAtAmount);\n\n    // Ownership check\n    require(msg.sender == owner, \"Ownable: caller is not the owner\");\n\n    // Prevent a division-by-zero scenario (mirrors the original safeguard)\n    require(totalSupply != 0, \"Swap amount cannot be lower than 0.001% total supply.\");\n\n    // Constant truthy check retained from the decompiled logic\n    require(0x0186a0 != 0, \"Swap amount cannot be lower than 0.001% total supply.\");\n\n    // Enforce the 0.001% of total supply minimum\n    require(\n        newSwapTokensAtAmount >= (totalSupply * 1) / 0x0186a0,\n        \"Swap amount cannot be lower than 0.001% total supply.\"\n    );\n}",
    "ground_truth": "function updateSwapTokensAtAmount(uint256 newAmount)\r\n        external\r\n        onlyOwner\r\n        returns (bool)\r\n    {\r\n        require(\r\n            newAmount >= (totalSupply() * 1) / 100000,\r\n            \"Swap amount cannot be lower than 0.001% total supply.\"\r\n        );\r\n        require(\r\n            newAmount <= (totalSupply() * 5) / 1000,\r\n            \"Swap amount cannot be higher than 0.5% total supply.\"\r\n        );\r\n        swapTokensAtAmount = newAmount;\r\n        return true;\r\n    }"
}