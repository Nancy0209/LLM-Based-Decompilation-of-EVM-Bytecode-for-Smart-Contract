{
    "contract_address": "0xeffb5Ed8242e5270aD662C82EfcA97aDAdE27dFD",
    "heimdall_input": "function manualswap() public view {\n        require(address(msg.sender) == (address(store_p)));\n        require(address(msg.sender) == (address(store_q)));\n        address var_a = address(this);\n        var_b = 0x02;\n        require(!(storage_map_l[var_a] > store_m), \"Amount must be less than total reflections\");\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x2a;\n        var_f = 0x416d6f756e74206d757374206265206c657373207468616e20746f74616c2072;\n        var_g = 0x65666c656374696f6e7300000000000000000000000000000000000000000000;\n        uint256 var_h = 0x40 + var_h;\n        var_c = 0x1a;\n        var_i = 0x536166654d6174683a206469766973696f6e206279207a65726f000000000000;\n        require(0x0de0b6b3a7640000, \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        var_j = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_f = 0x20;\n        uint256 var_g = var_h.length;\n        require(!(0 > var_h.length), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        uint256 var_k = 0;\n        var_l = var_m;\n        require(!(0x20 > var_h.length), \"SafeMath: division by zero\");\n        var_k = 0;\n        if (0x0de0b6b3a7640000) {\n            var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n            var_n = 0x12;\n            if (!store_m < (store_m / 0x0de0b6b3a7640000)) {\n            }\n        }\n    }",
    "llm_output": "function manualSwap() public view {\n    // Preserve original access control\n    require(msg.sender == address(store_p), \"Caller is not authorized (store_p)\");\n    require(msg.sender == address(store_q), \"Caller is not authorized (store_q)\");\n\n    address contractAddress = address(this);\n    uint8 placeholderByte = 0x02; // meaningless constant preserved from decompiled output\n\n    // Original bounds-check\n    require(\n        !(storage_map_l[contractAddress] > store_m),\n        \"Amount must be less than total reflections\"\n    );\n\n    /*\n     * ---------------------------------------------------------------------\n     *  The remainder of this function is semantic \u201cnoise\u201d produced\n     *  by the decompiler. It does not affect contract state, returns\n     *  nothing, and has been left intact to preserve byte-level fidelity.\n     * ---------------------------------------------------------------------\n     */\n    bytes32 selector      = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n    uint256 wordOffset    = 0x20;\n    uint256 wordLength    = 0x2a;\n    bytes32 errFragment1  = 0x416d6f756e74206d757374206265206c657373207468616e20746f74616c2072;\n    bytes32 errFragment2  = 0x65666c656374696f6e7300000000000000000000000000000000000000000000;\n    uint256 scratch       = 0x40 + wordOffset;\n    uint8   tinyConstant  = 0x1a;\n    bytes32 errFragment3  = 0x536166654d6174683a206469766973696f6e206279207a65726f000000000000;\n\n    // Always-true require kept for fidelity\n    require(uint256(0x0de0b6b3a7640000) != 0, \"\");\n\n    bytes32 selector2     = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n    uint256 offset2       = 0x20;\n\n    // Dummy dynamic-length byte array logic\n    bytes memory dummyBytes = new bytes(0);\n    uint256 dummyLen = dummyBytes.length;\n\n    require(!(0 > dummyBytes.length), \"\");\n    uint256 unusedCounter = 0;\n    uint256 copiedScratch = scratch;\n\n    require(!(0x20 > dummyBytes.length), \"SafeMath: division by zero\");\n    unusedCounter = 0;\n\n    if (uint256(0x0de0b6b3a7640000) != 0) {\n        bytes32 panicSelector = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        uint256 panicCode     = 0x12;\n\n        // No-op conditional preserved exactly\n        if (!(store_m < (store_m / 0x0de0b6b3a7640000))) {\n            // intentionally left blank\n        }\n    }\n}",
    "ground_truth": "function manualswap() external {\r\n        require(_msgSender() == _developmentAddress || _msgSender() == _marketingAddress);\r\n        uint256 contractBalance = balanceOf(address(this));\r\n        swapTokensForEth(contractBalance);\r\n    }"
}