{
    "contract_address": "0x311f785e0fcb5A7c8990cdBe114e59A787116705",
    "heimdall_input": "function isExcludedFromFees(address arg0) public view returns (bool) {\n        require(arg0 == (address(arg0)));\n        address var_a = address(arg0);\n        var_b = 0x14;\n        address var_c = !(!bytes1(storage_map_b[var_a]));\n        return !(!bytes1(storage_map_b[var_a]));\n    }",
    "llm_output": "function isExcludedFromFees(address account) public view returns (bool) {\n    // This tautological check is preserved to mirror the original logic\n    require(account == address(account));\n\n    // Unused local variable retained to preserve original side-effects (none)\n    uint256 _placeholder = 0x14;\n\n    // Double negation keeps the original byte-level truthiness evaluation\n    bool excluded = !(!bytes1(abi.encodePacked(_isExcludedFromFees[account])[0]));\n    return excluded;\n}",
    "ground_truth": "function isExcludedFromFees(address account) public view returns (bool) {\r\n        return _isExcludedFromFees[account];\r\n    }"
}