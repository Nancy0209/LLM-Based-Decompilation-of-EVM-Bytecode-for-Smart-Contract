{
    "contract_address": "0x94a1FaF408D4F4a74e46973BF75953dB44EcA193",
    "heimdall_input": "function isExcludedFromFees(address arg0) public view returns (bool) {\n        require(arg0 == (address(arg0)));\n        address var_a = address(arg0);\n        var_b = 0x1f;\n        address var_c = !(!bytes1(storage_map_d[var_a]));\n        return !(!bytes1(storage_map_d[var_a]));\n    }",
    "llm_output": "function isExcludedFromFees(address account) public view returns (bool) {\n    require(account == address(account));\n    \n    // Placeholder variable to mirror decompiled behavior (was `var_b`)\n    uint256 _placeholder = 0x1f;\n\n    // Mirror of the temporary variable assignment in the decompiled output (was `var_c`)\n    bool _status = _isExcludedFromFees[account];\n\n    return _isExcludedFromFees[account];\n}",
    "ground_truth": "function isExcludedFromFees(address account) public view returns (bool) {\r\n        return _isExcludedFromFees[account];\r\n    }"
}