{
    "contract_address": "0x85188f89Ef6A5714818DefC0607727c9BE9f8949",
    "heimdall_input": "function manualswap() public view {\n        require(address(msg.sender) == (address(store_l / 0x01)));\n        require(address(msg.sender) == (address(store_m / 0x01)));\n        address var_a = address(this);\n        var_b = 0x02;\n        require(!(storage_map_h[var_a] > store_i), \"Amount must be less than total reflections\");\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_d = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        var_f = 0x2a;\n        var_g = 0x416d6f756e74206d757374206265206c657373207468616e20746f74616c2072;\n        var_h = 0x65666c656374696f6e7300000000000000000000000000000000000000000000;\n        uint256 var_e = 0x40 + var_e;\n        var_c = 0x1a;\n        var_i = 0x536166654d6174683a206469766973696f6e206279207a65726f000000000000;\n        require(0x038d7ea4c68000 > 0, \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        var_j = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_g = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        uint256 var_h = var_e.length;\n        uint256 var_k = 0;\n        var_l = var_m;\n        var_k = 0;\n        if (0x038d7ea4c68000) {\n            var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n            var_n = 0x12;\n            if (!store_i < (store_i / 0x038d7ea4c68000)) {\n            }\n        }\n    }",
    "llm_output": "function manualSwap() public view {\n    // Caller verification (original logic reproduced)\n    require(msg.sender == _authorizedCaller1);\n    require(msg.sender == _authorizedCaller2);\n\n    // Local placeholders replicated from decompiled output\n    address contractAddress = address(this);\n    uint256 placeholder   = 0x02;\n\n    // Reflection balance check (inverted as in original bytecode)\n    require(!(_reflectionBalances[contractAddress] > _totalReflections), \"Amount must be less than total reflections\");\n\n    // Decompiler artefacts preserved for logical fidelity \u2013 all unused\n    bytes32 artefact1  = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n    uint256 artefact2  = ((0x04) + 0 + 0x20) - ((0x04) + 0);\n    uint256 artefact3  = 0x2a;\n    bytes32 artefact4  = 0x416d6f756e74206d757374206265206c657373207468616e20746f74616c2072;\n    bytes32 artefact5  = 0x65666c656374696f6e7300000000000000000000000000000000000000000000;\n    uint256 artefact6  = 0x40 + 0;\n    uint256 artefact7  = 0x1a;\n    bytes32 artefact8  = 0x536166654d6174683a206469766973696f6e206279207a65726f000000000000;\n\n    require(0x038d7ea4c68000 > 0, \"\");\n\n    bytes32 artefact9  = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n    uint256 artefact10 = ((0x04 + artefact6) + 0x20) - (0x04 + artefact6);\n    uint256 artefact11 = artefact6;\n    uint256 artefact12 = 0;\n    uint256 artefact13 = 0;\n\n    uint256 constantValue = 0x038d7ea4c68000;\n    if (constantValue != 0) {\n        bytes32 artefact14 = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        uint256 artefact15 = 0x12;\n        if (!(_totalReflections < (_totalReflections / constantValue))) {\n            // No-op: retained to mirror original control flow\n        }\n    }\n}",
    "ground_truth": "function manualswap() external {\r\n        require(_msgSender() == _developmentAddress || _msgSender() == _marketingAddress);\r\n        uint256 contractBalance = balanceOf(address(this));\r\n        swapTokensForEth(contractBalance);\r\n    }"
}