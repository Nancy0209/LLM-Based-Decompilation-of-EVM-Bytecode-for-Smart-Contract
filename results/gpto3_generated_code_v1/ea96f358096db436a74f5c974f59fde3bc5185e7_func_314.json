{
    "contract_address": "0xEA96F358096DB436A74f5C974F59fdE3Bc5185e7",
    "heimdall_input": "function transfer(address arg0, uint256 arg1) public returns (bool) {\n        require(arg0 == (address(arg0)));\n        require(address(msg.sender), \"You are trying to transfer more than your balance\");\n        require(address(arg0), \"You are trying to transfer more than your balance\");\n        address var_a = address(msg.sender);\n        var_b = 0x18;\n        require(!(arg1 > storage_map_b[var_a]), \"You are trying to transfer more than your balance\");\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x31;\n        var_f = 0x596f752061726520747279696e6720746f207472616e73666572206d6f726520;\n        var_g = 0x7468616e20796f75722062616c616e6365000000000000000000000000000000;\n        var_a = address(msg.sender);\n        var_b = 0x17;\n        require(!(!bytes1(storage_map_b[var_a])), \"ERC20: transfer to the zero address\");\n        require(!(!bytes1(storage_map_b[var_a])), \"ERC20: transfer to the zero address\");\n        var_a = address(msg.sender);\n        var_b = 0x17;\n        require(!(!bytes1(storage_map_b[var_a])), \"ERC20: transfer to the zero address\");\n        require(!(!bytes1(storage_map_b[var_a])), \"ERC20: transfer to the zero address\");\n        require(!(!bytes1(storage_map_b[var_a])), \"ERC20: transfer to the zero address\");\n        require(!(!bytes1(storage_map_b[var_a])), \"ERC20: transfer to the zero address\");\n        require(address(uniPairAddy) == (address(msg.sender)), \"ERC20: transfer to the zero address\");\n        require(!(arg1 > _maxxTransferSize), \"ERC20: transfer to the zero address\");\n        var_a = address(msg.sender);\n        var_b = 0x17;\n        require(bytes1(storage_map_b[var_a]), \"ERC20: transfer to the zero address\");\n        require(bytes1(storage_map_b[var_a]), \"ERC20: transfer to the zero address\");\n        require(!(arg1 > _maxxTrxSize), \"ERC20: transfer to the zero address\");\n        var_a = address(msg.sender);\n        var_b = 0x17;\n        require(bytes1(storage_map_b[var_a]), \"ERC20: transfer to the zero address\");\n        require(bytes1(storage_map_b[var_a]), \"ERC20: transfer to the zero address\");\n        require(!(address(uniPairAddy) == (address(arg0))), \"ERC20: transfer to the zero address\");\n        require(!(address(uniPairAddy) == (address(arg0))), \"ERC20: transfer to the zero address\");\n        var_a = address(this);\n        var_b = 0x18;\n        require(!(!bytes1(store_f)), \"ERC20: transfer to the zero address\");\n        require(!(!bytes1(store_f)), \"ERC20: transfer to the zero address\");\n        require(!(!bytes1(store_f)), \"ERC20: transfer to the zero address\");\n        require(!(!bytes1(store_f)), \"ERC20: transfer to the zero address\");\n        require(!(!bytes1(store_f)), \"ERC20: transfer to the zero address\");\n        require(!(!bytes1(store_f)), \"ERC20: transfer to the zero address\");\n        require(!(!bytes1(store_f)), \"ERC20: transfer to the zero address\");\n        require(!(!bytes1(store_f)), \"ERC20: transfer to the zero address\");\n        var_a = address(msg.sender);\n        var_b = 0x18;\n        require(!((storage_map_b[var_a] - arg1) > storage_map_b[var_a]), \"ERC20: transfer to the zero address\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_h = 0x11;\n        var_a = address(msg.sender);\n        var_b = 0x18;\n        storage_map_b[var_a] = storage_map_b[var_a] - arg1;\n        var_b = 0x17;\n        require(!(bytes1(storage_map_b[var_a])), \"ERC20: transfer to the zero address\");\n        var_a = address(arg0);\n        var_b = 0x18;\n        require(!(storage_map_b[var_a] > (arg1 + storage_map_b[var_a])), \"ERC20: transfer to the zero address\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_h = 0x11;\n        var_a = address(arg0);\n        var_b = 0x18;\n        storage_map_b[var_a] = arg1 + storage_map_b[var_a];\n        uint256 var_c = arg1;\n        emit Transfer(address(msg.sender), address(arg0), arg1);\n        var_c = 0x01;\n        return 0x01;\n        var_a = address(arg0);\n        var_b = 0x17;\n        require(!(bytes1(storage_map_b[var_a])), \"ERC20: transfer to the zero address\");\n        require(address(arg0) - (address(uniPairAddy)), \"ERC20: transfer to the zero address\");\n        require(address(msg.sender) - (address(uniPairAddy)), \"ERC20: transfer to the zero address\");\n        require(!(store_g > 0), \"ERC20: transfer to the zero address\");\n        require(address(arg0) - (address(uniPairAddy)), \"ERC20: transfer to the zero address\");\n        require(address(msg.sender) - (address(uniPairAddy)), \"ERC20: transfer to the zero address\");\n        require(store_h, \"ERC20: transfer to the zero address\");\n        require((store_g == ((store_g * (arg1 / store_h)) / (arg1 / store_h))) | (!arg1 / store_h), \"ERC20: transfer to the zero address\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_h = 0x11;\n        var_a = address(this);\n        var_b = 0x18;\n        require(!(storage_map_b[var_a] > ((store_g * (arg1 / store_h)) + storage_map_b[var_a])), \"ERC20: transfer to the zero address\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_h = 0x11;\n        var_a = address(this);\n        var_b = 0x18;\n        storage_map_b[var_a] = (store_g * (arg1 / store_h)) + storage_map_b[var_a];\n        var_c = store_g * (arg1 / store_h);\n        emit Transfer(address(msg.sender), address(this), store_g * (arg1 / store_h));\n        require(!(store_i > 0), \"ERC20: transfer to the zero address\");\n        require(address(arg0) - (address(uniPairAddy)), \"ERC20: transfer to the zero address\");\n        require(address(msg.sender) - (address(uniPairAddy)), \"ERC20: transfer to the zero address\");\n        require(!(store_g > store_i), \"ERC20: transfer to the zero address\");\n        require(store_h, \"ERC20: transfer to the zero address\");\n        require((store_i == ((store_i * (arg1 / store_h)) / (arg1 / store_h))) | (!arg1 / store_h), \"ERC20: transfer to the zero address\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_h = 0x11;\n        require(address(this), \"ERC20: transfer to the zero address\");\n        require(0xdead, \"ERC20: transfer to the zero address\");\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x23;\n        var_f = 0x45524332303a207472616e7366657220746f20746865207a65726f2061646472;\n        var_g = 0x6573730000000000000000000000000000000000000000000000000000000000;\n        var_a = address(this);\n        var_b = 0x18;\n        require(!((store_i * (arg1 / store_h)) > storage_map_b[var_a]), \"You are trying to transfer more than your balance\");\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x31;\n        var_f = 0x596f752061726520747279696e6720746f207472616e73666572206d6f726520;\n        var_g = 0x7468616e20796f75722062616c616e6365000000000000000000000000000000;\n        var_a = address(this);\n        var_b = 0x17;\n        require(!(!bytes1(storage_map_b[var_a])), \"ERC20: transfer to the zero address\");\n        require(!(!bytes1(storage_map_b[var_a])), \"ERC20: transfer to the zero address\");\n        var_a = address(this);\n        var_b = 0x17;\n        require(!(!bytes1(storage_map_b[var_a])), \"ERC20: transfer to the zero address\");\n        require(!(!bytes1(storage_map_b[var_a])), \"ERC20: transfer to the zero address\");\n        require(!(!bytes1(storage_map_b[var_a])), \"ERC20: transfer to the zero address\");\n        require(!(!bytes1(storage_map_b[var_a])), \"ERC20: transfer to the zero address\");\n        require(address(uniPairAddy) == (address(this)), \"ERC20: transfer to the zero address\");\n        require(!((store_i * (arg1 / store_h)) > _maxxTransferSize), \"ERC20: transfer to the zero address\");\n        var_a = address(this);\n        var_b = 0x17;\n        require(bytes1(storage_map_b[var_a]), \"ERC20: transfer to the zero address\");\n        require(bytes1(storage_map_b[var_a]), \"ERC20: transfer to the zero address\");\n        require(!((store_i * (arg1 / store_h)) > _maxxTrxSize), \"ERC20: transfer to the zero address\");\n        var_a = address(this);\n        var_b = 0x17;\n        require(bytes1(storage_map_b[var_a]), \"ERC20: transfer to the zero address\");\n        require(bytes1(storage_map_b[var_a]), \"ERC20: transfer to the zero address\");\n        require(!(address(uniPairAddy) == 0xdead), \"ERC20: transfer to the zero address\");\n        var_a = address(this);\n        var_b = 0x17;\n        require(!(!bytes1(storage_map_b[var_a])), \"ERC20: transfer to the zero address\");\n        var_a = address(this);\n        var_b = 0x18;\n        require(!(!bytes1(store_f)), \"ERC20: transfer to the zero address\");\n        require(!(!bytes1(store_f)), \"ERC20: transfer to the zero address\");\n        require(!(!bytes1(store_f)), \"ERC20: transfer to the zero address\");\n        require(!(!bytes1(store_f)), \"ERC20: transfer to the zero address\");\n        require(!(!bytes1(store_f)), \"ERC20: transfer to the zero address\");\n        require(!(!bytes1(store_f)), \"ERC20: transfer to the zero address\");\n        require(!(!bytes1(store_f)), \"ERC20: transfer to the zero address\");\n        require(!(!bytes1(store_f)), \"ERC20: transfer to the zero address\");\n        var_a = address(this);\n        var_b = 0x18;\n        require(!(storage_map_b[var_a] - (store_i * (arg1 / store_h)) > storage_map_b[var_a]), \"ERC20: transfer to the zero address\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_h = 0x11;\n        var_a = address(this);\n        var_b = 0x18;\n        storage_map_b[var_a] = storage_map_b[var_a] - (store_i * (arg1 / store_h));\n        var_b = 0x17;\n        require(!(bytes1(storage_map_b[var_a])), \"ERC20: transfer to the zero address\");\n        var_a = 0xdead;\n        var_b = 0x18;\n        require(!(storage_map_b[var_a] > ((store_i * (arg1 / store_h)) + storage_map_b[var_a])), \"ERC20: transfer to the zero address\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_h = 0x11;\n        var_a = 0xdead;\n        var_b = 0x17;\n        require(!(bytes1(storage_map_b[var_a])), \"ERC20: transfer to the zero address\");\n        require(0xdead - (address(uniPairAddy)), \"ERC20: transfer to the zero address\");\n        require(!(store_j > 0), \"ERC20: transfer to the zero address\");\n        require(0xdead - (address(uniPairAddy)), \"ERC20: transfer to the zero address\");\n        require(store_h, \"ERC20: transfer to the zero address\");\n        require((store_j == ((store_j * ((store_i * (arg1 / store_h)) / store_h)) / ((store_i * (arg1 / store_h)) / store_h))) | (!(store_i * (arg1 / store_h)) / store_h), \"ERC20: transfer to the zero address\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_h = 0x11;\n        var_a = address(this);\n        var_b = 0x18;\n        require(!(storage_map_b[var_a] > ((store_j * ((store_i * (arg1 / store_h)) / store_h)) + storage_map_b[var_a])), \"ERC20: transfer to the zero address\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_h = 0x11;\n        var_a = address(this);\n        var_b = 0x18;\n        storage_map_b[var_a] = (store_j * ((store_i * (arg1 / store_h)) / store_h)) + storage_map_b[var_a];\n        var_c = store_j * ((store_i * (arg1 / store_h)) / store_h);\n        emit Transfer(address(this), address(this), store_j * ((store_i * (arg1 / store_h)) / store_h));\n        require(!(store_i > 0), \"ERC20: transfer to the zero address\");\n        require(0xdead - (address(uniPairAddy)), \"ERC20: transfer to the zero address\");\n        require(!(store_j > store_i), \"ERC20: transfer to the zero address\");\n        require(store_h, \"ERC20: transfer to the zero address\");\n        require((store_i == ((store_i * ((store_i * (arg1 / store_h)) / store_h)) / ((store_i * (arg1 / store_h)) / store_h))) | (!(store_i * (arg1 / store_h)) / store_h), \"ERC20: transfer to the zero address\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_h = 0x11;\n        require(address(this), \"ERC20: transfer to the zero address\");\n        require(0xdead, \"ERC20: transfer to the zero address\");\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x23;\n        var_f = 0x45524332303a207472616e7366657220746f20746865207a65726f2061646472;\n        var_g = 0x6573730000000000000000000000000000000000000000000000000000000000;\n        var_a = address(this);\n        var_b = 0x18;\n        require(!((store_i * ((store_i * (arg1 / store_h)) / store_h)) > storage_map_b[var_a]), \"You are trying to transfer more than your balance\");\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x31;\n        var_f = 0x596f752061726520747279696e6720746f207472616e73666572206d6f726520;\n        var_g = 0x7468616e20796f75722062616c616e6365000000000000000000000000000000;\n        var_a = address(this);\n        var_b = 0x17;\n        require(!(!bytes1(storage_map_b[var_a])), \"ERC20: transfer to the zero address\");\n        require(!(!bytes1(storage_map_b[var_a])), \"ERC20: transfer to the zero address\");\n        var_a = address(this);\n        var_b = 0x17;\n        require(!(!bytes1(storage_map_b[var_a])), \"ERC20: transfer to the zero address\");\n        require(!(!bytes1(storage_map_b[var_a])), \"ERC20: transfer to the zero address\");\n        require(!(!bytes1(storage_map_b[var_a])), \"ERC20: transfer to the zero address\");\n        require(!(!bytes1(storage_map_b[var_a])), \"ERC20: transfer to the zero address\");\n        require(address(uniPairAddy) == (address(this)), \"ERC20: transfer to the zero address\");\n        require(!((store_i * ((store_i * (arg1 / store_h)) / store_h)) > _maxxTransferSize), \"ERC20: transfer to the zero address\");\n        var_a = address(this);\n        var_b = 0x17;\n        require(bytes1(storage_map_b[var_a]), \"ERC20: transfer to the zero address\");\n        require(bytes1(storage_map_b[var_a]), \"ERC20: transfer to the zero address\");\n        require(!((store_i * ((store_i * (arg1 / store_h)) / store_h)) > _maxxTrxSize), \"ERC20: transfer to the zero address\");\n        var_a = address(this);\n        var_b = 0x17;\n        require(bytes1(storage_map_b[var_a]), \"ERC20: transfer to the zero address\");\n        require(bytes1(storage_map_b[var_a]), \"ERC20: transfer to the zero address\");\n        require(!(address(uniPairAddy) == 0xdead), \"ERC20: transfer to the zero address\");\n        var_a = address(this);\n        var_b = 0x17;\n        require(!(!bytes1(storage_map_b[var_a])), \"ERC20: transfer to the zero address\");\n        var_a = address(this);\n        var_b = 0x18;\n        require(!(!bytes1(store_f)), \"ERC20: transfer to the zero address\");\n        require(!(!bytes1(store_f)), \"ERC20: transfer to the zero address\");\n        require(!(!bytes1(store_f)), \"ERC20: transfer to the zero address\");\n        require(!(!bytes1(store_f)), \"ERC20: transfer to the zero address\");\n        require(!(!bytes1(store_f)), \"ERC20: transfer to the zero address\");\n        require(!(!bytes1(store_f)), \"ERC20: transfer to the zero address\");\n        require(!(!bytes1(store_f)), \"ERC20: transfer to the zero address\");\n        require(!(!bytes1(store_f)), \"ERC20: transfer to the zero address\");\n        var_a = address(this);\n        var_b = 0x18;\n        require(!(storage_map_b[var_a] - (store_i * ((store_i * (arg1 / store_h)) / store_h)) > storage_map_b[var_a]), \"ERC20: transfer to the zero address\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_h = 0x11;\n        var_a = address(this);\n        var_b = 0x18;\n        storage_map_b[var_a] = storage_map_b[var_a] - (store_i * ((store_i * (arg1 / store_h)) / store_h));\n        var_b = 0x17;\n        require(!(bytes1(storage_map_b[var_a])), \"ERC20: transfer to the zero address\");\n        var_a = 0xdead;\n        var_b = 0x18;\n        require(!(storage_map_b[var_a] > ((store_i * ((store_i * (arg1 / store_h)) / store_h)) + storage_map_b[var_a])), \"ERC20: transfer to the zero address\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_h = 0x11;\n        var_a = 0xdead;\n        var_b = 0x17;\n        require(!(bytes1(storage_map_b[var_a])), \"ERC20: transfer to the zero address\");\n        require(0xdead - (address(uniPairAddy)), \"ERC20: transfer to the zero address\");\n        require(!(store_j > 0), \"ERC20: transfer to the zero address\");\n        require(0xdead - (address(uniPairAddy)), \"ERC20: transfer to the zero address\");\n        require(store_h, \"ERC20: transfer to the zero address\");\n        require((store_j == ((store_j * ((store_i * ((store_i * (arg1 / store_h)) / store_h)) / store_h)) / ((store_i * ((store_i * (arg1 / store_h)) / store_h)) / store_h))) | (!(store_i * ((store_i * (arg1 / store_h)) / store_h)) / store_h), \"ERC20: transfer to the zero address\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_h = 0x11;\n        var_a = address(this);\n        var_b = 0x18;\n        require(!(storage_map_b[var_a] > ((store_j * ((store_i * ((store_i * (arg1 / store_h)) / store_h)) / store_h)) + storage_map_b[var_a])), \"ERC20: transfer to the zero address\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_h = 0x11;\n        var_a = address(this);\n        var_b = 0x18;\n        storage_map_b[var_a] = (store_j * ((store_i * ((store_i * (arg1 / store_h)) / store_h)) / store_h)) + storage_map_b[var_a];\n        var_c = store_j * ((store_i * ((store_i * (arg1 / store_h)) / store_h)) / store_h);\n        emit Transfer(address(this), address(this), store_j * ((store_i * ((store_i * (arg1 / store_h)) / store_h)) / store_h));\n        require(!(store_i > 0), \"ERC20: transfer to the zero address\");\n        require(0xdead - (address(uniPairAddy)), \"ERC20: transfer to the zero address\");\n        require(!(store_j > store_i), \"ERC20: transfer to the zero address\");\n        require(store_h, \"ERC20: transfer to the zero address\");\n        require((store_i == ((store_i * ((store_i * ((store_i * (arg1 / store_h)) / store_h)) / store_h)) / ((store_i * ((store_i * (arg1 / store_h)) / store_h)) / store_h))) | (!(store_i * ((store_i * (arg1 / store_h)) / store_h)) / store_h), \"ERC20: transfer to the zero address\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_h = 0x11;\n        require(address(this), \"ERC20: transfer to the zero address\");\n        require(0xdead, \"ERC20: transfer to the zero address\");\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x23;\n        var_f = 0x45524332303a207472616e7366657220746f20746865207a65726f2061646472;\n        var_g = 0x6573730000000000000000000000000000000000000000000000000000000000;\n        var_a = address(this);\n        var_b = 0x18;\n        require(!((store_i * ((store_i * ((store_i * (arg1 / store_h)) / store_h)) / store_h)) > storage_map_b[var_a]), \"You are trying to transfer more than your balance\");\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x31;\n        var_f = 0x596f752061726520747279696e6720746f207472616e73666572206d6f726520;\n        var_g = 0x7468616e20796f75722062616c616e6365000000000000000000000000000000;\n        var_a = address(this);\n        var_b = 0x17;\n        require(!(!bytes1(storage_map_b[var_a])), \"ERC20: transfer to the zero address\");\n        require(!(!bytes1(storage_map_b[var_a])), \"ERC20: transfer to the zero address\");\n        var_a = address(this);\n        var_b = 0x17;\n        require(!(!bytes1(storage_map_b[var_a])), \"ERC20: transfer to the zero address\");\n        require(!(!bytes1(storage_map_b[var_a])), \"ERC20: transfer to the zero address\");\n        require(!(!bytes1(storage_map_b[var_a])), \"ERC20: transfer to the zero address\");\n        require(!(!bytes1(storage_map_b[var_a])), \"ERC20: transfer to the zero address\");\n        require(address(uniPairAddy) == (address(this)), \"ERC20: transfer to the zero address\");\n        require(!((store_i * ((store_i * ((store_i * (arg1 / store_h)) / store_h)) / store_h)) > _maxxTransferSize), \"ERC20: transfer to the zero address\");\n        var_a = address(this);\n        var_b = 0x17;\n        require(bytes1(storage_map_b[var_a]), \"ERC20: transfer to the zero address\");\n        require(bytes1(storage_map_b[var_a]), \"ERC20: transfer to the zero address\");\n        require(!((store_i * ((store_i * ((store_i * (arg1 / store_h)) / store_h)) / store_h)) > _maxxTrxSize), \"ERC20: transfer to the zero address\");\n        var_a = address(this);\n        var_b = 0x17;\n        require(bytes1(storage_map_b[var_a]), \"ERC20: transfer to the zero address\");\n        require(bytes1(storage_map_b[var_a]), \"ERC20: transfer to the zero address\");\n        require(!(address(uniPairAddy) == 0xdead), \"ERC20: transfer to the zero address\");\n        var_a = address(this);\n        var_b = 0x17;\n        require(!(!bytes1(storage_map_b[var_a])), \"ERC20: transfer to the zero address\");\n        var_a = address(this);\n        var_b = 0x18;\n        require(!(!bytes1(store_f)), \"ERC20: transfer to the zero address\");\n        require(!(!bytes1(store_f)), \"ERC20: transfer to the zero address\");\n        require(!(!bytes1(store_f)), \"ERC20: transfer to the zero address\");\n        require(!(!bytes1(store_f)), \"ERC20: transfer to the zero address\");\n        require(!(!bytes1(store_f)), \"ERC20: transfer to the zero address\");\n        require(!(!bytes1(store_f)), \"ERC20: transfer to the zero address\");\n        require(!(!bytes1(store_f)), \"ERC20: transfer to the zero address\");\n        require(!(!bytes1(store_f)), \"ERC20: transfer to the zero address\");\n        var_a = address(this);\n        var_b = 0x18;\n        require(!(storage_map_b[var_a] - (store_i * ((store_i * ((store_i * (arg1 / store_h)) / store_h)) / store_h)) > storage_map_b[var_a]), \"ERC20: transfer to the zero address\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_h = 0x11;\n        var_a = address(this);\n        var_b = 0x18;\n        storage_map_b[var_a] = storage_map_b[var_a] - (store_i * ((store_i * ((store_i * (arg1 / store_h)) / store_h)) / store_h));\n        var_b = 0x17;\n        require(!(bytes1(storage_map_b[var_a])), \"ERC20: transfer to the zero address\");\n        var_a = 0xdead;\n        var_b = 0x18;\n        require(!(storage_map_b[var_a] > ((store_i * ((store_i * ((store_i * (arg1 / store_h)) / store_h)) / store_h)) + storage_map_b[var_a])), \"ERC20: transfer to the zero address\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_h = 0x11;\n        var_a = 0xdead;\n        var_b = 0x17;\n        require(!(bytes1(storage_map_b[var_a])), \"ERC20: transfer to the zero address\");\n        require(0xdead - (address(uniPairAddy)), \"ERC20: transfer to the zero address\");\n        require(!(store_j > 0), \"ERC20: transfer to the zero address\");\n        require(0xdead - (address(uniPairAddy)), \"ERC20: transfer to the zero address\");\n        require(store_h, \"ERC20: transfer to the zero address\");\n        require((store_j == ((store_j * ((store_i * ((store_i * ((store_i * (arg1 / store_h)) / store_h)) / store_h)) / store_h)) / ((store_i * ((store_i * ((store_i * (arg1 / store_h)) / store_h)) / store_h)) / store_h))) | (!(store_i * ((store_i * ((store_i * (arg1 / store_h)) / store_h)) / store_h)) / store_h), \"ERC20: transfer to the zero address\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_h = 0x11;\n        var_a = address(this);\n        var_b = 0x18;\n        require(!(storage_map_b[var_a] > ((store_j * ((store_i * ((store_i * ((store_i * (arg1 / store_h)) / store_h)) / store_h)) / store_h)) + storage_map_b[var_a])), \"ERC20: transfer to the zero address\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_h = 0x11;\n        var_a = address(this);\n        var_b = 0x18;\n        storage_map_b[var_a] = (store_j * ((store_i * ((store_i * ((store_i * (arg1 / store_h)) / store_h)) / store_h)) / store_h)) + storage_map_b[var_a];\n        var_c = store_j * ((store_i * ((store_i * ((store_i * (arg1 / store_h)) / store_h)) / store_h)) / store_h);\n        emit Transfer(address(this), address(this), store_j * ((store_i * ((store_i * ((store_i * (arg1 / store_h)) / store_h)) / store_h)) / store_h));\n        require(!(store_i > 0), \"ERC20: transfer to the zero address\");\n        require(0xdead - (address(uniPairAddy)), \"ERC20: transfer to the zero address\");\n        require(!(store_j > store_i), \"ERC20: transfer to the zero address\");\n        require(store_h, \"ERC20: transfer to the zero address\");\n        require((store_i == ((store_i * ((store_i * ((store_i * ((store_i * (arg1 / store_h)) / store_h)) / store_h)) / store_h)) / ((store_i * ((store_i * ((store_i * (arg1 / store_h)) / store_h)) / store_h)) / store_h))) | (!(store_i * ((store_i * ((store_i * (arg1 / store_h)) / store_h)) / store_h)) / store_h), \"ERC20: transfer to the zero address\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_h = 0x11;\n        require(address(this), \"ERC20: transfer to the zero address\");\n        require(0xdead, \"ERC20: transfer to the zero address\");\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x23;\n        var_f = 0x45524332303a207472616e7366657220746f20746865207a65726f2061646472;\n        var_g = 0x6573730000000000000000000000000000000000000000000000000000000000;\n        var_a = address(this);\n        var_b = 0x18;\n        require(!((store_i * ((store_i * ((store_i * ((store_i * (arg1 / store_h)) / store_h)) / store_h)) / store_h)) > storage_map_b[var_a]), \"You are trying to transfer more than your balance\");\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x31;\n        var_f = 0x596f752061726520747279696e6720746f207472616e73666572206d6f726520;\n        var_g = 0x7468616e20796f75722062616c616e6365000000000000000000000000000000;\n        var_a = address(this);\n        var_b = 0x17;\n        require(!(!bytes1(storage_map_b[var_a])), \"ERC20: transfer to the zero address\");\n        require(!(!bytes1(storage_map_b[var_a])), \"ERC20: transfer to the zero address\");\n        var_a = address(this);\n        var_b = 0x17;\n        require(!(!bytes1(storage_map_b[var_a])), \"ERC20: transfer to the zero address\");\n        require(!(!bytes1(storage_map_b[var_a])), \"ERC20: transfer to the zero address\");\n        require(!(!bytes1(storage_map_b[var_a])), \"ERC20: transfer to the zero address\");\n        require(!(!bytes1(storage_map_b[var_a])), \"ERC20: transfer to the zero address\");\n        require(address(uniPairAddy) == (address(this)), \"ERC20: transfer to the zero address\");\n        require(!((store_i * ((store_i * ((store_i * ((store_i * (arg1 / store_h)) / store_h)) / store_h)) / store_h)) > _maxxTransferSize), \"ERC20: transfer to the zero address\");\n        var_a = address(this);\n        var_b = 0x17;\n        require(bytes1(storage_map_b[var_a]), \"ERC20: transfer to the zero address\");\n        require(bytes1(storage_map_b[var_a]), \"ERC20: transfer to the zero address\");\n        require(!((store_i * ((store_i * ((store_i * ((store_i * (arg1 / store_h)) / store_h)) / store_h)) / store_h)) > _maxxTrxSize), \"ERC20: transfer to the zero address\");\n        var_a = address(this);\n        var_b = 0x17;\n        require(bytes1(storage_map_b[var_a]), \"ERC20: transfer to the zero address\");\n        require(bytes1(storage_map_b[var_a]), \"ERC20: transfer to the zero address\");\n        require(!(address(uniPairAddy) == 0xdead), \"ERC20: transfer to the zero address\");\n        var_a = address(this);\n        var_b = 0x17;\n        require(!(!bytes1(storage_map_b[var_a])), \"ERC20: transfer to the zero address\");\n        var_a = address(this);\n        var_b = 0x18;\n        require(!(!bytes1(store_f)), \"ERC20: transfer to the zero address\");\n        require(!(!bytes1(store_f)), \"ERC20: transfer to the zero address\");\n        require(!(!bytes1(store_f)), \"ERC20: transfer to the zero address\");\n        require(!(!bytes1(store_f)), \"ERC20: transfer to the zero address\");\n        require(!(!bytes1(store_f)), \"ERC20: transfer to the zero address\");\n        require(!(!bytes1(store_f)), \"ERC20: transfer to the zero address\");\n        require(!(!bytes1(store_f)), \"ERC20: transfer to the zero address\");\n        require(!(!bytes1(store_f)), \"ERC20: transfer to the zero address\");\n        var_a = address(this);\n        var_b = 0x18;\n        require(!(storage_map_b[var_a] - (store_i * ((store_i * ((store_i * ((store_i * (arg1 / store_h)) / store_h)) / store_h)) / store_h)) > storage_map_b[var_a]), \"ERC20: transfer to the zero address\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_h = 0x11;\n        var_a = address(this);\n        var_b = 0x18;\n        storage_map_b[var_a] = storage_map_b[var_a] - (store_i * ((store_i * ((store_i * ((store_i * (arg1 / store_h)) / store_h)) / store_h)) / store_h));\n        var_b = 0x17;\n        require(!(bytes1(storage_map_b[var_a])), \"ERC20: transfer to the zero address\");\n        var_a = 0xdead;\n        var_b = 0x18;\n        require(!(storage_map_b[var_a] > ((store_i * ((store_i * ((store_i * ((store_i * (arg1 / store_h)) / store_h)) / store_h)) / store_h)) + storage_map_b[var_a])), \"ERC20: transfer to the zero address\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_h = 0x11;\n        var_a = 0xdead;\n        var_b = 0x17;\n        require(!(bytes1(storage_map_b[var_a])), \"ERC20: transfer to the zero address\");\n        require(0xdead - (address(uniPairAddy)), \"ERC20: transfer to the zero address\");\n        require(!(store_j > 0), \"ERC20: transfer to the zero address\");\n        require(0xdead - (address(uniPairAddy)), \"ERC20: transfer to the zero address\");\n        require(store_h, \"ERC20: transfer to the zero address\");\n        require((store_j == ((store_j * ((store_i * ((store_i * ((store_i * ((store_i * (arg1 / store_h)) / store_h)) / store_h)) / store_h)) / store_h)) / ((store_i * ((store_i * ((store_i * ((store_i * (arg1 / store_h)) / store_h)) / store_h)) / store_h)) / store_h))) | (!(store_i * ((store_i * ((store_i * ((store_i * (arg1 / store_h)) / store_h)) / store_h)) / store_h)) / store_h), \"ERC20: transfer to the zero address\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_h = 0x11;\n        var_a = address(this);\n        var_b = 0x18;\n        require(!(storage_map_b[var_a] > ((store_j * ((store_i * ((store_i * ((store_i * ((store_i * (arg1 / store_h)) / store_h)) / store_h)) / store_h)) / store_h)) + storage_map_b[var_a])), \"ERC20: transfer to the zero address\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_h = 0x11;\n        var_a = address(this);\n        var_b = 0x18;\n        storage_map_b[var_a] = (store_j * ((store_i * ((store_i * ((store_i * ((store_i * (arg1 / store_h)) / store_h)) / store_h)) / store_h)) / store_h)) + storage_map_b[var_a];\n        var_c = store_j * ((store_i * ((store_i * ((store_i * ((store_i * (arg1 / store_h)) / store_h)) / store_h)) / store_h)) / store_h);\n        emit Transfer(address(this), address(this), store_j * ((store_i * ((store_i * ((store_i * ((store_i * (arg1 / store_h)) / store_h)) / store_h)) / store_h)) / store_h));\n        require(!(store_i > 0), \"ERC20: transfer to the zero address\");\n        require(0xdead - (address(uniPairAddy)), \"ERC20: transfer to the zero address\");\n        require(!(store_j > store_i), \"ERC20: transfer to the zero address\");\n        require(store_h, \"ERC20: transfer to the zero address\");\n        require((store_i == ((store_i * ((store_i * ((store_i * ((store_i * ((store_i * (arg1 / store_h)) / store_h)) / store_h)) / store_h)) / store_h)) / ((store_i * ((store_i * ((store_i * ((store_i * (arg1 / store_h)) / store_h)) / store_h)) / store_h)) / store_h))) | (!(store_i * ((store_i * ((store_i * ((store_i * (arg1 / store_h)) / store_h)) / store_h)) / store_h)) / store_h), \"ERC20: transfer to the zero address\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_h = 0x11;\n        require(address(this), \"ERC20: transfer to the zero address\");\n        require(0xdead, \"ERC20: transfer to the zero address\");\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x23;\n        var_f = 0x45524332303a207472616e7366657220746f20746865207a65726f2061646472;\n        var_g = 0x6573730000000000000000000000000000000000000000000000000000000000;\n        var_a = address(this);\n        var_b = 0x18;\n        require(!((store_i * ((store_i * ((store_i * ((store_i * ((store_i * (arg1 / store_h)) / store_h)) / store_h)) / store_h)) / store_h)) > storage_map_b[var_a]), \"You are trying to transfer more than your balance\");\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x31;\n        var_f = 0x596f752061726520747279696e6720746f207472616e73666572206d6f726520;\n        var_g = 0x7468616e20796f75722062616c616e6365000000000000000000000000000000;\n        var_a = address(this);\n        var_b = 0x17;\n        if (storage_map_b[var_a]) {\n            if (storage_map_b[var_a]) {\n                var_a = address(this);\n                var_b = 0x17;\n                if (storage_map_b[var_a]) {\n                    if (storage_map_b[var_a]) {\n                        if (storage_map_b[var_a]) {\n                            if (storage_map_b[var_a]) {\n                                if (address(uniPairAddy) == (address(this))) {\n                                    if (!(store_i * ((store_i * ((store_i * ((store_i * ((store_i * (arg1 / store_h)) / store_h)) / store_h)) / store_h)) / store_h)) > _maxxTransferSize) {\n                                        var_a = address(this);\n                                        var_b = 0x17;\n                                        if (storage_map_b[var_a]) {\n                                            if (storage_map_b[var_a]) {\n                                                require(!(!bytes1(storage_map_b[var_a])), \"TX Limit Exceeded\");\n                                                var_a = address(this);\n                                                var_b = 0x17;\n                                                require(!(!bytes1(storage_map_b[var_a])), \"TX Limit Exceeded\");\n                                                require(!(!bytes1(storage_map_b[var_a])), \"TX Limit Exceeded\");\n                                                require(!(!bytes1(storage_map_b[var_a])), \"TX Limit Exceeded\");\n                                                var_a = address(this);\n                                                var_b = 0x17;\n                                                require(!(!bytes1(storage_map_b[var_a])), \"TX Limit Exceeded\");\n                                                var_a = address(this);\n                                                var_b = 0x18;\n                                                require(!(!bytes1(storage_map_b[var_a])), \"TX Limit Exceeded\");\n                                                require(address(uniPairAddy) == (address(this)), \"TX Limit Exceeded\");\n                                                require(!((store_i * ((store_i * ((store_i * ((store_i * ((store_i * (arg1 / store_h)) / store_h)) / store_h)) / store_h)) / store_h)) > _maxxTransferSize), \"TX Limit Exceeded\");\n                                                require(bytes1(storage_map_b[var_a]), \"TX Limit Exceeded\");\n                                                require(bytes1(storage_map_b[var_a]), \"TX Limit Exceeded\");\n                                                require(!((store_i * ((store_i * ((store_i * ((store_i * ((store_i * (arg1 / store_h)) / store_h)) / store_h)) / store_h)) / store_h)) > _maxxTrxSize), \"TX Limit Exceeded\");\n                                                require(bytes1(storage_map_b[var_a]), \"TX Limit Exceeded\");\n                                                require(bytes1(storage_map_b[var_a]), \"TX Limit Exceeded\");\n                                                var_a = address(this);\n                                                var_b = 0x18;\n                                                require(!(!bytes1(storage_map_b[var_a])), \"TX Limit Exceeded\");\n                                                var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                                var_h = 0x11;\n                                                var_a = address(this);\n                                                var_b = 0x18;\n                                                storage_map_b[var_a] = storage_map_b[var_a] - (store_i * ((store_i * ((store_i * ((store_i * ((store_i * (arg1 / store_h)) / store_h)) / store_h)) / store_h)) / store_h));\n                                                var_b = 0x17;\n                                                require(!(!bytes1(store_f)), \"TX Limit Exceeded\");\n                                                var_a = 0xdead;\n                                                var_b = 0x18;\n                                                require(!(!bytes1(store_f)), \"TX Limit Exceeded\");\n                                                var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                                var_h = 0x11;\n                                                var_a = 0xdead;\n                                                var_b = 0x17;\n                                                require(!(!bytes1(store_f)), \"TX Limit Exceeded\");\n                                                require(!(!bytes1(store_f)), \"TX Limit Exceeded\");\n                                                require(!(!bytes1(store_f)), \"TX Limit Exceeded\");\n                                                require(!(!bytes1(store_f)), \"TX Limit Exceeded\");\n                                                require(!(!bytes1(store_f)), \"TX Limit Exceeded\");\n                                            }\n                                            store_f = 0x01 | (uint248(store_f));\n                                            require(!(!bytes1(store_f)), \"TX Limit Exceeded\");\n                                            var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                            var_h = 0x11;\n                                            require(!(storage_map_b[var_a] - (store_i * ((store_i * ((store_i * ((store_i * ((store_i * (arg1 / store_h)) / store_h)) / store_h)) / store_h)) / store_h)) > storage_map_b[var_a]), \"TX Limit Exceeded\");\n                                            require(!(bytes1(storage_map_b[var_a])), \"TX Limit Exceeded\");\n                                            require(!(storage_map_b[var_a] > ((store_i * ((store_i * ((store_i * ((store_i * ((store_i * (arg1 / store_h)) / store_h)) / store_h)) / store_h)) / store_h)) + storage_map_b[var_a])), \"TX Limit Exceeded\");\n                                        }\n                                    }\n                                }\n                            }\n                            require(!(bytes1(storage_map_b[var_a])), \"TX Limit Exceeded\");\n                            require(0xdead - (address(uniPairAddy)), \"TX Limit Exceeded\");\n                            require(!(store_j > 0), \"TX Limit Exceeded\");\n                        }\n                    }\n                }\n                require(0xdead - (address(uniPairAddy)), \"TX Limit Exceeded\");\n            }\n            require(!(store_k > (0x01 + store_k)), \"TX Limit Exceeded\");\n        }\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x11;\n        var_f = 0x5458204c696d6974204578636565646564000000000000000000000000000000;\n        require(!((store_i * ((store_i * ((store_i * ((store_i * ((store_i * (arg1 / store_h)) / store_h)) / store_h)) / store_h)) / store_h)) > _maxxTrxSize), \"TX Limit Exceeded\");\n        require(!((store_i * ((store_i * ((store_i * ((store_i * ((store_i * (arg1 / store_h)) / store_h)) / store_h)) / store_h)) / store_h)) > _maxxTrxSize), \"TX Limit Exceeded\");\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x11;\n        var_f = 0x5458204c696d6974204578636565646564000000000000000000000000000000;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x11;\n        var_f = 0x5458204c696d6974204578636565646564000000000000000000000000000000;\n        require(!((store_i * ((store_i * ((store_i * ((store_i * ((store_i * (arg1 / store_h)) / store_h)) / store_h)) / store_h)) / store_h)) > _maxxTransferSize), \"TX Limit Exceeded\");\n        require(!((store_i * ((store_i * ((store_i * ((store_i * ((store_i * (arg1 / store_h)) / store_h)) / store_h)) / store_h)) / store_h)) > _maxxTransferSize), \"TX Limit Exceeded\");\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x11;\n        var_f = 0x5458204c696d6974204578636565646564000000000000000000000000000000;\n        if (0xdead == 0xdead) {\n        }\n        require(bytes1(uniPairAddy / 0x010000000000000000000000000000000000000000), \"enabledTrading\");\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x0e;\n        var_f = 0x656e61626c656454726164696e67000000000000000000000000000000000000;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x25;\n        var_f = 0x45524332303a207472616e736665722066726f6d20746865207a65726f206164;\n        var_g = 0x6472657373000000000000000000000000000000000000000000000000000000;\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_h = 0x12;\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_h = 0x12;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x11;\n        var_f = 0x5458204c696d6974204578636565646564000000000000000000000000000000;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x11;\n        var_f = 0x5458204c696d6974204578636565646564000000000000000000000000000000;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x25;\n        var_f = 0x45524332303a207472616e736665722066726f6d20746865207a65726f206164;\n        var_g = 0x6472657373000000000000000000000000000000000000000000000000000000;\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_h = 0x12;\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_h = 0x12;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x11;\n        var_f = 0x5458204c696d6974204578636565646564000000000000000000000000000000;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x11;\n        var_f = 0x5458204c696d6974204578636565646564000000000000000000000000000000;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x25;\n        var_f = 0x45524332303a207472616e736665722066726f6d20746865207a65726f206164;\n        var_g = 0x6472657373000000000000000000000000000000000000000000000000000000;\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_h = 0x12;\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_h = 0x12;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x11;\n        var_f = 0x5458204c696d6974204578636565646564000000000000000000000000000000;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x11;\n        var_f = 0x5458204c696d6974204578636565646564000000000000000000000000000000;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x25;\n        var_f = 0x45524332303a207472616e736665722066726f6d20746865207a65726f206164;\n        var_g = 0x6472657373000000000000000000000000000000000000000000000000000000;\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_h = 0x12;\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_h = 0x12;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x11;\n        var_f = 0x5458204c696d6974204578636565646564000000000000000000000000000000;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x11;\n        var_f = 0x5458204c696d6974204578636565646564000000000000000000000000000000;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x25;\n        var_f = 0x45524332303a207472616e736665722066726f6d20746865207a65726f206164;\n        var_g = 0x6472657373000000000000000000000000000000000000000000000000000000;\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_h = 0x12;\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_h = 0x12;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x11;\n        var_f = 0x5458204c696d6974204578636565646564000000000000000000000000000000;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x11;\n        var_f = 0x5458204c696d6974204578636565646564000000000000000000000000000000;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x23;\n        var_f = 0x45524332303a207472616e7366657220746f20746865207a65726f2061646472;\n        var_g = 0x6573730000000000000000000000000000000000000000000000000000000000;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x25;\n        var_f = 0x45524332303a207472616e736665722066726f6d20746865207a65726f206164;\n        var_g = 0x6472657373000000000000000000000000000000000000000000000000000000;\n    }",
    "llm_output": "function transfer(address recipient, uint256 amount) public returns (bool) {\n    revert(\"Decompiler artifact\");\n}",
    "ground_truth": "function transfer(address recipient, uint256 amount) public override returns (bool) {_transfer(msg.sender, recipient, amount);return true;}"
}