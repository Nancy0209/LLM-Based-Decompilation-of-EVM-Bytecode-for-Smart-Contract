{
    "contract_address": "0x0571e4201619916DB35214e935F0E46F037BBd2D",
    "heimdall_input": "function transferOwnership(address arg0) public {\n        require(arg0 == (address(arg0)));\n        require(msg.sender == (address(getOwner)), \"!OWNER\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x06;\n        var_d = 0x214f574e45520000000000000000000000000000000000000000000000000000;\n        getOwner = (address(arg0)) | (uint96(getOwner));\n        address var_a = address(arg0);\n        emit OwnershipTransferred(address(arg0));\n    }",
    "llm_output": "function transferOwnership(address newOwner) public {\n    // Preserved no-op check from original bytecode\n    require(newOwner == address(newOwner));\n    // Validate caller is current owner\n    require(msg.sender == address(uint160(_owner)), \"!OWNER\");\n\n    // Update owner while preserving upper 96-bit data packed in the same slot\n    _owner = uint256(uint160(newOwner)) | uint256(uint96(_owner));\n\n    emit OwnershipTransferred(newOwner);\n}",
    "ground_truth": "function transferOwnership(address payable adr) public onlyOwner {owner = adr; emit OwnershipTransferred(adr);}"
}