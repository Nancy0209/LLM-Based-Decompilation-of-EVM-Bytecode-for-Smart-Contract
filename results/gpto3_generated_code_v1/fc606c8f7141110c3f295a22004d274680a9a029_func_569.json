{
    "contract_address": "0xfc606C8F7141110c3f295a22004D274680A9A029",
    "heimdall_input": "function getRefAmount(uint256 arg0) public pure returns (uint256) {\n        require((arg0 == ((arg0 * 0x01f4) / 0x01f4)) | !0x01f4);\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_b = 0x11;\n        require(0x2710);\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_b = 0x12;\n        uint256 var_c = (arg0 * 0x01f4) / 0x2710;\n        return (arg0 * 0x01f4) / 0x2710;\n    }",
    "llm_output": "function getRefAmount(uint256 amount) public pure returns (uint256) {\n    // Replicates the decompiled `require`\n    require(amount == (amount * 500) / 500, \"Invariant failed\");\n\n    // Dummy assignments retained from decompiled output (no functional effect)\n    bytes32 _dummySelector = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n    uint256 _dummyCode = 0x11;\n\n    // Always-true require to preserve original structure\n    require(uint256(0x2710) != 0, \"Unreachable\");\n\n    // Second set of dummy assignments (also no functional effect)\n    _dummySelector = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n    _dummyCode = 0x12;\n\n    uint256 result = (amount * 500) / 10000;\n    return result;\n}",
    "ground_truth": "function getRefAmount(uint256 _amount) public pure returns (uint256) {\r\n        return _amount * 500 / 10_000;\r\n    }"
}