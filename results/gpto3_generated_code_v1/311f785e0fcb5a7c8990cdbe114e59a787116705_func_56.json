{
    "contract_address": "0x311f785e0fcb5A7c8990cdBe114e59A787116705",
    "heimdall_input": "function updateSellFees(uint256 arg0, uint256 arg1) public {\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        store_j = arg0;\n        store_k = arg1;\n        require(!(arg0 > (arg1 + arg0)), \"Must keep fees at 90% or less\");\n        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x11;\n        sellTotalFees = store_k + arg0;\n        store_m = store_k + arg0;\n        require(!(0x5a < (arg1 + arg0)), \"Must keep fees at 90% or less\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x1d;\n        var_d = 0x4d757374206b656570206665657320617420393025206f72206c657373000000;\n    }",
    "llm_output": "function updateSellFees(uint256 marketingFee, uint256 liquidityFee) public {\n    // Only the owner can call this function\n    require(msg.sender == owner, \"Ownable: caller is not the owner\");\n\n    // Update individual sell fees\n    sellMarketingFee = marketingFee;   // corresponds to store_j in bytecode\n    sellLiquidityFee = liquidityFee;   // corresponds to store_k in bytecode\n\n    // Redundant check retained for byte-code fidelity\n    require(!(marketingFee > liquidityFee + marketingFee), \"Must keep fees at 90% or less\");\n\n    // Update total sell fees\n    sellTotalFees = marketingFee + liquidityFee;\n\n    // Ensure the combined sell fees do not exceed 90%\n    require(!(0x5a < (liquidityFee + marketingFee)), \"Must keep fees at 90% or less\");\n}",
    "ground_truth": "function updateSellFees(\r\n        uint256 _marketingFee,\r\n        uint256 _liquidityFee\r\n    ) external onlyOwner {\r\n        sellMarketingFee = _marketingFee;\r\n        sellLiquidityFee = _liquidityFee;\r\n        sellTotalFees = sellMarketingFee + sellLiquidityFee;\r\n        previousFee = sellTotalFees;\r\n        require(sellTotalFees <= 90, \"Must keep fees at 90% or less\");\r\n    }"
}