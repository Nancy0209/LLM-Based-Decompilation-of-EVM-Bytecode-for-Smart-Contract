{
    "contract_address": "0x5B8BA3cb21F36a06b3a86774103F8dBDa14483EC",
    "heimdall_input": "function claimTokens() public payable {\n        require(!(block.timestamp - getCurrentPeriod) > block.timestamp);\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_b = 0x11;\n        require(periodDuration);\n        address var_a = address(msg.sender);\n        var_c = 0x0f;\n        require(storage_map_b[var_a] < ((block.timestamp - getCurrentPeriod) / periodDuration));\n        require(address(msg.sender) - 0);\n        var_a = address(msg.sender);\n        var_c = 0x03;\n        require(storage_map_b[var_a] > 0);\n        var_d = 0x70a0823100000000000000000000000000000000000000000000000000000000;\n        address var_e = address(this);\n        (bool success, bytes memory ret0) = address(0xfb6b23ade938ed16f769833b2ff92ca26303390b).Unresolved_70a08231(var_e); // staticcall\n        uint256 var_f = var_f + (uint248(ret0.length + 0x1f));\n        require(!((var_f + ret0.length) - var_f) < 0x20);\n        require(var_g == (var_g));\n        require(0x01bc, \"ERC721Enumerable: owner index out of bounds\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_b = 0x12;\n        require(!(0 < storage_map_b[var_a]), \"ERC721Enumerable: owner index out of bounds\");\n        require(address(msg.sender) - 0, \"ERC721Enumerable: owner index out of bounds\");\n        var_a = address(msg.sender);\n        var_c = 0x03;\n        require(0 < storage_map_b[var_a], \"ERC721Enumerable: owner index out of bounds\");\n        var_a = address(msg.sender);\n        var_c = 0x06;\n        var_a = 0;\n        address var_c = keccak256(var_a);\n        var_a = storage_map_b[var_a];\n        var_c = 0x11;\n        require(!(storage_map_b[var_a] < (var_g / 0x01bc)), \"ERC721Enumerable: owner index out of bounds\");\n        require(0x01, \"ERC721Enumerable: owner index out of bounds\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_b = 0x11;\n        var_a = storage_map_b[var_a];\n        var_c = 0x11;\n        require(!((var_g / 0x01bc) - storage_map_b[var_a] > (var_g / 0x01bc)), \"ERC721Enumerable: owner index out of bounds\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_b = 0x11;\n        require(!(0 > (0 + ((var_g / 0x01bc) - storage_map_b[var_a]))), \"ERC721Enumerable: owner index out of bounds\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_b = 0x11;\n        var_a = storage_map_b[var_a];\n        var_c = 0x11;\n        storage_map_b[var_a] = (var_g) / 0x01bc;\n        require(0x01, \"ERC721Enumerable: owner index out of bounds\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_b = 0x11;\n        var_h = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_i = ((0x04 + var_f) + 0x20) - (0x04 + var_f);\n        var_j = 0x2b;\n        var_k = 0x455243373231456e756d657261626c653a206f776e657220696e646578206f75;\n        var_l = 0x74206f6620626f756e6473000000000000000000000000000000000000000000;\n        var_h = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_i = ((0x04 + var_f) + 0x20) - (0x04 + var_f);\n        var_j = 0x29;\n        var_k = 0x4552433732313a2061646472657373207a65726f206973206e6f742061207661;\n        var_l = 0x6c6964206f776e65720000000000000000000000000000000000000000000000;\n        require(0 > 0);\n        var_h = 0xa9059cbb00000000000000000000000000000000000000000000000000000000;\n        var_i = address(msg.sender);\n        uint256 var_j = 0;\n        (bool success, bytes memory ret0) = address(0xfb6b23ade938ed16f769833b2ff92ca26303390b).{ value: var_j ether }Unresolved_a9059cbb(var_i); // call\n        var_f = var_f + (uint248(ret0.length + 0x1f));\n        require(!(((var_f + ret0.length) - var_f) < 0x20), \"Transfer failed\");\n        require(var_g == (var_g), \"Transfer failed\");\n        require(var_g, \"Transfer failed\");\n        var_m = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_j = ((0x04 + var_f) + 0x20) - (0x04 + var_f);\n        var_k = 0x0f;\n        var_l = 0x5472616e73666572206661696c65640000000000000000000000000000000000;\n        var_a = address(msg.sender);\n        var_c = 0x0f;\n        storage_map_b[var_a] = (block.timestamp - getCurrentPeriod) / periodDuration;\n        var_h = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_i = ((0x04 + var_f) + 0x20) - (0x04 + var_f);\n        var_j = 0x12;\n        var_k = 0x4e6f20746f6b656e7320746f20636c61696d0000000000000000000000000000;\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = ((0x04 + var_f) + 0x20) - (0x04 + var_f);\n        var_i = 0x16;\n        var_j = 0x596f7520646f6e2774206f776e20616e79204e46547300000000000000000000;\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = ((0x04 + var_f) + 0x20) - (0x04 + var_f);\n        var_i = 0x29;\n        var_j = 0x4552433732313a2061646472657373207a65726f206973206e6f742061207661;\n        var_k = 0x6c6964206f776e65720000000000000000000000000000000000000000000000;\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = ((0x04 + var_f) + 0x20) - (0x04 + var_f);\n        var_i = 0x1f;\n        var_j = 0x416c726561647920636c61696d656420666f72207468697320706572696f6400;\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_b = 0x12;\n    }",
    "llm_output": "function claimTokens() public payable {\n    revert(\"Decompiler artifact\");\n}",
    "ground_truth": "function claimTokens() external {\r\n        uint256 currentPeriod = getCurrentPeriod();\r\n        require(lastClaimedPeriod[msg.sender] < currentPeriod, \"Already claimed for this period\");\r\n\r\n        uint256 totalNFTsOwned = balanceOf(msg.sender);\r\n        require(totalNFTsOwned > 0, \"You don't own any NFTs\");\r\n\r\n        uint256 contractBalance = IERC20(TOKEN_ADDRESS).balanceOf(address(this));\r\n        uint256 tokenAmountPerNFT = contractBalance / MAX_SUPPLY;\r\n\r\n        uint256 totalClaimableAmount = 0;\r\n\r\n        for (uint256 i = 0; i < totalNFTsOwned; i++) {\r\n            uint256 tokenId = tokenOfOwnerByIndex(msg.sender, i);\r\n            if (claimedTokenAmount[tokenId] < tokenAmountPerNFT) {\r\n                uint256 claimableAmount = tokenAmountPerNFT - claimedTokenAmount[tokenId];\r\n                totalClaimableAmount += claimableAmount;\r\n                claimedTokenAmount[tokenId] = tokenAmountPerNFT;\r\n            }\r\n        }\r\n\r\n        require(totalClaimableAmount > 0, \"No tokens to claim\");\r\n        require(IERC20(TOKEN_ADDRESS).transfer(msg.sender, totalClaimableAmount), \"Transfer failed\");\r\n\r\n        lastClaimedPeriod[msg.sender] = currentPeriod;\r\n    }"
}