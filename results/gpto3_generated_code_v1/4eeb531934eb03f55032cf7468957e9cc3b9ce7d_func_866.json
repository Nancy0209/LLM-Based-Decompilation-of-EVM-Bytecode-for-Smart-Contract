{
    "contract_address": "0x4EEB531934eb03F55032CF7468957e9cc3b9Ce7d",
    "heimdall_input": "function maxWalletRule(uint256 arg0) public {\n        require(msg.sender == (address(getOwner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        require((arg0 == ((arg0 * totalSupply) / totalSupply)) | !totalSupply);\n        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x11;\n        require(0x03e8);\n        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x12;\n        _maxTxAmount = (arg0 * totalSupply) / 0x03e8;\n    }",
    "llm_output": "function setMaxTxAmount(uint256 maxTxPermille) public {\n    // Only the contract owner can call this function\n    require(msg.sender == owner(), \"Ownable: caller is not the owner\");\n\n    uint256 supply = totalSupply();\n\n    // Overflow check replicated from the original logic\n    require(supply == 0 || (maxTxPermille * supply) / supply == maxTxPermille);\n\n    // Keeps original always-true require statement (no logical impact)\n    require(1000 > 0);\n\n    // Update the maximum transaction amount\n    _maxTxAmount = (maxTxPermille * supply) / 1000;\n}",
    "ground_truth": "function maxWalletRule(uint256 maxTxPercent) external onlyOwner {\r\n         _maxTxAmount = (_totalSupply * maxTxPercent ) / 1000;\r\n                       \r\n    }"
}