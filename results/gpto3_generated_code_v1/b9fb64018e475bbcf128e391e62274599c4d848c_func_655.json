{
    "contract_address": "0xB9FB64018E475BBCF128E391E62274599c4D848C",
    "heimdall_input": "function approve(address arg0, uint256 arg1) public payable {\n        require(arg0 == (address(arg0)));\n        require(!address(0xaaeb6d7670e522a718067333cd4e).code.length, CustomError_df2d9b42());\n        require(0x01 > arg1, CustomError_df2d9b42());\n        require(!(arg1 < totalSupply), CustomError_df2d9b42());\n        uint256 var_a = arg1;\n        var_b = 0x04;\n        require(0 - (bytes1(storage_map_b[var_a])), CustomError_df2d9b42());\n        var_c = 0xdf2d9b4200000000000000000000000000000000000000000000000000000000;\n        require(0 - storage_map_b[var_a], CustomError_cfb3b942());\n        require(address(storage_map_b[var_a]) == msg.sender, CustomError_cfb3b942());\n        var_a = address(storage_map_b[var_a]);\n        var_b = 0x07;\n        var_a = msg.sender;\n        uint256 var_b = keccak256(var_a);\n        require(bytes1(storage_map_b[var_a]), CustomError_cfb3b942());\n        var_a = arg1;\n        var_b = 0x06;\n        storage_map_b[var_a] = (address(arg0)) | (uint96(storage_map_b[var_a]));\n        emit Approval(address(storage_map_b[var_a]), address(arg0), arg1);\n        var_c = 0xcfb3b94200000000000000000000000000000000000000000000000000000000;\n        var_a = arg1;\n        var_b = 0x06;\n        storage_map_b[var_a] = (address(arg0)) | (uint96(storage_map_b[var_a]));\n        emit Approval(address(storage_map_b[var_a]), address(arg0), arg1);\n        var_a = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff + arg1;\n        var_b = 0x04;\n        if (0 - storage_map_b[var_a]) {\n            var_a = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff + (0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff + arg1);\n            var_b = 0x04;\n            if (0 - storage_map_b[var_a]) {\n                var_a = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff + (0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff + (0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff + arg1));\n                var_b = 0x04;\n                if (0 - storage_map_b[var_a]) {\n                }\n            }\n        }\n        var_c = 0xdf2d9b4200000000000000000000000000000000000000000000000000000000;\n        var_c = 0xdf2d9b4200000000000000000000000000000000000000000000000000000000;\n        var_c = 0xc617113400000000000000000000000000000000000000000000000000000000;\n        address var_d = address(this);\n        address var_e = address(arg0);\n        (bool success, bytes memory ret0) = address(0xaaeb6d7670e522a718067333cd4e).Unresolved_c6171134(var_d); // staticcall\n        uint256 var_f = var_f + (uint248(ret0.length + 0x1f));\n        require(!(((var_f + ret0.length) - var_f) < 0x20), CustomError_ede71dcc());\n        require(var_f.length == var_f.length, CustomError_ede71dcc());\n        require(var_f.length, CustomError_ede71dcc());\n        var_g = 0xede71dcc00000000000000000000000000000000000000000000000000000000;\n        var_e = address(arg0);\n    }",
    "llm_output": "function approve(address spender, uint256 tokenId) public payable {\n    // Redundant identity check kept for fidelity\n    require(spender == address(spender));\n\n    // Original requirement set, preserved exactly\n    require(\n        address(0xAAeB6d7670e522A718067333cD4E).code.length == 0,\n        CustomError_df2d9b42()\n    );\n    require(tokenId < 0x01, CustomError_df2d9b42());\n    require(!(tokenId < totalSupply), CustomError_df2d9b42());\n\n    // Alias to the packed ownership / approval slot\n    uint256 slot = tokenId;\n\n    // Require the slot to be non-zero (mimics `0 - bytes1(...)` check)\n    require(uint8(_packedOwnerships[slot]) != 0, CustomError_df2d9b42());\n\n    // Decompiler artefact \u2013 retained\n    bytes32 _dummySelector = 0xdf2d9b4200000000000000000000000000000000000000000000000000000000;\n\n    unchecked {\n        require(\n            uint256(0) - _packedOwnerships[slot] != 0,\n            CustomError_cfb3b942()\n        );\n    }\n\n    require(\n        address(uint160(_packedOwnerships[slot])) == msg.sender,\n        CustomError_cfb3b942()\n    );\n\n    // Additional spurious variables kept to preserve semantics\n    uint256 _hash = uint256(keccak256(abi.encodePacked(msg.sender)));\n\n    require(uint8(_packedOwnerships[slot]) != 0, CustomError_cfb3b942());\n\n    // Update approval while retaining the upper 96 bits\n    _packedOwnerships[slot] =\n        (uint256(uint160(spender))) |\n        (uint256(uint96(_packedOwnerships[slot])));\n\n    emit Approval(address(uint160(_packedOwnerships[slot])), spender, tokenId);\n\n    // Duplicate write & event exactly as in decompiled output\n    _packedOwnerships[slot] =\n        (uint256(uint160(spender))) |\n        (uint256(uint96(_packedOwnerships[slot])));\n    emit Approval(address(uint160(_packedOwnerships[slot])), spender, tokenId);\n\n    // Back-scan loop reproduced verbatim\n    uint256 cursor = type(uint256).max + tokenId;\n    unchecked {\n        if (uint256(0) - _packedOwnerships[cursor] != 0) {\n            cursor = type(uint256).max + cursor;\n            if (uint256(0) - _packedOwnerships[cursor] != 0) {\n                cursor = type(uint256).max + cursor;\n                if (uint256(0) - _packedOwnerships[cursor] != 0) {\n                    // no-op\n                }\n            }\n        }\n    }\n\n    // More decompiler artefacts \u2013 preserved\n    _dummySelector = 0xc617113400000000000000000000000000000000000000000000000000000000;\n\n    (bool success, bytes memory returnData) = address(\n        0xAAeB6d7670e522A718067333cD4E\n    ).staticcall(abi.encodeWithSelector(0xc6171134, address(this)));\n\n    uint256 ptr;\n    unchecked {\n        ptr += uint248(returnData.length + 0x1f);\n    }\n\n    require(\n        !(((ptr + returnData.length) - ptr) < 0x20),\n        CustomError_ede71dcc()\n    );\n    require(returnData.length == returnData.length, CustomError_ede71dcc());\n    require(returnData.length != 0, CustomError_ede71dcc());\n\n    // Final artefact selector\n    bytes32 _dummySelector2 = 0xede71dcc00000000000000000000000000000000000000000000000000000000;\n\n    // Silence compiler warnings about unused local variables\n    (_hash, _dummySelector, _dummySelector2, success);\n}",
    "ground_truth": "function approve(address operator, uint256 tokenId)\\n        public\\n        override\\n        onlyAllowedOperatorApproval(operator)\\n    {\\n        super.approve(operator, tokenId);\\n    }"
}