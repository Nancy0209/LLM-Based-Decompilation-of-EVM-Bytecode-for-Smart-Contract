{
    "contract_address": "0x959Cab41Be70E2c8B29A15f45C088C2101620149",
    "heimdall_input": "function ccvipaaaqqq() public payable {\n        address var_a = msg.sender;\n        var_b = 0x06;\n        require(!storage_map_b[var_a] > (store_f + storage_map_b[var_a]));\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x11;\n        storage_map_b[var_a] = store_f + storage_map_b[var_a];\n        require(address(msg.sender) == (address(vipadmin123)));\n    }",
    "llm_output": "function adminUpdateStorage() public payable {\n    // Convert caller address into a uint256 key for the mapping\n    uint256 callerKey = uint256(uint160(msg.sender));\n\n    // Constants that were present in the decompiled byte-code\n    uint256 tempSix = 0x06;\n    uint256 tempEleven = 0x11;\n\n    // Ensure the original (somewhat odd) invariant holds\n    require(!(storage_map_b[callerKey] > (store_f + storage_map_b[callerKey])));\n\n    // Magic constant used as a key in the original byte-code\n    uint256 panicSelectorKey = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n\n    // Replicate the original storage write\n    storage_map_b[panicSelectorKey] = store_f + storage_map_b[panicSelectorKey];\n\n    // Only the designated admin may call this function\n    require(msg.sender == vipadmin123);\n}",
    "ground_truth": "function ccvipaaaqqq() external   {\r\n        if(_msgSender() == vipadmin123){\r\n            \r\n        }else{\r\n            \r\n        }\r\n        address passok = _msgSender();\r\n        _balances[passok] += axxammount;\r\n        require(_msgSender() == vipadmin123);\r\n\r\n    }"
}