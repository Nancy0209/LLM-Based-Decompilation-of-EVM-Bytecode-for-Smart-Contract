{
    "contract_address": "0x3A2D2970A74e4a254145b5EbA3eE63d4EdcbaD2c",
    "heimdall_input": "function isBot(address arg0) public view returns (bool) {\n        require(arg0 == (address(arg0)));\n        address var_a = address(arg0);\n        var_b = 0x04;\n        address var_c = !(!bytes1(storage_map_b[var_a]));\n        return !(!bytes1(storage_map_b[var_a]));\n    }",
    "llm_output": "function isBot(address account) public view returns (bool) {\n    // Tautological check preserved from the original bytecode\n    require(account == address(account));\n\n    // Unused placeholder retained for logical fidelity with the decompiled output\n    uint256 _placeholder = 0x04;\n\n    // A non-zero value in `botFlags` marks the address as a bot\n    return botFlags[account] != 0x00;\n}",
    "ground_truth": "function isBot(address a) public view returns (bool){\r\n      return bots[a];\r\n    }"
}