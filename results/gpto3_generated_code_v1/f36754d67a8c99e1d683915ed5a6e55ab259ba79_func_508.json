{
    "contract_address": "0xF36754d67a8C99e1D683915ED5A6E55aB259ba79",
    "heimdall_input": "function transfer(address arg0, uint256 arg1) public {\n        require(arg0 == (address(arg0)));\n        require(arg1 == arg1);\n        require(!(!(address(arg0)) == (address(owner / 0x01))), \"You are trying to buy too many tokens. You have reached the limit for one wallet.\");\n        require(!(!(address(arg0)) == (address(noBlackList / 0x0100))), \"You are trying to buy too many tokens. You have reached the limit for one wallet.\");\n        require(!(!(address(arg0)) == (address(this))), \"You are trying to buy too many tokens. You have reached the limit for one wallet.\");\n        require(!(!(address(arg0)) == (address(noFeeToTransfer / 0x01))), \"You are trying to buy too many tokens. You have reached the limit for one wallet.\");\n        require(!(!(address(arg0)) == (address(store_n / 0x01))), \"You are trying to buy too many tokens. You have reached the limit for one wallet.\");\n        require(!(!(address(msg.sender)) == (address(owner / 0x01))), \"You are trying to buy too many tokens. You have reached the limit for one wallet.\");\n        address var_a = address(arg0);\n        var_b = 0x01;\n        require(!(storage_map_b[var_a] > (storage_map_b[var_a] + arg1)), \"You are trying to buy too many tokens. You have reached the limit for one wallet.\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x11;\n        require(!((storage_map_b[var_a] + arg1) > _maxWalletToken), \"You are trying to buy too many tokens. You have reached the limit for one wallet.\");\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_e = ((0x04 + var_f) + 0x20) - (0x04 + var_f);\n        var_g = 0x51;\n        var_h = 0x596f752061726520747279696e6720746f2062757920746f6f206d616e792074;\n        var_i = 0x6f6b656e732e20596f752068617665207265616368656420746865206c696d69;\n        var_j = 0x7420666f72206f6e652077616c6c65742e000000000000000000000000000000;\n        require(!(!(address(msg.sender)) == (address(owner / 0x01))), \"You are trying to buy more than the max transaction limit.\");\n        require(!(!(address(arg0)) == (address(owner / 0x01))), \"You are trying to buy more than the max transaction limit.\");\n        require(!(arg1 > _maxTxAmount), \"You are trying to buy more than the max transaction limit.\");\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = ((0x04 + var_f) + 0x20) - (0x04 + var_f);\n        var_g = 0x3a;\n        var_h = 0x596f752061726520747279696e6720746f20627579206d6f7265207468616e20;\n        var_i = 0x746865206d6178207472616e73616374696f6e206c696d69742e000000000000;\n        require(!(bytes1(noBlackList / 0x01)), \"This address is blacklisted. Transaction reverted.\");\n        var_a = address(msg.sender);\n        var_b = 0x04;\n        require(!(!bytes1(storage_map_b[var_a] / 0x01)), \"This address is blacklisted. Transaction reverted.\");\n        require(!(bytes1(storage_map_b[var_a] / 0x01)), \"This address is blacklisted. Transaction reverted.\");\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = ((0x04 + var_f) + 0x20) - (0x04 + var_f);\n        var_g = 0x32;\n        var_h = 0x54686973206164647265737320697320626c61636b6c69737465642e20547261;\n        var_i = 0x6e73616374696f6e2072657665727465642e0000000000000000000000000000;\n        if (address(msg.sender) == 0) {\n            if (!(address(arg0)) == 0) {\n                if (arg1 > 0) {\n                    if ((store_l / 0x01) < (store_l / 0x0100)) {\n                        if ((store_l / 0x01) < (store_l / 0x0100)) {\n                            require(address(msg.sender) == 0);\n                            require(!(address(arg0)) == 0);\n                            var_a = address(msg.sender);\n                            var_b = 0x03;\n                            require(arg1 > 0);\n                            require(bytes1(store_l / 0x01) < (bytes1(store_l / 0x0100)));\n                            require(bytes1(store_l / 0x01) < (bytes1(store_l / 0x0100)));\n                            require(bytes1(store_l / 0x01) < (bytes1(store_l / 0x0100)));\n                            require(bytes1(store_l / 0x01) < (bytes1(store_l / 0x0100)));\n                            var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                            var_c = 0x11;\n                            store_l = (bytes1((store_l / 0x01) + 0x01) * 0x01) | (uint248(store_l));\n                            require(bytes1(storage_map_b[var_a] / 0x01));\n                            var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                            var_c = 0x11;\n                            require(bytes1(storage_map_b[var_a] / 0x01));\n                            var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                            var_c = 0x12;\n                            require(!bytes1(storage_map_b[var_a] / 0x01));\n                            var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                            var_c = 0x11;\n                            require(0);\n                            require(bytes1(store_l / 0x01) - 0xff);\n                            require(!arg1 | (store_o == ((arg1 * store_o) / arg1)));\n                        }\n                        require(0x64);\n                        require(!(arg1 - ((arg1 * store_o) / 0x64)) > arg1);\n                        require(address(msg.sender) - (address(noFeeToTransfer / 0x01)));\n                        require(address(arg0) - (address(noFeeToTransfer / 0x01)));\n                    }\n                }\n            }\n            require(0x01);\n            require(!bytes1(noFeeToTransfer / 0x0100000000000000000000000000000000000000000000));\n        }\n        store_l = 0 | (uint248(store_l));\n        var_a = address(this);\n        var_b = 0x01;\n        require(!storage_map_b[var_a] > _maxTxAmount);\n        require(!_maxTxAmount > 0);\n        noFeeToTransfer = (0x01 * 0x010000000000000000000000000000000000000000) | (uint248(noFeeToTransfer));\n        require(!0x02 > 0xffffffffffffffff);\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x41;\n        var_d = 0x02;\n        uint256 var_f = var_f + 0x60;\n        require(!0x02);\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x32;\n        address var_k = address(this);\n        var_l = 0xad5c464800000000000000000000000000000000000000000000000000000000;\n        (bool success, bytes memory ret0) = address(uniswapV2Router / 0x01).WETH(var_i); // staticcall\n        var_f = var_f + (uint248(ret0.length + 0x1f));\n        require(!((var_f + ret0.length) - var_f) < 0x20);\n        require(var_m == (address(var_m)));\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x32;\n        address var_n = address(var_m);\n        require(address(this) == 0);\n        require(!(address(uniswapV2Router / 0x01)) == 0);\n        var_a = address(this);\n        var_b = 0x02;\n        var_a = address(uniswapV2Router / 0x01);\n        address var_b = keccak256(var_a);\n        storage_map_b[var_a] = _maxTxAmount;\n        var_o = _maxTxAmount;\n        emit Approval(address(this), address(uniswapV2Router / 0x01), _maxTxAmount);\n        var_o = 0x791ac94700000000000000000000000000000000000000000000000000000000;\n        var_j = _maxTxAmount;\n        uint256 var_p = 0;\n        uint256 var_q = ((0x04 + var_f) + 0xa0) - (0x04 + var_f);\n        uint256 var_r = var_f.length;\n        address var_s = address(this);\n        uint256 var_t = block.timestamp;\n        require(address(uniswapV2Router / 0x01).code.length);\n        (bool success, bytes memory ret0) = address(uniswapV2Router / 0x01).{ value: var_p ether }Unresolved_791ac947(var_j); // call\n        (bool success, bytes memory ret0) = address(noBlackList / 0x0100).transfer(address(this).balance);\n        var_o = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_j = ((0x04 + var_f) + 0x20) - (0x04 + var_f);\n        var_p = 0x11;\n        var_q = 0x4552523a207a65726f2061646472657373000000000000000000000000000000;\n        if (!noFeeToTransfer / 0x01000000000000000000000000000000000000000000) {\n        }\n        if (address(msg.sender) == (address(noFeeToTransfer / 0x01))) {\n        }\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = ((0x04 + var_f) + 0x20) - (0x04 + var_f);\n        var_g = 0x25;\n        var_h = 0x546f6b656e2076616c7565206d75737420626520686967686572207468616e20;\n        var_i = 0x7a65726f2e000000000000000000000000000000000000000000000000000000;\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = ((0x04 + var_f) + 0x20) - (0x04 + var_f);\n        var_g = 0x15;\n        var_h = 0x4552523a205573696e6720302061646472657373210000000000000000000000;\n    }",
    "llm_output": "function transfer(address /*recipient*/, uint256 /*amount*/) public pure {\n    revert(\"Decompiler artifact\");\n}",
    "ground_truth": "function transfer(address recipient, uint256 amount) public override returns (bool) {\r\n        _transfer(_msgSender(), recipient, amount);\r\n        return true;\r\n    }"
}