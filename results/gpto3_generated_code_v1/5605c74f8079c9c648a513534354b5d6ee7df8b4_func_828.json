{
    "contract_address": "0x5605C74F8079c9c648a513534354B5D6ee7dF8B4",
    "heimdall_input": "function manualswap() public view {\n        require(address(msg.sender) == (address(store_l / 0x01)));\n        require(address(msg.sender) == (address(store_m / 0x01)));\n        address var_a = address(this);\n        var_b = 0x02;\n        require(!(storage_map_h[var_a] > store_i), \"Amount must be less than total reflections\");\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_d = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        var_f = 0x2a;\n        var_g = 0x416d6f756e74206d757374206265206c657373207468616e20746f74616c2072;\n        var_h = 0x65666c656374696f6e7300000000000000000000000000000000000000000000;\n        uint256 var_e = 0x40 + var_e;\n        var_c = 0x1a;\n        var_i = 0x536166654d6174683a206469766973696f6e206279207a65726f000000000000;\n        require(0x0de0b6b3a7640000 > 0, \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        var_j = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_g = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        uint256 var_h = var_e.length;\n        uint256 var_k = 0;\n        var_l = var_m;\n        var_k = 0;\n        if (0x0de0b6b3a7640000) {\n            var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n            var_n = 0x12;\n            if (!store_i < (store_i / 0x0de0b6b3a7640000)) {\n            }\n        }\n    }",
    "llm_output": "function manualSwap() public view {\n    // Original logic: caller must match two stored addresses\n    require(msg.sender == _authorizedAddress1);\n    require(msg.sender == _authorizedAddress2);\n\n    // Local placeholders retained from decompiled artefacts\n    address currentContract = address(this);\n    uint8   _unusedFlag     = 0x02;\n\n    // Reflection amount check\n    require(!(_reflections[currentContract] > _totalReflections), \"Amount must be less than total reflections\");\n\n    // The two blocks below reproduce unused memory operations present in the\n    // decompiled byte-code. They do not affect state or control flow.\n    bytes memory _unusedErr  = abi.encodeWithSignature(\"SafeMath: division by zero\");\n    require(1 ether > 0, \"\");\n\n    bytes memory _unusedPanic = abi.encodeWithSignature(\"Panic(uint256)\", 0x12);\n\n    // Final condition tree exactly mirrors the original\n    if (1 ether != 0) {\n        if (!(_totalReflections < (_totalReflections / 1 ether))) {\n            // no-op (intentionally left blank)\n        }\n    }\n}",
    "ground_truth": "function manualswap() external {\r\n        require(_msgSender() == _developmentAddress || _msgSender() == _marketingAddress);\r\n        uint256 contractBalance = balanceOf(address(this));\r\n        swapTokensForEth(contractBalance);\r\n    }"
}