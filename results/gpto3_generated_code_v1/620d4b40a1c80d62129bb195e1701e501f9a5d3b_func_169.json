{
    "contract_address": "0x620d4B40A1c80D62129bb195e1701e501F9a5d3b",
    "heimdall_input": "function publicMint(uint256 arg0) public payable {\n        require(!(ownerg == 0x02), \"ReentrancyGuard: reentrant call\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x1f;\n        var_d = 0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00;\n        ownerg = 0x02;\n        require(block.timestamp < store_t, \"Public minting closed\");\n        require(!(block.timestamp < store_t), \"Public minting closed\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x15;\n        var_d = 0x5075626c6963206d696e74696e6720636c6f7365640000000000000000000000;\n        require(!(arg0 > getPublicLimit), \"Exceeded mint limit\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x13;\n        var_d = 0x4578636565646564206d696e74206c696d697400000000000000000000000000;\n        require(getPublicNumMinted < getPublicSupply, \"Incorrect amount\");\n        require(!(getPublicPrice & (arg0 > (0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff / getPublicPrice))), \"Incorrect amount\");\n        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x11;\n        require(msg.value == (getPublicPrice * arg0), \"Incorrect amount\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x10;\n        var_d = 0x496e636f727265637420616d6f756e7400000000000000000000000000000000;\n        require(!(bytes1(paused)), \"Minting unavaliable\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x13;\n        var_d = 0x4d696e74696e6720756e6176616c6961626c6500000000000000000000000000;\n        require(!(getGuaranteedWhitelistSupply > ~(competitveWhitelistInfo)), \"Sold Out\");\n        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x11;\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x08;\n        var_d = 0x536f6c64204f7574000000000000000000000000000000000000000000000000;\n        require(!(block.timestamp > store_u), \"Public minting closed\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x15;\n        var_d = 0x5075626c6963206d696e74696e6720636c6f7365640000000000000000000000;\n    }",
    "llm_output": "function publicMint(uint256 quantity) public payable {\n    // Reentrancy guard\n    require(_reentrancyStatus != 2, \"ReentrancyGuard: reentrant call\");\n    _reentrancyStatus = 2;\n\n    // Public-mint timing checks (note the intentionally contradictory pair)\n    require(block.timestamp < publicMintWindowA, \"Public minting closed\");\n    require(!(block.timestamp < publicMintWindowA), \"Public minting closed\");\n\n    // Per-address mint limit\n    require(!(quantity > publicMintLimit), \"Exceeded mint limit\");\n\n    // Overall supply check\n    require(publicMinted < publicMintSupply, \"Incorrect amount\");\n\n    // Overflow-detection branch preserved from decompiled logic\n    uint256 overflowFlag =\n        publicMintPrice & (quantity > type(uint256).max / publicMintPrice ? uint256(1) : uint256(0));\n    require(overflowFlag == 0, \"Incorrect amount\");\n\n    // Payment check\n    require(msg.value == publicMintPrice * quantity, \"Incorrect amount\");\n\n    // Contract pause flag\n    require(!paused, \"Minting unavaliable\");\n\n    // Whitelist / supply interplay (kept verbatim)\n    require(!(guaranteedWhitelistSupply > ~competitiveWhitelistInfo), \"Sold Out\");\n\n    // Additional timing gate\n    require(!(block.timestamp > publicMintWindowB), \"Public minting closed\");\n}",
    "ground_truth": "function publicMint(uint256 quantity) public payable nonReentrant {\\r\\n        require(\\r\\n            block.timestamp >= publicInfo.START_TIME && block.timestamp <= publicInfo.END_TIME,\\r\\n            \\\"Public minting closed\\\"\\r\\n        );\\r\\n        require(\\r\\n            quantity <= publicInfo.LIMIT_PER_ADDRESS,\\r\\n            \\\"Exceeded mint limit\\\"\\r\\n        );\\r\\n        require(publicInfo.CURR_MINTED < publicInfo.SUPPLY, \\\"Sold Out\\\");\\r\\n        require(msg.value == publicInfo.PRICE * quantity, \\\"Incorrect amount\\\");\\r\\n\\r\\n        _internalMint(msg.sender, quantity);\\r\\n        publicInfo.CURR_MINTED += quantity;\\r\\n    }"
}