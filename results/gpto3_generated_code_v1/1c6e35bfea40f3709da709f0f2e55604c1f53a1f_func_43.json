{
    "contract_address": "0x1c6e35bFEA40f3709DA709f0f2e55604C1F53a1f",
    "heimdall_input": "function getBR(address arg0) public payable returns (uint112) {\n        var_a = 0x0902f1ac00000000000000000000000000000000000000000000000000000000;\n        require(address(store_b / 0x01).code.length);\n        (bool success, bytes memory ret0) = address(store_b / 0x01).getReserves(var_b); // staticcall\n        require(!ret0.length < 0x60);\n        var_a = 0x0dfe168100000000000000000000000000000000000000000000000000000000;\n        require(address(store_b).code.length);\n        (bool success, bytes memory ret0) = address(store_b).token0(var_b); // staticcall\n        require(!ret0.length < 0x20);\n        require(address(var_c.length) == (address(arg0)));\n        uint112 var_a = uint112(var_d);\n        return uint112(var_d);\n        var_a = uint112(var_c.length);\n        return uint112(var_c.length);\n    }",
    "llm_output": "function getToken0Reserve(address expectedToken0) public view returns (uint112) {\n    address pair = pairAddress;                     // pairAddress is stored elsewhere in the contract\n    require(pair.code.length > 0);                  // ensure the pair contract exists\n\n    // Call getReserves() -> (uint112 reserve0, uint112 reserve1, uint32 blockTimestampLast)\n    (bool okReserves, bytes memory reservesData) =\n        pair.staticcall(abi.encodeWithSelector(0x0902f1ac));\n    require(okReserves && reservesData.length >= 96);\n\n    // Call token0() -> address\n    (bool okToken0, bytes memory token0Data) =\n        pair.staticcall(abi.encodeWithSelector(0x0dfe1681));\n    require(okToken0 && token0Data.length >= 32);\n\n    address token0 = abi.decode(token0Data, (address));\n    require(token0 == expectedToken0);              // must match the provided token\n\n    (uint112 reserve0,,) = abi.decode(reservesData, (uint112, uint112, uint32));\n    return reserve0;\n}",
    "ground_truth": "function getBR(address t) public view returns (uint256) {\r\n        (uint112 r0, uint112 r1, ) = _pair.getReserves();\r\n        return (_pair.token0() == t) ? uint256(r0) : uint256(r1);\r\n    }"
}