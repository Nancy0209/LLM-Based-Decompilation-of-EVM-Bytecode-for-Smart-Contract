{
    "contract_address": "0x20ad88B64104B4E9B3915aAB9c3bfb4E4121622f",
    "heimdall_input": "function updateSellFees(uint256 arg0, uint256 arg1, uint256 arg2) public {\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        sellMarketingFee = arg0;\n        sellLiquidityFee = arg1;\n        sellDevFee = arg2;\n        require(!arg0 > (arg1 + arg0));\n        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x11;\n    }",
    "llm_output": "function updateSellFees(\n    uint256 newSellMarketingFee,\n    uint256 newSellLiquidityFee,\n    uint256 newSellDevFee\n) public {\n    // Access control (owner check)\n    require(msg.sender == owner, \"Ownable: caller is not the owner\");\n\n    // Update state variables\n    sellMarketingFee = newSellMarketingFee;\n    sellLiquidityFee = newSellLiquidityFee;\n    sellDevFee = newSellDevFee;\n\n    // Preserved logical check from decompiled code\n    require(!(newSellMarketingFee > (newSellLiquidityFee + newSellMarketingFee)));\n}",
    "ground_truth": "function updateSellFees(uint256 _marketingFee, uint256 _liquidityFee, uint256 _devFee) external onlyOwner {\r\n        sellMarketingFee = _marketingFee;\r\n        sellLiquidityFee = _liquidityFee;\r\n        sellDevFee = _devFee;\r\n        sellTotalFees = sellMarketingFee + sellLiquidityFee + sellDevFee;\r\n        require(sellTotalFees <= 50, \"Must keep fees at 25% or less\");\r\n    }"
}