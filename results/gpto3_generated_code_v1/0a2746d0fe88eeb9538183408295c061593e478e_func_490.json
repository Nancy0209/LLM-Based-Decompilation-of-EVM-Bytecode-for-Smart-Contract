{
    "contract_address": "0x0a2746D0FE88EeB9538183408295c061593E478e",
    "heimdall_input": "function symbol() public view returns (string memory) {\n        if (store_f) {\n            if (store_f - ((store_f / 0x02) < 0x20)) {\n                var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                var_b = 0x22;\n                uint256 var_c = var_c + (0x20 + (((0x1f + (store_f / 0x02)) / 0x20) * 0x20));\n                uint256 var_d = store_f / 0x02;\n                if (store_f) {\n                    if (store_f - ((store_f / 0x02) < 0x20)) {\n                        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                        var_b = 0x22;\n                        if (!store_f / 0x02) {\n                            if (0x1f < (store_f / 0x02)) {\n                                var_a = 0x05;\n                                var_e = storage_map_b[var_a];\n                                if ((0x20 + var_c) + (store_f / 0x02) > (0x20 + (0x20 + var_c))) {\n                                    uint256 var_e = (var_c + 0x20) - var_c;\n                                    uint256 var_f = var_c.length;\n                                    uint256 var_g = 0;\n                                    return abi.encodePacked((var_c + 0x20) - var_c, var_c.length);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }",
    "llm_output": "function symbol() public view returns (string memory) {\n    uint256 raw = store_f; // storage slot that holds the raw symbol data\n\n    // Empty slot \u2192 empty string\n    if (raw == 0) {\n        return \"\";\n    }\n\n    // Short-string optimisation:\n    // LSB == 1  \u2192 the string (\u226431 bytes) is stored directly in the slot\n    if (raw & 1 == 1) {\n        uint256 length = raw >> 1;          // actual string length\n        bytes memory buffer = new bytes(length);\n\n        // Drop the lower byte (length * 2 + 1) so that only string data remains.\n        uint256 data = raw >> 8;\n\n        assembly {\n            mstore(add(buffer, 0x20), data)\n        }\n\n        return string(buffer);\n    }\n\n    // Long string (\u226532 bytes): the slot stores a reference to another storage location.\n    // According to the original layout this location is obtained from `storage_map_b[0x05]`.\n    bytes storage longString = storage_map_b[0x05];\n    return string(longString);\n}",
    "ground_truth": "function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }"
}