{
    "contract_address": "0xa5f88146Cff0673fCea44A32ddB845302c835619",
    "heimdall_input": "function updateMaxWalletAmount(uint256 arg0) public view {\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        require((totalSupply == ((totalSupply * 0x05) / 0x05)) | !0x05);\n        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x11;\n        require(0x03e8);\n        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x12;\n    }",
    "llm_output": "function updateMaxWalletAmount(uint256 /* newMaxWalletAmount */) public view {\n    // Ownership check\n    require(msg.sender == owner, \"Ownable: caller is not the owner\");\n\n    // Decompiler artefacts (kept for logical fidelity)\n    bytes32 _errorSelector      = 0x08c379a0000000000000000000000000000000000000000000000000000000;\n    uint256 _errorDataOffset    = 0x20;\n    uint256 _errorStringLength  = 0x20;\n    bytes32 _errorString        = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n\n    // Arithmetic consistency check (retained exactly as in byte-code)\n    require(totalSupply == (totalSupply * 5) / 5);\n\n    // Additional decompiler artefacts\n    bytes32 _panicSelector = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n    uint256 _panicCode1    = 0x11;\n\n    // Constant-true require kept for fidelity\n    require(0x03e8 != 0);\n\n    // Further artefacts\n    _panicSelector = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n    uint256 _panicCode2 = 0x12;\n}",
    "ground_truth": "function updateMaxWalletAmount(uint256 newNum) external onlyOwner {\r\n        require(newNum >= (totalSupply() * 5 / 1000)/1e18, \"Cannot set maxWallet lower than 0.5%\");\r\n        maxWallet = newNum * (10**18);\r\n    }"
}