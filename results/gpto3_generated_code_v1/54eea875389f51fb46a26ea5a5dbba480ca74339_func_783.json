{
    "contract_address": "0x54eEA875389f51FB46A26Ea5a5DbBa480ca74339",
    "heimdall_input": "function updateBuyFees(uint256 arg0, uint256 arg1, uint256 arg2) public {\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        store_o = arg0;\n        store_p = arg1;\n        store_q = arg2;\n        require(!arg0 > (arg1 + arg0));\n        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x11;\n    }",
    "llm_output": "function updateBuyFees(\n    uint256 _liquidityFee,\n    uint256 _marketingFee,\n    uint256 _developmentFee\n) public {\n    require(msg.sender == owner(), \"Ownable: caller is not the owner\");\n\n    buyLiquidityFee   = _liquidityFee;\n    buyMarketingFee   = _marketingFee;\n    buyDevelopmentFee = _developmentFee;\n\n    // Maintains original logical check: !(arg0 > (arg1 + arg0))\n    require(!(_liquidityFee > (_marketingFee + _liquidityFee)));\n}",
    "ground_truth": "function updateBuyFees(\r\n        uint256 _marketingFee,\r\n        uint256 _developmentFee,\r\n        uint256 _liquidityFee\r\n    ) external onlyOwner {\r\n        buyMarketingFee = _marketingFee;\r\n        buyDevelopmentFee = _developmentFee;\r\n        buyLiquidityFee = _liquidityFee;\r\n        buyTotalFees = buyMarketingFee + buyDevelopmentFee + buyLiquidityFee;\r\n        require(buyTotalFees <= 10, \"ERC20: Must keep fees at 10% or less\");\r\n    }"
}