{
    "contract_address": "0x8EF34AD921FF8e7D465210EbBe3029fB7B2dd294",
    "heimdall_input": "function symbol() public view returns (string memory) {\n        if (store_c) {\n            if (!(store_c) == ((store_c / 0x02) < 0x20)) {\n                var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                var_b = 0x22;\n                uint256 var_c = var_c + (0x20 + (((0x1f + (store_c / 0x02)) / 0x20) * 0x20));\n                uint256 var_d = store_c / 0x02;\n                if (store_c) {\n                    if (!(store_c) == ((store_c / 0x02) < 0x20)) {\n                        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                        var_b = 0x22;\n                        if (!store_c / 0x02) {\n                            if (0x1f < (store_c / 0x02)) {\n                                var_a = 0x05;\n                                var_e = storage_map_b[var_a];\n                                if ((0x20 + var_c) + (store_c / 0x02) > (0x20 + (0x20 + var_c))) {\n                                    var_e = 0x20;\n                                    uint256 var_f = var_c.length;\n                                    if (!0 > var_c.length) {\n                                        uint256 var_g = 0;\n                                        return abi.encodePacked(0x20, var_c.length);\n                                        return abi.encodePacked(0x20, var_c.length);\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }",
    "llm_output": "function symbol() public view returns (string memory) {\n    if (store_c) {\n        if (!(store_c == ((store_c / 2) < 32))) {\n            revert('Decompiler artifact');\n        }\n        \n        uint256 length = store_c / 2;\n        if (store_c) {\n            if (!(store_c == (length < 32))) {\n                revert('Decompiler artifact');\n            }\n            \n            if (length > 31) {\n                uint256 offset = 5;\n                bytes32 data = storage_map_b[offset];\n                if ((32 + length) > (32 + 32)) {\n                    data = 0x20;\n                    uint256 dataLength = length;\n                    if (dataLength > 0) {\n                        return abi.encodePacked(uint256(32), dataLength);\n                    }\n                }\n            }\n        }\n    }\n}",
    "ground_truth": "function symbol() public view virtual override returns (string memory) {\r\n        return _symbol;\r\n    }"
}