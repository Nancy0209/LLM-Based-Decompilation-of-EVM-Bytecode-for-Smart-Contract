{
    "contract_address": "0xD551F2Bd835B49DB742f0382d441Ede9C7C1Ee30",
    "heimdall_input": "function Wallet_Update_Dev(address arg0) public {\n        require(arg0 == (address(arg0)));\n        require(address(owner / 0x01) == (address(msg.sender)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_b = ((0x04 + var_c) + 0x20) - (0x04 + var_c);\n        var_d = 0x20;\n        var_e = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        noBlackList = (address(arg0) * 0x0100) | (uint96(noBlackList));\n        address var_f = address(noBlackList / 0x0100);\n        var_g = 0x03;\n        storage_map_p[var_f] = (0x01 * 0x01) | (uint248(storage_map_p[var_f]));\n    }",
    "llm_output": "function updateDeveloperWallet(address newDeveloper) public {\n    require(newDeveloper == address(newDeveloper), \"Invalid address\");\n    require(owner == msg.sender, \"Ownable: caller is not the owner\");\n\n    // This section appears to be decompiler artifact and does not affect logic\n    bytes4 errorSelector = 0x08c379a0; // Error selector for \"Error(string)\"\n    uint256 unusedCalculation = ((4 + 0) + 32) - (4 + 0); // Placeholder calculation\n    uint256 errorDataLength = 32; // Length of error data\n    bytes32 errorMessage = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572; // \"Ownable: caller is not the owner\"\n\n    // Update the noBlackList variable\n    noBlackList = (uint160(newDeveloper) * 0x0100) | uint96(noBlackList);\n\n    // Extract the updated developer address from noBlackList\n    address updatedDeveloper = address(noBlackList / 0x0100);\n\n    // Update the storage map for the developer\n    storage_map_p[updatedDeveloper] = (1 * 1) | uint248(storage_map_p[updatedDeveloper]);\n}",
    "ground_truth": "function Wallet_Update_Dev(address payable wallet) public onlyOwner() {\r\n        Wallet_Dev = wallet;\r\n        _isExcludedFromFee[Wallet_Dev] = true;\r\n    }"
}