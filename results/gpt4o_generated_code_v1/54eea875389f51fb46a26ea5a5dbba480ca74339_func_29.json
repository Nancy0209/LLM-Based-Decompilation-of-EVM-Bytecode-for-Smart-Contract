{
    "contract_address": "0x54eEA875389f51FB46A26Ea5a5DbBa480ca74339",
    "heimdall_input": "function updateSellFees(uint256 arg0, uint256 arg1, uint256 arg2) public {\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        store_k = arg0;\n        store_l = arg1;\n        store_m = arg2;\n        require(!arg0 > (arg1 + arg0));\n        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x11;\n    }",
    "llm_output": "function updateSellFees(uint256 newFee1, uint256 newFee2, uint256 newFee3) public {\n    require(msg.sender == owner, \"Ownable: caller is not the owner\");\n    \n    // Update fee storage variables\n    fee1 = newFee1;\n    fee2 = newFee2;\n    fee3 = newFee3;\n\n    // Ensure the first fee does not exceed the sum of the first and second fees\n    require(newFee1 <= (newFee1 + newFee2), \"Invalid fee configuration\");\n}",
    "ground_truth": "function updateSellFees(\r\n        uint256 _marketingFee,\r\n        uint256 _developmentFee,\r\n        uint256 _liquidityFee\r\n    ) external onlyOwner {\r\n        sellMarketingFee = _marketingFee;\r\n        sellDevelopmentFee = _developmentFee;\r\n        sellLiquidityFee = _liquidityFee;\r\n        sellTotalFees =\r\n            sellMarketingFee +\r\n            sellDevelopmentFee +\r\n            sellLiquidityFee;\r\n        previousFee = sellTotalFees;\r\n        require(sellTotalFees <= 10, \"ERC20: Must keep fees at 10% or less\");\r\n    }"
}