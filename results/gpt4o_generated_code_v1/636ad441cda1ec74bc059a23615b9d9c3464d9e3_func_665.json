{
    "contract_address": "0x636aD441CdA1EC74BC059A23615b9D9c3464d9e3",
    "heimdall_input": "function name() public view returns (string memory) {\n        if (killd) {\n            if (!(killd) == ((killd >> 0x01) < 0x20)) {\n                var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                var_b = 0x22;\n                uint256 var_c = var_c + (0x20 + (((0x1f + (killd >> 0x01)) / 0x20) * 0x20));\n                bytes32 var_d = killd >> 0x01;\n                if (killd) {\n                    if (!(killd) == ((killd >> 0x01) < 0x20)) {\n                        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                        var_b = 0x22;\n                        if (!killd >> 0x01) {\n                            if (0x1f < (killd >> 0x01)) {\n                                var_a = 0x01;\n                                var_e = storage_map_t[var_a];\n                                if ((0x20 + var_c) + (killd >> 0x01) > (0x20 + (0x20 + var_c))) {\n                                    var_e = 0x20;\n                                    uint256 var_f = var_c.length;\n                                    if (!0 > var_c.length) {\n                                        uint256 var_g = 0;\n                                        return abi.encodePacked(0x20, var_c.length);\n                                        return abi.encodePacked(0x20, var_c.length);\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }",
    "llm_output": "function getName() public view returns (string memory) {\n    if (isKilled) {\n        if (!(isKilled) == ((isKilled >> 1) < 32)) {\n            bytes32 errorCode = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n            uint256 errorData = 34;\n            uint256 offset = offset + (32 + (((31 + (isKilled >> 1)) / 32) * 32));\n            bytes32 shiftedValue = isKilled >> 1;\n\n            if (isKilled) {\n                if (!(isKilled) == ((isKilled >> 1) < 32)) {\n                    errorCode = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                    errorData = 34;\n\n                    if (!(isKilled >> 1)) {\n                        if (31 < (isKilled >> 1)) {\n                            uint256 index = 1;\n                            bytes32 storageValue = storageMap[index];\n\n                            if ((32 + offset) + (isKilled >> 1) > (32 + (32 + offset))) {\n                                storageValue = 32;\n                                uint256 length = offset.length;\n\n                                if (!(0 > length)) {\n                                    uint256 temp = 0;\n                                    return abi.encodePacked(32, length);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n}",
    "ground_truth": "function name() public view returns (string memory) {\r\n        return _name;\r\n    }"
}