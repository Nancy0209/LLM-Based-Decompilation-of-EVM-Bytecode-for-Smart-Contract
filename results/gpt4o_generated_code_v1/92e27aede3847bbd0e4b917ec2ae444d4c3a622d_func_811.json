{
    "contract_address": "0x92E27aedE3847Bbd0E4b917Ec2Ae444d4C3A622D",
    "heimdall_input": "function manualswap() public view {\n        require(address(msg.sender) == (address(store_p)));\n        require(address(msg.sender) == (address(store_q)));\n        address var_a = address(this);\n        var_b = 0x02;\n        require(!(storage_map_l[var_a] > store_m), \"Amount must be less than total reflections\");\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x2a;\n        var_f = 0x416d6f756e74206d757374206265206c657373207468616e20746f74616c2072;\n        var_g = 0x65666c656374696f6e7300000000000000000000000000000000000000000000;\n        uint256 var_h = 0x40 + var_h;\n        var_c = 0x1a;\n        var_i = 0x536166654d6174683a206469766973696f6e206279207a65726f000000000000;\n        require(0x056bc75e2d63100000, \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        var_j = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_f = 0x20;\n        uint256 var_g = var_h.length;\n        require(!(0 > var_h.length), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        uint256 var_k = 0;\n        var_l = var_m;\n        require(!(0x20 > var_h.length), \"SafeMath: division by zero\");\n        var_k = 0;\n        if (0x056bc75e2d63100000) {\n            var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n            var_n = 0x12;\n            if (!store_m < (store_m / 0x056bc75e2d63100000)) {\n            }\n        }\n    }",
    "llm_output": "function manualSwap() public view {\n    require(msg.sender == storeP, \"Unauthorized: Not storeP\");\n    require(msg.sender == storeQ, \"Unauthorized: Not storeQ\");\n    \n    address contractAddress = address(this);\n    uint8 constantValue = 0x02;\n    \n    require(storageMapL[contractAddress] <= storeM, \"Amount must be less than total reflections\");\n    \n    bytes32 errorSignature = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n    uint256 offset = 0x20;\n    uint256 length = 0x2a;\n    bytes32 errorMessagePart1 = 0x416d6f756e74206d757374206265206c657373207468616e20746f74616c2072;\n    bytes32 errorMessagePart2 = 0x65666c656374696f6e7300000000000000000000000000000000000000000000;\n    \n    uint256 memoryOffset = 0x40 + offset;\n    errorSignature = 0x1a;\n    bytes32 safeMathError = 0x536166654d6174683a206469766973696f6e206279207a65726f000000000000;\n    \n    require(0x056bc75e2d63100000 != 0, \"Invalid constant value\");\n    \n    errorSignature = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n    offset = 0x20;\n    uint256 lengthCheck = memoryOffset;\n    \n    require(0 <= lengthCheck, \"Invalid length check\");\n    \n    uint256 index = 0;\n    uint256 divisor = storeM;\n    \n    require(0x20 <= lengthCheck, \"SafeMath: division by zero\");\n    \n    index = 0;\n    \n    if (0x056bc75e2d63100000 != 0) {\n        errorSignature = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        uint8 errorCode = 0x12;\n        \n        if (!(storeM < (storeM / 0x056bc75e2d63100000))) {\n            // Logic here is intentionally left empty as per the decompiled code\n        }\n    }\n}",
    "ground_truth": "function manualswap() external {\r\n        require(_msgSender() == _developmentAddress || _msgSender() == _marketingAddress);\r\n        uint256 contractBalance = balanceOf(address(this));\r\n        swapTokensForEth(contractBalance);\r\n    }"
}