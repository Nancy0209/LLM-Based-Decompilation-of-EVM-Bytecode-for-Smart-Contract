{
    "contract_address": "0x90bd0470eeFf15E5A6AC0D7221A4FFB0Eb6C690A",
    "heimdall_input": "function symbol() public view returns (string memory) {\n        if (store_c) {\n            if (store_c - ((store_c >> 0x01) < 0x20)) {\n                var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                var_b = 0x22;\n                uint256 var_c = var_c + (0x20 + (((0x1f + (store_c >> 0x01)) / 0x20) * 0x20));\n                bytes32 var_d = store_c >> 0x01;\n                if (store_c) {\n                    if (store_c - ((store_c >> 0x01) < 0x20)) {\n                        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                        var_b = 0x22;\n                        if (!store_c >> 0x01) {\n                            if (0x1f < (store_c >> 0x01)) {\n                                var_a = 0x04;\n                                var_e = storage_map_b[var_a];\n                                if ((0x20 + var_c) + (store_c >> 0x01) > (0x20 + (0x20 + var_c))) {\n                                    var_e = 0x20;\n                                    uint256 var_f = var_c.length;\n                                    uint256 var_g = 0;\n                                    return abi.encodePacked(0x20, var_c.length);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }",
    "llm_output": "function symbol() public view returns (string memory) {\n    if (symbolStorage != 0) {\n        uint256 shiftedValue = symbolStorage >> 1;\n        if (symbolStorage - shiftedValue < 0x20) {\n            revert(\"Decompiler artifact\");\n        }\n\n        uint256 offset = 0x20 + (((0x1f + shiftedValue) / 0x20) * 0x20);\n        bytes32 partialValue = bytes32(shiftedValue);\n\n        if (symbolStorage != 0) {\n            if (symbolStorage - shiftedValue < 0x20) {\n                revert(\"Decompiler artifact\");\n            }\n\n            if (shiftedValue == 0) {\n                if (0x1f < shiftedValue) {\n                    uint256 storageKey = 0x04;\n                    bytes32 storedValue = storageMap[storageKey];\n\n                    if ((0x20 + offset) + shiftedValue > (0x20 + (0x20 + offset))) {\n                        uint256 length = offset;\n                        return abi.encodePacked(uint256(0x20), length);\n                    }\n                }\n            }\n        }\n    }\n    revert(\"Decompiler artifact\");\n}",
    "ground_truth": "function symbol() public view returns (string memory) {\r\n        return _symbol;\r\n    }"
}