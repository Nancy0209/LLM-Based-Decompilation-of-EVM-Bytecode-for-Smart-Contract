{
    "contract_address": "0x2196c73Bee850827528bf2e164c33441834dFe03",
    "heimdall_input": "function symbol() public view returns (string memory) {\n        if (store_j) {\n            if (!(store_j) == ((store_j >> 0x01) < 0x20)) {\n                var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                var_b = 0x22;\n                uint256 var_c = var_c + (0x20 + (((0x1f + (store_j >> 0x01)) / 0x20) * 0x20));\n                bytes32 var_d = store_j >> 0x01;\n                if (store_j) {\n                    if (!(store_j) == ((store_j >> 0x01) < 0x20)) {\n                        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                        var_b = 0x22;\n                        if (!store_j >> 0x01) {\n                            if (0x1f < (store_j >> 0x01)) {\n                                var_a = 0x03;\n                                var_e = storage_map_b[var_a];\n                                if ((0x20 + var_c) + (store_j >> 0x01) > (0x20 + (0x20 + var_c))) {\n                                    var_e = 0x20;\n                                    uint256 var_f = var_c.length;\n                                    if (!0 > var_c.length) {\n                                        uint256 var_g = 0;\n                                        return abi.encodePacked(0x20, var_c.length);\n                                        return abi.encodePacked(0x20, var_c.length);\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }",
    "llm_output": "function symbol() public view returns (string memory) {\n    if (symbolStorageFlag) {\n        if (!(symbolStorageFlag) == ((symbolStorageFlag >> 1) < 32)) {\n            bytes32 errorSelector = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n            uint256 errorCode = 34;\n            uint256 offset = offset + (32 + (((31 + (symbolStorageFlag >> 1)) / 32) * 32));\n            bytes32 shiftedValue = symbolStorageFlag >> 1;\n            if (symbolStorageFlag) {\n                if (!(symbolStorageFlag) == ((symbolStorageFlag >> 1) < 32)) {\n                    errorSelector = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                    errorCode = 34;\n                    if (!(symbolStorageFlag >> 1)) {\n                        if (31 < (symbolStorageFlag >> 1)) {\n                            errorSelector = 3;\n                            bytes32 storageValue = storageMap[errorSelector];\n                            if ((32 + offset) + (symbolStorageFlag >> 1) > (32 + (32 + offset))) {\n                                storageValue = 32;\n                                uint256 length = offset.length;\n                                if (!(0 > offset.length)) {\n                                    uint256 temp = 0;\n                                    return abi.encodePacked(32, offset.length);\n                                    return abi.encodePacked(32, offset.length);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n}",
    "ground_truth": "function symbol() public view virtual override returns (string memory) {\r\n        return _symbol;\r\n    }"
}