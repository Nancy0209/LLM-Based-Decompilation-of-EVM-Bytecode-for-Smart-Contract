{
    "contract_address": "0xfc606C8F7141110c3f295a22004D274680A9A029",
    "heimdall_input": "function getTokenOut(uint256 arg0) public view returns (uint256) {\n        require(0 - arg0);\n        require((TOKENS_PER_ETH == ((TOKENS_PER_ETH * arg0) / arg0)) | !arg0);\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_b = 0x11;\n        uint256 var_c = TOKENS_PER_ETH * arg0;\n        return TOKENS_PER_ETH * arg0;\n        var_c = 0;\n        return 0;\n    }",
    "llm_output": "function getTokenOut(uint256 _ethAmount) public view returns (uint256) {\n    // Match decompiled first require: ensures the input amount is non-zero\n    require(_ethAmount != 0);\n\n    uint256 tokensOut = TOKENS_PER_ETH * _ethAmount;\n\n    // Match decompiled overflow check:\n    require(tokensOut / _ethAmount == TOKENS_PER_ETH);\n\n    return tokensOut;\n}",
    "ground_truth": "function getTokenOut(uint256 _amount) public view returns(uint256) {\r\n        if(_amount == 0) {\r\n            return 0;\r\n        }\r\n        return (_amount * TOKENS_PER_ETH);\r\n    }"
}