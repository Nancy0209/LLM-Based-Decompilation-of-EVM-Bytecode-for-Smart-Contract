{
    "contract_address": "0xaEAD18A6f788fb7460aDA9fDFf4C4Cd6Ba72dDBE",
    "heimdall_input": "function approve(address arg0, uint256 arg1) public payable {\n        require(arg0 == (address(arg0)));\n        require(!address(0xaaeb6d7670e522a718067333cd4e).code.length, CustomError_df2d9b42());\n        require(0x01 > arg1, CustomError_df2d9b42());\n        uint256 var_a = arg1;\n        var_b = 0x2569078dfb4b0305704d3008e7403993ae9601b85f7ae5e742de3de8f8011c44;\n        require(0 - storage_map_b[var_a], CustomError_df2d9b42());\n        require(0 - (bytes1(storage_map_b[var_a])), CustomError_df2d9b42());\n        var_a = 0xdf2d9b4200000000000000000000000000000000000000000000000000000000;\n        require(!0x01, CustomError_cfb3b942());\n        require(!0x01, CustomError_cfb3b942());\n        var_a = arg1;\n        var_b = 0x2569078dfb4b0305704d3008e7403993ae9601b85f7ae5e742de3de8f8011c46;\n        storage_map_b[var_a] = (address(arg0)) | (uint96(storage_map_b[var_a]));\n        emit Approval(address(storage_map_b[var_a]), address(arg0), arg1);\n        var_a = address(storage_map_b[var_a]);\n        var_b = 0x2569078dfb4b0305704d3008e7403993ae9601b85f7ae5e742de3de8f8011c47;\n        var_a = address(msg.sender);\n        uint256 var_b = keccak256(var_a);\n        require(bytes1(storage_map_b[var_a]), CustomError_cfb3b942());\n        var_a = arg1;\n        var_b = 0x2569078dfb4b0305704d3008e7403993ae9601b85f7ae5e742de3de8f8011c46;\n        storage_map_b[var_a] = (address(arg0)) | (uint96(storage_map_b[var_a]));\n        emit Approval(address(storage_map_b[var_a]), address(arg0), arg1);\n        var_a = 0xcfb3b94200000000000000000000000000000000000000000000000000000000;\n        require(!(!(address(storage_map_b[var_a])) == msg.sender), CustomError_df2d9b42());\n        var_a = arg1;\n        var_b = 0x2569078dfb4b0305704d3008e7403993ae9601b85f7ae5e742de3de8f8011c46;\n        storage_map_b[var_a] = (address(arg0)) | (uint96(storage_map_b[var_a]));\n        emit Approval(address(storage_map_b[var_a]), address(arg0), arg1);\n        require(arg1 < totalSupply, CustomError_df2d9b42());\n        var_a = arg1 + 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff;\n        var_b = 0x2569078dfb4b0305704d3008e7403993ae9601b85f7ae5e742de3de8f8011c44;\n        require(!storage_map_b[var_a], CustomError_df2d9b42());\n        require(0 - (bytes1(storage_map_b[var_a])), CustomError_df2d9b42());\n        var_a = 0xdf2d9b4200000000000000000000000000000000000000000000000000000000;\n        var_a = (arg1 + 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) + 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff;\n        var_b = 0x2569078dfb4b0305704d3008e7403993ae9601b85f7ae5e742de3de8f8011c44;\n        require(!storage_map_b[var_a], CustomError_df2d9b42());\n        require(0 - (bytes1(storage_map_b[var_a])), CustomError_df2d9b42());\n        var_a = 0xdf2d9b4200000000000000000000000000000000000000000000000000000000;\n        var_a = ((arg1 + 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) + 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) + 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff;\n        var_b = 0x2569078dfb4b0305704d3008e7403993ae9601b85f7ae5e742de3de8f8011c44;\n        require(!storage_map_b[var_a], CustomError_df2d9b42());\n        require(0 - (bytes1(storage_map_b[var_a])), CustomError_df2d9b42());\n        var_a = 0xdf2d9b4200000000000000000000000000000000000000000000000000000000;\n        var_a = (((arg1 + 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) + 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) + 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) + 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff;\n        var_b = 0x2569078dfb4b0305704d3008e7403993ae9601b85f7ae5e742de3de8f8011c44;\n        require(!storage_map_b[var_a], CustomError_df2d9b42());\n        require(0 - (bytes1(storage_map_b[var_a])), CustomError_df2d9b42());\n        var_a = 0xdf2d9b4200000000000000000000000000000000000000000000000000000000;\n        var_a = 0xdf2d9b4200000000000000000000000000000000000000000000000000000000;\n        var_a = 0xdf2d9b4200000000000000000000000000000000000000000000000000000000;\n        var_c = 0xc617113400000000000000000000000000000000000000000000000000000000;\n        address var_d = address(this);\n        address var_e = address(arg0);\n        (bool success, bytes memory ret0) = address(0xaaeb6d7670e522a718067333cd4e).Unresolved_c6171134(var_d); // staticcall\n        uint256 var_f = var_f + (uint248(ret0.length + 0x1f));\n        require(!(((var_f + ret0.length) - var_f) < 0x20), CustomError_ede71dcc());\n        require(var_f.length == var_f.length, CustomError_ede71dcc());\n        require(var_f.length, CustomError_ede71dcc());\n        var_g = 0xede71dcc00000000000000000000000000000000000000000000000000000000;\n        var_e = address(arg0);\n    }",
    "llm_output": "function approve(address operator, uint256 tokenId) public payable {\n    // Revert if the caller is neither the token owner nor an approved operator.\n    address tokenOwner = ownerOf(tokenId);\n    if (msg.sender != tokenOwner && !isApprovedForAll(tokenOwner, msg.sender)) {\n        revert ApprovalCallerNotOwnerNorApproved();\n    }\n\n    // Update approval mapping and emit the standard Approval event.\n    _tokenApprovals[tokenId].value = operator;\n    emit Approval(tokenOwner, operator, tokenId);\n}",
    "ground_truth": "function approve(address to, uint256 tokenId) external payable;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom}"
}