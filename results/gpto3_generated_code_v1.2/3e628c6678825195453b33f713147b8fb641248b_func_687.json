{
    "contract_address": "0x3e628c6678825195453B33f713147B8fb641248b",
    "heimdall_input": "function airdropToWallets(address[] arg0, uint256[] arg1) public {\n        require(!arg0 > 0xffffffffffffffff);\n        require(!(arg0) > 0xffffffffffffffff);\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_b = 0x41;\n        require(!((var_c + (uint248((0x20 + (arg0 << 0x05)) + 0x1f))) < var_c) | ((var_c + (uint248((0x20 + (arg0 << 0x05)) + 0x1f))) > 0xffffffffffffffff));\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_b = 0x41;\n        uint256 var_c = var_c + (uint248((0x20 + (arg0 << 0x05)) + 0x1f));\n        uint256 var_d = (arg0);\n        require(!(0x20 + (0x04 + arg0)) < (0x20 + ((0x04 + arg0) + (arg0 << 0x05))));\n        require((0x20 + (arg0)) == (address(0x20 + (arg0))));\n        require(!arg1 > 0xffffffffffffffff);\n        require(!(arg1 > 0xffffffffffffffff), \"Ownable: caller is not the owner\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_b = 0x41;\n        require(!(((var_c + (uint248((0x20 + (arg1 << 0x05)) + 0x1f))) < var_c) | ((var_c + (uint248((0x20 + (arg1 << 0x05)) + 0x1f))) > 0xffffffffffffffff)), \"Ownable: caller is not the owner\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_b = 0x41;\n        var_c = var_c + (uint248((0x20 + (arg1 << 0x05)) + 0x1f));\n        address var_e = (arg1);\n        require(!(((0x04 + arg1) + 0x20) < (0x20 + ((0x04 + arg1) + (arg1 << 0x05)))), \"Ownable: caller is not the owner\");\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_f = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_g = 0x20;\n        var_h = 0x20;\n        var_i = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        require(var_c.length == var_c.length, \"arrays must be the same length\");\n        var_f = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_g = 0x20;\n        var_h = 0x1e;\n        var_i = 0x617272617973206d757374206265207468652073616d65206c656e6774680000;\n        require(var_c.length < 0x0258, \"Can only airdrop 600 wallets per txn due to gas limits\");\n        var_f = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_g = 0x20;\n        var_h = 0x36;\n        var_i = 0x43616e206f6e6c792061697264726f70203630302077616c6c65747320706572;\n        var_j = 0x2074786e2064756520746f20676173206c696d69747300000000000000000000;\n        require(address(msg.sender), \"ERC20: transfer amount exceeds balance\");\n        require(address(var_k), \"ERC20: transfer amount exceeds balance\");\n        address var_a = address(msg.sender);\n        uint256 var_l = 0;\n        require(!(storage_map_c[var_a] < (var_k)), \"ERC20: transfer amount exceeds balance\");\n        var_f = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_g = 0x20;\n        var_h = 0x26;\n        var_i = 0x45524332303a207472616e7366657220616d6f756e7420657863656564732062;\n        var_j = 0x616c616e63650000000000000000000000000000000000000000000000000000;\n        var_a = address(msg.sender);\n        var_l = 0;\n        storage_map_c[var_a] = storage_map_c[var_a] - (var_k);\n        var_a = address(var_k);\n        require(!(storage_map_c[var_a] > (var_k + storage_map_c[var_a])), \"ERC20: transfer to the zero address\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_b = 0x11;\n        storage_map_c[var_a] = (var_k) + storage_map_c[var_a];\n        var_f = var_k;\n        emit Transfer(address(msg.sender), address(var_k), var_k);\n        require(0x01, \"ERC20: transfer to the zero address\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_b = 0x11;\n        var_f = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_g = 0x20;\n        var_h = 0x23;\n        var_i = 0x45524332303a207472616e7366657220746f20746865207a65726f2061646472;\n        var_j = 0x6573730000000000000000000000000000000000000000000000000000000000;\n        var_f = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_g = 0x20;\n        var_h = 0x25;\n        var_i = 0x45524332303a207472616e736665722066726f6d20746865207a65726f206164;\n        var_j = 0x6472657373000000000000000000000000000000000000000000000000000000;\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_b = 0x32;\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_b = 0x32;\n    }",
    "llm_output": "function airdropToWallets(\n    address[] calldata wallets,\n    uint256[] calldata amountsInTokens\n) external {\n    // The caller must be the contract owner.\n    require(msg.sender == owner(), \"Ownable: caller is not the owner\");\n\n    // The two arrays must be identical in length.\n    require(\n        wallets.length == amountsInTokens.length,\n        \"arrays must be the same length\"\n    );\n\n    // Maximum of 600 wallets per airdrop to avoid running out of gas.\n    require(\n        wallets.length < 600,\n        \"Can only airdrop 600 wallets per txn due to gas limits\"\n    );\n\n    // Perform the airdrop.\n    for (uint256 i = 0; i < wallets.length; ++i) {\n        _transfer(msg.sender, wallets[i], amountsInTokens[i]);\n    }\n\n    // Retain decompiler-generated no-op check to preserve logical fidelity.\n    require(true, \"ERC20: transfer to the zero address\");\n}",
    "ground_truth": "function airdropToWallets(address[] memory wallets, uint256[] memory amountsInTokens) external onlyOwner {\r\n        require(wallets.length == amountsInTokens.length, \"arrays must be the same length\");\r\n        require(wallets.length < 600, \"Can only airdrop 600 wallets per txn due to gas limits\"); // allows for airdrop + launch at the same exact time, reducing delays and reducing sniper input.\r\n        for(uint256 i = 0; i < wallets.length; i++){\r\n            address wallet = wallets[i];\r\n            uint256 amount = amountsInTokens[i];\r\n            super._transfer(msg.sender, wallet, amount);\r\n        }\r\n    }"
}