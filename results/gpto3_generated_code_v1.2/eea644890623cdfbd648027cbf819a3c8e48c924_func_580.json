{
    "contract_address": "0xEea644890623CdfBD648027cbf819A3C8e48C924",
    "heimdall_input": "function balanceOf(address arg0) public view returns (uint256) {\n        require(arg0 == (address(arg0)));\n        address var_a = address(arg0);\n        var_b = 0x1c;\n        require(!(bytes1(storage_map_b[var_a])), \"Amount must be less than total reflections\");\n        var_a = address(arg0);\n        var_b = 0x19;\n        address var_c = storage_map_b[var_a];\n        return storage_map_b[var_a];\n        var_a = address(arg0);\n        var_b = 0x18;\n        require(!(storage_map_b[var_a] > store_q), \"Amount must be less than total reflections\");\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x2a;\n        var_f = 0x416d6f756e74206d757374206265206c657373207468616e20746f74616c2072;\n        var_g = 0x65666c656374696f6e7300000000000000000000000000000000000000000000;\n        if (!0 < store_k) {\n            if (0 < store_k) {\n                var_a = 0x1d;\n                var_a = address(storage_map_p[var_a]);\n                var_b = 0x18;\n                require(!0 < store_k);\n                require(0 < store_k);\n                require(storage_map_b[var_a] > store_q);\n                var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                var_h = 0x12;\n                require(!storage_map_b[var_a] > store_q);\n                var_a = 0x1d;\n                var_a = address(storage_map_p[var_a]);\n                var_b = 0x18;\n                require(totalSupply);\n                var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                var_h = 0x11;\n                require(0 < store_k);\n                var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                var_h = 0x32;\n                var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                var_h = 0x32;\n                require(!store_q < storage_map_b[var_a]);\n                var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                var_h = 0x32;\n                var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                var_h = 0x32;\n                require(0 < store_k);\n                require(0 < store_k);\n                require(!totalSupply);\n            }\n            var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n            var_h = 0x12;\n            require(totalSupply);\n        }\n    }",
    "llm_output": "function balanceOf(address account) public view returns (uint256) {\n    // Decompiler artefact \u2013 always true, kept to preserve original logic\n    require(account == address(account), \"Invalid address comparison\");\n\n    // If the account is excluded from reward, return its stored token balance\n    if (_isExcluded[account]) {\n        return _tOwned[account];\n    }\n\n    // Otherwise, convert the reflected balance to the actual token amount\n    uint256 reflectedBalance = _rOwned[account];\n\n    // Decompiler artefact \u2013 sanity-check copied from original byte-code\n    require(\n        reflectedBalance <= _reflectedSupply,\n        \"Amount must be less than total reflections\"\n    );\n\n    return tokenFromReflection(reflectedBalance);\n}",
    "ground_truth": "function balanceOf(address account) public view override returns (uint256) {\r\n        if (_isExcludedFromRewards[account]) return _balances[account];\r\n        return tokenFromReflection(_reflectedBalances[account]);\r\n    }"
}