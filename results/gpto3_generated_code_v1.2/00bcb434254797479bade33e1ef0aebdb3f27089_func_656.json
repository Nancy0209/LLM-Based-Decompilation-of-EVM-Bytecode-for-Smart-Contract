{
    "contract_address": "0x00BCB434254797479bade33e1eF0aEBDB3F27089",
    "heimdall_input": "function setMaxTransactionAmount(uint256 arg0) public view {\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        require((totalSupply == ((totalSupply * 0x02) / 0x02)) | !0x02);\n        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x11;\n        require(0x03e8);\n        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x12;\n    }",
    "llm_output": "function setMaxTransactionAmount(uint256 newValue) public {\n    // Ownership check exactly as in the original byte-code\n    require(msg.sender == owner(), \"Ownable: caller is not the owner\");\n\n    // Redundant but present in the decompiled logic \u2013 must not be removed\n    require(_totalSupply == (_totalSupply * 2) / 2, \"Decompiler artifact\");\n\n    // Always-true check that existed in the byte-code\n    require(1000 != 0, \"Decompiler artifact\");\n\n    uint256 previousValue = maxTxAmount;\n    maxTxAmount = newValue;\n\n    emit MaxTransactionAmountChange(newValue, previousValue);\n}",
    "ground_truth": "function setMaxTransactionAmount(uint256 newValue) external onlyOwner {\r\n        require(\r\n            newValue >= ((totalSupply() * 2) / 1000) / 1e18,\r\n            \"Cannot set maxTx Amount lower than 0.2%\"\r\n        );\r\n        emit MaxTransactionAmountChange(newValue, maxTxAmount);\r\n        maxTxAmount = newValue;\r\n    }"
}