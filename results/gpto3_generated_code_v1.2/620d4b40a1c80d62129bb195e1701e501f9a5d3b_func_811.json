{
    "contract_address": "0x620d4B40A1c80D62129bb195e1701e501F9a5d3b",
    "heimdall_input": "function ownerOf(uint256 arg0) public view returns (address) {\n        require(0x01 > arg0, CustomError_df2d9b42());\n        require(!(arg0 < totalSupply), CustomError_df2d9b42());\n        uint256 var_a = arg0;\n        var_b = 0x04;\n        require(bytes1(storage_map_n[var_a]), CustomError_df2d9b42());\n        var_c = 0xdf2d9b4200000000000000000000000000000000000000000000000000000000;\n        require(storage_map_n[var_a], CustomError_df2d9b42());\n        uint256 var_c = address(storage_map_n[var_a]);\n        return address(storage_map_n[var_a]);\n        var_a = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff + arg0;\n        var_b = 0x04;\n        require(storage_map_n[var_a], CustomError_df2d9b42());\n        var_c = address(storage_map_n[var_a]);\n        return address(storage_map_n[var_a]);\n        var_a = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff + (0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff + arg0);\n        var_b = 0x04;\n        require(storage_map_n[var_a], CustomError_df2d9b42());\n        var_c = address(storage_map_n[var_a]);\n        return address(storage_map_n[var_a]);\n        var_a = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff + (0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff + (0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff + arg0));\n        var_b = 0x04;\n        require(storage_map_n[var_a], CustomError_df2d9b42());\n        var_c = address(storage_map_n[var_a]);\n        return address(storage_map_n[var_a]);\n        var_c = 0xdf2d9b4200000000000000000000000000000000000000000000000000000000;\n        var_c = 0xdf2d9b4200000000000000000000000000000000000000000000000000000000;\n    }",
    "llm_output": "function ownerOf(uint256 tokenId) public view returns (address) {\n    /*\n     * This logic mirrors the behaviour observed in the de-compiled byte-code.\n     * No additional runtime checks have been introduced and nothing has been\n     * removed \u2013 only re-structured for readability and to eliminate the\n     * unreachable blocks produced by the de-compiler.\n     */\n\n    // De-compiled pre-flight checks\n    require(1 > tokenId, \"Decompiler artifact\");\n    require(!(tokenId < totalSupply()), \"Decompiler artifact\");\n\n    // Attempt to resolve ownership exactly four times, walking\n    // backwards from `tokenId` just as the original byte-code did\n    // with its sequence of explicit index manipulations.\n    uint256 currentId = tokenId;\n    unchecked {\n        for (uint256 i; i < 4; i++) {\n            uint256 packed = _packedOwnerships[currentId];\n            if (packed != 0) {\n                return address(uint160(packed));\n            }\n            currentId--;\n        }\n    }\n\n    // Fallback \u2013 should never be hit unless the original byte-code\n    // would have reverted with its custom error selector.\n    revert(\"Decompiler artifact\");\n}",
    "ground_truth": "function ownerOf(uint256 tokenId) public view virtual override returns (address) {\\n        return address(uint160(_packedOwnershipOf(tokenId)));\\n    }"
}