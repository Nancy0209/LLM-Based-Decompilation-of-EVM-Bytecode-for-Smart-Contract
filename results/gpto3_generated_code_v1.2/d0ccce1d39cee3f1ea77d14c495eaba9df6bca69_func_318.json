{
    "contract_address": "0xd0ccce1D39ceE3F1eA77D14C495eAbA9DF6BCA69",
    "heimdall_input": "function isBot(address arg0) public view returns (bool) {\n        require(arg0 == (address(arg0)));\n        address var_a = address(arg0);\n        var_b = 0x04;\n        address var_c = !(!bytes1(storage_map_b[var_a] / 0x01));\n        return !(!bytes1(storage_map_b[var_a] / 0x01));\n    }",
    "llm_output": "function isBot(address account) public view returns (bool) {\n    // This odd-looking check existed in the decompiled bytecode; keep it for logical fidelity.\n    require(account == address(account));\n\n    // The original code stored the flag as a single byte and then performed a\n    // double-negation to coerce it into a boolean.  \n    // Returning `!= 0` preserves that exact truthiness.\n    return _botStatus[account] != 0;\n}",
    "ground_truth": "function isBot(address a) public view returns (bool) {\\n      return bots[a];\\n    }"
}