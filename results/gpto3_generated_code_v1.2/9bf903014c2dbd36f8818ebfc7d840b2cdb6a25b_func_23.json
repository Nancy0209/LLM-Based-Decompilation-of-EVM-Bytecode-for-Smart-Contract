{
    "contract_address": "0x9BF903014c2dbD36f8818eBfc7D840B2cDB6A25b",
    "heimdall_input": "function updatemktWallet(address arg0) public {\n        require(arg0 == (address(arg0)));\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        emit mktWalletUpdated(address(arg0), address(mwallet));\n        mwallet = (address(arg0)) | (uint96(mwallet));\n    }",
    "llm_output": "function updatemktWallet(address newMarketingWallet) public {\n    // Redundant equality check kept for logical fidelity with decompiled code\n    require(newMarketingWallet == address(newMarketingWallet));\n    require(msg.sender == owner(), \"Ownable: caller is not the owner\");\n\n    address previousMarketingWallet = mwallet;\n    emit mktWalletUpdated(newMarketingWallet, previousMarketingWallet);\n\n    // Replicates `(address(arg0)) | (uint96(mwallet))` from decompiled byte-code\n    uint160 combined = uint160(newMarketingWallet) | uint160(uint96(uint160(previousMarketingWallet)));\n    mwallet = address(combined);\n}",
    "ground_truth": "function updatemktWallet(address newmktWallet) external onlyOwner {\r\n        emit mktWalletUpdated(newmktWallet, mwallet);\r\n        mwallet = newmktWallet;\r\n    }"
}