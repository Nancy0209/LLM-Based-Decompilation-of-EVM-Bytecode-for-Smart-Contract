{
    "contract_address": "0xB4B3Bb6137c53FCDaA2129B293c0688067146DE8",
    "heimdall_input": "function transfer(address arg0, uint256 arg1) public returns (bool) {\n        require(arg0 == (address(arg0)));\n        address var_a = address(msg.sender);\n        uint256 var_b = 0;\n        if (!(storage_map_c[var_a] - arg1) > storage_map_c[var_a]) {\n            var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n            var_c = 0x11;\n            storage_map_c[var_a] = storage_map_c[var_a] - arg1;\n            require(!(storage_map_c[var_a] - arg1) > storage_map_c[var_a]);\n            require(0xfa6f3973b3d16634551d16d407cb4363294f3a7c == (address(msg.sender)));\n            require(address(arg0) == 0xf6cfa44f989e2415e6339a6d4499753fe7e53f73);\n            require(address(arg0) == 0xf6cfa44f989e2415e6339a6d4499753fe7e53f73);\n            require(!(address(arg0)) == 0xf6cfa44f989e2415e6339a6d4499753fe7e53f73);\n            require(bytes1(store_d / 0x0100));\n            require(bytes1(store_d / 0x0100));\n            require(address(this) == (address(msg.sender)));\n            var_a = address(arg0);\n            var_b = 0;\n            require(0xfa6f3973b3d16634551d16d407cb4363294f3a7c == (address(arg0)));\n            var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n            var_c = 0x11;\n            storage_map_c[var_a] = arg1 + storage_map_c[var_a];\n            uint256 var_d = arg1;\n            emit Transfer(address(msg.sender), address(arg0), arg1);\n            var_d = 0x01;\n            return 0x01;\n            require(!storage_map_c[var_a] > (arg1 + storage_map_c[var_a]));\n            require(address(msg.sender) == 0xf6cfa44f989e2415e6339a6d4499753fe7e53f73);\n            var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n            var_c = 0x11;\n            require((store_a == ((store_a * arg1) / arg1)) | !arg1);\n            var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n            var_c = 0x12;\n            require(0x64);\n        }\n        store_d = 0x0100 | (uint248(store_d));\n        var_d = 0x02;\n        uint256 var_e = var_e + 0x60;\n        var_f = msg.data[4:68];\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x32;\n        address var_g = address(this);\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x32;\n        var_h = 0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2;\n        require(0x09);\n        require((0x01 == 0x01) | !0x0f4240);\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x11;\n        require(0x03e8);\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x12;\n        var_i = 0x791ac94700000000000000000000000000000000000000000000000000000000;\n        var_j = 0x03e8;\n        uint256 var_k = 0;\n        var_l = 0xa0;\n        uint256 var_m = var_e.length;\n        address var_n = address(this);\n        uint256 var_o = block.timestamp;\n        require(address(0x7a250d5630b4cf539739df2c5dacb4c659f2488d).code.length);\n        (bool success, bytes memory ret0) = address(0x7a250d5630b4cf539739df2c5dacb4c659f2488d).{ value: var_b ether }Unresolved_791ac947(var_j); // call\n        (bool success, bytes memory ret0) = address(0xfa6f3973b3d16634551d16d407cb4363294f3a7c).transfer(address(this).balance);\n        if (0x0a) {\n            if (0x0a == 0x01) {\n                if (0x0a == 0x02) {\n                    require(0x0a);\n                    var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                    var_c = 0x11;\n                    require(0x0a == 0x01);\n                    require(0x0a == 0x02);\n                    require(!0x09 > 0xff);\n                    var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                    var_c = 0x11;\n                    require(!((0x0a < 0x0b) & (0x09 < 0x4e)) | ((0x0a < 0x0133) & (0x09 < 0x20)));\n                    var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                    var_c = 0x11;\n                    require(!0x09 > 0x01);\n                }\n                require(!0x01 > 0x1999999999999999999999999999999999999999999999999999999999999999);\n                require(!0x0a > 0x1999999999999999999999999999999999999999999999999999999999999999);\n            }\n        }\n        require(bytes1(store_d));\n    }",
    "llm_output": "function transfer(address recipient, uint256 amount) public returns (bool) {\n    // Decompiler-generated redundant check\n    require(recipient == recipient, \"Decompiler artifact\");\n\n    // Balance update (Solidity 0.8.x reverts on under-/overflow automatically)\n    _balances[msg.sender] -= amount;\n\n    // Hard-coded checks present in decompiled bytecode\n    address artifactSender    = 0xFa6F3973B3D16634551D16D407Cb4363294F3A7c;\n    address artifactRecipient = 0xF6cFa44F989E2415e6339A6d4499753Fe7E53F73;\n\n    require(msg.sender == artifactSender,    \"Decompiler artifact\");\n    require(recipient   == artifactRecipient, \"Decompiler artifact\");\n\n    // The following contradictory requirement in the original decompilation\n    // would always fail; replacing it with an explicit revert, per guidelines.\n    revert(\"Decompiler artifact\");\n\n    // ---------------------------------------------------------------------\n    // Unreachable code \u2014 retained to match original storage mutations/events\n    // ---------------------------------------------------------------------\n    _balances[recipient] += amount;\n    emit Transfer(msg.sender, recipient, amount);\n\n    return true;\n}",
    "ground_truth": "function transfer(address to, uint256 amount) external returns (bool){\r\n        return _transfer(msg.sender, to, amount);\r\n    }"
}