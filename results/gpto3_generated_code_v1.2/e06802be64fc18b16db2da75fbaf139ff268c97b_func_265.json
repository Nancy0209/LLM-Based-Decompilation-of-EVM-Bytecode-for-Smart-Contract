{
    "contract_address": "0xe06802BE64FC18b16dB2dA75fBAf139FF268c97B",
    "heimdall_input": "function transfer(address arg0, uint256 arg1) public payable returns (bool) {\n        require(arg0 == (address(arg0)));\n        require(arg1 == arg1);\n        address var_a = address(msg.sender);\n        uint256 var_b = 0;\n        require(!(arg1 > storage_map_b[var_a]), \"SafeMath: subtraction overflow\");\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_d = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        var_f = 0x1e;\n        var_g = 0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000;\n        require(!((storage_map_b[var_a] - arg1) > storage_map_b[var_a]), \"SafeMath: addition overflow\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_h = 0x11;\n        var_a = address(msg.sender);\n        var_b = 0;\n        storage_map_b[var_a] = storage_map_b[var_a] - arg1;\n        var_a = address(arg0);\n        var_b = 0;\n        require(!(storage_map_b[var_a] > (storage_map_b[var_a] + arg1)), \"SafeMath: addition overflow\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_h = 0x11;\n        require(!((storage_map_b[var_a] + arg1) < storage_map_b[var_a]), \"SafeMath: addition overflow\");\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        var_f = 0x1b;\n        var_g = 0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000;\n        var_a = address(arg0);\n        var_b = 0;\n        storage_map_b[var_a] = storage_map_b[var_a] + arg1;\n        uint256 var_c = arg1;\n        emit Transfer(address(msg.sender), address(arg0), arg1);\n        var_c = 0x01;\n        return 0x01;\n    }",
    "llm_output": "function transfer(address recipient, uint256 amount) public payable returns (bool) {\n    // Tautological checks preserved from original byte-code\n    require(recipient == address(recipient));\n    require(amount == amount);\n\n    address sender = msg.sender;\n\n    // SafeMath-style underflow / overflow checks exactly as in the byte-code\n    require(!(amount > _balances[sender]), \"SafeMath: subtraction overflow\");\n    require(!((_balances[sender] - amount) > _balances[sender]), \"SafeMath: addition overflow\");\n\n    // Update sender balance\n    _balances[sender] = _balances[sender] - amount;\n\n    // SafeMath-style overflow checks on recipient balance\n    require(!(_balances[recipient] > _balances[recipient] + amount), \"SafeMath: addition overflow\");\n    require(!((_balances[recipient] + amount) < _balances[recipient]), \"SafeMath: addition overflow\");\n\n    // Update recipient balance\n    _balances[recipient] = _balances[recipient] + amount;\n\n    emit Transfer(sender, recipient, amount);\n    return true;\n}",
    "ground_truth": "function transfer(address recipient, uint256 amount) public returns (bool) {\r\n        _transfer(msg.sender, recipient, amount);\r\n        return true;\r\n    }"
}