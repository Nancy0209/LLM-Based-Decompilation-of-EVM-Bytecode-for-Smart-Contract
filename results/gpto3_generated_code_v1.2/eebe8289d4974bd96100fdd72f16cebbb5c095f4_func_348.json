{
    "contract_address": "0xeEbe8289D4974bd96100fdD72f16CEBbB5c095f4",
    "heimdall_input": "function transfer(address arg0, uint256 arg1) public payable returns (bool) {\n        require(arg0 == (address(arg0)));\n        require(arg1 == arg1);\n        require(address(msg.sender) - 0, \"ERC20: transfer amount exceeds balance\");\n        require(address(arg0) - 0, \"ERC20: transfer amount exceeds balance\");\n        address var_a = address(msg.sender);\n        var_b = 0x65;\n        require(!(storage_map_b[var_a] < arg1), \"ERC20: transfer amount exceeds balance\");\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_d = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        var_f = 0x26;\n        var_g = 0x45524332303a207472616e7366657220616d6f756e7420657863656564732062;\n        var_h = 0x616c616e63650000000000000000000000000000000000000000000000000000;\n        var_a = address(msg.sender);\n        var_b = 0x65;\n        storage_map_b[var_a] = storage_map_b[var_a] - arg1;\n        var_a = address(arg0);\n        var_b = 0x65;\n        require(!(storage_map_b[var_a] > (storage_map_b[var_a] + arg1)), \"ERC20: transfer to the zero address\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_i = 0x11;\n        storage_map_b[var_a] = storage_map_b[var_a] + arg1;\n        uint256 var_c = arg1;\n        emit Transfer(address(msg.sender), address(arg0), arg1);\n        var_c = 0x01;\n        return 0x01;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        var_f = 0x23;\n        var_g = 0x45524332303a207472616e7366657220746f20746865207a65726f2061646472;\n        var_h = 0x6573730000000000000000000000000000000000000000000000000000000000;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        var_f = 0x25;\n        var_g = 0x45524332303a207472616e736665722066726f6d20746865207a65726f206164;\n        var_h = 0x6472657373000000000000000000000000000000000000000000000000000000;\n    }",
    "llm_output": "function transfer(address to, uint256 amount) public payable returns (bool) {\n    /* Redundant self-equality checks kept for decompiler fidelity */\n    require(to == to);\n    require(amount == amount);\n\n    /* Zero-address checks with original revert messages */\n    require(msg.sender != address(0), \"ERC20: transfer amount exceeds balance\");\n    require(to != address(0), \"ERC20: transfer amount exceeds balance\");\n\n    address from = msg.sender;\n\n    /* Balance sufficiency check */\n    require(_balances[from] >= amount, \"ERC20: transfer amount exceeds balance\");\n\n    /* Debit sender */\n    _balances[from] -= amount;\n\n    /* Overflow safeguard reproduced from decompiled logic */\n    require(!(_balances[to] > _balances[to] + amount), \"ERC20: transfer to the zero address\");\n\n    /* Credit recipient */\n    _balances[to] += amount;\n\n    emit Transfer(from, to, amount);\n    return true;\n}",
    "ground_truth": "function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}"
}