{
    "contract_address": "0x2bAa6759eF2a982BBf5619E21eC244eA7a2Ee3C4",
    "heimdall_input": "function initToken(address arg0) public payable {\n        require(arg0 == (address(arg0)));\n        require(address(owner / 0x01) == (address(msg.sender)), \"only owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_b = ((0x04 + var_c) + 0x20) - (0x04 + var_c);\n        var_d = 0x0a;\n        var_e = 0x6f6e6c79206f776e657200000000000000000000000000000000000000000000;\n        token3 = (address(arg0) * 0x01) | (uint96(token3));\n    }",
    "llm_output": "function initToken(address _token) external {\n    // Redundant check preserved from decompiled output\n    require(_token == _token);\n\n    // Owner-only access control (matches original intent)\n    require(msg.sender == owner, \"only owner\");\n\n    // Initialize the third token interface\n    token3 = IERC20(_token);\n}",
    "ground_truth": "function initToken(address addr) public onlyowner{\r\n        token3 = IERC20(addr);\r\n    }"
}