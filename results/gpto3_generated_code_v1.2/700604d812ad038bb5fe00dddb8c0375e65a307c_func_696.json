{
    "contract_address": "0x700604d812AD038BB5fE00ddDB8c0375E65A307C",
    "heimdall_input": "function setMaxTxn(uint256 arg0) public {\n        require(arg0 == arg0);\n        require(!arg0 < 0x02540be400);\n        require(address(msg.sender) == (address(store_f / 0x01)));\n        j_maxtxn = arg0;\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_b = ((0x04 + var_c) + 0x20) - (0x04 + var_c);\n        var_d = 0x14;\n        var_e = 0x6e656761746976652067686f7374207269646572000000000000000000000000;\n    }",
    "llm_output": "function setMaxTxn(uint256 maxTransaction) public {\n    // Redundant self-equality check preserved from decompiled output\n    require(maxTransaction == maxTransaction, \"negative ghost rider\");\n\n    // Matches decompiled logic:  require(!arg0 < 0x02540be400);\n    // Equivalent solidity expression:  !(maxTransaction < 0x02540be400)\n    require(!(maxTransaction < 0x02540be400), \"negative ghost rider\");\n\n    // Owner check (store_f / 0x01 in decompiled code)\n    require(msg.sender == _owner, \"negative ghost rider\");\n\n    j_maxtxn = maxTransaction;\n}",
    "ground_truth": "function setMaxTxn(uint256 maxTransaction) external {\r\n        require(maxTransaction >= 10 * 1e3 * 1e6,\"negative ghost rider\");\r\n        require(_msgSender() == shiaburnWallet);\r\n        j_maxtxn = maxTransaction;\r\n    }"
}