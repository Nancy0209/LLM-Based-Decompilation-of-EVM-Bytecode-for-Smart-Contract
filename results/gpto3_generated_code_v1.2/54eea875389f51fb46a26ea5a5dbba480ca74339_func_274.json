{
    "contract_address": "0x54eEA875389f51FB46A26Ea5a5DbBa480ca74339",
    "heimdall_input": "function updateDevelopmentWallet(address arg0) public {\n        require(arg0 == (address(arg0)));\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        require(address(arg0), \"ERC20: Address 0\");\n        developmentWallet = (address(arg0)) | (uint96(developmentWallet));\n        emit developmentWalletUpdated(address(arg0), address(developmentWallet));\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x10;\n        var_d = 0x45524332303a2041646472657373203000000000000000000000000000000000;\n    }",
    "llm_output": "function updateDevelopmentWallet(address newDevelopmentWallet) public {\n    // Retain the decompiler-generated self-comparison check\n    require(newDevelopmentWallet == address(newDevelopmentWallet));\n\n    // Ownership check (as present in decompiled logic)\n    require(msg.sender == owner, \"Ownable: caller is not the owner\");\n\n    // Zero-address guard (fixed to compile while preserving intent)\n    require(newDevelopmentWallet != address(0), \"ERC20: Address 0\");\n\n    // Update wallet and emit event\n    address previousDevelopmentWallet = developmentWallet;\n    developmentWallet = newDevelopmentWallet;\n\n    emit developmentWalletUpdated(newDevelopmentWallet, previousDevelopmentWallet);\n}",
    "ground_truth": "function updateDevelopmentWallet(address _developmentWallet)\r\n        external\r\n        onlyOwner\r\n    {\r\n        require(_developmentWallet != address(0), \"ERC20: Address 0\");\r\n        address oldWallet = developmentWallet;\r\n        developmentWallet = _developmentWallet;\r\n        emit developmentWalletUpdated(developmentWallet, oldWallet);\r\n    }"
}