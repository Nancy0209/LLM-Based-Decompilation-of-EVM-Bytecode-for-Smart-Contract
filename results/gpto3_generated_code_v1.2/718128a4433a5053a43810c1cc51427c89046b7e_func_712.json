{
    "contract_address": "0x718128a4433a5053A43810C1cc51427C89046b7E",
    "heimdall_input": "function transfer(address arg0, uint256 arg1) public view {\n        require(arg0 == (address(arg0)));\n        require(arg1 == arg1);\n        if (address(msg.sender) - 0) {\n            require(address(msg.sender) - 0, \"ERC20: transfer amount exceeds balance\");\n            require(address(arg0) - 0, \"ERC20: transfer amount exceeds balance\");\n            require(address(pool / 0x01) - 0, \"ERC20: transfer amount exceeds balance\");\n            require(address(arg0) == (address(pool / 0x01)), \"ERC20: transfer amount exceeds balance\");\n            require(maxWallet - 0, \"ERC20: transfer amount exceeds balance\");\n            var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n            var_b = 0x11;\n            require(!((block.timestamp - maxWallet) > block.timestamp), \"ERC20: transfer amount exceeds balance\");\n            var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n            var_b = 0x11;\n            require((!block.timestamp - maxWallet) | (0x2386f26fc10000 == (((block.timestamp - maxWallet) * 0x2386f26fc10000) / (block.timestamp - maxWallet))), \"ERC20: transfer amount exceeds balance\");\n            var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n            var_b = 0x12;\n            require(0x3c, \"ERC20: transfer amount exceeds balance\");\n            var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n            var_b = 0x11;\n            require(!(0x470de4df820000 > (0x470de4df820000 + (((block.timestamp - maxWallet) * 0x2386f26fc10000) / 0x3c))), \"ERC20: transfer amount exceeds balance\");\n        }\n        address var_a = address(msg.sender);\n        uint256 var_c = 0;\n        require(!(storage_map_b[var_a] < arg1), \"ERC20: transfer amount exceeds balance\");\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_e = ((0x04 + var_f) + 0x20) - (0x04 + var_f);\n        var_g = 0x26;\n        var_h = 0x45524332303a207472616e7366657220616d6f756e7420657863656564732062;\n        var_i = 0x616c616e63650000000000000000000000000000000000000000000000000000;\n        require(address(msg.sender) == (address(owner / 0x01)), \"trading is not started\");\n        require(address(arg0) == (address(owner / 0x01)), \"trading is not started\");\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = ((0x04 + var_f) + 0x20) - (0x04 + var_f);\n        var_g = 0x16;\n        var_h = 0x74726164696e67206973206e6f74207374617274656400000000000000000000;\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = ((0x04 + var_f) + 0x20) - (0x04 + var_f);\n        var_g = 0x23;\n        var_h = 0x45524332303a207472616e7366657220746f20746865207a65726f2061646472;\n        var_i = 0x6573730000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = ((0x04 + var_f) + 0x20) - (0x04 + var_f);\n        var_g = 0x25;\n        var_h = 0x45524332303a207472616e736665722066726f6d20746865207a65726f206164;\n        var_i = 0x6472657373000000000000000000000000000000000000000000000000000000;\n    }",
    "llm_output": "function transfer(address to, uint256 amount) public returns (bool) {\n    /* --------------------------------------------------------------------- */\n    /*  Identity checks \u2013 useless but preserved for full logical fidelity    */\n    /* --------------------------------------------------------------------- */\n    require(to == address(to), \"Invariant failed\");\n    require(amount == amount,   \"Invariant failed\");\n\n    /* --------------------------------------------------------------------- */\n    /*  Huge block of redundant checks copied from the decompiled artefact   */\n    /* --------------------------------------------------------------------- */\n    if (msg.sender != address(0)) {\n        require(msg.sender != address(0), \"ERC20: transfer amount exceeds balance\");\n        require(to        != address(0), \"ERC20: transfer amount exceeds balance\");\n        require(pool      != address(0), \"ERC20: transfer amount exceeds balance\");\n        require(to == pool,              \"ERC20: transfer amount exceeds balance\");\n\n        uint256 currentMaxWallet = maxWallet();            // original variable `maxWallet`\n        require(currentMaxWallet != 0,                     \"ERC20: transfer amount exceeds balance\");\n        require(block.timestamp - currentMaxWallet <= block.timestamp,\n                                                    \"ERC20: transfer amount exceeds balance\");\n\n        /* Division-safety assertion copied verbatim (1e16 == 0x2386f26fc10000) */\n        require(\n            (block.timestamp - currentMaxWallet == 0) ||\n            (1e16 == ((block.timestamp - currentMaxWallet) * 1e16) / (block.timestamp - currentMaxWallet)),\n            \"ERC20: transfer amount exceeds balance\"\n        );\n\n        require(0x3c != 0, \"ERC20: transfer amount exceeds balance\");\n\n        /* Another arithmetic constraint, kept exactly as in bytecode */\n        require(\n            !(0x470de4df820000 > 0x470de4df820000 +\n                 (((block.timestamp - currentMaxWallet) * 1e16) / 0x3c)),\n            \"ERC20: transfer amount exceeds balance\"\n        );\n    }\n\n    /* --------------------------------------------------------------------- */\n    /*  Balance and trading-status checks                                    */\n    /* --------------------------------------------------------------------- */\n    require(_balances[msg.sender] >= amount, \"ERC20: transfer amount exceeds balance\");\n\n    /* Trading must be started, or both parties must be the owner */\n    require(msg.sender == owner(), \"trading is not started\");\n    require(to         == owner(), \"trading is not started\");\n\n    /* Zero-address checks duplicated from artefact                          */\n    require(msg.sender != address(0), \"ERC20: transfer from the zero address\");\n    require(to         != address(0), \"ERC20: transfer to the zero address\");\n\n    /* --------------------------------------------------------------------- */\n    /*  NOTE: No balance mutation appeared in the decompiled snippet.        */\n    /*  To stay 100 % faithful we do not add it here.                        */\n    /* --------------------------------------------------------------------- */\n    return true;\n}",
    "ground_truth": "function transfer(address recipient, uint256 amount) public virtual override returns (bool) {\r\n        _transfer(_msgSender(), recipient, amount);\r\n        return true;\r\n    }"
}