{
    "contract_address": "0xEA96F358096DB436A74f5C974F59fdE3Bc5185e7",
    "heimdall_input": "function setMaxSize(uint256 arg0, uint256 arg1, uint256 arg2) public {\n        require(msg.sender == (address(getOwner)), \"Ownable: Caller is not owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x1c;\n        var_d = 0x4f776e61626c653a2043616c6c6572206973206e6f74206f776e657200000000;\n        require((arg0 == ((arg0 * store_l) / store_l)) | !store_l);\n        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x11;\n        require(0x2710);\n        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x12;\n        require((arg1 == ((arg1 * store_l) / store_l)) | !store_l);\n        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x11;\n        require(0x2710);\n        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x12;\n        require((arg2 == ((arg2 * store_l) / store_l)) | !store_l);\n        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x11;\n        require(0x2710);\n        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x12;\n        _maxxTrxSize = (arg0 * store_l) / 0x2710;\n        _maxxTransferSize = (arg1 * store_l) / 0x2710;\n        _maxxWalletSize = (arg2 * store_l) / 0x2710;\n        var_g = 0x18;\n        var_e = 0xdead;\n        require(!(store_l - store_n) > store_l);\n        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x11;\n    }",
    "llm_output": "function setMaxSize(\n    uint256 buyPercent,\n    uint256 sellPercent,\n    uint256 walletPercent\n) external onlyOwner {\n    // --- Overflow-check replicas (mimic decompiled logic) ---\n    require(\n        _supplyTotal == 0 ||\n            buyPercent == (buyPercent * _supplyTotal) / _supplyTotal,\n        \"SafeMath: mul overflow (buy)\"\n    );\n    require(true); // replica of `require(0x2710);`\n\n    require(\n        _supplyTotal == 0 ||\n            sellPercent == (sellPercent * _supplyTotal) / _supplyTotal,\n        \"SafeMath: mul overflow (sell)\"\n    );\n    require(true); // replica of `require(0x2710);`\n\n    require(\n        _supplyTotal == 0 ||\n            walletPercent == (walletPercent * _supplyTotal) / _supplyTotal,\n        \"SafeMath: mul overflow (wallet)\"\n    );\n    require(true); // replica of `require(0x2710);`\n\n    // --- State updates (identical arithmetic) ---\n    _maxxTrxSize      = (buyPercent    * _supplyTotal) / 10000;\n    _maxxTransferSize = (sellPercent   * _supplyTotal) / 10000;\n    _maxxWalletSize   = (walletPercent * _supplyTotal) / 10000;\n\n    // --- Subtraction underflow-check replica ---\n    require(!(_supplyTotal - walletPercent > _supplyTotal), \"SafeMath: sub overflow\");\n}",
    "ground_truth": "function setMaxSize(uint256 _buy, uint256 _sell, uint256 _wallet) external onlyOwner {\r\n        uint256 newTx = _supplyTotal.mul(_buy).div(10000); uint256 newTransfer = _supplyTotal.mul(_sell).div(10000); uint256 newWallet = _supplyTotal.mul(_wallet).div(10000);\r\n        _maxxTrxSize = newTx; _maxxTransferSize = newTransfer; _maxxWalletSize = newWallet;\r\n        uint256 limit = totalSupply().mul(5).div(1000);\r\n        require(newTx >= limit && newTransfer >= limit && newWallet >= limit, \"Max TXs and Max Wallet cannot be less than .5%\");\r\n    }"
}