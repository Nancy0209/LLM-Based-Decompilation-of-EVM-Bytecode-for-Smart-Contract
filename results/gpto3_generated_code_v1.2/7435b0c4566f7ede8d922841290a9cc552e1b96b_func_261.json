{
    "contract_address": "0x7435b0C4566F7eDe8d922841290a9cc552e1b96b",
    "heimdall_input": "function transfer(address arg0, uint256 arg1) public payable returns (bool) {\n        require(arg0 == (address(arg0)));\n        var_a = 0x1c15158200000000000000000000000000000000000000000000000000000000;\n        address var_b = address(msg.sender);\n        (bool success, bytes memory ret0) = address(store_d).Unresolved_1c151582(var_b); // staticcall\n        uint256 var_c = var_c + (uint248(ret0.length + 0x1f));\n        require(!(((var_c + ret0.length) - var_c) < 0x20), \"Slippage Invalid\");\n        require(!((arg1 - var_c.length) > arg1), \"Slippage Invalid\");\n        require((arg1 - var_c.length) > 0, \"Slippage Invalid\");\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = 0x20;\n        var_f = 0x10;\n        var_g = 0x536c69707061676520496e76616c696400000000000000000000000000000000;\n        require(address(msg.sender), \"ERC20: transfer amount exceeds balance\");\n        require(address(arg0), \"ERC20: transfer amount exceeds balance\");\n        require(address(arg0), \"ERC20: transfer amount exceeds balance\");\n        address var_h = address(msg.sender);\n        uint256 var_i = 0;\n        require(!(storage_map_e[var_h] < arg1), \"ERC20: transfer amount exceeds balance\");\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = 0x20;\n        var_f = 0x26;\n        var_g = 0x45524332303a207472616e7366657220616d6f756e7420657863656564732062;\n        var_j = 0x616c616e63650000000000000000000000000000000000000000000000000000;\n        var_h = address(msg.sender);\n        var_i = 0;\n        storage_map_e[var_h] = storage_map_e[var_h] - arg1;\n        var_h = address(arg0);\n        storage_map_e[var_h] = arg1 + storage_map_e[var_h];\n        uint256 var_d = arg1;\n        emit Transfer(address(msg.sender), address(arg0), arg1);\n        var_d = 0x01;\n        return 0x01;\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = 0x20;\n        var_f = 0x23;\n        var_g = 0x45524332303a207472616e7366657220746f20746865207a65726f2061646472;\n        var_j = 0x6573730000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = 0x20;\n        var_f = 0x23;\n        var_g = 0x45524332303a207472616e7366657220746f20746865207a65726f2061646472;\n        var_j = 0x6573730000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = 0x20;\n        var_f = 0x25;\n        var_g = 0x45524332303a207472616e736665722066726f6d20746865207a65726f206164;\n        var_j = 0x6472657373000000000000000000000000000000000000000000000000000000;\n        var_h = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_k = 0x11;\n    }",
    "llm_output": "function transfer(address recipient, uint256 amount) public payable returns (bool) {\n    // Tautological check preserved from decompiled code\n    require(recipient == address(recipient), \"Invalid address\");\n\n    /* ------------------------------------------------------------------\n       External check (original selector 0x1c151582 on stored router/guard)\n    ------------------------------------------------------------------ */\n    bytes memory payload = abi.encodeWithSelector(0x1c151582, msg.sender);\n    (bool success, bytes memory response) = _router.staticcall(payload);\n    require(success, \"External check failed\");\n\n    uint256 tempLen = uint256(uint248(response.length + 0x1f)); // matches var_c computation\n    require(!(((tempLen + response.length) - tempLen) < 0x20), \"Slippage Invalid\");\n    require(!((amount - response.length) > amount),            \"Slippage Invalid\");\n    require((amount - response.length) > 0,                    \"Slippage Invalid\");\n\n    /* ------------------------------------------------------------------\n       Standard ERC-20 balance and zero-address checks (verbatim count)\n    ------------------------------------------------------------------ */\n    require(msg.sender  != address(0), \"ERC20: transfer amount exceeds balance\");\n    require(recipient   != address(0), \"ERC20: transfer amount exceeds balance\");\n    require(recipient   != address(0), \"ERC20: transfer amount exceeds balance\");\n\n    /* ------------------------------------------------------------------\n       Balance updates\n    ------------------------------------------------------------------ */\n    require(_balances[msg.sender] >= amount, \"ERC20: transfer amount exceeds balance\");\n\n    _balances[msg.sender] -= amount;\n    _balances[recipient]  += amount;\n\n    emit Transfer(msg.sender, recipient, amount);\n\n    return true;\n}",
    "ground_truth": "function transfer(address to, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, amount);\\n        return true;\\n    }"
}