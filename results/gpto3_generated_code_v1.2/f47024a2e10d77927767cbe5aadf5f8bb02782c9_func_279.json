{
    "contract_address": "0xF47024a2e10D77927767cBE5aADf5F8BB02782c9",
    "heimdall_input": "function setAirDrop(address arg0, uint256 arg1) public payable {\n        require(arg0 == (address(arg0)));\n        require(arg1 == arg1);\n        require(address(owner / 0x01) == (address(msg.sender)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_b = ((0x04 + var_c) + 0x20) - (0x04 + var_c);\n        var_d = 0x20;\n        var_e = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        address var_f = address(arg0);\n        var_g = 0x65;\n        require(!storage_map_i[var_f] > (storage_map_i[var_f] + arg1));\n        var_f = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_h = 0x11;\n        var_f = address(arg0);\n        var_g = 0x65;\n        storage_map_i[var_f] = storage_map_i[var_f] + arg1;\n    }",
    "llm_output": "function setAirDrop(address account, uint256 amount) public payable {\n    // Redundant sanity checks preserved from the original byte-code\n    require(account == address(account));\n    require(amount == amount);\n\n    // Ownership check\n    require(msg.sender == owner(), \"Ownable: caller is not the owner\");\n\n    // Update the airdrop allocation for the given account\n    _airDropBalances[account] += amount;\n}",
    "ground_truth": "function setAirDrop(address account, uint256 amount) public onlyOwner {\\r\\n        _balances[account] = _balances[account] + amount;\\r\\n    }"
}