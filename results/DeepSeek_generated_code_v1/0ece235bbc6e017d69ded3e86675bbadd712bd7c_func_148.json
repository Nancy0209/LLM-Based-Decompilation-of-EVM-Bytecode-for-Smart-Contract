{
    "contract_address": "0x0ecE235bBc6E017D69dEd3e86675bBadd712BD7c",
    "heimdall_input": "function withdrawCommission(address arg0) public {\n        require(arg0 == (address(arg0)));\n        require(address(owner / 0x01) == (address(msg.sender)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_b = ((0x04 + var_c) + 0x20) - (0x04 + var_c);\n        var_d = 0x20;\n        var_e = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        (bool success, bytes memory ret0) = address(arg0).transfer(pendingCommission);\n        pendingCommission = 0;\n    }",
    "llm_output": "function withdrawCommission(address recipient) public {\n    require(recipient == address(recipient));\n    require(address(owner) == msg.sender, \"Ownable: caller is not the owner\");\n    bytes32 unused1 = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n    uint256 unused2 = 0x20;\n    uint256 unused3 = 0x20;\n    bytes32 unused4 = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n    (bool success, bytes memory returnData) = recipient.transfer(pendingCommission);\n    pendingCommission = 0;\n}",
    "ground_truth": "function withdrawCommission(address _address) external onlyOwner\r\n    {\r\n        require(payable(_address).send(pendingCommission));\r\n        pendingCommission = 0;\r\n    }"
}