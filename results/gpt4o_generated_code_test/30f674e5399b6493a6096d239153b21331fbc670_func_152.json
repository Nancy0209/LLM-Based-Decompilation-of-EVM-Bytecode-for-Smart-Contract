{
    "contract_address": "0x30F674e5399B6493A6096d239153b21331fbC670",
    "heimdall_input": "function updateBuyFees(uint256 arg0, uint256 arg1, uint256 arg2) public {\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        lastLpBurnTimee = arg0;\n        buyLiquidityFee = arg1;\n        buyDevelopmentFee = arg2;\n        require(!arg0 > ~(arg1));\n        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x11;\n    }",
    "llm_output": "function updateBuyFees(uint256 marketingFee, uint256 liquidityFee, uint256 developmentFee) public {\n    require(msg.sender == owner, \"Ownable: caller is not the owner\");\n    \n    buyMarketingFee = marketingFee;\n    buyLiquidityFee = liquidityFee;\n    buyDevelopmentFee = developmentFee;\n\n    require(marketingFee + liquidityFee + developmentFee <= type(uint256).max, \"Invalid fee values\");\n}",
    "ground_truth": "function updateBuyFees(\r\n        uint256 _marketingFee,\r\n        uint256 _liquidityFee,\r\n        uint256 _developmentFee\r\n    ) external onlyOwner {\r\n        buyMarketingFee = _marketingFee;\r\n        buyLiquidityFee = _liquidityFee;\r\n        buyDevelopmentFee = _developmentFee;\r\n        buyTotalFees = buyMarketingFee + buyLiquidityFee + buyDevelopmentFee;\r\n    }"
}