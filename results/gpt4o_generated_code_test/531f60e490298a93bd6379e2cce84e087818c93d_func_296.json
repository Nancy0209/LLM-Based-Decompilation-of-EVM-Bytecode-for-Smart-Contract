{
    "contract_address": "0x531f60e490298A93bd6379E2cCe84E087818c93d",
    "heimdall_input": "function manualswap() public view {\n        require(address(msg.sender) == (address(store_h)));\n        require(address(msg.sender) == (address(store_i)));\n        address var_a = address(this);\n        var_b = 0x02;\n        require(!(storage_map_l[var_a] > store_f), \"Amount must be less than total reflections\");\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x2a;\n        var_f = 0x416d6f756e74206d757374206265206c657373207468616e20746f74616c2072;\n        var_g = 0x65666c656374696f6e7300000000000000000000000000000000000000000000;\n        uint256 var_h = 0x40 + var_h;\n        var_c = 0x1a;\n        var_i = 0x536166654d6174683a206469766973696f6e206279207a65726f000000000000;\n        require(0x016345785d8a0000, \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        var_j = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_f = 0x20;\n        uint256 var_g = var_h.length;\n        require(!(0 > var_h.length), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        uint256 var_k = 0;\n        var_l = var_m;\n        require(!(0x20 > var_h.length), \"SafeMath: division by zero\");\n        var_k = 0;\n        if (0x016345785d8a0000) {\n            var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n            var_n = 0x12;\n            if (!store_f < (store_f / 0x016345785d8a0000)) {\n            }\n        }\n    }",
    "llm_output": "function manualswap() public {\n    require(msg.sender == address(store_h), \"Unauthorized: Caller is not store_h\");\n    require(msg.sender == address(store_i), \"Unauthorized: Caller is not store_i\");\n\n    address contractAddress = address(this);\n    uint256 constantValue = 0x02;\n\n    require(\n        storage_map_l[contractAddress] <= store_f,\n        \"Amount must be less than total reflections\"\n    );\n\n    revert(\"Decompiler artifact: Invalid operation\");\n\n    // The following code appears to be unreachable due to the revert above.\n    // It is left here for completeness but will not execute.\n\n    uint256 errorSelector = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n    uint256 errorOffset = 0x20;\n    uint256 errorLength = 0x2a;\n    bytes memory errorMessage = \"Amount must be less than total reflections\";\n\n    uint256 additionalOffset = 0x40 + errorOffset;\n    uint256 divisionErrorSelector = 0x536166654d6174683a206469766973696f6e206279207a65726f;\n\n    require(0x016345785d8a0000 > 0, \"SafeMath: division by zero\");\n\n    uint256 anotherErrorSelector = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n    uint256 anotherErrorOffset = 0x20;\n    uint256 anotherErrorLength = errorMessage.length;\n\n    require(anotherErrorLength > 0, \"Invalid error message length\");\n\n    uint256 tempVariable = 0;\n    uint256 anotherTempVariable = 0;\n\n    require(0x20 <= anotherErrorLength, \"SafeMath: division by zero\");\n\n    tempVariable = 0;\n\n    if (0x016345785d8a0000 > 0) {\n        uint256 panicSelector = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        uint256 panicCode = 0x12;\n\n        if (!(store_f < (store_f / 0x016345785d8a0000))) {\n            // No operation here, but logic is preserved.\n        }\n    }\n}",
    "ground_truth": "function manualswap() external {\r\n        require(_msgSender() == _developmentAddress || _msgSender() == _marketingAddress);\r\n        uint256 contractBalance = balanceOf(address(this));\r\n        swapTokensForEth(contractBalance);\r\n    }"
}