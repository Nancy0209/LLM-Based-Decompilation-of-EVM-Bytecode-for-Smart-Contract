{
    "contract_address": "0x5B8BA3cb21F36a06b3a86774103F8dBDa14483EC",
    "heimdall_input": "function getApproved(uint256 arg0) public view returns (address) {\n        require(arg0 == arg0);\n        uint256 var_a = arg0;\n        var_b = 0x02;\n        require(!(address(storage_map_b[var_a] / 0x01) == 0), \"ERC721: invalid token ID\");\n        var_a = arg0;\n        var_b = 0x04;\n        uint256 var_c = address(storage_map_b[var_a] / 0x01);\n        return address(storage_map_b[var_a] / 0x01);\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_d = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        var_f = 0x18;\n        var_g = 0x4552433732313a20696e76616c696420746f6b656e2049440000000000000000;\n    }",
    "llm_output": "function getApproved(uint256 tokenId) public view returns (address) {\n    require(tokenId == tokenId); // This is a no-op, likely a decompiler artifact\n    require(address(_tokenApprovals[tokenId]) != address(0), \"ERC721: invalid token ID\");\n    return address(_tokenApprovals[tokenId]);\n}",
    "ground_truth": "function getApproved(uint256 tokenId) public view virtual override returns (address) {\r\n        _requireMinted(tokenId);\r\n\r\n        return _tokenApprovals[tokenId];\r\n    }"
}