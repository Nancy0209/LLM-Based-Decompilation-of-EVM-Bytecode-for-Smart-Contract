{
    "contract_address": "0x35D17C2467E1D8aB2d8789FD7af72af770BDBc52",
    "heimdall_input": "function symbol() public view returns (string memory) {\n        bytes1 var_a = 0x20 + (var_a + (0x20 * (((store_c & (((!bytes1(store_c)) * 0x0100) + 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) / 0x02) + 0x1f) / 0x20)));\n        bytes1 var_b = (store_c & (((!bytes1(store_c)) * 0x0100) + 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)) / 0x02;\n        if (!(store_c & (((!store_c) * 0x0100) + 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)) / 0x02) {\n            if (0x1f < (store_c & (((!store_c) * 0x0100) + 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) / 0x02)) {\n                var_c = 0x01;\n                var_d = storage_map_b[var_c];\n                if ((var_a + 0x20) + (store_c & (((!store_c) * 0x0100) + 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) / 0x02) > (0x20 + (var_a + 0x20))) {\n                    var_d = 0x20;\n                    bytes1 var_e = var_a.length;\n                    if (!var_a.length) {\n                        bytes1 var_f = (~((0x0100 ** (0x20 - (bytes1(var_a.length)))) - 0x01)) & (var_g);\n                        return abi.encodePacked(0x20, var_a.length, (~((0x0100 ** (0x20 - (bytes1(var_a.length)))) - 0x01)) & (var_g));\n                        return abi.encodePacked(0x20, var_a.length);\n                    }\n                }\n            }\n        }\n    }",
    "llm_output": "function symbol() public view returns (string memory) {\n    uint256 length = uint256(store_c & 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF) / 2;\n    uint256 offset = 0x20 + (0x20 * ((length + 0x1f) / 0x20));\n    \n    if (length == 0) {\n        return \"\";\n    }\n    \n    if (length > 0x1f) {\n        bytes memory result = new bytes(length);\n        for (uint256 i = 0; i < length; i++) {\n            result[i] = bytes1(uint8(storage_map_b[offset + i]));\n        }\n        return string(result);\n    } else {\n        uint256 mask = ~((0x0100 ** (0x20 - length)) - 1);\n        uint256 data = uint256(storage_map_b[offset]) & mask;\n        return string(abi.encodePacked(data));\n    }\n}",
    "ground_truth": "function symbol() external view override returns (string memory) {\\r\\n      return _symbol;\\r\\n    }"
}