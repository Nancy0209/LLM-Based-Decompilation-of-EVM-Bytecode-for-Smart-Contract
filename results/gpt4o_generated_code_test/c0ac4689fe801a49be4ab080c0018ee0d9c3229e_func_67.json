{
    "contract_address": "0xc0aC4689fe801A49Be4Ab080c0018eE0d9C3229e",
    "heimdall_input": "function royaltyInfo(uint256 arg0, uint256 arg1) public view returns (bytes memory) {\n        if (royaltyAndReferralDecimals) {\n            require(royaltyAndReferralDecimals);\n            require(0x0a);\n            var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n            var_b = 0x11;\n            require((0 == 0) | !0x64);\n            var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n            var_b = 0x11;\n            require((royaltyFeePercent == ((royaltyFeePercent * arg1) / arg1)) | !arg1);\n            address var_c = address(owner);\n            uint256 var_d = (royaltyFeePercent * arg1) / 0;\n            return abi.encodePacked(address(owner), (royaltyFeePercent * arg1) / 0);\n            var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n            var_b = 0x12;\n            require(0);\n            require(0x0a == 0x01);\n            require(0x0a == 0x02);\n            var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n            var_b = 0x11;\n            require(!royaltyAndReferralDecimals > 0xff);\n            require(!((0x0a < 0x0b) & (royaltyAndReferralDecimals < 0x4e)) | ((0x0a < 0x0133) & (royaltyAndReferralDecimals < 0x20)));\n            require(!royaltyAndReferralDecimals > 0x01);\n            var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n            var_b = 0x11;\n            require(!0x0a > 0x1999999999999999999999999999999999999999999999999999999999999999);\n        }\n        require(!0x01 > 0x1999999999999999999999999999999999999999999999999999999999999999);\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_b = 0x11;\n    }",
    "llm_output": "function royaltyInfo(uint256 tokenId, uint256 salePrice) public view returns (address receiver, uint256 royaltyAmount) {\n    if (royaltyAndReferralDecimals != 0) {\n        revert('Decompiler artifact');\n    }\n    require(royaltyFeePercent == (royaltyFeePercent * salePrice) / salePrice || salePrice == 0, 'Invalid sale price');\n    receiver = owner;\n    royaltyAmount = (royaltyFeePercent * salePrice) / royaltyAndReferralDecimals;\n    return (receiver, royaltyAmount);\n}",
    "ground_truth": "function royaltyInfo(uint256 tokenId, uint256 salePrice)\\n        external\\n        view\\n        override\\n        returns (address receiver, uint256 royaltyAmount)\\n    {\\n        uint256 royalty = salePrice.mul(royaltyFeePercent).div(\\n            100*10**royaltyAndReferralDecimals\\n        );\\n        return (owner(), royalty);\\n    }"
}