{
    "contract_address": "0xB9FB64018E475BBCF128E391E62274599c4D848C",
    "heimdall_input": "function contractURI() public view returns (bytes memory) {\n        if (store_h) {\n            if (store_h - ((store_h >> 0x01) < 0x20)) {\n                var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                var_b = 0x22;\n                uint256 var_c = var_c + (0x20 + (((0x1f + (store_h >> 0x01)) / 0x20) * 0x20));\n                bytes32 var_d = store_h >> 0x01;\n                if (store_h) {\n                    if (store_h - ((store_h >> 0x01) < 0x20)) {\n                        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                        var_b = 0x22;\n                        if (!store_h >> 0x01) {\n                            if (0x1f < (store_h >> 0x01)) {\n                                var_a = 0x0c;\n                                var_e = storage_map_b[var_a];\n                                if ((0x20 + var_c) + (store_h >> 0x01) > (0x20 + (0x20 + var_c))) {\n                                    var_e = 0x20;\n                                    uint256 var_f = var_c.length;\n                                    uint256 var_g = 0;\n                                    return abi.encodePacked(0x20, var_c.length);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }",
    "llm_output": "function contractURI() public view returns (bytes memory) {\n    if (contractURIStorage) {\n        if (contractURIStorage - ((contractURIStorage >> 1) < 32)) {\n            bytes32 errorSelector = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n            uint256 errorCode = 34;\n            uint256 offset = offset + (32 + (((31 + (contractURIStorage >> 1)) / 32) * 32));\n            bytes32 shiftedStorage = contractURIStorage >> 1;\n            if (contractURIStorage) {\n                if (contractURIStorage - ((contractURIStorage >> 1) < 32)) {\n                    errorSelector = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                    errorCode = 34;\n                    if (!(contractURIStorage >> 1)) {\n                        if (31 < (contractURIStorage >> 1)) {\n                            uint256 index = 12;\n                            bytes memory storageData = storageMap[index];\n                            if ((32 + offset) + (contractURIStorage >> 1) > (32 + (32 + offset))) {\n                                storageData = new bytes(32);\n                                uint256 length = offset.length;\n                                uint256 start = 0;\n                                return abi.encodePacked(32, offset.length);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n}",
    "ground_truth": "function contractURI() external view override returns (string memory) {\\n        return _contractURI;\\n    }"
}