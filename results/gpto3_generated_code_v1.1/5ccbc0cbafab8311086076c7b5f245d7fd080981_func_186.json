{
    "contract_address": "0x5Ccbc0cbaFAB8311086076C7B5f245D7fD080981",
    "heimdall_input": "function balanceOf(address arg0) public view returns (uint256) {\n        require(arg0 == (address(arg0)));\n        address var_a = address(arg0);\n        var_b = 0x06;\n        address var_c = storage_map_b[var_a];\n        return storage_map_b[var_a];\n    }",
    "llm_output": "function balanceOf(address account) public view returns (uint256) {\n    // Solidity automatically validates that `account` is a valid address,\n    // but we keep this no-op check to preserve original logic.\n    require(account == address(account));\n\n    address key = account;           // Corresponds to `var_a`\n    uint256 _placeholder = 0x06;     // Corresponds to `var_b`, intentionally unused\n    uint256 balance = _balances[key]; // Corresponds to `var_c`\n\n    return _balances[key];\n}",
    "ground_truth": "function balanceOf(address account) public view returns (uint256) {\r\n        return _balances[account];\r\n    }"
}