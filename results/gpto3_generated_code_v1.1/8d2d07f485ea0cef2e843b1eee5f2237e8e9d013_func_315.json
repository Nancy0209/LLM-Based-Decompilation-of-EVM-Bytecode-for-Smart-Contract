{
    "contract_address": "0x8d2d07f485Ea0cEf2E843b1EEE5F2237e8e9d013",
    "heimdall_input": "function updateSwapTokensAtAmount(uint256 arg0) public returns (bool) {\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        require(!(arg0 > 0x01), \"Swap amount cannot be higher than 1% total supply.\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x32;\n        var_d = 0x5377617020616d6f756e742063616e6e6f742062652068696768657220746861;\n        var_e = 0x6e20312520746f74616c20737570706c792e0000000000000000000000000000;\n        require((arg0 == ((arg0 * totalSupply) / totalSupply)) | !totalSupply);\n        var_f = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_g = 0x11;\n        require(0x64);\n        var_f = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_g = 0x12;\n        swapTokensAtAmount = (arg0 * totalSupply) / 0x64;\n        var_a = 0x01;\n        return 0x01;\n    }",
    "llm_output": "function updateSwapTokensAtAmount(uint256 newAmount) public returns (bool) {\n    require(msg.sender == owner(), \"Ownable: caller is not the owner\");\n\n    // The percentage (newAmount) must not exceed 1%\n    require(!(newAmount > 1), \"Swap amount cannot be higher than 1% total supply.\");\n\n    // Overflow check equivalent to the original SafeMath-style assertion\n    require(\n        newAmount == (newAmount * totalSupply) / totalSupply || totalSupply == 0,\n        \"SafeMath: multiplication overflow\"\n    );\n\n    // Redundant but present in the decompiled logic\u2014must not be removed\n    require(100 > 0);\n    require(100 > 0);\n\n    // Convert the percentage into an absolute token amount\n    swapTokensAtAmount = (newAmount * totalSupply) / 100;\n\n    return true;\n}",
    "ground_truth": "function updateSwapTokensAtAmount(uint256 newAmount) external onlyOwner returns (bool){\r\n  \t    require(newAmount <= 1, \"Swap amount cannot be higher than 1% total supply.\");\r\n  \t    swapTokensAtAmount = totalSupply() * newAmount / 100;\r\n  \t    return true;\r\n  \t}"
}