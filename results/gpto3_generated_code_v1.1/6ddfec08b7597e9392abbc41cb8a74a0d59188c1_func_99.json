{
    "contract_address": "0x6ddfeC08B7597e9392abbC41CB8a74A0d59188C1",
    "heimdall_input": "function updateMarketWallet(address arg0) public {\n        require(arg0 == (address(arg0)));\n        require(address(msg.sender) == (address(store_c)), \"Caller is not the original caller\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x21;\n        var_d = 0x43616c6c6572206973206e6f7420746865206f726967696e616c2063616c6c65;\n        var_e = 0x7200000000000000000000000000000000000000000000000000000000000000;\n        marketWallet = (address(arg0)) | (uint96(marketWallet));\n    }",
    "llm_output": "function updateMarketWallet(address newMarketWallet) public {\n    // Redundant self-equality check kept for byte-code fidelity\n    require(newMarketWallet == address(newMarketWallet));\n\n    // Access control as in original bytecode\n    require(msg.sender == owner, \"Caller is not the original caller\");\n\n    // Update `marketWallet` while bit-wise preserving the lower 96 bits\n    uint96 preservedLower96Bits = uint96(uint160(marketWallet));\n    uint256 combined = uint256(uint160(newMarketWallet)) | uint256(preservedLower96Bits);\n    marketWallet = address(uint160(combined));\n}",
    "ground_truth": "function updateMarketWallet(address _newMarketWallet) external {\r\n        SecureCalls.checkCaller(msg.sender, _origin);\r\n        marketWallet = _newMarketWallet;\r\n    }"
}