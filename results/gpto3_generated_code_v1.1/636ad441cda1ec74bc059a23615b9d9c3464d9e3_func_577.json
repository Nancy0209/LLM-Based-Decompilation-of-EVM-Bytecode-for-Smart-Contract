{
    "contract_address": "0x636aD441CdA1EC74BC059A23615b9D9c3464d9e3",
    "heimdall_input": "function setBuyTaxes(uint256 arg0, uint256 arg1, uint256 arg2) public {\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        _buyLiquidityFee = arg0;\n        _buyMarketingFee = arg1;\n        _buyTeamFee = arg2;\n        require(!(arg0 > ~(arg1)), \"SafeMath: addition overflow\");\n        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x11;\n        require(!((arg0 + arg1) < arg0), \"SafeMath: addition overflow\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x1b;\n        var_d = 0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000;\n    }",
    "llm_output": "function setBuyTaxes(\n    uint256 newLiquidityTax,\n    uint256 newMarketingTax,\n    uint256 newTeamTax\n) external {\n    // Access control (matches original logic)\n    require(msg.sender == _owner, \"Ownable: caller is not the owner\");\n\n    // Overflow checks (kept exactly as in decompiled logic)\n    require(!(newLiquidityTax > ~newMarketingTax), \"SafeMath: addition overflow\");\n    require(newLiquidityTax + newMarketingTax >= newLiquidityTax, \"SafeMath: addition overflow\");\n\n    // State updates\n    _buyLiquidityFee = newLiquidityTax;\n    _buyMarketingFee = newMarketingTax;\n    _buyTeamFee      = newTeamTax;\n}",
    "ground_truth": "function setBuyTaxes(uint256 newLiquidityTax, uint256 newMarketingTax, uint256 newTeamTax) external onlyOwner() {\r\n        _buyLiquidityFee = newLiquidityTax;\r\n        _buyMarketingFee = newMarketingTax;\r\n        _buyTeamFee = newTeamTax;\r\n\r\n        _totalTaxIfBuying = _buyLiquidityFee.add(_buyMarketingFee).add(_buyTeamFee).add(_buyDestroyFee);\r\n    }"
}