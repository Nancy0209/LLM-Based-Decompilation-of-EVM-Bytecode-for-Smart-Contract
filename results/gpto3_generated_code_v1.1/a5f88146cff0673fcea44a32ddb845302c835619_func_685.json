{
    "contract_address": "0xa5f88146Cff0673fCea44A32ddB845302c835619",
    "heimdall_input": "function updateS(uint256 arg0, uint256 arg1, uint256 arg2) public {\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        store_p = arg0;\n        store_q = arg1;\n        store_r = arg2;\n        require(!arg0 > (arg1 + arg0));\n        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x11;\n    }",
    "llm_output": "function updateS(\n    uint256 _devFee,\n    uint256 _liquidityFee,\n    uint256 _marketingFee\n) public {\n    // ownership check (inline, no modifier added)\n    require(msg.sender == owner(), \"Ownable: caller is not the owner\");\n\n    // update sell-side fee settings\n    sellDevFee       = _devFee;\n    sellLiquidityFee = _liquidityFee;\n    sellMarketingFee = _marketingFee;\n\n    // legacy always-true requirement kept to preserve original logic\n    require(!(_devFee > _liquidityFee + _devFee));\n}",
    "ground_truth": "function updateS(\r\n        uint256 _devFee,\r\n        uint256 _liquidityFee,\r\n        uint256 _marketingFee\r\n    ) external onlyOwner {\r\n        sellDevFee = _devFee;\r\n        sellLiquidityFee = _liquidityFee;\r\n        sellMarketingFee = _marketingFee;\r\n        sellTotalFees = sellDevFee + sellLiquidityFee + sellMarketingFee;\r\n        require(sellTotalFees <= 100);\r\n    }"
}