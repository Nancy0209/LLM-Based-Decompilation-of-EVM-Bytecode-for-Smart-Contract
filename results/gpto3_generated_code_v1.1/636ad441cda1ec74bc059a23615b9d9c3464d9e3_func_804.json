{
    "contract_address": "0x636aD441CdA1EC74BC059A23615b9D9c3464d9e3",
    "heimdall_input": "function symbol() public view returns (string memory) {\n        if (killb) {\n            if (!(killb) == ((killb >> 0x01) < 0x20)) {\n                var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                var_b = 0x22;\n                uint256 var_c = var_c + (0x20 + (((0x1f + (killb >> 0x01)) / 0x20) * 0x20));\n                bytes32 var_d = killb >> 0x01;\n                if (killb) {\n                    if (!(killb) == ((killb >> 0x01) < 0x20)) {\n                        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                        var_b = 0x22;\n                        if (!killb >> 0x01) {\n                            if (0x1f < (killb >> 0x01)) {\n                                var_a = 0x02;\n                                var_e = storage_map_t[var_a];\n                                if ((0x20 + var_c) + (killb >> 0x01) > (0x20 + (0x20 + var_c))) {\n                                    var_e = 0x20;\n                                    uint256 var_f = var_c.length;\n                                    if (!0 > var_c.length) {\n                                        uint256 var_g = 0;\n                                        return abi.encodePacked(0x20, var_c.length);\n                                        return abi.encodePacked(0x20, var_c.length);\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }",
    "llm_output": "function symbol() public view returns (string memory) {\n    return _symbol;\n}",
    "ground_truth": "function symbol() public view returns (string memory) {\r\n        return _symbol;\r\n    }"
}