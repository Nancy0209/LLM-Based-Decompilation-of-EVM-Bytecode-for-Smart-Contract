{
    "contract_address": "0x636aD441CdA1EC74BC059A23615b9D9c3464d9e3",
    "heimdall_input": "function setSellDestFee(uint256 arg0) public {\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        _sellDestroyFee = arg0;\n        require(!(_sellLiquidityFee > ~(_sellMarketingFee)), \"SafeMath: addition overflow\");\n        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x11;\n        require(!((_sellLiquidityFee + _sellMarketingFee) < _sellLiquidityFee), \"SafeMath: addition overflow\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x1b;\n        var_d = 0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000;\n    }",
    "llm_output": "function setSellDestFee(uint256 newSellDestroyFee) external onlyOwner {\n    // Update the sell destroy fee\n    _sellDestroyFee = newSellDestroyFee;\n\n    // Overflow checks, preserved from decompiled logic\n    require(\n        _sellLiquidityFee <= type(uint256).max - _sellMarketingFee,\n        \"SafeMath: addition overflow\"\n    );\n    require(\n        _sellLiquidityFee + _sellMarketingFee >= _sellLiquidityFee,\n        \"SafeMath: addition overflow\"\n    );\n}",
    "ground_truth": "function setSellDestFee(uint256 newSellDestroyFee) public onlyOwner {\r\n        _sellDestroyFee = newSellDestroyFee;\r\n        _totalTaxIfSelling = _sellLiquidityFee.add(_sellMarketingFee).add(_sellTeamFee).add(_sellDestroyFee);\r\n    }"
}