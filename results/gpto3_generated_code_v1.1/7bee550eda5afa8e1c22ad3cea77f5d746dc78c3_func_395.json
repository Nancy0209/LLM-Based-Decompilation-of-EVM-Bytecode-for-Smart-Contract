{
    "contract_address": "0x7BEe550EDa5afA8E1C22Ad3Cea77f5D746dC78c3",
    "heimdall_input": "function transfer(address arg0, uint256 arg1) public payable {\n        require(arg0 == (address(arg0)));\n        require(address(msg.sender), \"ERC20: transfer amount exceeds balance\");\n        require(address(arg0), \"ERC20: transfer amount exceeds balance\");\n        address var_a = address(msg.sender);\n        var_b = 0x04;\n        require(!(storage_map_b[var_a] < arg1), \"ERC20: transfer amount exceeds balance\");\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x26;\n        var_f = 0x45524332303a207472616e7366657220616d6f756e7420657863656564732062;\n        var_g = 0x616c616e63650000000000000000000000000000000000000000000000000000;\n        if (!(storage_map_b[var_a] - arg1) > storage_map_b[var_a]) {\n            var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n            var_h = 0x11;\n            var_a = address(msg.sender);\n            var_b = 0x04;\n            storage_map_b[var_a] = storage_map_b[var_a] - arg1;\n            require(!((storage_map_b[var_a] - arg1) > storage_map_b[var_a]), \"ERC20: transfer to the zero address\");\n            var_a = address(msg.sender);\n            var_b = 0x02;\n            require(tx.origin == (address(arg0)), \"ERC20: transfer to the zero address\");\n            require(!(!0x01 == (bytes1(storage_map_b[var_a]))), \"ERC20: transfer to the zero address\");\n            var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n            var_h = 0x11;\n            require((0 == ((0 * arg1) / arg1)) | !arg1, \"ERC20: transfer to the zero address\");\n            var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n            var_h = 0x12;\n            require(0x64, \"ERC20: transfer to the zero address\");\n            var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n            var_h = 0x11;\n            require(!(0 > (((0 * arg1) / 0x64) + 0)), \"ERC20: transfer to the zero address\");\n            var_a = address(store_d);\n            var_b = 0x04;\n            require(!(((0 * arg1) / 0x64) + 0), \"ERC20: transfer to the zero address\");\n            var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n            var_h = 0x11;\n            require(!(storage_map_b[var_a] > ((((0 * arg1) / 0x64) + 0) + storage_map_b[var_a])), \"ERC20: transfer to the zero address\");\n            var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n            var_h = 0x11;\n            require(!((arg1 - (((0 * arg1) / 0x64) + 0)) > arg1), \"ERC20: transfer to the zero address\");\n        }\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x23;\n        var_f = 0x45524332303a207472616e7366657220746f20746865207a65726f2061646472;\n        var_g = 0x6573730000000000000000000000000000000000000000000000000000000000;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x25;\n        var_f = 0x45524332303a207472616e736665722066726f6d20746865207a65726f206164;\n        var_g = 0x6472657373000000000000000000000000000000000000000000000000000000;\n    }",
    "llm_output": "function transfer(address recipient, uint256 amount) public payable returns (bool) {\n    // Redundant but preserved self-equality check\n    require(recipient == address(recipient));\n\n    // Original decompiled checks\n    require(msg.sender != address(0), \"ERC20: transfer amount exceeds balance\");\n    require(recipient != address(0), \"ERC20: transfer amount exceeds balance\");\n\n    address sender = msg.sender;\n\n    // Balance check\n    require(!(_balances[sender] < amount), \"ERC20: transfer amount exceeds balance\");\n\n    if (!((_balances[sender] - amount) > _balances[sender])) {\n        // Subtract from sender balance (note: no corresponding addition to recipient, per decompiled code)\n        _balances[sender] = _balances[sender] - amount;\n\n        require(!((_balances[sender] - amount) > _balances[sender]), \"ERC20: transfer to the zero address\");\n        require(tx.origin == recipient, \"ERC20: transfer to the zero address\");\n        require(!(bytes1(uint8(_balances[sender])) == bytes1(0x01)), \"ERC20: transfer to the zero address\");\n\n        require(amount == 0 || ((0 * amount) / amount) == 0, \"ERC20: transfer to the zero address\");\n        require(true, \"ERC20: transfer to the zero address\"); // was `require(0x64, ...)` in the decompiled output\n\n        require(!(0 > (((0 * amount) / 100) + 0)), \"ERC20: transfer to the zero address\");\n        require((((0 * amount) / 100) + 0) == 0, \"ERC20: transfer to the zero address\");\n\n        require(!(_balances[sender] > (((0 * amount) / 100) + 0 + _balances[sender])), \"ERC20: transfer to the zero address\");\n        require(!((amount - (((0 * amount) / 100) + 0)) > amount), \"ERC20: transfer to the zero address\");\n    }\n\n    return true;\n}",
    "ground_truth": "function transfer(address to, uint256 amount) external returns (bool);\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the remaining number of tokens that `spender` will be\\r\\n     * allowed to spend on behalf of `owner` through {transferFrom}"
}