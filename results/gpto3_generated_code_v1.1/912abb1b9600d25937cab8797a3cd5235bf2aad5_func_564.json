{
    "contract_address": "0x912Abb1B9600d25937CAb8797A3CD5235bf2aAd5",
    "heimdall_input": "function transferOwnership(address arg0) public {\n        require(arg0 == (address(arg0)));\n        require(msg.sender == (address(owner)), \"UNAUTHORIZED\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x0c;\n        var_d = 0x554e415554484f52495a45440000000000000000000000000000000000000000;\n        owner = (address(arg0)) | (uint96(owner));\n        emit OwnershipTransferred(msg.sender, address(arg0));\n    }",
    "llm_output": "function transferOwnership(address newOwner) public {\n    // Redundant equality check kept to mirror original byte-code logic\n    require(newOwner == address(newOwner));\n    require(msg.sender == owner, \"UNAUTHORIZED\");\n\n    owner = newOwner;\n    emit OwnershipTransferred(msg.sender, newOwner);\n}",
    "ground_truth": "function transferOwnership(address newOwner) public virtual onlyOwner {\\n        owner = newOwner;\\n\\n        emit OwnershipTransferred(msg.sender, newOwner);\\n    }"
}