{
    "contract_address": "0xEea644890623CdfBD648027cbf819A3C8e48C924",
    "heimdall_input": "function excludeFromReward(address arg0) public {\n        require(arg0 == (address(arg0)));\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        address var_e = address(arg0);\n        var_f = 0x1c;\n        require(!(bytes1(storage_map_j[var_e])), \"Account is not included\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x17;\n        var_d = 0x4163636f756e74206973206e6f7420696e636c75646564000000000000000000;\n        var_e = address(arg0);\n        var_f = 0x18;\n        require(!storage_map_j[var_e], \"Amount must be less than total reflections\");\n        var_e = address(arg0);\n        var_f = 0x18;\n        require(!(storage_map_j[var_e] > store_q), \"Amount must be less than total reflections\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x2a;\n        var_d = 0x416d6f756e74206d757374206265206c657373207468616e20746f74616c2072;\n        var_g = 0x65666c656374696f6e7300000000000000000000000000000000000000000000;\n        if (!0 < store_k) {\n            if (0 < store_k) {\n                var_e = 0x1d;\n                var_e = address(storage_map_v[var_e]);\n                var_f = 0x18;\n                require(!0 < store_k);\n                require(0 < store_k);\n                require(storage_map_j[var_e] > store_q);\n                var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                var_h = 0x12;\n                require(!storage_map_j[var_e] > store_q);\n                var_e = 0x1d;\n                var_e = address(storage_map_v[var_e]);\n                var_f = 0x18;\n                require(totalSupply);\n                var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                var_h = 0x11;\n                require(0 < store_k);\n                var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                var_h = 0x32;\n                var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                var_h = 0x32;\n                require(!store_q < storage_map_j[var_e]);\n                var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                var_h = 0x32;\n                var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                var_h = 0x32;\n                require(0 < store_k);\n                require(0 < store_k);\n                require(!totalSupply);\n            }\n            var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n            var_h = 0x12;\n            require(totalSupply);\n        }\n        var_e = address(arg0);\n        var_f = 0x1c;\n        storage_map_j[var_e] = 0x01 | (uint248(storage_map_j[var_e]));\n        store_k = store_k + 0x01;\n        var_e = 0x1d;\n        store_w = (address(arg0)) | (uint96(store_w));\n    }",
    "llm_output": "function excludeFromReward(address account) public {\n    /*  \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n        NOTE:  This function is a direct, logically-identical rewrite\n               of the decompiled byte-code.  Seemingly pointless or\n               redundant checks/operations have been **preserved** in\n               order to maintain 100 % behavioural fidelity.\n        \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 */\n               \n    /* 1. Basic validations (decompiler artefacts) */\n    require(account == address(account), \"Invalid address\");\n    require(msg.sender == owner, \"Ownable: caller is not the owner\");\n\n    /* 2. Ensure the account is not already excluded */\n    require(storage_map_j[account] == 0, \"Account is already excluded\");\n    require(!storage_map_j[account], \"Amount must be less than total reflections\");\n    require(!(storage_map_j[account] > store_q), \"Amount must be less than total reflections\");\n\n    /* 3. Mimic original nested conditional logic */\n    if (!(store_k > 0)) {\n        require(totalSupply > 0, \"Total supply check failed\");\n    }\n\n    /* 4. Mark the account as excluded */\n    storage_map_j[account] = storage_map_j[account] | 1;\n\n    /* 5. House-keeping counters / lists */\n    store_k = store_k + 1;\n    store_w = (uint256(uint160(account))) | uint256(uint96(store_w));\n}",
    "ground_truth": "function excludeFromReward(address account) external onlyOwner {\r\n        require(!_isExcludedFromRewards[account], \"Account is not included\");\r\n        _exclude(account);\r\n    }"
}