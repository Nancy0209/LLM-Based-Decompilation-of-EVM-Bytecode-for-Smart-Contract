{
    "contract_address": "0x6ddfeC08B7597e9392abbC41CB8a74A0d59188C1",
    "heimdall_input": "function getBaseTokenReserve(address arg0) public returns (uint112) {\n        require(arg0 == (address(arg0)));\n        var_a = 0x0902f1ac00000000000000000000000000000000000000000000000000000000;\n        (bool success, bytes memory ret0) = address(store_h / 0x01).getReserves(var_b); // staticcall\n        uint256 var_c = var_c + (uint248(ret0.length + 0x1f));\n        require(!((var_c + ret0.length) - var_c) < 0x60);\n        require(var_c.length == (uint112(var_c.length)));\n        require(var_d == (uint112(var_d)));\n        require(var_e == (uint32(var_e)));\n        var_f = 0x0dfe168100000000000000000000000000000000000000000000000000000000;\n        (bool success, bytes memory ret0) = address(store_h / 0x01).token0(var_g); // staticcall\n        var_c = var_c + (uint248(ret0.length + 0x1f));\n        require(!((var_c + ret0.length) - var_c) < 0x20);\n        require(var_c.length == (address(var_c.length)));\n        require(address(var_c.length) == (address(arg0)));\n        uint112 var_h = uint112(var_d);\n        return uint112(var_d);\n        var_h = uint112(var_c.length);\n        return uint112(var_c.length);\n    }",
    "llm_output": "function getBaseTokenReserve(address baseToken) public view returns (uint256) {\n    // Redundant self-check preserved from decompiled code\n    require(baseToken == address(baseToken));\n\n    IUniswapV2Pair pair = IUniswapV2Pair(pairAddress);\n\n    (uint112 reserve0, uint112 reserve1, ) = pair.getReserves();\n    address token0 = pair.token0();\n\n    // Check preserved from decompiled code\n    require(token0 == baseToken);\n\n    return uint256(reserve0);\n}",
    "ground_truth": "function getBaseTokenReserve(address token) public view returns (uint256) {\r\n        (uint112 reserve0, uint112 reserve1,) = _pair.getReserves();\r\n        uint256 baseTokenReserve = (_pair.token0() == token) ? uint256(reserve0) : uint256(reserve1);\r\n        return baseTokenReserve;\r\n    }"
}