{
    "contract_address": "0xF3B054a111b9fd6fc5289F473e456531ee89Ba1c",
    "heimdall_input": "function isBot(address arg0) public view returns (bool) {\n        require(arg0 == (address(arg0)));\n        address var_a = address(arg0);\n        var_b = 0x04;\n        address var_c = !(!bytes1(storage_map_b[var_a]));\n        return !(!bytes1(storage_map_b[var_a]));\n    }",
    "llm_output": "function isBot(address account) public view returns (bool) {\n    // Redundant safety check preserved from decompiled code\n    require(account == address(account));\n\n    // No-op variables kept to maintain 1:1 logic with decompiled output\n    address _placeholderAddress = account;\n    uint256 _placeholderValue = 0x04;\n\n    // Original logic: returns true if the address is flagged as a bot\n    return _isBot[_placeholderAddress];\n}",
    "ground_truth": "function isBot(address a) public view returns (bool){\r\n      return bots[a];\r\n    }"
}