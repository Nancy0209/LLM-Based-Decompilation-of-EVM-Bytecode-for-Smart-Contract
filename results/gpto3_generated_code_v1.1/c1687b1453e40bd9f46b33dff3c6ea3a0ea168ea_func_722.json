{
    "contract_address": "0xC1687b1453E40Bd9F46b33dFf3c6ea3A0Ea168eA",
    "heimdall_input": "function transfer(address arg0, uint256 arg1) public view {\n        require(arg0 == (address(arg0)));\n        require(arg1 == arg1);\n        require(address(msg.sender) - 0, \"Blacklisted\");\n        require(address(arg0) - 0, \"Blacklisted\");\n        address var_a = address(arg0);\n        var_b = 0x08;\n        require(!(!bytes1(storage_map_b[var_a] / 0x01)), \"Blacklisted\");\n        require(!(bytes1(storage_map_b[var_a] / 0x01)), \"Blacklisted\");\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_d = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        var_f = 0x0b;\n        var_g = 0x426c61636b6c6973746564000000000000000000000000000000000000000000;\n        require(!(!(address(msg.sender)) == (address(owner / 0x01))), \"Forbid\");\n        require(!(!(address(arg0)) == (address(owner / 0x01))), \"Forbid\");\n        var_a = address(arg0);\n        uint256 var_b = 0;\n        require(!(storage_map_b[var_a] > (storage_map_b[var_a] + arg1)), \"Forbid\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_h = 0x11;\n        require(!((storage_map_b[var_a] + arg1) > maxHoldingAmount), \"Forbid\");\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        var_f = 0x06;\n        var_g = 0x466f726269640000000000000000000000000000000000000000000000000000;\n        require(!(maxTxAmount > 0), \"Exceeds max transaction amount\");\n        require(!(!(address(msg.sender)) == (address(owner / 0x01))), \"Exceeds max transaction amount\");\n        require(!(!(address(arg0)) == (address(owner / 0x01))), \"Exceeds max transaction amount\");\n        require(!(arg1 > maxTxAmount), \"Exceeds max transaction amount\");\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        var_f = 0x1e;\n        var_g = 0x45786365656473206d6178207472616e73616374696f6e20616d6f756e740000;\n        var_a = address(msg.sender);\n        var_b = 0;\n        require(!(storage_map_b[var_a] < arg1), \"ERC20: transfer amount exceeds balance\");\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        var_f = 0x26;\n        var_g = 0x45524332303a207472616e7366657220616d6f756e7420657863656564732062;\n        var_i = 0x616c616e63650000000000000000000000000000000000000000000000000000;\n        require(!((storage_map_b[var_a] - arg1) > storage_map_b[var_a]), \"ERC20: transfer to the zero address\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_h = 0x11;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        var_f = 0x23;\n        var_g = 0x45524332303a207472616e7366657220746f20746865207a65726f2061646472;\n        var_i = 0x6573730000000000000000000000000000000000000000000000000000000000;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        var_f = 0x25;\n        var_g = 0x45524332303a207472616e736665722066726f6d20746865207a65726f206164;\n        var_i = 0x6472657373000000000000000000000000000000000000000000000000000000;\n    }",
    "llm_output": "function transfer(address recipient, uint256 amount) public returns (bool) {\n    /* ---------------------------------------------------------------------- */\n    /*  Basic zero-address / blacklist checks                                 */\n    /* ---------------------------------------------------------------------- */\n    require(msg.sender != address(0),          \"Blacklisted\");\n    require(recipient  != address(0),          \"Blacklisted\");\n    require(!blacklists[msg.sender],           \"Blacklisted\");\n    require(!blacklists[recipient],            \"Blacklisted\");\n\n    /* ---------------------------------------------------------------------- */\n    /*  \u201cForbid\u201d rules                                                        */\n    /* ---------------------------------------------------------------------- */\n    require(!(msg.sender   == _owner),         \"Forbid\");\n    require(!(recipient    == _owner),         \"Forbid\");\n    require(!(_balances[recipient] > _balances[recipient] + amount), \"Forbid\");\n    require(!((_balances[recipient] + amount) > maxHoldingAmount),   \"Forbid\");\n\n    /* ---------------------------------------------------------------------- */\n    /*  Max-transaction checks                                                */\n    /* ---------------------------------------------------------------------- */\n    require(!(maxTxAmount > 0),                \"Exceeds max transaction amount\");\n    require(!(msg.sender  == _owner),          \"Exceeds max transaction amount\");\n    require(!(recipient   == _owner),          \"Exceeds max transaction amount\");\n    require(!(amount      > maxTxAmount),      \"Exceeds max transaction amount\");\n\n    /* ---------------------------------------------------------------------- */\n    /*  Balance & underflow safeguards                                        */\n    /* ---------------------------------------------------------------------- */\n    require(_balances[msg.sender] >= amount,   \"ERC20: transfer amount exceeds balance\");\n    require(!((_balances[msg.sender] - amount) > _balances[msg.sender]),\n                                                \"ERC20: transfer to the zero address\");\n    require(recipient != address(0),           \"ERC20: transfer to the zero address\");\n    require(msg.sender != address(0),          \"ERC20: transfer from the zero address\");\n\n    /* ---------------------------------------------------------------------- */\n    /*  State updates                                                         */\n    /* ---------------------------------------------------------------------- */\n    _balances[msg.sender] -= amount;\n    _balances[recipient]  += amount;\n\n    emit Transfer(msg.sender, recipient, amount);\n    return true;\n}",
    "ground_truth": "function transfer(\r\n        address recipient,\r\n        uint256 amount\r\n    ) public virtual override returns (bool) {\r\n        _transfer(_msgSender(), recipient, amount);\r\n        return true;\r\n    }"
}