{
    "contract_address": "0x30045aA941FF9Be1d2D3603A75207C07860d4156",
    "heimdall_input": "function setMaxWalletAmount(uint256 arg0) public {\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        require((arg0 == ((arg0 * totalSupply) / totalSupply)) | !totalSupply);\n        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x11;\n        require(0x2710);\n        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x12;\n        maxWalletAmount = (arg0 * totalSupply) / 0x2710;\n    }",
    "llm_output": "function setMaxWalletAmount(uint256 percent) external {\n    // Only owner can call\n    require(msg.sender == owner, \"Ownable: caller is not the owner\");\n\n    // Overflow check matching the original logic\n    require(\n        totalSupply == 0 || (percent * totalSupply) / totalSupply == percent\n    );\n\n    // Constant-truthy require kept for perfect logical fidelity\n    require(10000 != 0);\n\n    // Update the max wallet amount (percent is in basis points: 10000 = 100%)\n    maxWalletAmount = (percent * totalSupply) / 10000;\n}",
    "ground_truth": "function setMaxWalletAmount(uint256 percent) public virtual onlyOwner {\\r\\n        maxWalletAmount = (totalSupply() * percent) / TAX_DIVISOR;\\r\\n    }"
}