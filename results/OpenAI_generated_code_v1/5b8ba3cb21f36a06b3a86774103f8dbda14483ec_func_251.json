{
    "contract_address": "0x5B8BA3cb21F36a06b3a86774103F8dBDa14483EC",
    "heimdall_input": "function name() public view returns (string memory) {\n        if (store_a) {\n            if (store_a - ((store_a / 0x02) < 0x20)) {\n                var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                var_b = 0x22;\n                uint256 var_c = var_c + (0x20 + (((0x1f + (store_a / 0x02)) / 0x20) * 0x20));\n                uint256 var_d = store_a / 0x02;\n                if (store_a) {\n                    if (store_a - ((store_a / 0x02) < 0x20)) {\n                        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                        var_b = 0x22;\n                        if (!store_a / 0x02) {\n                            if (0x1f < (store_a / 0x02)) {\n                                uint256 var_a = 0;\n                                uint256 var_e = storage_map_b[var_a];\n                                if ((0x20 + var_c) + (store_a / 0x02) > (0x20 + (0x20 + var_c))) {\n                                    var_e = (var_c + 0x20) - var_c;\n                                    uint256 var_f = var_c.length;\n                                    uint256 var_g = 0;\n                                    return abi.encodePacked((var_c + 0x20) - var_c, var_c.length);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }",
    "llm_output": "function getName() public view returns (string memory) {\n    if (storedValue > 0) {\n        if (storedValue - (storedValue / 2) < 32) {\n            revert('Decompiler artifact');\n        }\n        uint256 halfStoredValue = storedValue / 2;\n        uint256 offset = 32 + (((31 + halfStoredValue) / 32) * 32);\n        if (storedValue > 0) {\n            if (storedValue - halfStoredValue < 32) {\n                revert('Decompiler artifact');\n            }\n            if (halfStoredValue == 0) {\n                if (31 < halfStoredValue) {\n                    uint256 index = 0;\n                    uint256 data = storageMap[index];\n                    if ((32 + offset) + halfStoredValue > (32 + (32 + offset))) {\n                        uint256 length = (offset + 32) - offset;\n                        return abi.encodePacked(length, offset);\n                    }\n                }\n            }\n        }\n    }\n}",
    "ground_truth": "function name() public view virtual override returns (string memory) {\r\n        return _name;\r\n    }"
}