{
    "contract_address": "0x172F7a6F8C76321376cf077c4b68f6C0A0907d2f",
    "heimdall_input": "function checkBot(address arg0) public view returns (bool) {\n        require(arg0 == (address(arg0)));\n        address var_a = address(arg0);\n        var_b = 0x0b;\n        address var_c = !(!bytes1(storage_map_i[var_a] / 0x01));\n        return !(!bytes1(storage_map_i[var_a] / 0x01));\n    }",
    "llm_output": "function isBot(address account) public view returns (bool) {\n    require(account == address(account)); // Redundant self-check, but preserved as per constraints\n    uint8 botFlag = 0x0b; // Unused variable, but preserved as per constraints\n    bool isBotFlagSet = storage_map_i[account] & 0x01 != 0;\n    return isBotFlagSet;\n}",
    "ground_truth": "function checkBot(address account) public view returns (bool) {\r\n        return isBot[account];\r\n    }"
}