{
    "contract_address": "0xB9FB64018E475BBCF128E391E62274599c4D848C",
    "heimdall_input": "function baseURI() public view returns (bytes memory) {\n        if (store_k) {\n            if (store_k - ((store_k >> 0x01) < 0x20)) {\n                var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                var_b = 0x22;\n                uint256 var_c = var_c + (0x20 + (((0x1f + (store_k >> 0x01)) / 0x20) * 0x20));\n                bytes32 var_d = store_k >> 0x01;\n                if (store_k) {\n                    if (store_k - ((store_k >> 0x01) < 0x20)) {\n                        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                        var_b = 0x22;\n                        if (!store_k >> 0x01) {\n                            if (0x1f < (store_k >> 0x01)) {\n                                var_a = 0x0b;\n                                var_e = storage_map_b[var_a];\n                                if ((0x20 + var_c) + (store_k >> 0x01) > (0x20 + (0x20 + var_c))) {\n                                    var_e = 0x20;\n                                    uint256 var_f = var_c.length;\n                                    uint256 var_g = 0;\n                                    return abi.encodePacked(0x20, var_c.length);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }",
    "llm_output": "function getBaseURI() public view returns (bytes memory) {\n    if (store_k != 0) {\n        if (store_k - ((store_k >> 1) < 32)) {\n            uint256 errorCode = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n            uint256 errorLength = 0x22;\n            uint256 offset = 32 + (((31 + (store_k >> 1)) / 32) * 32);\n            bytes32 shiftedStoreK = store_k >> 1;\n            if (store_k != 0) {\n                if (store_k - ((store_k >> 1) < 32)) {\n                    errorCode = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                    errorLength = 0x22;\n                    if (shiftedStoreK == 0) {\n                        if (31 < (store_k >> 1)) {\n                            uint256 index = 0x0b;\n                            bytes32 storageValue = storage_map_b[index];\n                            if ((32 + offset) + (store_k >> 1) > (32 + (32 + offset))) {\n                                storageValue = 0x20;\n                                uint256 length = offset.length;\n                                uint256 zero = 0;\n                                return abi.encodePacked(0x20, offset.length);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n    revert('Decompiler artifact');\n}",
    "ground_truth": "function baseURI() external view override returns (string memory) {\\n        return _baseURI();\\n    }"
}