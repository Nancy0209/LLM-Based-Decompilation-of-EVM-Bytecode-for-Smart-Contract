{
    "contract_address": "0x6BC7d0c26885D7c1C384c3aF3CA6214D628B2712",
    "heimdall_input": "function updateMarketingWallet(address arg0) public {\n        require(arg0 == (address(arg0)));\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        emit marketingWalletUpdated(address(arg0), address(store_e));\n        store_e = (address(arg0)) | (uint96(store_e));\n    }",
    "llm_output": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ncontract MarketingWalletManager {\n    address public owner;\n    address public marketingWallet;\n\n    event MarketingWalletUpdated(address indexed oldWallet, address indexed newWallet);\n\n    constructor() {\n        owner = msg.sender;\n    }\n\n    modifier onlyOwner() {\n        require(msg.sender == owner, \"Ownable: caller is not the owner\");\n        _;\n    }\n\n    function updateMarketingWallet(address newWallet) external onlyOwner {\n        require(newWallet != address(0), \"Invalid address: new wallet cannot be the zero address\");\n\n        address oldWallet = marketingWallet;\n        marketingWallet = newWallet;\n\n        emit MarketingWalletUpdated(oldWallet, newWallet);\n    }\n}\n```\n\n### Explanation of Changes:\n1. **Improved Naming**: \n   - Renamed `arg0` to `newWallet` for clarity.\n   - Renamed `store_e` to `marketingWallet` to reflect its purpose.\n\n2. **Added Constructor**: \n   - The `owner` is initialized in the constructor to the deployer of the contract.\n\n3. **Added `onlyOwner` Modifier**: \n   - Simplified the ownership check using a modifier.\n\n4. **Removed Redundant Code**: \n   - Removed unnecessary variables (`var_a`, `var_b`, `var_c`, `var_d`) and replaced them with meaningful logic.\n   - Removed redundant checks like `arg0 == address(arg0)`.\n\n5. **Event Emission**: \n   - Added an event `MarketingWalletUpdated` to log changes to the marketing wallet.\n\n6. **Validation**: \n   - Added a check to ensure the new wallet address is not the zero address.\n\nThis refactored code is clean, readable, and adheres to Solidity best practices.",
    "ground_truth": "function updateMarketingWallet(address newMarketingWallet) external onlyOwner {\\n        emit marketingWalletUpdated(newMarketingWallet, marketingWallet);\\n        marketingWallet = newMarketingWallet;\\n    }"
}