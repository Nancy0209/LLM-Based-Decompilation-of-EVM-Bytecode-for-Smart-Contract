{
    "contract_address": "0xaCb8531Fb60d23846f82b8911F28b44D83e2554d",
    "heimdall_input": "function setfinalselltax(uint256 arg0) public {\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        _finalSellTax = arg0;\n        require(!(arg0 > 0x1e), \"less than 30%\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x0d;\n        var_d = 0x6c657373207468616e2033302500000000000000000000000000000000000000;\n    }",
    "llm_output": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ncontract TaxManager {\n    address public owner;\n    uint256 private _finalSellTax;\n\n    event FinalSellTaxUpdated(uint256 newTax);\n\n    constructor() {\n        owner = msg.sender;\n    }\n\n    modifier onlyOwner() {\n        require(msg.sender == owner, \"Ownable: caller is not the owner\");\n        _;\n    }\n\n    /**\n     * @dev Sets the final sell tax percentage.\n     * @param taxPercentage The new tax percentage to be set. Must be less than or equal to 30%.\n     */\n    function setFinalSellTax(uint256 taxPercentage) public onlyOwner {\n        require(taxPercentage <= 30, \"Tax percentage must be less than or equal to 30%\");\n        _finalSellTax = taxPercentage;\n\n        emit FinalSellTaxUpdated(taxPercentage);\n    }\n\n    /**\n     * @dev Returns the current final sell tax percentage.\n     */\n    function getFinalSellTax() public view returns (uint256) {\n        return _finalSellTax;\n    }\n}\n```\n\n### Key Improvements:\n1. **Readable Naming**: Renamed variables and function names to be descriptive (`setfinalselltax` \u2192 `setFinalSellTax`, `_finalSellTax` for clarity).\n2. **Access Control**: Added a `modifier` (`onlyOwner`) to handle ownership checks cleanly.\n3. **Error Messages**: Simplified and clarified error messages.\n4. **Event Emission**: Added an event (`FinalSellTaxUpdated`) to log changes to the tax percentage.\n5. **Getter Function**: Added a `getFinalSellTax` function to allow users to query the current tax percentage.\n6. **Constructor**: Set the `owner` in the constructor for initialization.\n7. **Modern Solidity Practices**: Used `pragma solidity ^0.8.0` to leverage the latest Solidity features, including built-in overflow checks.\n\nThis refactored code is clean, readable, and adheres to Solidity best practices.",
    "ground_truth": "function setfinalselltax(uint256 finalselltax) external onlyOwner() {\r\n        _finalSellTax = finalselltax;\r\n        require(_finalSellTax<=30, \"less than 30%\");\r\n    }"
}