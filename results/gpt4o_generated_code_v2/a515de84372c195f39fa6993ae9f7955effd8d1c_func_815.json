{
    "contract_address": "0xa515dE84372C195F39fa6993AE9f7955EFFd8d1c",
    "heimdall_input": "function removeLimits() public {\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        if (0x08) {\n            if ((0x01 == 0x01) | !0x0e69870b00) {\n                var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                var_f = 0x11;\n                _maxTxAmount = 0x0e69870b00;\n                if (0x08) {\n                    if ((0x01 == 0x01) | !0x0e69870b00) {\n                        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                        var_f = 0x11;\n                        _maxWalletSize = 0x0e69870b00;\n                        transferDelayEnabled = uint248(transferDelayEnabled);\n                        _reduceSellTaxAt = 0x14;\n                        _reduceBuyTaxAt = 0x14;\n                        if (0x08) {\n                            if ((0x01 == 0x01) | !0x0e69870b00) {\n                                var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                var_f = 0x11;\n                                var_a = 0x0e69870b00;\n                                emit MaxTxAmountUpdated(0x0e69870b00);\n                                if (0x0a) {\n                                    if (0x0a == 0x01) {\n                                        if (0x0a == 0x02) {\n                                            if (!0x08 > 0xff) {\n                                                var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                                var_f = 0x11;\n                                                if (!((0x0a < 0x0b) & (0x08 < 0x4e)) | ((0x0a < 0x0133) & (0x08 < 0x20))) {\n                                                    if (!0x08 > 0x01) {\n                                                        if (!0x01 > 0x1999999999999999999999999999999999999999999999999999999999999999) {\n                                                            var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                                            var_f = 0x11;\n                                                            if (!0x0a > 0x1999999999999999999999999999999999999999999999999999999999999999) {\n                                                                var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                                                var_f = 0x11;\n                                                                if (!0) {\n                                                                }\n                                                            }\n                                                        }\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }",
    "llm_output": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ncontract TokenContract {\n    address public owner;\n    uint256 public maxTxAmount;\n    uint256 public maxWalletSize;\n    bool public transferDelayEnabled;\n    uint256 public reduceSellTaxAt;\n    uint256 public reduceBuyTaxAt;\n\n    event MaxTxAmountUpdated(uint256 newMaxTxAmount);\n\n    modifier onlyOwner() {\n        require(msg.sender == owner, \"Ownable: caller is not the owner\");\n        _;\n    }\n\n    constructor() {\n        owner = msg.sender;\n        maxTxAmount = 1e10; // Example value, adjust as needed\n        maxWalletSize = 1e10; // Example value, adjust as needed\n        transferDelayEnabled = false;\n        reduceSellTaxAt = 20; // Example value, adjust as needed\n        reduceBuyTaxAt = 20; // Example value, adjust as needed\n    }\n\n    function removeLimits() external onlyOwner {\n        // Remove transaction limits\n        maxTxAmount = type(uint256).max;\n        maxWalletSize = type(uint256).max;\n\n        // Disable transfer delay\n        transferDelayEnabled = false;\n\n        // Reset tax reduction thresholds\n        reduceSellTaxAt = 0;\n        reduceBuyTaxAt = 0;\n\n        emit MaxTxAmountUpdated(maxTxAmount);\n    }\n}\n```\n\n### Explanation of Refactoring:\n1. **Improved Naming**: Variable names like `var_a`, `var_b`, etc., were replaced with meaningful names such as `maxTxAmount`, `maxWalletSize`, etc., to improve readability and clarity.\n2. **Removed Redundant Code**: The decompiled code contained unnecessary checks and repetitive logic. These were removed to simplify the function.\n3. **Added Constructor**: A constructor was added to initialize the contract's state variables.\n4. **Used `type(uint256).max`**: Instead of hardcoding large numbers, `type(uint256).max` was used to represent the maximum possible value for `maxTxAmount` and `maxWalletSize`.\n5. **Added Modifier**: The `onlyOwner` modifier was introduced to enforce ownership checks cleanly.\n6. **Event Emission**: The `MaxTxAmountUpdated` event was retained to notify changes to `maxTxAmount`.\n7. **Clean Syntax**: The code was rewritten to follow Solidity best practices and modern syntax.\n\nThis refactored code is clean, readable, and ready for compilation.",
    "ground_truth": "function removeLimits() external onlyOwner{\r\n        _maxTxAmount = _tTotal;\r\n        _maxWalletSize=_tTotal;\r\n        transferDelayEnabled=false;\r\n        _reduceSellTaxAt=20;\r\n        _reduceBuyTaxAt=20;\r\n        emit MaxTxAmountUpdated(_tTotal);\r\n    }"
}