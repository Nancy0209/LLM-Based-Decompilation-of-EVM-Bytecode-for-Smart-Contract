{
    "contract_address": "0x6F277374E9329ff8a1DeE8e064929892b69C535C",
    "heimdall_input": "function isBot(address arg0) public view returns (bool) {\n        require(arg0 == (address(arg0)));\n        address var_a = address(arg0);\n        var_b = 0x05;\n        address var_c = !(!bytes1(storage_map_b[var_a]));\n        return !(!bytes1(storage_map_b[var_a]));\n    }",
    "llm_output": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ncontract BotChecker {\n    mapping(address => bool) private botStatus;\n\n    function isBot(address account) public view returns (bool) {\n        require(account != address(0), \"Invalid address\");\n        return botStatus[account];\n    }\n}",
    "ground_truth": "function isBot(address a) public view returns (bool){\r\n      return bots[a];\r\n    }"
}