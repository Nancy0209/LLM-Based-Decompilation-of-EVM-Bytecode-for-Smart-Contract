{
    "contract_address": "0x6f87c7FAc982eB280d81865547aB31fD209b1637",
    "heimdall_input": "function burn(uint256 arg0) public {\n        require(address(msg.sender), \"ERC20: burn amount exceeds balance\");\n        address var_a = address(msg.sender);\n        uint256 var_b = 0;\n        require(!(storage_map_e[var_a] < arg0), \"ERC20: burn amount exceeds balance\");\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x22;\n        var_f = 0x45524332303a206275726e20616d6f756e7420657863656564732062616c616e;\n        var_g = 0x6365000000000000000000000000000000000000000000000000000000000000;\n        var_a = address(msg.sender);\n        var_b = 0;\n        storage_map_e[var_a] = storage_map_e[var_a] - arg0;\n        totalSupply = totalSupply - arg0;\n        uint256 var_c = arg0;\n        emit Transfer(address(msg.sender), 0, arg0);\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x21;\n        var_f = 0x45524332303a206275726e2066726f6d20746865207a65726f20616464726573;\n        var_g = 0x7300000000000000000000000000000000000000000000000000000000000000;\n    }",
    "llm_output": "pragma solidity ^0.8.0;\n\ncontract ERC20Token {\n    mapping(address => uint256) private balances;\n    uint256 private totalSupply;\n\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    function burn(uint256 amount) public {\n        address sender = msg.sender;\n        \n        require(balances[sender] >= amount, \"ERC20: burn amount exceeds balance\");\n        \n        balances[sender] -= amount;\n        totalSupply -= amount;\n        \n        emit Transfer(sender, address(0), amount);\n    }\n}",
    "ground_truth": "function burn(uint256 amount) public virtual {\\n        _burn(_msgSender(), amount);\\n    }"
}