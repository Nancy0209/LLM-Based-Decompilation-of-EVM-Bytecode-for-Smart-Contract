{
    "contract_address": "0x90B22290c39A7D7451fb9B7922cB11e701308E97",
    "heimdall_input": "function removeLimits() public {\n        require(address(owner / 0x01) == (address(msg.sender)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_b = ((0x04 + var_c) + 0x20) - (0x04 + var_c);\n        var_d = 0x20;\n        var_e = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        if (0x12) {\n            if (!0xe8d4a51000 | (0x01 == 0x01)) {\n                var_f = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                var_g = 0x11;\n                _maxTxAmount = 0xe8d4a51000;\n                if (0x12) {\n                    if (!0xe8d4a51000 | (0x01 == 0x01)) {\n                        var_f = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                        var_g = 0x11;\n                        _maxWalletSize = 0xe8d4a51000;\n                        transferDelayEnabled = (0 * 0x01) | (uint248(transferDelayEnabled));\n                        if (0x12) {\n                            if (!0xe8d4a51000 | (0x01 == 0x01)) {\n                                var_f = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                var_g = 0x11;\n                                var_a = 0xe8d4a51000;\n                                emit MaxTxAmountUpdated(0xe8d4a51000);\n                                if (0x0a) {\n                                    if (0x0a == 0x01) {\n                                        if (0x0a == 0x02) {\n                                            if (!0x12 > 0xff) {\n                                                var_f = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                                var_g = 0x11;\n                                                if (!0x040000 > 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) {\n                                                    var_f = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                                    var_g = 0x11;\n                                                    if (!((0x0a < 0x0b) & (0x12 < 0x4e)) | ((0x0a < 0x0133) & (0x12 < 0x20))) {\n                                                        if (!0x12 > 0x01) {\n                                                            if (!0x01 > 0x1999999999999999999999999999999999999999999999999999999999999999) {\n                                                                var_f = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                                                var_g = 0x11;\n                                                                if (!0x0a > 0x1999999999999999999999999999999999999999999999999999999999999999) {\n                                                                    var_f = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                                                    var_g = 0x11;\n                                                                    if (!0) {\n                                                                    }\n                                                                    if (!0x0de0b6b3a7640000 > 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) {\n                                                                        var_f = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                                                        var_g = 0x11;\n                                                                    }\n                                                                }\n                                                            }\n                                                        }\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }",
    "llm_output": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ncontract TokenContract {\n    address public owner;\n    uint256 public maxTxAmount;\n    uint256 public maxWalletSize;\n    bool public transferDelayEnabled;\n\n    event MaxTxAmountUpdated(uint256 newMaxTxAmount);\n\n    modifier onlyOwner() {\n        require(msg.sender == owner, \"Ownable: caller is not the owner\");\n        _;\n    }\n\n    constructor() {\n        owner = msg.sender;\n        maxTxAmount = 1e18; // Example initial value\n        maxWalletSize = 1e18; // Example initial value\n        transferDelayEnabled = false;\n    }\n\n    function removeLimits() external onlyOwner {\n        // Remove transaction limits\n        maxTxAmount = type(uint256).max;\n        maxWalletSize = type(uint256).max;\n\n        // Disable transfer delay\n        transferDelayEnabled = false;\n\n        // Emit event for max transaction amount update\n        emit MaxTxAmountUpdated(maxTxAmount);\n    }\n}\n```\n\n### Explanation of Changes:\n1. **Owner Check**: The `onlyOwner` modifier is used to ensure that only the contract owner can call the `removeLimits` function. This replaces the convoluted owner check logic in the decompiled code.\n\n2. **State Variables**:\n   - `maxTxAmount`: Represents the maximum transaction amount. Initially set to `1e18` (as an example) and updated to `type(uint256).max` in the `removeLimits` function.\n   - `maxWalletSize`: Represents the maximum wallet size. Similarly initialized and updated.\n   - `transferDelayEnabled`: A boolean flag to enable or disable transfer delays. Set to `false` in the `removeLimits` function.\n\n3. **Event**: The `MaxTxAmountUpdated` event is emitted when the `maxTxAmount` is updated. This provides transparency and allows external systems to track changes.\n\n4. **Simplified Logic**: Removed unnecessary and redundant checks, variables, and operations. The decompiled code contained a lot of unused or nonsensical logic, which has been replaced with a clear and concise implementation.\n\n5. **Readability**: Improved variable names and added comments to make the code self-explanatory.\n\nThis refactored code is clean, functional, and adheres to Solidity best practices.",
    "ground_truth": "function removeLimits() external onlyOwner{\r\n        _maxTxAmount = _tTotal;\r\n        _maxWalletSize=_tTotal;\r\n        transferDelayEnabled=false;\r\n        emit MaxTxAmountUpdated(_tTotal);\r\n    }"
}