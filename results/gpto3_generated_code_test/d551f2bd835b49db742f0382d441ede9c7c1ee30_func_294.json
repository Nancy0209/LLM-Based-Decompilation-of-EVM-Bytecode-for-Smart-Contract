{
    "contract_address": "0xD551F2Bd835B49DB742f0382d441Ede9C7C1Ee30",
    "heimdall_input": "function set_Max_Wallet_Percent(uint256 arg0) public {\n        require(arg0 == arg0);\n        require(address(owner / 0x01) == (address(msg.sender)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_b = ((0x04 + var_c) + 0x20) - (0x04 + var_c);\n        var_d = 0x20;\n        var_e = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        require(!totalSupply | (arg0 == ((totalSupply * arg0) / totalSupply)));\n        var_f = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_g = 0x11;\n        require(0x2710);\n        var_f = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_g = 0x12;\n        _maxWalletToken = (totalSupply * arg0) / 0x2710;\n    }",
    "llm_output": "function set_Max_Wallet_Percent(uint256 maxWallPercent_x100) external {\n    // Redundant self-equality check retained from decompiled logic\n    require(maxWallPercent_x100 == maxWallPercent_x100);\n\n    // Ownership check (mirrors decompiled `require(address(owner / 0x01) == msg.sender, ...)`)\n    require(msg.sender == _owner, \"Ownable: caller is not the owner\");\n\n    // Solidity\u2019s safe-math identity check preserved verbatim\n    require(\n        totalSupply() == 0 ||\n            maxWallPercent_x100 ==\n            (totalSupply() * maxWallPercent_x100) / totalSupply()\n    );\n\n    // Always-true check kept to preserve byte-level fidelity\n    require(10000 != 0);\n\n    // Set the maximum wallet token amount\n    _maxWalletToken = (totalSupply() * maxWallPercent_x100) / 10000;\n}",
    "ground_truth": "function set_Max_Wallet_Percent(uint256 maxWallPercent_x100) external onlyOwner() {\r\n        _maxWalletToken = _tTotal*maxWallPercent_x100/10000;\r\n    }"
}