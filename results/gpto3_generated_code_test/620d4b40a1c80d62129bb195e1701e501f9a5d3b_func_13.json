{
    "contract_address": "0x620d4B40A1c80D62129bb195e1701e501F9a5d3b",
    "heimdall_input": "function getOnCompetitiveWhitelist(address arg0) public view returns (bool) {\n        require(arg0 == (address(arg0)));\n        address var_a = address(arg0);\n        var_b = 0x22;\n        address var_c = !(!bytes1(storage_map_n[var_a]));\n        return !(!bytes1(storage_map_n[var_a]));\n    }",
    "llm_output": "function getOnCompetitiveWhitelist(address user) public view returns (bool) {\n    // Redundant self-equality check kept for logical fidelity with decompiled code\n    require(user == address(user));\n\n    // In the original bytecode the value was loaded as a single byte and double-negated.\n    // A non-zero byte translates to `true`, zero to `false`.\n    return competitiveWhitelist[user] != bytes1(0);\n}",
    "ground_truth": "function getOnCompetitiveWhitelist(address _user) public view returns (bool) {\\r\\n        return COMPETITIVE_WHITELIST_ADDRESSES[_user];\\r\\n    }"
}