{
    "contract_address": "0xAB17E21aaAaF60C9022E34e3AcdBC73EEeb0f880",
    "heimdall_input": "function updateSellFees(uint256 arg0, uint256 arg1, uint256 arg2) public {\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        sellMarketingFee = arg0;\n        sellLiquidityFee = arg1;\n        sellDevFee = arg2;\n        require(!arg0 > (arg1 + arg0));\n        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x11;\n    }",
    "llm_output": "function updateSellFees(\n    uint256 _marketingFee,\n    uint256 _liquidityFee,\n    uint256 _devFee\n) external {\n    // Access control (inlined onlyOwner check from decompiled code)\n    require(msg.sender == owner(), \"Ownable: caller is not the owner\");\n\n    // Update sell\u2013side fee configuration\n    sellMarketingFee = _marketingFee;\n    sellLiquidityFee = _liquidityFee;\n    sellDevFee = _devFee;\n\n    // Preserved (possibly redundant) decompiler-extracted check\n    require(!(_marketingFee > (_liquidityFee + _marketingFee)));\n}",
    "ground_truth": "function updateSellFees(\r\n        uint256 _marketingFee,\r\n        uint256 _liquidityFee,\r\n        uint256 _devFee\r\n    ) external onlyOwner {\r\n        sellMarketingFee = _marketingFee;\r\n        sellLiquidityFee = _liquidityFee;\r\n        sellDevFee = _devFee;\r\n        sellTotalFees = sellMarketingFee + sellLiquidityFee + sellDevFee;\r\n        require(sellTotalFees <= 99, \"Must keep fees at 99% or less\");\r\n    }"
}