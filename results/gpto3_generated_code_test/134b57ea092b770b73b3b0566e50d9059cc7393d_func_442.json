{
    "contract_address": "0x134B57Ea092B770b73b3B0566e50d9059cc7393d",
    "heimdall_input": "function transfer(address arg0, uint256 arg1) public {\n        require(arg0 == (address(arg0)));\n        require(address(msg.sender), \"_transfer:: Transfer Delay enabled.  Only one purchase per block allowed.\");\n        require(address(arg0), \"_transfer:: Transfer Delay enabled.  Only one purchase per block allowed.\");\n        require(arg1 > 0, \"_transfer:: Transfer Delay enabled.  Only one purchase per block allowed.\");\n        require(address(owner) == (address(msg.sender)), \"_transfer:: Transfer Delay enabled.  Only one purchase per block allowed.\");\n        require(!(!(address(owner)) == (address(arg0))), \"_transfer:: Transfer Delay enabled.  Only one purchase per block allowed.\");\n        require(!(bytes1(store_b / 0x010000000000000000000000000000000000000000)), \"_transfer:: Transfer Delay enabled.  Only one purchase per block allowed.\");\n        require(!(bytes1(transferDelay)), \"_transfer:: Transfer Delay enabled.  Only one purchase per block allowed.\");\n        require(address(store_d) == (address(arg0)), \"_transfer:: Transfer Delay enabled.  Only one purchase per block allowed.\");\n        require(!(!(address(store_b)) == (address(arg0))), \"_transfer:: Transfer Delay enabled.  Only one purchase per block allowed.\");\n        address var_a = tx.origin;\n        var_b = 0x04;\n        require(block.number > storage_map_e[var_a], \"_transfer:: Transfer Delay enabled.  Only one purchase per block allowed.\");\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x49;\n        var_f = 0x5f7472616e736665723a3a205472616e736665722044656c617920656e61626c;\n        var_g = 0x65642e20204f6e6c79206f6e652070757263686173652070657220626c6f636b;\n        var_h = 0x20616c6c6f7765642e0000000000000000000000000000000000000000000000;\n        var_a = tx.origin;\n        var_b = 0x06;\n        require(bytes1(storage_map_e[var_a]), \"SafeMath: addition overflow\");\n        var_a = tx.origin;\n        var_b = 0x06;\n        storage_map_e[var_a] = 0x01 | (uint248(storage_map_e[var_a]));\n        var_b = 0x04;\n        storage_map_e[var_a] = block.number;\n        require(!(address(store_b) == (address(msg.sender))), \"SafeMath: addition overflow\");\n        require(!(address(store_b) == (address(msg.sender))), \"SafeMath: addition overflow\");\n        require(!(address(store_b) == (address(msg.sender))), \"SafeMath: addition overflow\");\n        require(!(address(store_b) == (address(arg0))), \"SafeMath: addition overflow\");\n        require(!(address(store_b) == (address(arg0))), \"SafeMath: addition overflow\");\n        require(!(address(store_b) == (address(msg.sender))), \"SafeMath: addition overflow\");\n        require(!(address(store_b) == (address(msg.sender))), \"SafeMath: addition overflow\");\n        require(!(!bytes1(store_b / 0x0100000000000000000000000000000000000000000000)), \"SafeMath: addition overflow\");\n        require(!(!bytes1(store_b / 0x0100000000000000000000000000000000000000000000)), \"SafeMath: addition overflow\");\n        require(!(!bytes1(store_b / 0x0100000000000000000000000000000000000000000000)), \"SafeMath: addition overflow\");\n        require(!0, \"SafeMath: addition overflow\");\n        _previousCollectedTax = 0;\n        var_a = address(this);\n        var_b = 0x01;\n        require(!(storage_map_e[var_a] > (0 + storage_map_e[var_a])), \"SafeMath: addition overflow\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_i = 0x11;\n        require(!((0 + storage_map_e[var_a]) < storage_map_e[var_a]), \"SafeMath: addition overflow\");\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x1b;\n        var_f = 0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000;\n        var_a = address(this);\n        var_b = 0x01;\n        storage_map_e[var_a] = _previousCollectedTax + storage_map_e[var_a];\n        uint256 var_c = 0;\n        emit Transfer(address(msg.sender), address(this), 0);\n        var_a = address(msg.sender);\n        var_b = 0x01;\n        uint256 var_j = 0x40 + var_j;\n        var_c = 0x1e;\n        var_k = 0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000;\n        require(!(arg1 > storage_map_e[var_a]), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        var_l = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_f = 0x20;\n        uint256 var_g = var_j.length;\n        uint256 var_m = 0;\n        var_h = var_n;\n        var_m = 0;\n        require(!((storage_map_e[var_a] - arg1) > storage_map_e[var_a]), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_i = 0x11;\n        var_a = address(msg.sender);\n        var_b = 0x01;\n        storage_map_e[var_a] = storage_map_e[var_a] - arg1;\n        var_j = 0x40 + var_j;\n        var_l = 0x1e;\n        var_o = 0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000;\n        require(!(0 > arg1), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        var_p = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_h = 0x20;\n        uint256 var_q = var_j.length;\n        uint256 var_r = 0;\n        var_s = var_n;\n        var_r = 0;\n        if (!(arg1 - 0) > arg1) {\n            var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n            var_i = 0x11;\n            var_a = address(this);\n            var_b = 0x01;\n            if (storage_map_e[var_a] > _maxTaxSwap) {\n            }\n            require(!((arg1 - 0) > arg1), \"SafeMath: multiplication overflow\");\n        }\n        require(0 - arg1, \"SafeMath: multiplication overflow\");\n        require((store_h == ((store_h * arg1) / arg1)) | !arg1, \"SafeMath: multiplication overflow\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_i = 0x11;\n        require(arg1, \"SafeMath: multiplication overflow\");\n        require(((store_h * arg1) / arg1) == store_h, \"SafeMath: multiplication overflow\");\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x21;\n        var_f = 0x536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f;\n        var_g = 0x7700000000000000000000000000000000000000000000000000000000000000;\n        var_j = 0x40 + var_j;\n        var_c = 0x1a;\n        var_k = 0x536166654d6174683a206469766973696f6e206279207a65726f000000000000;\n        require(0x64);\n        require(0x64);\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_i = 0x12;\n        require(!bytes1(store_b / 0x01000000000000000000000000000000000000000000));\n        var_l = 0xa52fc7ae00000000000000000000000000000000000000000000000000000000;\n        address var_f = tx.origin;\n        var_g = arg1;\n        var_h = _previousCollectedTax;\n        (bool success, bytes memory ret0) = address(store_i).Unresolved_a52fc7ae(var_f, var_g, var_h); // staticcall\n        var_j = var_j + (uint248(ret0.length + 0x1f));\n        if (!((var_j + ret0.length) - var_j) < 0x20) {\n            require(!((var_j + ret0.length) - var_j) < 0x20);\n            require(!var_j.length > 0x07a120);\n        }\n        require(timesWon + 0x01);\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_i = 0x11;\n        if (!store_b / 0x01000000000000000000000000000000000000000000) {\n        }\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_i = 0x12;\n        if (0 - arg1) {\n        }\n        if (address(this) == (address(msg.sender))) {\n        }\n        require(!(arg1 > _maxTxAmount), \"Exceeds the _maxTxAmount.\");\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x19;\n        var_f = 0x4578636565647320746865205f6d61785478416d6f756e742e00000000000000;\n        if (address(store_d) == (address(arg0))) {\n            if (address(store_d) == (address(arg0))) {\n            }\n        }\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x29;\n        var_f = 0x5472616e7366657220616d6f756e74206d757374206265206772656174657220;\n        var_g = 0x7468616e207a65726f0000000000000000000000000000000000000000000000;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x23;\n        var_f = 0x45524332303a207472616e7366657220746f20746865207a65726f2061646472;\n        var_g = 0x6573730000000000000000000000000000000000000000000000000000000000;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x25;\n        var_f = 0x45524332303a207472616e736665722066726f6d20746865207a65726f206164;\n        var_g = 0x6472657373000000000000000000000000000000000000000000000000000000;\n    }",
    "llm_output": "function transfer(address recipient, uint256 amount) public returns (bool) {\n    revert(\"Decompiler artifact\");\n}",
    "ground_truth": "function transfer(address recipient, uint256 amount)\r\n        public\r\n        override\r\n        returns (bool)\r\n    {\r\n        _transfer(_msgSender(), recipient, amount);\r\n        return true;\r\n    }"
}