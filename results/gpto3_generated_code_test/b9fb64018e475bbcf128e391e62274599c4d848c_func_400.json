{
    "contract_address": "0xB9FB64018E475BBCF128E391E62274599c4D848C",
    "heimdall_input": "function getApproved(uint256 arg0) public view returns (address) {\n        require(!(!0x01 > arg0), CustomError_cf4700e4());\n        require(!(arg0 < totalSupply), CustomError_cf4700e4());\n        uint256 var_a = arg0;\n        var_b = 0x04;\n        require(!(bytes1(storage_map_b[var_a])), CustomError_cf4700e4());\n        var_c = 0xcf4700e400000000000000000000000000000000000000000000000000000000;\n        var_a = arg0;\n        var_b = 0x06;\n        uint256 var_c = address(storage_map_b[var_a]);\n        return address(storage_map_b[var_a]);\n        require(arg0 < totalSupply, CustomError_cf4700e4());\n        var_a = arg0;\n        var_b = 0x06;\n        var_c = address(storage_map_b[var_a]);\n        return address(storage_map_b[var_a]);\n        var_c = 0xcf4700e400000000000000000000000000000000000000000000000000000000;\n    }",
    "llm_output": "function getApproved(uint256 tokenId) public view override returns (address) {\n    // Revert if the queried token does not exist.\n    if (!_exists(tokenId)) revert ApprovalQueryForNonexistentToken();\n\n    return _tokenApprovals[tokenId];\n}",
    "ground_truth": "function getApproved(uint256 tokenId) public view virtual override returns (address) {\\n        if (!_exists(tokenId)) revert ApprovalQueryForNonexistentToken();\\n\\n        return _tokenApprovals[tokenId].value;\\n    }"
}