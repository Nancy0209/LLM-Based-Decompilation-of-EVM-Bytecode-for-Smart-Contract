{
    "contract_address": "0x3e628c6678825195453B33f713147B8fb641248b",
    "heimdall_input": "function updateSellFees(uint256 arg0, uint256 arg1, uint256 arg2, uint256 arg3) public {\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        sellMarketingFee = arg0;\n        ownerf = arg1;\n        ownerh = arg2;\n        sellBurnFee = arg3;\n        require(!arg0 > (arg1 + arg0));\n        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x11;\n    }",
    "llm_output": "function updateSellFees(\n    uint256 _marketingFee,\n    uint256 _liquidityFee,\n    uint256 _redistributionFee,\n    uint256 _burnFee\n) external {\n    // Replicates: require(msg.sender == address(owner), \"Ownable: caller is not the owner\");\n    require(msg.sender == _owner, \"Ownable: caller is not the owner\");\n\n    // Assign new sell-side fee values\n    sellMarketingFee      = _marketingFee;\n    sellLiquidityFee      = _liquidityFee;   // decompiler variable `ownerf`\n    sellRedistributionFee = _redistributionFee; // decompiler variable `ownerh`\n    sellBurnFee           = _burnFee;\n\n    // Decompiler-produced logic (kept verbatim in spirit)\n    require(!(_marketingFee > (_liquidityFee + _marketingFee)), \"Decompiler artifact\");\n}",
    "ground_truth": "function updateSellFees(uint256 _MarketingFee, uint256 _liquidityFee, uint256 _RedistributionFee, uint256 _burnFee) external onlyOwner {\r\n        sellMarketingFee = _MarketingFee;\r\n        sellLiquidityFee = _liquidityFee;\r\n        sellRedistributionFee = _RedistributionFee;\r\n        sellBurnFee = _burnFee;\r\n        sellTotalFees = sellMarketingFee + sellLiquidityFee + sellRedistributionFee + sellBurnFee;\r\n        require(sellTotalFees <= 30, \"Keep fees at 30% or less\");\r\n    }"
}