{
    "contract_address": "0x00BCB434254797479bade33e1eF0aEBDB3F27089",
    "heimdall_input": "function withdrawOverflowETH(uint256 arg0) public {\n        require(arg0 < address(this).balance, \"Cannot send more than contract balance\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x26;\n        var_d = 0x43616e6e6f742073656e64206d6f7265207468616e20636f6e74726163742062;\n        var_e = 0x616c616e63650000000000000000000000000000000000000000000000000000;\n        (bool success, bytes memory ret0) = address(store_l / 0x0100).transfer(arg0);\n        require(ret0.length == 0);\n        uint256 var_a = arg0;\n        emit WithdrawOverETH(arg0);\n    }",
    "llm_output": "function withdrawOverflowETH(uint256 amount) external {\n    require(amount < address(this).balance, \"Cannot send more than contract balance\");\n\n    (bool success, bytes memory returnData) = payable(msg.sender).call{value: amount}(\"\");\n    require(returnData.length == 0);\n\n    emit WithdrawOverETH(amount);\n}",
    "ground_truth": "function withdrawOverflowETH(uint256 amount) external {\r\n        require(\r\n            amount < address(this).balance,\r\n            \"Cannot send more than contract balance\"\r\n        );\r\n        (bool success, ) = address(liquidityWallet).call{value: amount}(\"\");\r\n        if (success) {\r\n            emit WithdrawOverETH(amount);\r\n        }\r\n    }"
}