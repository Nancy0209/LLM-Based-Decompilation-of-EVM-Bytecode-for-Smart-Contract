{
    "contract_address": "0xb7DC750513C75143Fe886b2179Cdb964662173d5",
    "heimdall_input": "function name() public view returns (string memory) {\n        bytes1 var_a = 0x20 + (var_a + (0x20 * (((store_a & (((!bytes1(store_a)) * 0x0100) + 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) / 0x02) + 0x1f) / 0x20)));\n        bytes1 var_b = (store_a & (((!bytes1(store_a)) * 0x0100) + 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)) / 0x02;\n        if (!(store_a & (((!store_a) * 0x0100) + 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)) / 0x02) {\n            if (0x1f < (store_a & (((!store_a) * 0x0100) + 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) / 0x02)) {\n                uint256 var_c = 0;\n                uint256 var_d = storage_map_b[var_c];\n                if ((var_a + 0x20) + (store_a & (((!store_a) * 0x0100) + 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) / 0x02) > (0x20 + (var_a + 0x20))) {\n                    var_d = 0x20;\n                    bytes1 var_e = var_a.length;\n                    if (!var_a.length) {\n                        bytes1 var_f = (~((0x0100 ** (0x20 - (bytes1(var_a.length)))) - 0x01)) & (var_g);\n                        return abi.encodePacked(0x20, var_a.length, (~((0x0100 ** (0x20 - (bytes1(var_a.length)))) - 0x01)) & (var_g));\n                        return abi.encodePacked(0x20, var_a.length);\n                    }\n                }\n            }\n        }\n    }",
    "llm_output": "function name() public view returns (string memory) {\n    uint256 length = uint256(store_a) & 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF;\n    uint256 adjustedLength = (length / 2) + 31;\n    uint256 paddedLength = (adjustedLength / 32) * 32;\n\n    if (length == 0) {\n        return \"\";\n    }\n\n    if (length > 31) {\n        uint256 offset = 0;\n        uint256 data = storage_map_b[offset];\n        if (paddedLength > 32 + length) {\n            uint256 prefix = 32;\n            uint256 strLength = length;\n            bytes memory result = new bytes(strLength);\n            assembly {\n                mstore(result, strLength)\n                mstore(add(result, 32), data)\n            }\n            return string(result);\n        }\n    }\n\n    revert(\"Decompiler artifact\");\n}",
    "ground_truth": "function name() external view override returns (string memory) {\\r\\n      return _name;\\r\\n    }"
}