{
    "contract_address": "0x3cf93d43251324C527346abF3e0559f4C7a713d1",
    "heimdall_input": "function upgradeTo(address arg0) public returns (uint256) {\n        require(arg0 == (address(arg0)));\n        require(!(address(msg.sender)) == (address(store_a)));\n        require(!(address(msg.sender)) == (address(store_a)));\n        var_a = msg.data[0:4];\n        (bool success, bytes memory ret0) = address(store_b).Unresolved_(var_b); // delegatecall\n        return ;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x42;\n        var_f = 0x5472616e73706172656e745570677261646561626c6550726f78793a2061646d;\n        var_g = 0x696e2063616e6e6f742066616c6c6261636b20746f2070726f78792074617267;\n        var_h = 0x6574000000000000000000000000000000000000000000000000000000000000;\n        uint256 var_i = var_d + var_i;\n        uint256 var_c = 0;\n        require(address(arg0).code.length, \"ERC1967: new implementation is not a contract\");\n        var_j = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = 0x20;\n        var_f = 0x2d;\n        var_g = 0x455243313936373a206e657720696d706c656d656e746174696f6e206973206e;\n        var_h = 0x6f74206120636f6e747261637400000000000000000000000000000000000000;\n        store_b = (address(arg0)) | (uint96(store_b));\n        emit Upgraded(address(arg0));\n        require(var_i.length > 0, \"Address: delegate call to non-contract\");\n        require(!(var_i.length > 0), \"Address: delegate call to non-contract\");\n        var_i = 0x60 + var_i;\n        var_j = 0x27;\n        var_k = this.code[2049:2088];\n        require(address(arg0).code.length, \"Address: delegate call to non-contract\");\n        var_l = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_h = 0x20;\n        var_m = 0x26;\n        var_n = 0x416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f;\n        var_o = 0x6e74726163740000000000000000000000000000000000000000000000000000;\n        require(!0 > var_i.length);\n        uint256 var_l = 0;\n        (bool success, bytes memory ret0) = address(arg0).Unresolved_(var_p); // delegatecall\n        require(ret0.length == 0);\n        require(!var_q);\n        var_l = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_h = 0x20;\n        uint256 var_m = var_i.length;\n        require(!(0 > var_i.length), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        uint256 var_r = 0;\n        var_i = var_i + (uint248(ret0.length + 0x3f));\n        var_l = ret0.length;\n        require(!var_i.length);\n    }",
    "llm_output": "function upgradeTo(address newImplementation) public {\n    require(newImplementation != address(0), \"ERC1967: new implementation is not a contract\");\n    require(newImplementation.code.length > 0, \"ERC1967: new implementation is not a contract\");\n    require(msg.sender != admin(), \"TransparentUpgradeableProxy: admin cannot call upgradeTo\");\n\n    // Update the implementation address\n    _setImplementation(newImplementation);\n\n    // Emit the Upgraded event\n    emit Upgraded(newImplementation);\n}\n\nfunction _setImplementation(address newImplementation) internal {\n    require(newImplementation.code.length > 0, \"Address: delegate call to non-contract\");\n    bytes32 slot = _IMPLEMENTATION_SLOT;\n    assembly {\n        sstore(slot, newImplementation)\n    }\n}\n\nfunction admin() public view returns (address) {\n    return _getAdmin();\n}\n\nfunction _getAdmin() internal view returns (address) {\n    bytes32 slot = _ADMIN_SLOT;\n    address adminAddress;\n    assembly {\n        adminAddress := sload(slot)\n    }\n    return adminAddress;\n}\n\nevent Upgraded(address indexed implementation);\n\nbytes32 private constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\nbytes32 private constant _ADMIN_SLOT = 0xa3f0ad74e542b47d5df7f0e0e3f0ad74e542b47d5df7f0e0e3f0ad74e542b47d;",
    "ground_truth": "function upgradeTo(address newImplementation) external virtual {\\n        _authorizeUpgrade(newImplementation);\\n        _upgradeToAndCallSecure(newImplementation, bytes(\\\"\\\"), false);\\n    }"
}