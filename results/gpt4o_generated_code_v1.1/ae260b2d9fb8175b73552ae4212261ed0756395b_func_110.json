{
    "contract_address": "0xae260B2D9Fb8175B73552Ae4212261ed0756395b",
    "heimdall_input": "function transfer(address arg0, uint256 arg1) public {\n        require(arg0 == (address(arg0)));\n        require(address(msg.sender), \"Only one transfer per block allowed.\");\n        require(address(arg0), \"Only one transfer per block allowed.\");\n        require(arg1 > 0, \"Only one transfer per block allowed.\");\n        require(address(owner) == (address(msg.sender)), \"Only one transfer per block allowed.\");\n        require(!(!(address(owner)) == (address(arg0))), \"Only one transfer per block allowed.\");\n        require(!(bytes1(transferDelayEnabled)), \"Only one transfer per block allowed.\");\n        require(address(store_c) == (address(arg0)), \"Only one transfer per block allowed.\");\n        require(!(!(address(store_d)) == (address(arg0))), \"Only one transfer per block allowed.\");\n        address var_a = tx.origin;\n        var_b = 0x05;\n        require(block.number > storage_map_e[var_a], \"Only one transfer per block allowed.\");\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x24;\n        var_f = 0x4f6e6c79206f6e65207472616e736665722070657220626c6f636b20616c6c6f;\n        var_g = 0x7765642e00000000000000000000000000000000000000000000000000000000;\n        var_a = tx.origin;\n        var_b = 0x05;\n        storage_map_e[var_a] = block.number;\n        require(!(address(store_d) == (address(msg.sender))), \"SafeMath: addition overflow\");\n        require(!(address(store_d) == (address(msg.sender))), \"SafeMath: addition overflow\");\n        require(!(address(store_d) == (address(msg.sender))), \"SafeMath: addition overflow\");\n        require(!(address(store_d) == (address(arg0))), \"SafeMath: addition overflow\");\n        require(!(address(store_d) == (address(arg0))), \"SafeMath: addition overflow\");\n        require(!(address(store_d) == (address(arg0))), \"SafeMath: addition overflow\");\n        var_a = address(this);\n        var_b = 0x01;\n        require(!(!bytes1(store_d / 0x01000000000000000000000000000000000000000000)), \"SafeMath: addition overflow\");\n        require(!(!bytes1(store_d / 0x01000000000000000000000000000000000000000000)), \"SafeMath: addition overflow\");\n        require(!(!bytes1(store_d / 0x01000000000000000000000000000000000000000000)), \"SafeMath: addition overflow\");\n        require(!(!bytes1(store_d / 0x01000000000000000000000000000000000000000000)), \"SafeMath: addition overflow\");\n        require(!(!bytes1(store_d / 0x01000000000000000000000000000000000000000000)), \"SafeMath: addition overflow\");\n        require(!(!bytes1(store_d / 0x01000000000000000000000000000000000000000000)), \"SafeMath: addition overflow\");\n        require(!(!bytes1(store_d / 0x01000000000000000000000000000000000000000000)), \"SafeMath: addition overflow\");\n        require(!0, \"SafeMath: addition overflow\");\n        var_a = address(this);\n        var_b = 0x01;\n        require(!(storage_map_e[var_a] > (0 + storage_map_e[var_a])), \"SafeMath: addition overflow\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_h = 0x11;\n        require(!((0 + storage_map_e[var_a]) < storage_map_e[var_a]), \"SafeMath: addition overflow\");\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x1b;\n        var_f = 0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000;\n        var_a = address(this);\n        var_b = 0x01;\n        storage_map_e[var_a] = 0 + storage_map_e[var_a];\n        uint256 var_c = 0;\n        emit Transfer(address(msg.sender), address(this), 0);\n        var_a = address(msg.sender);\n        var_b = 0x01;\n        require(address(msg.sender) - (address(transferDelayEnabled / 0x0100)), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        uint256 var_i = 0x40 + var_i;\n        var_c = 0x1f;\n        var_j = 0x536166654d6174683a20207375627472616374696f6e206f766572666c6f7700;\n        require(!(arg1 > storage_map_e[var_a]), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        var_k = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_f = 0x20;\n        uint256 var_g = var_i.length;\n        uint256 var_l = 0;\n        var_m = var_n;\n        var_l = 0;\n        if (!(storage_map_e[var_a] - arg1) > storage_map_e[var_a]) {\n            var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n            var_h = 0x11;\n            if (storage_map_e[var_a] > _maxTaxSwap) {\n            }\n            if (!store_g > store_h) {\n                if (!store_g > store_h) {\n                    if (!store_g > store_h) {\n                    }\n                }\n            }\n            if (!storage_map_e[var_a] > _taxSwapThreshold) {\n            }\n            require(!((storage_map_e[var_a] - arg1) > storage_map_e[var_a]), \"Exceeds the _maxTxAmount.\");\n        }\n        require(!(!arg1 > _maxTxAmount), \"Exceeds the _maxTxAmount.\");\n        require(!(arg1 > _maxTxAmount), \"Exceeds the _maxTxAmount.\");\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x19;\n        var_f = 0x4578636565647320746865205f6d61785478416d6f756e742e00000000000000;\n        require(store_g > store_k, \"SafeMath: multiplication overflow\");\n        require(0 - arg1, \"SafeMath: multiplication overflow\");\n        require((store_l == ((store_l * arg1) / arg1)) | !arg1, \"SafeMath: multiplication overflow\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_h = 0x11;\n        require(arg1, \"SafeMath: multiplication overflow\");\n        require(((store_l * arg1) / arg1) == store_l, \"SafeMath: multiplication overflow\");\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x21;\n        var_f = 0x536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f;\n        var_g = 0x7700000000000000000000000000000000000000000000000000000000000000;\n        var_i = 0x40 + var_i;\n        var_c = 0x1a;\n        var_j = 0x536166654d6174683a206469766973696f6e206279207a65726f000000000000;\n        if (0x64) {\n            require(0x64);\n            var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n            var_h = 0x12;\n            require(0x64);\n            var_a = address(msg.sender);\n            var_b = 0x04;\n            require(!store_g > store_h);\n            var_a = address(this);\n            var_b = 0x01;\n            require(bytes1(storage_map_e[var_a]));\n        }\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_h = 0x12;\n        if (0 - arg1) {\n        }\n        var_a = address(transferDelayEnabled / 0x0100);\n        var_b = 0x01;\n        require(storage_map_e[var_a] < _maxTaxSwap, \"Exceeds the _maxTxAmount.\");\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x19;\n        var_f = 0x4578636565647320746865205f6d61785478416d6f756e742e00000000000000;\n        if (address(this) == (address(msg.sender))) {\n            if (address(this) == (address(msg.sender))) {\n            }\n        }\n        require(!(arg1 > _maxTxAmount), \"Exceeds the _maxTxAmount.\");\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x19;\n        var_f = 0x4578636565647320746865205f6d61785478416d6f756e742e00000000000000;\n        if (address(store_c) == (address(arg0))) {\n            if (address(store_c) == (address(arg0))) {\n            }\n        }\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x29;\n        var_f = 0x5472616e7366657220616d6f756e74206d757374206265206772656174657220;\n        var_g = 0x7468616e207a65726f0000000000000000000000000000000000000000000000;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x23;\n        var_f = 0x45524332303a207472616e7366657220746f20746865207a65726f2061646472;\n        var_g = 0x6573730000000000000000000000000000000000000000000000000000000000;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x25;\n        var_f = 0x45524332303a207472616e736665722066726f6d20746865207a65726f206164;\n        var_g = 0x6472657373000000000000000000000000000000000000000000000000000000;\n    }",
    "llm_output": "function transfer(address recipient, uint256 amount) public {\n    require(recipient != address(0), \"Recipient address cannot be zero.\");\n    require(amount > 0, \"Transfer amount must be greater than zero.\");\n    require(msg.sender == owner, \"Only the owner can initiate transfers.\");\n    require(!transferDelayEnabled, \"Transfer delay is enabled.\");\n    require(block.number > lastTransferBlock[tx.origin], \"Only one transfer per block allowed.\");\n\n    lastTransferBlock[tx.origin] = block.number;\n\n    require(amount <= _maxTxAmount, \"Exceeds the maximum transaction amount.\");\n    require(balanceOf(msg.sender) >= amount, \"Insufficient balance.\");\n\n    balances[msg.sender] -= amount;\n    balances[recipient] += amount;\n\n    emit Transfer(msg.sender, recipient, amount);\n}",
    "ground_truth": "function transfer(address recipient, uint256 amount) public override returns (bool) {\r\n        _transfer(_msgSender(), recipient, amount);\r\n        return true;\r\n    }"
}