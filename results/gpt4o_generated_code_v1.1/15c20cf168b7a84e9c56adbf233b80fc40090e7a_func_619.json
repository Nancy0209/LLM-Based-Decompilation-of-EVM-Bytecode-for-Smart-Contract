{
    "contract_address": "0x15C20cF168b7A84E9C56ADbf233b80Fc40090e7a",
    "heimdall_input": "function name() public view returns (string memory) {\n        if (store_c) {\n            if (store_c - ((store_c / 0x02) < 0x20)) {\n                var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                var_b = 0x22;\n                uint256 var_c = var_c + (0x20 + (((0x1f + (store_c / 0x02)) / 0x20) * 0x20));\n                uint256 var_d = store_c / 0x02;\n                if (store_c) {\n                    if (store_c - ((store_c / 0x02) < 0x20)) {\n                        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                        var_b = 0x22;\n                        if (!store_c / 0x02) {\n                            if (0x1f < (store_c / 0x02)) {\n                                var_a = 0x68;\n                                var_e = storage_map_d[var_a];\n                                if ((0x20 + var_c) + (store_c / 0x02) > (0x20 + (0x20 + var_c))) {\n                                    uint256 var_e = (var_c + 0x20) - var_c;\n                                    uint256 var_f = var_c.length;\n                                    uint256 var_g = 0;\n                                    return abi.encodePacked((var_c + 0x20) - var_c, var_c.length);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }",
    "llm_output": "function name() public view returns (string memory) {\n    if (storedNameLength > 0) {\n        uint256 halfLength = storedNameLength / 2;\n        if (storedNameLength - halfLength < 32) {\n            revert(\"Decompiler artifact\");\n        }\n\n        uint256 paddedLength = (storedNameLength + 31) / 32 * 32;\n        uint256 dataOffset = 32 + paddedLength;\n\n        if (storedNameLength > 0) {\n            if (storedNameLength - halfLength < 32) {\n                revert(\"Decompiler artifact\");\n            }\n\n            if (halfLength == 0) {\n                if (31 < halfLength) {\n                    uint256 storageOffset = 104; // Arbitrary offset from decompiled code\n                    bytes memory storedData = storageMap[storageOffset];\n\n                    if (32 + dataOffset + halfLength > 32 + (32 + dataOffset)) {\n                        uint256 dataLength = (dataOffset + 32) - dataOffset;\n                        uint256 storedDataLength = storedData.length;\n                        return abi.encodePacked(dataLength, storedDataLength);\n                    }\n                }\n            }\n        }\n    }\n    return \"\";\n}",
    "ground_truth": "function name() public view virtual override returns (string memory) {\\r\\n        return _name;\\r\\n    }"
}