{
    "contract_address": "0xB9FB64018E475BBCF128E391E62274599c4D848C",
    "heimdall_input": "function approve(address arg0, uint256 arg1) public payable {\n        require(arg0 == (address(arg0)));\n        require(!address(0xaaeb6d7670e522a718067333cd4e).code.length, CustomError_df2d9b42());\n        require(0x01 > arg1, CustomError_df2d9b42());\n        require(!(arg1 < totalSupply), CustomError_df2d9b42());\n        uint256 var_a = arg1;\n        var_b = 0x04;\n        require(0 - (bytes1(storage_map_b[var_a])), CustomError_df2d9b42());\n        var_c = 0xdf2d9b4200000000000000000000000000000000000000000000000000000000;\n        require(0 - storage_map_b[var_a], CustomError_cfb3b942());\n        require(address(storage_map_b[var_a]) == msg.sender, CustomError_cfb3b942());\n        var_a = address(storage_map_b[var_a]);\n        var_b = 0x07;\n        var_a = msg.sender;\n        uint256 var_b = keccak256(var_a);\n        require(bytes1(storage_map_b[var_a]), CustomError_cfb3b942());\n        var_a = arg1;\n        var_b = 0x06;\n        storage_map_b[var_a] = (address(arg0)) | (uint96(storage_map_b[var_a]));\n        emit Approval(address(storage_map_b[var_a]), address(arg0), arg1);\n        var_c = 0xcfb3b94200000000000000000000000000000000000000000000000000000000;\n        var_a = arg1;\n        var_b = 0x06;\n        storage_map_b[var_a] = (address(arg0)) | (uint96(storage_map_b[var_a]));\n        emit Approval(address(storage_map_b[var_a]), address(arg0), arg1);\n        var_a = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff + arg1;\n        var_b = 0x04;\n        if (0 - storage_map_b[var_a]) {\n            var_a = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff + (0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff + arg1);\n            var_b = 0x04;\n            if (0 - storage_map_b[var_a]) {\n                var_a = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff + (0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff + (0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff + arg1));\n                var_b = 0x04;\n                if (0 - storage_map_b[var_a]) {\n                }\n            }\n        }\n        var_c = 0xdf2d9b4200000000000000000000000000000000000000000000000000000000;\n        var_c = 0xdf2d9b4200000000000000000000000000000000000000000000000000000000;\n        var_c = 0xc617113400000000000000000000000000000000000000000000000000000000;\n        address var_d = address(this);\n        address var_e = address(arg0);\n        (bool success, bytes memory ret0) = address(0xaaeb6d7670e522a718067333cd4e).Unresolved_c6171134(var_d); // staticcall\n        uint256 var_f = var_f + (uint248(ret0.length + 0x1f));\n        require(!(((var_f + ret0.length) - var_f) < 0x20), CustomError_ede71dcc());\n        require(var_f.length == var_f.length, CustomError_ede71dcc());\n        require(var_f.length, CustomError_ede71dcc());\n        var_g = 0xede71dcc00000000000000000000000000000000000000000000000000000000;\n        var_e = address(arg0);\n    }",
    "llm_output": "function approve(address operator, uint256 tokenId) public payable {\n    require(operator == address(operator), \"Invalid operator address\");\n    require(!address(0xaaeb6d7670e522a718067333cd4e).code.length, \"CustomError_df2d9b42\");\n    require(0x01 > tokenId, \"CustomError_df2d9b42\");\n    require(!(tokenId < totalSupply), \"CustomError_df2d9b42\");\n\n    uint256 currentTokenId = tokenId;\n    uint256 storageOffset = 0x04;\n    require(0 - (bytes1(tokenApprovals[currentTokenId])), \"CustomError_df2d9b42\");\n\n    uint256 approvalHash = 0xdf2d9b4200000000000000000000000000000000000000000000000000000000;\n    require(0 - tokenApprovals[currentTokenId], \"CustomError_cfb3b942\");\n    require(address(tokenApprovals[currentTokenId]) == msg.sender, \"CustomError_cfb3b942\");\n\n    address currentOwner = address(tokenApprovals[currentTokenId]);\n    storageOffset = 0x07;\n    currentOwner = msg.sender;\n    uint256 ownerHash = keccak256(abi.encodePacked(currentOwner));\n    require(bytes1(tokenApprovals[currentOwner]), \"CustomError_cfb3b942\");\n\n    currentTokenId = tokenId;\n    storageOffset = 0x06;\n    tokenApprovals[currentTokenId] = (address(operator)) | (uint96(tokenApprovals[currentTokenId]));\n    emit Approval(address(tokenApprovals[currentTokenId]), operator, tokenId);\n\n    approvalHash = 0xcfb3b94200000000000000000000000000000000000000000000000000000000;\n    currentTokenId = tokenId;\n    storageOffset = 0x06;\n    tokenApprovals[currentTokenId] = (address(operator)) | (uint96(tokenApprovals[currentTokenId]));\n    emit Approval(address(tokenApprovals[currentTokenId]), operator, tokenId);\n\n    currentTokenId = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff + tokenId;\n    storageOffset = 0x04;\n    if (0 - tokenApprovals[currentTokenId]) {\n        currentTokenId = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff + (0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff + tokenId);\n        storageOffset = 0x04;\n        if (0 - tokenApprovals[currentTokenId]) {\n            currentTokenId = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff + (0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff + (0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff + tokenId));\n            storageOffset = 0x04;\n            if (0 - tokenApprovals[currentTokenId]) {\n                // No operation\n            }\n        }\n    }\n\n    approvalHash = 0xdf2d9b4200000000000000000000000000000000000000000000000000000000;\n    approvalHash = 0xdf2d9b4200000000000000000000000000000000000000000000000000000000;\n    approvalHash = 0xc617113400000000000000000000000000000000000000000000000000000000;\n\n    address contractAddress = address(this);\n    address operatorAddress = operator;\n    (bool success, bytes memory retData) = address(0xaaeb6d7670e522a718067333cd4e).staticcall(abi.encodeWithSelector(0xc6171134, contractAddress));\n    uint256 retDataLength = retData.length + 0x1f;\n    require(!(((retDataLength + retData.length) - retDataLength) < 0x20), \"CustomError_ede71dcc\");\n    require(retData.length == retData.length, \"CustomError_ede71dcc\");\n    require(retData.length > 0, \"CustomError_ede71dcc\");\n\n    uint256 errorHash = 0xede71dcc00000000000000000000000000000000000000000000000000000000;\n    operatorAddress = operator;\n}",
    "ground_truth": "function approve(address operator, uint256 tokenId)\\n        public\\n        override\\n        onlyAllowedOperatorApproval(operator)\\n    {\\n        super.approve(operator, tokenId);\\n    }"
}