{
    "contract_address": "0xC1687b1453E40Bd9F46b33dFf3c6ea3A0Ea168eA",
    "heimdall_input": "function name() public view returns (string memory) {\n        if (store_a) {\n            if (store_a - ((store_a / 0x02) < 0x20)) {\n                var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                var_b = 0x22;\n                uint256 var_c = var_c + (0x20 + (((0x1f + (store_a / 0x02)) / 0x20) * 0x20));\n                uint256 var_d = store_a / 0x02;\n                if (store_a) {\n                    if (store_a - ((store_a / 0x02) < 0x20)) {\n                        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                        var_b = 0x22;\n                        if (!store_a / 0x02) {\n                            if (0x1f < (store_a / 0x02)) {\n                                var_a = 0x03;\n                                var_e = storage_map_b[var_a];\n                                if ((0x20 + var_c) + (store_a / 0x02) > (0x20 + (0x20 + var_c))) {\n                                    uint256 var_e = (var_c + 0x20) - var_c;\n                                    uint256 var_f = var_c.length;\n                                    uint256 var_g = 0;\n                                    return abi.encodePacked((var_c + 0x20) - var_c, var_c.length);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }",
    "llm_output": "function name() public view returns (string memory) {\n    uint256 nameLength = store_a;\n\n    if (nameLength > 0) {\n        uint256 halfLength = nameLength / 2;\n        if (nameLength - halfLength < 32) {\n            revert(\"Decompiler artifact\");\n        }\n\n        uint256 memoryOffset = 32 + ((31 + halfLength) / 32) * 32;\n        uint256 adjustedLength = nameLength / 2;\n\n        if (adjustedLength > 0) {\n            if (nameLength - adjustedLength < 32) {\n                revert(\"Decompiler artifact\");\n            }\n\n            if (adjustedLength > 31) {\n                bytes memory nameData = storage_map_b[0x03];\n                uint256 dataLength = nameData.length;\n\n                if ((32 + memoryOffset) + adjustedLength > (32 + (32 + memoryOffset))) {\n                    uint256 encodedLength = (memoryOffset + 32) - memoryOffset;\n                    return abi.encodePacked(encodedLength, dataLength);\n                }\n            }\n        }\n    }\n\n    return \"\";\n}",
    "ground_truth": "function name() public view virtual override returns (string memory) {\r\n        return _name;\r\n    }"
}