{
    "contract_address": "0x83E498dD2161ce5b5F28953f3bb2F2bd7216A3Cf",
    "heimdall_input": "function name() public view returns (string memory) {\n        if (store_a) {\n            if (!(store_a) == ((store_a >> 0x01) < 0x20)) {\n                var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                var_b = 0x22;\n                uint256 var_c = var_c + (0x20 + (((0x1f + (store_a >> 0x01)) / 0x20) * 0x20));\n                bytes32 var_d = store_a >> 0x01;\n                if (store_a) {\n                    if (!(store_a) == ((store_a >> 0x01) < 0x20)) {\n                        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                        var_b = 0x22;\n                        if (!store_a >> 0x01) {\n                            if (0x1f < (store_a >> 0x01)) {\n                                var_a = 0x03;\n                                var_e = storage_map_b[var_a];\n                                if ((0x20 + var_c) + (store_a >> 0x01) > (0x20 + (0x20 + var_c))) {\n                                    var_e = 0x20;\n                                    uint256 var_f = var_c.length;\n                                    if (!0 > var_c.length) {\n                                        uint256 var_g = 0;\n                                        return abi.encodePacked(0x20, var_c.length);\n                                        return abi.encodePacked(0x20, var_c.length);\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }",
    "llm_output": "function name() public view returns (string memory) {\n    if (_nameStorage != 0) {\n        if (!(_nameStorage & 1 == 0 && (_nameStorage >> 1) < 32)) {\n            revert(\"Invalid name storage format\");\n        }\n\n        uint256 nameLength = _nameStorage >> 1;\n        uint256 nameOffset = 32 + ((31 + nameLength) / 32) * 32;\n\n        if (nameLength > 0) {\n            bytes memory nameBytes = new bytes(nameLength);\n            uint256 storagePointer = _nameStorage >> 1;\n\n            for (uint256 i = 0; i < nameLength; i++) {\n                nameBytes[i] = bytes1(uint8(storagePointer >> (8 * (31 - (i % 32)))));\n                if (i % 32 == 31) {\n                    storagePointer = _nameStorageMap[storagePointer];\n                }\n            }\n\n            return string(nameBytes);\n        }\n    }\n\n    return \"\";\n}",
    "ground_truth": "function name() public view virtual returns (string memory) {\r\n        return _name;\r\n    }"
}