{
    "contract_address": "0x410cA8f9159f88a864DeEc21f30D5D62E8B75619",
    "heimdall_input": "function name() public view returns (string memory) {\n        if (store_a) {\n            if (store_a - ((store_a / 0x02) < 0x20)) {\n                var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                var_b = 0x22;\n                uint256 var_c = var_c + (0x20 + (((0x1f + (store_a / 0x02)) / 0x20) * 0x20));\n                uint256 var_d = store_a / 0x02;\n                if (store_a) {\n                    if (store_a - ((store_a / 0x02) < 0x20)) {\n                        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                        var_b = 0x22;\n                        if (!store_a / 0x02) {\n                            if (0x1f < (store_a / 0x02)) {\n                                var_a = 0x03;\n                                var_e = storage_map_b[var_a];\n                                if ((0x20 + var_c) + (store_a / 0x02) > (0x20 + (0x20 + var_c))) {\n                                    uint256 var_e = (var_c + 0x20) - var_c;\n                                    uint256 var_f = var_c.length;\n                                    uint256 var_g = 0;\n                                    return abi.encodePacked((var_c + 0x20) - var_c, var_c.length);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }",
    "llm_output": "function name() public view returns (string memory) {\n    uint256 nameLength = _name.length;\n    if (nameLength == 0) {\n        return \"\";\n    }\n\n    uint256 halfLength = nameLength / 2;\n    if (nameLength < 32 || nameLength - halfLength < 32) {\n        revert(\"Decompiler artifact\");\n    }\n\n    uint256 paddedLength = (32 + ((31 + halfLength) / 32) * 32);\n    if (halfLength == 0 || 31 < halfLength) {\n        revert(\"Decompiler artifact\");\n    }\n\n    bytes memory nameBytes = bytes(_name);\n    if ((32 + paddedLength) + halfLength > (32 + (32 + paddedLength))) {\n        revert(\"Decompiler artifact\");\n    }\n\n    return string(nameBytes);\n}",
    "ground_truth": "function name() public view virtual override returns (string memory) {\r\n        return _name;\r\n    }"
}