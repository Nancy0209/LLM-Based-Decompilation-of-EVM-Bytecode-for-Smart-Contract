{
    "contract_address": "0x842FD31eAd327AE42D19B7BFbdB045d3A219c662",
    "heimdall_input": "function changeLpPair(address arg0) public {\n        require(arg0 == (address(arg0)));\n        require(msg.sender == (address(getOwner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        address var_e = address(arg0);\n        var_f = 0x04;\n        storage_map_f[var_e] = 0x01 | (uint248(storage_map_f[var_e]));\n        address var_a = address(arg0);\n        emit _changePair(address(arg0));\n    }",
    "llm_output": "function changeLpPair(address newLpPair) public {\n    require(newLpPair != address(0), \"Invalid address\");\n    require(msg.sender == owner(), \"Ownable: caller is not the owner\");\n\n    lpPair = newLpPair;\n    emit _changePair(newLpPair);\n}",
    "ground_truth": "function changeLpPair(address newPair) external onlyOwner {\r\n        isLpPair[newPair] = true;\r\n        emit _changePair(newPair);\r\n    }"
}