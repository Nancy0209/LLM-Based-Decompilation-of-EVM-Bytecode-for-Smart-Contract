{
    "contract_address": "0xEA00f45b33879A1D55f91ff260C20c96a577E566",
    "heimdall_input": "function transfer(address arg0, uint256 arg1) public {\n        require(arg0 == (address(arg0)));\n        require(address(msg.sender), \"ERC20: transfer amount exceeds balance\");\n        require(address(arg0), \"ERC20: transfer amount exceeds balance\");\n        require(arg1, \"ERC20: transfer amount exceeds balance\");\n        require(!(bytes1(tradingActive)), \"ERC20: transfer amount exceeds balance\");\n        require(address(owner) == (address(msg.sender)), \"ERC20: transfer amount exceeds balance\");\n        require(!(!(address(owner)) == (address(arg0))), \"ERC20: transfer amount exceeds balance\");\n        require(!(address(arg0)), \"ERC20: transfer amount exceeds balance\");\n        require(!(!0xdead == (address(arg0))), \"ERC20: transfer amount exceeds balance\");\n        require(!(!0xdead == (address(arg0))), \"ERC20: transfer amount exceeds balance\");\n        address var_a = address(this);\n        uint256 var_b = 0;\n        require(storage_map_d[var_a] < swapTokensAtAmount, \"ERC20: transfer amount exceeds balance\");\n        require(!(!storage_map_d[var_a] < swapTokensAtAmount), \"ERC20: transfer amount exceeds balance\");\n        require(!(!storage_map_d[var_a] < swapTokensAtAmount), \"ERC20: transfer amount exceeds balance\");\n        require(!(!storage_map_d[var_a] < swapTokensAtAmount), \"ERC20: transfer amount exceeds balance\");\n        require(!(!storage_map_d[var_a] < swapTokensAtAmount), \"ERC20: transfer amount exceeds balance\");\n        require(!(!storage_map_d[var_a] < swapTokensAtAmount), \"ERC20: transfer amount exceeds balance\");\n        require(!(!bytes1(owner / 0x010000000000000000000000000000000000000000)), \"ERC20: transfer amount exceeds balance\");\n        require(!(!bytes1(owner / 0x010000000000000000000000000000000000000000)), \"ERC20: transfer amount exceeds balance\");\n        require(!(!bytes1(owner / 0x010000000000000000000000000000000000000000)), \"ERC20: transfer amount exceeds balance\");\n        require(!(!bytes1(owner / 0x010000000000000000000000000000000000000000)), \"ERC20: transfer amount exceeds balance\");\n        require(!(!bytes1(owner / 0x010000000000000000000000000000000000000000)), \"ERC20: transfer amount exceeds balance\");\n        var_a = address(msg.sender);\n        var_b = 0x1f;\n        require(bytes1(storage_map_d[var_a]), \"ERC20: transfer amount exceeds balance\");\n        require(!(bytes1(storage_map_d[var_a])), \"ERC20: transfer amount exceeds balance\");\n        require(!0, \"ERC20: transfer amount exceeds balance\");\n        var_a = address(arg0);\n        var_b = 0x21;\n        require(!(bytes1(storage_map_d[var_a])), \"ERC20: transfer amount exceeds balance\");\n        require(!(sellTotalFees > 0), \"ERC20: transfer amount exceeds balance\");\n        require(!(arg1 & (sellTotalFees > (0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff / arg1))), \"ERC20: transfer amount exceeds balance\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x11;\n        require(0x64, \"ERC20: transfer amount exceeds balance\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x12;\n        var_a = address(msg.sender);\n        var_b = 0x21;\n        require(!(bytes1(storage_map_d[var_a])), \"ERC20: transfer amount exceeds balance\");\n        require(!(lastLpBurnTimef > 0), \"ERC20: transfer amount exceeds balance\");\n        require(!0, \"ERC20: transfer amount exceeds balance\");\n        require(address(msg.sender), \"ERC20: transfer amount exceeds balance\");\n        require(address(this), \"ERC20: transfer amount exceeds balance\");\n        var_a = address(msg.sender);\n        var_b = 0;\n        require(!(storage_map_d[var_a] < 0), \"ERC20: transfer amount exceeds balance\");\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = 0x20;\n        var_f = 0x26;\n        var_g = 0x45524332303a207472616e7366657220616d6f756e7420657863656564732062;\n        var_h = 0x616c616e63650000000000000000000000000000000000000000000000000000;\n        var_a = address(msg.sender);\n        var_b = 0;\n        storage_map_d[var_a] = storage_map_d[var_a] - 0;\n        var_a = address(this);\n        require(!(storage_map_d[var_a] > 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff), \"ERC20: transfer from the zero address\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x11;\n        storage_map_d[var_a] = storage_map_d[var_a] + 0;\n        uint256 var_d = 0;\n        emit Transfer(address(msg.sender), address(this), 0);\n        require(!(arg1 < 0), \"ERC20: transfer from the zero address\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x11;\n        require(address(msg.sender), \"ERC20: transfer from the zero address\");\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = 0x20;\n        var_f = 0x25;\n        var_g = 0x45524332303a207472616e736665722066726f6d20746865207a65726f206164;\n        var_h = 0x6472657373000000000000000000000000000000000000000000000000000000;\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = 0x20;\n        var_f = 0x23;\n        var_g = 0x45524332303a207472616e7366657220746f20746865207a65726f2061646472;\n        var_h = 0x6573730000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = 0x20;\n        var_f = 0x25;\n        var_g = 0x45524332303a207472616e736665722066726f6d20746865207a65726f206164;\n        var_h = 0x6472657373000000000000000000000000000000000000000000000000000000;\n        require(address(msg.sender), \"ERC20: transfer from the zero address\");\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = 0x20;\n        var_f = 0x25;\n        var_g = 0x45524332303a207472616e736665722066726f6d20746865207a65726f206164;\n        var_h = 0x6472657373000000000000000000000000000000000000000000000000000000;\n        require(!(!bytes1(owner / 0x010000000000000000000000000000000000000000)), \"ERC20: transfer from the zero address\");\n        require(address(msg.sender), \"ERC20: transfer from the zero address\");\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = 0x20;\n        var_f = 0x25;\n        var_g = 0x45524332303a207472616e736665722066726f6d20746865207a65726f206164;\n        var_h = 0x6472657373000000000000000000000000000000000000000000000000000000;\n        var_a = address(arg0);\n        var_b = 0x21;\n        require(!(bytes1(storage_map_d[var_a])), \"ERC20: transfer from the zero address\");\n        require(!(sellTotalFees > 0), \"ERC20: transfer from the zero address\");\n        var_a = address(msg.sender);\n        var_b = 0x21;\n        require(!(bytes1(storage_map_d[var_a])), \"ERC20: transfer from the zero address\");\n        require(!(lastLpBurnTimef > 0), \"ERC20: transfer from the zero address\");\n        require(!0, \"ERC20: transfer from the zero address\");\n        require(!(arg1 < 0), \"ERC20: transfer from the zero address\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x11;\n        require(address(msg.sender), \"ERC20: transfer from the zero address\");\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = 0x20;\n        var_f = 0x25;\n        var_g = 0x45524332303a207472616e736665722066726f6d20746865207a65726f206164;\n        var_h = 0x6472657373000000000000000000000000000000000000000000000000000000;\n        lastLpBurnTime = block.timestamp;\n        var_d = 0x70a0823100000000000000000000000000000000000000000000000000000000;\n        var_e = 0xc7520dbedcd17d84b4f9c25632afdb926ac64c1f;\n        (bool success, bytes memory ret0) = address(this).Unresolved_70a08231(var_e); // staticcall\n        uint256 var_i = var_i + (uint248(ret0.length + 0x1f));\n        require(!(((var_i + ret0.length) - var_i) < 0x20), \"ERC20: transfer from the zero address\");\n        require(!(var_i.length & (percentForLPBurn > (0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff / var_i.length))), \"ERC20: transfer from the zero address\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x11;\n        require(0x2710, \"ERC20: transfer from the zero address\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x12;\n        require(!((var_i.length * percentForLPBurn) / 0x2710), \"ERC20: transfer from the zero address\");\n        require(0xc7520dbedcd17d84b4f9c25632afdb926ac64c1f, \"ERC20: transfer from the zero address\");\n        var_j = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_f = 0x20;\n        var_g = 0x25;\n        var_h = 0x45524332303a207472616e736665722066726f6d20746865207a65726f206164;\n        var_k = 0x6472657373000000000000000000000000000000000000000000000000000000;\n        require(0xdead, \"ERC20: transfer to the zero address\");\n        var_j = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_f = 0x20;\n        var_g = 0x23;\n        var_h = 0x45524332303a207472616e7366657220746f20746865207a65726f2061646472;\n        var_k = 0x6573730000000000000000000000000000000000000000000000000000000000;\n        var_a = 0xc7520dbedcd17d84b4f9c25632afdb926ac64c1f;\n        var_b = 0;\n        require(!(storage_map_d[var_a] < ((var_i.length * percentForLPBurn) / 0x2710)), \"ERC20: transfer amount exceeds balance\");\n        var_j = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_f = 0x20;\n        var_g = 0x26;\n        var_h = 0x45524332303a207472616e7366657220616d6f756e7420657863656564732062;\n        var_k = 0x616c616e63650000000000000000000000000000000000000000000000000000;\n        var_a = 0xc7520dbedcd17d84b4f9c25632afdb926ac64c1f;\n        var_b = 0;\n        storage_map_d[var_a] = storage_map_d[var_a] - ((var_i.length * percentForLPBurn) / 0x2710);\n        var_a = 0xdead;\n        require(!storage_map_d[var_a] > (~((var_i.length * percentForLPBurn) / 0x2710)));\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x11;\n        storage_map_d[var_a] = storage_map_d[var_a] + ((var_i.length * percentForLPBurn) / 0x2710);\n        uint256 var_j = (var_i.length * percentForLPBurn) / 0x2710;\n        emit Transfer(0xc7520dbedcd17d84b4f9c25632afdb926ac64c1f, 0xdead, (var_i.length * percentForLPBurn) / 0x2710);\n        var_j = 0xfff6cae900000000000000000000000000000000000000000000000000000000;\n        require(address(0xc7520dbedcd17d84b4f9c25632afdb926ac64c1f).code.length);\n        (bool success, bytes memory ret0) = address(0xc7520dbedcd17d84b4f9c25632afdb926ac64c1f).{ value: var_b ether }sync(var_f); // call\n        if (!lpBurnEnabled) {\n            if (!lpBurnEnabled) {\n                if (!lpBurnEnabled) {\n                }\n            }\n        }\n        var_a = address(arg0);\n        var_b = 0x21;\n        if (!storage_map_d[var_a]) {\n        }\n        if (!tradingActive / 0x010000) {\n            if (!tradingActive / 0x010000) {\n                if (!tradingActive / 0x010000) {\n                    if (!tradingActive / 0x010000) {\n                        if (!tradingActive / 0x010000) {\n                        }\n                    }\n                }\n            }\n        }\n        if (tradingActive / 0x0100) {\n            require(bytes1(tradingActive / 0x0100), \"Sell transfer amount exceeds the maxTransactionAmount.\");\n            require(!(bytes1(transferDelayEnabled)), \"Sell transfer amount exceeds the maxTransactionAmount.\");\n            require(address(owner) == (address(arg0)), \"Sell transfer amount exceeds the maxTransactionAmount.\");\n            require(!(!(address(arg0)) == 0x7a250d5630b4cf539739df2c5dacb4c659f2488d), \"Sell transfer amount exceeds the maxTransactionAmount.\");\n            var_a = address(msg.sender);\n            var_b = 0x21;\n            require(!(!(address(arg0)) == 0x7a250d5630b4cf539739df2c5dacb4c659f2488d), \"Sell transfer amount exceeds the maxTransactionAmount.\");\n            var_a = address(arg0);\n            var_b = 0x20;\n            require(!(bytes1(storage_map_d[var_a])), \"Sell transfer amount exceeds the maxTransactionAmount.\");\n            var_a = address(arg0);\n            var_b = 0x21;\n            require(!(!bytes1(storage_map_d[var_a])), \"Sell transfer amount exceeds the maxTransactionAmount.\");\n            var_a = address(msg.sender);\n            var_b = 0x20;\n            require(!(bytes1(storage_map_d[var_a])), \"Sell transfer amount exceeds the maxTransactionAmount.\");\n            var_a = address(arg0);\n            var_b = 0x20;\n            require(!(!bytes1(storage_map_d[var_a])), \"Sell transfer amount exceeds the maxTransactionAmount.\");\n        }\n        require(!(arg1 > lastLpBurnTimed), \"Sell transfer amount exceeds the maxTransactionAmount.\");\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = 0x20;\n        var_f = 0x36;\n        var_g = 0x53656c6c207472616e7366657220616d6f756e74206578636565647320746865;\n        var_h = 0x206d61785472616e73616374696f6e416d6f756e742e00000000000000000000;\n        if (!storage_map_d[var_a]) {\n        }\n        require(!(arg1 > lastLpBurnTimed), \"Buy transfer amount exceeds the maxTransactionAmount.\");\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = 0x20;\n        var_f = 0x35;\n        var_g = 0x427579207472616e7366657220616d6f756e7420657863656564732074686520;\n        var_h = 0x6d61785472616e73616374696f6e416d6f756e742e0000000000000000000000;\n        if (!storage_map_d[var_a]) {\n        }\n        var_a = tx.origin;\n        var_b = 0x12;\n        require(block.number > storage_map_d[var_a], \"_transfer:: Transfer Delay enabled.  Only one purchase per block allowed.\");\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = 0x20;\n        var_f = 0x49;\n        var_g = 0x5f7472616e736665723a3a205472616e736665722044656c617920656e61626c;\n        var_h = 0x65642e20204f6e6c79206f6e652070757263686173652070657220626c6f636b;\n        var_k = 0x20616c6c6f7765642e0000000000000000000000000000000000000000000000;\n        if (address(owner) == (address(arg0))) {\n            if (address(owner) == (address(arg0))) {\n            }\n        }\n        var_a = address(msg.sender);\n        var_b = 0x1f;\n        require(bytes1(storage_map_d[var_a]), \"Trading is not active.\");\n        require(bytes1(storage_map_d[var_a]), \"Trading is not active.\");\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = 0x20;\n        var_f = 0x16;\n        var_g = 0x54726164696e67206973206e6f74206163746976652e00000000000000000000;\n        if (!address(arg0)) {\n            if (!address(arg0)) {\n            }\n        }\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = 0x20;\n        var_f = 0x23;\n        var_g = 0x45524332303a207472616e7366657220746f20746865207a65726f2061646472;\n        var_h = 0x6573730000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = 0x20;\n        var_f = 0x25;\n        var_g = 0x45524332303a207472616e736665722066726f6d20746865207a65726f206164;\n        var_h = 0x6472657373000000000000000000000000000000000000000000000000000000;\n    }",
    "llm_output": "function transfer(address recipient, uint256 amount) public {\n    require(recipient != address(0), \"ERC20: transfer to the zero address\");\n    require(amount > 0, \"ERC20: transfer amount must be greater than zero\");\n    require(tradingActive, \"Trading is not active\");\n\n    if (transferDelayEnabled) {\n        require(block.number > lastLpBurnTime, \"Transfer Delay enabled. Only one purchase per block allowed.\");\n    }\n\n    uint256 senderBalance = _balances[msg.sender];\n    require(senderBalance >= amount, \"ERC20: transfer amount exceeds balance\");\n\n    _balances[msg.sender] = senderBalance - amount;\n    _balances[recipient] += amount;\n\n    emit Transfer(msg.sender, recipient, amount);\n}",
    "ground_truth": "function transfer(address recipient, uint256 amount) public virtual override returns (bool) {\r\n        _transfer(_msgSender(), recipient, amount);\r\n        return true;\r\n    }"
}