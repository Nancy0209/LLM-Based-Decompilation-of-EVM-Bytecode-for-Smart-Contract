{
    "contract_address": "0x2C6C4c106F423c1C25932c474Abb356e8BBa8cC7",
    "heimdall_input": "function revokeRole(bytes32 arg0, address arg1) public payable {\n        require(arg1 == (address(arg1)));\n        uint256 var_a = arg0;\n        var_b = 0x0b;\n        var_a = storage_map_e[var_a];\n        var_b = 0x0b;\n        var_a = address(msg.sender);\n        uint256 var_b = keccak256(var_a);\n        require(bytes1(storage_map_b[var_a]), \"Strings: hex length insufficient\");\n        var_a = arg0;\n        var_b = 0x0b;\n        var_a = address(arg1);\n        var_b = keccak256(var_a);\n        require(!(bytes1(storage_map_b[var_a])), \"Strings: hex length insufficient\");\n        var_a = arg0;\n        var_b = 0x0b;\n        var_a = address(arg1);\n        var_b = keccak256(var_a);\n        storage_map_b[var_a] = uint248(storage_map_b[var_a]);\n        emit RoleRevoked(arg0, address(arg1), msg.sender);\n        require(!(0x02 & (0x14 > 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)), \"Strings: hex length insufficient\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x11;\n        require(!(0x02 > 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffd7), \"Strings: hex length insufficient\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x11;\n        require(!(0x2a > 0xffffffffffffffff), \"Strings: hex length insufficient\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x41;\n        var_d = 0x2a;\n        uint256 var_e = var_e + 0x60;\n        require(!0x2a, \"Strings: hex length insufficient\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x32;\n        var_f = 0x3000000000000000000000000000000000000000000000000000000000000000;\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x32;\n        var_g = 0x7800000000000000000000000000000000000000000000000000000000000000;\n        require(!(0x02 & (0x14 > 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)), \"Strings: hex length insufficient\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x11;\n        require(!(0x01 > 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffd7), \"Strings: hex length insufficient\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x11;\n        require(!(0x29 > 0x01), \"Strings: hex length insufficient\");\n        require(!(address(msg.sender)), \"Strings: hex length insufficient\");\n        var_h = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_i = 0x20;\n        var_j = 0x20;\n        var_k = 0x537472696e67733a20686578206c656e67746820696e73756666696369656e74;\n        require(bytes1(address(msg.sender)) < 0x10);\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x32;\n        require(0x29 < var_e.length);\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x32;\n        bytes1 var_l = (bytes1(0x3031323334353637383961626364656600000000000000000000000000000000 << 0xf8));\n        require(0x29);\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x11;\n    }",
    "llm_output": "function revokeRole(bytes32 role, address account) public {\n    require(account == address(account), \"Invalid account address\");\n\n    // Check if the sender has the role\n    bytes32 senderRoleKey = keccak256(abi.encodePacked(role, msg.sender));\n    require(storage_map_b[senderRoleKey] != 0, \"Sender does not have the role\");\n\n    // Check if the account has the role\n    bytes32 accountRoleKey = keccak256(abi.encodePacked(role, account));\n    require(storage_map_b[accountRoleKey] != 0, \"Account does not have the role\");\n\n    // Revoke the role from the account\n    storage_map_b[accountRoleKey] = 0;\n\n    // Emit the RoleRevoked event\n    emit RoleRevoked(role, account, msg.sender);\n\n    // Handle decompiler artifacts\n    revert(\"Decompiler artifact\");\n}",
    "ground_truth": "function revokeRole(bytes32 role, address account) external;\\n\\n    /**\\n     * @dev Revokes `role` from the calling account.\\n     *\\n     * Roles are often managed via {grantRole}"
}