{
    "contract_address": "0x780c7f2FdF0D47F25f5858975DBd0159DB50C1B2",
    "heimdall_input": "function transfer(address arg0, uint256 arg1) public {\n        require(arg0 == (address(arg0)));\n        require(arg1 == arg1);\n        require(address(msg.sender) - 0, \"ERC20: transfer amount exceeds balance\");\n        require(address(arg0) - 0, \"ERC20: transfer amount exceeds balance\");\n        require(arg1 - 0, \"ERC20: transfer amount exceeds balance\");\n        require(!(bytes1(tradingEnabled / 0x01)), \"ERC20: transfer amount exceeds balance\");\n        require(!(!(address(msg.sender)) == (address(_owner / 0x01))), \"ERC20: transfer amount exceeds balance\");\n        require(!(!(address(arg0)) == (address(_owner / 0x01))), \"ERC20: transfer amount exceeds balance\");\n        require(!(!(address(arg0)) == 0), \"ERC20: transfer amount exceeds balance\");\n        require(!(!(address(arg0)) == 0xdead), \"ERC20: transfer amount exceeds balance\");\n        require(!(!(address(arg0)) == 0xdead), \"ERC20: transfer amount exceeds balance\");\n        address var_a = address(this);\n        uint256 var_b = 0;\n        require(!(!storage_map_b[var_a] < swapTokensAmount), \"ERC20: transfer amount exceeds balance\");\n        require(!(!storage_map_b[var_a] < swapTokensAmount), \"ERC20: transfer amount exceeds balance\");\n        require(!(!storage_map_b[var_a] < swapTokensAmount), \"ERC20: transfer amount exceeds balance\");\n        require(!(!storage_map_b[var_a] < swapTokensAmount), \"ERC20: transfer amount exceeds balance\");\n        require(!(!storage_map_b[var_a] < swapTokensAmount), \"ERC20: transfer amount exceeds balance\");\n        require(!(!storage_map_b[var_a] < swapTokensAmount), \"ERC20: transfer amount exceeds balance\");\n        var_a = address(msg.sender);\n        var_b = 0x19;\n        require(bytes1(storage_map_b[var_a] / 0x01), \"ERC20: transfer amount exceeds balance\");\n        require(!(bytes1(storage_map_b[var_a] / 0x01)), \"ERC20: transfer amount exceeds balance\");\n        require(!0, \"ERC20: transfer amount exceeds balance\");\n        var_a = address(arg0);\n        var_b = 0x1b;\n        require(!(bytes1(storage_map_b[var_a] / 0x01)), \"ERC20: transfer amount exceeds balance\");\n        require(!(sellTotalTaxes > 0), \"ERC20: transfer amount exceeds balance\");\n        require(!arg1 | (sellTotalTaxes == ((arg1 * sellTotalTaxes) / arg1)), \"ERC20: transfer amount exceeds balance\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x11;\n        require(0x64, \"ERC20: transfer amount exceeds balance\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x12;\n        require(!(0 > 0), \"ERC20: transfer amount exceeds balance\");\n        require(address(msg.sender) - 0, \"ERC20: transfer amount exceeds balance\");\n        require(address(this) - 0, \"ERC20: transfer amount exceeds balance\");\n        var_a = address(msg.sender);\n        var_b = 0;\n        require(!(storage_map_b[var_a] < 0), \"ERC20: transfer amount exceeds balance\");\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_e = ((0x04 + var_f) + 0x20) - (0x04 + var_f);\n        var_g = 0x26;\n        var_h = 0x45524332303a207472616e7366657220616d6f756e7420657863656564732062;\n        var_i = 0x616c616e63650000000000000000000000000000000000000000000000000000;\n        var_a = address(msg.sender);\n        var_b = 0;\n        storage_map_b[var_a] = storage_map_b[var_a] - 0;\n        var_a = address(this);\n        var_b = 0;\n        require(!(storage_map_b[var_a] > (storage_map_b[var_a] + 0)), \"ERC20: transfer from the zero address\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x11;\n        storage_map_b[var_a] = storage_map_b[var_a] + 0;\n        uint256 var_d = 0;\n        emit Transfer(address(msg.sender), address(this), 0);\n        require(!((arg1 - 0) > arg1), \"ERC20: transfer from the zero address\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x11;\n        require(address(msg.sender) - 0, \"ERC20: transfer from the zero address\");\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = ((0x04 + var_f) + 0x20) - (0x04 + var_f);\n        var_g = 0x25;\n        var_h = 0x45524332303a207472616e736665722066726f6d20746865207a65726f206164;\n        var_i = 0x6472657373000000000000000000000000000000000000000000000000000000;\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = ((0x04 + var_f) + 0x20) - (0x04 + var_f);\n        var_g = 0x23;\n        var_h = 0x45524332303a207472616e7366657220746f20746865207a65726f2061646472;\n        var_i = 0x6573730000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = ((0x04 + var_f) + 0x20) - (0x04 + var_f);\n        var_g = 0x25;\n        var_h = 0x45524332303a207472616e736665722066726f6d20746865207a65726f206164;\n        var_i = 0x6472657373000000000000000000000000000000000000000000000000000000;\n        var_a = address(msg.sender);\n        var_b = 0x1b;\n        if (!storage_map_b[var_a] / 0x01) {\n            require(!(bytes1(storage_map_b[var_a] / 0x01)), \"ERC20: transfer from the zero address\");\n        }\n        require(address(msg.sender) - 0, \"ERC20: transfer from the zero address\");\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = ((0x04 + var_f) + 0x20) - (0x04 + var_f);\n        var_g = 0x25;\n        var_h = 0x45524332303a207472616e736665722066726f6d20746865207a65726f206164;\n        var_i = 0x6472657373000000000000000000000000000000000000000000000000000000;\n        require(!(!bytes1(uniswapV2Pair / 0x010000000000000000000000000000000000000000)), \"ERC20: transfer from the zero address\");\n        require(address(msg.sender) - 0, \"ERC20: transfer from the zero address\");\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = ((0x04 + var_f) + 0x20) - (0x04 + var_f);\n        var_g = 0x25;\n        var_h = 0x45524332303a207472616e736665722066726f6d20746865207a65726f206164;\n        var_i = 0x6472657373000000000000000000000000000000000000000000000000000000;\n        var_a = address(arg0);\n        var_b = 0x1b;\n        require(!(bytes1(storage_map_b[var_a] / 0x01)), \"ERC20: transfer from the zero address\");\n        require(!(sellTotalTaxes > 0), \"ERC20: transfer from the zero address\");\n        require(!(0 > 0), \"ERC20: transfer from the zero address\");\n        require(!((arg1 - 0) > arg1), \"ERC20: transfer from the zero address\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x11;\n        require(address(msg.sender) - 0, \"ERC20: transfer from the zero address\");\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = ((0x04 + var_f) + 0x20) - (0x04 + var_f);\n        var_g = 0x25;\n        var_h = 0x45524332303a207472616e736665722066726f6d20746865207a65726f206164;\n        var_i = 0x6472657373000000000000000000000000000000000000000000000000000000;\n        var_a = address(msg.sender);\n        var_b = 0x1b;\n        if (!storage_map_b[var_a] / 0x01) {\n            if (!buyTotalTaxes > 0) {\n            }\n            if (!tradingEnabled / 0x010000) {\n                if (!tradingEnabled / 0x010000) {\n                    if (!tradingEnabled / 0x010000) {\n                        if (!tradingEnabled / 0x010000) {\n                            if (!tradingEnabled / 0x010000) {\n                            }\n                        }\n                    }\n                }\n            }\n            require(!(bytes1(storage_map_b[var_a] / 0x01)), \"Sell transfer amount exceeds the maxTxAmount.\");\n            var_a = address(msg.sender);\n            var_b = 0x1b;\n            require(bytes1(tradingEnabled / 0x0100), \"Sell transfer amount exceeds the maxTxAmount.\");\n            var_a = address(arg0);\n            var_b = 0x1a;\n            require(!(bytes1(storage_map_b[var_a] / 0x01)), \"Sell transfer amount exceeds the maxTxAmount.\");\n            var_a = address(arg0);\n            var_b = 0x1b;\n            require(!(!bytes1(storage_map_b[var_a] / 0x01)), \"Sell transfer amount exceeds the maxTxAmount.\");\n            var_a = address(msg.sender);\n            var_b = 0x1a;\n            require(!(bytes1(storage_map_b[var_a] / 0x01)), \"Sell transfer amount exceeds the maxTxAmount.\");\n            var_a = address(arg0);\n            var_b = 0x1a;\n            require(!(!bytes1(storage_map_b[var_a] / 0x01)), \"Sell transfer amount exceeds the maxTxAmount.\");\n        }\n        require(!(arg1 > maxTxAmount), \"Sell transfer amount exceeds the maxTxAmount.\");\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = ((0x04 + var_f) + 0x20) - (0x04 + var_f);\n        var_g = 0x2d;\n        var_h = 0x53656c6c207472616e7366657220616d6f756e74206578636565647320746865;\n        var_i = 0x206d61785478416d6f756e742e00000000000000000000000000000000000000;\n        if (!storage_map_b[var_a] / 0x01) {\n        }\n        require(!(arg1 > maxTxAmount), \"Buy transfer amount exceeds the maxTxAmount.\");\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = ((0x04 + var_f) + 0x20) - (0x04 + var_f);\n        var_g = 0x2c;\n        var_h = 0x427579207472616e7366657220616d6f756e7420657863656564732074686520;\n        var_i = 0x6d61785478416d6f756e742e0000000000000000000000000000000000000000;\n        if (!storage_map_b[var_a] / 0x01) {\n        }\n        var_a = address(msg.sender);\n        var_b = 0x19;\n        require(bytes1(storage_map_b[var_a] / 0x01), \"Trading is not active.\");\n        require(bytes1(storage_map_b[var_a] / 0x01), \"Trading is not active.\");\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = ((0x04 + var_f) + 0x20) - (0x04 + var_f);\n        var_g = 0x16;\n        var_h = 0x54726164696e67206973206e6f74206163746976652e00000000000000000000;\n        if (address(arg0) == 0) {\n            if (address(arg0) == 0) {\n            }\n        }\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = ((0x04 + var_f) + 0x20) - (0x04 + var_f);\n        var_g = 0x23;\n        var_h = 0x45524332303a207472616e7366657220746f20746865207a65726f2061646472;\n        var_i = 0x6573730000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = ((0x04 + var_f) + 0x20) - (0x04 + var_f);\n        var_g = 0x25;\n        var_h = 0x45524332303a207472616e736665722066726f6d20746865207a65726f206164;\n        var_i = 0x6472657373000000000000000000000000000000000000000000000000000000;\n    }",
    "llm_output": "function transfer(address recipient, uint256 amount) public {\n    require(recipient != address(0), \"ERC20: transfer to the zero address\");\n    require(amount > 0, \"ERC20: transfer amount must be greater than zero\");\n    require(tradingEnabled, \"Trading is not active.\");\n    \n    address sender = msg.sender;\n    uint256 senderBalance = balanceOf(sender);\n    require(senderBalance >= amount, \"ERC20: transfer amount exceeds balance\");\n    \n    if (automatedMarketMakerPairs[recipient]) {\n        require(amount <= maxTxAmount, \"Sell transfer amount exceeds the maxTxAmount.\");\n    } else if (automatedMarketMakerPairs[sender]) {\n        require(amount <= maxTxAmount, \"Buy transfer amount exceeds the maxTxAmount.\");\n    }\n    \n    _transfer(sender, recipient, amount);\n    emit Transfer(sender, recipient, amount);\n}\n\nfunction _transfer(address sender, address recipient, uint256 amount) internal {\n    // Internal transfer logic\n}",
    "ground_truth": "function transfer(address recipient, uint256 amount) public virtual override returns (bool) {\\r\\n        _transfer(_msgSender(), recipient, amount);\\r\\n        return true;\\r\\n    }"
}