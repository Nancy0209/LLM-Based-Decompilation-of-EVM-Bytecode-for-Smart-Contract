{
    "contract_address": "0x6BC7d0c26885D7c1C384c3aF3CA6214D628B2712",
    "heimdall_input": "function name() public view returns (string memory) {\n        if (store_a) {\n            if (store_a - ((store_a >> 0x01) < 0x20)) {\n                var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                var_b = 0x22;\n                uint256 var_c = var_c + (0x20 + (((0x1f + (store_a >> 0x01)) / 0x20) * 0x20));\n                bytes32 var_d = store_a >> 0x01;\n                if (store_a) {\n                    if (store_a - ((store_a >> 0x01) < 0x20)) {\n                        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                        var_b = 0x22;\n                        if (!store_a >> 0x01) {\n                            if (0x1f < (store_a >> 0x01)) {\n                                var_a = 0x03;\n                                var_e = storage_map_b[var_a];\n                                if ((0x20 + var_c) + (store_a >> 0x01) > (0x20 + (0x20 + var_c))) {\n                                    var_e = 0x20;\n                                    uint256 var_f = var_c.length;\n                                    uint256 var_g = 0;\n                                    return abi.encodePacked(0x20, var_c.length);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }",
    "llm_output": "function name() public view returns (string memory) {\n    if (storedNameLength > 0) {\n        if (storedNameLength > 0) {\n            revert(\"Decompiler artifact\");\n        }\n        bytes32 nameHash = storedNameLength >> 1;\n        if (storedNameLength > 0) {\n            if (storedNameLength >> 1 > 0x1f) {\n                revert(\"Decompiler artifact\");\n            }\n            bytes32 storedName = nameStorage[nameHash];\n            return abi.encodePacked(storedName);\n        }\n    }\n    revert(\"Decompiler artifact\");\n}",
    "ground_truth": "function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }"
}