{
    "contract_address": "0xF6FF7F8635a951ecF4D68264b32FB3a4b5f9cf15",
    "heimdall_input": "function updateBuyFees(uint256 arg0, uint256 arg1, uint256 arg2) public {\n        require(msg.sender == (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        lastLpBurnTimei = arg0;\n        buyLiquidityFee = arg1;\n        buyDevFee = arg2;\n        require(!arg0 > (arg1 + arg0));\n        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x11;\n    }",
    "llm_output": "function updateBuyFees(\n    uint256 _marketingFee,\n    uint256 _liquidityFee,\n    uint256 _devFee\n) external {\n    // caller must be the contract owner\n    require(msg.sender == owner(), \"Ownable: caller is not the owner\");\n\n    // update individual buy-side fees\n    buyMarketingFee = _marketingFee;\n    buyLiquidityFee = _liquidityFee;\n    buyDevFee       = _devFee;\n\n    // update aggregate buy fee and sanity-check the total\n    buyTotalFees = buyMarketingFee + buyLiquidityFee + buyDevFee;\n    require(buyTotalFees <= 20, \"Must keep fees at 20% or less\");\n}",
    "ground_truth": "function updateBuyFees(uint256 _marketingFee, uint256 _liquidityFee, uint256 _devFee) external onlyOwner {\\r\\n        buyMarketingFee = _marketingFee;\\r\\n        buyLiquidityFee = _liquidityFee;\\r\\n        buyDevFee = _devFee;\\r\\n        buyTotalFees = buyMarketingFee + buyLiquidityFee + buyDevFee;\\r\\n        require(buyTotalFees <= 50, \\\"Must keep fees at 50% or less\\\");\\r\\n    }"
}