{
    "contract_address": "0x39f3C6C2a3E69D908DFE9863C9127080CC487933",
    "heimdall_input": "function transfer(address arg0, uint256 arg1) public returns (bool) {\n        require(arg0 == (address(arg0)));\n        require(arg1 > 0, \"ERC20: transfer amount exceeds balance\");\n        address var_a = address(msg.sender);\n        var_b = 0x13;\n        require(!(!bytes1(storage_map_b[var_a])), \"ERC20: transfer amount exceeds balance\");\n        require(!(!bytes1(storage_map_b[var_a])), \"ERC20: transfer amount exceeds balance\");\n        require(!(address(pair) == (address(msg.sender))), \"ERC20: transfer amount exceeds balance\");\n        require(!(address(pair) == (address(msg.sender))), \"ERC20: transfer amount exceeds balance\");\n        require(!(address(pair) == (address(msg.sender))), \"ERC20: transfer amount exceeds balance\");\n        require(!(address(pair) == (address(msg.sender))), \"ERC20: transfer amount exceeds balance\");\n        require(!(address(pair) == (address(msg.sender))), \"ERC20: transfer amount exceeds balance\");\n        require(address(pair) == (address(msg.sender)), \"ERC20: transfer amount exceeds balance\");\n        var_a = address(arg0);\n        var_b = 0x13;\n        require(!(!bytes1(storage_map_b[var_a])), \"ERC20: transfer amount exceeds balance\");\n        require(!(!bytes1(storage_map_b[var_a])), \"ERC20: transfer amount exceeds balance\");\n        require(!(!bytes1(storage_map_b[var_a])), \"ERC20: transfer amount exceeds balance\");\n        uint256 var_c = 0x40 + var_c;\n        uint256 var_d = 0;\n        uint256 var_e = 0;\n        var_a = address(msg.sender);\n        var_b = 0x13;\n        require(!(!bytes1(storage_map_b[var_a])), \"ERC20: transfer amount exceeds balance\");\n        require(!(!bytes1(storage_map_b[var_a])), \"ERC20: transfer amount exceeds balance\");\n        require(bytes1(tradingEnabled), \"ERC20: transfer amount exceeds balance\");\n        require(bytes1(tradingEnabled), \"ERC20: transfer amount exceeds balance\");\n        require(!(bytes1(tradingEnabled)), \"ERC20: transfer amount exceeds balance\");\n        require((0 == ((0 * arg1) / arg1)) | !arg1, \"ERC20: transfer amount exceeds balance\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x11;\n        require(0x64, \"ERC20: transfer amount exceeds balance\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x12;\n        require(!(bytes1(tradingEnabled / 0x0100)), \"ERC20: transfer amount exceeds balance\");\n        require(!(!(address(pair)) == (address(msg.sender))), \"ERC20: transfer amount exceeds balance\");\n        require(bytes1(tradingEnabled), \"ERC20: transfer amount exceeds balance\");\n        require(!((arg1 - ((0 * arg1) / 0x64)) > arg1), \"ERC20: transfer amount exceeds balance\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x11;\n        require(address(msg.sender), \"ERC20: transfer amount exceeds balance\");\n        require(address(arg0), \"ERC20: transfer amount exceeds balance\");\n        var_a = address(msg.sender);\n        uint256 var_b = 0;\n        require(!(storage_map_b[var_a] < (arg1 - ((0 * arg1) / 0x64))), \"ERC20: transfer amount exceeds balance\");\n        var_g = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_h = 0x20;\n        var_i = 0x26;\n        var_j = 0x45524332303a207472616e7366657220616d6f756e7420657863656564732062;\n        var_k = 0x616c616e63650000000000000000000000000000000000000000000000000000;\n        require(!(storage_map_b[var_a] - (arg1 - ((0 * arg1) / 0x64)) > storage_map_b[var_a]), \"ERC20: transfer to the zero address\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x11;\n        var_a = address(msg.sender);\n        var_b = 0;\n        storage_map_b[var_a] = storage_map_b[var_a] - (arg1 - ((0 * arg1) / 0x64));\n        var_a = address(arg0);\n        require(!(storage_map_b[var_a] > ((arg1 - ((0 * arg1) / 0x64)) + storage_map_b[var_a])), \"ERC20: transfer to the zero address\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x11;\n        storage_map_b[var_a] = (arg1 - ((0 * arg1) / 0x64)) + storage_map_b[var_a];\n        uint256 var_g = arg1 - ((0 * arg1) / 0x64);\n        emit Transfer(address(msg.sender), address(arg0), arg1 - ((0 * arg1) / 0x64));\n        require(!((0 * arg1) / 0x64), \"ERC20: transfer to the zero address\");\n        require(!0, \"ERC20: transfer to the zero address\");\n        require(address(msg.sender) - (address(pair)), \"ERC20: transfer to the zero address\");\n        require(address(pair) == (address(msg.sender)), \"ERC20: transfer to the zero address\");\n        require(0x038d7ea4c68000, \"ERC20: transfer to the zero address\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x12;\n        var_g = 0x01;\n        return 0x01;\n        require((0 == ((0 * arg1) / arg1)) | !arg1, \"ERC20: transfer to the zero address\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x11;\n        var_g = 0x01;\n        return 0x01;\n        var_g = 0x01;\n        return 0x01;\n        var_g = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_h = 0x20;\n        var_i = 0x23;\n        var_j = 0x45524332303a207472616e7366657220746f20746865207a65726f2061646472;\n        var_k = 0x6573730000000000000000000000000000000000000000000000000000000000;\n        var_g = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_h = 0x20;\n        var_i = 0x25;\n        var_j = 0x45524332303a207472616e736665722066726f6d20746865207a65726f206164;\n        var_k = 0x6472657373000000000000000000000000000000000000000000000000000000;\n        tradingEnabled = 0x01 | (uint248(tradingEnabled));\n        require(!0);\n        var_a = address(this);\n        var_b = 0;\n        require(storage_map_b[var_a] < store_g);\n        require(!store_g > 0x01);\n        require((0 == 0) | !0x02);\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x11;\n        require(var_l == ((var_l * store_g) / store_g) | !store_g);\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x11;\n        require(0);\n        require(!(store_g - ((var_l * store_g) / 0)) > store_g);\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x11;\n        var_g = 0x02;\n        var_c = var_c + 0x60;\n        var_m = msg.data[4:68];\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x32;\n        address var_n = address(this);\n        var_o = 0xad5c464800000000000000000000000000000000000000000000000000000000;\n        (bool success, bytes memory ret0) = address(router).WETH(var_k); // staticcall\n        var_c = var_c + (uint248(ret0.length + 0x1f));\n        require(!((var_c + ret0.length) - var_c) < 0x20);\n        require(var_c.length == (address(var_c.length)));\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x32;\n        uint256 var_p = address(var_c.length);\n        require(address(this));\n        require(address(router));\n        var_a = address(this);\n        var_b = 0x01;\n        var_a = address(router);\n        var_b = keccak256(var_a);\n        storage_map_b[var_a] = store_g - ((var_l * store_g) / 0);\n        uint256 var_q = store_g - ((var_l * store_g) / 0);\n        emit Approval(address(this), address(router), store_g - ((var_l * store_g) / 0));\n        var_q = 0x791ac94700000000000000000000000000000000000000000000000000000000;\n        uint256 var_r = store_g - ((var_l * store_g) / 0);\n        uint256 var_s = 0;\n        var_t = 0xa0;\n        uint256 var_u = var_c.length;\n        address var_v = address(this);\n        uint256 var_w = block.timestamp;\n        require(address(router).code.length);\n        (bool success, bytes memory ret0) = address(router).Unresolved_791ac947(var_r); // call\n        require(!(address(this).balance - address(this).balance) > address(this).balance);\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x11;\n        require(!(0 - (var_l)) > 0);\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x11;\n        require(0 - (var_l));\n        require(var_l == (var_l * (address(this).balance - address(this).balance / (0 - (var_l))) / (address(this).balance - address(this).balance / (0 - (var_l)))) | (!(address(this).balance - address(this).balance) / (0 - (var_l))));\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x11;\n        require(!(var_l) * (address(this).balance - address(this).balance / (0 - (var_l))));\n        require(address(this));\n        require(address(router));\n        var_a = address(this);\n        var_b = 0x01;\n        var_a = address(router);\n        var_b = keccak256(var_a);\n        storage_map_b[var_a] = (var_l * store_g) / 0;\n        var_q = (var_l * store_g) / 0;\n        emit Approval(address(this), address(router), (var_l * store_g) / 0);\n        var_q = 0xf305d71900000000000000000000000000000000000000000000000000000000;\n        var_r = address(this);\n        var_s = (var_l * store_g) / 0;\n        uint256 var_t = 0;\n        var_v = 0;\n        var_w = 0xdead;\n        var_u = block.timestamp;\n        (bool success, bytes memory ret0) = address(router).{ value: (var_l) * (address(this).balance - address(this).balance / (0 - (var_l))) }Unresolved_f305d719(var_r); // call\n        var_c = var_c + (uint248(ret0.length + 0x1f));\n        require(!((var_c + ret0.length) - var_c) < 0x60);\n        require(address(this).balance - address(this).balance / (0 - (var_l)) == ((address(this).balance - address(this).balance / (0 - (var_l)) * 0x02) / 0x02) | !0x02);\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x11;\n        var_q = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_r = 0x20;\n        var_s = 0x22;\n        var_t = 0x45524332303a20617070726f766520746f20746865207a65726f206164647265;\n        var_v = 0x7373000000000000000000000000000000000000000000000000000000000000;\n        var_q = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_r = 0x20;\n        var_s = 0x24;\n        var_t = 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464;\n        var_v = 0x7265737300000000000000000000000000000000000000000000000000000000;\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x12;\n        var_q = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_r = 0x20;\n        var_s = 0x22;\n        var_t = 0x45524332303a20617070726f766520746f20746865207a65726f206164647265;\n        var_v = 0x7373000000000000000000000000000000000000000000000000000000000000;\n        var_q = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_r = 0x20;\n        var_s = 0x24;\n        var_t = 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464;\n        var_v = 0x7265737300000000000000000000000000000000000000000000000000000000;\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x12;\n        if (!(address(pair)) == (address(arg0))) {\n            if (!(address(pair)) == (address(arg0))) {\n                if (!storage_map_b[var_a]) {\n                    if (storage_map_b[var_a]) {\n                    }\n                    if (!storage_map_b[var_a]) {\n                    }\n                    if (address(pair) == (address(arg0))) {\n                    }\n                    if (address(pair) == (address(msg.sender))) {\n                        require(!(address(pair) == (address(arg0))), \"Trading not enabled\");\n                        require(!(address(pair) == (address(arg0))), \"Trading not enabled\");\n                    }\n                }\n            }\n            var_a = address(msg.sender);\n            var_b = 0x01;\n            var_a = address(arg0);\n            var_b = keccak256(var_a);\n            require(!(bytes1(storage_map_b[var_a])), \"Trading not enabled\");\n        }\n        require(bytes1(tradingEnabled / 0x010000), \"Trading not enabled\");\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_x = 0x20;\n        var_y = 0x13;\n        var_h = 0x54726164696e67206e6f7420656e61626c656400000000000000000000000000;\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_x = 0x20;\n        var_y = 0x29;\n        var_h = 0x5472616e7366657220616d6f756e74206d757374206265206772656174657220;\n        var_i = 0x7468616e207a65726f0000000000000000000000000000000000000000000000;\n    }",
    "llm_output": "function transfer(address recipient, uint256 amount) public pure returns (bool) {\n    revert(\"Decompiler artifact\");\n}",
    "ground_truth": "function transfer(address recipient, uint256 amount) public override returns (bool) {\r\n        _transfer(msg.sender, recipient, amount);\r\n        return true;\r\n    }"
}