{
    "contract_address": "0x7839BbAaFe6B84F088e494818C79D84478411D9e",
    "heimdall_input": "function decreaseAllowance(address arg0, uint256 arg1) public payable returns (bool) {\n        require(arg0 == (address(arg0)));\n        uint256 var_a = 0x60 + var_a;\n        var_b = 0x25;\n        var_c = this.code[2639:2676];\n        address var_d = msg.sender;\n        var_e = 0x02;\n        var_d = address(arg0);\n        address var_e = keccak256(var_d);\n        require(!(arg1 > storage_map_c[var_d]), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        var_f = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_g = 0x20;\n        uint256 var_h = var_a.length;\n        require(!(0 > var_a.length), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        uint256 var_i = 0;\n        require(address(msg.sender), \"ERC20: approve to the zero address\");\n        require(address(arg0), \"ERC20: approve to the zero address\");\n        var_d = address(msg.sender);\n        var_e = 0x02;\n        var_d = address(arg0);\n        var_e = keccak256(var_d);\n        storage_map_c[var_d] = storage_map_c[var_d] - arg1;\n        address var_f = storage_map_c[var_d] - arg1;\n        emit Approval(address(msg.sender), address(arg0), storage_map_c[var_d] - arg1);\n        var_f = 0x01;\n        return 0x01;\n        var_f = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_g = 0x20;\n        var_h = 0x22;\n        var_j = 0x45524332303a20617070726f766520746f20746865207a65726f206164647265;\n        var_k = 0x7373000000000000000000000000000000000000000000000000000000000000;\n        var_f = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_g = 0x20;\n        var_h = 0x24;\n        var_j = 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464;\n        var_k = 0x7265737300000000000000000000000000000000000000000000000000000000;\n    }",
    "llm_output": "function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {\n    // Redundant check preserved from decompiled byte-code\n    require(spender == address(spender));\n\n    // Check that current allowance is sufficient\n    require(subtractedValue <= _allowances[msg.sender][spender], \"\");\n\n    // Zero-address checks present in original logic\n    require(msg.sender != address(0), \"ERC20: approve to the zero address\");\n    require(spender != address(0), \"ERC20: approve to the zero address\");\n\n    // Update allowance\n    _allowances[msg.sender][spender] = _allowances[msg.sender][spender] - subtractedValue;\n\n    // Emit the Approval event with the new allowance\n    emit Approval(msg.sender, spender, _allowances[msg.sender][spender]);\n\n    return true;\n}",
    "ground_truth": "function decreaseAllowance(address spender, uint256 subtractedValue)\r\n        public\r\n        virtual\r\n        returns (bool)\r\n    {\r\n        _approve(\r\n            _msgSender(),\r\n            spender,\r\n            _allowances[_msgSender()][spender].sub(\r\n                subtractedValue,\r\n                \"ERC20: decreased allowance below zero\"\r\n            )\r\n        );\r\n        return true;\r\n    }"
}