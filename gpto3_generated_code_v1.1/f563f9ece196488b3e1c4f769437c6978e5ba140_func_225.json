{
    "contract_address": "0xf563f9eCe196488b3E1c4f769437C6978E5bA140",
    "heimdall_input": "function isExcludedFromFees(address arg0) public view returns (bool) {\n        require(arg0 == (address(arg0)));\n        address var_a = address(arg0);\n        var_b = 0x11;\n        address var_c = !(!bytes1(storage_map_b[var_a]));\n        return !(!bytes1(storage_map_b[var_a]));\n    }",
    "llm_output": "function isExcludedFromFees(address account) public view returns (bool) {\n    // Redundant, but kept to preserve original logic\n    require(account == address(account), \"\"); \n\n    // No-op placeholder to mirror decompiled artifact\n    uint256 _unused = 0x11;               \n\n    // Double negation preserved from decompiled code\n    bool exclusionFlag = !(!(_isExcludedFromFees[account]));\n    return exclusionFlag;\n}",
    "ground_truth": "function isExcludedFromFees(address account) public view returns (bool) {\r\n        return _isExcludedFromFees[account];\r\n    }"
}