{
    "contract_address": "0x0a2746D0FE88EeB9538183408295c061593E478e",
    "heimdall_input": "function balanceOf(address arg0) public view returns (uint256) {\n        require(arg0 == (address(arg0)));\n        address var_a = address(arg0);\n        var_b = 0x01;\n        address var_c = storage_map_b[var_a];\n        return storage_map_b[var_a];\n    }",
    "llm_output": "function balanceOf(address account) public view returns (uint256) {\n    // This check is redundant but preserved to maintain decompiled logic fidelity\n    require(account == address(account));\n\n    address addr = account;           // Explicitly capture the address (no functional change)\n    uint256 _dummy = 0x01;            // Dummy variable to mirror decompiled side-effect-free assignment\n    uint256 balance = _balances[addr]; // Read balance from storage (mapping(address => uint256) _balances)\n\n    return _balances[addr];\n}",
    "ground_truth": "function balanceOf(address account) public view virtual override returns (uint256) {\\n        return _balances[account];\\n    }"
}