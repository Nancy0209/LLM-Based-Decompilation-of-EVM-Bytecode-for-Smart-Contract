{
    "contract_address": "0x85188f89Ef6A5714818DefC0607727c9BE9f8949",
    "heimdall_input": "function manualswap() public view {\n        require(address(msg.sender) == (address(store_l / 0x01)));\n        require(address(msg.sender) == (address(store_m / 0x01)));\n        address var_a = address(this);\n        var_b = 0x02;\n        require(!(storage_map_h[var_a] > store_i), \"Amount must be less than total reflections\");\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_d = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        var_f = 0x2a;\n        var_g = 0x416d6f756e74206d757374206265206c657373207468616e20746f74616c2072;\n        var_h = 0x65666c656374696f6e7300000000000000000000000000000000000000000000;\n        uint256 var_e = 0x40 + var_e;\n        var_c = 0x1a;\n        var_i = 0x536166654d6174683a206469766973696f6e206279207a65726f000000000000;\n        require(0x038d7ea4c68000 > 0, \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        var_j = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        uint256 var_g = ((0x04 + var_e) + 0x20) - (0x04 + var_e);\n        uint256 var_h = var_e.length;\n        uint256 var_k = 0;\n        var_l = var_m;\n        var_k = 0;\n        if (0x038d7ea4c68000) {\n            var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n            var_n = 0x12;\n            if (!store_i < (store_i / 0x038d7ea4c68000)) {\n            }\n        }\n    }",
    "llm_output": "function manualswap() external nonpayable {\n    // Preserve original access-control logic\n    require(msg.sender == _taxWallet1, \"Not authorized\");\n    require(msg.sender == _taxWallet2, \"Not authorized\");\n\n    // Ensure the contract\u2019s reflected balance never exceeds the overall reflections\n    require(\n        _reflectedBalances[address(this)] <= _totalReflections,\n        \"Amount must be less than total reflections\"\n    );\n\n    // Dummy check kept to stay faithful to the decompiled control-flow\n    require(1_000_000_000_000_000 > 0, \"\");\n\n    if (1_000_000_000_000_000 > 0) {\n        // Placeholder branch (does nothing) \u2014 included to mirror the original logic\n        if (!(_totalReflections < _totalReflections / 1_000_000_000_000_000)) {\n            // no-op\n        }\n    }\n}",
    "ground_truth": "function manualswap() external {\r\n        require(_msgSender() == _developmentAddress || _msgSender() == _marketingAddress);\r\n        uint256 contractBalance = balanceOf(address(this));\r\n        swapTokensForEth(contractBalance);\r\n    }"
}