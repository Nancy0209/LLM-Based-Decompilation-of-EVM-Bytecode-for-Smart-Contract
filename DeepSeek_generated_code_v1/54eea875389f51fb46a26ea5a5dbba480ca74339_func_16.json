{
    "contract_address": "0x54eEA875389f51FB46A26Ea5a5DbBa480ca74339",
    "heimdall_input": "function transfer(address arg0, uint256 arg1) public {\n        require(arg0 == (address(arg0)));\n        require(address(msg.sender), \"ERC20: transfer amount exceeds balance\");\n        require(address(arg0), \"ERC20: transfer amount exceeds balance\");\n        require(0 - arg1, \"ERC20: transfer amount exceeds balance\");\n        require(address(owner) == (address(msg.sender)), \"ERC20: transfer amount exceeds balance\");\n        require(!(!(address(owner)) == (address(arg0))), \"ERC20: transfer amount exceeds balance\");\n        require(!(address(arg0)), \"ERC20: transfer amount exceeds balance\");\n        require(!(!0xdead == (address(arg0))), \"ERC20: transfer amount exceeds balance\");\n        require(!(!0xdead == (address(arg0))), \"ERC20: transfer amount exceeds balance\");\n        address var_a = address(this);\n        uint256 var_b = 0;\n        require(storage_map_b[var_a] < swapTokensAtAmount, \"ERC20: transfer amount exceeds balance\");\n        require(!(!storage_map_b[var_a] < swapTokensAtAmount), \"ERC20: transfer amount exceeds balance\");\n        require(!(!storage_map_b[var_a] < swapTokensAtAmount), \"ERC20: transfer amount exceeds balance\");\n        require(!(!storage_map_b[var_a] < swapTokensAtAmount), \"ERC20: transfer amount exceeds balance\");\n        require(!(!storage_map_b[var_a] < swapTokensAtAmount), \"ERC20: transfer amount exceeds balance\");\n        require(!(!storage_map_b[var_a] < swapTokensAtAmount), \"ERC20: transfer amount exceeds balance\");\n        var_a = address(msg.sender);\n        var_b = 0x1a;\n        require(bytes1(storage_map_b[var_a]), \"ERC20: transfer amount exceeds balance\");\n        require(!(bytes1(storage_map_b[var_a])), \"ERC20: transfer amount exceeds balance\");\n        require(!0, \"ERC20: transfer amount exceeds balance\");\n        var_a = address(arg0);\n        var_b = 0x1c;\n        require(!(bytes1(storage_map_b[var_a])), \"ERC20: transfer amount exceeds balance\");\n        require(!(sellTotalFees > 0), \"ERC20: transfer amount exceeds balance\");\n        require((sellTotalFees == ((sellTotalFees * arg1) / arg1)) | !arg1, \"ERC20: transfer amount exceeds balance\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x11;\n        require(0x64, \"ERC20: transfer amount exceeds balance\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x12;\n        var_a = address(msg.sender);\n        var_b = 0x1c;\n        require(!(bytes1(storage_map_b[var_a])), \"ERC20: transfer amount exceeds balance\");\n        require(!(buyTotalFees > 0), \"ERC20: transfer amount exceeds balance\");\n        require(!0, \"ERC20: transfer amount exceeds balance\");\n        require(address(msg.sender), \"ERC20: transfer amount exceeds balance\");\n        require(address(this), \"ERC20: transfer amount exceeds balance\");\n        var_a = address(msg.sender);\n        var_b = 0;\n        require(!(storage_map_b[var_a] < 0), \"ERC20: transfer amount exceeds balance\");\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = 0x20;\n        var_f = 0x26;\n        var_g = 0x45524332303a207472616e7366657220616d6f756e7420657863656564732062;\n        var_h = 0x616c616e63650000000000000000000000000000000000000000000000000000;\n        var_a = address(msg.sender);\n        var_b = 0;\n        storage_map_b[var_a] = storage_map_b[var_a] - 0;\n        var_a = address(this);\n        storage_map_b[var_a] = var_b + storage_map_b[var_a];\n        uint256 var_d = 0;\n        emit Transfer(address(msg.sender), address(this), 0);\n        require(!((arg1 - 0) > arg1), \"ERC20: transfer from the zero address\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x11;\n        require(address(msg.sender), \"ERC20: transfer from the zero address\");\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = 0x20;\n        var_f = 0x25;\n        var_g = 0x45524332303a207472616e736665722066726f6d20746865207a65726f206164;\n        var_h = 0x6472657373000000000000000000000000000000000000000000000000000000;\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = 0x20;\n        var_f = 0x23;\n        var_g = 0x45524332303a207472616e7366657220746f20746865207a65726f2061646472;\n        var_h = 0x6573730000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = 0x20;\n        var_f = 0x25;\n        var_g = 0x45524332303a207472616e736665722066726f6d20746865207a65726f206164;\n        var_h = 0x6472657373000000000000000000000000000000000000000000000000000000;\n        require(address(msg.sender), \"ERC20: transfer from the zero address\");\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = 0x20;\n        var_f = 0x25;\n        var_g = 0x45524332303a207472616e736665722066726f6d20746865207a65726f206164;\n        var_h = 0x6472657373000000000000000000000000000000000000000000000000000000;\n        require(!(!bytes1(uniswapV2Pair / 0x010000000000000000000000000000000000000000)), \"ERC20: transfer from the zero address\");\n        require(address(msg.sender), \"ERC20: transfer from the zero address\");\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = 0x20;\n        var_f = 0x25;\n        var_g = 0x45524332303a207472616e736665722066726f6d20746865207a65726f206164;\n        var_h = 0x6472657373000000000000000000000000000000000000000000000000000000;\n        var_a = address(arg0);\n        var_b = 0x1c;\n        require(!(bytes1(storage_map_b[var_a])), \"ERC20: transfer from the zero address\");\n        require(!(sellTotalFees > 0), \"ERC20: transfer from the zero address\");\n        var_a = address(msg.sender);\n        var_b = 0x1c;\n        require(!(bytes1(storage_map_b[var_a])), \"ERC20: transfer from the zero address\");\n        require(!(buyTotalFees > 0), \"ERC20: transfer from the zero address\");\n        require(!0, \"ERC20: transfer from the zero address\");\n        require(!((arg1 - 0) > arg1), \"ERC20: transfer from the zero address\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x11;\n        require(address(msg.sender), \"ERC20: transfer from the zero address\");\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = 0x20;\n        var_f = 0x25;\n        var_g = 0x45524332303a207472616e736665722066726f6d20746865207a65726f206164;\n        var_h = 0x6472657373000000000000000000000000000000000000000000000000000000;\n        uniswapV2Pair = 0x010000000000000000000000000000000000000000 | (uint248(uniswapV2Pair));\n        var_a = address(this);\n        var_b = 0;\n        if (!store_u > (store_v + store_u)) {\n            var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n            var_c = 0x11;\n            if (!tradingActive / 0x0100) {\n                if (!tradingActive / 0x0100) {\n                    if (!tradingActive / 0x0100) {\n                        if (!tradingActive / 0x0100) {\n                            if (!tradingActive / 0x0100) {\n                            }\n                        }\n                    }\n                }\n            }\n            require(!(store_u > (store_v + store_u)), \"ERC20: Sell transfer amount exceeds the maxTransactionAmount.\");\n            var_a = address(msg.sender);\n            var_b = 0x1c;\n            require(bytes1(tradingActive), \"ERC20: Sell transfer amount exceeds the maxTransactionAmount.\");\n            var_a = address(arg0);\n            var_b = 0x1b;\n            require(!(bytes1(storage_map_b[var_a])), \"ERC20: Sell transfer amount exceeds the maxTransactionAmount.\");\n            var_a = address(arg0);\n            var_b = 0x1c;\n            require(!(!bytes1(storage_map_b[var_a])), \"ERC20: Sell transfer amount exceeds the maxTransactionAmount.\");\n            var_a = address(msg.sender);\n            var_b = 0x1b;\n            require(!(bytes1(storage_map_b[var_a])), \"ERC20: Sell transfer amount exceeds the maxTransactionAmount.\");\n            var_a = address(arg0);\n            var_b = 0x1b;\n            require(!(!bytes1(storage_map_b[var_a])), \"ERC20: Sell transfer amount exceeds the maxTransactionAmount.\");\n        }\n        require(!(arg1 > maxTransactionAmount), \"ERC20: Sell transfer amount exceeds the maxTransactionAmount.\");\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = 0x20;\n        var_f = 0x3d;\n        var_g = 0x45524332303a2053656c6c207472616e7366657220616d6f756e742065786365;\n        var_h = 0x65647320746865206d61785472616e73616374696f6e416d6f756e742e000000;\n        if (!storage_map_b[var_a]) {\n        }\n        require(!(arg1 > maxTransactionAmount), \"ERC20: Buy transfer amount exceeds the maxTransactionAmount.\");\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = 0x20;\n        var_f = 0x3c;\n        var_g = 0x45524332303a20427579207472616e7366657220616d6f756e74206578636565;\n        var_h = 0x647320746865206d61785472616e73616374696f6e416d6f756e742e00000000;\n        if (!storage_map_b[var_a]) {\n        }\n        var_a = address(msg.sender);\n        var_b = 0x1a;\n        require(bytes1(storage_map_b[var_a]), \"ERC20: Trading is not active.\");\n        require(bytes1(storage_map_b[var_a]), \"ERC20: Trading is not active.\");\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = 0x20;\n        var_f = 0x1d;\n        var_g = 0x45524332303a2054726164696e67206973206e6f74206163746976652e000000;\n        if (!address(arg0)) {\n            if (!address(arg0)) {\n            }\n        }\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = 0x20;\n        var_f = 0x23;\n        var_g = 0x45524332303a207472616e7366657220746f20746865207a65726f2061646472;\n        var_h = 0x6573730000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_e = 0x20;\n        var_f = 0x25;\n        var_g = 0x45524332303a207472616e736665722066726f6d20746865207a65726f206164;\n        var_h = 0x6472657373000000000000000000000000000000000000000000000000000000;\n    }",
    "llm_output": "function transfer(address to, uint256 amount) public {\n    require(to == address(to));\n    require(msg.sender != address(0), \"ERC20: transfer amount exceeds balance\");\n    require(to != address(0), \"ERC20: transfer amount exceeds balance\");\n    require(amount != 0, \"ERC20: transfer amount exceeds balance\");\n    require(owner == msg.sender, \"ERC20: transfer amount exceeds balance\");\n    require(!(address(owner) == to), \"ERC20: transfer amount exceeds balance\");\n    require(!(to == address(0)), \"ERC20: transfer amount exceeds balance\");\n    require(!(0xdead != to), \"ERC20: transfer amount exceeds balance\");\n    require(!(0xdead != to), \"ERC20: transfer amount exceeds balance\");\n    address contractAddress = address(this);\n    if (_balances[contractAddress] < swapTokensAtAmount) {\n        revert('Decompiler artifact');\n    }\n    if (!(_balances[contractAddress] < swapTokensAtAmount)) {\n        revert('Decompiler artifact');\n    }\n    if (!(_balances[contractAddress] < swapTokensAtAmount)) {\n        revert('Decompiler artifact');\n    }\n    if (!(_balances[contractAddress] < swapTokensAtAmount)) {\n        revert('Decompiler artifact');\n    }\n    if (!(_balances[contractAddress] < swapTokensAtAmount)) {\n        revert('Decompiler artifact');\n    }\n    if (!(_balances[contractAddress] < swapTokensAtAmount)) {\n        revert('Decompiler artifact');\n    }\n    if (_flag0x1a[msg.sender]) {\n        revert('Decompiler artifact');\n    }\n    revert('Decompiler artifact');\n    if (_flag0x1c[to]) {\n        revert('Decompiler artifact');\n    }\n    if (sellTotalFees > 0) {\n        revert('Decompiler artifact');\n    }\n    if (!((sellTotalFees == ((sellTotalFees * amount) / amount)) || (amount == 0))) {\n        revert('Decompiler artifact');\n    }\n    revert('Decompiler artifact');\n    revert('Decompiler artifact');\n    if (_flag0x1c[msg.sender]) {\n        revert('Decompiler artifact');\n    }\n    if (buyTotalFees > 0) {\n        revert('Decompiler artifact');\n    }\n    revert('Decompiler artifact');\n    require(msg.sender != address(0), \"ERC20: transfer amount exceeds balance\");\n    require(address(this) != address(0), \"ERC20: transfer amount exceeds balance\");\n    if (_balances[msg.sender] < 0) {\n        revert('Decompiler artifact');\n    }\n    revert('Decompiler artifact');\n    _balances[msg.sender] = _balances[msg.sender] - 0;\n    _balances[address(this)] = _balances[address(this)] + 0;\n    emit Transfer(msg.sender, address(this), 0);\n    if ((amount - 0) > amount) {\n        revert('Decompiler artifact');\n    }\n    require(msg.sender != address(0), \"ERC20: transfer from the zero address\");\n    revert('Decompiler artifact');\n    revert('Decompiler artifact');\n    revert('Decompiler artifact');\n    require(msg.sender != address(0), \"ERC20: transfer from the zero address\");\n    revert('Decompiler artifact');\n    if (bytes1(uint8(uniswapV2Pair / 0x010000000000000000000000000000000000000000)) == 0) {\n        revert('Decompiler artifact');\n    }\n    require(msg.sender != address(0), \"ERC20: transfer from the zero address\");\n    revert('Decompiler artifact');\n    if (_flag0x1c[to]) {\n        revert('Decompiler artifact');\n    }\n    if (sellTotalFees > 0) {\n        revert('Decompiler artifact');\n    }\n    if (_flag0x1c[msg.sender]) {\n        revert('Decompiler artifact');\n    }\n    if (buyTotalFees > 0) {\n        revert('Decompiler artifact');\n    }\n    revert('Decompiler artifact');\n    if ((amount - 0) > amount) {\n        revert('Decompiler artifact');\n    }\n    require(msg.sender != address(0), \"ERC20: transfer from the zero address\");\n    revert('Decompiler artifact');\n    uniswapV2Pair = 0x010000000000000000000000000000000000000000 | (uint248(uniswapV2Pair));\n    if (true) {\n        if (tradingActive / 0x0100 == 0) {\n            if (tradingActive / 0x0100 == 0) {\n                if (tradingActive / 0x0100 == 0) {\n                    if (tradingActive / 0x0100 == 0) {\n                        if (tradingActive / 0x0100 == 0) {\n                        }\n                    }\n                }\n            }\n        }\n        if (true) {\n            revert('Decompiler artifact');\n        }\n        if (!_flag0x1a[msg.sender]) {\n            revert('Decompiler artifact');\n        }\n        if (_flag0x1b[to]) {\n            revert('Decompiler artifact');\n        }\n        if (!_flag0x1c[to]) {\n            revert('Decompiler artifact');\n        }\n        if (_flag0x1b[msg.sender]) {\n            revert('Decompiler artifact');\n        }\n        if (!_flag0x1b[to]) {\n            revert('Decompiler artifact');\n        }\n    }\n    if (amount > maxTransactionAmount) {\n        revert('Decompiler artifact');\n    }\n    revert('Decompiler artifact');\n    if (amount > maxTransactionAmount) {\n        revert('Decompiler artifact');\n    }\n    revert('Decompiler artifact');\n    if (!_flag0x1a[msg.sender]) {\n        revert('Decompiler artifact');\n    }\n    if (!_flag0x1a[msg.sender]) {\n        revert('Decompiler artifact');\n    }\n    revert('Decompiler artifact');\n    if (to == address(0)) {\n        if (to == address(0)) {\n        }\n    }\n    revert('Decompiler artifact');\n    revert('Decompiler artifact');\n}",
    "ground_truth": "function transfer(address to, uint256 amount)\r\n        public\r\n        virtual\r\n        override\r\n        returns (bool)\r\n    {\r\n        address owner = _msgSender();\r\n        _transfer(owner, to, amount);\r\n        return true;\r\n    }"
}