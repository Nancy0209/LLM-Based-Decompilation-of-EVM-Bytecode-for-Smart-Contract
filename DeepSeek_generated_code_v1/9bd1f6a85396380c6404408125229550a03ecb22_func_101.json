{
    "contract_address": "0x9BD1F6a85396380c6404408125229550a03Ecb22",
    "heimdall_input": "function transfer(address arg0, uint256 arg1) public {\n        require(arg0 == (address(arg0)));\n        require(address(msg.sender), \"SafeMath: multiplication overflow\");\n        require(address(arg0), \"SafeMath: multiplication overflow\");\n        require(arg1 > 0, \"SafeMath: multiplication overflow\");\n        require(address(owner) == (address(msg.sender)), \"SafeMath: multiplication overflow\");\n        require(!(!(address(owner)) == (address(arg0))), \"SafeMath: multiplication overflow\");\n        require(store_b > store_c, \"SafeMath: multiplication overflow\");\n        require(0 - arg1, \"SafeMath: multiplication overflow\");\n        require((store_d == ((store_d * arg1) / arg1)) | !arg1, \"SafeMath: multiplication overflow\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_b = 0x11;\n        require(arg1, \"SafeMath: multiplication overflow\");\n        require(((store_d * arg1) / arg1) == store_d, \"SafeMath: multiplication overflow\");\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x21;\n        var_f = 0x536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f;\n        var_g = 0x7700000000000000000000000000000000000000000000000000000000000000;\n        uint256 var_h = 0x40 + var_h;\n        var_c = 0x1a;\n        var_i = 0x536166654d6174683a206469766973696f6e206279207a65726f000000000000;\n        require(0x64, \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        var_j = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_f = 0x20;\n        uint256 var_g = var_h.length;\n        uint256 var_k = 0;\n        var_l = var_m;\n        var_k = 0;\n        require(0x64, \"_transfer:: Transfer Delay enabled. Only one purchase per block allowed.\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_b = 0x12;\n        require(!(bytes1(transferDelayEnabled)), \"_transfer:: Transfer Delay enabled.  Only one purchase per block allowed.\");\n        require(address(store_f) == (address(arg0)), \"_transfer:: Transfer Delay enabled. Only one purchase per block allowed.\");\n        require(!(!(address(store_g)) == (address(arg0))), \"_transfer:: Transfer Delay enabled. Only one purchase per block allowed.\");\n        address var_a = tx.origin;\n        var_n = 0x05;\n        require(block.number > storage_map_h[var_a], \"_transfer:: Transfer Delay enabled.  Only one purchase per block allowed.\");\n        var_j = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_f = 0x20;\n        var_g = 0x49;\n        var_l = 0x5f7472616e736665723a3a205472616e736665722044656c617920656e61626c;\n        var_o = 0x65642e20204f6e6c79206f6e652070757263686173652070657220626c6f636b;\n        var_p = 0x20616c6c6f7765642e0000000000000000000000000000000000000000000000;\n        var_a = tx.origin;\n        var_n = 0x05;\n        storage_map_h[var_a] = block.number;\n        require(!(address(store_g) == (address(msg.sender))), \"SafeMath: addition overflow\");\n        require(!(address(store_g) == (address(msg.sender))), \"SafeMath: addition overflow\");\n        require(!(address(store_g) == (address(msg.sender))), \"SafeMath: addition overflow\");\n        require(!(address(store_g) == (address(arg0))), \"SafeMath: addition overflow\");\n        require(!(address(store_g) == (address(arg0))), \"SafeMath: addition overflow\");\n        var_a = address(this);\n        var_n = 0x01;\n        require(!(!bytes1(store_g / 0x01000000000000000000000000000000000000000000)), \"SafeMath: addition overflow\");\n        require(!(!bytes1(store_g / 0x01000000000000000000000000000000000000000000)), \"SafeMath: addition overflow\");\n        require(!(!bytes1(store_g / 0x01000000000000000000000000000000000000000000)), \"SafeMath: addition overflow\");\n        require(!(!bytes1(store_g / 0x01000000000000000000000000000000000000000000)), \"SafeMath: addition overflow\");\n        require(!(!bytes1(store_g / 0x01000000000000000000000000000000000000000000)), \"SafeMath: addition overflow\");\n        require(!((store_d * arg1) / 0x64), \"SafeMath: addition overflow\");\n        var_a = address(this);\n        var_n = 0x01;\n        require(!(storage_map_h[var_a] > (((store_d * arg1) / 0x64) + storage_map_h[var_a])), \"SafeMath: addition overflow\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_b = 0x11;\n        require(!(((store_d * arg1) / 0x64) + storage_map_h[var_a] < storage_map_h[var_a]), \"SafeMath: addition overflow\");\n        var_j = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_f = 0x20;\n        var_g = 0x1b;\n        var_l = 0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000;\n        var_a = address(this);\n        var_n = 0x01;\n        storage_map_h[var_a] = ((store_d * arg1) / 0x64) + storage_map_h[var_a];\n        uint256 var_j = (store_d * arg1) / 0x64;\n        emit Transfer(address(msg.sender), address(this), (store_d * arg1) / 0x64);\n        var_a = address(msg.sender);\n        var_n = 0x01;\n        var_h = 0x40 + var_h;\n        var_j = 0x1e;\n        var_q = 0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000;\n        require(!(arg1 > storage_map_h[var_a]), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        require(!((storage_map_h[var_a] - arg1) > storage_map_h[var_a]), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_b = 0x11;\n        var_a = address(msg.sender);\n        var_n = 0x01;\n        storage_map_h[var_a] = storage_map_h[var_a] - arg1;\n        var_h = 0x40 + var_h;\n        var_r = 0x1e;\n        var_s = 0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000;\n        require(!(((store_d * arg1) / 0x64) > arg1), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n        var_t = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_p = 0x20;\n        uint256 var_u = var_h.length;\n        uint256 var_v = 0;\n        var_w = var_m;\n        var_v = 0;\n        if (!(arg1 - ((store_d * arg1) / 0x64)) > arg1) {\n            var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n            var_b = 0x11;\n            if (storage_map_h[var_a] > _maxTaxSwap) {\n            }\n            if (!store_b > store_j) {\n            }\n            if (!storage_map_h[var_a] > _taxSwapThreshold) {\n            }\n            if (!store_g / 0x0100000000000000000000000000000000000000000000) {\n            }\n            if (store_b > store_l) {\n                if (0 - arg1) {\n                }\n                require(!((arg1 - ((store_d * arg1) / 0x64)) > arg1), \"Exceeds the _maxTxAmount.\");\n            }\n            require(store_b > store_l, \"Exceeds the _maxTxAmount.\");\n        }\n        require(!(arg1 > _maxTxAmount), \"Exceeds the _maxTxAmount.\");\n        var_j = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_f = 0x20;\n        var_g = 0x19;\n        var_l = 0x4578636565647320746865205f6d61785478416d6f756e742e00000000000000;\n        if (address(store_f) == (address(arg0))) {\n            if (address(store_f) == (address(arg0))) {\n            }\n        }\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_b = 0x12;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x29;\n        var_f = 0x5472616e7366657220616d6f756e74206d757374206265206772656174657220;\n        var_g = 0x7468616e207a65726f0000000000000000000000000000000000000000000000;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x23;\n        var_f = 0x45524332303a207472616e7366657220746f20746865207a65726f2061646472;\n        var_g = 0x6573730000000000000000000000000000000000000000000000000000000000;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x25;\n        var_f = 0x45524332303a207472616e736665722066726f6d20746865207a65726f206164;\n        var_g = 0x6472657373000000000000000000000000000000000000000000000000000000;\n    }",
    "llm_output": "function transfer(address to, uint256 amount) public {\n    require(to == address(to));\n    require(msg.sender != address(0), \"SafeMath: multiplication overflow\");\n    require(to != address(0), \"SafeMath: multiplication overflow\");\n    require(amount > 0, \"SafeMath: multiplication overflow\");\n    require(owner == msg.sender, \"SafeMath: multiplication overflow\");\n    require(!(address(owner) != to), \"SafeMath: multiplication overflow\");\n    require(state_b > state_c, \"SafeMath: multiplication overflow\");\n    require(0 - amount != 0, \"SafeMath: multiplication overflow\");\n    require((taxRate == (taxRate * amount) / amount) || !amount, \"SafeMath: multiplication overflow\");\n    uint256 var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n    uint256 var_b = 0x11;\n    require(amount != 0, \"SafeMath: multiplication overflow\");\n    require(((taxRate * amount) / amount) == taxRate, \"SafeMath: multiplication overflow\");\n    uint256 var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n    uint256 var_d = 0x20;\n    uint256 var_e = 0x21;\n    uint256 var_f = 0x536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f;\n    uint256 var_g = 0x7700000000000000000000000000000000000000000000000000000000000000;\n    uint256 dataOffset = 0x40 + dataOffset;\n    var_c = 0x1a;\n    uint256 var_i = 0x536166654d6174683a206469766973696f6e206279207a65726f000000000000;\n    require(0x64 != 0, \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n    uint256 var_j = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n    var_f = 0x20;\n    uint256 length = dataOffset.length;\n    uint256 index = 0;\n    uint256 temp = var_m;\n    index = 0;\n    require(0x64 != 0, \"_transfer:: Transfer Delay enabled. Only one purchase per block allowed.\");\n    var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n    var_b = 0x12;\n    require(!transferDelayEnabled, \"_transfer:: Transfer Delay enabled.  Only one purchase per block allowed.\");\n    require(uniswapV2Pair == to, \"_transfer:: Transfer Delay enabled. Only one purchase per block allowed.\");\n    require(!(address(state_g) != to), \"_transfer:: Transfer Delay enabled. Only one purchase per block allowed.\");\n    address user = tx.origin;\n    uint256 userSlot = 0x05;\n    require(block.number > storage_map_h[user], \"_transfer:: Transfer Delay enabled.  Only one purchase per block allowed.\");\n    var_j = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n    var_f = 0x20;\n    var_g = 0x49;\n    uint256 var_l = 0x5f7472616e736665723a3a205472616e736665722044656c617920656e61626c;\n    uint256 var_o = 0x65642e20204f6e6c79206f6e652070757263686173652070657220626c6f636b;\n    uint256 var_p = 0x20616c6c6f7765642e0000000000000000000000000000000000000000000000;\n    user = tx.origin;\n    userSlot = 0x05;\n    storage_map_h[user] = block.number;\n    require(!(address(state_g) == msg.sender), \"SafeMath: addition overflow\");\n    require(!(address(state_g) == msg.sender), \"SafeMath: addition overflow\");\n    require(!(address(state_g) == msg.sender), \"SafeMath: addition overflow\");\n    require(!(address(state_g) == to), \"SafeMath: addition overflow\");\n    require(!(address(state_g) == to), \"SafeMath: addition overflow\");\n    address contractAddress = address(this);\n    uint256 contractSlot = 0x01;\n    require(!(state_g / 0x01000000000000000000000000000000000000000000 == 0), \"SafeMath: addition overflow\");\n    require(!(state_g / 0x01000000000000000000000000000000000000000000 == 0), \"SafeMath: addition overflow\");\n    require(!(state_g / 0x01000000000000000000000000000000000000000000 == 0), \"SafeMath: addition overflow\");\n    require(!(state_g / 0x01000000000000000000000000000000000000000000 == 0), \"SafeMath: addition overflow\");\n    require(!(state_g / 0x01000000000000000000000000000000000000000000 == 0), \"SafeMath: addition overflow\");\n    require(!(taxRate * amount) / 0x64 == 0, \"SafeMath: addition overflow\");\n    contractAddress = address(this);\n    contractSlot = 0x01;\n    require(!(storage_map_h[contractAddress] > ((taxRate * amount) / 0x64 + storage_map_h[contractAddress])), \"SafeMath: addition overflow\");\n    var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n    var_b = 0x11;\n    require(!(((taxRate * amount) / 0x64 + storage_map_h[contractAddress]) < storage_map_h[contractAddress]), \"SafeMath: addition overflow\");\n    var_j = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n    var_f = 0x20;\n    var_g = 0x1b;\n    var_l = 0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000;\n    contractAddress = address(this);\n    contractSlot = 0x01;\n    storage_map_h[contractAddress] = (taxRate * amount) / 0x64 + storage_map_h[contractAddress];\n    uint256 taxAmount = (taxRate * amount) / 0x64;\n    emit Transfer(msg.sender, address(this), taxAmount);\n    address sender = msg.sender;\n    uint256 senderSlot = 0x01;\n    dataOffset = 0x40 + dataOffset;\n    var_j = 0x1e;\n    uint256 var_q = 0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000;\n    require(!(amount > storage_map_h[sender]), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n    require(!(storage_map_h[sender] - amount > storage_map_h[sender]), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n    var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n    var_b = 0x11;\n    sender = msg.sender;\n    senderSlot = 0x01;\n    storage_map_h[sender] = storage_map_h[sender] - amount;\n    dataOffset = 0x40 + dataOffset;\n    uint256 var_r = 0x1e;\n    uint256 var_s = 0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000;\n    require(!(taxAmount > amount), \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\");\n    uint256 var_t = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n    uint256 var_p = 0x20;\n    uint256 dataLength = dataOffset.length;\n    uint256 counter = 0;\n    uint256 temp2 = var_m;\n    counter = 0;\n    if (!(amount - taxAmount > amount)) {\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_b = 0x11;\n        if (storage_map_h[var_a] > _maxTaxSwap) {\n        }\n        if (!state_b > state_j) {\n        }\n        if (!storage_map_h[var_a] > _taxSwapThreshold) {\n        }\n        if (!state_g / 0x0100000000000000000000000000000000000000000000) {\n        }\n        if (state_b > state_l) {\n            if (0 - amount != 0) {\n            }\n            require(!(amount - taxAmount > amount), \"Exceeds the _maxTxAmount.\");\n        }\n        require(state_b > state_l, \"Exceeds the _maxTxAmount.\");\n    }\n    require(!(amount > _maxTxAmount), \"Exceeds the _maxTxAmount.\");\n    var_j = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n    var_f = 0x20;\n    var_g = 0x19;\n    var_l = 0x4578636565647320746865205f6d61785478416d6f756e742e00000000000000;\n    if (uniswapV2Pair == to) {\n        if (uniswapV2Pair == to) {\n        }\n    }\n    var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n    var_b = 0x12;\n    var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n    var_d = 0x20;\n    var_e = 0x29;\n    var_f = 0x5472616e7366657220616d6f756e74206d757374206265206772656174657220;\n    var_g = 0x7468616e207a65726f0000000000000000000000000000000000000000000000;\n    var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n    var_d = 0x20;\n    var_e = 0x23;\n    var_f = 0x45524332303a207472616e7366657220746f20746865207a65726f2061646472;\n    var_g = 0x6573730000000000000000000000000000000000000000000000000000000000;\n    var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n    var_d = 0x20;\n    var_e = 0x25;\n    var_f = 0x45524332303a207472616e736665722066726f6d20746865207a65726f206164;\n    var_g = 0x6472657373000000000000000000000000000000000000000000000000000000;\n}",
    "ground_truth": "function transfer(address recipient, uint256 amount) public override returns (bool) {\\r\\n        _transfer(_msgSender(), recipient, amount);\\r\\n        return true;\\r\\n    }"
}