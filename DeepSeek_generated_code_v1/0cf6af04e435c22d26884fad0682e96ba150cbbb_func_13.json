{
    "contract_address": "0x0cF6AF04E435c22D26884FAd0682E96BA150CBBb",
    "heimdall_input": "function name() public view returns (string memory) {\n        if (store_c) {\n            if (store_c - ((store_c / 0x02) < 0x20)) {\n                var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                var_b = 0x22;\n                uint256 var_c = var_c + (0x20 + (((0x1f + (store_c / 0x02)) / 0x20) * 0x20));\n                uint256 var_d = store_c / 0x02;\n                if (store_c) {\n                    if (store_c - ((store_c / 0x02) < 0x20)) {\n                        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                        var_b = 0x22;\n                        if (!store_c / 0x02) {\n                            if (0x1f < (store_c / 0x02)) {\n                                var_a = 0x68;\n                                var_e = storage_map_d[var_a];\n                                if ((0x20 + var_c) + (store_c / 0x02) > (0x20 + (0x20 + var_c))) {\n                                    uint256 var_e = (var_c + 0x20) - var_c;\n                                    uint256 var_f = var_c.length;\n                                    uint256 var_g = 0;\n                                    return abi.encodePacked((var_c + 0x20) - var_c, var_c.length);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }",
    "llm_output": "function name() public view returns (string memory) {\n    uint256 errorSelector;\n    uint256 panicCode;\n    uint256 memPointer = 0;\n    uint256 halfLength;\n    uint256 storageValue;\n    uint256 stringLen;\n    uint256 offset;\n\n    if (stringLengthState != 0) {\n        uint256 condition = (stringLengthState / 2) < 32 ? 1 : 0;\n        if (stringLengthState - condition != 0) {\n            errorSelector = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n            panicCode = 0x22;\n            memPointer = memPointer + (32 + (((31 + (stringLengthState / 2)) / 32) * 32);\n            halfLength = stringLengthState / 2;\n            if (stringLengthState != 0) {\n                condition = (stringLengthState / 2) < 32 ? 1 : 0;\n                if (stringLengthState - condition != 0) {\n                    errorSelector = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                    panicCode = 0x22;\n                    if (halfLength == 0) {\n                        if (31 < halfLength) {\n                            errorSelector = 0x68;\n                            storageValue = stringStorage[errorSelector];\n                            if ((32 + memPointer) + halfLength > (32 + 32 + memPointer)) {\n                                revert('Decompiler artifact');\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n}",
    "ground_truth": "function name() public view virtual override returns (string memory) {\\r\\n        return _name;\\r\\n    }"
}